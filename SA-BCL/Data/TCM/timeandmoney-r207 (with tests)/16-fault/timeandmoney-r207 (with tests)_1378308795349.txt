#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 9 69 (52,59) (52,59) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 9 69 (52,59) (52,59) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 9 69 (52,59) (52,59) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 9 69 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 9 69 195 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 9 69 195 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 15 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 325 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 139 274 275 13 214 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 139 274 275 13 214 102 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 130 301 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 139 274 275 13 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 139 274 275 13 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 139 274 275 13 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 139 274 275 13 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 122 218 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
323 1 349 3 9 2 155 1 309 1 251 2 157 1 3 7 131 2 69 1 132 4 285 2 12 2 59 1 52 1 98 1 209 2 84 1 258 3 288 1 191 2 115 1 144 7 58 1 320 1 
323 1 349 3 9 2 155 1 309 1 251 2 157 1 3 7 131 2 69 1 132 4 285 2 12 2 59 1 52 1 98 1 209 2 84 1 258 3 288 1 191 2 115 1 144 7 58 1 320 1 
323 1 349 3 9 2 155 1 309 1 251 2 157 1 3 7 131 2 69 1 132 4 285 2 12 2 59 1 52 1 98 1 209 2 84 1 258 3 288 1 191 2 115 1 144 7 58 1 320 1 
309 1 197 1 131 2 3 7 285 2 132 4 59 1 84 1 288 1 115 1 320 1 323 1 9 2 349 3 155 1 251 2 157 1 69 1 12 2 52 1 98 1 209 2 258 4 191 2 213 1 144 7 58 1 
323 1 9 1 349 1 155 1 251 1 3 2 69 1 132 1 12 1 209 1 258 1 288 1 191 1 144 2 
9 1 180 1 251 1 197 1 157 1 34 1 241 1 3 2 131 1 12 1 258 1 288 1 191 1 213 1 115 1 144 2 
349 1 258 2 251 2 288 1 197 1 191 2 213 1 131 1 3 3 132 1 285 1 144 3 58 1 
323 1 9 1 349 3 155 1 309 1 251 2 149 1 3 7 131 1 69 1 132 5 285 2 12 1 209 1 84 1 258 3 288 1 191 2 195 1 144 7 58 1 
323 1 9 1 349 3 155 1 309 1 251 2 149 1 3 7 131 1 69 1 132 5 285 2 12 1 209 1 84 1 258 3 288 1 191 2 195 1 144 7 58 1 
73 1 242 1 72 1 
8 2 73 1 237 1 
313 1 230 2 54 2 40 2 345 2 29 2 266 1 57 2 
337 1 43 1 80 1 4 1 266 1 287 2 5 1 313 1 46 1 267 1 6 1 345 2 269 1 29 2 90 1 319 2 138 1 291 1 230 3 204 1 252 1 295 1 36 2 11 2 297 1 332 2 124 1 99 1 125 1 54 2 40 2 164 1 165 1 359 1 236 1 57 3 77 1 
313 1 230 1 141 1 271 1 54 1 40 1 345 1 190 1 29 1 57 1 
230 1 271 1 183 1 67 1 242 1 38 1 73 1 345 1 318 1 202 1 42 1 361 1 104 1 57 1 
230 1 271 1 183 1 67 2 242 1 73 1 40 1 54 1 345 1 318 1 202 1 29 1 361 2 104 1 57 1 
67 1 280 1 253 1 361 1 244 1 
73 1 67 2 47 1 253 1 242 1 361 2 110 1 244 1 
67 1 253 1 361 1 
141 1 230 1 271 1 67 1 330 1 244 1 313 1 40 1 54 1 345 1 190 1 29 1 361 1 57 1 
73 1 
73 1 67 2 47 1 253 1 242 1 361 2 244 1 357 1 
219 1 64 1 181 2 67 5 253 2 242 1 185 1 231 1 329 2 70 2 244 2 73 1 136 1 47 1 361 5 168 1 281 1 91 1 178 1 
266 1 72 1 
230 2 350 1 266 2 40 1 54 1 189 1 345 2 29 1 57 2 
292 1 343 1 360 1 
230 1 204 1 43 1 80 1 326 1 295 1 4 1 266 1 11 1 332 1 5 1 99 1 267 1 125 1 319 1 57 1 
204 1 230 2 43 1 80 1 295 1 4 1 11 1 5 1 332 1 99 1 125 1 142 1 267 1 54 1 210 1 345 1 29 1 360 1 319 1 57 2 
230 5 350 1 240 1 38 1 266 1 142 2 54 4 40 1 210 1 345 5 129 1 29 4 48 1 57 5 
230 2 271 1 54 2 294 1 345 2 190 1 29 2 57 2 
142 1 230 3 40 1 54 3 345 3 29 3 266 1 57 3 
230 1 271 1 54 1 345 1 190 1 29 1 57 1 
230 1 271 1 54 1 40 1 350 1 189 1 345 1 29 1 57 1 
43 1 80 1 4 1 266 1 287 1 5 1 313 1 46 1 267 1 6 1 345 3 269 1 318 1 202 1 29 3 90 1 319 1 138 1 204 1 230 4 271 1 350 1 183 1 252 1 67 1 295 1 36 2 11 1 297 1 332 1 99 1 125 1 142 1 302 1 40 2 54 3 210 1 164 1 359 1 361 1 104 1 77 1 145 1 57 4 
230 2 142 1 54 1 345 2 29 1 266 1 38 1 48 1 57 2 
230 3 271 1 350 1 183 1 67 1 73 1 142 2 40 1 54 3 302 1 210 1 345 3 318 1 202 1 29 3 361 1 63 1 104 1 57 3 
292 1 230 2 350 1 142 1 40 1 54 2 345 2 29 2 360 1 57 2 
230 1 204 1 43 1 80 1 295 1 4 1 266 1 11 1 332 1 5 1 99 1 267 1 125 1 319 1 57 1 
230 1 204 1 0 1 80 1 172 1 295 1 4 1 266 1 11 1 332 1 5 1 99 1 125 1 319 1 57 1 
1 1 310 1 265 1 287 4 22 1 23 1 46 1 343 2 6 1 90 1 139 1 292 2 252 2 36 2 158 1 206 1 255 1 297 1 97 1 164 1 165 2 359 1 360 2 334 1 
230 1 271 1 54 1 294 1 183 1 345 1 29 1 57 1 
79 1 135 1 
79 1 135 1 
152 1 21 1 
152 1 21 1 
152 1 21 1 
79 1 49 1 135 1 
79 1 49 1 135 1 
79 1 62 1 135 1 
31 1 79 2 21 1 109 1 135 2 60 1 152 1 
79 1 49 1 135 1 
79 1 306 1 135 1 
79 1 306 1 135 1 
79 1 306 1 135 1 
230 1 54 1 345 1 27 1 29 1 57 1 
107 1 338 1 79 1 135 1 243 1 60 1 313 1 314 1 26 1 27 1 345 1 29 1 230 1 141 1 271 1 351 1 67 1 10 1 330 1 40 1 54 1 211 1 190 1 55 1 304 1 361 1 57 1 
9 1 209 1 12 1 
9 1 241 1 12 1 
209 2 227 1 153 1 241 1 12 3 333 1 
209 1 227 1 153 1 241 1 12 2 363 1 
209 1 227 1 153 2 241 1 12 2 
237 1 263 1 310 1 242 1 244 4 199 1 137 1 47 1 247 1 139 1 249 1 8 2 181 1 67 5 35 1 253 1 274 1 185 2 70 1 329 1 231 1 358 1 73 2 126 1 192 2 361 5 76 1 168 1 234 1 262 1 
242 1 244 2 225 1 313 1 85 1 345 1 29 1 30 1 141 1 230 1 271 1 67 2 253 1 330 1 73 1 40 1 54 1 190 1 280 1 361 2 57 1 
237 1 263 1 310 1 242 1 244 2 313 1 199 1 137 1 345 1 29 1 91 1 139 1 8 2 230 1 141 1 271 1 181 1 67 3 35 1 274 1 185 2 330 1 70 1 329 1 73 2 54 1 40 1 190 1 192 1 76 1 361 3 168 1 234 1 57 1 262 1 
308 1 263 2 310 2 313 1 137 1 317 1 91 1 139 2 8 4 141 1 230 1 271 1 181 1 274 2 185 4 329 1 330 1 54 1 190 1 192 2 234 1 57 1 237 2 242 1 286 1 244 3 199 2 345 1 29 1 67 4 35 2 70 1 73 3 40 1 76 1 361 4 168 1 262 1 
307 1 80 1 72 1 
80 1 315 1 
175 1 
125 1 80 1 295 1 
80 1 352 1 
80 1 295 1 
307 2 125 1 80 3 295 1 7 1 18 1 
148 1 221 1 348 1 20 1 130 1 252 1 310 1 265 3 118 2 158 2 96 1 287 4 41 1 165 3 179 1 217 1 
148 1 221 1 348 1 20 1 130 1 252 1 310 1 265 3 118 2 158 2 96 1 287 4 41 1 165 3 179 1 217 1 
148 1 221 1 348 1 20 1 130 1 252 1 310 1 265 3 118 2 158 2 96 1 287 4 41 1 165 3 233 1 179 1 217 1 
348 1 15 1 118 1 165 1 287 1 96 2 
325 1 348 1 6 1 108 1 164 1 118 1 36 2 359 1 165 1 297 1 287 1 96 1 
170 1 197 1 2 1 241 1 3 2 131 1 132 1 5 1 114 1 24 1 25 1 288 1 87 1 176 1 319 1 9 1 251 1 119 1 11 1 356 1 12 2 332 1 99 1 209 1 258 1 191 1 213 1 144 2 105 1 333 1 
170 1 171 1 197 1 2 1 241 1 3 3 131 1 132 2 5 1 114 1 24 1 87 1 176 1 319 1 9 1 251 1 93 1 119 1 11 1 12 2 332 1 99 1 209 1 258 1 191 1 213 1 56 1 144 3 105 1 333 1 
9 1 171 1 197 1 241 1 119 1 2 1 3 2 131 1 132 2 11 1 12 2 5 1 332 1 99 1 114 1 24 1 209 1 258 1 87 1 213 1 56 1 144 2 319 1 105 1 333 1 
251 1 93 1 184 1 66 1 2 2 131 2 3 1 4 1 11 1 332 1 114 2 24 2 228 1 191 1 194 1 144 1 319 1 
170 1 9 1 171 1 251 1 241 1 119 1 2 1 131 1 3 1 11 1 12 2 356 1 5 1 332 1 99 1 114 1 24 1 209 1 87 1 288 1 176 1 191 1 144 1 319 1 105 1 333 1 
322 1 
238 1 222 1 80 2 4 2 312 1 5 3 198 1 86 1 47 1 319 2 181 1 67 2 295 2 253 2 11 2 185 1 332 2 70 1 329 1 231 1 186 1 99 2 125 1 16 1 162 1 260 1 361 2 168 1 262 1 
230 1 271 1 32 1 183 1 67 3 253 2 38 1 331 1 357 1 53 1 127 1 316 1 201 1 345 1 202 1 318 1 47 1 361 3 42 1 103 2 104 1 57 1 
230 1 271 1 32 1 183 1 67 3 253 1 242 1 160 1 38 1 331 1 357 1 73 1 127 1 316 1 201 1 345 1 202 1 318 1 47 1 361 3 42 1 103 3 104 1 57 1 
242 1 201 1 316 1 345 1 318 1 202 1 47 1 230 1 32 1 271 1 183 1 67 3 253 2 38 1 160 1 331 1 207 1 357 1 53 1 73 1 127 1 42 1 361 3 104 1 103 3 57 1 
264 2 45 1 316 1 318 1 47 3 230 1 271 1 181 1 183 1 95 1 185 1 331 1 276 1 231 1 329 1 53 4 103 6 104 1 57 1 336 1 237 2 239 1 242 5 201 1 345 1 202 1 203 1 28 2 32 1 67 5 253 7 38 1 160 4 70 1 207 4 357 1 73 5 127 1 361 5 42 1 168 1 167 1 166 2 305 2 
264 2 316 1 318 1 47 2 8 2 230 1 271 1 181 1 183 1 185 1 231 1 329 1 331 1 53 2 103 4 104 1 57 1 336 1 237 2 239 1 242 1 201 1 345 1 202 1 28 2 32 1 67 4 253 4 38 1 160 2 70 1 207 2 73 2 127 1 261 1 361 4 42 1 168 1 166 2 305 2 
237 2 336 1 264 2 239 1 242 1 201 1 316 1 345 1 318 1 202 1 47 2 28 2 230 1 32 1 271 1 181 1 183 1 67 4 253 4 160 2 38 1 95 1 185 1 70 1 331 1 276 1 231 1 329 1 207 2 53 2 73 1 127 1 42 1 361 4 166 2 167 1 168 1 305 2 104 1 103 4 57 1 
237 2 336 1 264 2 239 1 242 1 201 1 316 1 345 1 318 1 202 1 47 2 28 2 230 1 32 1 271 1 181 1 183 1 67 4 253 4 160 2 38 1 95 1 185 1 70 1 331 1 276 1 231 1 329 1 207 2 53 2 73 1 127 1 42 1 361 4 166 2 167 1 168 1 305 2 104 1 103 4 57 1 
239 1 242 1 133 2 201 1 316 1 345 1 318 1 202 1 47 2 8 2 230 1 32 1 271 1 181 1 183 1 182 1 67 4 253 4 160 2 38 1 355 1 185 1 70 1 331 1 231 1 329 1 207 2 53 2 73 1 127 1 42 1 361 4 166 2 167 1 168 1 305 2 215 1 362 2 104 1 103 4 57 1 
237 2 336 1 264 2 239 1 242 1 45 1 201 1 316 1 345 1 318 1 202 1 47 2 28 2 230 1 32 1 271 1 181 1 183 1 67 4 253 5 95 1 38 1 160 3 185 1 70 1 329 1 231 1 331 1 276 1 207 3 53 3 73 1 127 1 42 1 361 4 166 2 167 1 168 1 305 2 104 1 103 5 57 1 
237 2 336 1 264 2 239 1 242 1 45 1 201 1 316 1 345 1 318 1 202 1 47 2 28 2 230 1 32 1 271 1 181 1 183 1 67 4 253 5 95 1 38 1 160 3 185 1 70 1 329 1 231 1 331 1 276 1 207 3 53 3 73 1 127 1 42 1 361 4 166 2 167 1 168 1 305 2 104 1 103 5 57 1 
239 1 242 1 133 2 201 1 316 1 345 1 318 1 202 1 47 2 8 2 230 1 32 1 271 1 181 1 183 1 67 4 253 4 160 2 38 1 185 1 331 1 70 1 329 1 231 1 207 2 53 2 73 1 127 1 261 1 42 1 361 4 166 2 168 1 305 2 215 1 362 2 104 1 103 4 57 1 
292 1 148 1 20 1 130 1 252 1 310 1 118 1 265 2 158 2 36 2 266 1 206 1 287 3 297 1 72 1 343 1 46 1 41 1 6 1 164 1 360 1 165 2 359 1 90 1 179 1 
221 1 310 2 265 1 283 1 266 1 341 3 287 14 46 1 343 11 6 2 90 2 270 3 138 1 248 1 139 2 292 3 33 1 252 6 36 4 274 2 297 2 97 1 257 1 163 1 164 2 303 1 359 2 360 11 165 8 235 1 236 1 334 1 
43 1 80 1 4 1 266 1 5 1 287 2 267 1 200 1 46 1 6 1 345 1 29 1 90 1 319 1 138 1 292 1 204 1 230 2 65 1 326 1 252 1 295 1 36 2 11 1 332 1 297 1 257 1 99 1 125 1 142 1 188 1 54 1 210 1 164 1 359 1 165 1 57 2 236 1 
43 2 130 1 80 2 310 3 265 2 4 1 266 1 5 2 46 3 267 2 6 3 90 3 179 1 319 1 138 1 139 2 230 3 11 1 274 2 332 1 97 1 99 2 142 1 54 1 193 2 236 1 57 3 334 1 148 1 20 1 282 1 287 15 342 1 343 6 61 2 345 1 29 1 292 5 204 2 252 6 117 2 295 2 118 1 158 2 36 6 296 2 297 3 257 1 125 2 41 1 210 1 164 3 359 3 360 6 165 9 77 2 
220 1 337 2 196 1 171 1 80 3 4 2 5 2 287 2 46 2 25 1 151 1 6 2 345 1 29 1 90 2 290 1 319 8 138 1 230 1 252 1 295 2 36 4 11 8 206 1 332 7 297 2 186 1 39 1 99 2 299 1 142 1 54 1 162 1 164 2 359 2 165 1 19 1 57 1 236 1 
310 1 287 1 46 1 6 1 345 1 29 1 90 1 139 1 230 1 350 1 36 2 274 1 297 1 257 1 54 1 40 1 164 1 359 1 165 1 216 1 57 1 
292 1 221 1 310 1 265 1 36 2 206 1 255 1 287 2 297 1 343 1 46 1 6 1 164 1 360 1 359 1 165 2 90 1 139 1 
292 1 252 2 265 1 158 1 36 2 206 1 287 2 297 1 97 1 23 1 343 1 46 1 6 1 164 1 360 1 359 1 90 1 334 1 
292 1 310 1 36 2 274 1 206 1 287 2 297 1 343 1 46 1 6 1 164 1 360 1 359 1 165 2 90 1 139 1 
292 1 221 1 310 1 265 1 36 2 255 1 287 2 297 1 343 1 46 1 6 1 164 1 360 1 359 1 165 2 290 1 90 1 139 1 
292 1 252 2 265 1 158 1 36 2 287 2 297 1 97 1 23 1 343 1 46 1 6 1 164 1 360 1 359 1 290 1 90 1 334 1 
292 1 310 1 36 2 274 1 287 2 297 1 343 1 46 1 6 1 164 1 360 1 359 1 165 2 290 1 90 1 139 1 
292 1 310 1 36 2 274 1 297 1 287 2 343 1 46 1 6 1 164 1 360 1 359 1 165 2 90 1 139 1 
43 1 80 1 4 1 266 1 287 2 5 1 267 1 46 1 6 1 90 1 319 1 138 1 204 1 230 1 252 1 295 1 36 2 11 1 332 1 297 1 99 1 125 1 164 1 165 1 359 1 236 1 77 1 57 1 
0 1 80 1 172 1 4 1 266 1 287 2 5 1 46 1 6 1 90 1 319 1 138 1 204 1 230 1 252 1 295 1 36 2 11 1 332 1 297 1 123 1 99 1 125 1 164 1 165 1 359 1 236 1 57 1 
292 1 310 1 36 2 274 1 287 2 297 1 257 1 343 1 46 1 6 1 164 1 360 1 359 1 165 2 90 1 139 1 
43 1 80 1 310 1 287 2 5 1 343 1 267 1 46 1 25 1 6 1 90 1 319 1 139 1 292 1 204 1 230 1 295 1 36 2 296 1 11 1 274 1 332 1 297 1 99 1 125 1 164 1 360 1 165 2 359 1 77 1 57 1 
310 1 287 3 46 1 343 1 6 1 345 1 29 1 90 1 139 1 230 1 350 1 252 1 68 1 36 2 274 1 297 1 257 1 97 1 54 1 40 1 164 1 359 1 165 2 360 1 57 1 334 1 
335 1 221 5 108 1 310 7 265 5 341 4 287 30 226 1 245 1 6 2 177 1 270 4 229 1 139 7 140 1 293 1 252 9 36 4 274 7 275 1 13 1 297 2 97 1 187 1 161 2 163 2 164 2 303 2 214 1 359 2 165 21 102 1 235 2 146 1 334 1 
335 2 108 1 310 2 341 2 287 14 226 1 245 1 6 1 270 2 139 2 140 1 252 5 36 2 274 2 297 1 13 1 275 1 161 2 187 1 164 1 214 2 359 1 165 9 102 1 235 2 
335 1 221 5 108 1 310 7 265 5 341 4 287 34 113 1 226 1 245 1 6 2 177 1 270 4 139 7 140 1 293 1 252 12 36 4 274 7 275 1 13 1 297 2 97 2 187 1 161 3 163 2 164 2 303 2 214 1 359 2 165 22 102 1 235 2 146 1 334 2 
335 1 221 5 108 1 310 7 265 5 341 4 287 34 113 1 226 1 245 1 6 2 177 1 270 4 139 7 140 1 293 1 252 12 36 4 274 7 275 1 13 1 297 2 97 2 187 1 161 3 163 2 164 2 303 2 214 1 359 2 165 22 102 1 235 2 146 1 334 2 
335 1 148 1 221 4 20 1 130 1 108 1 310 7 265 5 341 4 287 28 226 1 245 1 6 1 179 1 270 4 139 6 140 1 252 7 118 1 158 1 36 2 274 6 275 1 13 1 297 1 187 1 161 2 41 1 163 2 164 1 303 2 214 1 359 1 165 21 102 1 235 2 
337 2 196 1 80 1 112 1 5 1 287 2 46 1 344 1 6 1 345 2 289 1 90 1 319 2 116 1 138 1 230 2 252 1 295 1 36 2 11 2 297 1 332 2 257 1 99 1 299 1 279 1 164 1 359 1 165 1 57 2 236 1 
170 1 9 1 171 1 241 1 2 1 11 2 12 2 5 1 332 2 83 1 99 1 14 1 209 1 25 1 87 1 319 2 106 1 105 1 333 1 
250 1 170 1 9 1 171 1 241 1 2 1 11 1 12 2 332 1 5 1 83 1 99 1 209 1 87 1 319 1 105 1 333 1 
278 1 184 1 2 1 4 1 11 1 319 1 332 1 106 1 
170 1 9 1 171 1 241 1 2 1 11 1 12 2 5 1 332 1 83 1 14 1 99 1 209 1 87 1 319 1 106 1 105 1 333 1 
156 1 
73 1 136 1 242 1 168 1 281 1 185 1 72 1 
237 1 336 1 264 1 242 1 28 1 47 1 8 1 181 1 67 1 253 1 185 1 70 1 329 1 231 1 73 2 361 1 168 1 
307 2 263 5 80 6 310 2 174 1 4 1 5 2 315 3 47 3 7 1 319 1 139 2 8 9 324 2 181 3 11 1 274 2 185 7 231 3 329 3 332 1 97 1 99 1 17 2 104 2 334 1 237 4 242 1 339 2 111 2 67 5 117 2 295 1 253 5 35 5 254 2 70 3 120 2 121 1 125 1 73 5 260 1 128 1 361 5 168 6 262 2 
237 2 263 3 310 2 341 1 245 1 270 1 139 2 8 4 140 1 181 1 35 3 274 2 185 4 13 1 70 1 329 1 231 1 275 1 187 1 73 2 168 2 235 1 
181 1 20 1 130 1 310 1 67 1 50 1 95 1 185 2 231 1 329 1 70 1 301 1 361 1 168 2 179 1 334 1 
181 1 242 1 185 1 231 1 329 1 70 1 136 1 73 1 281 1 168 1 
8 2 237 1 263 1 310 1 35 1 274 1 185 2 73 1 139 1 
73 1 67 1 47 1 253 1 242 1 361 1 
238 1 222 1 80 2 4 2 312 1 5 3 198 1 86 1 47 1 319 2 181 1 67 1 295 2 253 2 11 2 185 1 70 1 329 1 231 1 332 2 186 1 99 2 125 1 16 1 162 1 260 1 75 1 361 1 168 1 262 1 
43 1 80 1 4 1 266 1 287 1 5 1 313 1 267 1 46 1 6 1 345 2 269 1 29 2 90 1 319 1 138 1 230 3 204 1 252 1 295 1 36 2 11 1 297 1 332 1 99 1 125 1 54 2 40 2 164 1 359 1 57 3 77 1 
8 4 237 2 263 2 181 1 118 1 35 2 242 2 185 2 231 1 329 1 70 1 73 4 260 1 168 1 262 1 
338 1 273 1 10 1 
338 1 273 1 10 1 
338 1 327 1 101 1 311 1 10 1 
338 1 273 1 10 1 
338 1 10 1 347 1 
338 1 10 1 347 1 
338 1 10 1 347 1 
338 1 10 1 
79 1 135 1 
148 1 221 1 20 1 130 1 310 1 252 2 118 1 265 3 158 2 36 4 223 1 287 5 297 2 41 1 6 2 164 2 165 3 359 2 179 1 
148 1 20 1 130 1 252 1 310 1 265 2 118 1 158 2 287 3 72 1 41 1 165 2 179 1 
310 1 36 2 274 1 297 1 287 2 82 1 6 1 164 1 359 1 165 2 139 1 
221 2 252 2 310 2 265 2 274 2 341 2 287 8 163 1 303 1 165 6 235 1 270 2 139 2 
148 1 221 6 20 3 130 2 310 5 265 11 223 2 283 1 341 2 287 23 6 2 179 3 270 2 139 2 252 9 118 1 158 5 36 4 274 2 297 2 232 1 301 1 41 1 163 1 164 2 303 1 165 14 359 2 334 1 
252 1 287 1 270 1 
165 1 341 1 287 1 
221 1 117 1 252 1 310 1 265 1 274 1 287 4 165 3 139 1 
140 1 221 1 108 1 310 2 252 2 265 1 36 2 274 2 341 1 275 1 297 1 13 1 287 8 187 1 245 1 6 1 164 1 165 6 359 1 235 1 270 1 139 2 
130 1 310 1 165 1 287 1 
148 1 221 1 20 1 252 2 265 2 158 1 223 1 36 2 287 3 297 1 232 1 41 1 6 1 164 1 165 1 359 1 179 1 
221 2 20 1 108 1 130 1 252 3 310 2 265 4 36 2 158 2 297 1 287 7 301 1 6 1 164 1 359 1 165 4 179 1 334 1 
221 1 108 1 310 1 265 1 36 2 297 1 287 2 6 1 164 1 359 1 165 2 139 1 
221 1 108 1 252 2 310 1 265 1 36 2 274 1 297 1 287 4 97 1 6 1 164 1 359 1 165 2 334 1 139 1 
221 1 20 1 108 1 252 2 265 2 223 1 36 6 158 1 287 3 297 3 232 1 6 3 164 3 359 3 165 1 179 1 146 1 
148 1 221 5 20 2 130 2 108 1 310 6 265 8 223 2 284 1 341 4 287 31 82 1 6 5 246 1 179 2 270 4 139 4 252 14 118 1 353 1 158 3 36 10 274 4 297 5 97 3 232 1 41 1 163 1 164 5 303 1 359 5 165 17 235 1 146 1 334 3 
148 1 20 1 108 1 130 1 310 1 265 2 341 1 287 5 6 1 179 1 270 1 252 2 118 1 36 2 158 2 13 1 297 1 41 1 164 1 359 1 165 3 235 1 
221 2 108 1 310 4 265 2 341 2 287 18 82 1 245 1 6 2 270 2 139 4 140 1 252 7 36 4 274 4 275 1 13 1 297 2 97 2 187 1 163 1 164 2 303 1 359 2 165 11 235 1 334 2 
221 1 108 1 310 2 265 1 341 1 287 8 82 1 245 1 6 2 270 1 139 2 140 1 252 2 36 4 274 2 13 1 297 2 275 1 187 1 164 2 359 2 165 6 235 1 
140 1 108 1 310 2 252 2 36 2 274 2 341 1 275 1 297 1 13 1 287 8 187 1 245 1 6 1 164 1 165 6 359 1 235 1 270 1 139 2 
148 1 20 1 108 1 130 1 310 1 265 2 341 1 287 5 6 1 179 1 270 1 252 2 118 1 36 2 158 2 13 1 297 1 41 1 164 1 359 1 165 3 235 1 
140 1 221 1 108 1 310 2 252 2 265 1 36 2 274 2 341 1 275 1 297 1 13 1 287 8 187 1 245 1 6 1 164 1 165 6 359 1 235 1 270 1 139 2 
140 1 108 1 310 2 252 2 36 4 274 2 341 1 275 1 297 2 13 1 287 8 82 1 187 1 245 1 6 2 164 2 165 6 359 2 235 1 270 1 139 2 
221 1 108 1 310 2 265 1 341 1 287 10 245 1 6 2 270 1 139 2 140 1 252 4 36 4 274 2 13 1 297 2 275 1 97 1 187 1 164 2 359 2 165 6 235 1 334 1 146 1 
148 1 221 3 20 2 130 2 252 2 310 3 118 1 265 7 158 4 287 7 301 1 41 1 165 5 179 2 334 1 
140 1 108 1 310 2 252 2 36 4 274 2 341 1 275 1 297 2 13 1 287 8 187 1 245 1 6 2 164 2 165 6 359 2 235 1 270 1 139 2 146 1 
230 1 154 1 345 1 266 1 38 1 48 1 57 1 
230 1 154 1 266 1 224 1 38 1 340 1 150 1 143 1 212 1 345 1 48 1 57 1 
99 1 80 1 162 1 295 1 4 1 11 1 5 1 186 1 319 1 332 1 72 1 
204 1 230 2 43 1 80 1 295 1 4 1 266 1 11 1 5 1 332 1 99 1 125 1 142 1 54 1 345 1 29 1 319 1 57 2 
43 1 80 3 173 1 266 1 5 1 345 2 202 1 29 2 319 1 230 2 204 1 271 1 183 1 295 2 352 1 354 1 11 1 332 1 99 1 142 1 125 2 54 1 57 2 
80 3 172 1 173 1 266 1 5 1 345 2 202 1 29 2 319 2 230 2 204 1 271 1 183 1 295 2 352 1 354 1 11 2 328 1 332 2 99 1 142 1 125 2 54 1 57 2 
307 1 80 4 67 2 352 1 295 1 173 1 354 1 253 1 242 1 4 1 11 3 328 1 5 1 332 3 71 1 99 1 73 1 125 1 268 1 315 1 361 2 104 1 319 3 
307 1 80 4 67 2 352 1 295 1 173 1 354 1 253 1 242 1 4 1 11 3 339 1 328 1 5 1 332 3 99 1 73 1 125 1 315 1 361 2 104 1 319 3 
99 1 151 1 11 1 5 1 319 1 332 1 
80 1 295 1 4 1 312 1 11 1 81 1 332 1 5 2 99 1 125 1 86 1 7 1 319 1 
148 1 43 1 20 1 130 1 80 1 310 1 265 2 266 1 287 3 5 1 343 1 46 2 267 1 25 1 6 2 61 1 345 1 29 1 90 2 179 1 116 1 319 1 292 1 204 1 230 2 252 1 295 1 118 1 158 2 36 4 11 1 296 1 297 2 332 1 257 1 99 1 125 1 142 1 41 1 54 1 164 2 360 1 165 2 359 2 57 2 77 1 
307 1 80 2 242 1 4 1 339 1 244 1 136 1 315 1 47 1 319 1 324 1 181 2 67 3 253 2 11 1 185 1 332 1 70 2 329 2 231 2 120 1 73 1 75 1 361 3 17 1 168 1 281 1 104 1 
307 1 80 2 295 1 11 2 332 2 5 2 99 1 125 1 25 1 151 1 128 1 7 1 319 2 
321 1 80 1 295 1 4 1 11 4 328 1 5 1 332 4 186 1 99 1 25 1 162 1 319 4 
92 1 80 1 295 1 312 1 11 1 332 1 5 2 198 1 99 1 125 1 16 1 86 1 319 1 
99 1 9 1 87 1 241 1 4 1 11 1 12 1 5 1 319 1 332 1 
196 1 171 1 80 1 295 1 11 2 332 2 5 1 99 1 25 1 289 1 319 2 
321 1 196 1 80 3 295 2 354 1 4 1 11 5 186 1 332 4 5 2 39 1 99 2 25 1 162 1 19 1 319 5 
321 1 196 1 80 3 295 2 354 1 4 1 11 5 186 1 332 4 5 2 39 1 99 2 25 1 162 1 74 1 319 5 
204 1 230 2 80 1 172 1 295 1 4 1 266 1 11 1 5 1 332 1 99 1 125 1 142 1 54 1 345 1 29 1 319 1 57 2 
80 1 295 1 354 1 312 1 11 1 81 1 332 1 5 2 99 1 125 1 86 1 7 1 319 1 
100 1 344 1 346 2 122 1 
218 1 100 1 344 1 67 1 346 2 88 1 361 1 122 1 244 1 44 1 
100 1 344 1 346 1 122 1 
218 1 346 1 44 1 
258 1 197 1 213 1 72 1 
258 1 251 1 197 1 191 1 213 1 3 1 144 1 
114 1 131 1 3 1 
78 1 258 1 251 1 288 1 197 1 157 2 191 1 213 1 3 3 89 1 298 1 144 3 
258 1 155 1 251 1 197 1 191 1 213 1 3 2 132 1 144 2 
323 1 349 1 9 1 251 1 3 1 12 1 209 1 258 1 288 1 191 1 144 1 
258 1 251 1 288 1 197 1 191 1 3 1 144 1 
251 1 288 1 197 2 191 1 213 1 3 1 144 1 
208 1 258 1 251 2 288 1 259 1 197 1 191 2 51 1 3 2 144 2 
349 1 258 2 84 1 309 1 251 1 288 1 197 1 191 1 213 1 3 3 285 1 132 2 144 3 
169 1 9 1 251 1 197 1 241 1 3 2 132 1 12 2 209 1 258 1 288 1 191 1 213 1 144 2 333 1 
147 1 349 1 258 2 155 1 251 2 288 1 197 1 191 2 213 1 3 4 285 1 132 2 144 4 
258 1 251 1 288 1 197 1 191 1 213 1 3 1 144 1 
349 1 251 1 197 2 157 1 3 4 132 2 285 1 298 1 300 1 258 3 191 1 213 2 89 1 144 4 
251 1 197 1 149 1 3 2 37 1 132 1 258 1 277 1 288 1 191 1 213 1 144 2 
258 1 251 1 288 1 197 1 157 2 191 1 213 1 3 3 89 1 298 2 144 3 256 1 
258 2 272 2 94 1 134 1 
205 1 251 1 288 1 191 1 3 1 144 1 
258 1 309 1 251 1 288 1 197 1 191 1 213 1 3 2 132 1 144 2 
159 1 
258 1 251 1 288 1 197 1 191 1 213 1 3 1 144 1 
258 1 309 1 251 1 288 1 197 1 157 1 191 1 213 1 3 3 132 1 144 3 
300 1 349 1 258 1 285 1 
258 1 197 1 

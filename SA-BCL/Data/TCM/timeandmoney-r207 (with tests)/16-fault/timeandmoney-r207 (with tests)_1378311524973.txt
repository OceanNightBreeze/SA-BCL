#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (112,160) (112,160) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (112,160) (112,160) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (112,160) (112,160) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (112,160) (112,160) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 358 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 358 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 131 (116,288,298) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 366 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 220 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 311 188 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 317 350 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 317 181 347 265 324 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 317 181 347 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 317 181 347 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 317 181 347 265 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 317 181 347 265 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 311 (130,353) 94 141 (152,239) 286 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 311 (243,365) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 311 (130,353) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 311 (130,353) 94 141 (152,239) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 332 1 361 1 60 1 374 1 262 1 193 1 176 1 249 1 201 1 112 1 
160 1 332 1 361 1 60 1 374 1 262 1 193 1 176 1 249 1 201 1 112 1 
160 1 332 1 361 1 60 1 374 1 262 1 193 1 176 1 249 1 201 1 112 1 
160 1 332 1 361 1 60 1 374 1 262 1 193 1 176 1 249 1 201 1 112 1 
357 1 29 2 259 1 222 1 126 2 337 3 98 2 249 1 301 1 332 4 153 1 374 1 60 1 176 4 253 1 25 1 
29 1 259 1 222 1 30 1 361 1 43 1 249 1 226 1 201 1 216 1 290 1 332 2 374 1 60 1 176 2 296 1 
29 2 361 1 126 1 337 1 249 2 216 1 332 3 4 1 374 1 60 2 176 3 253 1 296 1 
257 1 357 1 29 4 259 1 358 1 222 1 212 1 361 1 126 4 337 7 98 2 301 1 249 2 332 9 304 1 153 1 4 1 374 1 60 2 176 9 25 1 253 3 
257 1 357 1 29 4 259 1 358 1 222 1 212 1 361 1 126 4 337 7 98 2 301 1 249 2 332 9 304 1 153 1 4 1 374 1 60 2 176 9 25 1 253 3 
192 1 315 1 220 1 
245 1 305 2 315 1 
92 2 124 1 127 2 194 2 206 1 207 2 109 2 330 2 
234 1 235 1 124 1 67 1 149 2 284 1 125 1 127 2 338 1 46 1 362 1 316 1 340 1 23 1 289 1 151 1 320 1 292 1 291 2 48 2 109 2 275 1 53 1 114 1 206 1 207 2 349 2 56 1 35 1 330 3 89 2 372 1 353 1 92 3 95 1 194 2 196 1 
92 1 124 1 127 1 309 1 237 1 194 1 207 1 109 1 190 1 330 1 
127 1 248 1 315 1 330 1 217 1 341 1 59 1 92 1 174 1 294 1 334 1 192 1 309 1 110 1 
127 1 248 1 315 1 207 1 330 1 59 2 92 1 174 1 294 2 334 1 192 1 309 1 194 1 109 1 110 1 
267 1 59 1 294 1 363 1 22 1 
267 1 119 1 59 2 294 2 363 1 192 1 315 1 146 1 
267 1 59 1 294 1 
124 1 127 1 237 1 207 1 190 1 330 1 59 1 77 1 363 1 294 1 92 1 309 1 194 1 109 1 
315 1 
118 1 267 1 119 1 59 2 294 2 363 1 192 1 315 1 
51 1 345 2 183 1 71 1 315 1 186 2 302 1 329 1 189 1 264 1 140 1 229 2 119 1 59 5 267 2 363 2 294 5 192 1 256 1 
206 1 220 1 
1 1 127 2 207 1 206 2 330 2 92 2 322 1 194 1 109 1 
168 1 164 1 36 1 
275 1 53 1 149 1 284 1 125 1 114 1 338 1 340 1 206 1 349 1 330 1 89 1 372 1 353 1 92 1 50 1 
52 1 127 5 224 1 207 4 206 1 371 2 330 5 341 1 92 5 322 1 354 1 194 4 109 1 343 1 
92 2 127 2 309 1 237 1 194 2 207 2 244 1 330 2 
92 3 127 3 194 3 206 1 207 3 109 1 371 1 330 3 
92 1 127 1 309 1 237 1 194 1 207 1 330 1 
1 1 92 1 322 1 127 1 309 1 194 1 207 1 109 1 330 1 
234 1 40 1 124 1 125 1 284 1 149 1 338 1 127 3 46 1 362 1 340 1 23 1 289 1 151 1 291 2 174 1 294 1 322 1 48 1 109 2 110 1 5 1 275 1 53 1 114 1 224 1 248 1 206 1 56 1 207 3 349 1 35 1 371 1 330 4 89 1 353 1 372 1 59 1 92 4 334 1 309 1 95 1 194 3 196 1 
341 1 52 1 92 2 127 2 194 1 206 1 207 1 371 1 330 2 
40 1 224 1 127 3 248 1 315 1 207 3 371 2 278 1 330 3 59 1 294 1 92 3 174 1 334 1 322 1 309 1 194 3 109 1 110 1 
168 1 127 2 207 2 371 1 330 2 92 2 322 1 36 1 194 2 109 1 
275 1 53 1 149 1 284 1 125 1 114 1 338 1 340 1 206 1 349 1 330 1 89 1 372 1 353 1 92 1 
275 1 365 1 53 1 149 1 284 1 125 1 114 1 338 1 340 1 206 1 349 1 330 1 89 1 92 1 61 1 
359 1 168 2 46 2 23 1 289 1 151 1 292 2 291 2 268 1 78 1 48 4 157 1 177 1 84 1 162 1 164 2 205 1 346 1 182 1 227 1 35 1 95 1 36 2 196 1 
92 1 127 1 309 1 194 1 207 1 110 1 244 1 330 1 
275 1 53 1 168 1 125 1 284 1 149 1 114 1 338 1 224 1 127 1 340 1 207 1 349 1 371 1 330 2 89 1 353 1 372 1 92 2 194 1 
11 1 116 1 
11 1 116 1 
131 1 298 1 
131 1 298 1 
131 1 298 1 
11 1 356 1 116 1 
11 1 356 1 116 1 
11 1 288 1 116 1 
11 1 131 1 298 1 116 1 
11 1 356 1 116 1 
11 1 17 1 116 1 
11 1 17 1 116 1 
11 1 17 1 116 1 
66 1 314 1 127 2 45 1 288 1 294 1 219 1 178 1 274 1 54 1 225 1 206 1 207 2 116 1 330 2 88 1 142 1 11 1 351 1 59 1 92 2 145 1 231 1 194 2 
178 2 282 2 314 2 315 1 9 1 45 3 171 1 116 2 11 2 142 2 59 2 294 2 306 1 145 2 133 1 219 1 297 1 336 1 159 1 
259 1 222 1 25 1 
259 1 222 1 30 1 
28 1 273 1 222 3 30 1 156 1 25 2 
273 1 222 2 30 1 156 1 62 1 25 1 
273 2 222 2 30 1 156 1 25 1 
281 1 315 2 103 1 203 2 267 1 294 5 363 4 269 1 107 2 177 1 84 1 245 1 274 1 325 1 205 1 345 1 54 1 183 3 186 1 369 1 227 1 189 1 10 1 88 1 140 2 229 1 305 3 279 2 119 1 59 5 308 1 192 1 
167 1 281 3 360 1 22 5 315 5 203 6 267 6 24 1 294 9 363 7 321 1 175 5 269 2 107 6 177 3 84 3 245 3 180 1 325 1 366 1 205 3 54 4 345 2 183 8 186 2 302 1 369 2 227 3 189 1 140 6 229 2 305 9 59 9 119 1 192 1 
281 1 124 1 127 1 237 1 315 3 203 2 77 1 363 2 294 3 269 1 107 2 177 1 109 1 84 1 245 2 345 1 54 1 205 1 183 3 186 1 207 1 302 1 369 1 190 1 227 1 330 1 10 1 140 2 229 1 279 1 305 4 59 3 92 1 308 1 192 1 309 1 194 1 
281 1 315 2 203 2 294 2 363 1 269 1 107 2 177 1 84 1 245 2 366 1 345 1 54 1 205 1 183 3 186 1 302 1 369 1 227 1 10 1 140 2 229 1 305 4 279 1 59 2 308 1 
311 1 220 1 
275 1 3 1 
233 1 
275 1 53 1 114 1 
275 1 55 1 
275 1 53 1 
161 1 275 1 53 1 311 1 114 1 188 1 
41 1 260 2 123 1 300 1 313 1 68 1 46 3 227 1 139 1 47 1 268 3 292 4 154 1 78 2 48 7 177 1 134 1 
41 1 260 2 123 1 300 1 313 1 68 1 46 3 227 1 139 1 47 1 268 3 292 4 154 1 78 2 48 7 177 1 134 1 
41 1 260 2 123 1 300 1 313 1 68 1 19 1 46 3 227 1 139 1 47 1 268 3 292 4 154 1 78 2 48 7 177 1 134 1 
281 3 41 2 211 1 260 3 123 1 313 1 68 1 42 1 213 3 169 1 46 15 23 1 47 2 289 1 291 2 292 16 268 10 154 1 78 5 323 1 48 31 177 4 134 5 84 3 27 4 6 1 276 1 300 2 205 3 139 2 370 1 227 4 95 1 196 1 
41 1 260 2 123 1 313 1 68 1 46 4 23 2 47 1 289 2 291 4 292 5 268 4 78 3 48 9 177 1 134 1 276 1 300 1 227 1 139 1 251 1 191 1 95 2 196 2 
259 1 283 1 122 1 149 1 361 1 284 1 337 1 21 1 338 1 287 1 215 1 216 1 266 1 176 2 271 1 25 1 296 1 29 1 28 1 222 2 30 1 138 1 249 1 32 1 349 1 332 2 89 1 60 1 374 1 375 1 
259 1 122 1 149 1 361 1 284 1 337 2 21 1 338 1 339 1 287 1 128 1 216 1 266 1 176 3 271 1 25 1 296 1 29 1 28 1 222 2 30 1 138 1 249 1 32 1 349 1 332 3 89 1 117 1 60 1 375 1 
259 1 361 1 149 1 284 1 337 2 21 1 338 1 287 1 128 1 216 1 266 1 176 2 25 1 296 1 29 1 28 1 222 2 30 1 138 1 32 1 349 1 332 2 89 1 117 1 375 1 
64 1 149 1 361 2 284 1 338 1 20 1 21 2 339 1 287 2 340 1 102 1 266 2 176 1 137 1 275 1 53 1 185 1 249 1 348 1 349 1 332 1 89 1 60 1 
28 1 259 1 222 2 122 1 30 1 284 1 361 1 149 1 138 1 338 1 21 1 32 1 249 1 287 1 349 1 215 1 128 1 332 1 89 1 266 1 374 1 60 1 271 1 176 1 25 1 375 1 
209 1 
149 2 284 1 2 1 338 1 340 2 102 1 341 1 294 3 49 1 110 1 111 1 53 1 345 1 248 1 349 2 350 1 119 1 59 3 165 1 309 1 255 1 127 1 317 1 319 1 76 1 75 1 217 1 267 2 174 1 79 1 83 1 137 1 275 1 183 2 186 1 369 1 189 1 330 1 140 2 229 1 89 2 92 1 334 1 93 2 195 1 
2 1 127 1 75 1 217 1 341 1 267 2 294 3 174 1 293 1 79 1 110 1 248 1 330 1 118 1 59 3 119 1 92 1 334 1 93 2 309 1 195 1 255 1 
2 1 127 1 315 1 75 1 217 1 341 1 267 1 294 3 174 1 79 1 218 1 110 1 248 1 330 1 118 1 59 3 119 1 92 1 334 1 93 3 192 1 309 1 195 1 255 1 
2 1 127 1 100 1 315 1 75 1 217 1 341 1 267 2 294 3 174 1 293 1 79 1 218 1 110 1 248 1 330 1 118 1 119 1 59 3 92 1 334 1 93 3 192 1 309 1 195 1 255 1 
2 1 127 1 100 2 317 1 319 1 75 1 217 1 341 1 265 1 267 3 294 3 174 1 293 2 79 1 110 1 111 1 179 1 324 1 181 1 345 1 183 1 347 1 248 1 186 1 189 1 330 1 140 1 229 1 118 1 119 1 59 3 165 1 92 1 334 1 93 2 309 1 195 1 255 1 
2 1 127 1 317 1 319 1 75 1 217 1 341 1 294 2 174 1 79 1 110 1 111 1 345 1 183 1 248 1 186 1 189 1 330 1 140 1 229 1 59 2 92 1 165 1 334 1 93 2 309 1 195 1 255 1 
2 1 127 1 317 1 319 1 75 1 217 1 341 1 294 2 174 1 79 1 110 1 111 1 179 1 181 1 345 1 183 1 248 1 347 1 186 1 189 1 330 1 140 1 229 1 59 2 165 1 92 1 334 1 93 2 309 1 195 1 255 1 
2 1 127 1 317 1 319 1 75 1 217 1 341 1 294 2 174 1 79 1 110 1 111 1 179 1 181 1 345 1 183 1 248 1 347 1 186 1 189 1 330 1 140 1 229 1 59 2 165 1 92 1 334 1 93 2 309 1 195 1 255 1 
2 1 127 1 248 1 330 1 75 1 172 1 217 1 341 1 59 2 173 1 174 1 294 2 92 1 79 1 334 1 93 2 309 1 195 1 110 1 255 1 
2 1 127 1 100 1 317 1 319 1 75 1 217 1 341 1 265 1 267 1 294 2 174 1 293 1 79 1 218 1 110 1 111 1 179 1 181 1 345 1 183 1 248 1 347 1 186 1 189 1 330 1 140 1 229 1 59 2 165 1 92 1 334 1 93 3 309 1 195 1 255 1 
2 1 127 1 100 1 317 1 319 1 75 1 217 1 341 1 265 1 267 1 294 2 174 1 293 1 79 1 218 1 110 1 111 1 179 1 181 1 345 1 183 1 248 1 347 1 186 1 189 1 330 1 140 1 229 1 59 2 165 1 92 1 334 1 93 3 309 1 195 1 255 1 
2 1 100 2 101 2 341 1 294 4 293 2 110 1 111 2 345 1 248 1 115 1 305 2 59 4 119 2 309 1 255 1 69 2 127 1 263 1 315 1 317 1 75 1 319 2 217 1 267 4 174 1 79 1 218 2 183 1 186 1 189 1 330 1 140 1 229 1 92 1 334 1 93 4 192 1 195 1 
260 1 123 1 168 1 313 1 68 1 46 3 23 1 289 1 151 1 291 2 268 2 292 3 78 2 48 6 157 1 177 1 220 1 300 1 164 1 206 2 35 1 139 1 227 1 36 1 95 1 196 1 
281 2 211 1 168 11 213 3 362 1 46 6 23 2 74 1 289 2 151 1 320 1 268 2 291 4 292 8 78 1 323 1 48 14 177 2 134 1 84 1 272 1 27 3 164 11 205 2 206 1 35 2 227 1 333 1 12 1 280 1 95 2 36 4 196 2 
0 1 125 1 284 1 149 1 338 1 127 1 340 1 362 1 46 1 170 1 23 1 74 1 151 1 289 1 320 1 291 2 292 1 242 1 48 2 50 1 275 1 53 1 114 1 224 1 206 1 349 1 207 1 35 1 371 1 330 2 89 1 353 1 372 1 92 2 36 1 95 1 194 1 196 1 
281 2 149 3 284 2 338 2 199 2 46 10 340 1 289 3 151 3 291 6 152 2 292 10 48 20 53 2 300 1 114 2 164 7 205 2 206 2 349 3 207 1 56 2 353 2 260 1 123 1 168 7 313 1 125 2 16 1 68 1 127 1 362 1 23 3 128 1 74 1 320 1 268 8 78 4 177 3 134 4 84 2 221 1 136 2 275 2 224 1 87 2 139 1 227 3 371 1 35 3 331 1 330 3 89 3 372 2 92 3 194 1 95 3 36 7 196 3 
283 1 148 1 284 2 149 7 67 2 18 1 127 1 338 2 340 2 362 1 46 1 23 2 128 1 102 1 289 2 151 2 320 1 291 4 292 1 48 2 157 1 275 3 137 1 53 2 344 1 207 1 349 8 371 1 35 2 303 1 330 1 89 8 230 1 92 1 307 1 194 1 95 2 310 1 196 2 
92 1 113 1 322 1 127 1 194 1 207 1 109 1 330 1 
168 1 164 1 205 1 182 1 35 1 23 1 151 1 289 1 268 1 291 2 292 2 48 2 157 1 36 1 95 1 177 1 134 1 196 1 
168 1 164 1 346 1 46 2 35 1 23 1 227 1 151 1 289 1 268 1 291 2 78 1 48 2 157 1 36 1 95 1 84 1 196 1 
281 1 168 2 46 2 23 1 289 1 151 1 292 2 291 2 268 2 78 1 48 4 157 1 177 1 134 1 84 1 205 1 164 2 35 1 227 1 95 1 36 2 196 1 
168 1 164 1 205 1 182 1 35 1 23 1 151 1 289 1 268 1 291 2 292 2 48 2 36 1 95 1 177 1 134 1 310 1 196 1 
168 1 164 1 346 1 46 2 35 1 23 1 227 1 151 1 289 1 268 1 291 2 78 1 48 2 36 1 95 1 310 1 84 1 196 1 
281 1 168 2 46 2 23 1 289 1 151 1 292 2 291 2 268 2 78 1 48 4 177 1 134 1 84 1 205 1 164 2 35 1 227 1 95 1 36 2 310 1 196 1 
281 1 168 2 46 2 23 1 289 1 151 1 292 2 291 2 268 2 78 1 48 4 177 1 134 1 84 1 205 1 164 2 35 1 227 1 95 1 36 2 196 1 
125 1 284 1 149 1 338 1 340 1 362 1 46 1 23 1 151 1 289 1 320 1 292 1 291 2 48 2 275 1 53 1 114 1 206 1 56 1 349 1 35 1 330 1 89 1 353 1 372 1 92 1 95 1 196 1 
125 1 284 1 149 1 338 1 340 1 362 1 46 1 202 1 23 1 151 1 289 1 320 1 292 1 291 2 48 2 275 1 53 1 365 1 114 1 206 1 349 1 35 1 330 1 89 1 92 1 61 1 95 1 196 1 
281 1 168 2 46 2 23 1 74 1 289 1 151 1 292 2 291 2 268 2 78 1 48 4 177 1 134 1 84 1 205 1 164 2 35 1 227 1 95 1 36 2 196 1 
281 1 283 1 168 2 125 1 284 1 149 1 338 1 46 2 23 1 151 1 289 1 268 2 292 2 291 2 78 1 48 4 177 1 134 1 84 1 275 1 53 1 164 2 205 1 114 1 56 1 87 1 349 1 227 1 35 1 330 1 89 1 353 1 372 1 92 1 36 2 95 1 196 1 
281 1 168 1 127 1 46 1 72 1 23 1 74 1 289 1 151 1 268 1 291 2 292 2 322 1 48 3 177 1 134 1 84 1 109 1 205 1 164 1 207 1 227 1 35 1 330 1 92 1 95 1 194 1 36 1 196 1 
281 2 147 1 211 1 312 1 213 1 150 1 46 7 23 2 289 2 291 4 292 6 268 3 78 2 323 1 48 13 177 2 134 1 84 2 27 2 7 1 205 2 57 1 227 2 91 1 373 1 191 1 121 1 95 2 196 2 
281 3 15 1 210 1 211 2 312 1 213 2 150 2 46 11 23 3 289 3 268 2 291 6 292 13 78 1 48 24 177 3 134 1 84 2 27 2 135 1 7 1 246 1 276 2 277 1 205 3 184 1 57 1 227 2 91 2 252 1 373 3 191 1 95 3 196 3 
281 2 147 1 15 1 211 1 312 1 213 1 150 1 46 7 23 2 289 2 291 4 292 6 268 2 78 1 323 1 48 13 177 2 134 1 84 2 27 2 7 1 205 2 57 1 227 2 91 1 373 1 191 1 95 2 196 2 
281 2 147 1 15 1 211 1 312 1 213 1 150 1 46 7 23 2 289 2 291 4 292 6 268 2 78 1 323 1 48 13 177 2 134 1 84 2 27 2 7 1 205 2 57 1 227 2 91 1 373 1 191 1 95 2 196 2 
281 7 15 1 260 1 210 1 211 2 123 1 312 1 313 1 68 1 213 4 150 1 46 24 23 2 289 2 291 4 292 26 268 13 78 6 323 2 48 50 177 8 134 7 84 7 135 1 27 4 7 1 246 1 276 1 300 1 277 1 205 7 184 1 57 1 139 1 227 8 91 1 252 1 373 3 191 1 280 2 95 2 196 2 
178 1 142 1 11 1 145 1 314 1 133 1 171 1 336 1 318 1 116 1 
231 1 288 1 
178 1 142 1 11 1 236 1 328 1 335 1 145 1 314 1 116 1 
96 1 356 1 
17 1 82 1 240 1 
178 1 282 1 314 1 315 1 9 1 45 2 171 1 116 1 11 1 142 1 59 1 294 1 145 1 133 1 219 1 297 1 336 1 159 1 
178 1 282 1 314 1 315 1 9 1 45 2 171 1 116 1 11 1 142 1 59 1 294 1 145 1 133 1 219 1 297 1 336 1 159 1 
178 1 282 1 314 1 315 1 9 1 45 2 171 1 116 1 11 1 142 1 59 1 294 1 145 1 133 1 219 1 297 1 336 1 159 1 
96 1 82 1 356 1 
96 1 82 1 356 1 
17 1 240 1 
17 1 82 1 240 1 
351 1 225 1 
14 1 282 1 66 1 314 1 127 2 45 1 288 1 294 1 363 1 159 1 178 1 274 1 54 1 225 1 206 1 207 2 330 2 116 1 88 1 142 1 11 1 351 1 59 1 92 2 145 1 231 1 194 2 
148 1 284 1 67 2 149 2 338 1 285 1 127 2 214 1 362 1 46 1 23 1 74 1 151 1 289 1 320 1 291 2 292 1 105 1 48 2 275 1 53 1 247 1 349 2 187 1 35 1 330 2 89 2 92 2 307 1 95 1 196 1 
39 1 28 1 259 1 222 2 283 1 122 1 30 1 284 1 149 2 138 1 338 1 21 1 349 2 33 1 128 1 89 2 132 1 25 1 375 1 
28 1 259 1 222 2 122 1 30 1 149 1 284 1 138 1 21 1 338 1 349 1 33 1 128 1 89 1 108 1 25 1 375 1 
39 1 275 1 137 1 53 1 284 1 149 1 338 1 21 1 198 1 340 1 348 1 349 1 102 1 89 1 
39 1 28 1 259 1 222 2 122 1 30 1 149 1 284 1 138 1 338 1 21 1 349 1 33 1 128 1 89 1 132 1 25 1 375 1 
44 1 
51 1 140 1 183 1 192 1 315 1 264 1 220 1 
140 1 229 1 165 1 345 1 183 1 186 1 189 1 
161 1 275 3 53 1 311 1 284 1 149 1 114 1 345 1 183 1 338 2 3 2 286 1 186 1 340 1 369 1 349 1 239 1 189 1 130 1 141 1 229 1 89 1 267 1 342 1 94 1 
38 1 281 2 210 1 211 1 213 1 315 5 203 5 267 1 104 1 294 1 107 5 83 1 177 2 84 2 27 1 135 1 245 3 277 1 345 2 205 2 183 8 184 1 186 2 369 1 250 2 189 2 227 2 140 5 229 2 305 6 59 1 119 1 252 1 120 1 192 2 
124 1 68 1 127 1 237 1 77 1 294 1 177 2 109 1 179 1 8 1 300 1 345 1 183 2 186 1 207 1 250 2 139 1 189 1 227 1 190 1 330 1 140 2 229 1 59 1 92 1 120 1 309 1 194 1 
51 1 345 1 183 1 186 1 315 1 189 1 264 1 140 1 229 1 192 1 
281 2 136 1 245 5 205 2 183 5 315 5 250 2 227 2 140 5 203 5 305 10 120 1 107 5 177 2 84 2 
59 1 267 1 119 1 294 1 192 1 315 1 
284 1 149 4 338 1 70 1 340 2 102 1 76 1 267 4 294 3 80 1 49 1 83 2 275 1 137 1 53 1 326 1 345 2 183 2 186 2 302 1 349 4 369 2 189 1 140 2 229 2 89 4 119 2 59 3 254 2 
234 1 124 1 149 1 284 1 125 1 127 2 338 1 46 1 362 1 340 1 23 1 289 1 151 1 291 2 48 1 109 2 275 1 53 1 114 1 206 1 349 1 207 2 56 1 35 1 330 3 89 1 372 1 353 1 92 3 194 2 95 1 196 1 
245 2 260 1 345 1 183 1 186 1 315 4 369 1 189 1 140 2 229 1 203 2 305 4 107 2 192 2 83 1 
178 1 142 1 208 1 
178 1 142 1 208 1 
178 1 142 1 225 1 158 1 336 1 
178 1 142 1 208 1 
178 1 142 1 31 1 
178 1 142 1 31 1 
178 1 142 1 31 1 
178 1 142 1 
11 1 116 1 
260 1 123 1 276 1 313 1 300 1 68 1 46 4 227 1 23 2 139 1 289 2 292 4 268 3 291 4 78 2 48 8 177 1 95 2 134 1 196 2 
260 1 123 1 313 1 300 1 68 1 46 3 139 1 227 1 268 2 292 3 78 2 48 6 177 1 220 1 
281 1 205 1 46 2 227 1 34 1 23 1 289 1 268 2 291 2 292 2 78 1 48 4 95 1 177 1 134 1 84 1 196 1 
27 2 281 1 211 1 205 1 213 1 46 4 227 1 292 3 268 2 78 1 323 1 48 7 177 1 134 1 84 1 
281 2 260 1 123 1 313 1 68 1 213 2 46 12 23 2 289 2 268 9 292 11 291 4 241 1 78 5 323 1 48 23 177 3 134 4 84 2 27 2 276 2 300 2 205 2 139 2 227 3 12 1 280 1 95 2 196 2 
27 1 48 1 46 1 
292 1 213 1 48 1 
281 1 136 1 205 1 46 3 23 1 34 1 227 1 289 1 291 2 292 3 268 3 78 2 48 6 95 1 177 1 134 1 84 1 196 1 
281 2 135 1 27 1 210 1 211 1 277 1 205 2 213 1 184 1 46 6 227 2 23 1 289 1 268 2 292 6 291 2 252 1 78 1 191 1 48 12 177 2 95 1 134 1 84 2 196 1 
268 2 292 3 78 1 300 1 68 1 48 6 46 3 177 1 134 1 139 1 227 1 
123 1 276 1 300 1 313 1 46 2 139 1 23 1 289 1 292 1 268 2 291 2 241 1 78 1 48 3 95 1 134 1 196 1 
8 1 300 2 68 1 46 5 23 1 139 2 227 2 289 1 291 2 268 5 292 5 78 3 191 1 48 10 95 1 177 2 134 2 196 1 
205 1 23 1 289 1 291 2 292 2 268 1 191 1 48 2 95 1 177 1 134 1 196 1 
281 1 205 1 46 2 227 1 23 1 289 1 268 2 291 2 292 2 78 1 191 1 48 4 95 1 177 1 134 1 84 1 196 1 
147 1 276 1 300 1 46 2 23 3 139 1 289 3 291 6 268 2 292 1 241 1 78 1 191 1 48 3 95 3 134 1 196 3 
281 3 147 1 260 1 211 1 123 1 313 1 68 2 169 1 213 3 46 18 23 5 289 5 291 10 292 16 268 12 241 1 78 7 323 1 48 34 177 5 134 5 84 3 27 4 6 1 276 2 300 3 205 3 139 3 370 1 34 1 227 5 191 1 95 5 196 5 
260 1 211 1 123 1 313 1 68 1 213 1 46 4 23 1 289 1 291 2 292 4 268 2 78 2 48 8 177 1 27 1 277 1 300 1 227 1 139 1 191 1 95 1 196 1 
281 1 260 1 211 1 123 1 313 1 68 1 213 1 46 5 23 2 289 2 291 4 292 6 268 3 78 2 323 1 48 11 177 2 134 1 27 2 300 1 277 1 205 1 227 1 139 1 34 1 191 1 95 2 196 2 
281 2 260 1 210 1 211 1 123 1 313 1 68 1 213 1 46 10 23 3 289 3 291 6 292 9 268 4 78 3 48 19 177 3 134 1 84 2 27 1 135 1 276 1 300 1 277 1 205 2 184 1 139 1 34 1 227 3 252 1 191 1 95 3 196 3 
281 2 260 1 211 1 210 1 123 1 313 1 68 1 213 1 46 7 23 3 289 3 291 6 292 10 268 5 78 3 48 17 177 3 134 2 84 1 27 1 135 1 276 1 300 1 277 1 205 2 184 1 139 1 34 1 227 2 252 1 191 1 95 3 196 3 
260 1 211 1 123 1 313 1 68 1 213 1 46 4 23 1 289 1 291 2 292 4 268 2 78 2 48 8 177 1 27 1 277 1 300 1 227 1 139 1 191 1 95 1 196 1 
281 2 135 1 27 1 210 1 211 1 277 1 205 2 213 1 184 1 46 6 227 2 23 1 289 1 268 2 292 6 291 2 252 1 78 1 191 1 48 12 177 2 95 1 134 1 84 2 196 1 
281 2 260 1 210 1 211 1 123 1 313 1 68 1 213 1 46 8 23 4 289 4 291 8 292 10 268 5 78 3 48 18 177 3 134 2 84 1 27 1 135 1 276 2 300 1 277 1 205 2 184 1 139 1 34 1 227 2 252 1 191 1 95 4 196 4 
281 3 147 1 210 1 211 1 213 1 46 7 23 4 289 4 291 8 292 9 268 6 78 3 48 16 177 3 134 3 84 2 27 1 135 1 276 2 277 1 205 3 184 1 227 2 252 1 191 1 95 4 196 4 
123 2 313 1 300 3 68 1 46 4 227 1 139 3 268 6 292 3 78 3 48 7 177 1 134 3 
281 2 147 1 260 1 210 1 211 1 123 1 313 1 68 1 213 1 46 8 23 4 289 4 291 8 292 10 268 4 78 3 48 18 177 3 134 1 84 1 27 1 135 1 276 2 300 1 277 1 205 2 184 1 139 1 227 2 252 1 191 1 95 4 196 4 
341 1 52 1 92 1 127 1 206 1 330 1 26 1 
143 1 155 1 364 1 13 1 99 1 
89 1 275 1 137 1 53 1 284 1 149 1 338 1 340 1 349 1 102 1 220 1 
275 1 53 1 125 1 149 1 284 1 114 1 338 1 127 1 340 1 206 1 207 1 349 1 371 1 330 2 89 1 353 1 92 2 194 1 
284 1 149 1 125 1 127 2 338 1 174 1 81 1 110 1 275 3 53 2 114 2 55 1 206 1 349 1 207 1 371 1 330 2 89 1 353 1 92 2 309 1 194 2 254 1 
284 1 149 2 125 1 127 2 338 1 174 1 81 1 110 1 275 3 365 1 53 2 114 2 55 1 206 1 349 2 207 1 371 1 330 2 89 2 92 2 309 1 194 2 232 1 254 1 
89 1 267 1 275 1 59 1 311 1 294 1 243 1 149 1 3 1 349 1 254 1 
130 1 89 1 267 1 275 1 59 1 311 1 294 1 149 1 3 1 349 1 254 1 
89 1 284 1 149 1 344 1 338 1 349 1 
161 1 63 1 261 1 275 3 283 1 53 2 67 1 344 1 149 6 284 2 114 1 18 1 338 3 340 2 349 7 128 1 303 1 129 1 89 7 230 1 307 1 
283 1 149 1 284 1 338 1 46 3 289 2 151 2 152 1 291 4 292 3 48 6 53 1 300 1 247 1 114 1 164 1 56 1 349 1 207 1 206 2 353 1 260 1 123 1 168 1 125 1 313 1 68 1 127 1 23 2 74 1 268 2 78 2 177 1 275 1 87 1 371 1 35 2 139 1 227 1 330 2 89 1 372 1 92 2 36 1 194 1 95 2 196 2 
275 1 311 1 149 1 345 1 70 1 3 1 186 1 340 1 349 1 239 1 189 1 130 1 141 1 229 1 89 1 267 1 59 1 363 1 294 1 94 1 
161 1 89 1 275 1 53 1 311 1 284 1 342 1 149 1 344 1 114 1 338 2 349 1 
137 1 275 1 283 1 53 1 149 4 284 1 223 1 338 1 340 1 349 4 102 1 89 4 232 1 
63 1 275 1 53 1 149 2 284 1 16 1 114 1 338 2 349 2 129 1 228 1 89 2 254 1 166 1 
89 1 259 1 222 1 30 1 284 1 149 1 338 1 340 1 375 1 349 1 
275 1 283 1 53 1 149 2 284 1 285 1 338 1 349 2 128 1 89 2 307 1 
137 1 275 3 283 1 53 2 149 4 284 2 223 1 18 1 338 2 340 1 349 5 102 1 303 1 89 5 307 1 254 1 
204 1 137 1 275 3 283 1 53 2 149 4 284 2 223 1 338 2 340 1 349 5 102 1 303 1 89 5 307 1 254 1 
275 1 53 1 365 1 125 1 149 1 284 1 114 1 338 1 127 1 340 1 206 1 207 1 349 1 371 1 330 2 89 1 92 2 194 1 
161 1 63 1 261 1 275 1 53 1 149 1 284 1 114 1 338 2 349 1 129 1 89 1 254 1 
163 1 92 1 105 1 127 1 295 1 214 1 187 1 73 1 330 1 
40 1 163 1 174 1 65 1 334 1 295 1 197 1 248 1 309 1 200 1 73 1 110 1 
163 1 295 1 200 1 206 1 73 1 
40 1 163 2 65 1 197 1 248 1 200 2 315 1 206 1 73 1 352 1 59 2 174 1 363 1 294 2 334 1 192 1 295 2 309 1 110 1 
216 1 29 1 296 1 220 1 
216 1 332 1 29 1 60 1 176 1 249 1 296 1 
332 1 266 1 361 1 
216 1 290 2 332 3 29 1 90 1 86 1 60 1 374 1 367 1 176 3 249 1 296 1 
216 1 332 2 29 1 60 1 337 1 98 1 176 2 249 1 296 1 
29 1 259 1 222 1 126 1 249 1 301 1 332 1 374 1 60 1 176 1 25 1 
332 1 29 1 60 1 374 1 176 1 249 1 296 1 
216 1 332 1 60 1 374 1 176 1 249 1 296 2 
258 1 332 2 29 1 144 1 60 2 374 1 176 2 249 2 296 1 85 1 
257 1 29 2 212 1 126 1 337 2 249 1 216 1 332 3 374 1 60 1 176 3 253 1 296 1 
29 1 28 1 259 1 222 2 30 1 337 1 249 1 216 1 332 2 374 1 60 1 106 1 176 2 25 1 296 1 
29 2 126 1 337 2 98 1 249 2 216 1 332 4 153 1 374 1 60 2 176 4 253 1 296 1 
216 1 332 1 29 1 60 1 374 1 176 1 249 1 296 1 
29 3 97 1 126 1 367 1 337 2 249 1 216 2 290 1 332 4 90 1 60 1 176 4 253 1 296 2 
216 1 332 2 29 1 304 1 327 1 60 1 374 1 337 1 355 1 176 2 249 1 296 1 
216 1 290 2 332 3 29 1 90 1 60 1 374 1 367 2 176 3 249 1 296 1 37 1 
29 2 58 1 299 2 238 1 
332 1 270 1 60 1 374 1 176 1 249 1 
216 1 257 1 332 2 29 1 60 1 374 1 337 1 176 2 249 1 296 1 
368 1 
216 1 332 1 29 1 60 1 374 1 176 1 249 1 296 1 
257 1 216 1 290 1 332 3 29 1 60 1 374 1 337 1 176 3 249 1 296 1 
29 1 97 1 126 1 253 1 
29 1 296 1 

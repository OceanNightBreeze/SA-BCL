#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (118,301,343) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (118,301,343) 286 225 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (118,301,343) 286 314 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 158 (68,130,321) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 77 (19,202,217) (7,316,326) (7,316,326) (7,316,326) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (118,301,343) (118,301,343) 187 280 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 108 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 284 236 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 284 236 244 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 284 236 244 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 284 236 244 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 77 (19,202,217) (19,202,217) (19,202,217) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 349 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 108 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 18 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (118,301,343) 286 84 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
157 1 85 2 159 1 262 6 44 1 21 3 164 1 298 4 330 1 116 1 143 2 306 1 337 2 309 1 230 1 13 9 126 2 205 2 340 1 313 1 77 2 127 1 206 1 208 1 256 9 106 1 346 2 259 1 
85 2 157 1 159 1 262 6 44 1 21 3 164 1 298 4 330 1 116 1 143 2 306 1 337 2 309 1 230 1 13 9 126 2 205 2 340 1 313 1 77 2 127 1 206 1 208 1 256 9 106 1 346 2 259 1 
85 2 157 1 159 1 262 7 44 1 21 4 164 1 298 5 330 1 116 1 143 2 306 1 337 2 309 1 230 1 13 10 126 2 205 2 340 1 313 1 77 2 127 1 206 1 208 1 256 10 106 1 346 2 259 1 
85 2 157 1 159 1 262 4 44 1 21 2 164 1 298 3 330 1 116 1 143 2 306 1 337 2 309 1 13 7 126 2 205 1 340 1 313 1 77 2 127 1 206 1 208 1 256 7 106 1 346 2 259 1 
85 1 337 1 230 1 262 3 44 1 21 1 126 1 13 4 205 2 340 1 77 1 313 1 127 1 164 1 298 2 330 1 256 4 346 1 
337 1 44 1 126 1 13 2 340 1 313 1 77 1 102 1 206 1 330 1 256 2 332 1 346 1 259 1 143 1 123 1 
337 2 309 1 262 1 44 1 21 1 126 2 13 3 340 1 313 1 298 1 330 1 256 3 143 1 
85 1 89 1 262 7 44 1 21 3 267 1 164 1 298 4 330 1 143 1 306 1 309 1 337 2 230 1 13 9 126 2 205 2 340 1 313 1 77 1 127 1 208 1 256 9 346 1 
85 1 89 1 262 7 44 1 21 3 267 1 164 1 298 4 330 1 143 1 306 1 309 1 337 2 230 1 13 9 126 2 205 2 340 1 313 1 77 1 127 1 208 1 256 9 346 1 
317 1 71 1 108 1 
189 1 317 1 190 2 
100 2 253 1 75 2 152 2 135 2 319 2 30 2 168 1 
348 2 111 1 135 2 41 1 92 1 266 2 165 1 300 1 49 1 72 1 304 1 196 1 30 2 168 1 197 1 333 1 121 2 170 2 307 1 75 3 74 1 277 1 172 1 200 1 231 1 339 1 342 1 287 1 315 2 100 3 129 1 253 1 152 2 207 1 105 1 319 2 320 1 184 1 185 1 
336 1 100 1 75 1 152 1 135 1 319 1 72 1 30 1 168 1 341 1 
100 1 75 1 343 1 167 1 301 1 30 1 
100 1 75 1 152 1 135 1 301 1 319 1 30 1 
178 1 131 1 118 1 76 1 352 1 
147 1 70 1 131 2 317 1 71 1 118 2 76 1 352 1 
131 1 118 1 352 1 
336 1 75 1 135 1 241 1 76 1 341 1 100 1 152 1 131 1 319 1 118 1 72 1 168 1 30 1 
317 1 
147 1 344 1 131 2 317 1 71 1 118 2 76 1 352 1 
147 1 87 2 249 1 201 2 76 2 219 1 128 1 59 2 131 5 317 1 318 1 180 1 71 1 27 1 272 1 227 1 118 5 215 1 352 2 
253 1 108 1 
75 2 135 1 100 2 23 1 152 1 253 2 80 1 319 1 30 2 
299 1 32 1 232 1 
75 1 348 1 111 1 277 1 172 1 41 1 136 1 266 1 287 1 100 1 129 1 253 1 207 1 300 1 105 1 49 1 72 1 121 1 
75 2 348 1 111 1 172 1 135 1 41 1 266 1 287 1 100 2 129 1 299 1 16 1 207 1 105 1 300 1 319 1 49 1 30 1 121 1 109 1 
100 3 152 1 253 1 75 3 135 3 319 3 30 3 109 1 
336 1 100 1 75 1 135 1 319 1 72 1 30 1 
100 1 75 1 152 1 23 1 80 1 135 1 319 1 72 1 30 1 
100 2 225 1 152 1 23 1 75 2 135 2 16 1 301 1 319 2 30 2 286 1 109 1 
100 2 253 1 75 2 135 1 167 1 319 1 243 1 30 2 109 1 
314 1 100 1 75 1 135 1 16 1 301 1 319 1 30 1 286 1 109 1 
75 2 135 2 232 1 100 2 23 1 152 1 299 1 319 2 30 2 109 1 
75 1 348 1 111 1 277 1 172 1 41 1 266 1 287 1 100 1 129 1 253 1 207 1 300 1 105 1 49 1 72 1 121 1 
75 1 348 1 111 1 277 1 172 1 41 1 265 1 266 1 287 1 100 1 253 1 58 1 207 1 105 1 49 1 72 1 121 1 
63 1 138 1 113 1 92 1 328 1 165 1 299 2 331 1 273 1 305 1 170 2 200 1 338 1 32 2 231 1 339 2 97 1 232 2 125 1 342 2 315 4 320 1 211 1 184 1 
67 1 100 1 75 1 135 1 319 1 258 1 72 1 30 1 
75 5 135 4 243 1 98 1 100 5 23 1 152 1 253 1 16 1 167 1 82 1 319 4 30 5 109 2 
336 1 100 2 75 2 135 2 319 2 258 1 72 1 30 2 
325 1 321 1 
325 1 321 1 
68 1 158 1 
68 1 158 1 
68 1 158 1 
325 1 321 1 223 1 
325 1 321 1 223 1 
130 1 325 1 321 1 
68 1 325 1 158 1 321 1 
325 1 321 1 223 1 
103 1 325 1 321 1 
103 1 325 1 321 1 
103 1 325 1 321 1 
171 1 110 2 325 2 216 1 311 1 175 3 54 2 65 2 33 1 204 1 192 1 101 1 131 2 317 1 255 2 321 2 257 2 50 1 118 2 
110 1 135 2 325 1 192 1 247 1 118 1 302 1 30 2 94 1 122 1 75 2 218 1 310 1 175 1 54 1 12 1 100 2 253 1 130 1 131 1 319 2 255 1 257 1 321 1 
85 1 346 1 77 1 
332 1 346 1 77 1 
85 2 39 1 166 1 332 1 183 1 346 3 
85 1 39 1 166 1 155 1 332 1 346 2 
85 1 39 2 166 1 332 1 346 2 
87 1 189 1 190 3 138 1 293 2 113 1 294 2 329 1 71 1 331 1 302 1 227 2 118 5 141 2 352 1 147 1 52 1 218 1 249 1 201 1 12 1 76 4 97 1 56 1 233 1 177 1 59 1 131 5 317 2 180 3 209 1 323 1 
87 1 135 1 190 1 241 1 43 1 293 1 113 1 294 1 329 1 26 1 71 1 227 2 118 5 72 1 168 1 30 1 169 2 352 3 147 1 336 1 75 1 249 1 201 1 12 1 76 4 97 1 56 1 341 1 177 1 100 1 152 1 178 2 59 1 131 5 317 1 180 1 319 1 209 1 
87 1 189 2 190 4 138 1 293 2 113 1 294 2 329 1 71 1 331 1 118 3 227 2 141 1 201 1 12 1 76 2 97 1 233 1 177 1 59 1 131 3 317 3 180 3 209 1 323 1 215 1 
86 1 87 1 189 3 190 7 138 2 293 4 113 2 66 1 294 4 329 1 71 1 331 2 118 4 227 4 141 2 201 1 12 2 76 3 97 2 233 1 177 1 59 1 131 4 317 4 180 5 181 1 209 2 323 1 215 1 
35 1 172 1 108 1 
172 1 83 1 
224 1 
172 1 41 1 
35 2 172 3 276 1 41 1 105 1 290 1 
172 1 41 1 105 1 
172 1 214 1 
63 4 138 3 91 1 242 2 113 3 296 1 22 2 93 1 305 5 10 1 174 2 339 6 342 8 99 1 315 14 61 1 210 1 322 2 
63 4 138 3 91 1 242 2 113 3 296 3 22 2 93 1 305 7 10 1 174 2 339 6 342 8 99 1 315 14 61 1 210 1 322 2 
63 4 138 3 91 1 242 2 113 3 296 1 22 2 93 1 305 5 10 1 11 1 174 2 339 6 342 8 99 1 315 14 61 1 210 1 322 2 
0 3 134 1 63 7 138 6 91 1 242 3 113 6 296 7 22 3 165 1 269 1 93 1 331 3 305 14 170 2 308 1 51 4 200 1 10 2 174 3 231 1 339 19 97 3 234 1 36 1 342 21 99 2 315 40 15 1 235 1 61 1 320 1 209 3 210 1 322 2 
63 5 138 3 113 3 242 2 91 1 296 2 22 2 47 1 165 2 93 1 305 7 120 1 170 4 308 1 200 2 10 1 231 2 174 2 339 7 342 9 99 1 315 16 61 1 320 2 322 2 
85 1 348 1 111 1 326 1 266 1 4 1 327 1 268 1 7 1 49 1 332 1 143 1 121 1 217 1 337 1 13 1 126 1 77 1 313 1 78 1 37 1 316 1 356 1 256 1 346 2 183 1 
85 1 348 1 111 1 326 1 292 1 262 2 44 1 266 1 4 1 327 1 330 1 7 1 49 1 332 1 143 1 121 1 228 1 217 1 337 1 354 1 13 3 126 1 340 1 77 1 78 1 37 1 356 1 256 3 17 1 183 1 346 2 
85 1 348 1 111 1 326 1 292 1 262 2 44 1 266 1 4 1 327 1 330 1 49 1 332 1 143 1 121 1 217 1 354 1 13 2 340 1 77 1 78 1 37 1 256 2 17 1 346 2 183 1 
1 1 337 1 348 1 111 1 172 1 353 1 41 1 266 1 126 1 13 1 4 2 114 1 287 1 78 2 37 2 270 1 256 1 49 1 143 2 31 1 121 1 260 1 228 1 
85 1 348 1 111 1 326 1 292 1 266 1 4 1 327 1 7 1 49 1 332 1 143 1 121 1 217 1 337 1 13 1 126 1 77 1 313 1 78 1 37 1 316 1 356 1 256 1 346 2 183 1 
282 1 
187 1 87 1 348 2 1 1 111 1 188 1 41 1 2 1 266 2 114 1 167 1 301 1 28 1 303 1 49 1 118 2 227 1 30 1 121 2 352 2 147 1 75 1 249 1 172 1 280 1 201 1 287 2 100 1 177 1 343 1 59 1 131 2 180 1 182 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
147 1 187 1 75 1 280 1 100 1 344 1 343 1 131 2 167 1 301 1 118 2 303 1 182 1 30 1 352 1 
87 1 187 1 75 1 249 1 280 1 201 1 100 1 59 1 343 1 131 1 167 1 301 1 118 1 303 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
100 1 187 1 75 1 343 1 131 1 167 1 301 1 280 1 303 1 118 1 182 1 30 1 
87 1 187 1 75 1 249 1 280 1 201 1 100 1 59 1 343 1 131 1 167 1 301 1 118 1 303 1 182 1 30 1 
63 2 200 1 174 1 231 1 339 2 138 1 242 1 113 1 91 1 92 1 342 3 315 5 253 2 22 1 165 1 93 1 320 1 322 1 305 2 211 1 184 1 170 2 108 1 
0 3 63 1 88 1 137 1 138 1 113 2 92 2 296 1 165 2 299 11 331 1 140 1 305 2 196 1 170 4 275 1 51 3 200 2 32 11 231 2 339 6 97 2 232 4 36 1 342 8 315 14 253 1 235 1 320 2 209 2 324 1 184 1 185 1 
135 1 88 1 41 1 136 1 92 1 266 1 6 1 9 1 49 1 196 1 277 1 200 1 150 1 231 1 339 1 232 1 342 1 287 1 100 2 16 1 207 1 105 1 109 1 348 1 111 1 165 1 300 1 72 1 30 1 121 1 170 2 75 2 172 1 315 2 129 1 253 1 319 1 320 1 184 1 185 1 
135 1 88 1 41 2 138 5 90 2 91 1 266 1 92 3 93 1 331 2 49 2 196 1 229 2 277 1 200 3 231 3 339 13 97 2 232 7 283 1 287 1 342 14 100 3 16 1 207 2 105 2 61 1 209 2 109 1 348 1 111 2 63 5 242 1 113 5 245 1 296 1 22 2 165 3 299 7 300 2 72 1 305 6 304 2 30 1 121 1 170 6 75 3 172 2 32 7 174 2 220 2 252 2 315 27 129 2 253 3 319 1 320 3 322 2 184 3 185 1 
287 1 348 1 25 1 266 1 121 1 
63 1 135 1 88 1 20 1 138 1 113 1 92 1 23 1 165 1 299 1 331 1 305 1 30 1 170 2 75 1 200 1 32 1 231 1 339 2 97 1 232 1 342 1 100 1 315 3 152 1 319 1 320 1 209 1 184 1 
200 1 32 1 231 1 113 1 97 1 232 1 92 1 125 1 296 1 342 2 315 2 165 1 299 1 320 1 305 1 211 1 184 1 170 2 
63 1 200 1 32 1 231 1 138 1 339 2 232 1 92 1 315 2 328 1 165 1 299 1 320 1 331 1 305 1 211 1 184 1 170 2 
63 1 200 1 32 2 231 1 339 2 138 1 113 1 97 1 232 2 92 1 296 1 342 2 315 4 165 1 299 2 331 1 320 1 209 1 305 2 211 1 184 1 170 2 
25 1 
25 1 
25 1 
63 1 200 1 32 2 231 1 339 2 138 1 113 1 97 1 232 2 92 1 296 1 342 2 315 4 165 1 299 2 331 1 320 1 209 1 305 2 184 1 170 2 
348 1 111 1 41 1 266 1 92 1 165 1 300 1 49 1 72 1 304 1 196 1 121 1 170 2 75 1 277 1 172 1 200 1 231 1 339 1 342 1 287 1 315 2 129 1 100 1 253 1 207 1 105 1 320 1 184 1 185 1 
348 1 111 1 41 1 265 1 266 1 92 1 165 1 49 1 72 1 196 1 121 1 170 2 75 1 277 1 172 1 200 1 231 1 339 1 287 1 315 1 100 1 253 1 58 1 207 1 105 1 320 1 156 1 184 1 
63 1 88 1 200 1 32 2 231 1 339 2 138 1 113 1 97 1 232 2 92 1 296 1 342 2 315 4 165 1 299 2 331 1 320 1 209 1 305 2 184 1 170 2 
348 1 63 1 111 1 41 1 138 1 90 1 113 1 266 1 92 1 268 1 165 1 299 2 300 1 331 1 49 1 305 1 304 1 121 1 170 2 75 1 172 1 200 1 32 2 231 1 339 2 97 1 232 2 342 2 315 4 129 1 100 1 207 1 105 1 320 1 209 1 184 1 
135 1 88 1 138 1 113 1 92 1 296 1 23 1 115 1 165 1 299 1 331 1 305 1 30 1 170 2 75 1 200 1 32 1 231 1 339 1 97 1 232 1 342 2 100 1 315 3 152 1 319 1 320 1 209 1 184 1 
0 1 63 3 138 3 113 3 244 1 161 1 296 3 194 2 165 2 331 3 305 6 120 1 335 2 170 4 146 1 51 2 200 2 231 2 339 10 97 3 124 1 36 1 342 9 315 19 235 1 60 1 236 1 320 2 209 3 238 1 
0 2 63 1 138 1 113 2 244 1 161 1 296 1 194 2 165 3 331 1 305 2 120 1 170 6 308 2 51 2 200 3 231 3 339 8 97 2 284 1 312 1 342 10 36 2 288 1 315 18 57 1 236 2 320 3 209 2 107 1 238 2 240 1 
0 3 63 2 138 4 113 4 244 1 161 1 296 3 194 3 165 3 331 4 305 5 120 1 335 1 170 6 146 1 308 1 51 4 200 3 173 1 231 3 339 17 97 4 284 1 312 1 288 1 36 3 342 15 57 1 315 32 235 1 60 1 236 1 320 3 209 4 107 1 238 2 240 1 
0 3 63 3 138 3 113 4 244 1 161 1 296 3 194 3 165 4 331 3 305 6 120 1 335 1 170 8 146 1 308 2 51 4 200 4 173 1 231 4 339 15 97 4 284 1 312 1 288 1 36 3 342 16 57 1 315 31 235 1 60 1 236 1 320 4 209 4 107 1 238 2 240 1 
0 4 63 6 138 6 242 1 91 1 113 7 244 1 161 1 296 5 22 1 194 2 165 2 93 1 331 5 305 11 120 1 170 4 275 2 308 1 51 4 200 2 174 1 231 2 339 19 97 6 284 1 312 1 288 1 36 2 342 23 57 1 315 42 235 2 236 1 320 2 209 6 107 1 322 1 238 1 240 1 
110 1 101 1 325 1 216 1 222 1 255 1 257 1 321 1 54 1 50 1 
110 1 325 1 5 1 278 1 255 1 257 1 321 1 54 1 162 1 
130 1 310 1 
171 1 110 1 325 1 216 1 311 1 175 2 54 1 65 1 204 1 192 1 101 1 131 1 317 1 255 1 321 1 257 1 50 1 118 1 
171 1 110 1 325 1 216 1 311 1 175 2 54 1 65 1 204 1 192 1 101 1 131 1 317 1 255 1 321 1 257 1 50 1 118 1 
171 1 110 1 325 1 216 1 311 1 175 2 54 1 65 1 204 1 192 1 101 1 131 1 317 1 255 1 321 1 257 1 50 1 118 1 
191 1 223 1 186 1 
191 1 223 1 186 1 
14 1 103 1 
14 1 103 1 191 1 
94 1 122 1 
110 1 325 1 135 2 65 1 247 1 248 1 118 1 302 1 30 2 94 1 122 1 75 2 218 1 310 1 311 1 175 1 54 1 12 1 76 1 100 2 253 1 130 1 131 1 255 1 319 2 257 1 321 1 
223 1 186 1 
14 1 103 1 191 1 
348 2 111 1 41 1 88 1 112 1 263 1 264 1 266 2 92 1 139 1 165 1 48 1 49 1 30 2 196 1 121 2 170 2 307 2 199 1 75 2 172 1 200 1 231 1 339 1 342 1 100 2 315 2 153 1 320 1 184 1 185 1 
85 1 217 1 348 2 111 1 19 1 292 1 202 1 266 2 77 1 327 1 268 1 37 1 246 1 356 1 332 1 49 1 183 1 346 2 121 2 
85 1 217 1 348 1 111 1 292 1 202 1 266 1 77 1 327 1 151 1 37 1 356 1 332 1 49 1 183 1 346 2 121 1 
348 1 1 1 111 1 172 1 353 1 41 1 266 1 114 1 287 1 37 1 246 1 49 1 121 1 334 1 
85 1 217 1 348 1 19 1 111 1 292 1 202 1 266 1 77 1 327 1 37 1 246 1 356 1 332 1 49 1 183 1 346 2 121 1 
119 1 
128 1 317 1 318 1 180 1 71 1 227 1 108 1 
87 1 189 1 42 1 190 1 291 1 71 1 227 1 118 1 352 1 147 1 249 1 201 1 59 1 179 1 131 1 317 2 180 1 
87 1 348 1 111 1 249 1 172 2 276 1 41 1 201 1 266 1 45 1 287 1 349 1 59 1 83 1 105 1 49 2 121 1 
0 1 87 2 188 1 189 3 190 6 138 2 64 1 293 5 113 2 294 5 71 2 331 2 118 1 227 5 352 1 147 1 51 1 249 2 201 2 96 1 203 1 97 2 312 1 36 1 288 1 177 1 57 1 59 2 131 1 345 2 317 5 180 8 209 2 107 1 240 1 
87 1 135 1 241 1 138 1 113 2 22 1 118 1 227 2 72 1 168 1 30 1 198 1 336 1 75 1 249 1 174 1 201 1 96 1 341 1 100 1 152 1 59 1 345 2 131 1 180 2 319 1 61 1 322 1 
87 1 249 1 201 1 128 1 59 1 317 1 318 1 71 1 180 1 227 1 
189 5 190 10 138 2 293 5 96 1 113 2 97 2 294 5 220 1 345 2 317 5 180 5 209 2 331 2 227 5 
147 1 131 1 317 1 71 1 118 1 352 1 
261 2 87 2 348 4 1 1 111 1 188 2 41 1 2 1 266 4 114 1 163 1 28 1 49 1 227 2 118 3 121 4 352 4 147 2 249 1 149 1 172 1 201 2 287 2 177 2 59 2 131 3 180 2 133 1 215 1 
348 1 111 1 135 2 41 1 266 1 92 1 165 1 300 1 49 1 304 1 196 1 30 2 168 1 197 1 121 1 170 2 75 3 172 1 200 1 231 1 339 1 287 1 315 1 100 3 129 1 253 1 152 2 207 1 105 1 319 2 320 1 184 1 
87 1 249 1 189 2 188 1 190 4 201 1 293 2 242 1 294 2 177 1 59 1 317 4 180 1 71 2 227 2 
279 1 255 1 257 1 
279 1 255 1 257 1 
24 1 255 1 257 1 50 1 122 1 
279 1 255 1 257 1 
255 1 257 1 55 1 
255 1 257 1 55 1 
255 1 257 1 55 1 
255 1 257 1 
325 1 321 1 
63 4 138 3 91 1 113 3 242 1 296 3 22 2 165 2 93 1 305 7 170 4 308 1 200 2 174 2 231 2 339 8 342 9 315 17 61 1 320 2 322 2 
63 2 174 1 339 2 138 1 242 1 91 1 113 1 342 3 315 5 22 1 93 1 305 2 322 1 108 1 
63 1 200 1 231 1 339 2 138 1 113 1 97 1 342 2 296 1 355 1 315 4 165 1 331 1 320 1 209 1 305 2 170 2 
0 1 51 2 63 1 138 1 339 4 113 1 97 1 36 1 342 3 296 1 315 7 235 1 331 1 209 1 305 2 
0 2 63 5 137 1 138 5 242 1 91 1 113 5 296 2 22 2 165 1 93 1 331 2 305 7 170 2 275 1 308 1 51 2 200 1 174 2 231 1 339 12 97 2 342 13 315 25 235 1 61 1 209 2 320 1 322 2 
315 1 51 1 339 1 
342 1 0 1 315 1 
63 2 200 1 231 1 339 3 138 1 113 1 97 1 220 1 342 3 296 1 355 1 315 6 165 1 320 1 209 1 331 1 305 3 170 2 
0 1 63 1 138 2 113 2 296 1 165 1 331 2 305 2 120 1 170 2 51 1 200 1 231 1 339 6 97 2 312 1 36 1 288 1 342 6 315 12 57 1 320 1 209 2 107 1 240 1 
63 1 174 1 138 1 339 3 113 1 342 3 296 1 315 6 22 1 322 1 305 2 
308 1 63 1 200 1 174 1 231 1 339 2 91 1 342 1 296 1 315 3 22 1 226 1 165 1 93 1 320 1 305 2 170 2 
63 3 200 1 231 1 174 2 339 5 138 2 113 2 296 2 342 5 315 10 22 2 165 1 320 1 61 1 305 5 322 1 120 1 170 2 
200 1 231 1 113 1 97 1 342 2 296 1 315 2 165 1 320 1 305 1 120 1 170 2 
63 1 200 1 231 1 339 2 138 1 113 1 97 1 342 2 296 1 315 4 165 1 331 1 320 1 209 1 305 2 120 1 170 2 
308 1 63 1 200 3 231 3 174 1 339 2 296 1 342 1 315 3 226 1 22 1 165 3 60 1 320 3 305 2 120 1 170 6 
0 3 134 1 63 5 138 5 242 1 91 1 113 5 296 4 22 2 165 4 93 1 331 2 305 9 120 1 170 8 308 1 51 3 200 4 174 2 231 4 339 15 97 2 234 1 36 1 342 16 355 1 315 31 15 1 60 1 61 1 320 4 209 2 322 2 
0 1 63 1 138 1 113 2 296 1 165 2 331 1 305 2 120 1 170 4 308 1 51 1 200 2 231 2 339 4 97 2 312 1 36 1 288 1 342 7 315 11 57 1 320 2 209 2 107 1 240 1 
0 1 63 1 138 1 113 3 296 2 165 3 331 1 305 3 120 1 170 6 308 1 51 2 200 3 231 3 339 5 97 3 312 1 36 1 288 1 342 9 315 14 355 1 57 1 235 1 320 3 209 3 107 1 240 1 
0 1 63 5 138 5 242 1 91 1 113 5 296 2 22 2 165 3 93 1 331 2 305 7 120 1 170 6 308 1 51 1 200 3 174 2 231 3 339 13 97 2 312 1 36 1 288 1 342 13 355 1 315 26 57 1 61 1 320 3 209 2 107 1 322 2 240 1 
0 1 63 5 138 4 242 1 91 1 113 5 296 4 22 2 165 3 93 1 331 1 305 9 120 1 170 6 308 1 51 1 200 3 174 2 231 3 339 10 97 2 312 1 36 1 288 1 342 14 355 1 315 24 57 1 61 1 320 3 209 2 107 1 322 2 240 1 
0 1 63 1 138 1 113 2 296 1 165 2 331 1 305 2 120 1 170 4 308 1 51 1 200 2 231 2 339 4 97 2 312 1 36 1 288 1 342 7 315 11 57 1 320 2 209 2 107 1 240 1 
0 1 63 1 138 2 113 2 296 1 165 1 331 2 305 2 120 1 170 2 51 1 200 1 231 1 339 6 97 2 312 1 36 1 288 1 342 6 315 12 57 1 320 1 209 2 107 1 240 1 
0 1 63 5 138 4 242 1 91 1 113 5 296 2 22 2 165 4 93 1 331 1 305 7 120 1 170 8 308 2 51 1 200 4 174 2 231 4 339 11 97 2 312 1 36 1 288 1 342 14 315 25 355 1 57 1 61 1 320 4 209 2 107 1 322 2 240 1 
0 1 63 3 138 2 113 3 296 3 165 4 331 2 305 6 120 1 170 8 308 2 51 1 200 4 231 4 339 7 97 3 312 1 36 1 288 1 342 9 315 16 57 1 60 1 320 4 209 3 107 1 240 1 
63 3 174 3 339 4 138 1 91 1 113 1 296 3 342 3 315 7 22 3 93 2 305 6 322 1 
0 1 63 5 138 4 242 1 91 1 113 5 296 2 22 2 165 4 93 1 331 1 305 7 120 1 170 8 308 2 51 1 200 4 174 2 231 4 339 11 97 2 312 1 36 1 288 1 342 14 315 25 57 1 60 1 61 1 320 4 209 2 107 1 322 2 240 1 
18 1 
277 1 251 1 46 1 79 1 253 1 104 1 72 1 73 1 
287 1 1 1 348 1 111 1 172 1 41 1 49 1 266 1 121 1 114 1 108 1 
348 1 111 1 135 1 41 1 266 1 300 1 49 1 72 1 30 1 121 1 75 2 172 1 277 1 287 1 100 2 253 1 207 1 105 1 319 1 109 1 
261 1 348 1 111 1 135 2 40 1 41 2 266 1 67 1 300 1 49 1 72 2 30 2 121 1 75 2 277 1 172 3 34 1 100 2 253 1 207 1 105 2 319 1 214 1 109 1 
261 1 348 1 111 1 135 2 40 1 41 2 265 1 266 1 67 1 49 1 72 2 30 2 121 1 75 2 277 1 172 3 34 1 100 2 253 1 207 1 105 2 319 1 214 1 109 1 
261 1 348 1 111 1 135 1 41 1 241 1 266 1 297 1 195 1 71 1 118 2 49 1 72 1 30 1 168 1 121 1 352 1 336 1 75 1 172 4 34 1 341 1 35 1 100 1 152 1 131 2 317 1 83 1 105 1 319 1 237 1 214 1 
261 1 348 1 111 1 135 1 41 1 241 1 266 1 195 1 71 1 118 2 49 1 72 1 30 1 168 1 121 1 352 1 336 1 75 1 172 4 34 1 341 1 35 1 100 1 152 1 254 1 131 2 317 1 83 1 105 1 319 1 214 1 
142 1 
348 1 111 1 276 1 172 1 41 1 266 1 287 1 289 1 105 1 49 2 121 1 144 1 357 1 
135 1 88 1 41 1 138 3 90 1 91 1 266 1 92 2 268 1 93 1 49 1 229 1 277 1 200 2 231 2 339 6 232 1 342 7 100 2 207 1 105 1 61 1 109 1 348 1 111 1 63 3 112 1 113 3 242 1 296 1 22 2 165 2 299 1 300 1 72 1 304 1 305 4 30 1 121 1 170 4 75 2 172 1 32 1 174 2 129 1 315 13 253 3 319 1 320 2 322 2 184 2 
87 2 348 1 266 1 193 1 195 1 71 1 227 1 118 3 8 1 121 1 352 2 147 1 249 2 149 1 172 2 201 2 76 1 128 1 287 1 35 1 59 2 254 1 131 3 317 1 318 1 83 1 180 1 132 1 
142 1 
348 2 1 1 111 2 172 2 41 2 266 2 160 1 114 1 287 1 268 1 289 1 105 1 49 3 121 2 357 1 145 1 
348 1 111 1 172 1 41 1 266 1 160 1 289 1 81 1 105 1 49 2 121 1 145 1 357 1 
348 1 111 1 266 1 77 1 287 1 327 1 49 1 332 1 346 1 121 1 
348 2 111 1 172 1 41 1 292 1 263 1 266 2 139 1 268 1 49 1 121 2 
348 2 1 1 111 3 41 3 266 3 3 1 160 1 114 1 139 1 268 1 117 1 49 4 121 3 145 1 172 4 287 1 289 1 105 1 357 1 
348 2 1 1 111 3 41 3 266 3 160 1 114 1 139 1 268 1 117 1 49 4 121 3 145 1 172 4 287 1 289 1 105 1 221 1 357 1 
348 1 111 1 135 1 41 1 265 1 266 1 49 1 72 1 30 1 121 1 75 2 172 1 277 1 287 1 100 2 253 1 207 1 105 1 319 1 109 1 
261 1 348 1 111 1 276 1 172 1 41 1 266 1 289 1 105 1 49 2 121 1 144 1 357 1 
253 1 69 1 95 1 295 1 285 1 
69 1 53 1 131 1 95 1 301 1 118 1 76 1 295 1 213 1 285 1 286 1 84 1 
100 1 75 1 153 1 48 1 95 1 264 1 30 1 295 1 285 1 
53 1 285 1 84 1 
330 1 44 1 340 1 108 1 
337 1 330 1 256 1 44 1 13 1 126 1 340 1 
256 1 143 1 4 1 
337 1 350 1 330 1 256 3 281 1 44 1 259 2 62 1 13 3 126 1 340 1 313 1 
337 1 330 1 262 1 256 2 44 1 205 1 13 2 126 1 340 1 
85 1 337 1 164 1 298 1 256 1 346 1 13 1 126 1 77 1 313 1 
337 1 330 1 256 1 44 1 13 1 126 1 313 1 
337 1 256 1 44 2 13 1 126 1 340 1 313 1 
148 1 337 2 44 1 250 1 126 2 13 2 313 1 176 1 330 1 256 2 
337 1 262 2 44 1 21 1 126 1 13 3 340 1 313 1 298 1 330 1 208 1 256 3 306 1 
85 1 337 1 262 1 44 1 126 1 13 2 340 1 313 1 77 1 330 1 256 2 332 1 346 2 183 1 212 1 
337 2 230 1 262 2 44 1 21 1 126 2 13 4 205 1 340 1 313 1 298 1 330 1 256 4 
337 1 330 1 256 1 44 1 13 1 126 1 340 1 313 1 
337 1 262 2 44 2 21 1 13 4 126 1 340 2 350 1 298 1 330 2 256 4 17 1 259 1 62 1 
337 1 89 1 262 1 44 1 126 1 13 2 340 1 313 1 330 1 256 2 38 1 29 1 
337 1 44 1 126 1 13 3 340 1 313 1 350 1 330 1 351 1 256 3 62 2 259 2 
154 2 330 2 271 1 347 1 
337 1 256 1 239 1 13 1 126 1 313 1 
337 1 330 1 208 1 262 1 256 2 44 1 13 2 126 1 340 1 313 1 
274 1 
337 1 330 1 256 1 44 1 13 1 126 1 340 1 313 1 
337 1 262 1 44 1 126 1 13 3 340 1 313 1 330 1 208 1 256 3 259 1 
298 1 256 1 262 1 21 1 13 1 
330 1 44 1 

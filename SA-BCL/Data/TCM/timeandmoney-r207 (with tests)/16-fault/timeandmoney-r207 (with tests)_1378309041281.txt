#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (159,359) 85 (185,351) (185,351) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (159,359) 85 (185,351) (185,351) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (159,359) 85 (185,351) (185,351) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (159,359) 85 (185,351) (185,351) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (166,293) 290 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (71,145) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (166,293) 290 276 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 218 289 123 252 329 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (71,145) (71,145) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 218 289 226 95 199 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 218 289 226 95 199 254 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 218 289 226 95 199 254 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (71,145) (71,145) 140 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (166,293) 290 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 218 289 123 252 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 218 289 226 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 218 289 226 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 218 289 226 95 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
365 1 267 1 323 1 317 1 159 1 185 1 292 1 85 1 358 1 87 1 351 1 
365 1 267 1 323 1 317 1 159 1 185 1 292 1 85 1 358 1 87 1 351 1 
365 1 267 1 323 1 317 1 159 1 185 1 292 1 85 1 358 1 87 1 351 1 
365 1 267 1 323 1 317 1 159 1 185 1 292 1 85 1 358 1 87 1 351 1 
267 1 30 3 317 4 97 1 149 1 200 1 292 1 319 3 358 1 87 4 193 2 313 1 89 1 80 1 115 1 56 1 161 1 347 2 
365 1 30 1 267 1 29 1 317 2 292 1 358 1 87 2 203 1 34 1 89 1 323 1 80 1 115 1 56 1 282 1 
365 1 267 2 30 2 317 3 97 1 292 2 319 1 358 1 87 3 359 1 193 1 89 1 56 1 
267 2 30 5 317 9 148 1 149 1 200 1 319 7 358 1 359 1 87 9 89 1 115 1 161 1 347 2 365 1 97 3 331 1 292 2 75 1 193 4 313 1 194 1 80 1 56 1 
267 2 30 5 317 9 148 1 149 1 200 1 319 7 358 1 359 1 87 9 89 1 115 1 161 1 347 2 365 1 97 3 331 1 292 2 75 1 193 4 313 1 194 1 80 1 56 1 
142 1 18 1 116 1 
113 2 116 1 100 1 
67 1 12 1 303 1 369 1 342 1 243 1 143 1 374 1 362 1 195 1 
32 2 290 1 293 1 19 1 192 2 374 1 260 1 160 1 247 2 350 1 
374 1 71 1 
12 1 316 1 301 1 367 1 44 1 369 1 305 1 333 1 215 1 142 1 143 1 195 1 210 1 116 1 
67 1 12 1 301 1 367 2 303 1 44 1 369 1 305 1 342 1 333 2 142 1 143 1 195 1 210 1 116 1 
187 1 31 1 335 1 367 1 333 1 
31 1 335 1 142 1 367 2 122 1 116 1 40 1 333 2 
31 1 367 1 333 1 
335 1 374 1 71 1 367 1 145 1 333 1 
116 1 
31 1 335 1 142 1 367 2 116 1 40 1 27 1 333 2 
31 2 168 1 367 5 106 1 84 1 231 2 124 2 333 5 4 1 240 2 335 2 142 1 205 1 81 1 235 1 116 1 40 1 352 1 146 1 
243 1 18 1 
12 2 67 1 287 1 132 1 303 1 369 2 342 1 243 2 195 2 
83 1 154 1 237 1 
12 1 32 1 192 1 157 1 243 1 271 1 371 1 160 1 36 1 247 1 262 1 195 1 279 1 263 1 220 1 336 1 
67 1 12 2 83 1 32 1 179 1 303 1 369 1 192 1 157 1 371 1 112 1 160 1 36 1 247 1 262 1 195 2 263 1 279 1 220 1 336 1 
12 3 67 3 243 1 179 1 195 3 303 3 369 3 342 1 
12 1 67 1 143 1 195 1 303 1 369 1 47 1 
12 1 67 1 143 1 287 1 132 1 195 1 303 1 369 1 342 1 
301 1 32 1 303 2 179 1 305 1 342 1 112 1 160 1 247 1 276 1 210 1 12 2 67 2 132 1 367 1 290 1 44 1 369 2 293 1 192 1 333 1 259 1 143 1 374 1 195 2 
12 2 67 1 243 1 195 2 303 1 179 1 369 2 364 1 215 1 
67 3 12 3 132 1 301 1 367 1 179 2 303 3 44 1 369 3 305 1 342 1 333 1 112 1 143 1 259 1 195 3 210 1 327 1 116 1 
67 2 12 2 132 1 83 1 179 1 154 1 303 2 369 2 342 1 195 2 
12 1 32 1 192 1 157 1 243 1 371 1 160 1 36 1 247 1 262 1 195 1 279 1 263 1 220 1 336 1 
12 1 32 1 192 1 48 1 157 1 243 1 257 1 160 1 36 1 247 1 262 1 195 1 279 1 263 1 220 1 
178 1 83 2 154 2 222 1 33 1 6 2 275 4 346 1 326 1 128 1 38 1 186 1 211 2 13 1 119 1 212 1 45 1 216 2 334 1 256 1 218 1 299 1 103 1 237 2 
12 1 67 1 60 1 143 1 195 1 303 1 369 1 305 1 
12 5 67 4 59 1 243 1 112 1 132 1 355 1 195 5 303 4 179 2 369 5 364 1 342 1 215 1 
12 2 67 2 60 1 143 1 195 2 303 2 369 2 47 1 
377 1 62 1 
377 1 62 1 
39 1 177 1 
39 1 177 1 
39 1 177 1 
325 1 377 1 62 1 
325 1 377 1 62 1 
176 1 377 1 62 1 
94 1 55 1 39 1 177 1 377 2 62 2 
325 1 377 1 62 1 
206 1 377 1 62 1 
206 1 377 1 62 1 
206 1 377 1 62 1 
238 1 239 2 284 2 94 1 367 2 332 1 213 3 191 2 139 1 62 2 333 2 360 1 258 2 244 1 274 1 208 2 116 1 248 1 377 2 
239 1 0 1 340 1 303 2 62 1 360 1 243 1 306 1 307 1 207 1 246 1 208 1 67 2 12 2 284 1 367 1 213 1 369 2 253 1 333 1 258 1 176 1 195 2 377 1 
149 1 80 1 115 1 
80 1 115 1 203 1 
149 2 175 1 80 3 201 1 363 1 203 1 
105 1 149 1 80 2 201 1 363 1 203 1 
149 1 80 2 201 1 363 2 203 1 
31 1 357 2 84 1 340 1 240 1 205 2 207 1 113 3 65 1 326 1 116 2 40 1 163 1 129 1 212 1 289 1 135 1 121 1 367 5 168 3 231 1 253 1 124 1 23 2 333 5 100 1 217 2 335 4 218 1 142 1 103 1 236 1 
61 1 31 6 338 1 84 1 240 2 205 6 113 9 326 3 116 5 308 1 163 1 40 1 187 5 212 3 289 3 133 5 288 1 121 2 367 9 168 8 231 2 169 1 253 4 124 2 23 6 333 9 100 3 217 6 79 1 335 7 218 3 142 1 235 1 103 3 236 2 
357 1 240 1 205 2 113 4 65 1 326 1 116 3 212 1 135 1 121 1 289 1 71 1 367 3 168 3 231 1 253 1 124 1 333 3 23 2 100 2 217 2 335 2 374 1 142 1 218 1 235 1 145 1 103 1 236 1 
357 1 240 1 205 2 113 4 65 1 326 1 116 2 212 1 135 1 121 1 289 1 367 2 168 3 231 1 169 1 253 1 124 1 23 2 333 2 100 2 217 2 335 1 218 1 235 1 103 1 236 1 
36 1 18 1 202 1 
225 1 36 1 
234 1 
36 1 263 1 
126 1 36 3 263 1 202 2 220 1 343 1 
36 1 263 1 220 1 
36 1 91 1 
211 3 212 1 356 1 17 1 222 1 98 1 312 1 255 1 294 1 22 1 334 2 216 3 275 6 37 1 261 1 103 1 265 1 
211 3 212 1 356 1 17 1 222 1 98 1 312 1 255 1 294 1 22 1 334 2 216 3 275 6 37 1 261 1 103 1 265 1 
211 3 212 1 356 1 17 1 222 1 98 1 312 1 255 1 294 1 22 1 334 2 216 3 273 1 275 6 37 1 261 1 103 1 265 1 
211 7 329 1 120 1 212 3 289 3 252 1 17 2 222 1 123 1 320 3 312 2 255 1 22 1 334 3 216 10 242 3 218 3 245 1 275 17 54 1 326 2 103 2 
356 1 222 2 33 2 6 4 35 1 275 8 37 1 346 2 38 2 211 4 212 1 69 1 17 1 98 1 45 2 255 1 312 1 22 1 294 1 216 4 334 3 51 1 103 1 265 1 
30 1 267 1 317 2 149 1 32 1 319 1 153 1 358 1 87 2 109 1 157 1 203 1 7 1 89 1 247 1 115 1 281 1 365 1 131 1 330 1 292 1 170 1 214 1 192 1 175 1 80 2 25 1 262 1 56 1 101 1 
30 1 267 1 317 3 149 1 32 1 153 1 319 2 87 3 109 1 157 1 203 1 7 1 89 1 247 1 115 1 281 1 365 1 330 1 292 1 138 1 170 1 192 1 296 1 175 1 80 2 25 1 262 1 56 1 101 1 147 1 
30 1 317 2 149 1 32 1 153 1 319 2 87 2 109 1 157 1 203 1 7 1 89 1 247 1 115 1 365 1 138 1 170 1 192 1 175 1 80 2 25 1 262 1 56 1 101 1 147 1 
267 1 317 1 32 1 318 1 153 2 87 1 341 1 157 1 7 2 241 1 160 1 36 1 247 1 114 1 365 2 164 1 292 1 192 1 296 1 25 2 262 1 315 1 263 1 
267 1 317 1 149 1 32 1 153 1 358 1 87 1 109 1 157 1 203 1 7 1 247 1 115 1 281 1 365 1 330 1 292 1 170 1 214 1 192 1 175 1 80 2 25 1 262 1 101 1 147 1 
196 1 
301 1 305 1 240 1 157 1 241 1 205 2 160 2 247 2 210 1 11 1 12 1 250 2 168 2 171 1 124 1 21 1 215 1 219 1 262 1 315 1 263 1 28 1 31 2 316 1 84 1 32 2 321 1 272 1 90 1 36 1 277 1 278 1 40 1 41 1 366 1 229 1 367 3 231 1 137 1 44 1 369 1 192 2 333 3 143 1 195 1 236 1 
316 1 31 2 301 1 305 1 210 1 41 1 40 1 130 1 12 1 250 2 229 1 367 3 137 1 44 1 369 1 21 1 333 3 215 1 219 1 143 1 195 1 27 1 
31 1 316 1 301 1 305 1 210 1 116 1 41 1 40 1 12 1 250 3 229 1 367 3 137 1 44 1 369 1 21 1 333 3 215 1 219 1 143 1 142 1 195 1 27 1 58 1 
316 1 31 2 301 1 305 1 210 1 116 1 40 1 41 1 130 1 12 1 250 3 15 1 229 1 367 3 137 1 44 1 369 1 21 1 333 3 215 1 219 1 143 1 142 1 195 1 27 1 58 1 
301 1 305 1 156 1 240 1 205 1 210 1 116 1 11 2 12 1 310 1 250 2 15 2 16 1 71 1 168 1 21 1 124 1 215 1 219 1 27 1 28 1 31 3 316 1 354 1 84 1 180 1 90 1 40 1 41 1 130 2 366 2 229 1 367 3 231 1 137 1 44 1 369 1 333 3 374 1 143 1 142 1 195 1 145 1 
316 1 301 1 84 1 305 1 240 1 90 1 205 1 277 1 210 1 11 1 41 1 366 1 12 1 250 2 229 1 168 1 367 2 231 1 137 1 44 1 369 1 21 1 124 1 333 2 215 1 219 1 143 1 195 1 28 1 
316 1 354 1 301 1 84 1 180 1 305 1 240 1 90 1 205 1 210 1 116 1 11 2 41 1 366 2 12 1 250 2 16 1 229 1 71 1 168 1 367 2 231 1 137 1 44 1 369 1 124 1 21 1 333 2 215 1 374 1 142 1 219 1 143 1 195 1 145 1 28 1 
316 1 354 1 301 1 84 1 180 1 305 1 240 1 90 1 205 1 210 1 116 1 11 2 41 1 366 2 12 1 250 2 16 1 229 1 71 1 168 1 367 2 231 1 137 1 44 1 369 1 124 1 21 1 333 2 215 1 374 1 142 1 219 1 143 1 195 1 145 1 28 1 
316 1 354 1 301 1 84 1 305 1 224 1 240 1 90 1 205 1 210 1 116 1 11 2 41 1 366 2 12 1 250 2 229 1 71 1 168 1 367 2 136 1 231 1 137 1 44 1 369 1 124 1 21 1 333 2 215 1 77 1 374 1 142 1 219 1 143 1 195 1 145 1 
301 1 305 1 240 1 205 1 210 1 116 1 11 2 310 1 12 1 250 3 15 1 16 1 168 1 71 1 21 1 124 1 215 1 219 1 28 1 31 1 316 1 354 1 84 1 180 1 90 1 41 1 130 1 366 2 229 1 367 2 231 1 137 1 44 1 369 1 333 2 374 1 143 1 142 1 195 1 145 1 58 1 
301 1 305 1 240 1 205 1 210 1 116 1 11 2 310 1 12 1 250 3 15 1 16 1 168 1 71 1 21 1 124 1 215 1 219 1 28 1 31 1 316 1 354 1 84 1 180 1 90 1 41 1 130 1 366 2 229 1 367 2 231 1 137 1 44 1 369 1 333 2 374 1 143 1 142 1 195 1 145 1 58 1 
316 1 301 1 84 1 305 1 240 1 90 1 205 1 277 1 210 1 11 1 41 1 366 1 12 1 250 2 229 1 168 1 367 2 231 1 137 1 44 1 369 1 21 1 124 1 333 2 215 1 77 1 219 1 143 1 195 1 
211 3 178 1 13 1 212 1 356 1 222 1 18 1 98 1 45 1 33 1 294 1 6 2 216 2 334 1 256 1 243 2 275 5 37 1 346 1 38 1 103 1 265 1 
178 1 13 1 230 1 346 1 26 1 38 1 45 1 33 1 6 2 
178 1 32 1 107 1 154 1 303 1 179 1 33 1 157 1 6 2 243 1 271 1 112 1 160 1 36 1 247 1 275 2 346 1 279 1 38 1 162 1 118 1 12 2 67 1 211 1 13 1 230 1 45 1 369 1 192 1 216 1 76 1 371 1 262 1 195 2 263 1 220 1 102 1 336 1 
104 2 303 1 154 6 6 6 157 2 243 2 112 1 160 1 247 3 346 3 118 1 211 10 67 1 12 3 13 3 212 3 166 2 17 4 216 9 76 1 218 2 262 2 263 2 220 2 265 1 178 3 266 2 83 6 356 1 32 3 222 3 179 1 223 1 88 1 33 3 36 2 37 1 275 19 38 3 279 2 326 2 289 2 230 1 98 1 369 1 45 3 192 3 293 2 294 1 334 7 371 2 297 1 195 3 103 3 376 2 336 2 147 1 237 6 
178 2 32 8 303 1 179 1 108 1 33 2 270 1 157 2 6 4 241 1 345 1 160 2 36 3 247 7 275 2 346 2 38 2 118 1 12 1 67 1 211 1 131 1 13 2 68 1 96 1 43 1 291 1 369 1 45 2 192 8 216 1 256 1 76 1 262 2 195 1 315 1 263 2 350 2 147 1 
178 1 83 1 222 1 154 1 303 1 33 1 342 1 6 2 275 3 346 1 38 1 326 1 67 1 12 1 211 2 13 1 132 1 212 1 289 1 230 1 45 1 369 1 334 1 216 1 78 1 218 1 195 1 103 1 237 1 
178 1 13 1 119 1 83 1 212 1 17 1 154 1 45 1 33 1 6 2 334 1 216 2 256 1 218 1 275 2 346 1 38 1 237 1 
178 1 211 2 13 1 83 1 222 1 154 1 45 1 33 1 6 2 334 1 256 1 275 2 346 1 38 1 128 1 326 1 103 1 237 1 
178 1 83 2 154 2 222 1 33 1 6 2 275 4 346 1 38 1 326 1 211 2 13 1 212 1 289 1 17 1 45 1 216 2 334 2 256 1 218 1 103 1 237 2 
178 1 13 1 119 1 68 1 83 1 212 1 17 1 154 1 45 1 33 1 6 2 334 1 216 2 218 1 275 2 346 1 38 1 237 1 
178 1 211 2 13 1 68 1 83 1 222 1 154 1 45 1 33 1 6 2 334 1 275 2 346 1 38 1 128 1 326 1 103 1 237 1 
178 1 83 2 154 2 222 1 33 1 6 2 275 4 346 1 38 1 326 1 211 2 13 1 68 1 212 1 289 1 17 1 45 1 216 2 334 2 218 1 103 1 237 2 
211 2 178 1 13 1 83 2 212 1 289 1 17 1 222 1 154 2 45 1 33 1 6 2 334 2 216 2 218 1 275 4 346 1 326 1 38 1 103 1 237 2 
178 1 32 1 33 1 157 1 6 2 243 1 160 1 36 1 275 2 247 1 346 1 279 1 38 1 118 1 12 1 211 1 13 1 45 1 293 1 192 1 216 1 76 1 371 1 262 1 195 1 263 1 220 1 336 1 
178 1 32 1 33 1 157 1 6 2 243 1 160 1 36 1 275 2 247 1 346 1 279 1 38 1 283 1 118 1 12 1 211 1 13 1 45 1 192 1 48 1 216 1 76 1 257 1 262 1 195 1 263 1 220 1 
178 1 83 2 154 2 222 1 33 1 6 2 275 4 346 1 38 1 326 1 211 2 13 1 212 1 289 1 230 1 17 1 45 1 216 2 334 2 218 1 103 1 237 2 
178 1 83 2 32 1 222 1 154 2 33 1 157 1 6 2 36 1 275 4 247 1 346 1 326 1 279 1 38 1 211 2 12 1 131 1 13 1 212 1 166 1 289 1 17 1 45 1 293 1 192 1 334 2 216 2 371 1 218 1 262 1 195 1 263 1 220 1 103 1 336 1 237 2 
178 1 353 1 83 1 303 1 154 1 33 1 342 1 6 2 275 3 346 1 326 1 38 1 211 1 67 1 12 1 13 1 132 1 212 1 289 1 17 1 230 1 45 1 369 1 334 1 216 2 218 1 195 1 103 1 237 1 
268 1 222 3 320 2 33 2 6 4 158 1 242 1 9 2 275 19 346 2 38 2 326 3 117 2 211 10 120 1 212 3 348 1 289 3 17 3 45 2 254 1 216 9 334 6 174 1 51 1 218 3 54 1 264 1 103 3 199 1 
211 5 120 2 212 1 95 1 289 1 268 2 189 1 45 1 320 2 254 1 33 1 6 2 216 6 242 2 226 1 51 1 218 1 9 2 275 11 346 1 264 1 38 1 199 2 
268 2 222 1 320 4 33 2 6 4 242 3 226 1 9 3 275 24 346 2 38 2 326 2 117 1 211 12 120 3 95 1 212 3 348 1 289 3 189 1 17 2 45 2 20 1 254 1 216 12 334 3 174 1 51 1 218 3 54 1 264 1 103 2 199 1 
268 2 222 2 320 4 33 2 6 4 242 3 226 1 9 3 275 24 346 2 38 2 326 2 117 1 211 12 120 3 95 1 212 3 348 1 289 3 189 1 17 2 45 2 20 1 254 1 216 12 334 4 174 1 51 1 218 3 54 1 264 1 103 2 199 1 
268 1 356 1 222 7 320 4 33 2 6 4 242 4 226 1 35 1 9 4 37 1 275 52 346 2 66 2 38 2 326 7 117 1 211 26 120 2 95 1 212 8 348 1 289 7 189 1 17 7 368 1 232 1 98 1 45 2 254 1 294 1 216 26 334 14 51 1 218 7 52 1 54 2 264 1 265 1 103 8 199 1 
238 1 284 1 239 1 94 1 258 1 274 1 208 1 377 1 62 1 5 1 
176 1 246 1 
228 1 173 1 284 1 239 1 258 1 208 1 304 1 377 1 62 1 
238 1 239 1 284 1 94 1 367 1 332 1 213 2 191 1 139 1 333 1 62 1 360 1 258 1 274 1 208 1 116 1 248 1 377 1 
238 1 239 1 284 1 94 1 367 1 332 1 213 2 191 1 139 1 333 1 62 1 360 1 258 1 274 1 208 1 116 1 248 1 377 1 
238 1 239 1 284 1 94 1 367 1 332 1 213 2 191 1 139 1 333 1 62 1 360 1 258 1 274 1 208 1 116 1 248 1 377 1 
325 1 55 1 302 1 
325 1 55 1 302 1 
206 1 127 1 
206 1 55 1 127 1 
0 1 306 1 
239 1 0 1 269 1 340 1 303 2 62 1 243 1 306 1 307 1 207 1 246 1 208 1 12 2 67 2 284 1 367 1 191 1 213 1 369 2 253 1 139 1 333 1 335 1 258 1 176 1 195 2 377 1 
325 1 302 1 
206 1 55 1 127 1 
178 1 32 2 108 1 33 1 157 1 6 2 36 1 361 1 275 2 247 2 346 1 38 1 118 1 12 2 211 1 13 1 188 1 96 1 230 1 369 2 45 1 192 2 49 1 216 1 76 1 50 1 298 1 262 1 195 2 263 1 350 2 
131 1 149 1 150 1 32 2 153 1 170 1 192 2 3 1 109 1 203 1 157 1 24 1 175 1 80 2 247 2 115 1 262 1 281 1 147 1 
149 1 150 1 32 1 153 1 170 1 192 1 109 1 203 1 63 1 157 1 175 1 80 2 247 1 115 1 262 1 281 1 147 1 
241 1 160 1 36 1 32 1 247 1 262 1 315 1 153 1 263 1 192 1 341 1 3 1 93 1 157 1 
149 1 150 1 32 1 153 1 170 1 192 1 3 1 109 1 203 1 157 1 24 1 175 1 80 2 247 1 115 1 262 1 281 1 147 1 
251 1 
142 1 205 1 168 1 81 1 18 1 116 1 146 1 
328 1 31 1 367 1 168 1 84 1 231 1 86 1 124 1 333 1 240 1 100 1 142 1 205 1 113 1 116 2 40 1 28 1 
104 2 337 2 202 2 157 4 240 4 343 1 8 1 205 8 160 1 113 12 247 3 210 2 10 2 116 8 14 2 212 2 70 1 168 9 124 4 23 6 217 6 218 2 81 1 262 3 263 3 220 3 31 5 82 1 84 4 32 3 322 2 225 3 36 10 91 2 92 2 278 1 326 2 40 3 131 1 289 2 367 5 231 4 99 2 192 3 333 5 295 1 100 6 142 2 53 1 375 2 197 2 103 2 236 2 146 1 
84 1 320 1 240 1 242 1 226 1 205 4 113 4 326 2 116 2 120 1 95 1 212 2 289 2 168 6 189 1 231 1 368 1 232 1 124 1 23 5 100 2 217 5 218 2 103 2 
14 1 212 1 71 1 168 2 356 1 367 1 84 1 231 1 98 1 180 1 124 1 333 1 294 1 240 1 140 1 374 1 205 1 145 1 103 1 
168 1 84 1 231 1 124 1 240 1 205 1 142 1 81 1 116 1 146 1 
104 1 337 1 14 2 212 2 289 2 168 5 23 5 100 5 217 5 218 2 205 5 113 10 326 2 116 5 103 2 
31 1 142 1 367 1 116 1 40 1 333 1 
31 4 84 1 32 4 157 1 240 2 204 1 241 1 321 1 272 1 205 2 160 2 36 1 247 4 278 2 40 2 70 2 168 2 367 3 231 2 192 4 124 2 333 3 295 1 262 1 235 1 315 1 263 1 198 1 236 2 
374 1 160 1 32 1 247 1 290 1 293 1 192 1 
168 1 84 1 231 1 124 1 22 1 23 2 100 2 240 1 217 2 205 2 142 2 113 4 278 1 116 4 236 1 
284 1 239 1 227 1 
284 1 239 1 227 1 
238 1 284 1 239 1 306 1 46 1 
284 1 239 1 227 1 
284 1 239 1 182 1 
284 1 239 1 182 1 
284 1 239 1 182 1 
284 1 239 1 
377 1 62 1 
211 4 212 1 356 1 17 1 222 1 98 1 45 2 33 2 294 1 6 4 216 3 334 2 35 1 275 7 37 1 346 2 38 2 103 1 265 1 
211 3 212 1 356 1 18 1 98 1 222 1 294 1 334 1 216 2 37 1 275 5 265 1 103 1 
211 2 212 1 289 1 151 1 17 1 222 1 45 1 33 1 6 2 334 2 216 2 218 1 275 4 346 1 326 1 38 1 103 1 
211 4 120 1 212 1 289 1 17 1 222 1 320 2 216 3 334 2 242 1 218 1 275 7 54 1 326 1 103 1 
356 1 222 4 320 2 33 2 6 4 242 2 35 2 37 1 275 22 346 2 326 2 66 1 38 2 211 12 286 1 212 3 289 2 17 4 72 1 98 2 45 2 294 2 334 8 216 10 218 2 54 1 265 1 103 3 
211 1 275 1 320 1 
216 1 242 1 275 1 
104 1 211 3 212 1 289 1 151 1 17 1 222 2 45 1 33 1 6 2 216 3 334 3 218 1 275 6 346 1 38 1 326 1 103 1 
222 1 320 1 33 1 6 2 242 1 226 1 275 12 346 1 38 1 326 2 211 6 120 1 95 1 212 2 289 2 17 1 189 1 232 1 368 1 45 1 216 6 334 2 51 1 218 2 103 2 
211 3 212 1 356 1 17 1 98 1 222 1 294 1 216 3 334 2 275 6 103 1 
211 2 286 1 17 1 222 1 98 1 45 1 33 1 294 1 6 2 216 1 334 2 35 1 275 3 37 1 346 1 38 1 265 1 
211 4 212 2 356 1 17 1 98 1 222 1 294 1 140 1 334 2 216 4 275 8 103 2 
212 1 17 1 45 1 33 1 6 2 216 2 334 1 51 1 218 1 275 2 346 1 38 1 
211 2 212 1 289 1 17 1 222 1 45 1 33 1 6 2 334 2 216 2 51 1 218 1 275 4 346 1 326 1 38 1 103 1 
211 2 286 1 17 1 98 1 222 1 45 3 33 3 294 1 6 6 334 2 216 1 174 1 51 1 35 1 275 3 346 3 38 3 
211 4 120 1 212 2 289 2 252 1 17 1 151 1 45 3 123 1 320 2 33 3 6 6 334 1 216 7 242 3 51 1 174 1 218 2 245 1 275 11 346 3 326 1 38 3 103 1 
356 1 222 1 320 1 33 1 6 2 242 1 275 7 37 1 346 1 38 1 211 4 120 1 212 1 95 1 98 1 45 1 294 1 216 3 334 1 51 1 103 1 265 1 
356 1 151 1 222 1 320 2 33 2 6 4 242 1 37 1 275 10 346 2 38 2 211 5 120 1 95 1 212 2 289 1 17 1 98 1 45 2 294 1 216 5 334 2 51 1 218 1 54 1 103 1 265 1 
211 2 120 1 212 1 95 1 289 1 189 1 45 1 320 1 33 1 6 2 216 3 242 1 226 1 51 1 218 1 275 5 346 1 38 1 
356 1 151 1 222 2 320 1 33 3 6 6 242 1 226 1 35 1 37 1 275 16 346 3 38 3 326 1 211 7 120 1 95 1 212 3 289 2 17 2 189 1 232 1 368 1 98 1 45 3 294 1 216 9 334 4 51 1 218 2 265 1 103 2 
356 1 222 1 320 1 33 1 6 2 242 1 275 7 37 1 346 1 38 1 211 4 120 1 212 1 95 1 98 1 45 1 294 1 216 3 334 1 51 1 103 1 265 1 
222 1 320 1 33 1 6 2 242 1 226 1 275 12 346 1 38 1 326 2 211 6 120 1 95 1 212 2 289 2 17 1 189 1 232 1 368 1 45 1 216 6 334 2 51 1 218 2 103 2 
211 2 120 1 212 1 95 1 289 1 189 1 151 1 45 2 320 1 33 2 6 4 216 3 242 1 226 1 51 1 218 1 275 5 346 2 38 2 
222 3 320 1 33 4 6 8 242 1 226 1 35 2 275 16 346 4 38 4 326 2 211 7 120 1 95 1 212 3 289 3 17 3 189 1 368 1 232 1 45 4 216 9 334 6 51 1 174 1 218 3 103 2 
211 5 212 2 17 4 356 2 98 4 222 5 22 1 294 4 140 1 334 9 216 5 275 10 37 1 103 2 265 1 
211 2 120 1 212 1 95 1 289 1 189 1 45 2 320 1 33 2 6 4 216 3 242 1 226 1 174 1 51 1 218 1 275 5 346 2 38 2 
12 1 243 1 195 1 369 1 364 1 215 1 370 1 
12 1 339 1 73 1 369 1 110 1 370 1 215 1 243 1 183 1 372 1 195 1 364 1 
241 1 160 1 36 1 32 1 247 1 262 1 315 1 18 1 263 1 192 1 157 1 
67 1 12 2 32 1 179 1 303 1 369 1 192 1 157 1 243 1 371 1 160 1 36 1 247 1 262 1 195 2 263 1 279 1 220 1 
67 2 12 2 301 1 70 1 32 1 179 1 303 1 369 2 99 1 305 1 192 1 157 1 243 1 371 1 143 1 91 1 36 3 247 1 262 1 195 2 263 2 279 1 220 2 
301 1 32 2 303 1 179 1 305 1 157 1 243 1 36 3 91 1 247 2 279 1 12 2 67 2 70 1 369 2 99 1 192 2 48 1 143 1 262 1 314 1 195 2 263 2 220 2 
31 1 70 1 367 2 32 3 190 1 99 1 192 3 155 1 202 1 333 2 157 1 225 1 142 1 160 1 91 1 36 4 247 3 262 1 314 1 210 1 263 1 116 1 220 1 
31 1 70 1 367 2 32 3 99 1 192 3 202 1 333 2 157 1 225 1 142 1 160 1 91 1 36 4 247 3 262 1 314 1 210 1 263 1 116 1 375 1 220 1 
345 1 32 1 247 1 262 1 192 1 157 1 
131 1 43 1 32 7 291 1 108 1 233 1 192 7 270 1 172 1 343 1 157 3 64 1 345 1 160 2 36 3 247 6 262 2 263 2 350 1 220 1 147 1 
178 2 356 1 32 1 222 1 303 1 179 1 33 2 157 1 6 4 243 2 36 1 361 1 275 5 37 1 247 1 346 2 279 1 38 2 211 3 12 2 67 1 13 2 131 1 212 1 166 1 230 1 98 1 45 2 369 1 192 1 293 1 294 1 216 2 334 1 371 1 262 1 195 2 263 1 220 1 103 1 265 1 376 1 336 1 
31 2 84 2 32 1 202 1 240 2 322 1 225 1 205 1 160 1 36 2 247 1 92 1 210 1 116 1 40 1 168 1 367 3 231 2 192 1 124 2 333 3 295 1 335 1 142 1 81 1 375 1 197 1 146 1 
131 1 32 2 202 1 192 2 343 1 157 2 8 1 345 1 36 2 247 2 262 1 263 1 220 1 
131 1 32 4 192 4 157 1 241 1 344 1 160 1 36 1 247 4 262 1 314 1 315 1 263 1 
70 1 32 2 2 1 192 2 88 1 172 1 157 2 64 1 184 1 36 1 247 2 262 1 263 1 220 1 
160 1 80 1 32 1 247 1 115 1 262 1 192 1 109 1 203 1 157 1 
131 1 188 1 36 1 32 2 247 2 262 1 263 1 108 1 192 2 157 1 147 1 
131 1 70 1 43 1 32 5 108 1 192 5 270 1 157 2 241 1 344 1 160 1 36 3 247 4 262 2 315 1 263 2 
131 1 70 1 43 1 32 5 108 1 74 1 192 5 157 2 241 1 344 1 160 1 36 3 247 4 262 2 315 1 263 2 
67 1 12 2 32 1 179 1 303 1 369 1 192 1 157 1 48 1 243 1 160 1 36 1 247 1 262 1 195 2 263 1 279 1 220 1 
70 1 32 1 233 1 192 1 172 1 343 1 157 2 64 1 36 1 247 1 262 1 263 1 220 1 
243 1 324 1 181 1 111 1 249 1 
301 1 367 2 152 1 44 1 305 1 181 2 333 2 111 2 243 1 335 1 142 1 143 1 259 1 324 1 210 1 116 1 42 1 309 1 249 2 
12 1 369 1 111 1 49 1 50 1 324 1 298 1 195 1 249 1 
324 1 152 1 309 1 
30 1 89 1 18 1 56 1 
30 1 267 1 89 1 317 1 292 1 56 1 87 1 
365 1 7 1 87 1 
30 1 267 1 285 1 317 3 292 1 358 1 87 3 89 1 144 1 209 1 56 1 282 2 
30 1 267 1 89 1 317 2 319 1 292 1 56 1 87 2 347 1 
267 1 30 1 317 1 149 1 292 1 358 1 87 1 193 1 80 1 115 1 161 1 
30 1 267 1 89 1 317 1 292 1 358 1 87 1 
267 1 89 2 317 1 292 1 56 1 358 1 87 1 
30 1 267 2 317 2 349 1 167 1 292 2 358 1 87 2 89 1 373 1 
267 1 30 2 317 3 97 1 331 1 292 1 319 2 358 1 87 3 193 1 89 1 194 1 56 1 
30 1 267 1 300 1 317 2 149 1 292 1 319 1 358 1 87 2 203 1 89 1 175 1 80 2 115 1 56 1 
267 2 30 2 317 4 97 1 200 1 292 2 319 2 358 1 87 4 193 1 89 1 56 1 347 1 
30 1 267 1 89 1 317 1 292 1 56 1 358 1 87 1 
285 1 267 1 30 3 317 4 311 1 97 1 319 2 292 1 87 4 193 1 89 2 144 1 56 2 282 1 
30 1 267 1 317 2 292 1 319 1 358 1 87 2 75 1 89 1 125 1 56 1 57 1 
285 1 30 1 267 1 317 3 1 1 292 1 358 1 87 3 89 1 144 2 56 1 282 2 
30 2 165 1 280 2 221 1 
267 1 317 1 134 1 292 1 358 1 87 1 
30 1 267 1 89 1 317 2 194 1 319 1 292 1 56 1 358 1 87 2 
141 1 
30 1 267 1 89 1 317 1 292 1 56 1 358 1 87 1 
267 1 30 1 317 3 319 1 292 1 358 1 87 3 89 1 194 1 56 1 282 1 
193 1 30 1 311 1 97 1 
30 1 89 1 

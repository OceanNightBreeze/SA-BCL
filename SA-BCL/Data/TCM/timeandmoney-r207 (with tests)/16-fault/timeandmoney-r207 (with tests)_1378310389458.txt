#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (51,81,269,293) (51,81,269,293) (51,81,269,293) 53 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 18 (247,338) (247,338) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 18 (247,338) (247,338) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 18 (247,338) (247,338) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 18 (247,338) (247,338) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 18 (2,120) (2,120) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (51,81,269,293) (51,81,269,293) (51,81,269,293) 53 0 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (51,81,269,293) (51,81,269,293) (51,81,269,293) 53 0 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 33 (86,255,366) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (58,253) (58,253) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (5,61,157) (5,61,157) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (5,61,157) (5,61,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (5,61,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (5,61,157) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 257 342 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 126 181 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 200 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 200 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 361 244 67 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 200 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 200 117 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 92 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 257 342 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 92 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 293 2 251 1 53 1 81 2 335 1 148 1 
18 1 51 1 293 1 251 1 247 1 81 1 335 1 148 1 338 1 
18 1 51 1 293 1 251 1 247 1 81 1 335 1 148 1 338 1 
18 1 51 1 293 1 251 1 247 1 81 1 335 1 148 1 338 1 
18 1 51 1 293 1 251 1 247 1 81 1 335 1 148 1 338 1 
167 1 51 1 269 3 368 1 81 4 94 1 16 1 148 1 344 2 82 1 28 1 293 1 32 1 30 2 9 3 197 1 47 1 335 4 
18 1 51 1 370 1 2 1 293 1 251 1 120 1 47 1 81 1 335 1 148 1 
0 1 51 2 39 1 293 2 251 1 269 1 53 1 81 3 335 2 148 1 
0 1 51 2 39 1 293 2 251 1 269 1 53 1 81 3 335 2 148 1 
165 1 201 1 314 1 14 1 158 1 62 1 315 1 151 1 186 1 278 1 88 1 163 1 190 1 21 1 
249 1 
165 1 201 1 254 1 246 1 314 1 14 1 158 1 62 1 315 1 151 1 277 1 249 1 278 1 186 1 88 1 163 1 190 1 133 1 21 1 
165 1 354 1 192 1 254 2 314 1 125 2 315 1 151 2 130 1 131 1 88 1 89 5 87 1 196 1 363 1 133 2 90 4 37 2 201 4 177 1 341 1 178 1 12 2 156 2 136 1 246 1 14 1 158 4 62 1 19 1 346 2 249 2 278 1 186 1 163 1 98 2 190 1 21 1 
92 1 249 1 133 1 
249 1 340 2 35 1 
274 1 165 2 278 2 186 2 88 2 163 2 62 2 190 1 
76 2 165 2 50 2 146 1 24 1 4 1 236 1 171 1 237 2 7 1 262 2 31 1 88 3 153 1 10 1 320 1 134 1 268 1 299 1 113 1 62 3 115 1 300 1 274 1 64 1 162 1 119 1 278 2 186 2 141 1 303 2 209 1 163 2 189 1 349 1 190 1 99 1 
165 1 315 1 278 1 186 1 88 1 163 1 314 1 14 1 62 1 190 1 
355 1 201 1 52 1 314 1 158 1 62 1 272 1 182 1 259 1 249 1 278 1 373 1 88 1 133 1 
165 1 201 2 355 1 314 1 158 2 62 1 182 1 259 1 249 1 186 1 278 1 373 1 88 1 163 1 133 1 
201 1 358 1 151 1 254 1 158 1 
165 1 201 1 254 1 246 1 314 1 14 1 158 1 62 1 325 1 315 1 151 1 249 1 278 1 186 1 88 1 163 1 190 1 133 1 21 1 
201 1 254 1 158 1 
274 2 165 1 41 1 118 1 186 1 278 2 88 2 163 1 62 2 
135 1 305 1 183 1 
50 1 62 1 24 1 113 1 300 1 274 1 236 1 141 1 262 1 31 1 88 1 72 1 303 1 349 1 153 1 320 1 
274 1 92 1 
165 1 50 1 135 1 24 1 113 1 62 2 300 1 236 1 186 1 278 1 141 1 262 1 31 1 88 2 303 1 349 1 153 1 362 1 121 1 320 1 
274 1 165 3 278 3 186 3 88 3 163 1 362 1 62 3 
165 1 278 1 186 1 88 1 314 1 14 1 62 1 
165 1 41 1 118 1 278 1 186 1 88 1 163 1 314 1 62 1 
76 2 165 3 50 1 355 1 146 1 314 1 24 1 236 1 171 1 259 1 237 1 262 1 31 1 88 4 153 1 362 1 10 1 11 1 320 1 201 1 268 1 158 1 113 1 62 4 115 1 182 1 300 1 274 1 64 1 118 1 162 1 119 1 278 3 186 3 373 1 141 1 188 1 303 1 209 1 349 1 163 2 121 1 190 1 99 1 
274 1 165 1 129 1 278 2 186 1 88 2 52 1 362 1 62 2 
165 3 201 1 355 1 158 1 314 1 62 3 182 1 259 1 118 1 249 1 186 3 278 3 373 1 88 3 163 1 362 2 121 1 175 1 11 1 
165 2 135 1 62 2 118 1 186 2 278 2 88 2 163 1 362 1 305 1 
50 1 62 1 113 1 24 1 300 1 274 1 236 1 141 1 262 1 31 1 88 1 303 1 349 1 153 1 320 1 
50 1 266 1 62 1 113 1 24 1 271 1 300 1 274 1 236 1 141 1 262 1 88 1 303 1 153 1 320 1 
76 2 101 1 283 1 311 1 146 1 124 1 85 1 237 4 10 1 134 2 12 1 135 2 115 1 114 1 183 2 64 1 95 1 276 1 162 2 252 1 98 1 209 1 99 1 305 2 
165 1 259 1 221 1 278 1 186 1 88 1 314 1 62 1 
165 4 52 1 62 5 222 1 274 1 129 1 118 1 186 4 278 5 280 1 88 5 163 1 362 2 121 1 
165 2 221 1 278 2 186 2 88 2 314 1 14 1 62 2 
68 1 255 1 33 1 86 1 
68 1 366 1 255 1 
68 1 255 1 
68 1 255 1 
33 1 86 1 
33 1 86 1 
33 1 86 1 
68 1 45 1 255 1 
68 1 45 1 255 1 
68 1 45 1 255 1 
68 1 255 1 152 1 
68 1 255 1 152 1 
68 1 255 1 152 1 
308 1 228 1 111 2 219 2 201 2 38 1 323 3 255 2 287 2 123 2 158 2 204 1 235 2 6 1 249 1 68 2 208 1 48 1 227 1 
165 2 77 1 255 1 123 1 83 1 235 1 88 2 154 1 219 1 111 1 201 1 323 1 38 1 366 1 158 1 62 2 274 1 68 1 186 2 278 2 143 1 225 1 145 1 327 1 
245 2 370 1 104 1 47 2 82 1 
368 1 47 1 82 1 
370 1 368 1 47 1 
245 1 370 1 44 1 104 1 47 3 82 2 
199 1 245 1 370 1 104 1 47 2 82 1 
201 3 179 1 254 1 313 1 246 1 158 3 160 1 63 1 151 3 249 1 69 1 133 1 
165 1 254 1 215 1 314 1 315 1 29 1 358 1 151 2 88 1 133 1 201 2 14 1 158 2 324 1 62 1 249 1 186 1 278 1 163 1 190 1 21 1 
311 1 313 1 125 1 151 2 173 2 89 2 133 1 35 2 90 3 37 1 218 2 201 3 178 1 179 1 340 4 12 1 158 3 63 1 276 1 346 1 249 3 69 1 224 1 98 1 225 1 374 1 
311 2 313 1 125 1 128 1 151 3 173 4 195 1 89 4 133 1 35 3 90 5 218 4 37 1 201 4 340 7 178 1 179 1 12 2 158 4 63 2 301 1 276 2 346 1 249 4 69 1 224 2 98 2 225 2 374 1 
106 1 
92 1 24 1 150 1 
132 1 24 1 
24 1 113 1 
220 1 312 1 24 3 113 1 150 2 300 1 
24 1 113 1 300 1 
24 1 80 1 
286 1 256 1 237 9 87 1 196 2 241 1 264 1 134 5 297 1 177 2 12 2 95 4 19 1 162 4 252 3 98 2 46 1 73 1 353 1 
76 2 284 1 311 3 286 2 256 1 146 1 230 1 149 1 237 35 8 4 87 1 196 3 10 1 241 2 264 2 295 1 134 18 297 7 177 3 365 1 12 5 19 1 64 1 95 13 276 3 162 17 140 1 224 3 252 6 98 5 350 1 46 1 99 1 75 3 353 1 
76 4 286 1 105 1 146 2 237 11 87 1 239 1 196 2 10 2 241 1 264 1 295 1 134 6 297 2 177 2 12 2 19 1 64 2 95 6 162 5 252 4 98 2 46 1 99 2 353 1 
286 1 256 1 237 9 87 1 196 2 241 1 264 1 134 5 297 1 177 2 12 2 95 4 19 1 162 4 252 3 98 2 46 1 353 1 
286 1 256 1 237 9 87 1 196 2 241 1 264 1 134 5 297 3 177 2 12 2 95 6 19 1 162 4 252 3 98 2 46 1 353 1 
50 1 51 1 81 1 42 1 206 2 317 1 293 1 141 1 262 1 251 2 303 1 58 1 253 1 335 1 
50 1 51 1 157 1 81 1 148 1 206 1 5 1 293 1 262 1 251 1 187 1 303 1 335 1 
50 1 51 1 157 1 81 1 148 1 206 1 5 1 293 1 97 1 262 1 251 1 303 1 335 1 
50 1 51 1 269 1 81 2 206 1 5 1 317 1 293 1 262 1 251 1 187 1 303 1 211 1 335 2 
50 1 206 1 251 1 262 1 187 1 303 1 269 1 61 1 81 1 211 1 335 1 
207 1 
37 1 50 1 201 1 342 1 254 2 246 1 158 1 125 1 257 1 346 1 141 1 262 1 131 1 89 1 142 1 303 1 374 1 90 1 
355 1 356 1 254 2 52 1 314 1 332 1 170 1 126 1 259 1 88 1 201 2 246 1 158 2 62 1 272 1 182 1 277 1 278 1 373 1 348 1 304 2 164 1 
355 1 201 2 328 1 356 1 254 1 246 1 52 1 314 1 158 2 332 1 62 1 170 1 272 1 182 1 259 1 277 1 249 1 278 1 373 1 88 1 304 3 348 1 164 1 133 1 
355 1 356 1 328 1 254 2 52 1 314 1 332 1 170 1 126 1 259 1 88 1 201 2 246 1 158 2 181 1 62 1 272 1 182 1 277 1 278 1 373 1 348 1 304 3 164 1 
201 1 277 1 254 1 246 1 158 1 
355 1 328 1 356 1 254 2 52 1 314 1 332 1 170 1 125 1 126 1 357 1 259 1 131 1 89 1 88 1 361 1 198 1 35 1 90 1 37 1 112 2 201 2 340 1 246 1 181 1 158 2 62 1 272 1 182 1 223 2 369 1 139 2 346 1 278 1 373 1 348 1 304 3 164 1 
200 1 355 1 201 2 356 1 52 1 314 1 158 2 332 1 62 1 170 1 272 1 182 1 259 1 278 1 373 1 88 1 304 2 348 1 164 1 
200 1 355 1 201 2 356 1 52 1 314 1 158 2 332 1 62 1 170 1 272 1 182 1 259 1 278 1 373 1 88 1 304 2 348 1 164 1 
355 1 356 1 254 2 23 1 52 1 314 1 332 1 170 1 125 1 126 1 289 1 260 1 259 1 131 1 89 1 88 1 361 1 90 1 37 1 244 1 201 2 340 1 246 1 181 1 158 2 62 1 272 1 182 1 223 1 139 1 346 1 67 1 278 1 373 1 348 1 304 2 226 1 164 1 
200 1 355 1 201 2 328 1 356 1 254 1 52 1 181 1 314 1 158 2 332 1 62 1 170 1 272 1 126 1 182 1 117 1 259 1 278 1 373 1 88 1 304 3 348 1 164 1 
200 1 355 1 201 2 328 1 356 1 254 1 52 1 181 1 314 1 158 2 332 1 62 1 170 1 272 1 126 1 182 1 117 1 259 1 278 1 373 1 88 1 304 3 348 1 164 1 
355 1 328 1 356 1 254 2 23 1 52 1 314 1 332 1 170 1 125 1 126 1 289 2 259 1 260 1 131 1 89 1 88 1 361 1 90 1 37 1 201 2 340 1 246 1 181 1 158 2 62 1 272 1 182 1 223 2 369 1 139 2 346 1 278 1 373 1 348 1 304 3 164 1 
50 6 146 2 232 1 4 1 236 3 237 2 109 1 155 1 10 2 337 1 243 1 110 1 299 2 113 3 62 1 115 2 300 1 65 1 64 2 162 1 119 1 303 7 209 2 76 4 212 1 165 1 168 1 24 4 85 1 262 7 88 1 360 1 362 1 320 4 134 1 364 1 367 1 186 1 278 1 97 1 141 2 326 1 99 2 
76 2 165 1 311 1 146 1 237 3 88 1 10 1 134 1 12 1 135 1 62 1 115 1 183 1 17 1 95 1 64 1 184 1 276 1 118 1 162 2 186 1 278 1 224 1 252 1 163 1 209 1 98 1 99 1 305 1 
76 2 92 1 177 1 146 1 115 1 95 1 64 1 85 1 252 1 209 1 196 1 46 1 10 1 99 1 353 1 
76 4 311 2 146 2 3 1 4 1 237 14 8 3 240 1 10 2 336 1 134 8 297 1 365 1 12 2 135 11 115 1 183 11 274 1 95 2 64 2 184 1 276 1 162 6 140 1 119 1 372 1 224 2 252 1 209 2 98 1 99 2 75 3 305 4 
50 1 165 1 76 2 146 1 24 1 236 1 4 1 237 2 262 1 31 1 88 2 153 1 362 1 10 1 320 1 134 1 339 1 176 1 113 1 62 2 115 1 273 1 300 1 274 1 184 1 64 1 162 1 278 1 186 1 119 1 141 1 303 1 72 1 349 1 209 1 121 1 99 1 305 1 
50 1 146 3 4 1 236 2 237 22 196 2 153 2 10 3 297 1 203 2 12 4 62 3 113 2 115 3 300 2 19 1 64 3 162 11 119 1 252 5 303 1 209 3 349 2 121 1 305 6 353 1 76 6 165 1 311 2 314 1 24 2 258 2 171 2 261 1 262 1 31 2 87 1 88 3 362 1 36 2 320 2 267 1 134 11 177 2 135 6 183 6 274 1 275 1 95 6 184 1 96 2 276 2 186 1 278 1 224 2 141 1 98 4 46 1 99 3 
76 2 134 2 297 1 311 1 12 1 135 1 146 1 115 1 124 1 183 1 95 1 64 1 85 1 237 2 209 1 10 1 99 1 305 1 
76 2 101 1 135 1 146 1 115 1 183 1 95 1 64 1 85 1 276 1 237 2 162 2 252 1 209 1 98 1 10 1 99 1 305 1 
76 2 311 1 146 1 85 1 237 4 10 1 134 2 297 1 12 1 135 2 115 1 183 2 64 1 95 2 276 1 162 2 224 1 252 1 209 1 98 1 99 1 305 2 
76 2 134 2 297 1 311 1 12 1 135 1 146 1 115 1 124 1 232 1 183 1 95 1 64 1 237 2 209 1 10 1 99 1 305 1 
76 2 101 1 135 1 146 1 115 1 232 1 183 1 95 1 64 1 276 1 237 2 162 2 252 1 209 1 98 1 10 1 99 1 305 1 
76 2 311 1 146 1 232 1 237 4 10 1 134 2 297 1 12 1 135 2 115 1 183 2 64 1 95 2 276 1 162 2 224 1 252 1 209 1 98 1 99 1 305 2 
76 2 311 1 146 1 237 4 10 1 134 2 297 1 12 1 135 2 115 1 183 2 64 1 95 2 276 1 162 2 224 1 252 1 209 1 98 1 99 1 305 2 
50 1 76 2 146 1 24 1 4 1 236 1 171 1 237 2 262 1 31 1 88 1 153 1 10 1 320 1 134 1 113 1 62 1 115 1 300 1 274 1 64 1 162 1 119 1 141 1 303 1 349 1 209 1 99 1 
50 1 76 2 146 1 24 1 4 1 236 1 237 2 262 1 88 1 153 1 10 1 320 1 266 1 134 1 113 1 62 1 271 1 115 1 300 1 274 1 64 1 162 1 119 1 141 1 71 1 303 1 209 1 99 1 
76 2 311 1 146 1 237 4 10 1 134 2 297 1 12 1 135 2 115 1 183 2 64 1 184 1 95 2 276 1 162 2 224 1 252 1 209 1 98 1 99 1 305 2 
50 1 76 2 311 1 146 1 24 1 258 1 236 1 171 1 237 4 262 1 31 1 88 1 153 1 10 1 320 1 134 2 297 1 12 1 135 2 113 1 62 1 115 1 183 2 300 1 95 2 64 1 276 1 162 2 97 1 224 1 252 1 303 1 98 1 349 1 209 1 99 1 305 2 
76 2 165 1 311 1 146 1 237 3 334 1 88 1 10 1 134 2 297 1 12 1 135 1 62 1 115 1 183 1 95 1 64 1 184 1 276 1 118 1 162 1 186 1 278 1 224 1 98 1 163 1 209 1 99 1 305 1 
76 4 213 1 311 3 105 1 146 2 169 2 290 1 172 1 291 1 237 19 8 2 10 2 134 9 297 3 365 1 12 3 13 2 60 1 64 2 95 6 345 1 276 3 185 1 162 10 140 1 224 3 252 3 98 3 99 2 75 1 
76 6 213 2 311 3 330 1 105 1 146 3 169 4 290 2 172 1 237 26 8 2 10 3 265 1 295 2 242 1 134 14 297 2 12 3 13 1 60 1 180 1 138 1 95 4 64 3 345 1 276 2 162 12 140 2 224 3 252 2 98 2 99 3 75 2 351 1 
76 6 213 1 311 4 330 1 105 1 146 3 169 4 290 2 172 1 237 36 8 4 196 1 10 3 265 1 295 1 242 1 134 17 297 4 177 1 365 1 12 4 13 1 60 1 180 1 138 1 64 3 95 8 345 1 276 4 185 1 162 19 140 3 224 4 252 4 98 4 46 1 99 3 351 1 75 3 352 1 353 1 
76 8 213 1 311 4 330 1 105 1 146 4 169 4 290 2 172 1 237 33 8 4 196 1 10 4 265 1 295 2 242 1 134 17 297 3 177 1 365 1 12 4 13 1 60 1 180 1 138 1 64 4 95 7 345 1 276 3 185 1 162 16 140 3 224 4 252 4 98 3 46 1 99 4 351 1 75 3 352 1 353 1 
76 4 213 1 311 7 330 1 105 1 146 2 169 4 3 2 290 1 172 1 237 47 8 4 196 1 10 2 265 1 295 1 242 1 134 24 297 7 177 1 365 2 12 7 13 1 60 1 180 1 138 1 64 2 95 14 345 1 276 7 162 23 140 2 224 7 252 7 98 7 46 1 99 2 351 1 75 4 353 1 
235 1 308 1 228 1 219 1 111 1 359 1 68 1 255 1 123 1 227 1 
366 1 327 1 
235 1 219 1 111 1 102 1 68 1 194 1 255 1 123 1 288 1 
308 1 228 1 201 1 111 1 219 1 38 1 323 2 255 1 287 1 123 1 158 1 204 1 235 1 6 1 249 1 68 1 48 1 227 1 
308 1 228 1 201 1 111 1 219 1 38 1 323 2 255 1 287 1 123 1 158 1 204 1 235 1 6 1 249 1 68 1 48 1 227 1 
308 1 228 1 201 1 111 1 219 1 38 1 323 2 255 1 287 1 123 1 158 1 204 1 235 1 6 1 249 1 68 1 48 1 227 1 
214 1 45 1 193 1 
214 1 45 1 193 1 
371 1 152 1 
214 1 371 1 152 1 
77 1 154 1 
165 2 77 1 287 1 255 1 123 1 83 1 235 1 151 1 88 2 57 1 154 1 201 1 219 1 111 1 323 1 366 1 204 1 158 1 62 2 274 1 68 1 186 2 278 2 143 1 225 1 145 1 327 1 
45 1 193 1 
214 1 371 1 152 1 
76 2 50 2 122 1 146 1 24 1 333 1 236 1 4 1 237 2 262 2 88 2 360 1 10 1 155 1 320 1 134 1 93 1 299 2 113 1 62 2 115 1 184 1 64 1 162 1 278 2 119 1 250 1 279 1 303 2 209 1 99 1 
50 1 168 1 367 1 331 1 24 1 113 1 236 1 292 1 141 1 262 1 108 1 303 1 294 1 320 1 
50 1 229 1 368 1 205 1 82 1 236 1 370 1 44 1 56 1 262 1 216 1 187 1 108 1 303 1 74 1 47 2 294 1 320 1 
50 2 229 1 368 1 205 1 82 1 236 1 370 1 44 1 97 1 56 1 262 2 216 1 187 1 108 1 303 2 74 1 47 2 294 1 320 1 
50 1 329 1 229 1 368 1 205 1 82 1 236 1 370 1 44 1 56 1 262 1 216 1 187 1 303 1 47 2 294 1 320 1 
281 1 
37 1 136 1 125 1 346 1 249 1 130 1 131 1 89 1 133 1 90 1 
218 5 341 1 311 2 340 10 156 2 12 2 96 1 276 2 173 5 249 5 224 2 89 5 98 2 35 5 90 5 
165 1 254 1 246 1 314 1 14 1 62 1 315 1 249 1 278 1 186 1 88 1 163 1 133 1 190 1 21 1 
50 1 37 1 342 1 254 2 246 1 125 1 257 1 346 1 141 1 262 1 319 1 131 1 89 1 142 1 303 1 374 1 90 1 
92 1 249 1 130 1 136 1 89 1 133 1 90 1 
37 1 112 1 340 1 254 1 246 1 125 1 357 1 346 1 249 1 131 1 89 1 133 1 198 1 35 1 90 1 
50 1 147 1 150 1 236 1 296 1 201 1 340 6 12 1 156 1 246 1 158 1 113 1 15 1 300 1 346 2 249 3 303 1 355 1 312 1 311 1 254 2 24 4 125 2 26 1 173 3 262 1 132 2 131 2 89 3 35 3 90 4 320 2 37 2 218 3 137 1 96 1 276 1 224 1 141 1 98 1 374 1 282 1 49 1 
330 1 8 1 340 6 341 1 12 2 156 2 246 1 14 1 62 1 346 2 249 5 163 1 75 1 351 1 21 1 165 1 311 2 254 1 314 1 79 1 125 2 27 1 315 1 173 5 131 2 88 1 89 5 133 2 35 3 265 1 90 8 37 2 218 5 180 1 138 1 276 2 224 2 140 1 186 1 278 1 142 1 98 2 374 1 190 1 
165 1 310 1 314 1 125 1 315 1 131 1 88 1 87 1 89 2 196 1 90 2 37 1 201 1 177 1 341 1 156 2 12 2 14 1 158 1 62 1 19 1 346 1 186 1 278 1 98 1 163 1 190 1 21 1 
76 2 50 1 165 2 146 1 24 1 236 1 171 1 237 1 262 1 31 1 88 3 153 1 10 1 320 1 268 1 62 3 113 1 115 1 300 1 274 1 64 1 162 1 119 1 278 2 186 2 141 1 303 1 163 2 349 1 209 1 190 1 99 1 
218 2 37 1 340 4 286 1 125 1 346 1 173 2 249 4 131 1 89 2 142 1 374 1 133 2 35 2 90 1 
219 1 123 1 34 1 154 1 306 1 
219 1 123 1 217 1 
219 1 123 1 217 1 
219 1 123 1 217 1 
219 1 123 1 25 1 
219 1 123 1 25 1 
219 1 123 1 25 1 
219 1 123 1 
68 1 255 1 
76 2 134 5 297 2 177 2 12 2 105 1 146 1 64 1 95 5 19 1 237 10 162 5 252 3 87 1 98 2 196 2 99 1 10 1 
76 2 134 2 297 1 311 1 12 1 105 1 146 1 64 1 95 1 237 2 10 1 99 1 
76 2 134 2 297 1 311 1 12 1 105 1 146 1 95 2 64 1 276 1 237 4 162 2 224 1 252 1 98 1 10 1 99 1 
295 1 76 6 134 1 297 1 177 1 105 1 146 3 84 1 64 3 95 2 237 3 185 1 162 2 252 1 196 1 10 3 99 3 
76 8 284 1 311 2 105 1 146 4 230 1 237 26 8 3 87 1 196 2 10 4 295 1 134 13 297 4 177 2 12 4 270 1 19 1 64 4 95 8 276 2 162 13 185 1 140 1 224 2 252 4 98 4 350 1 46 1 99 4 75 3 353 1 
76 4 146 2 237 12 87 1 196 2 10 2 295 1 134 6 297 3 177 2 12 2 64 2 95 6 19 1 162 6 252 3 98 2 46 1 99 2 353 1 
95 1 92 1 177 1 252 1 196 1 46 1 353 1 
76 2 134 2 297 1 311 1 12 1 270 1 146 1 95 2 64 1 276 1 237 4 162 2 224 1 252 1 98 1 10 1 99 1 
134 3 297 1 365 1 311 1 12 1 95 2 276 1 237 7 162 4 140 1 8 2 224 1 252 1 98 1 75 1 
76 2 311 2 146 1 3 1 237 20 8 2 87 1 196 2 10 1 336 1 295 1 134 10 297 2 177 2 365 1 12 4 19 1 95 6 64 1 276 2 162 10 224 2 252 4 98 4 46 1 99 1 75 2 353 1 
237 1 162 1 8 1 
134 1 237 1 75 1 
76 2 134 3 297 1 311 1 12 1 146 1 270 1 64 1 96 1 95 3 276 1 237 6 162 3 224 1 252 2 98 1 99 1 10 1 
76 2 311 2 105 1 330 1 146 1 237 12 8 1 10 1 265 1 134 6 297 1 12 2 180 1 138 1 64 1 95 2 276 2 162 6 140 1 224 2 252 1 98 2 99 1 75 1 351 1 
134 3 297 1 177 1 12 1 19 1 95 2 237 6 162 3 252 1 98 1 196 1 
295 1 76 2 134 1 297 1 177 1 146 1 95 2 84 1 64 1 237 3 162 2 252 1 196 1 46 1 10 1 99 1 353 1 
76 2 105 1 146 1 237 10 8 1 87 1 196 2 10 1 134 5 297 1 177 2 12 2 19 1 64 1 95 4 162 5 140 1 252 3 98 2 46 1 99 1 75 1 351 1 353 1 
76 4 311 1 105 1 146 2 237 13 8 2 87 1 196 2 10 2 134 7 297 2 177 2 365 1 12 3 270 1 19 1 64 2 95 5 162 6 140 1 224 1 252 3 98 2 46 1 99 2 351 1 75 1 353 1 
76 6 311 2 105 1 330 1 146 3 237 21 8 1 87 1 196 2 10 3 265 1 295 1 134 10 297 2 177 2 12 4 180 1 270 1 138 1 19 1 64 3 95 6 276 2 162 11 140 1 224 2 252 4 98 4 46 1 99 3 75 1 351 1 353 1 
76 6 311 2 105 1 330 1 146 3 237 19 8 1 87 1 196 2 10 3 265 1 295 1 134 11 297 4 177 2 12 4 180 1 270 1 138 1 19 1 64 3 95 8 276 1 162 8 140 1 224 2 252 4 98 3 46 1 99 3 75 1 351 1 353 1 
76 2 105 1 146 1 237 10 8 1 87 1 196 2 10 1 134 5 297 1 177 2 12 2 19 1 64 1 95 4 162 5 140 1 252 3 98 2 46 1 99 1 75 1 351 1 353 1 
76 2 311 2 105 1 330 1 146 1 237 12 8 1 10 1 265 1 134 6 297 1 12 2 180 1 138 1 64 1 95 2 276 2 162 6 140 1 224 2 252 1 98 2 99 1 75 1 351 1 
76 8 311 2 330 1 105 1 146 4 237 20 8 1 87 1 196 2 10 4 265 1 295 2 134 11 297 2 177 2 12 4 180 1 270 1 138 1 19 1 64 4 95 6 276 1 162 9 140 1 224 2 252 4 98 3 46 1 99 4 351 1 75 1 353 1 
76 8 311 3 330 1 105 1 146 4 237 16 8 1 10 4 265 1 295 2 134 9 297 3 12 3 180 1 138 1 64 4 95 6 276 2 162 7 185 1 140 1 224 3 252 3 98 2 99 4 351 1 75 1 
134 2 297 3 177 3 12 1 19 1 95 6 237 5 162 3 252 3 87 1 98 1 46 1 196 3 353 1 
76 8 311 2 330 1 105 1 146 4 237 20 8 1 87 1 196 2 10 4 265 1 295 2 134 11 297 2 177 2 12 4 180 1 138 1 19 1 64 4 95 6 276 1 162 9 185 1 140 1 224 2 252 4 98 3 46 1 99 4 351 1 75 1 353 1 
274 1 129 1 278 1 298 1 88 1 52 1 62 1 
161 1 144 1 231 1 54 1 307 1 
50 4 168 1 367 1 113 1 24 1 236 1 97 1 141 1 262 4 303 4 20 1 210 1 320 1 
212 1 50 2 243 1 110 1 113 1 24 1 300 1 116 1 236 1 262 2 303 2 109 1 100 1 320 2 
50 1 236 1 370 1 216 1 262 1 141 1 303 1 368 1 47 1 320 1 
50 2 236 1 97 1 250 1 262 2 187 1 303 2 360 1 24 1 113 1 320 1 
50 4 168 1 367 1 113 2 24 3 116 1 236 2 65 1 97 1 141 1 262 5 303 5 360 1 20 1 337 1 320 2 
50 4 59 1 168 1 367 1 113 2 24 3 116 1 236 2 65 1 97 1 141 1 262 5 303 5 360 1 20 1 320 2 
50 1 236 1 92 1 168 1 262 1 141 1 303 1 367 1 24 1 113 1 320 1 
165 1 50 1 24 1 113 1 62 2 300 1 274 1 236 1 186 1 278 1 141 1 262 1 88 2 303 1 349 1 153 1 362 1 320 1 
50 1 165 2 314 1 24 3 80 1 236 1 55 1 259 1 262 1 88 2 362 1 153 1 320 1 62 2 113 2 182 1 300 2 274 1 116 1 278 2 186 1 303 1 349 1 
50 2 165 2 314 1 24 3 80 1 236 1 55 1 259 1 262 2 88 2 362 1 153 1 320 1 62 2 113 2 271 1 182 1 300 2 274 1 116 1 278 2 186 1 303 2 210 1 
165 1 50 2 355 1 254 1 314 1 24 4 80 1 234 1 150 1 315 1 236 1 55 1 262 2 132 1 107 1 88 1 133 1 320 1 201 2 14 1 158 2 62 1 113 1 300 1 116 1 249 1 278 1 186 1 141 1 303 2 163 1 190 1 21 1 
50 3 296 1 355 1 201 2 254 1 158 2 80 1 113 1 24 4 300 1 150 1 55 1 116 1 236 1 249 1 141 1 262 3 132 1 303 3 133 1 210 1 320 1 
50 1 236 1 262 1 303 1 326 1 320 1 
212 1 50 5 364 1 312 1 299 1 113 2 24 3 300 1 65 1 236 2 97 1 141 2 262 6 303 6 109 1 360 1 326 1 337 1 321 1 320 3 
50 1 146 2 333 1 236 1 237 8 153 1 196 2 10 2 297 1 12 2 62 2 113 1 115 2 300 1 64 2 19 1 162 4 252 3 303 1 349 1 209 2 353 1 76 4 165 1 314 1 24 1 258 1 171 1 262 1 31 1 88 2 87 1 362 1 36 1 320 1 267 1 134 4 177 2 274 1 184 1 95 4 97 1 186 1 278 1 98 2 46 1 99 2 
50 1 147 1 150 1 151 1 196 1 296 1 201 2 341 1 156 2 12 2 246 1 14 1 158 2 62 1 15 1 19 1 346 2 249 2 303 1 163 1 21 1 165 1 355 1 254 2 314 1 24 2 125 2 315 1 262 1 130 1 132 1 319 1 131 2 88 1 89 5 87 1 133 2 90 4 37 2 177 1 136 1 186 1 278 1 141 1 98 2 190 1 282 1 
50 2 312 1 113 1 24 2 26 1 150 1 300 1 236 1 97 1 262 2 303 2 326 1 320 2 
165 1 50 1 24 1 113 1 62 2 271 1 300 1 274 1 236 1 186 1 278 1 141 1 262 1 88 2 303 1 153 1 362 1 320 1 
212 1 50 1 312 1 113 1 24 1 300 1 116 1 236 1 262 1 303 1 109 1 321 1 320 2 
93 1 122 1 78 1 22 1 62 1 278 1 279 1 88 1 174 1 
309 1 70 1 22 1 
274 1 302 1 78 1 22 1 174 1 
355 1 201 2 309 1 78 2 22 1 314 1 158 2 182 1 274 1 259 1 151 1 249 1 70 1 302 2 373 1 263 1 133 1 174 2 11 1 
167 1 51 1 293 1 9 1 81 1 16 1 335 1 148 1 
167 2 51 1 202 1 269 2 40 1 81 4 16 2 344 1 233 1 293 1 32 1 9 3 191 1 335 4 
167 1 51 1 1 1 39 1 269 1 81 2 16 1 148 1 293 1 9 1 347 1 335 2 
167 1 51 1 202 1 293 1 9 1 343 1 40 2 81 3 16 1 335 3 148 1 233 2 
127 2 43 1 285 1 9 2 
166 1 51 1 293 1 81 1 335 1 148 1 
167 1 66 1 51 1 293 1 9 1 269 1 81 2 16 1 335 2 148 1 
103 1 
167 1 51 1 293 1 9 1 81 1 16 1 335 1 148 1 
167 1 92 1 9 1 16 1 
167 1 51 1 293 1 9 1 81 1 16 1 335 1 
251 1 335 1 91 1 
167 1 51 1 202 1 293 1 9 1 248 1 40 1 81 3 16 1 335 3 148 1 233 2 
167 1 51 1 293 1 9 1 30 1 269 1 81 2 16 1 335 2 
51 1 368 1 81 1 148 1 344 1 82 1 28 1 293 1 9 1 47 1 335 1 
51 1 293 1 9 1 81 1 16 1 335 1 148 1 
167 1 51 1 293 1 81 1 16 2 335 1 148 1 
322 1 51 2 81 2 16 1 148 1 318 1 293 2 9 1 238 1 335 2 
167 1 51 1 269 2 81 3 16 1 148 1 344 1 316 1 66 1 293 1 32 1 9 2 335 3 
167 1 51 1 269 1 368 1 81 2 16 1 148 1 159 1 82 1 370 1 293 1 44 1 9 1 47 2 335 2 
167 1 51 2 269 2 81 4 16 1 148 1 344 1 293 2 30 1 32 1 9 2 197 1 335 4 
167 1 66 1 51 1 293 1 9 1 269 1 81 3 16 1 335 3 148 1 233 1 
9 1 32 1 191 1 344 1 
9 1 16 1 

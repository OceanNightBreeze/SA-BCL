#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 105 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (86,155) (86,155) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 175 310 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 105 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 52 182 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 140 275 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 224 178 312 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 224 178 312 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 224 178 231 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 140 275 59 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 140 275 59 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (86,155) (86,155) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (86,155) (86,155) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (86,155) (86,155) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 126 184 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 105 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 261 (114,235) 195 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 79 214 287 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (238,277) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (56,290) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 134 1 300 4 5 6 97 1 15 2 144 9 68 1 104 2 148 5 19 2 21 1 78 1 318 1 33 2 116 1 322 1 38 1 236 9 166 1 165 1 41 1 278 1 332 3 242 2 243 2 49 1 208 1 
0 2 134 1 300 4 5 6 97 1 15 2 144 9 68 1 104 2 148 5 21 1 19 2 78 1 318 1 33 2 116 1 322 1 38 1 236 9 166 1 165 1 41 1 278 1 332 3 242 2 243 2 49 1 208 1 
0 2 134 1 300 5 5 7 97 1 15 2 144 10 68 1 104 2 148 6 21 1 19 2 78 1 318 1 33 2 116 1 322 1 38 1 236 10 166 1 165 1 41 1 278 1 332 4 242 2 243 2 49 1 208 1 
0 2 134 1 300 3 5 4 97 1 15 2 144 7 104 2 148 4 21 1 19 1 78 1 318 1 33 2 116 1 322 1 38 1 236 7 166 1 165 1 41 1 278 1 332 2 242 2 243 2 49 1 208 1 
0 1 5 3 300 2 38 1 236 4 165 1 41 1 15 1 332 1 144 4 68 1 104 1 148 3 242 1 19 2 243 1 208 1 318 1 
33 1 8 1 83 1 38 1 236 2 41 1 15 1 144 2 148 1 104 1 241 1 242 1 243 1 49 1 208 1 78 1 
300 1 5 1 33 1 38 1 236 3 41 1 15 2 278 1 144 3 332 1 104 2 148 2 208 1 
0 1 320 1 5 7 300 4 33 1 38 1 97 1 236 9 165 1 166 1 41 1 15 2 278 1 144 9 332 3 68 1 148 5 104 2 242 1 19 2 243 1 154 1 208 1 318 1 
0 1 320 1 5 7 300 4 33 1 38 1 97 1 236 9 165 1 166 1 41 1 15 2 278 1 144 9 332 3 68 1 148 5 104 2 242 1 19 2 243 1 154 1 208 1 318 1 
105 1 
297 1 212 1 80 1 115 1 217 1 331 1 309 1 282 1 334 1 48 1 153 1 26 1 
297 1 80 1 115 2 58 1 217 1 331 1 309 1 334 2 282 1 48 1 108 1 267 1 26 1 
259 1 115 1 334 1 
259 1 115 1 334 1 
115 1 334 1 
259 1 115 1 334 1 
259 1 115 1 334 1 
259 1 115 2 176 1 334 2 
105 1 269 1 
58 1 64 1 217 2 309 2 149 1 282 1 244 1 108 1 267 1 269 1 26 2 
183 1 102 1 171 1 
186 1 138 1 158 1 118 1 233 1 323 1 324 1 177 2 145 1 309 1 146 1 240 2 202 1 50 1 22 1 290 1 269 1 26 1 174 2 
186 1 158 1 118 1 58 1 233 1 177 1 217 1 102 1 145 1 309 2 240 1 202 1 50 1 22 1 290 1 267 1 27 1 26 2 210 1 174 1 
226 1 212 1 58 4 14 1 64 1 217 5 18 1 309 5 149 1 282 1 267 4 108 1 269 1 27 2 26 5 210 1 
217 1 54 1 309 1 282 1 58 1 267 1 26 1 
58 2 217 2 309 2 149 1 282 1 267 2 269 1 26 2 27 1 
217 1 54 1 309 1 282 1 58 1 267 1 26 1 
58 1 64 1 217 1 309 1 282 1 244 1 108 1 267 1 26 1 
297 1 80 1 115 1 57 1 58 2 64 1 217 2 331 1 309 2 334 1 282 1 48 1 267 2 108 1 27 1 26 2 210 1 211 1 
212 1 58 1 14 1 217 2 309 2 149 1 282 1 267 1 269 1 27 1 26 2 
297 1 80 1 115 1 58 1 39 1 217 1 331 1 309 1 334 1 282 1 48 1 267 1 27 1 26 1 210 1 211 1 
58 2 64 1 217 2 102 1 309 2 171 1 108 1 267 2 27 1 26 2 
186 1 158 1 118 1 233 1 177 1 145 1 309 1 240 1 202 1 50 1 22 1 290 1 269 1 26 1 174 1 
186 1 158 1 118 1 233 1 177 1 277 1 309 1 240 1 202 1 50 1 22 1 206 1 269 1 26 1 174 1 
131 1 3 2 298 1 305 2 141 4 63 1 102 2 67 1 29 1 183 2 113 2 112 1 189 1 273 1 276 1 161 1 163 1 237 1 168 1 280 1 285 1 171 2 172 1 294 1 
301 1 80 1 58 1 217 1 309 1 282 1 267 1 26 1 
250 1 335 1 
250 1 335 1 
313 1 84 1 
313 1 84 1 
313 1 84 1 
43 1 250 1 335 1 
250 1 204 1 335 1 
250 2 219 1 20 1 313 1 335 2 84 1 
43 1 250 1 335 1 
43 1 250 1 335 1 
198 1 250 1 335 1 
198 1 250 1 335 1 
198 1 250 1 335 1 
225 1 250 1 157 1 115 1 190 1 58 1 326 1 217 1 309 1 334 1 335 1 126 1 107 1 267 1 53 1 26 1 
225 2 250 2 157 2 115 2 190 2 326 2 120 1 86 1 47 1 334 2 335 2 107 1 155 1 53 2 
0 1 242 1 243 1 
242 1 243 1 83 1 
0 2 65 1 46 1 243 3 83 1 306 1 
0 1 42 1 65 1 46 1 243 2 83 1 
0 1 65 1 46 2 243 2 83 1 
259 1 115 1 334 1 255 1 
130 1 259 2 115 2 72 1 334 2 40 1 
175 1 259 1 333 1 115 2 334 2 176 1 119 1 
175 1 310 1 115 1 333 1 334 1 176 1 119 1 
147 1 105 1 
186 1 245 1 
199 1 
186 1 202 1 158 1 
186 1 316 1 
186 1 202 1 
199 1 271 1 186 1 147 2 202 1 222 1 158 1 
29 1 3 3 298 1 113 3 188 1 160 1 329 1 141 6 237 4 85 2 45 1 218 2 285 2 169 2 23 1 25 1 90 1 
29 1 3 3 298 1 113 3 188 1 160 1 329 1 141 6 237 4 85 2 45 1 218 2 285 2 169 2 23 1 25 1 90 1 
29 1 3 3 298 1 113 3 188 1 160 1 329 1 141 6 237 4 85 2 45 1 218 2 285 2 169 2 23 1 266 1 25 1 90 1 
3 12 298 3 305 4 139 1 304 2 214 1 141 23 62 1 63 2 218 1 25 1 29 3 156 1 79 4 112 2 113 11 160 1 81 3 35 1 161 3 329 1 85 1 121 1 237 6 45 2 168 2 285 2 288 1 172 3 169 4 337 3 294 2 
3 4 298 1 305 4 304 1 10 1 141 8 63 2 218 2 23 1 25 1 317 1 29 1 112 2 113 4 188 1 329 1 237 4 85 2 45 1 168 2 285 3 169 1 90 1 294 2 
0 1 133 1 5 1 177 1 143 1 306 1 15 1 144 2 148 1 73 1 104 1 151 1 22 1 319 1 321 1 272 1 33 1 191 1 118 1 83 1 38 1 236 2 41 1 240 1 242 1 283 1 243 2 88 1 208 1 174 1 
0 1 133 1 5 2 177 1 306 1 15 1 144 3 148 1 73 1 104 1 151 1 265 1 22 1 319 1 228 1 272 1 33 1 191 1 118 1 83 1 38 1 236 3 240 1 242 1 283 1 243 2 88 1 248 1 208 1 174 1 
0 1 133 1 5 2 177 1 306 1 144 2 148 1 73 1 151 1 265 1 22 1 319 1 272 1 33 1 118 1 83 1 38 1 236 2 240 1 283 1 242 1 243 2 248 1 208 1 174 1 
133 2 177 1 15 1 144 1 73 2 104 1 311 1 22 1 314 1 186 1 228 1 33 2 118 1 325 1 236 1 279 1 240 1 202 1 283 2 281 1 50 1 128 1 174 1 
0 1 133 1 177 1 306 1 15 1 144 1 73 1 104 1 151 1 265 1 22 1 319 1 321 1 272 1 33 1 191 1 118 1 83 1 236 1 41 1 240 1 242 1 283 1 243 2 88 1 174 1 
98 1 
136 1 115 1 177 1 142 1 216 1 308 1 240 1 334 1 50 1 289 1 52 1 182 1 28 1 174 1 
297 1 185 1 80 1 212 1 115 2 232 1 140 1 100 1 217 1 331 1 17 1 309 1 282 1 334 2 48 1 153 1 92 1 26 1 
297 1 185 1 80 1 212 1 115 2 232 1 99 1 100 1 217 1 331 1 17 1 309 1 282 1 334 2 48 1 153 1 92 1 26 1 
297 1 185 1 80 1 212 1 115 2 232 1 140 1 275 1 100 1 217 1 331 1 17 1 309 1 282 1 334 2 48 1 153 1 92 1 26 1 
115 1 334 1 
297 1 136 1 212 1 252 1 302 1 303 1 142 1 216 1 100 1 217 1 17 1 309 1 264 1 153 1 224 1 181 1 26 1 28 1 185 1 80 1 115 2 232 1 331 1 334 2 282 1 48 1 289 1 92 1 
297 1 252 1 212 1 136 1 302 1 303 1 142 1 216 1 100 1 217 1 309 1 17 1 178 1 103 1 264 1 153 1 312 1 224 1 181 1 26 1 28 1 185 1 80 1 115 2 232 1 331 1 334 2 282 1 48 1 289 1 92 1 
297 1 252 1 212 1 136 1 302 1 303 1 142 1 216 1 100 1 217 1 309 1 17 1 178 1 103 1 264 1 153 1 312 1 224 1 181 1 26 1 28 1 185 1 80 1 115 2 232 1 331 1 334 2 282 1 48 1 289 1 92 1 
297 1 212 1 136 1 302 1 303 1 11 1 142 1 216 1 100 1 217 1 309 1 17 1 178 1 221 1 264 1 153 1 224 1 26 1 28 1 185 1 80 1 115 2 231 1 232 1 196 1 331 1 334 2 282 1 48 1 289 1 92 1 
297 1 185 1 80 1 212 1 115 2 59 1 232 1 140 1 275 1 100 1 217 1 331 1 17 1 309 1 282 1 334 2 48 1 153 1 92 1 26 1 
297 1 185 1 80 1 212 1 115 2 59 1 232 1 140 1 275 1 100 1 217 1 331 1 17 1 309 1 282 1 334 2 48 1 153 1 92 1 26 1 
297 1 136 1 212 1 302 1 303 1 11 1 142 1 216 1 100 1 217 1 17 1 309 1 221 1 264 1 153 1 224 1 26 1 28 1 185 1 80 1 115 2 232 1 331 1 334 2 282 1 48 1 289 1 92 1 
29 1 3 3 298 1 113 2 112 1 188 1 305 2 276 1 141 5 163 1 237 2 63 1 85 2 218 2 280 1 168 1 105 1 285 2 23 1 269 2 90 1 294 1 
3 9 55 1 298 2 253 1 305 4 139 2 214 1 141 22 63 2 102 12 106 1 269 1 183 12 29 4 79 4 112 2 113 13 192 1 81 4 276 1 161 2 163 2 237 4 168 2 123 2 285 2 169 2 172 4 171 6 337 4 91 1 173 1 294 2 
55 1 3 1 58 1 305 2 141 2 63 1 101 1 217 1 309 1 262 1 149 1 267 1 269 1 26 1 27 1 112 1 113 1 192 1 276 1 163 1 168 1 282 1 171 1 205 1 91 1 294 1 210 1 
3 7 95 1 177 1 13 2 102 3 260 1 22 2 23 1 267 1 269 2 27 1 26 3 183 3 29 2 112 3 186 2 113 6 114 2 188 1 192 1 118 2 276 3 202 2 285 3 50 1 290 2 210 1 294 3 295 1 55 1 298 2 305 6 58 1 141 13 63 3 217 1 145 2 218 2 309 3 315 2 158 2 82 1 233 2 161 1 163 3 85 2 237 3 168 3 240 1 171 3 172 1 337 1 90 1 91 1 174 1 
2 1 3 1 138 2 58 1 305 4 177 8 256 1 141 2 143 1 63 2 217 1 309 1 265 1 22 2 267 1 77 1 26 1 27 1 186 3 112 2 113 1 192 1 118 2 276 2 274 1 163 2 167 1 280 1 168 2 240 8 202 2 281 1 87 1 50 2 124 1 128 1 91 1 174 7 294 2 
55 1 3 2 298 1 58 1 305 2 215 1 141 3 63 1 64 1 217 1 102 1 309 1 108 1 267 1 26 1 183 1 29 1 112 1 113 1 276 1 161 1 163 1 237 1 168 1 285 1 171 1 172 1 337 1 294 1 
183 1 29 1 112 1 113 2 189 1 305 2 276 1 141 2 163 1 237 1 63 1 102 1 280 1 168 1 169 1 171 1 172 1 294 1 
183 1 131 1 3 2 112 1 298 1 305 2 276 1 161 1 141 2 163 1 237 1 63 1 102 1 280 1 168 1 285 1 171 1 294 1 
183 2 29 1 3 2 298 1 112 1 113 2 305 2 276 1 161 1 141 4 163 1 237 2 63 1 102 2 280 1 168 1 285 1 169 1 171 2 172 1 337 1 294 1 
183 1 29 1 112 1 113 2 189 1 305 2 276 1 141 2 163 1 237 1 63 1 102 1 168 1 169 1 171 1 172 1 77 1 294 1 
183 1 131 1 3 2 112 1 298 1 305 2 276 1 161 1 141 2 163 1 237 1 63 1 102 1 168 1 285 1 171 1 77 1 294 1 
183 2 29 1 3 2 298 1 112 1 113 2 305 2 276 1 161 1 141 4 163 1 237 2 63 1 102 2 168 1 285 1 169 1 171 2 172 1 337 1 77 1 294 1 
183 2 29 1 3 2 298 1 112 1 113 2 305 2 276 1 161 1 163 1 141 4 237 2 63 1 102 2 168 1 285 1 169 1 171 2 172 1 337 1 294 1 
3 1 305 2 177 1 141 2 63 1 13 1 145 1 309 1 22 1 269 1 26 1 113 1 186 1 112 1 158 1 192 1 118 1 233 1 276 1 163 1 168 1 240 1 202 1 50 1 290 1 91 1 174 1 294 1 
3 1 305 2 177 1 141 2 63 1 309 1 22 1 76 1 269 1 26 1 113 1 186 1 112 1 158 1 192 1 118 1 233 1 276 1 163 1 277 1 168 1 240 1 202 1 50 1 206 1 91 1 174 1 294 1 
183 2 29 1 3 2 55 1 298 1 112 1 113 2 305 2 276 1 161 1 141 4 163 1 237 2 63 1 102 2 168 1 285 1 169 1 171 2 172 1 337 1 294 1 
3 2 298 1 305 2 177 1 141 4 143 1 63 1 13 1 102 2 145 1 309 1 22 1 315 1 26 1 183 2 29 1 113 2 186 1 112 1 158 1 118 1 233 1 276 1 161 1 163 1 237 2 168 1 240 1 202 1 285 1 169 1 171 2 172 1 290 1 337 1 174 1 294 1 
3 1 55 1 298 1 58 1 305 2 141 3 63 1 64 1 217 1 102 1 309 1 108 1 267 1 26 1 29 1 183 1 112 1 113 2 159 1 276 1 161 1 163 1 237 1 168 1 169 1 172 1 171 1 337 1 294 1 
1 1 3 16 135 1 298 4 137 4 305 4 139 2 214 2 141 30 63 2 307 2 71 1 263 1 317 1 110 1 29 4 79 4 112 2 113 14 187 1 81 2 161 4 197 1 237 6 168 2 285 3 287 1 203 1 172 4 169 3 337 4 294 2 
1 1 3 16 135 1 298 4 137 4 305 2 139 2 214 2 141 31 63 1 307 1 71 2 317 1 110 2 29 4 79 4 112 1 113 15 187 1 81 3 161 4 237 2 197 1 168 1 123 1 285 1 287 1 169 1 172 4 337 4 294 1 
1 1 3 18 135 1 298 4 137 4 305 4 139 3 214 3 141 39 63 2 307 1 71 1 180 1 317 1 110 2 29 6 79 6 112 2 113 21 187 1 81 5 161 4 197 1 237 6 168 2 123 2 285 2 287 1 203 1 172 6 169 4 337 6 294 2 
1 1 3 22 135 1 298 6 137 4 305 4 139 3 214 3 141 43 63 2 307 1 71 1 180 1 317 1 110 2 29 6 79 6 112 2 113 21 187 1 81 5 161 6 197 1 237 7 168 2 123 2 285 3 287 1 203 1 172 6 169 4 337 6 294 2 
1 1 3 35 135 1 298 11 137 4 305 2 139 2 214 2 141 66 63 1 307 1 218 8 71 1 223 1 23 4 317 1 110 1 29 11 79 4 112 1 113 31 187 1 188 4 81 4 161 7 85 8 197 1 237 16 44 1 200 1 168 1 123 2 285 12 287 1 169 4 172 7 337 7 89 1 90 4 294 1 
225 1 250 1 219 1 70 1 157 1 201 1 190 1 335 1 326 1 109 1 
69 1 204 1 
225 1 250 1 157 1 179 1 190 1 284 1 335 1 326 1 129 1 
43 1 96 1 
198 1 20 1 117 1 
225 1 250 1 157 1 115 1 190 1 326 1 120 1 86 1 47 1 334 1 335 1 107 1 155 1 53 2 
225 1 250 1 157 1 115 1 190 1 326 1 120 1 86 1 47 1 334 1 335 1 107 1 155 1 53 2 
225 1 250 1 157 1 115 1 190 1 326 1 120 1 86 1 47 1 334 1 335 1 107 1 155 1 53 2 
43 1 20 1 96 1 
43 1 20 1 96 1 
198 1 117 1 
198 1 20 1 117 1 
296 1 61 1 
225 1 184 1 250 1 259 1 157 1 47 1 115 1 334 1 190 1 335 1 120 1 326 1 126 1 53 1 
2 1 249 1 55 1 3 1 138 2 305 2 177 2 141 2 63 1 217 2 309 2 74 1 22 1 26 2 186 1 112 1 113 1 192 1 118 1 276 1 274 1 163 1 122 1 168 1 240 2 239 1 202 1 292 1 91 1 294 1 174 2 
0 1 133 1 272 1 118 1 9 1 83 1 177 2 143 1 330 1 306 1 240 2 242 1 151 1 243 2 265 1 22 1 51 1 88 1 174 2 
0 1 133 1 272 1 118 1 83 1 177 1 164 1 330 1 306 1 240 1 242 1 151 1 243 2 265 1 22 1 88 1 174 1 
133 1 186 1 118 1 9 1 177 1 279 1 240 1 202 1 281 1 50 1 22 1 268 1 128 1 174 1 
0 1 133 1 272 1 118 1 9 1 83 1 177 1 330 1 306 1 240 1 242 1 151 1 243 2 265 1 22 1 51 1 88 1 174 1 
66 1 
105 1 
252 1 136 1 302 1 289 1 181 1 142 1 216 1 28 1 
186 2 136 1 158 1 213 1 118 1 177 1 235 1 142 1 195 1 216 1 308 1 261 1 240 1 202 1 222 1 50 1 245 1 22 2 289 1 28 1 174 1 
79 1 136 1 287 1 214 1 289 1 142 1 216 1 28 1 
29 2 111 1 298 1 136 1 302 2 115 1 188 1 142 1 216 1 85 1 218 1 103 1 334 1 289 1 247 2 207 1 28 1 
136 1 289 1 216 1 28 1 
240 1 50 1 177 1 174 1 
136 1 302 1 150 1 289 1 142 1 216 1 308 1 28 1 
157 1 220 1 190 1 
296 1 157 1 190 1 109 1 258 1 
157 1 220 1 190 1 
157 1 220 1 190 1 
157 1 190 1 246 1 
157 1 190 1 246 1 
157 1 190 1 246 1 
157 1 190 1 
250 1 335 1 
29 1 3 5 298 1 113 4 112 2 188 1 305 4 304 1 141 9 237 4 63 2 85 2 168 2 218 2 285 2 169 2 23 1 90 1 294 2 
29 1 3 3 298 1 113 2 218 2 188 1 105 1 285 2 23 1 141 5 90 1 237 2 85 2 
29 1 3 2 298 1 112 1 113 2 7 1 305 2 161 1 141 4 237 2 63 1 168 1 285 1 172 1 169 1 337 1 294 1 
29 1 79 2 3 4 113 3 298 1 81 1 139 1 214 1 161 1 141 7 172 1 337 1 
3 12 298 4 139 1 253 1 304 1 305 2 141 22 63 1 218 4 23 1 29 4 111 1 79 2 113 10 112 1 188 2 81 2 161 2 85 4 237 9 168 1 285 4 123 1 172 2 169 5 337 2 90 1 294 1 
3 1 79 1 141 1 
113 1 81 1 141 1 
29 1 3 3 112 1 113 3 298 1 305 2 7 1 82 1 161 1 141 6 63 1 237 3 168 1 285 2 172 1 169 1 337 1 294 1 
3 11 298 4 305 2 139 1 214 1 141 22 63 1 223 1 317 1 29 4 79 2 112 1 113 11 81 2 161 4 237 4 44 1 200 1 168 1 285 2 123 1 287 1 172 4 169 2 337 4 89 1 294 1 
29 1 3 2 113 2 298 1 188 1 141 4 85 1 237 1 218 1 285 1 
3 2 113 1 112 1 304 1 305 2 141 3 237 2 85 1 62 1 63 1 218 1 168 1 285 1 169 1 23 1 90 1 294 1 
29 1 3 3 111 1 298 1 113 2 218 2 188 1 285 2 141 5 237 2 85 2 
29 1 112 1 113 2 305 2 141 2 63 1 237 1 168 1 172 1 169 1 317 1 294 1 
29 1 3 2 298 1 112 1 113 2 305 2 161 1 141 4 237 2 63 1 168 1 285 1 172 1 169 1 337 1 317 1 294 1 
3 2 112 3 113 1 304 1 305 6 141 3 62 1 63 3 85 1 237 2 168 3 218 1 285 1 203 1 169 1 317 1 294 3 
3 8 298 1 7 1 305 8 304 1 214 1 141 14 63 4 62 1 218 3 23 1 317 1 29 1 111 1 79 1 112 4 113 6 188 1 81 1 237 6 85 3 168 4 285 3 169 3 288 1 203 1 90 1 294 4 
3 10 298 3 304 1 305 4 214 1 141 21 63 2 218 4 223 1 23 1 317 1 29 4 111 1 79 1 112 2 113 11 188 2 81 1 161 1 85 4 237 10 44 1 168 2 200 1 285 5 287 1 169 5 172 2 337 2 89 1 90 1 294 2 
3 5 298 1 305 4 7 1 139 1 214 1 141 10 63 2 218 2 23 1 317 1 29 2 79 2 112 2 113 5 188 1 81 1 85 2 237 3 168 2 285 2 287 1 172 1 169 1 337 1 90 1 294 2 
3 7 298 2 305 4 139 1 7 1 214 1 141 12 63 2 218 2 23 1 317 1 29 2 79 2 112 2 113 5 188 1 81 1 161 1 237 2 85 2 168 2 285 2 287 1 172 1 337 1 90 1 294 2 
3 12 298 4 7 1 304 1 305 6 139 1 214 1 141 26 63 3 218 2 223 1 23 1 317 1 29 5 79 2 112 3 113 14 188 1 81 2 161 3 85 2 237 8 44 1 200 1 168 3 285 4 123 1 287 1 172 4 169 4 337 4 89 1 90 1 294 3 
3 10 298 3 304 1 305 4 214 1 141 21 63 2 218 4 223 1 23 1 317 1 29 4 111 1 79 1 112 2 113 11 188 2 81 1 161 1 85 4 237 10 44 1 168 2 200 1 285 5 287 1 169 5 172 2 337 2 89 1 90 1 294 2 
3 11 298 4 305 2 139 1 214 1 141 22 63 1 223 1 317 1 29 4 79 2 112 1 113 11 81 2 161 4 237 4 44 1 200 1 168 1 285 2 123 1 287 1 172 4 169 2 337 4 89 1 294 1 
3 4 298 1 7 1 305 4 139 1 214 1 141 7 63 2 317 1 29 1 79 2 112 2 113 3 81 1 161 1 168 2 287 1 172 1 337 1 294 2 
3 4 298 1 305 4 139 1 214 1 141 7 63 2 317 1 29 1 79 2 112 2 113 3 81 1 161 1 237 1 168 2 285 1 287 1 203 1 172 1 337 1 294 2 
29 1 3 4 298 1 113 3 188 1 141 7 85 2 237 4 218 2 285 2 169 2 23 1 90 2 
3 4 298 1 305 4 139 1 214 1 141 7 63 2 317 1 29 1 79 2 112 2 113 3 81 1 161 1 168 2 287 1 203 1 172 1 337 1 294 2 
217 1 309 1 212 1 170 1 269 1 26 1 14 1 
132 1 212 1 328 1 162 1 14 1 217 1 309 1 286 1 170 1 125 1 269 1 26 1 
186 1 240 1 202 1 281 1 105 1 118 1 50 1 22 1 177 1 128 1 174 1 
186 1 158 1 58 1 118 1 233 1 177 1 217 1 309 2 240 1 202 1 50 1 22 1 290 1 267 1 269 1 27 1 26 2 174 1 
297 1 299 1 58 1 177 1 217 2 309 2 149 1 22 1 316 1 267 2 269 1 26 2 27 1 186 3 80 1 158 2 118 1 233 1 240 1 202 2 282 2 290 1 93 1 174 1 
297 1 299 1 58 1 177 1 217 2 309 2 149 1 22 1 316 1 267 2 269 1 26 2 27 1 186 3 80 1 158 2 118 1 233 1 277 1 240 1 202 2 282 2 93 1 174 1 
238 1 186 1 240 1 115 1 334 1 245 1 177 1 93 1 174 1 
56 1 186 1 240 1 115 1 334 1 245 1 177 1 93 1 174 1 
240 1 118 1 22 1 177 1 256 1 174 1 
186 1 158 1 118 1 177 1 60 1 12 1 240 1 222 1 202 1 50 1 22 2 291 1 174 1 
249 1 3 3 55 1 298 1 58 1 305 4 177 1 141 5 63 2 143 1 13 1 217 1 145 1 218 2 309 2 22 1 315 1 23 1 267 1 269 2 26 2 27 1 29 1 113 2 186 1 112 2 114 1 188 1 158 1 118 1 233 1 276 2 163 2 237 2 85 2 168 2 240 1 202 1 285 2 290 1 90 1 294 2 174 1 
259 1 115 1 334 1 
186 1 158 1 213 1 118 1 177 1 256 1 199 1 147 1 240 1 222 1 202 1 22 2 174 1 
186 1 118 1 254 1 177 4 143 1 240 4 202 1 281 1 50 1 22 1 128 1 338 1 174 4 
4 1 186 1 227 1 6 1 158 1 118 1 177 1 60 1 12 1 240 1 202 1 22 2 174 1 
272 1 240 1 242 1 243 1 118 1 50 1 22 1 83 1 177 1 174 1 
2 1 186 1 118 1 177 2 143 1 240 2 202 1 265 1 22 1 292 1 174 2 
2 1 186 3 118 2 177 5 143 1 167 1 240 5 202 2 281 1 50 1 22 2 124 1 128 1 338 1 93 1 174 4 
2 1 186 3 34 1 118 2 177 5 143 1 240 5 202 2 281 1 50 1 22 2 124 1 128 1 338 1 93 1 174 4 
186 1 158 1 58 1 118 1 233 1 177 1 277 1 217 1 309 2 240 1 202 1 50 1 22 1 267 1 269 1 27 1 26 2 174 1 
186 1 158 1 118 1 177 1 60 1 12 1 240 1 222 1 202 1 22 2 291 1 93 1 174 1 
32 1 36 1 127 1 234 1 269 1 
270 1 297 1 80 1 32 1 229 1 115 2 36 2 234 2 331 1 259 1 282 1 334 2 48 1 336 1 127 2 269 1 211 1 
32 1 234 1 217 1 122 1 309 1 239 1 74 1 127 1 26 1 
229 1 32 1 336 1 
148 1 105 1 38 1 208 1 
15 1 144 1 148 1 104 1 38 1 236 1 208 1 
33 1 73 1 236 1 
38 1 236 3 194 1 257 1 41 1 15 1 144 3 148 1 104 1 75 1 49 2 208 1 
15 1 144 2 5 1 148 1 104 1 19 1 38 1 236 2 208 1 
0 1 300 1 236 1 41 1 15 1 144 1 104 1 148 1 242 1 243 1 318 1 
15 1 41 1 144 1 148 1 104 1 236 1 208 1 
15 1 41 1 144 1 104 1 38 1 236 1 208 2 
236 2 41 1 15 2 144 2 148 1 104 2 152 1 24 1 208 1 209 1 
5 2 300 1 38 1 97 1 236 3 166 1 41 1 15 1 144 3 332 1 104 1 148 2 208 1 
0 1 31 1 5 1 83 1 38 1 236 2 306 1 41 1 15 1 144 2 148 1 104 1 242 1 243 2 208 1 
5 2 300 1 38 1 236 4 41 1 15 2 144 4 332 1 68 1 104 2 148 2 19 1 208 1 
15 1 41 1 144 1 148 1 104 1 38 1 236 1 208 1 
5 2 300 1 230 1 38 2 194 1 236 4 15 1 144 4 332 1 104 1 148 3 49 1 75 1 208 2 
320 1 94 1 5 1 37 1 38 1 236 2 41 1 15 1 144 2 148 1 104 1 208 1 
327 1 38 1 236 3 194 2 41 1 15 1 144 3 148 1 104 1 75 1 49 2 208 1 
30 1 16 1 148 2 293 2 
15 1 41 1 144 1 104 1 193 1 236 1 
15 1 41 1 144 2 5 1 148 1 104 1 38 1 236 2 208 1 166 1 
251 1 
15 1 41 1 144 1 148 1 104 1 38 1 236 1 208 1 
5 1 38 1 236 3 166 1 41 1 15 1 144 3 104 1 148 1 49 1 208 1 
332 1 300 1 148 1 230 1 
148 1 208 1 

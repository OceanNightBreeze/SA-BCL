#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (90,233) (90,233) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (90,233) (90,233) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (90,233) (90,233) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (90,233) (90,233) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 293 306 177 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 179 143 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 120 225 291 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 26 260 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 207 1 313 1 169 1 108 1 90 1 170 1 233 1 303 1 305 1 161 1 37 1 96 1 
90 1 108 1 204 1 207 1 170 1 233 1 303 1 305 1 161 1 37 1 313 1 169 1 96 1 
90 1 108 1 204 1 207 1 170 1 233 1 303 1 305 1 161 1 37 1 313 1 169 1 96 1 
90 1 108 1 204 1 207 1 170 1 233 1 303 1 305 1 161 1 37 1 313 1 169 1 96 1 
204 1 196 1 41 1 250 1 210 2 98 1 313 1 169 1 108 4 170 4 126 2 244 3 19 1 248 3 303 1 83 1 161 1 112 1 
204 1 196 1 49 1 139 1 313 1 169 1 211 1 108 2 17 1 244 1 170 2 19 1 305 1 83 1 161 1 96 1 
204 2 196 1 250 1 313 1 169 2 108 3 170 3 126 1 244 2 19 1 248 1 305 1 162 1 
204 2 196 1 41 1 250 3 251 1 210 2 98 1 277 1 313 1 169 2 108 9 67 1 244 5 170 9 126 4 19 1 254 1 303 1 248 7 83 1 305 1 161 1 112 1 162 1 
204 2 196 1 41 1 250 3 251 1 210 2 98 1 277 1 313 1 169 2 108 9 67 1 244 5 170 9 126 4 19 1 254 1 303 1 248 7 83 1 305 1 161 1 112 1 162 1 
34 1 168 1 327 1 
74 1 92 2 34 1 
51 2 281 1 346 2 133 2 215 2 128 2 137 1 105 2 
1 1 51 3 148 2 150 1 114 2 76 1 115 1 133 3 252 1 341 1 253 1 342 1 99 1 6 1 281 1 282 2 232 2 346 2 214 1 215 2 136 1 348 2 84 1 137 1 86 1 350 1 292 1 166 1 240 1 105 2 245 1 22 1 300 1 361 1 94 1 44 1 128 2 
224 1 309 1 51 1 346 1 133 1 215 1 185 1 128 1 137 1 105 1 
51 1 309 1 327 1 133 1 194 1 228 1 105 1 107 1 145 1 34 1 255 1 71 1 256 1 165 1 
51 1 309 1 327 1 133 1 194 1 228 1 105 1 107 2 34 1 346 1 71 2 215 1 256 1 128 1 165 1 
71 1 220 1 107 1 179 1 
294 1 34 1 14 1 71 2 327 1 339 1 220 1 107 2 
14 1 71 1 107 1 
224 1 309 1 51 1 133 1 185 1 220 1 105 1 107 1 23 1 71 1 346 1 215 1 137 1 128 1 
34 1 
226 1 34 1 14 1 71 2 327 1 339 1 220 1 107 2 
249 1 134 1 293 1 69 1 71 3 177 1 178 1 220 2 306 1 107 3 
281 1 168 1 
51 2 133 2 105 2 281 2 172 1 346 1 215 1 128 1 119 1 
354 1 5 1 142 1 
51 1 148 1 114 1 115 1 133 1 240 1 245 1 6 1 281 1 300 1 94 1 158 1 214 1 136 1 348 1 86 1 
51 2 148 1 114 1 115 1 240 1 133 2 104 1 354 1 355 1 105 1 6 1 245 1 300 1 94 1 346 1 214 1 136 1 348 1 128 1 86 1 
309 1 51 3 133 3 104 1 355 2 105 3 359 1 281 1 346 3 215 1 128 3 119 1 
224 1 309 1 51 2 199 1 346 2 133 2 128 2 105 2 
51 3 281 1 346 3 215 1 133 3 355 1 128 3 105 3 
224 1 309 1 51 1 346 1 133 1 128 1 105 1 
309 1 51 1 172 1 346 1 133 1 215 1 128 1 105 1 119 1 
1 1 51 4 309 1 148 1 150 1 114 1 115 1 194 1 133 4 252 1 341 1 228 1 99 1 6 1 281 1 282 1 232 2 346 3 214 1 136 1 215 2 348 1 256 1 137 1 86 1 165 1 119 1 350 1 166 1 240 1 104 1 355 1 105 3 107 1 245 1 22 1 300 1 94 1 361 1 71 1 334 1 44 1 128 3 223 1 
297 1 51 2 281 1 255 1 346 1 133 2 355 1 128 1 105 2 
309 1 51 3 325 1 133 3 194 1 104 1 228 1 355 2 105 3 107 1 34 1 71 1 346 3 215 1 334 1 256 1 128 3 165 1 119 1 
51 2 133 2 355 1 354 1 105 2 142 1 346 2 215 1 128 2 119 1 
51 1 148 1 114 1 115 1 133 1 240 1 245 1 6 1 281 1 300 1 94 1 214 1 136 1 348 1 86 1 
51 1 148 1 114 1 133 1 245 1 6 1 281 1 300 1 317 1 94 1 214 1 24 1 136 1 348 1 86 1 
150 2 252 1 341 1 53 1 78 1 5 2 282 4 232 2 345 1 84 2 184 1 259 1 350 1 166 1 326 1 354 2 241 1 106 1 142 2 65 1 22 1 222 1 44 1 271 1 
309 1 51 1 199 1 346 1 133 1 128 1 105 1 165 1 
15 1 58 1 
15 1 58 1 
347 1 64 1 
347 1 64 1 
347 1 64 1 
15 1 58 1 73 1 
15 1 58 1 73 1 
15 1 58 1 73 1 
39 1 15 1 58 1 
0 1 347 1 15 2 58 2 195 1 64 1 
77 1 15 1 58 1 
39 1 15 1 58 1 
39 1 15 1 58 1 
48 1 337 1 51 2 75 1 133 2 77 1 278 1 281 1 346 2 285 1 58 1 287 1 290 1 15 1 62 1 186 1 105 2 107 1 43 1 301 1 71 1 72 1 335 1 128 2 
337 1 197 1 88 1 75 3 15 2 186 2 107 2 298 2 344 1 43 2 34 1 190 1 71 2 285 2 287 2 58 2 45 1 195 1 216 1 
303 1 83 1 161 1 
17 1 83 1 161 1 
11 1 17 1 218 1 221 1 303 2 161 3 
11 1 17 1 218 1 231 1 303 1 161 2 
11 2 17 1 218 1 303 1 161 2 
27 1 74 1 308 3 224 1 309 1 51 1 178 1 133 1 339 1 53 1 78 1 316 2 134 1 34 2 346 1 135 1 215 1 234 1 286 2 137 1 290 1 258 2 259 1 61 1 87 2 14 1 327 1 185 1 105 1 220 4 107 5 141 1 92 3 91 1 69 1 23 1 71 5 247 1 271 1 128 1 
109 1 143 1 79 1 71 2 220 2 107 2 179 1 
249 1 27 1 224 1 74 1 308 3 309 1 51 1 178 1 133 1 53 1 78 1 316 2 134 1 34 2 346 1 215 1 234 1 135 1 286 1 137 1 290 1 259 1 258 2 61 1 87 2 327 1 185 1 105 1 220 2 107 3 91 1 92 3 69 1 23 1 71 3 128 1 271 1 
249 1 307 1 308 5 309 1 51 1 178 1 133 1 53 2 316 4 134 1 135 1 215 1 137 1 259 2 258 4 61 1 327 1 185 1 220 3 105 1 107 4 69 1 23 1 71 4 271 2 27 1 224 1 74 3 193 1 78 2 34 4 346 1 286 2 234 1 290 2 87 4 91 2 92 7 171 1 128 1 
168 1 151 1 86 1 
130 1 86 1 
202 1 
6 1 300 1 86 1 
66 1 86 1 
300 1 86 1 
6 1 30 1 300 1 81 1 151 2 86 3 
150 3 261 1 326 2 262 1 53 1 343 1 241 3 124 1 328 1 243 1 282 7 101 1 146 2 36 1 174 1 84 4 271 1 
150 3 261 1 326 2 262 1 53 1 343 1 241 3 124 1 328 1 243 1 282 7 101 1 146 2 36 1 174 1 84 4 271 1 
150 3 261 1 326 2 262 1 53 1 343 1 241 3 124 1 328 1 243 1 117 1 282 7 101 1 146 2 36 1 174 1 84 4 271 1 
351 1 40 1 225 1 282 3 120 1 150 1 261 1 35 1 146 1 84 2 243 2 
150 4 252 2 53 1 343 1 29 1 282 9 232 4 101 1 235 1 84 5 60 1 166 2 261 1 326 3 262 1 241 4 124 1 243 1 328 1 22 2 146 2 174 1 44 2 271 1 
273 1 204 1 148 1 114 1 209 1 313 1 152 1 318 1 284 1 83 1 136 1 348 1 161 2 163 1 85 1 196 1 169 1 108 2 17 1 244 1 170 2 221 1 19 1 187 1 94 1 248 1 303 1 305 1 191 1 364 1 
273 1 204 1 148 1 114 1 209 1 4 1 152 1 116 1 318 1 57 1 284 1 83 1 136 1 348 1 161 2 163 1 85 1 196 1 169 1 108 3 17 1 244 1 221 1 170 3 19 1 94 1 303 1 248 2 305 1 191 1 
273 1 148 1 114 1 209 1 4 1 152 1 116 1 318 1 136 1 83 1 348 1 161 2 163 1 85 1 196 1 108 2 17 1 244 1 170 2 221 1 19 1 94 1 248 2 303 1 305 1 
204 1 273 2 148 1 114 1 13 1 312 1 169 1 329 1 152 2 108 1 170 1 300 1 94 1 57 1 214 1 136 1 320 1 305 2 348 1 363 1 86 1 85 2 237 1 
273 1 204 1 148 1 114 1 209 1 313 1 152 1 116 1 318 1 284 1 83 1 136 1 348 1 161 2 163 1 85 1 169 1 108 1 17 1 170 1 221 1 187 1 94 1 303 1 305 1 191 1 
33 1 
97 2 308 2 51 1 309 1 311 2 312 1 178 1 133 1 3 4 180 2 134 1 100 1 56 1 182 1 255 1 214 2 135 1 136 1 256 1 14 6 327 1 105 1 107 5 141 1 16 2 20 1 69 1 145 1 71 5 333 1 74 2 148 2 149 1 114 2 338 1 227 2 339 3 194 1 228 1 31 1 32 2 34 2 348 2 86 1 165 1 237 1 87 2 198 1 201 1 203 1 42 1 246 2 92 2 300 1 94 1 
51 1 309 1 226 1 338 1 194 1 133 1 3 2 339 1 228 1 100 1 31 1 255 1 256 1 165 1 198 1 14 2 105 1 107 3 16 1 145 1 71 3 333 1 
51 1 309 1 226 1 338 1 194 1 133 1 3 3 227 1 339 1 228 1 100 1 31 1 255 1 34 1 256 1 165 1 198 1 14 1 327 1 105 1 107 3 145 1 71 3 333 1 
51 1 309 1 226 1 311 1 338 1 339 1 194 1 133 1 3 3 227 1 228 1 100 1 31 1 255 1 34 1 256 1 165 1 198 1 14 2 327 1 105 1 107 3 16 1 145 1 71 3 333 1 
205 1 308 1 97 2 309 2 51 2 311 4 178 1 3 4 133 2 134 1 180 2 100 1 56 1 255 1 215 1 256 1 137 1 14 7 327 1 185 1 105 2 107 5 141 1 16 4 264 1 265 1 145 1 69 1 23 1 188 1 71 5 333 1 224 1 74 2 226 1 338 1 194 1 339 3 227 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 201 1 246 2 299 1 128 1 
308 1 97 2 309 1 51 1 311 2 178 1 3 4 133 1 134 1 180 2 100 1 56 1 255 1 182 1 256 1 14 4 327 1 105 1 107 4 141 1 16 2 69 1 145 1 71 4 333 1 74 2 338 1 194 1 339 2 227 2 228 1 31 1 32 2 34 2 165 1 198 1 87 1 201 1 92 2 246 2 
205 1 308 1 97 2 309 2 51 2 311 2 178 1 3 4 133 2 134 1 180 2 100 1 56 1 255 1 215 1 256 1 137 1 14 4 327 1 185 1 105 2 107 4 141 1 265 1 16 2 145 1 69 1 23 1 188 1 71 4 333 1 224 1 74 2 338 1 194 1 339 2 227 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 201 1 246 2 128 1 
205 1 308 1 97 2 309 2 51 2 311 2 178 1 3 4 133 2 134 1 180 2 100 1 56 1 255 1 215 1 256 1 137 1 14 4 327 1 185 1 105 2 107 4 141 1 265 1 16 2 145 1 69 1 23 1 188 1 71 4 333 1 224 1 74 2 338 1 194 1 339 2 227 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 201 1 246 2 128 1 
308 1 97 2 309 2 51 2 311 2 178 1 3 4 133 2 132 1 315 2 134 1 100 1 56 1 255 1 215 1 256 1 137 1 14 4 327 1 185 1 63 1 105 2 107 4 141 1 265 1 16 2 145 1 69 1 23 1 71 4 333 1 224 1 338 1 194 1 339 2 227 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 121 2 92 2 127 1 128 1 
205 1 308 1 97 2 309 2 51 2 311 3 178 1 3 5 133 2 134 1 180 2 100 1 56 1 255 1 215 1 256 1 137 1 14 5 327 1 185 1 105 2 107 4 141 1 16 3 265 1 145 1 69 1 23 1 188 1 71 4 333 1 224 1 74 2 338 1 227 3 194 1 339 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 201 1 246 2 299 1 128 1 
205 1 308 1 97 2 309 2 51 2 311 3 178 1 3 5 133 2 134 1 180 2 100 1 56 1 255 1 215 1 256 1 137 1 14 5 327 1 185 1 105 2 107 4 141 1 16 3 265 1 145 1 69 1 23 1 188 1 71 4 333 1 224 1 74 2 338 1 227 3 194 1 339 2 228 1 31 1 32 2 34 1 346 1 165 1 198 1 87 1 201 1 246 2 299 1 128 1 
308 1 97 2 309 1 51 1 311 2 178 1 132 1 3 4 133 1 315 2 134 1 100 1 56 1 255 1 182 1 256 1 14 4 327 1 105 1 107 4 141 1 16 2 69 1 145 1 71 4 333 1 338 1 194 1 339 2 227 2 228 1 31 1 32 2 34 1 165 1 198 1 87 1 121 2 92 2 
150 3 252 1 341 1 53 1 5 1 282 6 281 2 232 2 101 1 84 3 184 1 350 1 166 1 168 1 326 2 262 1 354 1 241 2 124 1 328 1 142 1 22 1 146 1 174 1 44 1 271 1 
1 1 309 1 50 1 150 5 176 1 252 2 341 2 253 1 53 1 5 6 78 1 281 1 282 12 232 4 84 7 259 2 350 1 352 1 40 2 120 2 166 2 326 1 89 1 241 1 354 6 263 1 142 2 359 1 91 2 22 2 330 1 44 2 271 2 
1 1 51 2 148 1 114 1 150 1 115 1 133 2 341 1 252 1 253 1 6 1 281 1 282 2 232 2 214 1 158 1 346 1 136 1 348 1 84 1 86 1 102 1 350 1 166 1 240 1 104 1 355 1 105 1 142 1 18 1 245 1 300 1 22 1 330 1 94 1 44 1 272 1 128 1 
1 1 51 3 133 3 252 3 253 1 53 3 5 7 6 2 181 2 101 1 214 1 319 1 136 2 259 2 326 4 262 1 104 1 105 1 328 1 142 7 144 1 22 3 330 1 189 2 146 1 331 2 271 3 148 3 150 10 114 3 115 2 341 3 343 4 78 2 230 2 116 1 281 2 282 20 232 6 157 1 346 1 348 3 84 10 86 2 350 3 166 3 240 2 355 1 354 7 241 8 124 1 245 2 91 2 300 2 361 2 94 2 174 1 44 3 128 1 
1 1 51 1 208 1 148 8 28 1 114 7 150 1 312 1 133 1 252 2 341 2 253 1 116 1 55 1 80 1 282 2 232 4 346 1 214 2 136 2 348 8 84 1 184 1 86 3 237 1 350 2 292 2 166 2 355 1 105 1 22 2 300 2 94 2 362 1 304 1 44 2 128 1 364 1 113 1 
51 1 150 2 340 1 133 1 252 1 341 1 53 1 5 1 78 1 282 3 232 2 346 1 215 1 84 1 119 1 259 1 350 1 166 1 326 1 241 1 354 1 105 1 142 1 91 1 22 1 330 1 44 1 128 1 271 1 
259 1 350 1 166 1 341 1 252 1 241 1 343 1 354 1 5 1 142 1 282 2 22 1 232 2 345 1 44 1 84 2 271 1 184 1 
350 1 150 2 166 1 326 1 341 1 252 1 241 1 354 1 53 1 5 1 78 1 142 1 282 2 22 1 232 2 222 1 44 1 184 1 
150 2 252 1 341 1 343 1 53 1 5 2 78 1 282 4 232 2 84 2 184 1 259 1 350 1 166 1 326 1 354 2 241 2 142 2 91 1 22 1 44 1 271 1 
259 1 350 1 166 1 341 1 252 1 241 1 343 1 354 1 5 1 142 1 282 2 22 1 232 2 345 1 362 1 44 1 84 2 271 1 
350 1 150 2 166 1 326 1 341 1 252 1 241 1 354 1 53 1 5 1 78 1 142 1 282 2 22 1 232 2 222 1 362 1 44 1 
150 2 252 1 341 1 343 1 53 1 5 2 78 1 282 4 232 2 84 2 259 1 350 1 166 1 326 1 354 2 241 2 142 2 91 1 22 1 362 1 44 1 271 1 
150 2 252 1 341 1 343 1 53 1 5 2 78 1 282 4 232 2 84 2 259 1 350 1 166 1 326 1 354 2 241 2 142 2 91 1 22 1 44 1 271 1 
1 1 51 1 148 1 114 1 150 1 115 1 133 1 341 1 252 1 253 1 6 1 281 1 282 2 232 2 214 1 136 1 348 1 84 1 86 1 350 1 166 1 240 1 245 1 300 1 22 1 94 1 361 1 44 1 
1 1 51 1 148 1 114 1 150 1 133 1 341 1 252 1 253 1 6 1 281 1 282 2 317 1 232 2 214 1 136 1 348 1 84 1 86 1 236 1 350 1 166 1 245 1 300 1 22 1 94 1 24 1 44 1 
150 2 252 1 341 1 343 1 53 1 5 2 78 1 282 4 232 2 84 2 259 1 350 1 166 1 326 1 354 2 241 2 142 2 91 1 22 1 330 1 44 1 271 1 
51 1 148 1 150 2 114 1 115 1 133 1 341 1 252 1 53 1 343 1 78 1 5 2 6 1 282 4 232 2 136 1 348 1 84 2 86 1 259 1 350 1 166 1 326 1 240 1 241 2 354 2 142 2 245 1 91 1 300 1 22 1 94 1 361 1 331 1 44 1 271 1 364 1 
51 1 150 1 133 1 252 1 341 1 53 1 343 1 78 1 5 1 282 3 232 2 346 1 215 1 84 2 119 1 259 1 350 1 166 1 241 1 354 1 105 1 142 1 125 1 91 1 22 1 330 1 44 1 128 1 271 1 
225 2 150 13 252 2 343 2 53 3 78 3 229 1 154 1 282 25 213 4 232 4 235 1 84 12 288 1 259 3 291 1 352 1 323 1 353 1 40 3 120 2 166 2 326 3 241 5 267 1 91 3 22 2 93 1 173 1 44 2 271 3 147 2 
225 2 150 12 252 3 343 2 53 2 78 2 54 1 29 2 229 1 154 2 213 4 282 26 232 6 235 1 84 14 118 1 288 1 59 1 259 3 291 1 353 1 40 2 120 2 166 3 326 2 239 1 241 4 91 3 22 3 93 1 173 2 44 3 271 3 147 1 
2 1 252 3 53 5 54 1 213 4 101 1 59 1 259 4 326 4 262 1 328 1 267 1 22 3 146 1 271 5 147 1 225 3 150 21 343 3 78 4 229 1 29 1 154 1 282 41 232 6 235 1 84 20 118 1 288 1 352 1 291 1 40 4 353 1 120 3 166 3 239 1 241 7 124 1 91 4 93 1 173 2 174 1 44 3 
2 1 225 3 150 18 252 4 343 2 53 4 78 3 54 1 29 2 229 1 154 1 282 38 213 4 232 8 101 1 235 1 118 1 84 20 288 1 59 1 259 4 291 1 352 1 353 1 40 4 120 3 166 4 239 1 326 4 262 1 241 6 124 1 328 1 267 1 91 4 22 4 93 1 146 1 173 2 174 1 44 4 271 5 147 1 
225 2 150 24 252 2 343 5 53 8 78 5 29 1 54 1 229 1 154 1 213 4 282 52 232 4 101 3 235 1 118 1 84 28 288 1 59 1 259 5 291 1 352 1 353 1 40 3 120 3 166 2 239 1 326 7 262 3 89 1 241 12 124 3 328 3 91 5 22 2 93 1 146 3 173 1 174 3 44 2 271 8 147 1 
1 1 51 2 148 2 150 1 114 2 133 2 341 1 252 1 253 1 80 1 282 2 232 2 136 1 348 2 84 1 86 1 322 1 103 1 350 1 292 2 238 1 166 1 123 1 105 2 300 1 22 1 330 1 94 1 44 1 336 1 113 1 
148 2 114 2 209 1 152 1 17 1 116 1 221 1 156 1 110 1 94 1 318 1 303 1 284 1 83 1 136 1 160 1 161 2 348 2 364 1 
138 1 148 1 114 1 209 1 152 1 17 1 116 1 221 1 110 1 318 1 94 1 303 1 284 1 83 1 136 1 161 2 348 1 
148 1 114 1 312 1 152 1 300 1 94 1 214 1 268 1 136 1 160 1 320 1 348 1 86 1 237 1 
148 1 114 1 209 1 152 1 17 1 116 1 221 1 156 1 110 1 94 1 318 1 303 1 284 1 83 1 160 1 136 1 161 2 348 1 
175 1 
308 1 87 1 167 1 34 1 168 1 327 1 46 1 
74 1 308 1 178 1 339 1 180 1 134 1 34 2 87 1 201 1 14 1 327 1 107 1 141 1 92 1 246 1 69 1 71 1 
274 1 148 1 130 1 114 1 178 1 141 1 134 1 6 1 300 1 69 1 81 1 94 2 214 1 136 1 348 1 111 1 86 2 
258 1 74 1 308 1 291 1 225 1 40 1 87 1 120 1 178 1 316 1 141 1 134 1 92 2 69 1 34 1 
224 1 205 1 308 2 309 1 51 1 178 1 133 1 53 1 134 1 101 1 346 1 215 1 321 2 137 1 164 1 87 2 262 1 185 1 105 1 328 1 107 1 141 1 69 1 23 1 71 1 269 1 271 2 128 1 
308 1 87 1 167 1 178 1 327 1 141 1 134 1 69 1 34 1 46 1 
259 2 258 5 74 5 308 5 87 5 53 2 78 2 316 5 91 2 92 10 189 1 34 5 269 1 321 2 271 2 
34 1 71 1 14 1 327 1 339 1 107 1 
249 1 308 1 149 1 148 3 114 3 312 1 178 2 339 2 314 1 134 2 214 2 136 1 135 1 348 3 349 1 86 1 237 1 260 1 87 2 14 4 203 1 107 3 141 1 300 1 69 2 20 2 94 1 71 3 26 1 
1 1 51 3 148 1 150 1 114 1 115 1 133 3 252 1 341 1 99 1 6 1 281 1 282 1 232 2 214 1 346 2 215 2 136 1 348 1 137 1 86 1 350 1 166 1 240 1 105 2 245 1 22 1 300 1 361 1 94 1 44 1 128 2 
258 2 74 2 308 1 87 2 178 1 327 2 316 2 141 1 134 1 92 4 69 1 20 1 34 4 146 1 135 1 
43 1 360 1 285 1 
43 1 360 1 285 1 
43 1 360 1 285 1 
153 1 43 1 285 1 
48 1 310 1 43 1 285 1 216 1 
153 1 43 1 285 1 
153 1 43 1 285 1 
43 1 285 1 
15 1 58 1 
150 4 166 2 326 2 262 1 252 2 53 1 343 1 241 3 124 1 29 1 328 1 282 8 22 2 232 4 146 1 101 1 174 1 84 4 44 2 271 1 
150 3 168 1 326 2 262 1 241 2 53 1 124 1 328 1 282 6 146 1 101 1 174 1 84 3 271 1 
259 1 150 2 166 1 200 1 326 1 252 1 53 1 241 2 343 1 78 1 91 1 282 4 22 1 232 2 44 1 84 2 271 1 
282 2 40 1 225 1 120 1 150 1 84 1 
150 13 176 1 252 1 53 5 343 2 78 2 29 1 282 26 232 2 101 2 84 13 164 1 259 2 352 1 40 2 120 2 166 1 326 5 262 2 89 1 241 7 124 1 328 2 91 2 22 1 146 1 174 1 44 1 271 5 
282 1 40 1 150 1 
282 1 120 1 84 1 
259 1 150 3 166 1 200 1 326 2 252 1 343 1 241 3 53 1 78 1 282 6 91 1 22 1 232 2 189 1 44 1 84 3 271 1 
225 1 150 6 252 1 343 1 53 2 78 2 54 1 282 12 232 2 235 1 84 6 118 1 59 1 259 2 291 1 40 1 120 1 166 1 239 1 326 1 241 2 91 2 22 1 44 1 271 2 
150 3 326 1 262 1 53 1 241 2 343 1 328 1 282 6 101 1 84 3 271 1 
38 1 150 2 166 1 326 1 262 1 252 1 343 1 241 2 124 1 328 1 29 1 282 3 22 1 232 2 174 1 84 1 44 1 
150 5 166 1 326 3 262 2 252 1 241 5 343 2 53 2 328 2 282 10 22 1 232 2 101 1 235 1 44 1 84 5 271 2 164 1 
259 1 166 1 252 1 343 1 241 1 282 2 22 1 232 2 235 1 44 1 84 2 271 1 
259 1 150 2 166 1 326 1 252 1 53 1 241 2 343 1 78 1 91 1 282 4 22 1 232 2 235 1 44 1 84 2 271 1 
38 1 150 2 166 3 326 1 262 1 252 3 241 2 343 1 29 1 328 1 267 1 282 3 22 3 232 6 235 1 44 3 84 1 
225 1 150 6 252 3 53 2 343 2 282 12 232 6 101 1 235 1 84 6 164 1 351 1 40 1 120 1 166 3 200 1 326 2 262 1 241 4 124 1 328 1 267 1 22 3 174 1 44 3 271 2 
225 1 150 10 252 2 343 4 53 4 78 1 29 1 54 1 282 24 232 4 101 2 235 1 84 14 118 1 164 1 59 1 259 2 291 1 40 1 120 1 166 2 239 1 326 5 262 2 241 9 124 1 328 2 91 2 22 2 146 1 174 1 44 2 271 5 
225 1 150 7 252 3 343 1 53 2 78 1 29 1 54 1 282 17 232 6 101 1 235 1 84 10 118 1 59 1 259 2 291 1 40 1 120 1 166 3 200 1 239 1 326 3 262 1 241 4 124 1 328 1 91 2 22 3 146 1 174 1 44 3 271 3 
225 1 150 10 252 3 343 1 53 3 78 2 54 1 29 1 282 19 232 6 101 1 235 1 84 9 118 1 59 1 259 2 291 1 40 1 120 1 166 3 200 1 239 1 326 3 262 1 241 4 124 1 328 1 91 2 22 3 146 1 174 1 44 3 271 3 
225 1 150 7 252 3 343 2 53 2 78 1 29 1 54 1 282 17 232 6 101 1 235 1 84 10 118 1 59 1 259 2 291 1 40 1 120 1 166 3 200 1 239 1 326 3 262 1 241 5 124 1 328 1 91 2 22 3 146 1 174 1 44 3 271 3 
225 1 150 10 252 2 343 4 53 4 78 1 29 1 54 1 282 24 232 4 101 2 235 1 84 14 118 1 164 1 59 1 259 2 291 1 40 1 120 1 166 2 239 1 326 5 262 2 241 9 124 1 328 2 91 2 22 2 146 1 174 1 44 2 271 5 
225 1 150 6 252 1 343 1 53 2 78 2 54 1 282 12 232 2 235 1 84 6 118 1 59 1 259 2 291 1 40 1 120 1 166 1 239 1 326 1 241 2 91 2 22 1 44 1 271 2 
225 1 150 8 252 4 343 2 53 2 78 1 54 1 29 2 282 18 232 8 101 1 235 1 84 10 118 1 59 1 259 2 291 1 40 1 120 1 166 4 200 1 239 1 326 3 262 1 241 5 124 1 328 1 91 2 22 4 146 1 174 1 44 4 271 3 
225 1 150 7 252 4 343 3 53 2 78 2 54 1 29 2 282 16 232 8 235 1 84 9 118 1 59 1 259 3 291 1 40 1 120 1 166 4 239 1 326 3 241 6 267 1 91 3 22 4 44 4 271 3 
150 4 326 3 262 3 53 1 241 6 343 3 124 2 328 3 282 7 101 1 174 1 84 3 271 1 
225 1 150 8 252 4 343 1 53 2 78 1 54 1 29 2 282 18 232 8 101 1 235 1 84 10 118 1 59 1 259 2 291 1 40 1 120 1 166 4 239 1 326 3 262 1 241 4 124 1 328 1 267 1 91 2 22 4 146 1 174 1 44 4 271 3 
297 1 51 1 281 1 255 1 133 1 183 1 105 1 
51 1 122 1 133 1 242 1 357 1 105 1 358 1 297 1 281 1 255 1 82 1 183 1 
148 1 300 1 114 1 94 1 312 1 168 1 214 1 136 1 348 1 86 1 237 1 
51 2 148 1 114 1 133 2 240 1 355 1 105 1 6 1 245 1 281 1 300 1 94 1 346 1 214 1 136 1 348 1 128 1 86 1 
309 1 51 2 148 1 114 1 133 2 240 1 228 1 355 1 314 1 105 2 66 1 6 2 245 1 281 1 300 2 94 1 346 1 136 1 348 1 10 1 128 2 165 1 86 3 
309 1 51 2 148 2 114 2 133 2 228 1 355 1 314 1 105 2 66 1 6 2 245 1 281 1 300 2 94 1 346 1 24 1 136 1 348 2 95 1 10 1 128 2 165 1 86 3 
224 1 309 1 51 1 148 1 130 1 114 1 133 1 314 1 279 1 34 1 346 1 215 1 348 1 137 1 86 1 327 1 185 1 105 1 107 1 23 1 71 1 128 1 
224 1 309 1 51 1 148 1 130 1 114 1 133 1 314 1 34 1 346 1 215 1 348 1 137 1 86 1 327 1 185 1 296 1 105 1 107 1 23 1 71 1 128 1 
55 1 148 1 114 1 94 1 136 1 348 1 
292 1 208 1 148 7 28 1 114 6 275 1 116 1 55 1 6 1 80 1 300 2 81 1 94 3 214 2 304 1 136 2 348 7 270 1 289 1 364 1 86 3 
51 2 148 1 150 3 114 1 115 1 133 2 341 2 252 2 53 1 5 1 6 1 281 2 282 6 181 1 232 4 101 1 346 1 136 1 348 1 84 3 86 1 322 1 350 2 166 2 326 2 262 1 240 1 354 1 241 2 355 1 124 1 105 1 328 1 142 1 245 1 300 1 22 2 330 1 94 1 361 1 146 1 331 1 174 1 44 2 271 1 128 1 364 1 
308 4 309 1 51 1 130 1 178 2 133 1 53 2 134 2 214 1 101 1 215 1 9 1 8 1 321 2 137 1 257 1 14 1 327 2 262 1 185 1 220 1 105 1 107 2 328 1 141 2 69 2 23 1 71 2 269 1 271 2 224 1 148 1 114 1 339 1 34 2 346 1 348 1 349 1 86 1 164 1 87 5 167 1 296 1 128 1 46 1 
274 1 148 2 114 2 151 1 55 1 6 1 300 1 81 1 94 2 136 1 348 2 364 1 86 2 
148 4 114 4 312 1 155 1 300 1 94 1 214 1 136 1 348 4 95 1 364 1 86 1 237 1 
148 2 114 2 314 1 280 1 6 1 21 1 300 1 94 2 157 1 136 1 348 2 270 1 289 1 86 1 
17 1 148 1 114 1 94 1 318 1 214 1 83 1 136 1 161 1 348 1 
103 1 116 1 80 1 148 2 300 1 114 2 94 1 136 1 348 2 364 1 86 1 
148 5 208 1 114 4 28 1 312 1 314 1 155 1 80 1 300 2 94 2 214 1 136 2 348 5 364 1 86 3 237 1 
148 5 114 4 28 1 312 1 276 1 314 1 155 1 80 1 300 2 94 2 214 1 136 2 348 5 364 1 86 3 237 1 
51 2 148 1 114 1 133 2 355 1 105 1 6 1 245 1 281 1 300 1 94 1 346 1 214 1 24 1 136 1 348 1 128 1 86 1 
148 1 114 1 275 1 314 1 6 1 300 1 81 1 94 2 136 1 348 1 270 1 289 1 86 1 
281 1 219 1 324 1 12 1 302 1 
309 1 192 1 219 2 324 1 12 2 327 1 52 1 194 1 228 1 220 1 107 2 68 1 281 1 34 1 302 2 71 2 334 1 256 1 165 1 
51 1 238 1 324 1 12 1 133 1 123 1 105 1 302 1 336 1 
68 1 192 1 324 1 
196 1 244 1 19 1 168 1 
108 1 204 1 196 1 244 1 170 1 19 1 169 1 
273 1 170 1 305 1 
204 1 196 1 139 2 313 1 169 1 108 3 244 1 170 3 19 1 70 1 332 1 7 1 
108 2 204 1 196 1 244 1 170 2 19 1 248 1 210 1 169 1 
204 1 41 1 313 1 169 1 108 1 170 1 126 1 244 1 303 1 83 1 161 1 
108 1 204 1 196 1 244 1 170 1 313 1 169 1 
108 1 204 1 196 2 170 1 19 1 313 1 169 1 
204 2 196 1 313 1 169 2 108 2 244 1 212 1 170 2 283 1 159 1 
204 1 196 1 250 1 251 1 313 1 169 1 108 3 170 3 67 1 126 1 244 2 19 1 248 2 
204 1 196 1 313 1 169 1 17 1 108 2 244 1 170 2 221 1 19 1 303 1 248 1 83 1 161 2 25 1 
204 2 196 1 250 1 210 1 98 1 313 1 169 2 108 4 170 4 126 1 244 2 19 1 248 2 
108 1 204 1 196 1 244 1 170 1 19 1 313 1 169 1 
204 1 196 2 139 1 250 1 356 1 169 1 108 4 170 4 126 1 244 3 19 2 70 1 248 2 7 1 
204 1 196 1 131 1 140 1 313 1 169 1 108 2 244 1 170 2 19 1 254 1 248 1 
204 1 196 1 139 2 313 1 169 1 108 3 266 1 244 1 170 3 19 1 70 2 7 1 
47 1 129 2 244 2 295 1 
108 1 204 1 206 1 170 1 313 1 169 1 
108 2 204 1 196 1 244 1 67 1 170 2 19 1 248 1 313 1 169 1 
217 1 
108 1 204 1 196 1 244 1 170 1 19 1 313 1 169 1 
108 3 204 1 196 1 67 1 244 1 139 1 170 3 19 1 248 1 313 1 169 1 
244 1 126 1 250 1 356 1 
196 1 244 1 

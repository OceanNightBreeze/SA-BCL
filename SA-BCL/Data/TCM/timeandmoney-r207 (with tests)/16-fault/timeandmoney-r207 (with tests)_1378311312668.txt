#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (13,153) (212,268) (212,268) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (13,153) (212,268) (212,268) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (13,153) (212,268) (212,268) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (13,153) (212,268) (212,268) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (216,220) (216,220) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (13,153) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (13,153) 234 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (13,153) 234 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,229,343) (3,66,152) (3,66,152) (3,66,152) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,229,343) (3,66,152) (3,66,152) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,229,343) (3,66,152) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,229,343) (3,66,152) (3,66,152) (3,66,152) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 364 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,229,343) (37,229,343) (37,229,343) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,229,343) (37,229,343) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,229,343) (37,229,343) (37,229,343) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 209 299 333 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 333 170 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 108 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
359 1 68 2 146 1 308 1 261 1 351 1 13 1 182 1 6 1 122 2 254 1 153 1 87 1 268 1 35 1 212 1 
359 1 68 2 146 1 308 1 261 1 351 1 13 1 182 1 6 1 122 2 254 1 153 1 87 1 268 1 35 1 212 1 
359 1 68 2 146 1 308 1 261 1 351 1 13 1 182 1 6 1 122 2 254 1 153 1 87 1 268 1 35 1 212 1 
359 1 68 2 146 1 308 1 261 1 351 1 13 1 182 1 6 1 122 2 254 1 153 1 87 1 268 1 35 1 212 1 
285 3 334 1 68 4 146 1 338 1 308 1 28 2 29 1 302 1 316 3 222 2 351 1 319 1 6 1 122 4 87 1 35 1 90 1 
359 1 216 1 68 1 308 1 254 1 253 1 122 1 6 1 220 1 87 1 
68 1 308 1 122 1 6 1 153 1 87 1 
285 1 68 2 234 1 308 1 354 1 122 2 6 1 153 1 87 1 
285 1 68 2 234 1 308 1 354 1 122 2 6 1 153 1 87 1 
277 1 48 1 19 1 
19 1 181 2 56 1 
263 1 144 2 57 2 365 2 368 2 63 1 137 2 2 2 
61 1 295 1 347 1 102 1 164 1 144 3 27 1 125 2 63 1 250 1 221 1 30 1 0 1 2 2 128 1 4 2 43 1 34 1 356 1 200 1 357 1 156 2 49 2 137 3 230 1 289 1 263 1 265 1 57 2 365 2 78 1 183 1 368 2 186 2 243 1 323 1 100 1 
144 1 57 1 326 1 365 1 368 1 63 1 137 1 362 1 161 1 2 1 
144 1 38 1 202 1 137 1 95 1 2 1 362 1 277 1 32 1 19 1 266 1 318 1 209 1 140 1 
144 1 38 1 202 1 137 1 95 2 2 1 362 1 277 1 57 1 19 1 266 1 318 1 365 1 368 1 140 2 
235 1 41 1 140 1 95 1 258 1 
138 1 277 1 195 1 19 1 41 1 140 2 95 2 258 1 
41 1 140 1 95 1 
144 1 326 1 63 1 137 1 95 1 328 1 362 1 2 1 57 1 365 1 368 1 140 1 258 1 161 1 
19 1 
277 1 195 1 14 1 19 1 41 1 140 2 95 2 258 1 
325 1 157 2 203 2 95 5 277 1 276 1 15 1 195 1 139 2 16 1 19 1 366 1 131 1 64 1 41 2 140 5 88 1 258 2 245 1 
164 1 177 1 144 2 156 1 193 1 250 1 221 1 0 1 137 2 230 1 289 1 2 1 43 1 4 1 365 1 183 1 368 1 186 1 142 1 100 1 
263 1 48 1 
214 1 283 1 144 2 137 2 2 2 263 2 57 1 365 1 368 1 
148 1 228 1 
164 1 144 1 156 1 250 1 221 1 137 1 0 1 230 1 110 1 289 1 263 1 4 1 43 1 183 1 186 1 100 1 
263 1 144 3 57 1 365 3 368 3 142 1 137 3 2 3 
144 1 365 1 368 1 137 1 362 1 161 1 2 1 
214 1 283 1 144 1 57 1 365 1 368 1 137 1 362 1 2 1 
295 1 214 1 347 1 164 1 102 1 144 4 125 1 272 1 250 1 63 1 221 1 0 1 2 3 128 1 43 1 4 1 34 1 356 1 200 1 177 1 38 1 156 1 49 2 202 1 311 1 137 4 230 1 95 1 289 1 362 1 263 1 265 1 57 2 266 1 318 1 365 3 78 1 183 1 368 3 186 1 243 1 142 1 140 1 100 1 
263 1 144 2 299 1 365 1 368 1 209 1 137 2 142 1 2 2 
214 1 123 1 177 1 144 3 38 1 202 1 311 1 137 3 95 1 362 1 2 3 57 1 19 1 318 1 266 1 365 3 368 3 140 1 142 2 
214 1 144 2 193 1 137 2 2 2 57 1 365 2 368 2 142 1 228 1 
164 1 144 1 156 1 250 1 221 1 137 1 0 1 230 1 289 1 263 1 4 1 43 1 183 1 186 1 100 1 
144 1 156 1 221 1 137 1 0 1 230 1 290 1 289 1 263 1 149 1 4 1 43 1 183 1 186 1 100 1 
200 2 347 1 201 1 297 1 49 2 306 1 125 4 30 2 205 1 148 2 128 1 251 1 265 1 130 1 78 1 353 1 207 1 242 1 280 1 132 1 243 1 228 2 356 1 
199 1 38 1 144 1 365 1 368 1 137 1 362 1 2 1 
214 1 177 1 144 4 337 1 190 1 137 4 362 1 2 4 263 1 150 1 57 1 365 4 368 4 142 2 
199 1 144 2 365 2 368 2 137 2 362 1 161 1 2 2 
284 1 70 1 
284 1 70 1 
12 1 321 1 
12 1 321 1 
12 1 321 1 
284 1 70 1 75 1 
270 1 284 2 70 2 12 1 321 1 136 1 
284 1 286 1 70 1 
284 1 286 1 70 1 
284 1 286 1 70 1 
284 1 179 1 70 1 
284 1 179 1 70 1 
284 1 179 1 70 1 
296 2 284 2 50 1 300 1 218 1 70 2 136 1 95 2 31 1 96 1 19 1 341 2 255 2 140 2 23 3 141 2 36 1 187 2 133 1 
296 1 144 2 300 1 105 1 147 1 2 2 329 1 151 1 255 1 284 1 134 1 70 1 119 1 94 1 137 2 95 1 75 1 263 1 341 1 365 2 368 2 23 1 140 1 187 1 
351 1 146 1 35 1 
253 1 
253 1 
253 1 
253 1 
297 1 105 1 276 2 195 1 277 1 130 1 64 1 86 1 174 2 280 1 258 4 88 3 154 1 47 2 134 1 306 1 157 1 203 1 119 1 72 1 120 2 56 1 95 5 74 1 317 1 139 1 181 3 19 2 267 1 41 1 140 5 294 1 
144 1 297 1 326 1 105 1 63 1 328 1 2 1 276 2 195 1 277 1 64 1 86 1 174 1 331 2 280 1 88 1 258 4 281 1 154 1 47 1 157 1 203 1 72 1 137 1 95 5 362 1 139 1 235 2 57 1 181 1 19 1 365 1 267 1 368 1 41 3 320 1 140 5 161 1 
297 1 105 1 277 1 276 2 130 1 86 1 174 2 280 1 258 2 88 3 154 1 47 2 306 1 157 1 203 1 120 1 56 2 95 3 74 1 317 1 139 1 19 3 181 4 267 1 140 3 245 1 
297 2 192 1 105 2 277 1 276 4 130 2 305 1 86 1 174 4 280 2 88 5 258 3 154 2 47 4 306 2 157 1 203 1 120 2 56 3 95 4 74 1 317 1 139 1 19 4 181 7 21 1 267 1 140 4 245 1 
48 1 369 1 0 1 
163 1 0 1 
196 1 
0 1 230 1 
71 1 369 2 221 1 0 3 230 1 315 1 
221 1 0 1 230 1 
0 1 112 1 
200 3 176 1 348 1 297 1 306 1 307 1 287 1 125 7 30 4 40 1 159 1 251 2 236 1 173 1 342 2 242 3 80 1 
200 3 176 1 348 1 297 1 306 1 307 1 287 1 125 7 30 4 40 1 159 1 251 2 236 1 173 1 342 2 242 3 80 1 
200 3 176 1 348 1 297 1 306 1 307 1 287 1 219 1 125 7 30 4 40 1 159 1 251 2 236 1 173 1 342 2 242 3 80 1 
347 1 348 1 297 4 106 1 125 31 30 16 128 1 275 1 251 5 130 3 173 1 280 3 154 3 200 15 176 1 49 2 306 4 307 2 287 2 39 1 55 1 53 1 314 1 40 2 159 2 17 4 236 5 342 3 78 1 184 3 80 1 242 10 243 1 322 1 
347 2 348 1 297 1 301 1 125 9 30 5 128 2 251 3 173 1 200 4 176 1 306 1 49 4 307 1 262 1 287 1 314 1 40 1 159 1 236 1 342 2 78 2 242 4 243 2 
66 1 359 1 358 1 37 1 68 1 335 1 156 1 308 1 69 1 289 1 233 1 3 1 115 1 4 1 253 1 6 1 122 1 186 1 152 1 22 1 87 1 100 1 
66 1 359 1 358 1 37 1 285 1 68 2 156 1 81 1 298 1 308 1 69 1 289 1 233 1 115 1 303 1 4 1 253 1 6 1 122 2 186 1 152 1 22 1 100 1 
66 1 358 1 359 1 37 1 285 1 68 1 156 1 81 1 69 1 289 1 233 1 115 1 303 1 4 1 253 1 122 1 186 1 100 1 
359 2 358 2 91 1 68 1 156 1 167 1 298 1 308 1 69 2 0 1 230 1 289 1 127 1 233 2 4 1 183 1 208 1 85 1 6 1 122 1 186 1 198 1 100 1 
66 1 359 1 358 1 37 1 68 1 156 1 308 1 69 1 289 1 233 1 3 1 115 1 303 1 4 1 253 1 6 1 122 1 186 1 152 1 22 1 87 1 100 1 
155 1 
165 1 42 2 0 1 172 2 274 2 276 2 4 2 278 2 85 1 88 2 178 1 10 1 11 2 56 2 230 1 95 4 289 1 139 1 18 1 181 2 19 1 183 2 186 2 140 4 100 1 104 1 195 3 33 1 64 1 65 1 197 1 259 2 156 2 157 1 203 1 312 2 363 1 206 2 267 1 208 1 41 6 162 1 
363 1 195 1 14 1 65 1 197 1 41 2 140 2 95 2 274 1 
363 1 11 1 65 1 197 1 140 1 95 1 172 1 
11 1 95 2 172 1 274 1 363 1 195 1 14 1 65 1 278 1 197 1 41 2 140 2 
165 1 326 1 82 1 42 2 328 1 172 2 2 1 274 4 276 1 277 1 278 4 88 1 9 1 46 1 178 1 11 2 137 1 56 2 95 4 14 1 139 1 57 1 237 1 19 1 140 4 144 1 249 1 63 1 195 3 64 1 65 1 197 1 259 2 157 1 203 1 312 2 362 1 363 1 206 2 365 1 368 1 41 7 161 1 
165 1 42 2 172 2 274 2 277 1 276 1 195 2 278 2 65 1 64 1 197 1 88 1 259 2 10 1 178 1 11 2 157 1 203 1 312 2 56 2 95 3 363 1 206 2 139 1 19 2 181 2 41 4 140 3 
144 1 165 1 326 1 82 1 42 2 63 1 328 1 2 1 172 2 274 2 277 1 195 2 276 1 278 2 64 1 65 1 197 1 88 1 9 1 259 2 178 1 11 2 157 1 203 1 137 1 312 2 56 2 95 3 362 1 363 1 206 2 139 1 57 1 19 1 237 1 365 1 368 1 41 4 140 3 161 1 
144 1 165 1 326 1 82 1 42 2 63 1 328 1 2 1 172 2 274 2 277 1 195 2 276 1 278 2 64 1 65 1 197 1 88 1 9 1 259 2 178 1 11 2 157 1 203 1 137 1 312 2 56 2 95 3 362 1 363 1 206 2 139 1 57 1 19 1 237 1 365 1 368 1 41 4 140 3 161 1 
363 1 364 1 65 1 197 1 140 1 95 1 
144 1 165 1 326 1 82 1 42 2 249 1 63 1 328 1 2 1 172 3 274 3 277 1 195 2 276 1 278 3 65 1 64 1 197 1 88 1 9 1 259 2 178 1 11 3 157 1 203 1 137 1 56 2 312 2 95 3 362 1 206 2 363 1 139 1 57 1 19 1 237 1 365 1 368 1 41 5 140 3 161 1 
144 1 165 1 326 1 82 1 42 2 249 1 63 1 328 1 2 1 172 3 274 3 277 1 195 2 276 1 278 3 65 1 64 1 197 1 88 1 9 1 259 2 178 1 11 3 157 1 203 1 137 1 56 2 312 2 95 3 362 1 206 2 363 1 139 1 57 1 19 1 237 1 365 1 368 1 41 5 140 3 161 1 
165 1 172 2 274 2 277 1 276 1 195 2 278 2 65 1 64 1 197 1 88 1 10 1 11 2 309 1 157 1 203 1 312 2 95 3 363 1 206 2 139 1 121 2 19 1 181 2 41 4 140 3 101 2 
347 1 348 1 297 1 125 6 30 3 128 1 148 1 251 2 173 1 132 1 228 1 356 1 200 3 176 1 48 1 49 2 306 1 287 1 159 1 263 2 265 1 342 1 78 1 242 2 243 1 
347 2 166 1 103 1 297 2 190 1 125 11 349 1 30 6 111 1 128 2 148 8 251 1 130 1 34 1 280 2 356 2 228 8 154 2 200 5 49 4 306 1 55 1 362 1 263 1 265 1 17 2 236 1 78 2 184 2 58 1 242 2 243 2 
345 1 164 1 347 1 144 2 125 2 250 1 221 1 349 1 0 1 30 1 110 1 2 1 128 1 43 1 4 1 34 1 228 1 356 1 200 1 156 1 177 1 49 2 360 1 137 2 230 1 289 1 263 1 265 1 365 1 183 1 78 1 186 1 368 1 59 1 243 1 142 1 323 1 100 1 
164 2 125 20 221 2 0 2 2 1 128 3 4 1 43 2 130 2 173 1 280 2 228 7 176 1 177 1 49 6 287 1 137 3 54 2 230 2 289 2 236 2 342 1 183 1 186 1 242 6 142 1 243 3 24 2 100 2 295 2 347 3 348 1 144 3 297 3 107 2 250 2 349 1 30 10 148 7 251 4 252 1 34 1 257 1 356 3 154 2 200 10 156 1 306 3 204 2 159 1 263 2 265 3 365 1 78 3 368 1 323 1 
347 2 247 1 144 1 248 1 27 2 125 2 171 1 0 3 30 1 2 1 128 2 223 1 303 1 4 8 85 1 7 1 34 1 132 1 356 2 200 1 335 1 156 8 49 4 52 1 137 1 230 2 289 2 264 1 265 2 365 1 183 2 78 2 208 1 368 1 186 7 142 1 243 2 323 1 100 2 
214 1 347 1 144 1 297 1 168 1 125 3 349 1 30 1 2 1 148 1 128 1 251 1 130 1 280 1 228 1 356 1 154 1 200 2 49 2 306 1 137 1 265 1 57 1 365 1 78 1 368 1 242 1 243 1 
347 1 297 1 49 2 125 2 30 2 148 1 128 1 265 1 236 1 78 1 353 1 242 1 280 1 132 1 243 1 228 1 356 1 
200 2 347 1 49 2 306 1 125 2 205 1 148 1 128 1 251 1 265 1 130 1 78 1 242 1 132 1 243 1 228 1 356 1 
347 1 297 1 125 4 30 2 128 1 148 2 251 1 130 1 280 1 132 1 154 1 356 1 228 2 200 2 49 2 306 1 265 1 236 1 78 1 242 2 243 1 
347 1 297 1 248 1 49 2 125 2 30 2 148 1 128 1 265 1 236 1 78 1 353 1 242 1 280 1 243 1 228 1 356 1 
200 2 347 1 248 1 49 2 306 1 125 2 205 1 148 1 128 1 251 1 265 1 130 1 78 1 242 1 243 1 228 1 356 1 
347 1 297 1 248 1 125 4 30 2 128 1 148 2 251 1 130 1 280 1 154 1 356 1 228 2 200 2 49 2 306 1 265 1 78 1 242 1 243 1 
200 2 347 1 297 1 306 1 49 2 125 4 30 2 148 2 128 1 251 1 265 1 130 1 236 1 78 1 242 2 280 1 243 1 228 2 356 1 154 1 
295 1 164 1 347 1 144 1 125 2 250 1 221 1 30 1 0 1 128 1 43 1 4 1 34 1 356 1 200 1 156 1 49 2 137 1 230 1 289 1 263 1 265 1 183 1 78 1 186 1 243 1 323 1 100 1 
347 1 144 1 125 2 221 1 30 1 0 1 128 1 149 1 43 1 4 1 279 1 34 1 356 1 200 1 156 1 49 2 137 1 230 1 289 1 290 1 263 1 265 1 183 1 78 1 186 1 243 1 323 1 100 1 
200 2 347 1 297 1 306 1 49 2 125 4 349 1 30 2 148 2 128 1 251 1 265 1 130 1 236 1 78 1 242 2 280 1 243 1 228 2 356 1 154 1 
295 1 164 1 347 1 144 1 297 1 107 1 125 4 250 1 221 1 30 2 0 1 148 2 128 1 251 1 130 1 43 1 4 1 280 1 228 2 356 1 154 1 200 2 156 1 335 1 306 1 49 2 137 1 230 1 289 1 265 1 236 1 78 1 186 1 242 2 243 1 100 1 
214 1 347 1 144 1 297 1 125 3 349 1 30 2 2 1 128 1 148 1 130 1 280 1 356 1 154 1 228 1 200 1 306 1 49 2 137 1 265 1 57 1 236 1 365 1 238 1 78 1 368 1 242 1 243 1 
188 1 347 2 297 1 169 1 62 1 124 1 125 9 109 1 30 4 128 2 251 1 130 1 304 1 280 1 154 1 200 5 49 4 306 1 262 1 55 1 77 1 17 2 236 1 78 2 184 1 242 2 243 2 322 1 60 1 
188 1 347 2 297 1 169 1 62 1 124 1 125 9 109 1 30 4 128 2 251 1 130 1 304 1 280 1 154 1 200 5 49 4 306 1 262 1 55 1 77 1 17 2 236 1 78 2 184 1 242 2 243 2 322 1 60 1 
188 1 347 2 348 1 145 1 297 7 169 3 62 1 124 1 125 46 109 1 30 24 111 2 113 1 128 2 251 6 130 6 304 1 173 1 44 1 280 6 154 6 200 22 176 1 49 4 306 7 262 1 287 1 55 2 314 1 159 1 97 1 98 1 17 4 236 6 342 1 78 2 184 4 241 1 242 12 243 2 322 2 60 1 
347 2 297 1 169 1 62 1 124 1 125 9 109 1 30 4 128 2 251 1 130 1 304 1 280 1 154 1 200 5 49 4 306 1 262 1 55 1 77 1 17 2 236 1 78 2 184 1 242 2 211 1 243 2 322 1 60 1 
188 1 347 3 145 1 297 2 169 3 62 1 124 2 125 20 109 1 30 11 128 3 113 1 251 1 130 1 304 1 44 1 280 2 154 2 200 9 306 1 49 6 262 1 314 2 97 1 98 1 17 2 236 1 78 3 184 2 241 1 242 2 243 3 60 2 322 2 
96 1 296 1 284 1 180 1 341 1 70 1 255 1 136 1 187 1 133 1 
94 1 75 1 
296 1 284 1 352 1 341 1 239 1 70 1 255 1 244 1 187 1 
296 1 284 1 300 1 218 1 70 1 136 1 95 1 31 1 96 1 19 1 341 1 255 1 140 1 23 2 141 1 36 1 187 1 133 1 
296 1 284 1 300 1 218 1 70 1 136 1 95 1 31 1 96 1 19 1 341 1 255 1 140 1 23 2 141 1 36 1 187 1 133 1 
296 1 284 1 300 1 218 1 70 1 136 1 95 1 31 1 96 1 19 1 341 1 255 1 140 1 23 2 141 1 36 1 187 1 133 1 
270 1 84 1 286 1 
270 1 84 1 286 1 
179 1 143 1 
270 1 179 1 143 1 
151 1 147 1 
296 1 144 2 105 1 147 1 31 1 2 2 329 1 5 1 151 1 255 1 258 1 284 1 134 1 70 1 119 1 94 1 137 2 95 1 75 1 263 1 341 1 365 2 368 2 141 1 140 1 23 1 187 1 
84 1 286 1 
270 1 179 1 143 1 
347 1 189 1 144 2 27 2 125 2 349 1 30 1 2 2 128 1 223 1 4 2 34 1 355 1 356 1 200 1 156 2 49 2 73 1 137 2 289 1 265 1 78 1 186 2 243 1 269 1 99 1 323 1 100 1 
358 1 37 1 156 2 335 1 229 1 289 1 288 1 303 1 4 2 115 1 343 1 253 1 186 2 22 1 100 1 
358 1 37 1 156 1 289 1 303 1 4 1 115 1 343 1 253 1 186 1 22 1 213 1 100 1 
358 1 156 1 0 1 230 1 289 1 288 1 1 1 4 1 183 1 85 1 208 1 186 1 198 1 100 1 
358 1 37 1 156 1 229 1 288 1 289 1 303 1 4 1 115 1 343 1 253 1 186 1 22 1 100 1 
332 1 
277 1 276 1 15 1 48 1 19 1 366 1 88 1 
259 1 178 1 42 1 157 1 203 1 56 1 95 1 277 1 195 1 276 1 139 1 19 2 181 1 64 1 41 1 140 1 88 1 
163 2 346 1 297 1 221 1 126 1 327 1 0 4 276 3 195 1 130 1 4 1 64 2 224 1 174 3 280 1 256 1 88 4 154 1 47 3 156 1 306 1 51 1 71 1 157 2 203 2 56 3 95 2 230 1 289 1 139 2 19 3 181 6 318 1 183 1 267 1 369 1 186 1 41 2 140 2 24 1 25 1 100 2 
217 2 145 1 297 2 273 1 113 1 129 1 195 1 276 5 277 2 130 2 44 1 64 2 174 5 280 2 117 1 88 8 154 2 47 5 306 2 157 2 203 2 56 3 95 1 97 1 98 1 139 2 17 1 181 6 19 5 267 1 184 1 41 1 140 1 322 1 162 1 
144 1 217 2 297 2 326 1 82 1 63 1 328 1 2 1 129 1 276 2 173 1 64 1 45 1 88 2 306 1 287 1 157 1 203 1 137 1 95 1 362 1 159 1 139 1 57 1 365 1 368 1 140 1 161 1 
157 1 203 1 15 1 276 1 277 1 139 1 19 1 366 1 64 1 88 1 
47 2 297 1 306 1 56 2 276 2 181 4 19 2 130 1 174 2 280 1 88 2 154 1 
277 1 195 1 19 1 41 1 140 1 95 1 
104 1 0 1 276 2 195 2 4 2 33 1 64 1 85 1 88 2 89 1 156 2 157 2 203 2 158 1 340 1 230 1 95 3 289 1 160 2 139 2 183 2 267 2 208 1 186 2 41 4 140 3 245 1 100 1 162 2 
295 1 347 1 102 1 164 1 144 3 125 1 63 1 250 1 221 1 0 1 2 2 128 1 4 1 43 1 34 1 356 1 200 1 156 1 49 2 137 3 230 1 289 1 263 1 265 1 57 2 365 2 183 1 78 1 186 1 368 2 243 1 100 1 
47 1 157 1 203 1 56 1 276 1 277 1 139 1 181 2 19 2 64 1 267 1 88 1 162 1 
296 1 92 1 341 1 147 1 133 1 
296 1 341 1 361 1 
296 1 341 1 361 1 
296 1 341 1 361 1 
296 1 341 1 240 1 
296 1 341 1 240 1 
296 1 341 1 240 1 
296 1 341 1 
284 1 70 1 
347 1 348 1 297 1 125 8 30 4 113 1 128 1 251 2 173 1 200 4 176 1 306 1 49 2 262 1 287 1 159 1 17 1 342 1 78 1 184 1 242 2 243 1 322 1 
347 2 348 1 297 2 125 11 30 6 113 1 128 2 251 2 173 1 280 1 154 1 200 5 176 1 306 1 49 4 262 1 287 1 55 1 159 1 17 2 236 1 342 1 78 2 184 1 293 1 242 3 243 2 322 1 
347 3 348 1 145 1 297 3 125 19 30 9 113 1 128 3 251 3 130 2 173 1 44 1 280 2 154 2 200 10 176 1 49 6 306 3 262 1 287 1 314 1 159 1 97 1 98 1 17 1 236 1 342 1 78 3 184 1 293 1 242 4 243 3 322 1 
347 3 348 1 145 1 297 3 125 17 30 10 113 1 128 3 251 3 130 1 173 1 44 1 280 2 154 2 200 7 176 1 49 6 306 2 262 1 287 1 314 1 159 1 97 1 98 1 17 1 236 2 342 1 78 3 184 1 293 1 242 5 243 3 322 1 
347 1 348 1 297 1 125 8 30 4 113 1 128 1 251 2 173 1 200 4 176 1 306 1 49 2 262 1 287 1 159 1 17 1 342 1 78 1 184 1 242 2 243 1 322 1 
347 1 145 1 297 2 125 12 30 6 113 1 128 1 251 1 130 2 44 1 280 2 154 2 200 6 49 2 306 2 262 1 97 1 98 1 17 1 236 1 78 1 184 1 242 2 243 1 322 1 
347 4 348 1 145 1 297 3 125 18 30 10 113 1 128 4 251 3 130 1 173 1 44 1 280 2 154 2 200 8 176 1 49 8 306 2 262 1 287 1 314 2 159 1 97 1 98 1 17 1 236 2 342 1 78 4 184 1 293 1 242 5 243 4 322 1 
347 4 145 1 297 3 125 16 30 9 113 1 128 4 251 3 130 2 44 1 280 3 154 3 200 7 49 8 306 2 262 1 314 2 77 1 97 1 98 1 17 1 236 3 78 4 184 1 242 6 243 4 322 1 
200 4 176 1 348 2 297 1 306 1 287 3 125 7 30 3 159 3 251 3 236 3 173 1 242 6 
347 4 348 1 145 1 297 3 125 18 30 10 113 1 128 4 251 3 130 1 173 1 44 1 280 2 154 2 200 8 176 1 49 8 306 2 262 1 287 1 314 2 159 1 77 1 97 1 98 1 17 1 236 1 342 1 78 4 184 1 242 4 243 4 322 1 
200 4 347 2 176 1 348 1 297 1 306 1 49 4 287 1 125 8 30 4 314 1 159 1 128 2 251 2 236 1 342 1 173 1 78 2 242 3 243 2 
200 3 48 1 176 1 348 1 297 1 306 1 287 1 125 6 30 3 159 1 251 2 342 1 173 1 242 2 
200 2 347 1 297 1 306 1 49 2 125 4 30 2 128 1 251 1 130 1 236 1 78 1 242 2 293 1 280 1 243 1 154 1 
200 4 297 1 306 1 125 7 30 3 55 1 251 1 17 2 130 1 236 1 184 1 242 2 280 1 322 1 154 1 
347 2 348 1 297 3 125 23 30 11 111 1 128 2 251 5 130 2 173 1 280 2 154 2 200 12 176 1 306 3 49 4 287 2 135 1 55 1 314 2 159 2 17 2 236 4 342 1 78 2 184 2 58 1 242 9 243 2 
200 1 17 1 125 1 
184 1 125 1 30 1 
200 3 347 1 297 1 49 2 306 1 125 6 30 3 128 1 251 2 236 1 130 1 78 1 293 1 242 3 280 1 243 1 24 1 154 1 
347 1 145 1 297 2 125 12 30 6 113 1 128 1 251 1 130 2 44 1 280 2 154 2 200 6 49 2 306 2 262 1 97 1 98 1 17 1 236 1 78 1 184 1 242 2 243 1 322 1 
200 3 297 1 306 1 287 1 125 6 30 3 159 1 251 1 236 1 173 1 242 2 
200 2 347 1 176 1 348 1 49 2 287 1 135 1 125 3 30 1 314 1 159 1 128 1 251 1 236 1 78 1 242 2 243 1 
200 5 347 1 297 2 49 2 306 2 262 1 287 2 125 10 30 5 159 2 128 1 251 3 236 2 173 1 78 1 45 1 242 5 243 1 
347 1 297 1 49 2 262 1 125 2 30 2 128 1 236 1 78 1 242 1 280 1 243 1 
200 2 347 1 297 1 306 1 49 2 262 1 125 4 30 2 128 1 251 1 130 1 236 1 78 1 242 2 280 1 243 1 154 1 
200 2 347 3 49 6 262 1 135 1 287 1 125 3 30 1 314 1 159 1 77 1 128 3 251 1 236 1 78 3 242 2 243 3 
347 5 348 1 297 5 106 1 125 34 30 16 275 1 128 5 251 7 130 3 173 2 280 3 154 3 200 18 176 1 49 10 306 5 262 1 287 3 135 1 39 1 55 1 314 2 159 3 77 1 17 4 236 5 342 1 78 5 184 3 293 1 242 12 243 5 322 1 
333 1 299 1 209 1 
333 1 170 1 225 1 310 1 79 1 313 1 
48 1 156 1 4 1 183 1 208 1 85 1 186 1 0 1 230 1 289 1 100 1 
144 2 156 1 250 1 221 1 0 1 137 2 230 1 2 1 289 1 263 1 43 1 4 1 365 1 183 1 368 1 186 1 142 1 100 1 
160 1 144 1 365 1 368 1 137 1 142 1 2 1 
160 1 144 1 365 1 368 1 137 1 142 1 2 1 
160 1 140 1 95 1 
160 1 140 1 95 1 
156 1 4 1 186 1 171 1 289 1 100 1 
247 1 335 1 156 7 93 1 27 1 71 1 52 1 221 1 171 1 0 3 230 2 289 2 264 1 303 1 4 7 183 2 186 6 7 1 8 1 175 1 100 3 
295 1 347 2 164 1 348 1 189 1 144 2 297 1 107 1 125 6 250 1 221 1 349 1 30 3 0 1 2 1 148 1 128 2 251 2 43 1 4 1 173 1 228 1 356 2 200 3 176 1 335 1 156 1 306 1 49 4 287 1 204 1 137 2 230 1 289 1 159 1 263 2 265 2 342 1 365 1 78 2 368 1 186 1 242 2 243 2 142 1 100 1 
163 1 346 1 126 1 0 2 277 1 276 1 195 1 4 1 64 2 224 1 256 1 88 1 258 1 156 1 157 2 203 2 158 1 95 3 15 1 139 2 19 1 318 1 366 1 183 1 186 1 369 1 41 2 140 3 
335 1 156 2 71 1 221 1 171 1 327 1 0 2 230 1 289 1 4 2 369 1 186 2 100 2 
156 4 335 1 336 1 0 1 230 1 289 1 4 4 116 1 183 1 85 1 208 1 186 4 100 1 
156 1 93 1 221 1 0 1 230 1 231 1 289 1 232 1 160 1 4 1 186 1 8 1 344 1 100 2 
156 1 115 1 4 1 183 1 253 1 186 1 289 1 100 1 
156 2 335 1 303 1 4 2 186 2 355 1 289 1 100 1 
156 4 335 1 247 1 52 1 0 3 230 2 289 2 160 1 4 4 116 1 183 1 208 1 85 1 186 3 7 1 100 2 
156 2 335 1 93 1 52 1 221 1 0 2 230 2 289 2 232 1 114 1 4 2 183 1 85 1 186 2 8 1 344 1 100 3 
144 2 156 1 221 1 0 1 137 2 230 1 2 1 290 1 289 1 263 1 43 1 4 1 365 1 183 1 368 1 186 1 142 1 100 1 
160 1 
67 1 144 1 137 1 73 1 269 1 99 1 2 1 76 1 194 1 
330 1 282 1 76 1 
263 1 67 1 291 1 194 1 76 1 
67 2 38 1 191 1 202 1 311 1 95 2 362 1 76 1 194 2 291 2 263 1 277 1 19 1 318 1 266 1 330 1 140 2 258 1 282 1 
48 1 334 1 29 1 316 1 
334 1 68 1 308 1 122 1 6 1 29 1 316 1 
359 1 122 1 233 1 
334 1 68 3 182 2 308 1 367 1 122 3 6 1 29 1 87 1 226 1 227 1 316 1 
285 1 334 1 68 2 28 1 308 1 122 2 6 1 29 1 316 1 
222 1 351 1 68 1 146 1 308 1 319 1 122 1 6 1 87 1 35 1 316 1 
334 1 68 1 308 1 122 1 6 1 87 1 316 1 
334 2 68 1 308 1 122 1 6 1 29 1 87 1 
324 1 334 1 68 2 308 2 271 1 118 1 316 1 6 2 122 2 87 1 
285 2 334 1 68 3 308 1 338 1 29 1 316 2 222 1 20 1 6 1 122 3 292 1 87 1 
68 1 308 1 108 1 122 1 6 1 253 1 87 1 
285 2 334 1 68 4 308 2 28 1 338 1 29 1 316 2 222 1 6 2 122 4 87 1 90 1 
334 1 68 1 308 1 122 1 6 1 29 1 87 1 316 1 
285 2 334 2 68 4 83 1 308 1 338 1 29 2 316 3 222 1 182 1 367 1 122 4 6 1 226 1 
215 1 285 1 334 1 68 2 246 1 308 1 29 1 316 1 354 1 6 1 122 2 87 1 
334 1 68 3 182 2 308 1 367 1 122 3 6 1 29 1 339 1 87 1 226 2 316 1 
26 1 185 2 210 1 316 2 
68 1 308 1 122 1 6 1 87 1 350 1 
285 1 334 1 68 2 20 1 308 1 122 2 6 1 29 1 87 1 316 1 
260 1 
334 1 68 1 308 1 122 1 6 1 29 1 87 1 316 1 
285 1 68 3 334 1 308 1 29 1 316 1 20 1 182 1 6 1 122 3 87 1 
222 1 83 1 338 1 316 1 
334 1 316 1 

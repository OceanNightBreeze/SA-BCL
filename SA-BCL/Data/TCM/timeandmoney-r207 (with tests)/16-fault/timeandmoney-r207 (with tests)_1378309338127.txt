#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (100,329) (100,329) 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (128,343) (128,343) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 120 160 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (97,124,137) (25,135,275) (25,135,275) (25,135,275) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (97,124,137) (25,135,275) (25,135,275) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (97,124,137) (25,135,275) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (97,124,137) (25,135,275) (25,135,275) (25,135,275) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 9 86 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 285 123 33 251 35 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 285 123 33 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 285 123 33 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 285 123 33 251 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 285 123 33 251 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (97,124,137) (97,124,137) (97,124,137) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (97,124,137) (97,124,137) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (97,124,137) (97,124,137) (97,124,137) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 51 131 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 8 37 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (128,343) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 9 86 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 214 338 18 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 214 338 18 96 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (128,343) (128,343) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException 272 (308,341) (308,341) 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 272 (308,341) (308,341) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 261 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException 272 (308,341) (308,341) 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 206 1 232 2 231 1 81 1 132 1 42 1 44 1 308 1 282 6 349 2 113 9 184 1 313 3 287 1 314 2 335 1 267 2 316 2 57 4 224 2 320 1 341 1 359 1 59 9 104 2 252 1 272 4 149 1 
61 1 206 1 232 2 231 1 81 1 132 1 42 1 44 1 308 1 282 6 113 9 349 2 184 1 313 3 287 1 314 2 335 1 316 2 267 2 57 4 224 2 320 1 341 1 359 1 59 9 104 2 252 1 272 4 149 1 
61 1 206 1 232 2 231 1 81 1 132 1 42 1 44 1 308 1 282 6 113 9 349 2 184 1 313 3 287 1 314 2 335 1 316 2 267 2 57 4 224 2 320 1 341 1 359 1 59 9 104 2 252 1 272 4 149 1 
61 1 206 1 232 2 231 1 81 1 132 1 44 1 308 1 282 4 113 7 349 1 184 1 313 2 287 1 314 2 335 1 316 2 267 2 57 3 224 2 320 1 341 1 359 1 59 7 104 2 252 1 272 3 149 1 
313 1 314 1 335 1 132 1 267 1 316 1 42 1 57 2 308 1 224 1 282 3 113 4 349 2 184 1 341 1 359 1 104 1 59 4 272 2 
274 1 287 1 314 1 113 1 232 1 184 1 59 1 267 1 329 1 100 1 
313 1 314 2 61 1 335 1 232 1 267 2 57 1 308 1 282 1 113 3 184 1 341 1 59 3 272 1 
61 1 232 1 231 1 132 1 42 1 308 1 282 7 113 9 349 2 184 1 313 3 314 2 335 1 267 2 316 1 57 4 224 1 249 1 341 1 359 1 59 9 104 1 148 1 272 4 149 1 
61 1 232 1 231 1 132 1 42 1 308 1 282 7 113 9 349 2 184 1 313 3 314 2 335 1 267 2 316 1 57 4 224 1 249 1 341 1 359 1 59 9 104 1 148 1 272 4 149 1 
143 1 144 1 28 1 
281 2 28 1 85 1 
265 2 345 1 90 2 350 1 193 2 208 2 226 2 298 2 
0 2 324 1 229 1 345 1 11 1 155 1 79 1 154 2 208 2 235 1 1 1 110 1 305 1 45 1 279 2 159 1 90 2 350 1 48 1 17 1 163 2 138 1 215 1 166 1 168 1 265 3 193 3 24 1 336 1 122 1 245 2 289 1 76 1 226 2 361 1 298 2 107 1 
265 1 345 1 90 1 193 1 201 1 208 1 226 1 253 1 298 1 228 1 
265 1 193 1 208 1 28 1 317 1 348 1 214 1 143 1 13 1 296 1 332 1 297 1 253 1 311 1 
265 1 193 1 208 1 28 1 317 1 143 1 90 1 13 1 296 1 332 1 226 1 297 2 298 1 253 1 311 2 
4 1 266 1 294 1 297 1 311 1 
4 1 143 1 294 1 295 1 297 2 28 1 240 1 311 2 
4 1 297 1 311 1 
345 1 265 1 193 1 208 1 318 1 90 1 294 1 201 1 226 1 297 1 253 1 298 1 228 1 311 1 
28 1 
4 1 143 1 294 1 295 1 65 1 297 2 28 1 311 2 
4 2 108 2 20 2 264 1 243 1 28 1 111 1 356 1 337 1 143 1 88 1 294 2 295 1 34 1 128 1 323 2 297 5 343 1 311 5 
144 1 350 1 
265 2 193 2 208 2 248 1 90 1 350 2 226 1 36 1 298 1 
187 1 69 1 38 1 
166 1 324 1 265 1 176 1 154 1 79 1 193 1 122 1 245 1 1 1 110 1 76 1 350 1 48 1 17 1 163 1 
166 1 324 1 265 2 79 1 154 1 193 2 208 1 122 1 245 1 1 1 110 1 222 1 247 1 76 1 90 1 48 1 226 1 17 1 163 1 38 1 
265 3 90 3 350 1 193 3 208 3 226 3 298 1 222 1 
265 1 90 1 193 1 201 1 208 1 226 1 253 1 
265 1 90 1 193 1 208 1 226 1 36 1 253 1 298 1 248 1 
0 1 229 1 324 1 345 1 155 1 79 1 154 1 208 3 235 1 1 1 110 1 305 1 45 1 279 2 90 3 350 1 48 1 13 1 332 1 17 1 163 1 311 1 215 1 166 1 168 1 217 1 265 4 193 4 24 1 122 1 245 1 289 1 317 1 222 1 248 1 247 1 76 1 145 1 296 1 226 3 297 1 298 2 253 1 107 1 
214 1 338 1 265 2 90 1 350 1 193 2 208 2 226 1 222 1 
19 1 265 3 193 3 208 3 28 1 317 1 222 2 248 1 247 1 90 3 145 1 13 1 332 1 296 1 226 3 297 1 298 1 253 1 311 1 
265 2 193 2 208 2 222 1 248 1 90 2 226 2 69 1 298 1 38 1 
166 1 324 1 265 1 154 1 79 1 193 1 122 1 245 1 110 1 1 1 76 1 350 1 48 1 17 1 163 1 
166 1 216 1 324 1 265 1 154 1 79 1 193 1 211 1 122 1 245 1 1 1 350 1 48 1 17 1 163 1 
0 4 155 1 235 1 328 1 182 1 112 1 45 1 279 2 46 1 114 1 67 1 187 2 93 1 69 2 138 2 333 1 168 1 24 1 289 1 221 1 354 1 30 1 107 2 38 2 
265 1 90 1 193 1 208 1 226 1 202 1 253 1 317 1 
265 5 193 5 208 5 220 1 222 2 248 1 247 1 214 1 338 1 90 4 136 1 350 1 226 4 298 1 
265 2 90 2 193 2 201 1 208 2 226 2 202 1 253 1 
327 1 106 1 
327 1 106 1 
31 1 227 1 
31 1 227 1 
31 1 227 1 
256 1 327 1 106 1 
256 1 327 1 106 1 
327 1 277 1 106 1 
31 1 342 1 82 1 227 1 327 2 106 2 
256 1 327 1 106 1 
327 1 355 1 106 1 
327 1 355 1 106 1 
327 1 355 1 106 1 
77 2 150 1 263 1 151 1 5 2 300 3 210 1 98 1 28 1 327 2 268 2 29 1 278 2 257 2 342 1 297 2 188 1 106 2 311 2 
77 1 150 1 39 1 300 1 63 1 177 1 208 2 327 1 303 1 277 1 236 1 257 1 90 2 350 1 52 1 311 1 5 1 265 2 193 2 268 1 322 1 226 2 297 1 106 1 
224 1 104 1 316 1 
274 1 
274 1 
274 1 
274 1 
4 1 344 1 108 1 20 1 120 1 353 1 28 1 246 1 111 1 337 1 143 1 294 3 49 1 295 1 323 1 297 4 311 4 189 1 
4 2 20 1 108 1 344 1 120 1 266 1 219 1 28 1 212 1 111 1 337 1 143 1 199 1 294 3 49 1 295 1 323 1 297 4 311 4 
20 1 108 1 120 1 294 1 49 1 34 1 323 1 297 2 246 1 111 1 189 1 311 2 
108 1 20 1 120 1 246 1 111 1 49 1 160 1 34 1 323 1 297 1 189 1 311 1 
144 1 141 1 1 1 
1 1 51 1 
306 1 
166 1 1 1 
166 1 141 2 79 1 347 1 1 3 304 1 
166 1 79 1 1 1 
302 1 1 1 
333 3 0 14 22 2 276 2 180 2 234 1 156 1 221 3 112 4 134 1 358 1 239 1 147 1 93 5 95 1 164 2 107 6 138 8 
333 3 0 14 22 2 276 2 180 2 234 1 156 1 221 3 112 4 134 1 358 3 239 1 147 1 93 7 95 1 164 2 107 6 138 8 
333 3 0 14 22 2 276 2 180 2 179 1 234 1 156 1 221 3 112 4 134 1 358 1 147 1 239 1 93 5 95 1 164 2 107 6 138 8 
0 40 276 3 180 2 234 1 235 1 156 2 83 1 112 7 45 1 134 2 279 2 46 3 239 1 186 3 115 1 93 14 95 1 164 3 165 1 138 21 70 1 333 6 22 3 24 1 244 1 289 1 221 6 30 3 58 1 126 3 292 4 358 7 147 1 8 1 107 19 
0 16 276 2 235 2 180 2 156 1 112 5 45 2 134 1 279 4 239 1 93 7 95 1 164 2 138 9 333 3 21 1 22 2 24 2 289 2 221 3 58 1 358 2 147 1 130 1 107 7 
274 1 314 1 152 1 232 1 154 1 275 1 25 1 245 1 181 1 267 1 99 1 124 1 319 1 183 1 135 1 113 1 184 1 48 1 59 1 17 1 163 1 273 1 
274 1 314 1 242 1 232 1 154 1 275 1 25 1 245 1 181 1 267 1 99 1 124 1 319 1 183 1 282 1 113 2 48 1 310 1 59 2 17 1 286 1 163 1 273 1 
274 1 242 1 154 1 232 1 25 1 245 1 181 1 99 1 124 1 183 1 282 1 113 1 48 1 59 1 17 1 286 1 163 1 273 1 
166 1 204 1 314 1 324 1 23 1 232 2 154 1 245 1 267 1 1 1 99 2 183 2 173 1 113 1 48 1 310 1 59 1 161 1 16 1 17 1 163 1 273 2 363 1 
274 1 314 1 232 1 154 1 275 1 25 1 245 1 181 1 267 1 99 1 124 1 319 1 183 1 135 1 113 1 184 1 48 1 59 1 17 1 286 1 163 1 273 1 
84 1 
108 1 20 1 324 1 154 1 245 1 111 1 86 1 337 1 49 1 323 1 297 1 163 1 9 1 311 1 
230 1 208 1 301 1 65 1 214 1 348 1 307 1 13 1 185 2 332 1 117 1 311 3 4 2 265 1 193 1 317 1 198 1 103 1 295 1 296 1 297 3 253 1 
208 1 301 1 65 1 214 1 348 1 307 1 13 1 185 3 332 1 117 1 311 3 4 1 265 1 193 1 28 1 317 1 198 1 143 1 103 1 340 1 295 1 296 1 297 3 253 1 
230 1 208 1 301 1 65 1 214 1 348 1 307 1 13 1 185 3 332 1 117 1 311 3 4 2 265 1 193 1 28 1 317 1 198 1 143 1 103 1 340 1 295 1 360 1 296 1 297 3 253 1 
108 1 230 2 208 1 301 1 65 1 111 1 214 1 348 1 88 1 307 1 331 1 13 1 185 2 332 1 285 1 117 1 311 3 4 3 20 1 191 1 265 1 139 1 192 1 193 1 123 1 317 1 337 1 198 1 33 1 146 1 103 1 251 1 295 1 360 2 296 1 35 1 323 1 297 3 253 1 
108 1 208 1 301 1 111 1 348 1 214 1 88 1 307 1 331 1 13 1 185 2 332 1 285 1 117 1 311 2 20 1 191 1 265 1 139 1 192 1 193 1 317 1 337 1 198 1 103 1 296 1 323 1 297 2 253 1 
108 1 208 1 301 1 111 1 214 1 348 1 88 1 307 1 331 1 13 1 185 2 332 1 285 1 117 1 311 2 20 1 191 1 265 1 139 1 192 1 193 1 123 1 317 1 337 1 198 1 33 1 103 1 146 1 296 1 323 1 297 2 253 1 
108 1 208 1 301 1 111 1 214 1 348 1 88 1 307 1 331 1 13 1 185 2 332 1 285 1 117 1 311 2 20 1 191 1 265 1 139 1 192 1 193 1 123 1 317 1 337 1 198 1 33 1 103 1 146 1 296 1 323 1 297 2 253 1 
108 1 230 2 208 1 301 1 111 1 214 1 348 1 281 2 88 1 307 1 13 1 185 4 332 1 285 1 262 1 117 1 311 4 4 4 20 1 191 2 265 1 192 2 54 1 193 1 28 1 123 1 317 1 32 2 337 1 198 1 143 1 103 1 340 2 250 1 360 2 295 2 296 1 323 1 271 2 297 4 253 1 
108 1 230 1 208 1 301 1 111 1 214 1 348 1 88 1 307 1 331 1 13 1 185 3 332 1 285 1 117 1 311 2 4 1 20 1 191 1 265 1 139 1 192 1 193 1 123 1 317 1 337 1 198 1 33 1 146 1 103 1 340 1 251 1 360 1 296 1 323 1 297 2 253 1 
108 1 230 1 208 1 301 1 111 1 214 1 348 1 88 1 307 1 331 1 13 1 185 3 332 1 285 1 117 1 311 2 4 1 20 1 191 1 265 1 139 1 192 1 193 1 123 1 317 1 337 1 198 1 33 1 146 1 103 1 340 1 251 1 360 1 296 1 323 1 297 2 253 1 
230 2 88 1 281 2 185 4 332 1 285 1 4 4 191 2 192 2 54 1 193 1 337 1 198 1 143 1 103 1 340 2 295 2 296 1 297 4 253 1 108 1 208 1 301 1 111 1 214 1 348 1 307 1 13 1 117 1 311 4 20 1 169 1 265 1 28 1 317 1 32 2 360 2 323 1 271 2 
333 1 0 5 22 1 168 1 155 1 276 1 24 1 180 1 235 1 289 1 221 1 112 2 45 1 279 2 144 1 350 2 114 1 239 1 147 1 93 2 164 1 107 2 138 3 
0 14 155 1 64 1 235 2 305 1 112 1 45 2 279 4 46 2 159 1 350 1 186 3 93 2 187 11 69 4 138 8 70 1 333 1 168 2 24 2 73 1 289 2 221 2 30 1 200 1 357 1 126 2 292 3 358 1 129 1 8 1 107 6 38 11 
0 2 324 1 176 1 79 1 154 1 155 1 208 1 12 1 235 1 1 1 110 1 305 1 45 1 279 2 90 1 159 1 350 1 48 1 17 1 69 1 163 1 138 1 166 1 168 1 265 2 193 2 24 1 122 1 288 1 245 1 315 1 289 1 222 1 247 1 76 1 226 1 129 1 107 1 
0 27 324 1 229 2 79 2 276 2 180 2 235 3 1 2 133 1 45 3 279 6 46 2 90 1 47 2 239 1 48 2 93 7 187 6 95 1 138 14 333 5 193 3 245 1 289 3 142 2 247 1 147 1 253 1 107 13 154 1 155 3 208 1 109 2 110 2 305 1 158 2 112 6 159 1 350 3 15 1 17 2 69 6 163 1 164 2 166 2 22 1 168 3 265 3 24 3 122 2 221 5 222 1 30 2 76 2 126 2 358 1 226 1 129 1 175 1 38 6 
204 1 205 1 0 2 152 1 324 2 154 7 155 2 208 1 235 2 1 3 43 1 66 1 305 1 45 2 279 4 90 1 159 1 114 1 48 2 286 1 17 2 163 8 138 1 352 1 166 2 168 2 265 1 194 1 193 1 24 2 245 8 289 2 222 1 173 1 225 1 7 1 226 1 361 2 107 1 
0 3 155 1 208 1 235 1 112 1 45 1 279 2 46 1 90 1 93 1 187 1 69 1 138 1 333 1 168 1 265 1 193 1 24 1 289 1 74 1 221 1 248 1 30 1 126 1 226 1 129 1 298 1 38 1 107 2 
0 2 168 1 155 1 24 1 235 1 289 1 221 1 45 1 279 2 46 1 358 1 114 1 67 1 93 1 187 1 69 1 38 1 138 2 
333 1 0 2 168 1 155 1 24 1 235 1 289 1 328 1 30 1 112 1 45 1 279 2 114 1 93 1 187 1 69 1 38 1 107 2 
0 4 155 1 235 1 112 1 45 1 279 2 46 1 114 1 187 2 93 2 69 2 138 2 333 1 168 1 24 1 289 1 221 1 30 1 126 1 358 1 38 2 107 2 
0 2 168 1 155 1 24 1 235 1 289 1 221 1 66 1 45 1 279 2 46 1 358 1 67 1 93 1 187 1 69 1 38 1 138 2 
333 1 0 2 168 1 155 1 24 1 235 1 289 1 66 1 328 1 30 1 112 1 45 1 279 2 93 1 187 1 69 1 38 1 107 2 
0 4 155 1 235 1 66 1 112 1 45 1 279 2 46 1 187 2 93 2 69 2 138 2 333 1 168 1 24 1 289 1 221 1 30 1 126 1 358 1 38 2 107 2 
0 4 155 1 235 1 112 1 45 1 279 2 46 1 187 2 93 2 69 2 138 2 333 1 168 1 24 1 289 1 221 1 30 1 126 1 358 1 38 2 107 2 
0 2 229 1 324 1 79 1 154 1 155 1 235 1 110 1 1 1 305 1 45 1 279 2 159 1 350 1 48 1 17 1 163 1 138 1 166 1 168 1 265 1 193 1 24 1 122 1 245 1 289 1 76 1 107 1 
0 2 324 1 79 1 40 1 154 1 155 1 211 1 235 1 1 1 305 1 45 1 279 2 159 1 350 1 48 1 17 1 163 1 138 1 166 1 216 1 168 1 265 1 193 1 24 1 122 1 245 1 289 1 107 1 
0 4 155 1 235 1 112 1 45 1 279 2 46 1 187 2 93 2 69 2 138 2 333 1 168 1 24 1 289 1 221 1 30 1 126 1 358 1 129 1 38 2 107 2 
0 4 229 1 152 1 79 1 154 1 155 1 235 1 110 1 1 1 112 1 45 1 279 2 46 1 48 1 93 2 187 2 17 1 69 2 163 1 138 2 333 1 166 1 168 1 265 1 193 1 24 1 122 1 245 1 289 1 221 1 142 1 30 1 76 1 126 1 358 1 107 2 38 2 
0 3 325 1 155 1 208 1 235 1 45 1 279 2 46 1 90 1 93 1 187 1 69 1 138 2 333 1 168 1 265 1 193 1 24 1 289 1 221 1 30 1 248 1 126 1 358 1 226 1 129 1 298 1 107 1 38 1 
0 19 233 2 209 1 235 2 112 3 87 1 45 2 279 4 46 3 3 2 186 1 14 1 93 6 94 1 138 9 70 1 333 3 21 1 71 1 24 2 26 1 289 2 221 3 30 3 75 1 126 3 292 2 358 3 8 1 107 10 
0 26 78 1 233 4 209 1 235 3 112 2 87 2 45 3 279 6 309 1 46 3 3 1 186 2 93 4 94 1 138 14 333 2 21 1 334 1 71 2 24 3 289 3 221 3 30 2 75 1 58 2 126 3 292 2 358 2 321 1 339 1 8 2 107 12 37 1 
0 41 78 1 233 4 276 1 235 3 180 1 87 2 45 3 279 6 46 4 3 1 186 3 239 1 93 8 94 1 138 20 333 5 334 1 289 3 58 1 292 4 339 1 147 1 8 3 107 21 207 1 209 1 112 4 309 1 14 1 164 1 70 1 21 1 22 1 71 1 24 3 221 5 30 4 75 1 126 4 358 4 321 1 37 1 
0 38 207 1 78 1 233 4 276 1 209 1 180 1 235 4 112 4 87 2 45 4 279 8 309 1 46 4 3 1 239 1 186 3 14 1 93 7 94 1 164 1 138 20 70 1 333 4 21 1 22 1 334 1 71 1 24 4 289 4 221 5 30 3 75 1 58 2 126 4 292 4 321 1 339 1 358 3 147 1 8 3 37 1 107 18 
0 52 78 1 233 4 276 1 209 1 180 1 235 2 112 7 87 1 45 2 279 4 309 1 46 7 3 1 239 1 186 4 93 14 94 1 164 1 138 27 70 2 333 8 21 1 22 1 334 1 71 1 24 2 289 2 221 8 30 7 75 1 58 1 357 2 126 7 292 4 321 1 339 1 358 7 147 1 8 2 37 1 107 25 
77 1 257 1 263 1 5 1 342 1 327 1 268 1 213 1 29 1 106 1 
322 1 277 1 
77 1 257 1 5 1 127 1 283 1 327 1 268 1 362 1 106 1 
150 1 77 1 263 1 151 1 5 1 300 2 98 1 28 1 327 1 268 1 29 1 278 1 257 1 342 1 297 1 188 1 311 1 106 1 
150 1 77 1 263 1 151 1 5 1 300 2 98 1 28 1 327 1 268 1 29 1 278 1 257 1 342 1 297 1 188 1 311 1 106 1 
150 1 77 1 263 1 151 1 5 1 300 2 98 1 28 1 327 1 268 1 29 1 278 1 257 1 342 1 297 1 188 1 311 1 106 1 
223 1 82 1 256 1 
223 1 82 1 256 1 
270 1 82 1 355 1 
270 1 355 1 
39 1 236 1 
77 1 39 1 300 1 63 1 177 1 208 2 327 1 303 1 277 1 236 1 278 1 257 1 90 2 350 1 116 1 188 1 52 1 311 1 5 1 265 2 193 2 268 1 294 1 322 1 226 2 297 1 106 1 
223 1 256 1 
270 1 355 1 
0 2 155 1 154 2 208 2 235 1 1 1 43 1 305 1 45 1 279 2 2 1 159 1 48 1 284 1 17 1 163 2 138 1 166 1 118 1 352 1 168 1 265 2 193 2 24 1 72 1 245 2 289 1 56 1 129 1 361 2 107 1 
274 1 299 1 152 1 154 2 245 2 97 1 181 1 124 1 319 1 48 1 17 1 286 1 137 1 163 2 273 1 
274 1 10 1 319 1 154 1 48 1 245 1 17 1 181 1 137 1 286 1 124 1 163 1 273 1 
166 1 299 1 204 1 324 1 23 1 154 1 245 1 1 1 157 1 173 1 48 1 17 1 163 1 273 1 
274 1 299 1 154 1 245 1 97 1 181 1 124 1 319 1 48 1 17 1 286 1 137 1 163 1 273 1 
62 1 
143 1 88 1 144 1 128 1 28 1 111 1 343 1 
337 1 20 1 108 1 88 1 331 1 139 1 323 1 111 1 
166 1 108 1 20 1 324 1 131 1 79 1 154 1 245 1 1 1 304 1 337 1 330 1 48 1 323 1 17 1 51 1 163 1 
337 1 20 1 108 1 88 1 292 1 186 1 323 1 111 1 8 1 37 1 
333 1 108 1 20 1 276 1 180 1 221 2 237 1 111 1 337 1 88 2 146 1 50 2 323 1 297 1 95 1 164 1 311 1 
337 1 20 1 108 1 143 1 88 1 128 1 323 1 28 1 111 1 
333 1 60 1 121 1 221 1 28 1 85 1 111 1 30 1 88 2 281 2 126 1 46 1 
4 1 143 1 295 1 297 1 28 1 311 1 
337 1 290 1 20 1 108 1 324 1 154 1 49 1 323 1 245 1 163 1 111 1 9 1 86 1 
0 1 324 1 229 1 345 1 154 1 79 1 155 1 208 2 235 1 110 1 1 1 305 1 45 1 279 2 90 2 350 1 48 1 17 1 163 1 215 1 166 1 168 1 265 3 193 3 24 1 122 1 245 1 289 1 76 1 226 2 298 2 107 1 
108 1 345 1 208 1 111 1 90 1 49 1 20 1 265 1 193 1 28 1 318 1 337 1 143 1 201 1 323 1 226 1 298 1 253 1 228 1 
77 1 257 1 140 1 
77 1 257 1 140 1 
77 1 257 1 39 1 218 1 29 1 
77 1 257 1 140 1 
77 1 257 1 255 1 
77 1 257 1 255 1 
77 1 257 1 255 1 
77 1 257 1 
327 1 106 1 
0 17 276 2 235 2 180 2 112 4 45 2 279 4 239 1 93 7 95 1 164 2 138 9 333 3 22 1 24 2 289 2 221 3 58 1 358 3 147 1 107 8 
333 1 0 5 22 1 276 1 180 1 221 1 112 2 144 1 239 1 147 1 93 2 164 1 107 2 138 3 
333 1 0 4 24 1 235 1 289 1 221 1 30 1 112 1 45 1 279 2 126 1 46 1 358 1 93 2 53 1 107 2 138 2 
333 1 70 1 0 7 221 1 30 1 112 1 126 1 46 1 292 2 358 1 186 1 93 2 8 1 107 4 138 3 
0 25 64 1 276 2 180 2 235 1 112 5 45 1 279 2 46 2 239 1 186 2 93 7 95 1 164 2 138 13 333 5 70 1 22 1 24 1 289 1 221 5 30 2 58 1 126 2 357 1 292 2 358 2 147 1 107 12 
0 1 292 1 107 1 
0 1 186 1 138 1 
333 1 0 6 24 1 235 1 289 1 221 1 30 1 112 2 45 1 279 2 126 1 46 1 47 1 358 1 93 3 53 1 107 3 138 3 
0 12 78 1 235 1 112 1 45 1 279 2 46 2 186 1 93 2 138 6 333 2 21 1 334 1 24 1 289 1 221 2 30 2 126 2 292 1 358 1 339 1 321 1 8 1 107 6 37 1 
333 1 0 6 276 1 180 1 221 1 112 1 358 1 93 2 164 1 138 3 107 3 
0 3 276 1 24 1 235 1 289 1 112 1 58 1 260 1 45 1 279 2 358 1 147 1 239 1 93 2 164 1 138 1 107 2 
333 2 21 1 0 10 24 1 276 2 235 1 180 1 289 1 221 2 112 3 45 1 279 2 358 2 93 5 95 1 164 2 138 5 107 5 
21 1 0 2 24 1 235 1 289 1 221 1 45 1 279 2 46 1 358 1 93 1 138 2 
333 1 21 1 0 4 24 1 235 1 289 1 221 1 30 1 112 1 45 1 279 2 126 1 46 1 358 1 93 2 107 2 138 2 
0 3 21 1 24 3 276 1 235 3 289 3 58 1 112 1 260 1 45 3 279 6 358 1 14 1 93 2 164 1 107 2 138 1 
0 31 276 2 180 2 235 4 83 1 112 5 45 4 279 8 46 2 239 1 186 3 115 1 14 1 93 9 95 1 164 2 53 1 165 1 138 16 333 5 21 1 22 1 24 4 289 4 221 5 30 2 58 1 126 2 292 3 358 4 147 1 8 1 107 15 
0 15 276 2 235 1 180 2 112 4 45 1 279 2 186 1 239 1 93 5 95 1 164 2 138 8 333 3 21 1 22 1 24 1 289 1 221 3 292 1 358 1 147 1 8 1 107 7 37 1 
0 18 276 2 180 2 235 2 112 4 45 2 279 4 46 1 239 1 186 1 93 6 95 1 164 2 53 1 138 10 333 3 70 1 21 1 22 1 24 2 289 2 221 4 126 1 292 2 358 2 147 1 8 1 107 8 37 1 
0 26 78 1 276 2 180 2 235 3 112 5 45 3 279 6 46 2 239 1 186 1 93 7 95 1 164 2 53 1 138 13 333 5 21 1 22 1 334 1 24 3 289 3 221 5 30 2 58 1 126 2 292 1 358 2 321 1 339 1 147 1 8 1 107 13 37 1 
0 24 78 1 276 2 180 2 235 3 112 5 45 3 279 6 46 2 239 1 186 1 93 9 95 1 164 2 53 1 138 14 333 4 21 1 22 1 334 1 24 3 289 3 221 5 30 1 58 1 126 2 292 1 358 4 339 1 321 1 147 1 8 1 107 10 37 1 
0 15 276 2 235 1 180 2 112 4 45 1 279 2 186 1 239 1 93 5 95 1 164 2 138 8 333 3 21 1 22 1 24 1 289 1 221 3 292 1 358 1 147 1 8 1 107 7 37 1 
0 12 78 1 235 1 112 1 45 1 279 2 46 2 186 1 93 2 138 6 333 2 21 1 334 1 24 1 289 1 221 2 30 2 126 2 292 1 358 1 339 1 321 1 8 1 107 6 37 1 
0 25 78 1 276 2 180 2 235 4 112 5 45 4 279 8 46 2 239 1 186 1 93 7 95 1 164 2 53 1 138 14 333 4 21 1 22 1 334 1 24 4 289 4 221 5 30 1 58 2 126 2 292 1 358 2 321 1 339 1 147 1 8 1 107 11 37 1 
0 16 78 1 235 4 112 3 45 4 279 8 46 3 186 1 14 1 93 6 138 9 333 2 21 1 334 1 24 4 289 4 221 3 30 2 58 2 126 3 292 1 358 3 321 1 339 1 8 1 107 7 37 1 
333 1 0 7 276 3 180 1 221 1 112 3 358 3 239 1 147 2 93 6 164 3 107 4 138 3 
0 25 78 1 276 2 180 2 235 4 112 5 45 4 279 8 46 2 239 1 186 1 14 1 93 7 95 1 164 2 138 14 333 4 21 1 22 1 334 1 24 4 289 4 221 5 30 1 58 2 126 2 292 1 358 2 321 1 339 1 147 1 8 1 107 11 37 1 
214 1 18 1 338 1 
214 1 18 1 338 1 96 1 6 1 190 1 326 1 346 1 
166 1 204 1 324 1 173 1 144 1 154 1 48 1 245 1 17 1 1 1 163 1 
166 1 324 1 265 2 79 1 154 1 193 2 208 1 122 1 245 1 1 1 110 1 222 1 90 1 350 1 48 1 226 1 17 1 163 1 
154 1 79 2 208 2 302 1 110 1 1 3 280 1 90 2 350 1 48 1 13 1 15 1 17 1 163 1 166 2 265 2 171 1 193 2 122 1 245 1 317 1 222 1 226 1 253 2 
154 1 79 2 208 2 211 1 302 1 1 3 280 1 90 2 350 1 48 1 13 1 15 1 17 1 163 1 166 2 265 2 171 1 193 2 122 1 245 1 317 1 222 1 226 1 253 2 
345 1 153 1 154 1 208 1 1 2 280 1 90 1 332 1 51 1 163 1 311 2 4 1 265 1 141 1 193 1 245 1 28 1 318 1 143 1 201 1 226 1 297 2 253 1 298 1 228 1 
345 1 154 1 79 1 208 1 302 1 1 4 280 1 90 1 48 1 332 1 17 1 51 1 163 1 311 2 4 1 166 1 265 1 141 1 171 1 193 1 245 1 28 1 318 1 101 1 143 1 201 1 226 1 297 2 253 1 298 1 228 1 
154 1 225 1 48 1 245 1 17 1 163 1 
166 2 205 1 152 1 324 2 154 6 79 1 194 1 245 7 197 1 55 1 1 3 43 1 304 1 258 1 225 1 7 1 48 2 286 1 17 3 361 1 163 7 
0 13 229 1 79 1 276 2 235 2 180 2 1 1 45 2 279 4 2 1 90 1 48 1 239 1 93 5 95 1 138 7 333 3 193 2 245 1 289 2 142 1 147 1 253 1 107 6 152 1 154 1 155 2 208 1 109 1 110 1 112 4 350 3 15 1 17 1 163 1 164 2 166 1 168 2 22 1 265 2 24 2 122 1 221 3 222 1 76 1 358 1 226 1 129 1 
108 2 324 1 154 1 80 1 1 2 111 1 238 1 88 1 91 1 332 1 163 1 51 1 311 3 4 2 20 2 141 1 245 1 28 1 337 2 290 1 101 1 143 1 294 1 295 1 128 1 323 2 297 3 343 1 
166 1 141 1 154 1 79 1 245 1 1 1 304 1 330 1 306 1 225 1 48 1 17 1 163 1 
204 1 166 1 324 1 152 1 154 4 245 4 1 1 291 1 173 1 48 1 68 1 17 1 163 4 
166 1 119 1 154 2 79 1 245 2 197 1 1 1 125 1 258 1 280 1 293 1 48 1 17 2 163 2 
274 1 324 1 154 1 48 1 245 1 17 1 181 1 163 1 
166 1 152 1 154 2 245 2 72 1 1 1 43 1 48 1 286 1 17 1 163 2 
204 1 166 2 205 1 324 1 152 1 154 4 245 5 1 3 43 1 280 1 173 1 48 2 7 1 68 1 17 2 163 5 
204 1 166 2 324 1 152 1 154 4 41 1 245 5 1 3 43 1 280 1 173 1 48 2 7 1 68 1 17 2 163 5 
166 1 324 1 265 2 79 1 154 1 193 2 208 1 122 1 211 1 245 1 1 1 222 1 90 1 350 1 48 1 226 1 17 1 163 1 
166 1 154 1 79 1 245 1 197 1 55 1 1 1 304 1 258 1 280 1 48 1 17 2 163 1 
170 1 89 1 350 1 92 1 203 1 
167 1 170 2 28 1 317 1 269 1 102 1 143 1 89 2 294 1 145 1 350 1 92 2 13 1 332 1 296 1 203 1 297 2 253 1 311 2 
118 1 265 1 193 1 208 1 56 1 89 1 92 1 284 1 203 1 
102 1 167 1 203 1 
308 1 144 1 341 1 
308 1 314 1 335 1 113 1 341 1 59 1 267 1 
232 1 59 1 99 1 
308 1 314 1 113 1 184 1 341 1 59 1 351 1 196 1 267 1 272 1 
314 1 335 1 267 1 308 1 282 1 113 2 349 1 341 1 59 2 
57 1 224 1 314 1 113 1 184 1 359 1 104 1 59 1 316 1 267 1 272 1 
308 1 314 1 113 1 184 1 59 1 267 1 
308 1 314 1 113 1 184 1 341 1 59 1 267 1 272 1 
314 2 254 1 267 2 27 1 308 1 113 2 184 1 59 2 105 1 
313 1 314 1 335 1 231 1 267 1 57 1 308 1 282 2 113 3 184 1 341 1 59 3 272 1 149 1 
274 1 314 1 261 1 113 1 184 1 59 1 267 1 
313 1 314 1 335 1 267 1 42 1 57 1 308 1 282 2 113 3 349 1 184 1 341 1 59 3 272 1 
314 1 335 1 267 1 308 1 113 1 184 1 341 1 59 1 
313 1 314 1 335 2 267 1 57 1 308 1 282 2 113 3 341 1 59 3 272 1 
314 1 335 1 178 1 267 1 308 1 282 1 113 2 184 1 174 1 249 1 341 1 59 2 
312 1 308 1 314 1 113 1 184 1 341 1 59 1 351 1 267 1 272 1 
195 1 172 1 272 2 241 2 
259 1 314 1 113 1 184 1 59 1 267 1 
314 1 335 1 231 1 267 1 308 1 282 1 113 2 184 1 341 1 59 2 
162 1 
314 1 335 1 267 1 308 1 113 1 184 1 341 1 59 1 
314 1 335 1 81 1 267 1 308 1 113 2 184 1 341 1 59 2 
57 1 313 1 335 1 272 1 
308 1 

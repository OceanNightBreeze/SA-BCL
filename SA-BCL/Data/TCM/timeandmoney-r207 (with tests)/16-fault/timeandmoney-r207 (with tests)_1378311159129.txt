#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 126 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 126 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (225,338) 189 (90,309) (90,309) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (225,338) 189 (90,309) (90,309) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (225,338) 189 (90,309) (90,309) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (225,338) 189 (90,309) (90,309) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 236 (140,287) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 236 (140,287) (140,287) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 236 (140,287) (140,287) 72 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 236 (140,287) (140,287) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 236 (140,287) (140,287) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 259 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 174 347 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 233 91 29 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 233 291 159 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 233 291 29 5 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 233 291 29 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 109 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 236 (140,287) (140,287) 72 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 233 91 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 233 91 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 1 25 9 124 1 1 1 2 1 340 2 232 9 181 1 94 2 126 1 171 1 143 3 343 1 337 1 146 7 338 1 281 4 164 2 234 1 56 1 47 1 149 4 
139 1 25 9 124 1 1 1 2 1 340 2 232 9 181 1 94 2 126 1 171 1 143 3 343 1 337 1 146 7 338 1 164 2 281 4 234 1 56 1 47 1 149 4 
25 1 340 1 232 1 164 1 309 1 181 1 234 1 90 1 225 1 24 1 189 1 
25 1 340 1 232 1 164 1 309 1 181 1 234 1 90 1 225 1 24 1 189 1 
25 1 340 1 232 1 164 1 309 1 181 1 234 1 90 1 225 1 24 1 189 1 
25 1 340 1 232 1 164 1 309 1 181 1 234 1 90 1 225 1 24 1 189 1 
25 4 124 1 1 1 340 1 232 4 181 1 94 2 143 1 171 1 146 3 337 1 164 1 281 2 56 1 47 1 149 2 
25 2 340 1 232 2 181 1 62 1 175 1 164 1 130 1 198 1 234 1 132 1 202 1 24 1 47 1 56 1 149 1 
25 3 340 2 232 3 181 1 143 1 146 1 338 1 175 1 164 2 281 1 234 1 202 1 149 2 
161 1 240 1 200 1 
161 1 273 1 160 2 
187 2 275 2 317 2 239 2 348 1 271 2 74 1 311 2 
284 1 317 2 28 1 239 2 74 1 118 2 289 1 321 1 76 1 32 1 323 2 325 1 271 3 10 1 203 1 152 2 155 1 329 1 293 1 180 1 275 3 229 1 332 1 348 1 255 2 13 1 311 2 208 1 335 1 187 2 88 1 260 1 18 2 111 1 188 1 283 1 315 1 
187 1 275 1 317 1 287 1 239 1 271 1 74 1 236 1 311 1 
0 1 60 1 275 1 305 1 73 1 206 1 84 1 311 1 161 1 240 1 243 1 17 1 271 1 23 1 
317 1 275 1 305 1 73 1 206 1 239 1 84 1 311 1 161 1 240 1 243 2 187 1 17 2 271 1 23 1 
243 1 156 1 36 1 17 1 282 1 
161 1 240 1 186 1 243 2 156 1 17 2 282 1 342 1 
243 1 17 1 282 1 
140 1 187 1 243 1 156 1 275 1 317 1 17 1 287 1 239 1 271 1 74 1 236 1 311 1 
161 1 
161 1 240 1 243 2 191 1 156 1 17 2 282 1 342 1 
140 1 26 1 238 3 72 1 317 1 287 1 193 1 239 1 342 1 74 1 240 2 243 5 244 1 199 1 290 2 176 2 271 1 226 1 274 1 248 4 156 2 275 1 11 2 251 2 158 1 311 1 161 2 162 2 187 1 17 5 354 1 21 1 282 2 236 1 136 1 69 1 
284 1 203 1 155 1 180 1 317 1 275 2 264 1 332 1 239 1 13 1 276 1 311 1 118 1 288 1 289 1 323 1 18 1 271 2 283 1 10 1 
200 1 348 1 
275 2 317 1 239 1 318 1 348 2 320 1 311 2 187 1 271 2 
288 1 306 1 167 1 
203 1 284 1 155 1 275 1 180 1 332 1 348 1 13 1 118 1 289 1 323 1 18 1 79 1 271 1 283 1 10 1 
0 1 317 4 275 5 264 1 170 1 239 4 318 1 348 1 276 2 311 5 351 1 187 1 308 1 271 5 
275 1 317 1 239 1 271 1 236 1 311 1 
187 1 275 3 317 3 239 3 348 1 271 3 276 1 311 3 
275 1 317 1 239 1 271 1 236 1 311 1 
187 1 275 1 317 1 84 1 239 1 271 1 318 1 320 1 311 1 
284 1 317 3 264 1 305 1 73 1 239 3 318 1 74 1 118 1 289 1 321 1 243 1 76 1 32 1 323 1 325 1 271 4 10 1 203 1 152 1 327 1 155 1 180 1 275 4 332 1 206 1 84 1 348 1 255 2 13 1 311 3 276 1 208 1 335 1 187 2 88 1 299 1 260 1 17 1 18 1 188 1 23 1 283 1 315 1 
0 1 275 2 317 1 170 1 239 1 348 1 271 2 311 2 276 1 
59 1 317 3 275 3 264 1 305 1 73 1 206 1 84 1 239 3 318 1 276 2 311 3 161 1 187 1 243 1 299 1 17 1 271 3 23 1 
317 2 275 2 306 1 239 2 318 1 276 1 311 2 288 1 187 1 271 2 
203 1 284 1 155 1 275 1 180 1 332 1 348 1 13 1 118 1 289 1 323 1 18 1 271 1 283 1 10 1 
284 1 275 1 180 1 332 1 348 1 207 1 13 1 118 1 289 1 16 1 323 1 18 1 271 1 283 1 10 1 
152 2 328 1 306 1 61 1 251 1 255 2 39 1 335 1 288 1 321 1 88 2 32 1 260 1 188 1 272 1 46 1 166 1 315 1 167 1 
241 1 275 1 317 1 305 1 84 1 239 1 271 1 311 1 
154 1 280 1 
154 1 280 1 
103 1 93 1 
103 1 93 1 
103 1 93 1 
154 1 280 1 86 1 
154 1 280 1 86 1 
154 1 280 1 286 1 
249 1 154 2 103 1 280 2 93 1 357 1 
154 1 280 1 86 1 
154 1 280 1 214 1 
154 1 280 1 214 1 
154 1 280 1 214 1 
263 1 168 1 317 2 265 1 286 1 239 2 96 1 75 1 243 1 271 2 55 1 154 1 275 2 231 1 310 1 348 1 253 1 311 2 15 1 41 1 280 1 17 1 314 1 138 1 
168 2 154 2 263 2 230 1 231 3 253 2 333 1 75 2 161 1 15 1 270 1 243 2 280 2 355 1 17 2 131 1 45 2 211 1 357 1 
124 1 56 1 47 1 
132 1 56 1 47 1 
70 1 124 2 115 1 132 1 81 1 47 3 
70 1 124 1 227 1 132 1 81 1 47 2 
70 2 124 1 132 1 81 1 47 2 
238 2 212 1 114 1 342 1 319 1 119 1 240 1 243 5 176 1 177 2 273 1 226 1 178 1 248 3 156 4 11 1 310 1 251 1 183 1 160 3 87 2 161 2 162 1 128 2 354 1 17 5 282 1 112 1 261 1 314 1 166 1 138 1 
140 1 238 2 212 1 317 1 114 1 116 1 287 1 342 1 239 1 74 1 119 1 240 1 243 6 176 1 271 1 177 2 273 1 226 1 248 3 156 5 11 1 275 1 36 3 251 1 160 3 87 2 311 1 161 3 162 1 187 1 354 1 17 6 339 1 261 1 112 1 282 4 67 3 134 1 314 2 166 1 236 1 
140 1 238 2 212 1 317 1 114 1 287 1 239 1 74 1 319 1 240 1 119 1 243 3 244 1 176 1 271 1 177 2 273 2 226 1 248 3 156 2 275 1 11 1 251 1 183 1 311 1 87 2 160 4 161 3 162 1 187 1 128 1 17 3 261 1 314 1 166 1 236 1 
238 2 212 1 114 1 319 1 119 1 243 2 244 1 176 1 177 2 273 2 226 1 248 3 156 1 11 1 251 1 183 1 160 4 87 2 161 2 162 1 128 1 259 1 17 2 261 1 314 1 166 1 
200 1 97 1 10 1 
65 1 10 1 
218 1 
289 1 180 1 10 1 
157 1 10 1 
289 1 10 1 
53 1 289 1 180 1 97 2 10 3 52 1 
152 7 294 1 4 1 229 4 251 1 193 1 39 2 107 1 88 3 258 1 108 1 21 1 272 3 235 2 346 1 226 1 136 1 
152 7 294 1 4 1 229 4 251 1 193 1 39 2 107 1 88 3 258 1 108 1 21 1 272 3 235 2 346 1 226 1 136 1 
152 7 294 1 4 1 229 4 251 1 193 1 98 1 39 2 107 1 88 3 258 1 108 1 21 1 272 3 235 2 346 1 226 1 136 1 
212 3 4 1 193 2 117 1 217 1 119 3 31 4 321 1 7 3 272 10 346 1 226 4 152 31 294 2 229 16 251 4 83 1 85 1 255 2 64 1 39 5 335 1 107 1 336 1 88 15 258 5 260 1 108 2 21 1 233 1 188 1 235 3 166 3 136 2 
72 1 4 1 193 2 321 2 272 9 346 1 226 3 152 16 331 1 294 1 229 9 251 3 255 4 64 1 39 5 185 1 335 2 88 7 258 4 260 2 108 1 21 2 188 2 235 2 136 2 
25 2 284 1 340 1 92 1 115 1 145 1 118 1 146 1 221 1 323 1 175 1 324 1 202 1 9 1 56 1 149 1 150 1 124 1 330 1 232 2 181 1 13 1 277 1 209 1 164 1 18 1 234 1 132 1 301 1 47 2 
25 3 284 1 340 1 115 1 145 1 118 1 146 2 221 1 323 1 175 1 324 1 202 1 9 1 56 1 149 1 124 1 330 1 232 3 13 1 277 1 209 1 129 1 353 1 164 1 18 1 234 1 20 1 132 1 301 1 47 2 
25 2 284 1 115 1 145 1 118 1 146 2 221 1 323 1 175 1 324 1 202 1 56 1 149 1 124 1 330 1 232 2 13 1 209 1 129 1 18 1 234 1 20 1 132 1 301 1 47 2 
25 1 284 1 179 1 35 1 330 2 340 1 232 1 298 1 13 1 172 1 118 1 289 1 344 1 353 1 323 1 221 2 324 2 164 1 18 1 234 2 34 1 283 1 10 1 
25 1 284 1 340 1 115 1 145 1 118 1 221 1 323 1 324 1 9 1 56 1 150 1 124 1 330 1 232 1 181 1 13 1 277 1 209 1 129 1 164 1 18 1 234 1 132 1 301 1 47 2 
205 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 275 1 11 1 60 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 162 1 243 2 174 1 17 2 354 1 176 1 8 1 23 1 271 1 
0 1 284 1 238 1 305 1 73 1 342 1 172 1 196 1 118 2 289 1 243 3 344 1 323 2 174 1 176 1 8 1 271 1 10 1 122 1 347 1 248 1 275 1 60 1 11 1 105 1 206 1 84 1 184 1 13 1 311 1 278 1 162 1 354 1 17 3 18 2 261 1 282 2 23 1 283 2 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 191 1 275 1 60 1 305 1 105 1 73 1 206 1 84 1 342 1 311 1 196 1 243 3 174 1 17 3 282 1 8 1 23 1 271 1 
0 1 347 1 275 1 11 1 60 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 162 1 243 2 174 1 17 2 354 1 176 1 8 1 23 1 271 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
0 1 347 1 60 1 275 1 305 1 105 1 73 1 206 1 84 1 311 1 196 1 243 2 174 1 17 2 8 1 271 1 23 1 
4 1 306 1 193 1 288 1 321 1 32 1 200 1 272 2 346 1 226 1 152 6 229 3 251 1 348 2 255 2 39 2 335 1 88 3 260 1 21 1 188 1 235 1 46 1 315 1 136 1 167 1 
212 3 306 3 194 1 119 3 31 4 288 12 321 2 32 1 7 3 325 1 272 2 226 3 152 15 153 1 229 10 348 1 254 1 255 4 335 2 336 2 88 5 258 2 43 1 260 2 233 1 111 1 188 2 135 1 315 2 167 12 
113 1 284 1 317 1 264 1 306 1 239 1 195 1 118 1 289 1 321 1 32 1 323 1 79 1 271 2 325 1 10 1 203 1 152 2 155 1 180 1 275 2 229 1 332 1 348 1 13 1 255 2 311 1 276 1 335 1 313 1 88 1 43 1 260 1 18 1 111 1 188 1 283 1 315 1 
284 1 317 1 239 1 289 1 288 2 321 2 147 1 323 1 325 1 10 1 203 1 152 5 155 1 332 1 255 4 13 1 63 1 335 2 258 2 260 2 18 1 109 1 167 2 212 1 264 1 306 2 118 1 119 1 76 1 77 1 32 2 271 2 272 3 226 1 275 2 180 1 229 3 276 1 311 1 39 1 88 2 43 1 188 2 133 1 283 1 315 2 
284 2 317 1 92 1 307 1 239 1 30 1 172 1 118 7 289 2 321 2 173 1 32 2 344 1 197 1 323 8 148 1 271 1 325 1 10 3 123 1 152 2 329 2 275 1 229 1 12 1 13 2 255 4 311 1 276 1 335 2 88 1 129 1 260 2 18 8 111 1 188 2 46 1 283 2 315 2 
212 1 317 1 306 1 341 1 239 1 318 1 119 1 288 1 321 1 32 1 272 1 271 1 226 1 152 3 275 1 229 1 251 1 255 2 39 1 311 1 335 1 187 1 88 2 43 1 260 1 188 1 166 1 315 1 167 1 
152 2 316 1 212 1 229 2 306 1 255 2 335 1 288 1 321 1 258 1 32 1 260 1 188 1 272 1 46 1 315 1 226 1 167 1 
152 2 306 1 61 1 251 1 255 2 39 1 335 1 288 1 321 1 88 2 32 1 260 1 188 1 272 1 46 1 166 1 315 1 167 1 
212 1 306 2 119 1 288 2 321 1 32 1 272 2 226 1 152 4 229 2 251 1 255 2 39 1 335 1 88 2 258 1 260 1 188 1 46 1 166 1 315 1 167 2 
152 2 316 1 212 1 229 2 306 1 307 1 255 2 335 1 288 1 321 1 258 1 32 1 260 1 188 1 272 1 315 1 226 1 167 1 
152 2 306 1 61 1 251 1 307 1 255 2 39 1 335 1 288 1 321 1 88 2 32 1 260 1 188 1 272 1 166 1 315 1 167 1 
152 2 212 1 229 2 306 1 307 1 255 2 335 1 119 1 288 1 321 1 258 1 32 1 260 1 188 1 272 1 315 1 226 1 167 1 
152 2 212 1 229 2 306 1 255 2 335 1 119 1 288 1 321 1 258 1 32 1 260 1 188 1 272 1 315 1 226 1 167 1 
284 1 118 1 289 1 321 1 76 1 32 1 323 1 271 1 325 1 10 1 203 1 152 2 155 1 180 1 275 1 229 1 332 1 348 1 13 1 255 2 335 1 88 1 260 1 18 1 111 1 188 1 283 1 315 1 
284 1 118 1 289 1 242 1 321 1 32 1 323 1 271 1 325 1 10 1 152 2 180 1 275 1 229 1 332 1 348 1 207 1 13 1 255 2 335 1 88 1 16 1 260 1 18 1 111 1 188 1 283 1 315 1 
152 2 212 1 229 2 306 1 255 2 335 1 119 1 288 1 321 1 258 1 32 1 43 1 260 1 188 1 272 1 315 1 226 1 167 1 
284 1 212 1 92 1 306 1 118 1 119 1 288 1 289 1 321 1 76 1 32 1 323 1 272 1 271 1 226 1 10 1 203 1 152 2 155 1 180 1 275 1 229 2 332 1 13 1 255 2 335 1 258 1 260 1 18 1 133 1 188 1 315 1 167 1 
212 1 317 1 306 1 239 1 318 1 119 1 288 1 321 1 32 1 272 1 271 1 226 1 152 2 275 1 229 2 255 2 311 1 335 1 187 1 106 1 258 1 43 1 260 1 188 1 315 1 167 1 
262 1 212 2 213 1 5 1 29 1 119 2 31 4 321 2 7 3 291 2 272 3 226 2 152 21 57 3 204 1 331 1 229 10 104 1 251 2 159 1 255 4 39 1 335 2 336 1 88 11 258 2 260 2 233 3 188 2 166 2 91 1 
262 1 212 2 213 1 5 1 29 1 119 2 31 3 321 2 7 2 291 2 272 4 226 2 152 17 57 2 204 1 331 1 229 8 104 1 251 2 159 1 255 4 39 2 335 2 336 1 88 9 258 2 260 2 233 2 188 2 166 2 
4 1 5 1 193 1 29 1 31 1 321 1 7 1 291 1 272 1 346 1 226 1 152 9 57 1 204 1 331 1 229 5 251 1 255 2 39 1 335 1 88 4 260 1 233 1 21 1 188 1 235 1 136 1 
262 1 212 3 213 2 5 1 29 1 119 3 31 2 321 2 7 1 291 1 54 1 272 6 226 3 152 19 57 2 204 1 331 1 229 9 104 1 251 3 255 4 39 3 335 2 336 1 88 10 258 3 260 2 233 1 188 2 166 3 
152 4 57 1 204 1 331 1 229 2 5 1 29 2 255 2 335 1 31 1 321 1 88 2 7 1 260 1 233 1 291 2 188 1 
263 1 154 1 168 1 280 1 230 1 131 1 215 1 253 1 357 1 75 1 
286 1 96 1 
100 1 237 1 263 1 154 1 168 1 280 1 192 1 253 1 75 1 
285 1 86 1 
249 1 214 1 296 1 
168 1 154 1 263 1 230 1 231 2 253 1 333 1 75 1 161 1 15 1 243 1 280 1 355 1 17 1 131 1 45 1 211 1 357 1 
168 1 154 1 263 1 230 1 231 2 253 1 333 1 75 1 161 1 15 1 243 1 280 1 355 1 17 1 131 1 45 1 211 1 357 1 
168 1 154 1 263 1 230 1 231 2 253 1 333 1 75 1 161 1 15 1 243 1 280 1 355 1 17 1 131 1 45 1 211 1 357 1 
249 1 285 1 86 1 
249 1 285 1 86 1 
214 1 296 1 
249 1 214 1 296 1 
265 1 55 1 
263 1 168 1 317 2 265 1 286 1 239 2 96 1 75 1 243 1 246 1 271 2 55 1 154 1 156 1 275 2 231 1 310 1 348 1 253 1 333 1 311 2 41 1 280 1 17 1 45 1 314 1 138 1 
284 1 27 1 30 1 99 1 118 2 289 1 321 1 32 1 197 1 323 2 102 1 271 2 325 1 10 1 152 2 329 2 275 2 229 1 13 1 255 2 311 2 312 1 334 1 335 1 88 1 43 1 260 1 18 2 111 1 188 1 315 1 
284 1 124 1 115 1 92 1 13 1 145 1 277 1 118 2 129 1 323 2 300 1 324 1 18 2 89 1 19 1 132 1 301 1 56 1 47 2 
284 1 124 1 115 1 145 1 13 1 277 1 118 1 129 1 323 1 222 1 324 1 18 1 19 1 132 1 301 1 56 1 47 2 
284 1 151 1 13 1 172 1 118 1 289 1 344 1 323 1 300 1 324 1 18 1 34 1 283 1 10 1 
284 1 124 1 115 1 13 1 145 1 277 1 118 1 129 1 323 1 300 1 324 1 18 1 89 1 19 1 132 1 301 1 56 1 47 2 
268 1 
284 1 317 2 239 2 74 1 118 1 289 1 321 1 76 1 32 1 323 1 325 1 271 3 10 1 203 1 152 1 155 1 275 3 180 1 332 1 348 1 255 2 13 1 311 2 208 1 335 1 187 2 88 1 260 1 18 1 188 1 283 1 315 1 
248 1 238 2 11 1 87 2 160 4 161 4 162 1 240 2 354 1 176 1 261 1 235 1 177 2 273 2 122 1 
161 1 248 1 240 1 26 1 238 1 200 1 274 1 
238 1 141 1 6 1 342 1 240 1 243 1 176 1 273 1 248 1 11 1 38 1 160 1 161 2 162 1 354 1 17 1 282 1 
284 1 248 1 180 1 11 1 127 1 13 2 53 1 118 1 65 1 162 1 289 1 323 1 354 1 18 1 201 1 109 1 247 1 176 1 283 1 10 2 
238 5 190 1 212 2 169 1 342 1 119 2 240 2 31 1 243 1 220 1 223 1 7 1 290 2 292 1 176 2 177 5 122 1 273 3 226 2 248 8 11 2 251 2 350 1 160 6 87 5 161 5 162 2 17 1 354 2 233 1 261 1 356 1 282 1 166 2 91 1 
48 1 140 1 238 1 72 1 317 1 193 1 287 1 239 1 74 1 243 1 290 2 176 1 271 1 226 1 248 2 275 1 11 1 251 1 311 1 162 1 187 1 354 1 17 1 21 1 236 1 136 1 
26 1 248 1 238 1 11 1 161 1 162 1 240 1 354 1 176 1 274 1 
248 5 238 5 212 2 251 2 87 5 160 10 161 5 119 2 290 2 292 1 109 1 177 5 166 2 226 2 273 5 
161 1 240 1 243 1 17 1 282 1 342 1 
284 2 238 2 3 1 342 2 95 1 172 1 118 4 289 2 243 3 344 1 244 1 323 4 176 2 10 2 122 2 248 2 58 2 180 1 11 2 295 1 182 1 184 1 13 3 14 1 278 1 162 2 163 1 354 1 17 3 18 4 261 2 282 4 283 2 137 1 
263 1 279 1 253 1 
263 1 279 1 253 1 
263 1 265 1 131 1 22 1 253 1 
263 1 279 1 253 1 
256 1 263 1 253 1 
256 1 263 1 253 1 
256 1 263 1 253 1 
263 1 253 1 
154 1 280 1 
4 1 193 1 31 1 321 1 7 1 272 2 346 1 226 1 152 8 331 1 229 4 251 1 255 2 39 2 335 1 88 4 260 1 233 1 21 1 188 1 235 1 136 1 91 1 
212 1 4 1 193 1 119 1 31 2 321 2 7 1 272 3 346 1 226 2 152 11 331 1 229 6 251 1 255 4 39 2 335 2 336 1 88 5 258 1 260 2 21 1 233 1 110 1 188 2 235 1 136 1 91 1 
152 2 335 1 31 1 321 1 88 1 331 1 229 1 7 1 260 1 233 1 188 1 255 2 91 1 
190 1 212 2 4 1 169 1 193 1 119 2 31 1 321 3 220 1 7 1 272 5 346 1 226 3 152 17 331 1 229 10 251 2 350 1 64 1 255 6 39 3 335 3 88 7 258 2 260 3 21 1 110 1 233 1 188 3 235 1 166 1 136 1 91 1 
4 1 193 1 31 1 321 1 7 1 272 2 346 1 226 1 152 8 331 1 229 4 251 1 255 2 39 2 335 1 88 4 260 1 233 1 21 1 188 1 235 1 136 1 91 1 
152 2 335 1 31 1 321 1 88 1 331 1 229 1 7 1 260 1 233 1 188 1 255 2 91 1 
190 1 212 2 4 1 169 1 193 1 119 2 31 1 321 4 220 1 7 1 272 5 346 1 226 3 152 18 331 1 229 10 251 2 350 1 255 8 64 2 39 3 335 4 88 8 258 2 260 4 21 1 233 1 110 1 188 4 235 1 166 1 136 1 91 1 
190 1 212 3 169 1 119 3 31 1 321 4 220 1 7 1 272 6 226 3 152 16 331 1 229 9 104 1 251 2 350 1 255 8 64 2 39 3 335 4 88 7 258 3 260 4 233 1 188 4 166 2 91 1 
152 7 4 1 229 3 251 1 193 3 39 3 88 4 258 3 21 1 272 6 346 2 136 3 226 1 
190 1 212 2 4 1 169 1 193 1 119 2 31 1 321 4 220 1 7 1 272 4 346 1 226 3 152 18 331 1 229 10 104 1 251 2 350 1 255 8 64 2 39 3 335 4 88 8 258 1 260 4 21 1 233 1 188 4 235 1 166 1 136 1 91 1 
152 8 4 1 229 4 251 1 193 1 255 4 64 1 39 2 335 2 321 2 88 4 258 1 260 2 21 1 188 2 235 1 272 3 346 1 226 1 136 1 
152 6 4 1 229 3 251 1 193 1 39 2 88 3 200 1 21 1 235 1 272 2 346 1 136 1 226 1 
152 4 212 1 229 2 251 1 255 2 39 1 335 1 119 1 321 1 88 2 258 1 260 1 110 1 188 1 272 2 166 1 226 1 
152 2 31 1 88 1 229 1 7 1 233 1 
212 2 4 1 193 1 194 1 119 2 31 2 321 1 7 2 272 4 346 1 226 3 152 18 153 1 229 9 251 3 64 1 255 2 39 3 335 1 336 1 88 9 258 1 260 1 21 1 188 1 235 1 166 2 136 1 
152 1 31 1 88 1 
152 1 229 1 7 1 
152 6 212 1 229 3 251 1 255 2 39 2 335 1 119 1 321 1 88 3 258 1 260 1 110 1 109 1 188 1 272 3 166 1 226 1 
190 1 212 2 169 1 119 2 31 1 321 1 220 1 7 1 272 2 226 2 152 12 331 1 229 6 251 2 350 1 255 2 39 1 335 1 88 6 258 1 260 1 233 1 188 1 166 2 91 1 
152 6 229 3 251 1 193 1 39 1 88 3 258 1 21 1 272 2 226 1 136 1 
152 3 4 1 229 1 193 1 64 1 255 2 39 1 335 1 321 1 88 2 258 1 260 1 44 1 188 1 272 2 346 1 136 1 
152 10 72 1 331 1 229 5 251 2 193 2 255 2 39 3 335 1 321 1 88 5 258 2 260 1 21 1 188 1 272 5 136 2 226 2 
152 2 212 1 331 1 229 2 255 2 335 1 321 1 258 1 260 1 188 1 272 1 226 1 
152 4 212 1 331 1 229 2 251 1 255 2 39 1 335 1 119 1 321 1 88 2 258 1 260 1 188 1 272 2 166 1 226 1 
152 3 331 1 229 1 104 1 193 1 64 1 255 6 39 1 335 3 321 3 88 2 258 1 260 3 44 1 188 3 272 2 136 1 
212 3 4 1 193 3 217 1 119 3 31 4 321 5 7 3 272 12 346 1 226 5 152 34 331 1 229 16 104 1 251 5 83 1 85 1 64 2 255 10 39 7 335 5 336 1 88 18 258 5 260 5 21 2 44 1 233 1 110 1 188 5 235 1 166 3 136 3 
0 1 275 1 142 1 170 1 348 1 271 1 311 1 
302 1 0 1 275 1 142 1 170 1 348 1 297 1 311 1 66 1 245 1 271 1 68 1 
172 1 284 1 118 1 289 1 344 1 323 1 200 1 18 1 283 1 13 1 10 1 
203 1 284 1 180 1 317 1 275 2 332 1 239 1 348 1 13 1 276 1 311 1 118 1 289 1 323 1 18 1 271 2 283 1 10 1 
203 1 284 1 58 1 180 2 317 2 275 2 50 1 305 1 332 1 157 1 73 1 84 1 239 1 348 1 13 1 276 1 311 2 118 1 289 2 323 1 18 1 271 2 10 3 
284 1 317 2 305 1 50 1 51 1 73 1 239 1 118 2 289 2 323 2 271 2 10 3 58 1 275 2 180 2 332 1 157 1 84 1 348 1 13 1 311 2 276 1 16 1 18 2 
284 1 50 1 51 1 97 1 118 3 269 1 240 1 289 1 243 2 323 3 224 1 10 4 58 1 180 1 157 1 206 1 13 1 161 1 65 1 17 2 18 3 282 1 283 1 
284 1 58 1 180 1 50 1 51 1 157 1 206 1 97 1 13 1 161 1 40 1 118 3 240 1 65 1 289 1 243 2 323 3 17 2 18 3 282 1 283 1 10 4 
284 1 118 1 123 1 323 1 18 1 13 1 
123 1 284 2 329 1 180 1 92 1 12 1 13 3 53 1 118 6 289 2 163 1 129 1 173 1 197 1 323 7 345 1 148 1 18 7 283 2 10 3 137 1 
284 1 4 1 317 1 92 1 306 1 193 1 239 1 99 1 118 1 288 1 289 1 321 2 147 1 76 1 32 2 323 1 272 2 271 2 346 1 226 1 10 1 203 1 152 6 155 1 180 1 275 2 229 3 332 1 251 1 348 2 13 1 255 4 39 2 311 1 276 1 335 2 88 3 43 1 260 2 18 1 21 1 188 2 133 1 235 1 136 1 315 2 167 1 
26 1 238 1 342 1 97 1 216 1 118 1 240 1 243 3 323 1 33 1 176 2 10 2 274 1 248 1 156 1 11 2 206 1 14 1 161 1 40 1 162 2 65 1 42 1 354 2 17 3 18 1 282 2 283 1 
123 1 284 1 180 1 92 1 97 1 13 2 53 1 118 2 289 1 323 2 18 2 201 1 10 2 
284 1 92 1 51 1 13 1 172 1 118 4 289 1 219 1 344 1 323 4 18 4 283 1 10 1 
284 1 58 1 180 1 295 1 182 1 13 2 118 2 289 1 163 1 323 2 18 2 10 1 137 1 326 1 
284 1 118 1 323 1 18 1 132 1 283 1 56 1 47 1 13 1 145 1 
284 1 27 1 92 1 13 1 118 2 289 1 129 1 323 2 197 1 18 2 10 1 
284 2 58 1 92 1 12 1 13 2 172 1 118 4 289 2 219 1 344 1 323 5 197 1 18 5 148 1 283 1 10 3 
284 2 58 1 92 1 13 2 172 1 118 4 289 2 219 1 352 1 344 1 323 5 197 1 18 5 148 1 283 1 10 3 
284 1 180 1 317 1 275 2 332 1 239 1 348 1 13 1 276 1 311 1 118 1 289 1 16 1 323 1 18 1 271 2 283 1 10 1 
284 1 58 1 180 1 13 2 53 1 118 1 289 1 163 1 323 1 345 1 18 1 10 1 137 1 
101 1 322 1 348 1 266 1 267 1 
156 1 304 1 305 1 73 1 206 1 252 1 84 1 348 1 266 2 267 1 161 1 240 1 243 2 101 2 322 2 299 1 17 2 121 1 23 1 
275 1 266 1 267 1 312 1 311 1 334 1 101 1 102 1 271 1 
121 1 252 1 267 1 
139 1 25 3 146 1 340 1 175 1 232 3 164 1 181 1 62 1 202 1 149 1 
78 1 281 1 143 1 149 1 
175 1 149 1 
175 1 200 1 202 1 149 1 
25 1 340 1 175 1 232 1 164 1 202 1 149 1 
221 1 232 1 234 1 
25 3 340 1 175 1 250 1 232 3 164 1 181 1 62 2 80 1 202 1 37 1 149 1 
25 2 146 1 340 1 175 1 232 2 164 1 94 1 202 1 149 1 
25 1 124 1 337 1 340 1 281 1 232 1 164 1 181 1 56 1 47 1 149 1 
25 1 340 1 175 1 232 1 164 1 181 1 149 1 
25 1 340 1 175 2 232 1 164 1 181 1 202 1 
25 2 49 1 340 2 232 2 181 1 144 1 257 1 175 1 164 2 149 1 
25 3 139 1 340 1 232 3 181 1 143 1 343 1 146 2 175 1 164 1 281 1 202 1 149 2 
25 2 124 1 340 1 232 2 115 1 181 1 349 1 146 1 175 1 164 1 132 1 202 1 47 2 56 1 149 1 
25 4 340 2 232 4 181 1 94 1 171 1 143 1 146 2 175 1 164 2 281 1 202 1 149 2 
25 1 340 1 175 1 232 1 164 1 181 1 202 1 149 1 
25 4 340 1 250 1 232 4 62 1 143 1 37 1 146 2 78 1 175 2 164 1 281 1 202 2 149 3 
25 2 2 1 228 1 340 1 125 1 232 2 181 1 146 1 175 1 164 1 202 1 149 1 
25 3 340 1 250 1 232 3 181 1 62 2 37 2 210 1 164 1 175 1 202 1 149 1 
303 2 165 1 82 1 149 2 
25 1 71 1 340 1 232 1 164 1 181 1 
139 1 25 2 146 1 340 1 175 1 232 2 164 1 181 1 202 1 149 1 
120 1 
25 1 340 1 175 1 232 1 164 1 181 1 202 1 149 1 

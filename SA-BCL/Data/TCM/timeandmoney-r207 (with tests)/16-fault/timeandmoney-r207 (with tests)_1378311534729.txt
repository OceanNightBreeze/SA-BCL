#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 171 235 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 171 235 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 171 (53,354) (53,354) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 171 (53,354) (53,354) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 171 (53,354) (53,354) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 171 (53,354) (53,354) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 192 215 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 192 215 253 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 350 283 29 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 37 214 142 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 191 236 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 134 265 (130,338) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 134 265 (76,279) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 1 11 1 270 1 101 1 235 1 41 1 42 2 198 1 54 4 287 1 171 1 324 4 352 2 207 2 109 1 
267 1 11 1 270 1 101 1 235 1 42 2 41 1 198 1 54 4 287 1 171 1 324 4 352 2 207 2 109 1 
267 1 11 2 247 1 90 1 101 1 42 1 41 1 260 1 53 1 198 1 54 4 262 1 3 1 287 1 105 1 171 1 84 1 324 4 352 2 354 1 207 2 109 1 
267 1 11 2 247 1 90 1 101 1 42 1 41 1 260 1 53 1 198 1 54 4 262 1 3 1 287 1 105 1 171 1 84 1 324 4 352 2 354 1 207 2 109 1 
267 1 11 2 247 1 90 1 101 1 42 1 41 1 260 1 53 1 198 1 54 4 262 1 3 1 287 1 105 1 171 1 84 1 324 4 352 2 354 1 207 2 109 1 
267 1 11 2 247 1 90 1 101 1 42 1 41 1 260 1 53 1 198 1 54 4 262 1 3 1 287 1 105 1 171 1 84 1 324 4 352 2 354 1 207 2 109 1 
247 1 101 3 42 3 41 2 250 1 54 4 262 1 263 1 3 1 287 1 171 1 324 4 352 1 182 2 224 1 207 1 10 1 109 1 
11 1 247 1 90 1 91 1 101 1 54 2 262 1 263 1 84 1 324 2 352 1 231 1 94 1 207 1 10 1 109 1 
267 1 11 1 101 2 41 1 42 1 54 3 263 1 287 1 324 3 352 2 207 2 10 1 109 1 
258 1 210 1 9 1 
258 1 334 1 330 2 
351 2 242 2 139 1 181 2 112 2 19 1 308 2 316 2 
24 2 163 1 168 1 139 1 112 2 114 1 55 1 237 1 2 1 308 2 56 1 265 1 313 1 242 2 145 1 95 1 338 1 97 1 60 2 62 2 316 2 317 1 321 1 104 1 351 3 195 1 45 2 47 2 300 1 301 1 181 3 282 1 302 1 19 1 49 1 20 1 184 1 
259 1 351 1 216 1 242 1 18 1 181 1 112 1 19 1 308 1 316 1 
258 1 259 1 210 1 140 1 308 1 251 1 351 1 31 1 312 1 205 1 206 1 219 1 6 1 181 1 
258 1 259 1 210 1 112 1 140 1 308 1 251 1 351 1 312 1 242 1 205 2 206 1 219 2 181 1 316 1 
205 1 243 1 219 1 227 1 194 1 
258 1 210 1 205 2 243 1 219 2 98 1 303 1 194 1 
205 1 243 1 219 1 
259 1 112 1 194 1 308 1 216 1 351 1 242 1 205 1 219 1 18 1 181 1 19 1 23 1 316 1 
258 1 
258 1 4 1 210 1 205 2 243 1 219 2 303 1 194 1 
258 1 210 1 125 1 169 2 274 1 153 1 28 1 66 2 194 2 143 1 68 1 205 5 157 1 219 5 180 1 243 2 255 1 303 1 64 2 
139 1 9 1 
351 2 242 1 139 2 112 1 181 2 58 1 316 1 208 1 308 2 
333 1 281 1 115 1 
24 1 163 1 168 1 139 1 114 1 2 1 351 1 45 1 300 1 265 1 301 1 145 1 181 1 338 1 34 1 60 1 
351 3 242 3 139 1 112 1 181 3 159 1 308 3 316 3 
259 1 351 1 242 1 18 1 181 1 308 1 316 1 
259 1 351 1 242 1 181 1 112 1 58 1 308 1 316 1 208 1 
24 1 259 1 163 1 168 1 139 1 112 2 114 1 55 1 140 1 237 1 2 1 308 3 241 1 56 1 265 1 312 1 313 1 242 3 205 1 145 1 206 1 338 1 7 1 97 1 60 1 62 2 246 1 208 1 316 3 104 1 251 1 351 4 195 1 45 1 47 1 300 1 301 1 219 1 181 4 282 1 19 1 49 1 159 1 184 1 
351 2 242 1 139 1 6 1 181 2 294 1 159 1 308 2 316 1 
258 1 259 1 112 1 140 1 308 3 251 1 241 1 351 3 83 1 312 1 242 3 205 1 219 1 206 1 181 3 7 1 159 2 208 1 316 3 
351 2 242 2 181 2 112 1 281 1 159 1 115 1 308 2 316 2 208 1 
24 1 163 1 168 1 139 1 114 1 2 1 351 1 45 1 300 1 265 1 301 1 145 1 181 1 338 1 60 1 
24 1 248 1 163 1 168 1 139 1 114 1 2 1 351 1 279 1 45 1 300 1 265 1 301 1 181 1 60 1 
232 1 187 1 52 1 55 2 199 1 115 2 333 2 141 1 56 1 313 1 146 1 337 1 62 2 317 2 102 1 225 1 104 1 195 1 47 4 156 1 281 2 158 1 49 1 184 1 
259 1 351 1 312 1 242 1 290 1 181 1 308 1 316 1 
24 1 163 1 168 1 114 1 115 1 2 1 308 1 241 1 351 2 45 1 265 1 300 1 242 1 301 1 145 1 181 2 338 1 60 1 159 1 316 1 
139 1 112 1 308 5 351 5 241 1 242 4 69 1 6 1 181 5 294 1 257 1 159 2 316 4 208 1 
259 1 351 2 242 2 290 1 18 1 181 2 308 2 316 2 
132 1 137 1 
132 1 137 1 
79 1 332 1 
79 1 332 1 
79 1 332 1 
132 1 137 1 87 1 
296 1 132 1 137 1 
132 2 137 2 203 1 176 1 79 1 332 1 
132 1 137 1 87 1 
132 1 137 1 87 1 
132 1 137 1 329 1 
132 1 137 1 329 1 
132 1 137 1 329 1 
215 1 132 1 137 1 335 1 291 1 192 1 
215 1 132 1 137 1 335 1 253 1 291 1 205 1 192 1 219 1 
3 1 247 1 262 1 
247 1 94 1 262 1 
3 2 174 1 247 3 344 1 310 1 94 1 
3 1 174 1 247 2 344 1 223 1 94 1 
3 1 174 1 247 2 344 2 94 1 
258 2 26 1 187 1 169 1 52 1 330 3 306 1 28 2 239 1 334 1 143 3 74 1 205 5 243 1 61 1 64 1 8 1 210 1 125 1 249 2 102 1 225 1 66 1 14 1 194 4 217 2 299 1 106 1 220 1 219 5 70 2 135 1 303 1 
258 1 259 1 0 1 112 1 308 1 242 1 205 2 243 1 117 1 316 1 210 1 211 1 227 1 194 2 351 1 216 1 219 2 18 1 181 1 19 1 23 1 
258 3 187 1 169 1 52 1 330 4 306 1 28 2 239 1 334 2 143 3 311 1 205 3 74 1 61 1 64 1 8 1 210 1 249 2 102 1 225 1 66 1 194 2 217 2 299 1 106 1 219 3 70 1 255 1 
258 4 187 2 169 1 52 2 330 7 306 1 28 4 239 2 334 3 143 5 311 1 205 4 74 2 293 1 61 1 64 1 8 2 210 1 249 4 102 2 225 2 66 1 194 3 128 1 217 4 299 1 85 1 106 1 219 4 70 2 255 1 
301 1 320 1 9 1 
288 1 301 1 
148 1 
163 1 301 1 
163 1 92 1 301 3 320 2 2 1 342 1 
163 1 301 1 2 1 
301 1 120 1 
317 4 65 1 271 1 40 1 345 1 102 1 225 1 55 3 72 1 199 2 348 1 252 2 47 7 156 3 119 1 191 1 149 1 
317 4 65 1 271 1 40 1 345 1 102 1 225 1 55 3 72 1 199 2 348 1 252 2 47 7 156 3 119 1 191 1 149 1 
317 4 100 1 65 1 271 1 40 1 345 1 102 1 225 1 55 3 72 1 199 2 348 1 252 2 47 7 156 3 119 1 191 1 149 1 
305 1 113 1 331 1 55 3 72 2 199 1 119 1 149 1 62 2 317 3 209 1 271 1 40 1 345 1 226 1 104 1 155 1 195 1 47 6 252 1 156 2 48 1 49 1 184 1 
317 5 51 1 65 1 271 1 40 1 345 1 102 1 225 1 55 4 72 1 348 1 199 3 104 2 280 1 195 2 252 2 47 9 156 4 119 1 48 1 191 1 49 2 62 4 184 2 
24 1 164 1 93 1 114 1 54 2 262 1 263 1 3 1 310 1 289 1 94 1 173 1 60 1 207 1 10 1 11 1 247 2 268 1 101 1 42 1 275 1 229 1 45 1 324 2 300 1 352 1 179 1 136 1 109 1 71 1 
24 1 164 1 114 1 54 3 262 1 263 1 3 1 310 1 264 1 289 1 57 1 5 1 94 1 173 1 60 1 207 1 10 1 11 1 247 2 268 1 101 1 42 2 275 1 45 1 324 3 300 1 352 1 179 1 136 1 71 1 
24 1 164 1 114 1 54 2 262 1 263 1 3 1 310 1 264 1 289 1 57 1 94 1 173 1 60 1 10 1 11 1 247 2 101 1 42 2 275 1 45 1 324 2 300 1 179 1 71 1 
24 1 111 1 163 1 168 1 114 1 54 1 188 1 289 2 5 1 314 1 173 2 60 1 207 1 343 1 11 2 45 1 230 1 324 1 300 1 352 1 179 2 301 1 107 1 
24 1 164 1 114 1 54 1 262 1 3 1 310 1 289 1 57 1 94 1 173 1 60 1 207 1 11 1 247 2 268 1 275 1 229 1 45 1 324 1 300 1 352 1 179 1 136 1 109 1 71 1 
27 1 
185 2 258 1 259 2 140 1 308 2 309 1 143 1 312 1 190 1 6 1 64 1 316 1 272 1 66 1 228 1 18 1 19 1 283 1 328 2 23 1 162 1 25 1 169 1 112 1 28 1 334 2 31 1 73 3 32 2 242 1 205 4 243 5 206 1 292 1 33 1 339 3 340 1 124 3 77 2 210 1 125 1 251 1 350 1 216 1 351 2 218 5 219 4 181 2 303 2 
185 2 258 1 259 1 25 1 162 1 169 1 28 1 140 1 309 1 308 1 334 2 143 1 31 1 73 3 32 2 190 1 312 1 205 4 206 1 243 5 292 1 6 1 33 1 340 1 339 3 64 1 124 3 210 1 77 2 125 1 272 1 66 1 228 1 251 1 350 1 351 1 219 4 218 5 181 1 283 1 328 2 303 2 
185 2 258 1 259 2 140 1 307 2 308 2 143 1 312 1 190 1 6 1 64 1 316 1 272 1 66 1 228 1 18 1 19 1 23 1 169 1 112 1 330 2 28 1 31 1 73 2 242 1 205 4 206 1 243 4 33 1 340 1 339 2 124 2 77 2 38 1 210 1 125 1 251 1 350 1 216 1 351 2 177 2 218 4 219 4 181 2 303 2 304 1 
185 2 258 2 259 1 140 1 308 1 309 1 143 2 190 1 312 1 314 1 6 1 60 2 64 1 272 1 66 1 103 1 193 1 228 1 328 2 24 2 163 1 168 2 169 1 330 2 114 1 28 2 334 2 31 1 73 2 32 2 205 5 243 6 206 1 33 1 339 2 340 1 124 2 343 1 210 1 38 1 77 2 125 1 126 1 251 1 350 1 82 1 351 1 45 2 299 1 300 1 301 1 219 5 218 4 181 1 303 3 
259 1 272 1 140 1 308 1 251 1 228 1 351 1 31 1 73 1 312 1 190 1 205 2 243 1 218 2 206 1 219 2 33 1 6 1 181 1 340 1 
258 1 259 1 140 1 308 1 31 1 4 1 190 1 312 1 205 3 243 1 206 1 6 1 33 1 340 1 124 1 210 1 272 1 228 1 251 1 351 1 219 3 218 3 181 1 303 1 
259 1 140 1 308 1 31 1 4 1 73 1 190 1 312 1 205 3 206 1 243 2 6 1 33 1 340 1 339 1 124 1 272 1 228 1 251 1 351 1 219 3 218 3 181 1 303 1 
258 1 259 2 112 1 140 1 308 2 31 1 4 1 73 1 190 1 312 1 242 1 205 3 243 2 206 1 6 1 33 1 340 1 339 1 316 1 124 1 210 1 272 1 228 1 251 1 154 1 216 1 351 2 219 3 218 3 18 1 181 2 19 1 303 1 23 1 
185 2 258 1 259 1 140 1 309 1 308 1 143 1 312 1 190 1 6 1 64 1 272 1 66 1 228 1 328 2 169 1 330 2 28 1 334 2 31 1 73 2 32 2 205 4 206 1 243 4 33 1 340 1 339 2 124 2 77 2 38 1 210 1 125 1 251 1 350 1 351 1 218 4 219 4 181 1 303 2 
185 2 258 1 259 1 25 1 169 1 28 1 140 1 309 1 308 1 334 2 143 1 31 1 73 2 32 2 190 1 312 1 205 4 243 4 206 1 292 1 6 1 33 1 339 2 340 1 64 1 124 2 210 1 77 2 125 1 272 1 66 1 228 1 251 1 350 1 351 1 219 4 218 4 181 1 283 1 328 2 303 2 
185 2 258 1 259 2 140 1 308 2 309 1 143 1 312 1 190 1 6 1 64 1 316 1 272 1 66 1 228 1 18 1 19 1 283 1 328 2 23 1 25 1 169 1 112 1 28 1 334 2 31 1 73 2 32 2 242 1 205 4 292 1 206 1 243 4 33 1 340 1 339 2 124 2 77 2 210 1 125 1 251 1 350 1 216 1 351 2 218 4 219 4 181 2 303 2 
185 1 259 1 77 1 272 1 140 1 29 1 308 1 251 1 228 1 350 1 351 1 31 1 312 1 190 1 205 2 218 2 206 1 219 2 33 1 6 1 181 1 283 1 340 1 
317 3 232 1 65 1 271 1 139 2 102 1 225 1 55 3 199 2 348 1 104 1 115 1 333 1 195 1 56 1 252 1 47 6 313 1 156 2 281 1 119 1 191 1 49 1 62 2 184 1 9 1 
259 1 233 1 187 2 139 1 52 1 261 1 113 2 55 5 199 1 115 8 30 1 333 8 202 1 56 2 313 1 74 2 97 1 62 4 317 6 345 1 102 1 225 2 104 2 80 1 278 1 155 2 195 2 47 11 156 2 254 1 281 3 49 2 184 2 
24 1 89 1 233 1 163 1 168 1 139 1 114 1 55 1 2 1 308 1 241 1 56 1 265 1 313 1 242 1 336 1 145 1 338 1 34 1 97 1 60 1 62 2 316 1 317 1 104 1 129 1 351 2 45 1 195 1 300 1 47 2 301 1 181 2 281 1 302 1 49 1 159 1 184 1 
187 2 139 2 52 2 55 10 308 1 2 2 189 2 56 3 265 2 313 3 57 1 145 2 97 1 60 3 191 1 62 6 316 1 317 10 65 1 271 1 102 3 225 3 323 1 104 3 195 3 156 8 281 7 159 1 24 3 233 1 234 2 163 2 168 1 114 2 199 4 237 2 115 7 333 7 241 1 242 1 74 2 116 2 338 2 35 2 119 1 345 4 348 1 298 1 351 3 45 3 252 1 47 20 300 2 301 2 353 1 181 3 302 1 49 3 184 3 
186 1 93 1 221 1 55 1 2 1 308 1 56 2 313 2 314 1 315 1 95 2 97 1 60 7 62 4 63 1 316 1 317 1 104 2 15 1 195 2 159 1 22 1 24 7 232 1 163 3 168 2 170 1 114 3 242 1 245 1 343 1 127 1 213 1 44 1 351 1 45 6 47 2 300 4 301 4 181 1 302 1 49 2 184 2 
233 1 187 1 112 1 52 1 55 2 199 1 115 1 308 1 333 1 56 1 242 1 313 1 74 1 62 2 208 1 123 1 316 1 317 1 102 1 225 1 104 1 351 1 195 1 47 3 156 1 181 1 281 1 49 1 184 1 
317 2 232 1 187 1 345 1 225 1 104 1 115 1 333 1 195 1 56 1 47 2 313 1 156 1 337 1 281 1 49 1 62 2 184 1 
232 1 52 1 102 1 55 2 199 1 104 1 115 1 333 1 195 1 56 1 47 2 313 1 156 1 146 1 281 1 49 1 62 2 184 1 
232 1 187 1 52 1 55 2 199 1 115 2 333 2 56 1 313 1 74 1 62 2 317 2 345 1 102 1 225 1 104 1 195 1 47 4 156 2 281 2 49 1 184 1 
317 2 187 1 345 1 225 1 104 1 115 1 333 1 195 1 56 1 47 2 313 1 156 1 337 1 281 1 49 1 62 2 22 1 184 1 
52 1 102 1 55 2 199 1 104 1 115 1 333 1 195 1 56 1 47 2 313 1 156 1 146 1 281 1 49 1 62 2 22 1 184 1 
187 1 52 1 55 2 199 1 115 2 333 2 56 1 313 1 74 1 62 2 317 2 345 1 102 1 225 1 104 1 195 1 47 4 156 2 281 2 49 1 184 1 22 1 
317 2 187 1 345 1 102 1 52 1 225 1 55 2 199 1 104 1 115 2 333 2 195 1 56 1 47 4 313 1 74 1 156 2 281 2 49 1 62 2 184 1 
24 1 163 1 168 1 139 1 114 1 55 1 237 1 2 1 56 1 265 1 313 1 145 1 338 1 97 1 60 1 62 2 317 1 104 1 351 1 45 1 195 1 47 2 300 1 301 1 181 1 302 1 49 1 184 1 
24 1 163 1 168 1 139 1 114 1 55 1 2 1 56 1 265 1 313 1 97 1 60 1 62 2 317 1 248 1 104 1 279 1 351 1 45 1 195 1 47 2 300 1 301 1 181 1 302 1 327 1 49 1 184 1 
233 1 187 1 52 1 55 2 199 1 115 2 333 2 56 1 313 1 74 1 62 2 317 2 345 1 102 1 225 1 104 1 195 1 47 4 156 2 281 2 49 1 184 1 
24 1 234 1 163 1 187 1 93 1 52 1 114 1 55 2 199 1 237 1 115 2 2 1 333 2 56 1 265 1 313 1 74 1 145 1 338 1 60 1 62 2 317 2 345 1 102 1 225 1 104 1 351 1 45 1 195 1 47 4 300 1 301 1 156 2 181 1 281 2 49 1 184 1 
233 1 187 1 52 1 112 1 55 1 308 1 115 1 333 1 56 1 242 1 313 1 74 1 62 2 208 1 316 1 317 2 345 1 102 1 225 1 104 1 351 1 195 1 46 1 47 3 156 1 181 1 281 1 49 1 184 1 
305 3 187 5 52 3 55 20 142 1 222 4 96 1 191 1 62 8 317 23 151 1 65 1 269 1 271 1 102 4 225 6 276 1 104 4 280 1 155 5 195 4 156 7 167 1 113 3 199 3 30 2 200 1 74 5 119 1 122 1 37 1 345 4 43 2 348 1 214 1 47 43 133 1 252 1 178 1 48 2 256 1 49 4 184 4 
305 2 167 1 187 3 52 3 113 2 55 17 199 2 222 4 142 1 74 3 96 1 119 1 191 1 62 8 122 1 151 1 37 1 317 18 269 1 65 1 271 1 345 3 102 4 276 1 225 4 348 1 43 1 104 4 214 1 155 2 280 1 195 4 252 1 133 1 47 35 178 1 156 5 48 2 49 4 256 1 184 4 
305 2 167 1 187 3 52 3 113 2 55 14 199 3 222 4 142 1 74 3 96 1 62 6 122 1 151 1 37 1 317 14 269 1 345 3 102 3 225 3 43 1 104 3 214 1 155 2 280 1 195 3 133 1 47 28 178 1 156 6 48 2 49 3 256 1 184 3 
305 2 167 1 187 3 52 3 113 2 55 16 199 3 222 3 142 1 74 3 96 1 119 1 244 1 191 1 62 8 122 1 151 1 37 1 317 17 269 1 65 1 271 1 345 3 102 4 276 1 225 4 348 1 43 1 104 4 214 1 155 2 280 1 195 4 252 1 133 1 47 33 156 6 48 2 49 4 256 1 184 4 
305 2 167 1 187 3 52 2 113 2 55 12 199 2 222 4 142 1 74 3 96 1 62 6 122 1 151 1 37 1 317 14 269 1 345 2 102 2 225 3 43 2 104 3 214 1 280 1 155 2 195 3 133 2 47 26 178 1 156 4 48 2 49 3 256 1 184 3 
24 2 284 1 186 1 233 1 163 1 114 1 55 1 308 2 56 1 313 1 315 1 95 2 97 1 60 2 59 1 62 2 317 1 346 1 322 1 104 1 351 2 195 1 45 2 300 1 47 2 301 1 181 2 326 1 302 1 49 1 184 1 
24 2 247 2 152 1 268 1 297 1 93 1 78 1 114 1 275 1 262 1 3 1 310 1 45 2 300 1 57 1 94 1 173 1 60 2 71 1 
150 1 24 1 247 2 268 1 297 1 275 1 114 1 262 1 3 1 310 1 45 1 300 1 57 1 94 1 173 1 60 1 71 1 
343 1 24 1 111 1 163 1 165 1 168 1 78 1 114 1 45 1 300 1 301 1 314 1 173 1 60 1 
24 1 247 2 152 1 268 1 297 1 78 1 275 1 114 1 262 1 3 1 310 1 45 1 300 1 57 1 94 1 173 1 60 1 71 1 
201 1 
24 1 163 1 168 1 139 1 112 2 114 1 55 1 237 1 308 2 2 1 56 1 265 1 242 2 313 1 145 1 338 1 97 1 60 1 62 2 316 2 104 1 351 3 195 1 45 1 47 1 300 1 301 1 181 3 282 1 19 1 49 1 184 1 
258 4 210 2 125 1 249 2 169 1 330 4 126 1 28 2 66 1 334 2 143 1 217 2 299 1 252 1 64 1 
143 1 258 1 210 1 157 1 153 1 28 1 9 1 
258 2 169 1 330 1 28 1 309 1 334 1 143 1 32 1 205 1 243 1 64 1 210 1 125 1 66 1 219 1 328 1 303 1 
258 7 187 2 52 2 2 1 143 8 311 2 60 1 64 3 318 2 320 2 102 2 225 2 66 3 16 1 21 1 24 1 163 1 168 1 169 3 330 12 114 1 28 7 239 2 334 6 288 3 205 5 74 2 243 5 116 2 295 2 121 2 342 1 175 1 210 1 125 3 212 2 249 6 126 1 251 2 130 2 45 1 217 6 299 2 300 2 301 6 219 5 303 3 
258 4 305 1 167 1 187 1 169 2 330 6 52 1 113 1 28 3 239 1 143 5 142 1 334 3 205 1 74 1 243 1 147 1 64 2 122 1 37 1 210 1 125 2 249 4 102 1 225 1 66 2 214 1 155 1 217 4 219 1 303 1 
25 1 125 1 271 1 169 1 236 1 102 1 225 1 28 2 66 1 239 1 143 2 205 1 219 1 119 1 191 1 64 1 
258 1 210 1 125 1 169 1 153 1 66 1 28 1 143 1 157 1 64 1 
258 2 187 1 249 2 330 4 52 1 102 1 225 1 28 2 239 1 143 2 334 2 217 2 311 1 74 1 
258 1 210 1 205 1 219 1 243 1 303 1 
24 4 163 1 138 1 168 2 169 2 114 1 28 2 143 2 205 3 243 4 314 1 60 4 64 2 343 1 125 1 319 1 126 2 66 2 277 2 103 1 82 1 45 4 299 2 300 1 325 1 301 1 219 3 255 1 303 2 
291 1 192 1 
291 1 192 1 
291 1 192 1 
291 1 192 1 
291 1 192 1 
291 1 192 1 
291 1 192 1 
291 1 192 1 
132 1 137 1 
305 1 167 1 187 2 236 1 52 1 113 1 55 10 199 5 142 1 74 2 119 2 191 2 62 4 122 1 317 14 37 1 65 1 271 2 345 4 102 4 225 5 348 1 104 2 214 1 155 1 280 1 195 2 252 1 47 24 156 9 48 1 49 2 184 2 
160 1 305 1 167 1 187 2 52 1 113 1 55 7 199 3 142 1 74 2 119 1 191 1 62 6 122 1 37 1 317 10 65 1 271 1 345 1 102 2 225 3 348 1 104 3 214 1 155 1 280 1 195 3 252 1 47 17 156 4 48 1 49 3 184 3 
160 1 305 1 167 1 187 2 52 2 113 1 55 10 199 3 142 1 74 2 119 1 191 1 62 6 122 1 37 1 317 9 65 1 271 1 345 1 102 3 225 3 348 1 104 3 214 1 155 1 280 1 195 3 252 1 47 19 156 4 48 1 49 3 184 3 
160 1 305 1 167 1 187 2 52 1 113 1 55 7 199 3 142 1 74 2 119 1 191 1 62 6 122 1 317 10 37 1 65 1 271 1 345 2 102 2 225 3 348 1 104 3 214 1 155 1 280 1 195 3 252 1 47 17 156 5 48 1 49 3 184 3 
305 1 167 1 187 2 236 1 52 1 113 1 55 10 199 5 142 1 74 2 119 2 191 2 62 4 122 1 317 14 37 1 65 1 271 2 345 4 102 4 225 5 348 1 104 2 214 1 155 1 280 1 195 2 252 1 47 24 156 9 48 1 49 2 184 2 
37 1 317 6 305 1 187 2 167 1 345 1 102 2 52 2 113 1 225 2 55 6 199 1 104 1 214 1 142 1 280 1 155 1 195 1 47 12 74 2 156 2 49 1 122 1 62 2 184 1 
160 1 305 1 167 1 187 2 52 1 113 1 55 8 199 3 142 1 74 2 119 1 191 1 62 8 122 1 37 1 317 10 65 1 271 1 345 2 102 2 225 3 348 1 104 4 214 1 155 1 280 1 195 4 252 1 47 18 156 5 48 2 49 4 184 4 
305 1 167 1 187 3 52 2 113 1 55 7 199 3 142 1 74 3 62 8 122 1 37 1 317 9 345 3 102 2 276 1 225 3 104 4 214 1 155 1 280 1 195 4 47 16 156 6 48 2 49 4 184 4 
317 3 65 1 271 3 345 3 102 1 225 1 55 4 348 2 199 3 47 7 156 6 119 3 191 1 
305 1 167 1 187 2 52 1 113 1 55 8 199 3 142 1 74 2 119 1 191 1 62 8 122 1 37 1 317 10 65 1 271 1 345 1 102 2 276 1 225 3 348 1 104 4 214 1 155 1 280 1 195 4 252 1 47 18 156 4 48 2 49 4 184 4 
317 4 65 1 271 1 345 1 102 1 225 1 55 4 199 2 348 1 104 2 195 2 252 1 47 8 156 3 48 1 119 1 191 1 49 2 62 4 184 2 
317 3 65 1 271 1 102 1 225 1 55 3 348 1 199 2 252 1 47 6 156 2 119 1 191 1 9 1 
317 2 160 1 187 1 345 1 102 1 52 1 225 1 55 2 199 1 104 1 195 1 47 4 74 1 156 2 49 1 62 2 184 1 
317 1 155 1 47 2 305 1 113 1 55 1 
187 2 236 1 52 2 113 2 55 12 199 4 30 1 74 2 119 2 191 2 62 2 317 13 65 1 271 2 345 4 102 5 225 5 348 1 104 1 278 1 155 2 195 1 252 1 47 25 156 8 254 1 48 1 49 1 184 1 
155 1 47 1 55 1 
317 1 47 1 113 1 
317 3 160 1 187 1 345 1 52 1 102 1 225 1 55 3 199 2 104 1 195 1 47 6 74 1 116 1 156 3 49 1 62 2 184 1 
37 1 317 6 305 1 187 2 167 1 345 1 102 2 52 2 113 1 225 2 55 6 199 1 104 1 214 1 142 1 280 1 155 1 195 1 47 12 74 2 156 2 49 1 122 1 62 2 184 1 
317 3 271 1 345 1 102 1 225 1 55 3 199 1 47 6 156 2 119 1 191 1 
317 1 209 1 65 1 271 1 345 1 55 2 199 1 348 1 104 1 195 1 47 3 156 2 119 1 48 1 49 1 62 2 184 1 
317 5 271 2 236 1 345 2 102 2 225 2 55 5 199 3 104 1 280 1 195 1 47 10 156 5 119 2 49 1 191 1 62 2 184 1 
317 2 187 1 345 1 225 1 104 1 280 1 195 1 47 2 156 1 49 1 62 2 184 1 
317 2 187 1 345 1 102 1 52 1 225 1 55 2 199 1 104 1 280 1 195 1 47 4 74 1 156 2 49 1 62 2 184 1 
317 1 209 1 271 1 345 1 276 1 55 2 199 1 104 3 280 1 195 3 47 3 156 2 48 1 119 1 49 3 62 6 184 3 
160 1 305 1 236 1 113 1 55 8 199 3 119 2 191 1 62 8 317 7 209 1 65 1 271 2 345 3 102 2 225 2 276 1 348 1 226 1 104 4 155 1 280 1 195 4 47 15 156 6 48 1 49 4 184 4 
351 1 139 1 181 1 6 1 294 1 308 1 238 1 
110 1 86 1 273 1 118 1 349 1 
343 1 24 1 45 1 300 1 163 1 301 1 168 1 314 1 114 1 60 1 9 1 
24 1 163 1 168 1 139 1 114 1 2 1 308 1 351 2 45 1 265 1 300 1 242 1 301 1 181 2 338 1 60 1 159 1 316 1 
24 1 163 2 114 1 277 1 2 2 308 1 351 1 45 1 265 1 300 1 134 1 242 1 301 3 181 1 338 1 60 1 120 1 159 1 316 1 
24 1 163 2 114 1 277 1 2 2 308 1 351 1 279 1 45 1 265 1 300 1 134 1 242 1 301 3 181 1 60 1 120 1 159 1 316 1 
24 1 258 1 259 1 112 1 308 1 288 1 242 1 205 2 243 1 76 1 60 1 316 1 210 1 320 1 277 1 251 1 351 1 216 1 45 1 301 2 219 2 18 1 181 1 19 1 23 1 
161 1 258 1 24 3 210 1 163 1 168 1 320 1 114 1 277 1 2 1 251 1 130 1 45 3 300 1 288 1 134 1 205 2 301 4 219 2 243 1 60 3 120 1 
24 1 45 1 300 1 114 1 170 1 60 1 
24 6 163 2 93 1 168 2 197 1 221 1 170 1 114 2 213 1 2 1 44 1 45 5 300 3 301 3 315 1 95 1 60 6 63 1 245 1 342 1 
24 1 233 1 163 1 234 1 93 1 139 2 114 1 55 3 199 2 237 1 115 1 2 1 308 1 333 1 189 1 56 2 265 1 313 2 242 1 145 1 338 1 119 1 60 1 191 1 62 4 316 1 317 3 65 1 271 1 102 1 322 1 225 1 348 1 104 2 351 2 195 2 45 1 252 1 47 6 300 1 301 1 156 2 181 2 281 1 49 2 159 1 184 2 
258 1 24 1 138 1 168 1 169 2 28 1 143 1 288 1 205 3 243 2 60 1 295 1 121 1 64 2 210 1 125 2 212 1 320 1 153 1 66 2 194 1 251 1 130 1 45 1 301 2 157 1 219 3 303 1 
24 2 175 1 163 1 93 1 320 1 170 1 114 1 2 1 45 2 300 2 301 2 60 2 342 1 
343 1 161 1 24 4 163 1 168 1 93 1 347 1 114 1 45 4 300 1 301 1 314 1 60 4 
24 2 163 1 221 1 114 1 127 1 277 1 15 1 2 1 45 2 300 2 301 1 353 1 60 2 245 1 
24 1 247 1 45 1 300 1 168 1 94 1 114 1 60 1 262 1 71 1 
24 2 45 2 300 1 163 1 301 1 57 1 93 1 315 1 346 1 114 1 60 2 
343 1 24 5 163 2 168 1 93 1 347 1 114 2 277 1 213 1 45 4 300 2 301 3 314 1 315 1 60 5 63 1 
343 1 24 5 163 2 166 1 168 1 93 1 347 1 114 2 277 1 213 1 45 4 300 2 301 3 314 1 315 1 60 5 
24 1 163 1 168 1 139 1 114 1 2 1 308 1 351 2 279 1 45 1 265 1 300 1 242 1 301 1 181 2 60 1 159 1 316 1 
24 1 163 1 197 1 221 1 114 1 277 1 2 1 45 1 300 2 301 1 60 1 245 1 342 1 
50 1 351 1 284 1 181 1 326 1 59 1 108 1 36 1 308 1 
75 1 183 1 108 1 
50 1 139 1 196 1 108 1 36 1 
50 2 258 1 259 1 210 1 139 1 196 2 140 1 67 1 194 1 251 1 312 1 205 2 206 1 219 2 75 1 7 1 183 1 108 1 36 2 
263 1 84 1 324 3 352 1 101 1 42 1 54 3 207 1 341 1 10 1 109 1 
287 1 101 1 17 1 41 1 
263 1 101 1 
263 1 101 1 10 1 9 1 
263 1 324 1 352 1 101 1 54 1 207 1 10 1 
11 1 324 1 179 1 
263 1 81 1 84 2 324 3 352 1 101 1 54 3 207 1 88 1 266 1 10 1 109 1 
263 1 324 2 352 1 101 1 42 1 182 1 54 2 207 1 10 1 
247 1 101 1 41 1 250 1 54 1 262 1 3 1 324 1 352 1 207 1 109 1 
263 1 324 1 352 1 101 1 54 1 207 1 109 1 
263 2 324 1 352 1 54 1 207 1 10 1 109 1 
99 1 101 1 1 1 54 2 263 1 144 1 324 2 352 2 207 2 109 1 
198 1 54 1 263 1 324 1 352 1 17 1 207 1 109 1 10 1 
247 2 101 1 42 1 54 2 262 1 263 1 3 1 131 1 310 1 324 2 352 1 94 1 207 1 10 1 109 1 
101 2 42 2 41 1 54 4 263 1 287 1 324 4 352 2 182 1 224 1 207 2 10 1 109 1 
263 1 324 1 352 1 101 1 54 1 207 1 10 1 109 1 
101 3 42 2 41 1 54 4 263 2 287 1 84 1 324 4 352 1 17 1 207 1 88 1 266 1 10 2 
263 1 324 2 270 1 204 1 352 1 101 1 42 1 285 1 54 2 207 1 10 1 109 1 
39 1 101 1 54 3 263 1 324 3 84 2 352 1 207 1 266 1 88 2 109 1 10 1 
240 1 101 2 172 2 286 1 
12 1 324 1 352 1 54 1 207 1 109 1 
263 1 324 2 352 1 101 1 42 1 54 2 207 1 341 1 10 1 109 1 
13 1 
263 1 324 1 352 1 101 1 54 1 207 1 10 1 109 1 

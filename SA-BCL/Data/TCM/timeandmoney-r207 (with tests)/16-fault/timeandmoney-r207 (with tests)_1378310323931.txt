#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (180,304) 74 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (10,19) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (10,19) (10,19) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (180,304) 74 7 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (10,19) (10,19) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 43 298 89 101 210 40 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 131 38 1 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 357 33 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 357 33 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (238,270) 116 43 298 89 312 23 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 192 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 218 160 36 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 218 160 36 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 218 160 36 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 218 160 36 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 218 160 36 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (10,19) (10,19) 99 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (180,304) 74 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 43 298 89 101 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 43 298 89 312 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 43 298 89 101 210 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 43 298 89 101 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 1 142 1 332 2 31 1 4 1 271 1 289 1 194 9 13 2 103 1 91 1 66 2 364 2 252 1 18 1 202 3 301 1 69 9 347 2 349 2 350 1 328 6 209 1 161 1 50 2 51 5 166 1 28 4 
355 1 142 1 332 2 31 1 4 1 271 1 289 1 194 9 13 2 103 1 91 1 66 2 364 2 252 1 18 1 202 3 301 1 69 9 347 2 349 2 350 1 328 6 209 1 161 1 50 2 51 5 166 1 28 4 
355 1 142 1 332 2 31 1 4 1 271 1 289 1 194 10 13 2 103 1 91 1 66 2 364 2 252 1 18 1 202 4 301 1 69 10 347 2 349 2 350 1 328 7 209 1 161 1 50 2 51 6 166 1 28 5 
355 1 142 1 332 2 31 1 4 1 271 1 289 1 194 7 13 2 103 1 91 1 66 2 364 2 18 1 202 2 301 1 69 7 347 2 349 1 350 1 328 4 209 1 161 1 50 2 51 4 166 1 28 3 
91 1 364 1 252 1 332 1 18 1 202 1 69 4 271 1 347 1 349 2 328 3 209 1 50 1 194 4 51 3 166 1 13 1 28 2 
364 1 66 1 31 1 98 1 120 1 18 1 301 1 69 2 347 1 209 1 50 1 194 2 213 1 51 1 166 1 13 1 
364 2 66 1 18 1 202 1 69 3 328 1 209 1 161 1 194 3 51 2 166 1 13 2 28 1 
332 1 4 1 271 1 243 1 341 1 194 9 13 2 103 1 91 1 66 1 364 2 252 1 18 1 202 3 69 9 347 1 349 2 328 7 161 1 209 1 50 1 51 5 166 1 28 4 
332 1 4 1 271 1 243 1 341 1 194 9 13 2 103 1 91 1 66 1 364 2 252 1 18 1 202 3 69 9 347 1 349 2 328 7 161 1 209 1 50 1 51 5 166 1 28 4 
326 1 171 1 244 1 
326 1 47 1 106 2 
316 1 143 1 306 1 299 1 227 1 174 1 71 1 87 1 113 1 90 1 
306 1 180 1 96 1 117 1 121 2 6 2 177 1 178 2 74 1 52 1 
306 1 19 1 
305 1 316 1 143 1 299 1 171 1 182 1 333 1 227 1 326 1 159 1 64 1 163 1 76 1 315 1 
305 2 316 1 143 1 299 1 171 1 333 2 227 1 326 1 71 1 113 1 64 1 163 1 90 1 76 1 315 1 
305 1 61 1 53 1 333 1 165 1 
305 2 326 1 171 1 365 1 53 1 333 2 165 1 22 1 
305 1 333 1 165 1 
305 1 306 1 10 1 19 1 53 1 333 1 
326 1 
305 2 326 1 171 1 53 1 211 1 333 2 165 1 22 1 
305 5 249 1 171 1 53 2 333 5 335 2 22 1 124 1 39 2 326 1 150 1 219 1 293 2 128 1 73 1 284 1 354 1 95 1 165 2 
244 1 174 1 
316 2 143 1 299 2 105 1 227 2 174 1 242 1 71 1 87 1 113 1 90 1 
168 1 116 1 270 1 
316 1 199 1 299 1 96 1 92 1 145 1 121 1 174 1 302 1 6 1 292 1 329 1 178 1 62 1 235 1 140 1 
316 2 104 1 250 1 299 2 145 1 92 1 96 1 121 1 270 1 227 1 302 1 6 1 292 1 329 1 71 1 178 1 62 1 235 1 140 1 90 1 
316 2 143 1 250 1 299 2 105 1 227 2 174 1 71 2 87 1 113 1 90 2 
316 2 143 1 299 2 71 2 303 1 331 1 90 2 227 2 
316 3 143 1 299 3 250 1 227 3 174 1 71 3 113 1 87 1 90 3 
316 1 143 1 299 1 71 1 303 1 90 1 227 1 
242 1 316 1 143 1 299 1 71 1 113 1 105 1 90 1 227 1 
305 1 143 1 306 1 96 1 121 1 333 1 7 1 6 1 178 1 64 1 90 2 315 1 14 1 316 2 104 1 299 2 250 1 180 1 105 1 227 2 71 2 113 1 163 1 74 1 76 1 
316 2 299 2 250 1 71 1 93 1 182 1 90 1 174 1 227 2 
305 1 316 3 104 1 143 1 179 1 250 2 299 3 105 1 333 1 227 3 326 1 71 3 113 1 64 1 163 1 76 1 90 3 315 1 14 1 
168 1 316 2 250 1 299 2 105 1 270 1 227 2 71 2 113 1 90 2 
316 1 299 1 96 1 92 1 145 1 121 1 174 1 302 1 6 1 292 1 329 1 178 1 62 1 140 1 235 1 
316 1 299 1 96 1 92 1 145 1 286 1 121 1 174 1 6 1 292 1 329 1 178 1 62 1 235 1 12 1 
238 1 168 2 215 1 116 2 240 2 189 1 97 1 270 2 84 4 290 1 153 1 88 2 195 1 129 1 363 1 132 1 17 1 223 1 67 1 253 1 43 1 157 2 366 1 231 1 
316 1 143 1 299 1 71 1 163 1 331 1 90 1 227 1 
345 1 257 1 
345 1 257 1 
318 1 217 1 
318 1 217 1 
318 1 217 1 
345 1 257 1 269 1 
297 1 337 1 318 1 345 2 257 2 217 1 
359 1 345 1 257 1 
359 1 345 1 257 1 
359 1 345 1 257 1 
345 1 201 1 257 1 
345 1 201 1 257 1 
345 1 201 1 257 1 
305 1 269 1 333 1 174 1 175 1 272 1 90 2 247 1 155 1 316 2 156 1 299 2 345 1 257 1 226 1 227 2 281 1 327 1 229 1 71 2 186 1 264 1 164 1 237 1 
305 2 268 1 345 2 135 1 257 2 158 1 333 2 281 2 175 3 351 1 337 1 326 1 45 1 327 2 229 1 94 2 27 1 237 2 247 2 
332 1 50 1 347 1 
50 1 213 1 347 1 
169 1 151 1 332 2 50 3 57 1 213 1 
169 1 280 1 332 1 50 2 57 1 213 1 
169 1 332 1 50 2 57 2 213 1 
305 5 79 1 171 1 53 4 123 2 333 5 335 1 39 1 150 2 336 1 272 1 219 3 293 1 274 1 360 2 195 1 129 1 155 1 298 1 42 1 254 2 43 1 106 3 22 1 348 1 326 2 230 1 366 1 47 1 164 1 354 1 165 1 
305 9 0 5 79 2 171 1 53 7 123 6 333 9 335 2 37 1 39 2 150 6 272 4 336 2 220 1 219 8 274 1 293 2 128 1 61 5 195 3 129 3 298 3 279 1 254 6 43 3 106 9 22 1 137 1 326 5 366 3 263 1 48 1 47 3 354 1 165 6 
305 3 306 1 79 1 171 1 53 2 123 2 333 3 335 1 39 1 336 1 272 1 150 2 10 1 219 3 293 1 128 1 360 1 195 1 129 1 298 1 42 1 254 2 43 1 19 1 106 4 348 1 326 3 366 1 47 2 
305 2 79 1 53 1 123 2 333 2 335 1 37 1 39 1 336 1 272 1 150 2 219 3 293 1 128 1 360 1 195 1 129 1 298 1 42 1 254 2 43 1 106 4 348 1 326 2 366 1 47 2 
358 1 244 1 235 1 
323 1 235 1 
338 1 
145 1 62 1 235 1 
334 1 235 1 
145 1 235 1 
358 2 344 1 139 1 145 1 62 1 235 3 
198 1 223 3 54 1 157 4 21 1 44 1 58 1 183 1 84 7 207 1 283 1 231 2 88 3 340 1 195 1 129 1 246 2 
198 1 223 3 54 1 157 4 21 1 44 1 58 1 183 1 84 7 207 1 283 1 231 2 88 3 340 1 195 1 129 1 246 2 
198 1 223 3 54 1 157 4 173 1 21 1 44 1 58 1 183 1 84 7 207 1 283 1 231 2 88 3 340 1 195 1 129 1 246 2 
298 1 43 1 122 1 157 4 183 1 84 5 207 1 101 1 368 1 40 1 210 1 88 1 89 1 195 1 246 1 
29 1 215 1 240 2 97 1 99 1 54 1 58 1 84 9 88 4 340 1 195 2 129 2 363 1 246 1 198 1 223 3 253 1 157 5 44 1 183 1 24 1 207 1 283 1 231 2 
30 1 81 1 239 1 332 1 190 1 121 1 6 1 151 1 178 1 361 1 194 2 13 1 248 1 278 1 364 1 66 1 92 1 18 1 69 2 347 1 328 1 329 1 112 1 209 1 50 2 236 1 213 1 51 1 166 1 115 1 
30 1 239 1 332 1 190 1 121 1 6 1 151 1 178 1 361 1 194 3 13 1 248 1 364 1 66 1 92 1 18 1 181 1 69 3 347 1 110 1 208 1 328 2 329 1 112 1 50 2 236 1 213 1 51 1 166 1 115 1 
30 1 239 1 190 1 332 1 121 1 6 1 151 1 178 1 361 1 194 2 248 1 66 1 92 1 18 1 181 1 69 2 347 1 110 1 328 2 329 1 50 2 236 1 213 1 51 1 166 1 
214 1 308 1 30 2 96 1 145 1 190 2 121 1 6 1 295 1 178 1 194 1 13 1 343 1 364 1 66 2 200 1 92 1 69 1 208 1 329 1 162 1 236 2 235 1 
30 1 239 1 332 1 190 1 121 1 6 1 151 1 178 1 361 1 194 1 13 1 248 1 278 1 364 1 66 1 92 1 69 1 347 1 110 1 329 1 112 1 209 1 50 2 236 1 213 1 115 1 
342 1 
143 1 145 1 96 2 287 1 333 5 335 1 6 2 59 1 150 2 293 1 102 1 64 1 16 2 299 1 106 2 258 2 68 1 346 2 300 1 22 3 159 1 162 1 265 1 163 1 354 1 77 1 76 1 78 2 165 6 305 5 307 2 308 1 79 1 171 1 118 2 32 2 121 2 310 1 85 1 39 1 125 1 219 2 178 2 275 4 315 1 131 1 316 1 92 1 182 1 227 1 325 1 326 2 47 2 329 1 235 1 
305 3 316 1 143 1 299 1 118 1 287 1 182 1 333 3 300 1 22 1 227 1 85 1 59 1 159 1 211 1 275 2 163 1 265 1 64 1 76 1 165 2 315 1 
305 3 143 1 171 1 287 1 333 3 85 1 59 1 64 1 275 3 315 1 316 1 299 1 182 1 258 1 300 1 227 1 22 1 326 1 159 1 265 1 163 1 211 1 76 1 165 1 
305 3 143 1 307 1 118 1 171 1 287 1 333 3 85 1 59 1 64 1 275 3 315 1 316 1 299 1 182 1 258 1 300 1 22 1 227 1 326 1 159 1 211 1 265 1 163 1 76 1 165 2 
305 5 143 1 307 4 171 5 118 4 287 1 32 2 33 1 333 5 335 1 357 1 85 1 38 1 39 1 59 1 150 1 219 1 293 1 222 1 64 1 275 6 315 1 131 1 16 2 316 1 299 1 258 4 182 1 346 2 300 1 227 1 22 3 325 1 136 1 326 5 159 1 47 2 265 1 211 1 163 1 354 1 76 1 78 2 165 7 
143 1 287 1 333 4 335 1 59 1 150 1 293 1 64 1 16 2 299 1 106 2 258 2 300 1 346 2 68 1 22 2 159 1 163 1 265 1 76 1 354 1 78 2 165 4 305 4 307 2 118 2 171 1 32 2 85 1 39 1 219 1 275 4 315 1 131 1 316 1 182 1 227 1 325 1 326 2 47 2 
305 4 307 2 143 1 171 1 118 2 287 1 32 2 333 4 357 1 335 1 85 1 38 1 59 1 39 1 150 1 219 1 293 1 222 1 64 1 275 4 315 1 131 1 16 2 316 1 299 1 258 2 182 1 346 2 300 1 22 2 227 1 325 1 326 1 159 1 47 2 265 1 163 1 76 1 354 1 165 4 78 2 
305 4 307 2 143 1 171 1 118 2 287 1 32 2 333 4 357 1 335 1 85 1 38 1 59 1 39 1 150 1 219 1 293 1 222 1 64 1 275 4 315 1 131 1 16 2 316 1 299 1 258 2 182 1 346 2 300 1 22 2 227 1 325 1 326 1 159 1 47 2 265 1 163 1 76 1 354 1 165 4 78 2 
305 2 143 1 1 1 287 1 32 1 333 2 34 1 335 1 85 1 38 1 59 1 39 1 150 1 219 1 293 1 64 1 275 2 315 1 131 1 316 1 299 1 256 1 182 1 346 1 300 1 227 1 159 1 265 1 163 1 76 1 354 1 
305 2 316 1 307 1 143 1 299 1 118 1 287 1 258 1 33 1 182 1 333 2 300 1 357 1 227 1 85 1 59 1 159 1 275 3 163 1 265 1 64 1 76 1 165 1 315 1 
305 2 316 1 307 1 143 1 299 1 118 1 287 1 258 1 33 1 182 1 333 2 300 1 357 1 227 1 85 1 59 1 159 1 275 3 163 1 265 1 64 1 76 1 165 1 315 1 
305 2 143 1 287 1 32 1 333 2 335 1 85 1 39 1 59 1 150 1 219 1 293 1 64 1 275 2 315 1 131 1 316 1 299 1 256 1 182 1 346 1 300 1 227 1 159 1 265 1 163 1 354 1 76 1 
168 1 215 1 116 1 240 2 189 1 97 1 54 1 270 1 58 1 174 2 84 6 153 1 244 1 340 1 88 3 195 1 363 1 129 1 246 1 132 1 198 1 223 2 253 1 157 3 44 1 231 2 
298 1 116 4 215 1 189 1 253 1 240 2 97 1 43 1 122 1 157 3 312 1 270 4 84 4 23 1 153 1 221 1 368 1 88 1 89 1 195 1 363 1 
168 1 215 1 2 1 145 1 96 1 189 1 240 2 97 1 121 1 174 1 84 2 6 1 292 1 153 1 221 1 178 1 62 1 88 1 90 1 363 1 316 2 104 1 199 1 299 2 250 1 92 1 253 1 321 1 157 1 227 1 302 1 228 1 70 1 329 1 71 1 49 1 235 1 140 1 
215 2 145 1 189 2 240 4 96 1 97 2 121 1 241 1 84 1 6 1 292 1 153 2 221 1 178 1 62 1 88 1 90 1 363 2 316 2 104 1 196 1 65 1 299 2 250 1 92 1 180 1 253 2 321 1 227 1 302 1 329 1 71 1 235 1 140 1 304 1 
215 2 308 1 81 1 96 1 240 4 189 2 145 1 97 2 117 1 121 3 84 2 192 1 6 3 153 2 178 3 88 1 90 1 363 2 316 1 132 1 299 1 250 1 92 1 253 2 321 1 157 1 227 1 228 1 71 1 329 1 367 1 162 1 235 1 353 1 
168 1 116 1 215 1 240 2 189 1 97 1 309 1 270 1 84 3 153 1 221 1 88 2 90 1 195 1 363 1 129 1 316 1 298 1 223 1 299 1 253 1 105 1 43 1 157 1 227 1 366 1 71 1 231 1 113 1 
168 1 132 1 116 1 215 1 223 1 67 1 189 1 253 1 240 2 97 1 43 1 157 2 270 1 84 2 283 1 153 1 195 1 363 1 
168 1 132 1 17 1 116 1 215 1 223 1 189 1 253 1 240 2 97 1 270 1 84 2 366 1 153 1 231 1 88 2 363 1 129 1 
168 2 215 1 116 2 240 2 189 1 97 1 270 2 84 4 153 1 88 2 195 1 363 1 129 1 298 1 132 1 223 2 253 1 43 1 157 2 366 1 283 1 231 1 
168 1 116 1 215 1 223 1 67 1 189 1 253 1 240 2 97 1 43 1 157 2 270 1 84 2 283 1 153 1 353 1 195 1 363 1 
168 1 17 1 116 1 215 1 223 1 189 1 253 1 240 2 97 1 270 1 84 2 366 1 153 1 231 1 88 2 353 1 363 1 129 1 
168 2 215 1 116 2 240 2 189 1 97 1 270 2 84 4 153 1 88 2 195 1 363 1 129 1 298 1 223 2 253 1 43 1 157 2 366 1 283 1 231 1 353 1 
168 2 215 1 116 2 240 2 189 1 97 1 270 2 84 4 153 1 88 2 195 1 363 1 129 1 298 1 223 2 253 1 43 1 157 2 366 1 283 1 231 1 
316 1 215 1 299 1 240 2 253 1 189 1 96 1 180 1 92 1 145 1 97 1 321 1 121 1 157 1 174 1 84 2 302 1 228 1 6 1 292 1 153 1 329 1 178 1 88 1 62 1 235 1 140 1 363 1 
316 1 215 1 299 1 240 2 253 1 189 1 96 1 92 1 145 1 97 1 286 1 321 1 121 1 157 1 174 1 84 2 228 1 6 1 292 1 153 1 329 1 178 1 88 1 62 1 235 1 363 1 285 1 12 1 
168 2 215 1 116 2 240 2 189 1 97 1 270 2 84 4 153 1 221 1 88 2 195 1 363 1 129 1 298 1 223 2 253 1 43 1 157 2 366 1 283 1 231 1 
168 2 116 2 215 1 81 1 145 1 189 1 240 2 97 1 121 1 270 2 84 4 6 1 292 1 153 1 178 1 88 2 62 1 195 1 129 1 363 1 316 1 298 1 223 2 299 1 92 1 180 1 253 1 43 1 157 2 302 1 366 1 283 1 329 1 231 1 140 1 235 1 304 1 
168 1 215 1 116 1 240 2 189 1 97 1 270 1 84 3 153 1 152 1 221 1 88 1 90 1 195 1 129 1 363 1 316 1 298 1 223 1 299 1 253 1 105 1 43 1 157 2 227 1 366 1 283 1 71 1 113 1 
29 1 215 1 160 1 240 2 253 1 97 1 172 1 218 1 36 1 363 1 
29 1 215 1 160 1 240 2 253 1 97 1 172 1 218 1 36 1 363 1 
29 1 215 1 160 1 240 2 253 1 97 1 172 1 218 1 36 1 363 1 
29 1 215 1 160 1 240 2 253 1 97 1 172 1 218 1 36 1 363 1 
29 1 215 1 160 1 240 2 253 1 97 1 172 1 218 1 36 1 363 1 
281 1 337 1 327 1 268 1 339 1 345 1 257 1 27 1 237 1 247 1 
269 1 226 1 
281 1 327 1 267 1 273 1 313 1 345 1 257 1 237 1 247 1 
359 1 255 1 
297 1 201 1 108 1 
305 1 268 1 345 1 135 1 257 1 158 1 333 1 281 1 175 2 337 1 326 1 45 1 327 1 229 1 94 1 27 1 237 1 247 1 
305 1 268 1 345 1 135 1 257 1 158 1 333 1 281 1 175 2 337 1 326 1 45 1 327 1 229 1 94 1 27 1 237 1 247 1 
305 1 268 1 345 1 135 1 257 1 158 1 333 1 281 1 175 2 337 1 326 1 45 1 327 1 229 1 94 1 27 1 237 1 247 1 
297 1 359 1 255 1 
297 1 359 1 255 1 
201 1 108 1 
297 1 201 1 108 1 
156 1 186 1 
305 1 53 1 269 1 333 1 174 1 175 1 272 1 90 2 247 1 155 1 316 2 156 1 299 2 345 1 257 1 158 1 226 1 227 2 281 1 327 1 71 2 184 1 186 1 94 1 264 1 164 1 237 1 
170 1 215 1 145 1 189 1 240 2 97 1 117 2 121 2 311 1 84 2 6 2 153 1 221 1 178 2 88 1 363 1 316 2 299 2 92 1 253 1 322 1 321 1 157 1 227 2 138 1 228 1 329 1 367 1 75 1 235 1 141 1 
92 1 81 1 239 1 332 1 190 1 121 2 203 1 347 1 110 1 6 2 151 1 329 1 294 1 50 2 178 2 234 1 213 1 115 1 248 1 
239 1 92 1 332 1 190 1 121 1 35 1 347 1 110 1 6 1 151 1 294 1 329 1 50 2 178 1 213 1 115 1 248 1 
343 1 308 1 92 1 145 1 96 1 190 1 121 1 203 1 225 1 6 1 329 1 162 1 178 1 235 1 
92 1 239 1 332 1 190 1 121 1 203 1 347 1 110 1 6 1 151 1 294 1 329 1 50 2 178 1 234 1 213 1 115 1 248 1 
119 1 
124 1 326 1 150 1 219 1 171 1 244 1 73 1 
305 1 171 1 333 1 335 1 39 1 150 1 219 1 293 1 16 1 106 1 22 1 325 1 326 2 47 1 354 1 78 1 165 1 
145 3 96 1 147 2 5 1 3 1 333 5 334 2 335 4 100 1 193 2 6 3 150 8 291 1 293 4 62 3 195 2 298 2 254 6 106 12 20 2 204 2 22 3 109 2 111 2 26 2 73 1 354 4 76 2 165 5 305 5 79 2 81 1 171 2 121 3 123 6 358 2 124 1 39 4 125 1 219 9 127 1 126 2 178 3 130 2 129 2 92 4 323 3 43 2 326 8 366 2 139 1 329 3 47 6 235 10 
305 1 79 1 171 2 147 2 122 1 191 1 123 5 55 1 333 1 335 2 39 2 125 1 150 5 219 8 293 2 126 1 101 1 154 1 195 2 129 2 15 1 298 2 319 1 254 5 43 2 106 6 22 1 326 5 366 2 47 3 72 1 368 1 354 2 165 1 266 1 
305 1 306 1 198 1 19 1 147 2 99 1 54 1 333 1 335 1 39 1 150 1 10 1 219 2 293 1 222 1 340 1 195 1 354 1 129 1 
171 1 335 1 124 1 39 1 150 1 326 1 219 1 293 1 73 1 354 1 
298 2 254 5 43 2 147 2 106 10 123 5 204 1 150 5 326 5 366 2 219 5 47 5 126 1 195 2 129 2 
305 1 326 1 171 1 333 1 165 1 22 1 
305 3 79 2 308 1 145 1 96 2 121 4 216 1 5 1 333 3 335 2 100 2 39 2 6 4 125 2 150 2 219 2 293 2 102 1 128 1 178 4 296 1 92 1 22 2 329 1 162 1 235 1 77 1 354 1 165 4 
6 1 306 1 180 1 96 1 178 1 121 1 74 1 
79 1 254 2 171 2 106 4 123 2 335 1 39 1 150 2 326 4 125 1 219 1 47 2 293 1 354 1 246 1 
281 1 268 1 186 1 352 1 237 1 
281 1 233 1 237 1 
281 1 233 1 237 1 
281 1 233 1 237 1 
281 1 212 1 237 1 
281 1 212 1 237 1 
281 1 212 1 237 1 
281 1 237 1 
345 1 257 1 
198 1 215 2 223 3 253 2 240 4 97 2 157 4 54 1 44 1 58 1 84 8 283 1 86 1 231 2 340 1 88 4 195 1 246 1 129 1 363 2 
198 1 223 2 54 1 157 3 44 1 58 1 84 6 244 1 231 2 88 3 340 1 195 1 246 1 129 1 
298 1 215 1 223 2 253 1 240 2 97 1 43 1 157 2 261 1 84 4 366 1 283 1 231 1 88 2 195 1 129 1 363 1 
298 1 101 1 43 1 368 1 122 1 157 3 88 1 89 1 195 1 84 4 
298 1 43 1 368 1 122 1 157 3 88 1 89 1 312 1 195 1 84 4 
122 1 88 1 84 1 
368 1 157 1 84 1 
298 1 215 1 223 3 240 2 253 1 97 1 43 1 157 3 261 1 204 1 84 6 366 1 283 1 231 2 88 3 195 1 363 1 129 1 
29 1 215 1 240 2 97 1 122 1 191 1 55 1 84 12 101 1 88 6 154 1 195 2 363 1 129 2 298 2 319 1 223 2 253 1 43 2 157 6 366 2 283 1 231 1 368 1 72 1 
198 1 223 2 157 3 54 1 84 6 283 1 231 1 340 1 88 3 195 1 129 1 
198 1 215 1 223 2 253 1 240 2 97 1 157 1 54 1 260 1 44 1 58 1 84 3 283 1 86 1 231 1 88 2 363 1 
29 1 198 2 215 1 223 5 240 2 253 1 97 1 99 1 54 2 157 5 84 10 283 2 231 3 88 5 340 1 195 2 363 1 129 2 
29 1 215 1 223 1 253 1 240 2 97 1 43 1 157 2 84 2 283 1 195 1 363 1 
298 1 29 1 215 1 223 2 253 1 240 2 97 1 43 1 157 2 84 4 366 1 283 1 231 1 88 2 195 1 129 1 363 1 
29 1 198 1 215 3 223 2 253 3 240 6 97 3 54 1 157 1 260 1 84 3 262 1 86 1 283 1 231 1 88 2 363 3 
356 1 29 1 215 4 240 8 97 4 122 3 54 1 58 1 84 24 149 1 86 1 101 1 340 1 88 11 89 1 195 4 246 1 363 4 129 3 298 3 198 1 223 5 253 4 43 3 157 13 44 1 261 1 262 1 366 2 283 2 231 3 368 3 210 1 
29 1 215 1 240 2 97 1 122 1 54 1 58 1 84 8 101 1 88 4 340 1 195 1 154 1 246 1 129 1 363 1 198 1 223 2 253 1 157 4 44 1 231 2 368 1 
298 1 29 1 215 2 253 2 240 4 97 2 43 1 122 1 157 3 261 1 84 4 101 1 368 1 88 1 89 1 195 1 154 1 363 2 
29 1 215 3 240 6 97 3 122 1 191 1 54 1 55 1 58 1 84 19 86 1 101 1 340 1 88 10 154 1 195 3 246 1 363 3 129 3 298 2 198 1 319 1 223 4 253 3 43 2 157 9 44 1 261 1 366 2 283 1 231 3 72 1 368 1 
29 1 215 3 240 6 97 3 122 1 191 1 54 1 55 1 58 1 84 17 86 1 101 1 340 1 88 7 154 1 195 3 246 1 363 3 129 2 298 2 198 1 319 1 223 5 253 3 43 2 157 10 44 1 261 1 366 1 283 2 231 3 368 1 72 1 
29 1 215 1 240 2 97 1 122 1 54 1 58 1 84 8 101 1 88 4 340 1 195 1 154 1 246 1 129 1 363 1 198 1 223 2 253 1 157 4 44 1 231 2 368 1 
29 1 215 1 240 2 97 1 122 1 191 1 55 1 84 12 101 1 88 6 154 1 195 2 363 1 129 2 298 2 319 1 223 2 253 1 43 2 157 6 366 2 283 1 231 1 368 1 72 1 
29 1 215 4 240 8 97 4 122 1 191 1 54 1 55 1 58 1 84 18 86 2 101 1 340 1 88 8 154 1 195 3 246 1 363 4 129 2 298 2 198 1 319 1 223 5 253 4 43 2 157 10 44 1 261 1 366 1 283 2 231 3 72 1 368 1 
29 1 215 4 240 8 97 4 122 1 191 1 55 1 84 16 86 2 101 1 88 7 154 1 195 3 363 4 129 2 298 3 319 1 223 6 253 4 43 3 157 9 262 1 366 2 283 3 231 3 72 1 368 1 
198 3 223 6 54 3 157 3 44 2 58 1 84 7 283 3 231 3 88 4 340 1 195 1 129 1 
29 1 215 4 240 8 97 4 122 1 191 1 54 1 55 1 58 1 84 18 86 2 101 1 340 1 88 8 154 1 195 3 246 1 363 4 129 2 298 2 198 1 319 1 223 4 253 4 43 2 157 10 44 1 262 1 366 1 283 1 231 3 72 1 368 1 
316 1 60 1 299 1 93 1 182 1 174 1 227 1 
316 1 133 1 299 1 80 1 144 1 182 1 174 1 227 1 288 1 60 1 93 1 277 1 
6 1 308 1 92 1 329 1 145 1 96 1 244 1 162 1 178 1 121 1 235 1 
316 2 250 1 299 2 145 1 92 1 96 1 121 1 174 1 227 1 6 1 292 1 71 1 329 1 178 1 62 1 235 1 90 1 140 1 
143 1 145 2 121 1 334 1 174 1 100 1 6 1 292 1 178 1 62 2 90 2 315 1 316 2 299 2 250 1 92 1 227 2 329 1 71 1 26 1 163 1 140 1 235 3 
188 1 143 1 145 2 286 1 121 2 334 1 174 1 100 1 6 2 292 1 178 2 62 2 90 2 315 1 316 2 299 2 250 1 92 1 227 2 329 1 71 1 26 1 163 1 235 3 
305 2 188 1 96 1 145 1 92 1 171 1 323 1 121 3 334 1 333 2 205 1 100 1 358 1 6 3 326 1 329 1 26 1 330 1 178 3 62 1 76 1 235 4 165 1 
305 2 188 1 96 1 145 1 92 1 171 1 323 1 121 3 20 1 334 1 333 2 100 1 358 1 6 3 326 1 329 1 26 1 178 3 62 1 76 1 235 4 165 1 
6 1 92 1 329 1 178 1 121 1 362 1 
167 1 96 1 145 1 92 2 146 1 121 1 107 1 6 1 139 1 329 1 178 1 62 1 235 1 
168 1 116 1 215 2 145 1 189 2 240 4 81 1 97 2 121 1 54 1 270 1 174 2 58 1 84 6 6 1 292 1 153 2 221 1 178 1 88 3 340 1 62 1 195 1 90 1 246 1 129 1 363 2 316 2 198 1 65 1 223 2 299 2 250 1 92 1 253 2 180 1 157 3 44 1 227 1 302 1 138 1 329 1 71 1 231 2 235 1 140 1 304 1 
305 3 96 1 171 1 121 1 53 1 5 1 333 3 335 2 358 1 124 1 6 1 39 2 193 1 150 1 219 1 293 2 178 1 323 1 20 1 22 1 109 1 326 1 111 1 73 1 354 2 235 2 76 1 165 2 
81 1 145 1 92 2 121 2 358 1 6 2 291 1 139 1 329 1 178 2 62 1 362 1 235 2 
188 1 308 1 92 1 96 1 81 1 145 1 82 1 121 4 6 4 329 1 162 1 178 4 235 1 
167 1 145 1 92 2 134 1 121 1 259 1 107 1 6 1 9 1 329 1 178 1 62 1 235 1 
6 1 92 1 329 1 239 1 96 1 50 1 178 1 121 1 213 1 347 1 
110 1 6 2 170 1 92 1 329 1 145 1 81 1 322 1 178 2 121 2 235 1 
317 1 320 1 308 1 96 1 81 1 145 2 92 2 322 1 82 1 121 5 100 1 6 4 329 2 162 1 178 5 235 3 
320 1 308 1 96 1 81 1 145 2 92 2 322 1 82 1 121 5 100 1 6 4 8 1 329 2 162 1 178 5 235 3 
316 2 250 1 299 2 145 1 92 1 96 1 286 1 121 1 174 1 227 1 6 1 292 1 71 1 329 1 178 1 62 1 235 1 90 1 
167 1 145 1 92 2 146 1 121 1 107 1 100 1 6 1 139 1 329 1 178 1 62 1 235 1 
197 1 314 1 11 1 276 1 174 1 
305 2 143 1 197 1 171 1 53 1 333 2 174 1 326 1 314 2 11 2 187 1 163 1 369 1 276 2 64 1 76 1 245 1 315 1 14 1 
316 1 197 1 299 1 311 1 227 1 314 1 11 1 75 1 141 1 
197 1 187 1 369 1 
244 1 18 1 51 1 166 1 
364 1 18 1 69 1 194 1 51 1 166 1 13 1 
66 1 236 1 69 1 
41 1 364 1 31 2 18 1 324 1 69 3 232 1 209 1 194 3 51 1 13 1 166 1 
349 1 364 1 328 1 18 1 69 2 194 2 51 1 166 1 13 1 
91 1 364 1 332 1 209 1 50 1 69 1 194 1 51 1 347 1 28 1 13 1 
364 1 209 1 69 1 194 1 51 1 166 1 13 1 
364 1 18 1 209 1 69 1 194 1 166 2 13 1 
364 2 251 1 56 1 69 2 176 1 209 1 194 2 51 1 166 1 13 2 
103 1 364 1 18 1 202 1 4 1 69 3 328 2 209 1 194 3 51 2 166 1 13 1 28 1 
364 1 224 1 332 1 18 1 69 2 347 1 151 1 328 1 209 1 50 2 213 1 194 2 51 1 166 1 13 1 
364 2 252 1 18 1 202 1 69 4 349 1 328 2 209 1 194 4 51 2 166 1 13 2 28 1 
364 1 18 1 209 1 69 1 194 1 51 1 166 1 13 1 
41 1 364 1 31 1 18 2 324 1 202 1 69 4 206 1 328 2 194 4 51 3 166 2 13 1 28 1 
364 1 18 1 148 1 69 2 328 1 46 1 243 1 209 1 194 2 51 1 166 1 13 1 
41 1 364 1 25 1 31 2 18 1 209 1 324 2 69 3 194 3 51 1 166 1 13 1 
63 2 114 1 83 1 51 2 
364 1 185 1 209 1 69 1 194 1 13 1 
103 1 364 1 328 1 18 1 209 1 69 2 194 2 51 1 166 1 13 1 
282 1 
364 1 18 1 209 1 69 1 194 1 51 1 166 1 13 1 
103 1 364 1 328 1 31 1 18 1 209 1 69 3 194 3 51 1 166 1 13 1 
206 1 202 1 51 1 28 1 
51 1 166 1 

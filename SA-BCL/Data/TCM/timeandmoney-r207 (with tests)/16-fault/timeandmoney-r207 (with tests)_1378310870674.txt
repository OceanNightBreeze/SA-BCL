#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (62,182) (62,182) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (141,221) 44 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (62,182) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (60,124,185) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 67 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (141,221) 44 256 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (174,208) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (174,208) 224 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (174,208) 224 206 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (62,182) (62,182) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (62,182) (62,182) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 0 292 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 17 299 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (141,221) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (141,221) (141,221) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 220 287 52 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 220 287 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 220 287 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 220 287 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 220 287 52 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 0 292 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (62,182) (62,182) 295 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (141,221) 44 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 67 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (62,182) (62,182) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (62,182) (62,182) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 164 1 215 2 328 1 106 1 49 3 226 1 313 1 150 2 116 3 9 1 255 2 232 1 
160 1 262 1 133 1 164 4 307 1 215 2 4 1 226 2 312 1 49 9 313 1 10 1 9 6 11 1 232 3 284 2 189 1 63 2 328 1 106 1 150 2 333 1 71 2 116 9 253 2 255 5 339 1 43 1 
160 1 262 1 133 1 164 4 307 1 215 2 4 1 226 2 312 1 49 9 313 1 10 1 9 6 11 1 232 3 284 2 189 1 63 2 328 1 106 1 150 2 333 1 71 2 116 9 253 2 255 5 339 1 43 1 
160 1 262 1 133 1 164 5 307 1 215 2 4 1 226 2 312 1 49 10 313 1 10 1 9 7 11 1 232 4 284 2 189 1 63 2 328 1 106 1 150 2 333 1 71 2 116 10 253 2 255 6 339 1 43 1 
160 1 133 1 164 3 307 1 215 2 4 1 226 2 312 1 49 7 313 1 10 1 9 4 11 1 232 2 284 2 189 1 63 1 328 1 106 1 150 2 333 1 71 2 116 7 253 2 255 4 339 1 43 1 
160 1 262 1 164 2 215 1 63 2 328 1 106 1 49 4 150 1 333 1 71 1 116 4 253 1 9 3 255 3 232 1 284 1 43 1 
96 1 160 1 133 1 215 1 84 1 328 1 106 1 49 2 85 1 312 1 226 1 150 1 71 1 116 2 255 1 284 1 
300 1 160 1 262 1 164 4 307 1 215 2 310 1 226 1 49 9 313 1 9 7 232 3 284 1 189 1 63 2 328 1 106 1 150 2 333 1 71 1 116 9 253 1 255 5 43 1 
300 1 160 1 262 1 164 4 307 1 215 2 310 1 226 1 49 9 313 1 9 7 232 3 284 1 189 1 63 2 328 1 106 1 150 2 333 1 71 1 116 9 253 1 255 5 43 1 
182 1 264 1 38 1 62 1 12 1 185 1 297 1 
105 1 
32 1 264 2 278 1 38 1 216 1 166 1 105 1 185 2 
260 2 288 1 97 1 264 5 216 1 78 2 166 1 105 1 169 2 244 1 196 1 179 1 32 2 203 1 336 1 38 2 204 1 231 1 185 5 
166 1 105 1 67 1 
178 2 105 1 16 1 
12 1 297 2 
95 1 180 1 98 2 191 1 36 1 193 2 12 1 221 1 126 2 297 1 44 1 
182 1 12 1 297 1 
162 1 60 1 264 1 166 1 148 1 105 1 68 1 69 1 317 1 37 1 87 1 185 1 156 1 124 1 
124 1 297 1 
32 1 264 1 38 1 185 1 207 1 
32 1 264 2 61 1 38 1 216 1 166 1 105 1 185 2 
32 1 264 1 185 1 
162 2 98 1 305 1 193 1 77 1 104 1 66 1 197 1 274 1 68 1 248 1 70 1 183 1 8 1 252 1 37 2 36 1 14 1 73 1 126 1 
45 1 162 1 146 1 265 1 68 1 69 1 114 1 37 1 297 1 
67 1 
45 1 162 2 104 2 68 2 69 1 248 1 114 1 37 2 14 2 297 1 
69 1 263 1 162 1 37 1 104 1 14 1 68 1 
146 1 265 1 297 1 
162 1 98 1 264 1 265 1 193 1 148 1 104 1 221 1 68 1 69 1 248 1 36 1 252 1 37 1 87 1 12 1 185 1 156 1 14 1 187 1 256 1 124 1 126 1 44 1 297 2 
45 1 248 1 162 2 317 1 37 2 1 1 104 1 14 1 68 2 
162 2 264 1 265 1 148 1 104 2 105 1 68 2 69 1 248 2 252 1 37 2 87 1 185 1 14 2 187 1 156 1 236 1 124 1 297 1 
265 1 297 1 
98 1 36 1 193 1 126 1 
98 1 36 1 193 1 126 1 
144 1 243 1 42 1 54 1 55 2 122 1 258 1 128 1 
69 1 237 1 162 1 37 1 87 1 104 1 14 1 68 1 
45 1 162 1 265 1 104 1 68 1 69 1 248 1 114 1 37 1 14 1 297 1 
69 1 237 1 263 1 162 2 37 2 104 2 14 2 68 2 
225 1 174 1 
225 1 174 1 
225 1 174 1 
225 1 174 1 
208 1 289 1 
208 1 289 1 
208 1 289 1 
225 1 174 1 
225 1 174 1 
225 1 174 1 
225 1 174 1 
225 1 174 1 
225 1 174 1 
161 1 225 1 174 1 224 1 
161 1 264 1 185 1 206 1 225 1 174 1 224 1 
96 1 71 2 253 1 48 2 107 1 
71 1 253 1 284 1 
96 1 71 1 284 1 
96 1 71 3 253 2 48 1 272 1 107 1 
96 1 71 2 253 1 242 1 48 1 107 1 
260 1 132 1 264 5 78 1 216 1 218 1 135 1 166 1 167 2 169 1 178 3 229 1 185 5 16 1 90 1 288 2 97 1 21 2 100 1 105 2 27 1 149 1 245 1 332 1 199 1 32 1 35 1 38 4 336 3 118 2 121 1 125 1 
260 2 132 2 163 1 264 8 78 2 216 1 166 1 135 1 167 6 169 2 178 9 229 2 182 1 319 1 53 1 12 1 185 8 16 3 143 1 288 6 97 1 21 6 62 1 105 5 27 3 244 1 332 3 199 4 331 1 32 5 35 3 336 8 38 6 119 1 121 3 296 4 125 3 207 4 297 1 
260 1 132 1 264 3 78 1 166 1 167 2 169 1 178 4 229 1 185 3 16 2 90 1 288 2 21 2 105 3 27 1 149 1 244 1 199 1 332 1 35 1 38 2 336 3 118 1 121 1 125 1 
260 1 132 1 264 3 78 1 166 1 167 4 169 1 178 7 229 1 182 1 319 1 12 1 185 3 16 3 90 1 143 1 288 4 21 4 62 1 105 4 27 2 149 1 244 1 199 2 332 2 35 2 336 5 38 2 119 1 118 1 121 2 125 2 297 1 
136 1 
228 1 8 1 67 1 
249 1 8 1 
8 1 197 1 
228 2 8 3 305 1 280 1 64 1 197 1 
8 1 305 1 197 1 
213 1 8 1 
210 1 303 1 214 1 137 1 291 1 5 2 110 1 86 1 294 1 155 1 123 1 89 1 285 1 322 1 
303 4 214 1 137 5 168 4 5 9 86 2 54 1 55 2 89 1 285 2 322 2 93 1 144 1 323 12 23 1 243 1 102 1 291 25 27 3 195 1 109 1 110 1 247 3 111 1 332 3 35 3 294 13 42 1 121 3 155 2 123 2 125 3 158 1 
144 2 303 2 323 1 137 1 243 2 291 3 5 3 110 1 86 1 294 2 277 1 54 2 42 2 55 4 155 1 123 1 89 1 285 1 322 1 93 1 92 1 
303 1 214 1 137 1 291 1 5 2 110 1 86 1 294 1 155 1 123 1 285 1 89 1 322 1 
303 1 214 1 137 1 291 1 5 2 110 1 86 1 294 1 155 1 123 1 285 1 89 1 322 1 
130 2 212 2 98 1 101 1 193 1 326 1 215 1 65 1 226 2 49 1 150 1 36 1 230 1 293 1 116 1 126 1 129 2 
96 1 130 1 160 1 212 1 238 1 98 1 306 1 193 1 215 1 272 1 311 1 108 1 226 1 49 1 150 1 139 1 183 1 71 2 116 1 253 1 284 1 73 1 235 1 234 1 126 1 129 1 
130 1 212 1 160 1 306 1 215 1 272 1 311 1 49 2 226 1 183 1 9 1 284 1 234 1 235 1 96 1 98 1 238 1 193 1 328 1 106 1 108 1 150 1 71 2 116 2 253 1 255 1 205 1 73 1 126 1 129 1 
130 1 212 1 215 1 272 1 311 1 49 3 226 1 139 1 183 1 9 2 284 1 234 1 235 1 96 1 98 1 99 1 238 1 193 1 65 1 328 1 106 1 108 1 150 1 71 2 116 3 253 1 255 1 73 1 126 1 129 1 
130 1 212 1 272 1 226 1 49 2 139 1 183 1 9 2 284 1 234 1 235 1 96 1 98 1 99 1 193 1 328 1 106 1 108 1 71 2 116 2 253 1 255 1 73 1 126 1 129 1 
273 1 
260 1 132 1 97 1 0 1 264 1 98 1 193 1 78 1 169 1 292 1 32 1 36 1 336 1 185 1 126 1 
302 1 46 2 162 1 264 3 216 1 271 1 317 1 278 1 87 1 185 3 18 1 60 1 241 1 327 1 148 1 68 1 69 1 32 2 33 1 37 1 156 1 124 1 
302 1 46 3 162 1 264 3 271 1 216 1 166 1 317 1 278 1 87 1 185 3 18 1 60 1 240 1 327 1 148 1 105 1 68 1 69 1 32 1 33 1 37 1 156 1 124 1 
302 1 46 3 162 1 264 3 216 1 271 1 166 1 140 1 317 1 278 1 87 1 185 3 18 1 60 1 240 1 241 1 327 1 148 1 105 1 68 1 69 1 32 2 33 1 37 1 156 1 124 1 
260 1 162 1 264 5 76 2 271 1 78 1 166 5 169 1 181 2 278 1 87 1 13 1 185 5 16 2 18 1 97 1 288 1 105 5 26 1 198 1 202 1 32 7 33 1 37 1 124 1 46 6 302 1 47 1 216 3 227 1 315 2 140 4 317 1 60 1 145 1 240 4 241 4 148 1 327 1 68 1 69 1 336 1 154 2 156 1 
260 1 162 1 264 4 76 2 78 1 271 1 166 1 169 1 178 2 181 2 87 1 13 1 185 4 16 2 18 1 97 1 288 1 105 2 198 1 32 4 33 1 37 1 124 1 46 4 302 1 216 2 315 2 140 2 317 1 60 1 240 2 241 2 148 1 327 1 68 1 69 1 251 1 336 1 154 2 156 1 
260 1 302 1 46 4 47 1 162 1 76 2 264 4 216 2 78 1 271 1 166 1 169 1 315 2 140 2 181 2 317 1 87 1 13 1 185 4 16 2 18 1 288 1 97 1 60 1 145 1 240 2 241 2 327 1 148 1 105 1 26 1 68 1 198 1 69 1 32 4 33 1 37 1 336 1 154 2 156 1 124 1 
260 1 302 1 46 4 47 1 162 1 76 2 264 4 216 2 78 1 271 1 166 1 169 1 315 2 140 2 181 2 317 1 87 1 13 1 185 4 16 2 18 1 288 1 97 1 60 1 145 1 240 2 241 2 327 1 148 1 105 1 26 1 68 1 198 1 69 1 32 4 33 1 37 1 336 1 154 2 156 1 124 1 
260 1 302 1 46 4 162 1 76 2 264 4 304 1 216 2 78 1 271 1 166 1 169 1 178 2 315 2 140 2 51 1 317 1 87 1 282 2 185 4 56 1 18 1 288 1 97 1 22 2 60 1 240 2 241 2 327 1 148 1 105 1 26 1 68 1 198 1 69 1 32 4 33 1 37 1 336 1 156 1 124 1 
260 1 302 1 46 5 47 1 162 1 76 2 264 4 216 2 78 1 271 1 166 1 169 1 227 1 315 2 181 2 140 3 317 1 87 1 13 1 185 4 16 2 18 1 288 1 97 1 145 1 60 1 240 3 241 3 327 1 148 1 105 1 26 1 68 1 198 1 69 1 32 5 33 1 37 1 336 1 154 2 156 1 124 1 
260 1 302 1 46 5 47 1 162 1 76 2 264 4 216 2 78 1 271 1 166 1 169 1 227 1 315 2 181 2 140 3 317 1 87 1 13 1 185 4 16 2 18 1 288 1 97 1 145 1 60 1 240 3 241 3 327 1 148 1 105 1 26 1 68 1 198 1 69 1 32 5 33 1 37 1 336 1 154 2 156 1 124 1 
260 1 162 1 264 4 76 2 78 1 271 1 166 1 169 1 178 2 87 1 185 4 282 2 18 1 97 1 288 1 22 2 105 1 198 1 32 4 33 1 37 1 124 1 46 4 302 1 216 2 315 2 140 2 51 1 317 1 60 1 240 2 241 2 148 1 327 1 68 1 69 1 251 1 336 1 156 1 
144 1 98 1 193 1 217 1 243 1 291 1 83 1 152 1 36 1 294 1 54 1 42 1 122 1 55 2 126 1 258 1 
301 1 265 1 54 1 55 2 144 1 323 1 243 1 194 1 291 2 27 1 332 1 35 1 294 1 121 1 42 1 122 1 125 1 297 1 258 1 
144 1 303 1 243 1 67 1 5 1 110 1 54 1 42 1 122 1 55 2 155 1 89 1 322 1 128 1 258 1 
144 1 299 1 301 1 323 1 243 1 291 2 168 1 247 1 294 1 54 1 42 1 122 1 55 2 258 1 17 1 
45 1 301 1 162 2 305 1 134 1 77 1 217 1 274 1 183 1 8 1 279 1 281 1 54 1 55 2 14 1 144 1 323 1 98 1 193 1 243 1 104 1 291 2 197 1 68 1 248 1 70 1 113 1 36 1 37 2 252 1 294 1 42 1 41 1 122 1 73 1 126 1 257 1 258 1 
301 1 162 2 305 1 77 1 79 2 221 1 274 1 183 1 8 1 279 1 141 1 54 2 55 4 14 1 286 1 144 2 19 1 323 2 59 1 98 1 193 1 243 2 104 1 291 5 66 2 197 1 68 1 29 1 332 1 248 1 70 1 37 2 252 1 36 1 294 3 121 1 42 2 122 2 125 1 73 1 126 1 258 2 
144 1 74 1 243 1 291 1 332 1 294 1 54 1 42 1 122 1 55 2 125 1 128 1 258 1 
144 1 323 1 190 1 243 1 291 1 27 1 35 1 54 1 42 1 122 1 55 2 128 1 258 1 
144 1 323 1 243 1 291 2 27 1 332 1 35 1 294 1 54 1 42 1 121 1 122 1 55 2 125 1 128 1 258 1 
144 1 74 1 243 1 291 1 332 1 152 1 294 1 54 1 42 1 122 1 55 2 125 1 258 1 
144 1 323 1 190 1 243 1 291 1 27 1 35 1 152 1 54 1 42 1 122 1 55 2 258 1 
144 1 323 1 243 1 291 2 27 1 332 1 35 1 152 1 294 1 54 1 42 1 121 1 122 1 55 2 125 1 258 1 
144 1 323 1 243 1 291 2 27 1 332 1 35 1 294 1 54 1 42 1 121 1 122 1 55 2 125 1 258 1 
98 1 36 1 193 1 221 1 126 1 
98 1 36 1 193 1 329 1 126 1 
144 1 301 1 323 1 243 1 291 2 27 1 332 1 35 1 294 1 54 1 42 1 121 1 122 1 55 2 125 1 258 1 
98 1 193 1 141 1 205 1 221 1 126 1 
144 1 301 1 323 1 265 1 243 1 291 2 27 1 332 1 200 1 35 1 294 1 54 1 42 1 121 1 122 1 55 2 125 1 258 1 297 1 
144 1 287 1 117 1 52 1 243 1 42 1 54 1 55 2 220 1 92 1 
144 1 287 1 117 1 52 1 243 1 42 1 54 1 55 2 220 1 92 1 
144 1 287 1 117 1 52 1 243 1 42 1 54 1 55 2 220 1 92 1 
144 1 287 1 117 1 52 1 243 1 42 1 54 1 55 2 220 1 92 1 
144 1 287 1 117 1 52 1 243 1 42 1 54 1 55 2 220 1 92 1 
209 1 301 1 162 2 2 1 217 1 222 1 83 1 180 2 183 1 8 1 279 1 54 1 55 2 144 1 323 1 98 2 193 2 243 1 291 2 197 1 68 2 37 2 294 1 42 1 122 1 337 1 73 1 157 1 341 1 126 2 258 1 
212 1 31 1 239 1 98 1 36 1 230 1 193 1 126 1 
96 1 212 1 98 1 193 1 272 1 311 1 108 1 139 1 31 1 201 1 183 1 71 2 253 1 284 1 73 1 233 1 235 1 126 1 
96 1 212 1 98 2 193 2 272 1 311 1 108 1 139 1 31 1 201 1 183 1 71 2 253 1 205 1 284 1 73 1 233 1 235 1 126 2 
96 1 139 1 201 1 212 1 183 1 98 1 71 2 193 1 253 1 272 1 284 1 73 1 235 1 311 1 108 1 28 1 126 1 
309 1 
260 1 97 1 288 1 78 1 166 1 169 1 105 1 203 1 336 1 231 1 
288 5 21 5 167 5 105 5 27 2 29 1 178 10 332 2 35 2 336 5 39 1 121 2 125 2 16 5 127 2 
32 1 264 1 216 1 166 1 105 1 185 1 
260 1 132 1 97 1 98 1 0 1 193 1 78 1 169 1 170 1 292 1 32 1 36 1 336 1 126 1 
288 1 203 1 336 1 231 1 166 1 105 1 67 1 
260 1 264 1 78 1 216 1 166 1 169 1 178 1 181 1 13 1 185 1 16 1 288 1 97 1 105 2 32 1 336 1 154 1 
159 1 260 2 132 1 264 2 305 1 216 1 165 1 78 2 169 2 228 1 183 1 7 1 8 4 185 2 283 1 97 2 57 1 98 1 193 1 148 1 64 1 197 1 246 1 249 2 112 1 32 2 36 1 336 1 73 2 126 1 
260 2 132 1 264 1 267 1 216 1 78 2 219 1 166 2 167 5 168 1 169 2 175 1 6 1 178 6 185 1 321 1 16 3 94 1 58 1 20 1 97 2 288 5 21 5 105 5 27 2 247 1 332 2 32 1 35 2 336 8 39 1 121 2 125 2 127 2 158 1 
260 1 288 1 97 1 264 1 145 1 62 1 78 1 169 1 332 1 182 1 35 1 336 2 12 1 295 1 185 1 186 1 155 1 322 1 297 1 127 2 
98 1 36 1 193 1 12 1 221 1 126 1 297 1 44 1 
260 1 132 1 288 2 97 1 21 2 78 1 166 2 167 2 169 1 105 4 178 4 336 1 285 1 321 1 16 2 
177 1 316 1 184 1 325 1 270 1 
184 1 266 1 270 1 
184 1 266 1 270 1 
184 1 266 1 270 1 
30 1 184 1 270 1 
30 1 184 1 270 1 
30 1 184 1 270 1 
184 1 270 1 
225 1 174 1 
144 1 303 3 323 5 243 1 137 2 291 10 5 5 332 2 35 2 294 5 42 1 54 1 295 1 55 2 155 2 186 1 322 2 92 1 
144 1 243 1 137 1 291 2 5 1 332 1 294 2 54 1 42 1 55 2 125 1 92 1 
144 1 303 1 323 2 243 1 137 1 291 4 27 1 5 2 332 1 35 1 294 2 54 1 42 1 121 1 55 2 125 1 92 1 
144 3 211 1 323 2 303 1 243 3 137 1 291 3 5 2 294 1 54 3 42 3 320 1 55 6 155 1 322 1 93 1 92 1 
211 1 303 6 137 5 168 4 5 11 54 5 320 1 55 10 186 1 89 1 322 3 93 2 92 1 144 5 323 15 23 1 102 1 243 5 291 28 195 1 27 3 109 1 110 1 247 3 332 4 35 4 334 1 294 13 42 5 121 3 155 3 125 3 158 1 
144 1 303 1 20 1 323 1 243 1 168 1 291 2 5 1 110 1 247 1 294 1 54 1 42 1 55 2 155 1 89 1 322 1 92 1 158 1 
303 1 137 1 168 2 5 2 54 2 55 4 89 1 322 1 92 1 144 2 323 2 20 1 243 2 291 5 109 1 110 1 247 1 332 1 334 1 294 3 42 2 121 1 155 1 125 1 158 1 
303 2 267 1 137 1 168 1 175 1 5 3 54 3 55 6 89 1 322 1 92 1 93 1 144 3 94 1 323 7 20 1 58 1 243 3 291 13 27 2 110 1 247 1 332 2 35 2 334 1 294 6 42 3 121 2 155 1 125 2 158 1 
303 2 267 1 137 2 168 1 5 4 175 1 54 3 55 6 89 1 322 1 93 1 92 1 144 3 94 1 323 4 20 1 58 1 243 3 291 11 27 1 110 1 247 1 332 2 35 1 334 1 294 7 42 3 121 2 155 1 125 2 158 1 
144 1 303 1 20 1 323 1 243 1 168 1 291 2 5 1 110 1 247 1 294 1 54 1 42 1 55 2 155 1 89 1 322 1 92 1 158 1 
303 1 267 1 137 1 168 1 5 2 175 1 54 1 55 2 92 1 144 1 94 1 323 6 20 1 58 1 243 1 291 12 27 2 247 1 332 2 35 2 294 6 42 1 121 2 125 2 158 1 
303 2 267 1 137 2 168 1 175 1 5 4 54 4 55 8 89 1 322 1 92 1 93 2 144 4 94 1 58 1 323 5 20 1 243 4 291 12 27 1 110 1 247 1 332 2 35 1 334 1 294 7 42 4 121 2 155 1 125 2 158 1 
211 1 303 3 267 1 137 3 168 1 175 1 5 6 54 4 55 8 92 1 93 2 144 4 94 1 58 1 323 7 20 1 243 4 291 16 27 2 247 1 332 3 35 2 294 9 42 4 121 3 125 3 158 1 
303 2 323 1 137 2 291 2 5 4 110 1 294 1 155 2 89 2 322 2 
211 1 303 2 267 1 137 1 168 1 175 1 5 3 54 4 55 8 89 1 322 1 92 1 93 2 144 4 94 1 58 1 323 5 20 1 243 4 291 12 27 1 110 1 247 1 332 2 35 1 294 7 42 4 121 2 155 1 125 2 158 1 
144 2 323 1 303 1 137 1 243 2 291 2 5 2 110 1 294 1 54 2 42 2 55 4 155 1 89 1 322 1 93 1 
110 1 303 1 155 1 67 1 5 1 89 1 322 1 
144 1 303 1 323 2 243 1 137 1 291 4 27 1 5 2 332 1 35 1 334 1 294 2 54 1 42 1 121 1 55 2 125 1 
303 1 323 4 137 1 168 2 291 7 27 1 5 2 109 1 247 1 332 1 35 1 294 3 121 1 125 1 158 1 
303 6 137 5 168 2 5 11 54 2 55 4 320 1 186 1 15 1 285 1 89 1 322 4 17 1 93 2 144 2 323 14 243 2 291 27 27 2 109 1 110 1 332 3 247 2 35 3 294 13 295 1 121 2 42 2 155 4 125 2 
323 1 291 1 168 1 
247 1 294 1 291 1 
144 1 323 3 303 2 243 1 137 1 291 6 27 1 5 3 29 1 332 1 35 1 334 1 294 3 42 1 54 1 121 1 55 2 125 1 
303 1 267 1 137 1 168 1 5 2 175 1 54 1 55 2 92 1 144 1 94 1 323 6 20 1 58 1 243 1 291 12 27 2 247 1 332 2 35 2 294 6 42 1 121 2 125 2 158 1 
323 3 303 1 137 1 291 6 5 2 332 1 35 1 294 3 186 1 155 1 322 1 
303 3 137 3 5 6 54 1 55 2 320 1 186 1 89 1 285 1 322 3 93 1 144 1 323 6 243 1 291 12 110 1 332 1 35 1 294 6 295 1 42 1 155 3 
45 1 162 1 317 1 37 1 1 1 269 1 68 1 
45 1 162 1 1 1 308 1 269 1 3 1 103 1 68 1 317 1 37 1 318 1 338 1 
188 1 98 2 305 1 193 2 147 1 138 1 223 1 197 2 50 1 151 1 183 1 36 1 8 2 205 1 73 2 126 2 
188 1 98 2 305 1 193 2 147 1 197 1 50 1 151 1 183 1 8 1 73 2 91 1 340 1 126 2 
96 1 183 1 98 1 71 1 36 1 193 1 284 1 73 1 108 1 126 1 
209 1 139 1 183 1 98 2 8 1 2 1 193 2 205 1 73 1 197 1 126 2 
209 1 188 1 98 3 305 1 193 3 147 1 138 1 81 1 172 1 223 1 197 3 50 1 151 1 183 2 36 1 8 4 205 1 73 3 126 2 
209 1 188 1 131 1 98 3 305 1 193 3 147 1 138 1 81 1 223 1 197 3 50 1 151 1 183 2 36 1 8 4 205 1 73 3 126 2 
98 1 8 1 36 1 193 1 138 1 67 1 197 1 223 1 126 1 
45 1 162 2 98 1 305 1 193 1 104 1 197 1 274 1 68 1 248 1 70 1 183 1 8 1 37 2 36 1 14 1 73 1 126 1 
45 1 162 2 305 2 274 1 314 1 183 1 8 2 87 1 14 1 91 1 98 1 193 1 104 2 197 2 68 2 69 2 248 1 70 1 114 1 37 2 156 1 73 1 126 1 
45 1 162 2 305 2 274 1 314 1 183 1 8 2 87 1 14 1 91 1 324 1 98 1 193 1 104 2 197 2 68 2 69 2 248 1 114 1 37 2 156 1 73 1 126 1 
261 1 264 2 305 1 166 1 80 1 314 1 228 1 182 1 183 1 8 3 12 1 185 2 91 1 98 1 193 1 62 1 148 1 105 1 197 1 249 1 32 1 73 1 126 1 297 1 
264 2 305 1 166 1 314 1 228 1 182 1 183 1 8 3 12 1 283 1 185 2 91 1 98 1 193 1 62 1 148 1 105 1 197 1 249 1 32 1 73 1 126 1 297 1 
183 1 98 1 193 1 24 1 73 1 126 1 
209 1 188 1 98 7 305 1 193 7 24 1 64 1 81 1 172 1 197 2 50 1 180 1 139 1 250 1 183 2 36 2 8 3 72 1 205 1 73 3 126 6 
301 1 303 1 162 2 305 1 77 1 222 1 221 1 5 1 274 1 183 1 8 1 141 1 54 2 55 4 14 1 89 1 322 1 144 2 98 1 59 1 193 1 243 2 104 1 197 1 68 1 110 1 248 1 70 1 37 2 205 1 42 2 122 2 155 1 73 1 126 1 258 2 
260 2 264 3 78 2 216 1 166 1 169 2 170 1 228 1 7 1 8 2 231 1 185 3 283 1 288 1 97 2 57 1 98 1 193 1 148 1 105 1 112 1 249 1 32 2 203 1 36 1 336 1 38 1 126 1 
98 2 305 1 193 2 24 1 64 1 197 1 228 1 246 1 183 1 8 2 205 1 73 2 126 2 
45 1 162 2 98 1 324 1 305 1 193 1 104 1 197 1 274 1 68 1 248 1 183 1 8 1 37 2 36 1 14 1 73 1 126 1 
188 1 98 1 305 1 193 1 64 1 197 1 50 1 250 1 183 1 8 1 73 2 91 1 126 1 
45 1 153 1 142 1 330 1 176 1 
45 1 75 1 264 2 166 1 148 1 105 1 176 1 330 2 69 1 38 1 87 1 254 1 88 1 185 2 142 2 153 2 156 1 187 1 124 1 
162 1 176 1 68 1 37 1 142 1 153 1 337 1 157 1 341 1 
75 1 88 1 176 1 
150 1 160 1 116 1 215 1 255 1 328 1 106 1 49 1 
133 1 192 1 164 1 215 1 82 1 328 2 106 2 49 4 150 1 275 1 116 4 9 2 255 3 232 1 
160 1 215 1 310 1 328 1 106 1 49 2 150 1 116 2 40 1 9 1 255 1 120 1 
160 1 133 2 215 1 82 1 171 1 106 1 328 1 49 3 150 1 275 2 116 3 255 1 
259 2 276 1 255 2 25 1 
150 1 160 1 115 1 116 1 215 1 49 1 
150 1 160 1 116 2 307 1 9 1 215 1 255 1 328 1 106 1 49 2 
290 1 
150 1 160 1 116 1 215 1 255 1 328 1 106 1 49 1 
255 1 67 1 328 1 106 1 
150 1 116 1 215 1 255 1 328 1 106 1 49 1 
116 1 226 1 129 1 
160 1 133 2 268 1 215 1 82 1 106 1 328 1 49 3 150 1 275 1 116 3 255 1 
150 1 116 2 9 1 63 1 215 1 255 1 328 1 106 1 49 2 
150 1 160 1 71 1 116 1 253 1 164 1 215 1 255 1 284 1 49 1 43 1 
150 1 160 1 116 1 215 1 255 1 328 1 49 1 
150 1 160 1 116 1 215 1 328 2 106 1 49 1 
160 1 215 2 328 1 173 1 49 2 150 2 34 1 116 2 255 1 298 1 
160 1 189 1 307 1 164 1 215 1 328 1 106 1 49 3 150 1 116 3 9 2 255 2 232 1 
96 1 160 1 215 1 272 1 328 1 106 1 49 2 150 1 71 2 335 1 116 2 253 1 9 1 255 1 284 1 
160 1 262 1 164 1 215 2 63 1 328 1 106 1 49 4 150 2 116 4 9 2 255 2 232 1 
160 1 133 1 307 1 215 1 106 1 328 1 49 3 150 1 116 3 9 1 255 1 
192 1 164 1 255 1 232 1 
255 1 328 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (25,55) 213 82 15 (25,55) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (25,55) 213 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (25,55) 213 5 2 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (25,55) 213 82 15 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (25,55) 213 5 2 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (25,55) 213 82 15 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (25,55) 213 5 127 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 287 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (25,55) 213 182 86 21 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (25,55) 213 184 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (25,55) 213 82 127 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 5 127 33 293 39 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 5 127 33 293 39 149 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 5 127 33 293 39 149 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 5 127 33 293 39 149 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 254 41 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 344 218 293 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 5 127 33 293 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (25,55) 213 112 (126,214) (126,214) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
171 1 170 1 1 2 266 2 45 4 267 1 67 2 202 5 245 1 88 9 147 2 310 6 6 1 291 1 226 2 93 1 357 1 358 1 273 1 74 1 338 1 32 2 79 2 192 1 105 9 324 1 133 1 327 3 
171 1 170 1 1 2 266 2 45 4 267 1 67 2 202 5 245 1 88 9 147 2 310 6 6 1 291 1 226 2 93 1 357 1 358 1 273 1 74 1 338 1 32 2 79 2 192 1 105 9 324 1 133 1 327 3 
171 1 170 1 1 2 266 2 45 5 267 1 67 2 202 6 245 1 88 10 147 2 310 7 6 1 291 1 226 2 93 1 357 1 358 1 273 1 74 1 338 1 32 2 79 2 192 1 105 10 324 1 133 1 327 4 
171 1 170 1 1 2 266 2 45 3 267 1 67 1 202 4 88 7 147 2 310 4 6 1 291 1 226 2 93 1 357 1 358 1 273 1 74 1 338 1 32 2 79 2 192 1 105 7 324 1 133 1 327 2 
273 1 171 1 1 1 266 1 267 1 45 2 67 2 202 3 245 1 79 1 147 1 88 4 192 1 310 3 105 4 226 1 327 1 93 1 
358 1 95 1 273 1 171 1 266 1 32 1 202 1 88 2 147 1 79 1 192 1 105 2 153 1 226 1 371 1 326 1 357 1 
273 1 338 1 171 1 266 2 32 1 45 1 202 2 88 3 192 1 310 1 105 3 226 2 327 1 
171 1 170 1 1 1 266 2 45 4 267 1 67 2 202 5 88 9 147 1 245 1 310 7 353 1 226 2 93 1 273 1 338 1 317 1 32 1 79 1 192 1 105 9 133 1 327 3 
171 1 170 1 1 1 266 2 45 4 267 1 67 2 202 5 88 9 147 1 245 1 310 7 353 1 226 2 93 1 273 1 338 1 317 1 32 1 79 1 192 1 105 9 133 1 327 3 
287 1 274 1 368 1 
274 1 355 2 269 1 
123 2 20 2 128 1 17 2 135 2 286 2 94 1 73 2 
20 3 113 1 217 1 330 1 46 1 285 1 47 2 286 2 4 1 313 1 314 1 247 2 72 1 94 1 73 2 123 2 125 1 339 1 11 1 13 2 101 1 342 1 14 1 343 1 128 1 233 1 16 1 80 1 17 2 57 1 135 3 370 1 60 1 38 1 18 1 166 2 40 2 
341 1 123 1 191 1 20 1 128 1 17 1 135 1 286 1 73 1 340 1 
20 1 229 1 274 1 144 1 77 1 368 1 286 1 221 1 278 1 191 1 309 1 70 1 135 1 334 1 
123 1 20 1 229 1 274 1 144 2 77 1 368 1 286 1 221 1 278 2 191 1 70 1 17 1 135 1 73 1 
279 1 231 1 144 1 225 1 278 1 
48 1 279 1 274 1 144 2 37 1 225 1 368 1 278 2 
279 1 144 1 278 1 
123 1 20 1 230 1 144 1 286 1 278 1 340 1 341 1 191 1 128 1 17 1 225 1 135 1 73 1 
274 1 
48 1 279 1 274 1 144 2 225 1 368 1 167 1 278 2 
20 1 348 1 115 4 43 2 144 5 286 1 48 1 352 2 333 2 50 1 290 2 225 2 92 1 206 2 73 1 8 2 123 1 28 1 230 1 274 2 368 2 277 1 340 1 159 1 278 5 341 1 191 1 102 1 128 1 160 1 17 1 279 2 325 1 130 1 131 5 107 1 135 1 137 1 
123 1 20 3 17 3 117 1 135 3 286 3 94 1 73 3 
341 1 191 1 20 1 17 1 135 1 286 1 73 1 
123 1 191 1 20 1 17 1 135 1 195 1 286 1 122 1 73 1 
20 4 113 1 117 1 217 1 144 1 285 1 47 1 286 3 221 1 4 1 70 1 151 1 313 1 314 1 247 1 72 1 122 1 94 1 73 3 123 2 125 1 229 1 365 1 339 1 11 1 77 1 13 2 101 1 255 1 278 1 342 1 14 1 191 1 343 1 128 1 80 1 57 1 17 3 135 4 370 1 60 1 18 1 166 1 40 1 
20 2 309 1 17 1 117 1 71 1 135 2 286 2 94 1 73 1 
123 1 20 3 229 1 117 2 365 1 274 1 144 1 77 1 255 1 286 3 278 1 221 1 191 1 70 1 17 3 58 1 135 3 122 1 73 3 
123 1 20 2 117 1 240 1 286 2 17 2 25 1 135 2 122 1 73 2 
20 1 125 1 113 1 339 1 217 1 101 1 47 1 343 1 80 1 57 1 135 1 247 1 18 1 94 1 40 1 
20 1 125 1 113 1 64 1 339 1 217 1 101 1 47 1 175 1 343 1 80 1 135 1 247 1 94 1 40 1 
11 1 285 1 13 2 15 1 55 1 4 1 82 1 25 1 313 1 290 1 370 2 60 1 213 1 166 2 72 1 248 1 
191 1 20 1 229 1 17 1 135 1 286 1 146 1 73 1 
287 1 94 1 
123 1 20 2 286 2 17 1 135 2 195 1 122 1 73 1 94 2 
25 1 213 1 
20 1 125 1 113 1 217 1 339 1 101 1 47 1 343 1 80 1 57 1 135 1 247 1 18 1 19 1 94 1 40 1 
20 2 113 1 125 1 117 1 217 1 339 1 101 1 47 1 255 1 286 1 343 1 80 1 17 1 57 1 25 1 135 2 18 1 247 1 73 1 40 1 
123 1 20 5 309 1 17 4 117 2 10 1 71 1 135 5 145 1 255 1 122 1 286 5 94 1 73 4 
341 1 191 1 20 2 17 2 135 2 146 1 286 2 73 2 
9 1 194 1 186 1 
9 1 194 1 186 1 
164 1 194 1 186 1 
164 1 194 1 186 1 
164 1 194 1 186 1 
194 1 186 1 
194 1 186 1 
89 1 62 1 
89 1 62 1 
89 1 62 1 
9 1 194 1 186 1 
246 1 194 1 186 1 
89 1 316 1 62 1 194 2 186 2 110 1 
316 1 114 1 63 1 329 2 85 1 253 1 274 1 144 2 186 2 100 2 276 1 174 2 256 1 278 2 150 3 194 2 280 2 84 2 337 1 
20 2 216 1 144 1 174 1 286 2 150 1 246 1 27 1 94 1 73 2 337 1 336 1 186 1 12 1 100 1 278 1 103 1 303 1 17 2 194 1 135 2 212 1 280 1 84 1 
79 1 147 1 1 1 
79 1 147 1 153 1 
147 3 362 1 296 1 1 2 153 1 271 1 
147 2 362 1 296 1 1 1 153 1 189 1 
147 2 362 2 296 1 1 1 153 1 
115 3 42 2 43 1 144 5 241 1 269 1 351 2 48 1 5 1 333 1 50 1 290 1 355 3 225 4 51 1 206 1 8 1 336 1 228 1 300 1 274 2 12 1 368 1 127 1 278 5 103 1 82 1 36 1 131 2 279 1 83 2 197 1 
111 1 20 1 144 2 286 1 225 2 73 1 123 1 96 1 230 1 231 1 274 1 368 1 278 2 340 1 341 1 191 1 128 1 17 1 279 1 135 1 198 1 
115 3 42 2 144 3 43 1 241 1 269 2 351 2 5 1 333 1 290 1 225 2 355 4 206 1 8 1 336 1 228 1 274 3 368 1 278 3 127 1 160 1 82 1 36 1 83 1 131 2 197 1 
115 5 283 1 42 4 65 1 144 4 43 2 241 1 269 3 351 4 5 2 333 1 290 2 355 7 225 3 206 1 8 1 336 2 228 1 252 1 274 4 368 1 278 4 127 2 160 1 82 2 36 1 83 2 131 4 197 1 
343 1 217 1 
217 3 156 1 268 1 176 1 343 1 80 1 120 2 
287 1 217 1 120 1 
217 1 254 1 
268 1 
343 1 80 1 217 1 
217 1 244 1 
28 1 112 2 126 1 43 1 330 4 319 1 219 3 158 1 277 1 220 2 102 1 56 1 193 1 290 1 370 3 166 7 214 1 
28 1 112 2 126 1 43 1 330 4 319 1 219 3 158 1 277 1 220 2 102 1 56 1 193 1 290 1 370 3 166 7 214 1 
28 1 112 2 126 1 43 1 330 4 319 1 219 3 158 1 277 1 220 2 102 1 56 1 193 1 290 1 134 1 370 3 166 7 214 1 
112 3 330 16 43 4 219 10 220 5 178 1 4 1 5 3 354 1 290 4 72 1 28 1 124 1 182 4 126 1 11 1 13 2 319 2 158 2 277 2 257 3 127 3 102 2 56 1 259 1 81 1 82 3 193 5 60 1 370 15 304 1 166 31 214 1 215 1 
112 2 43 1 330 5 219 4 220 3 332 1 4 2 290 1 72 2 28 1 250 1 126 1 11 2 13 4 319 1 158 1 277 1 102 1 193 1 60 2 370 4 304 1 166 9 214 1 
263 1 171 1 1 1 22 1 266 1 238 1 173 1 350 1 47 1 202 1 88 2 147 2 310 1 119 1 153 1 226 1 271 1 247 1 205 1 273 1 125 1 339 1 32 1 187 1 302 1 79 1 192 1 105 2 165 1 40 1 
263 1 171 1 1 1 22 1 266 1 238 1 173 1 350 1 47 1 202 1 88 3 147 2 310 2 153 1 271 1 226 1 247 1 121 1 205 1 315 1 125 1 339 1 32 1 187 1 302 1 79 1 192 1 105 3 40 1 138 1 
263 1 171 1 1 1 22 1 238 1 173 1 350 1 47 1 202 1 88 2 147 2 310 2 153 1 271 1 247 1 121 1 125 1 339 1 32 1 302 1 79 1 192 1 105 2 40 1 138 1 
0 1 266 1 22 2 173 2 217 1 349 1 23 1 350 2 47 1 88 1 226 1 247 1 155 1 315 1 125 1 339 1 76 1 32 2 101 1 343 1 104 1 105 1 40 1 
263 1 1 1 22 1 266 1 238 1 173 1 350 1 47 1 88 1 147 2 153 1 226 1 271 1 247 1 121 1 205 1 273 1 125 1 339 1 32 1 187 1 302 1 79 1 105 1 165 1 40 1 
311 1 
141 1 236 2 328 1 144 5 44 1 47 2 286 1 243 1 48 3 50 1 333 1 247 2 206 1 334 1 8 1 339 1 157 1 101 2 343 1 104 1 162 2 161 1 163 1 211 1 20 1 115 2 217 1 23 1 308 2 269 2 221 1 68 2 309 1 69 2 70 1 180 4 355 2 181 1 270 1 228 1 125 1 364 2 229 1 75 1 274 2 77 1 368 1 232 1 278 5 191 1 131 2 279 6 135 1 196 2 40 2 
20 1 328 1 229 1 75 1 144 2 77 1 44 1 286 1 278 2 221 1 191 1 309 1 69 1 70 1 279 1 180 2 135 1 181 1 270 1 334 1 
20 1 328 1 144 3 44 1 286 1 221 1 48 1 309 1 70 1 180 3 270 1 181 1 334 1 229 1 75 1 274 1 77 1 368 1 278 3 191 1 279 1 135 1 196 1 167 1 
20 1 328 1 144 3 44 1 308 1 286 1 221 1 48 1 309 1 69 1 70 1 180 3 270 1 181 1 334 1 229 1 75 1 77 1 278 3 191 1 279 2 135 1 196 1 167 1 
20 2 328 1 144 3 201 1 44 1 308 1 286 2 221 1 48 1 309 1 69 1 70 1 180 3 270 1 181 1 334 1 73 1 123 1 229 1 230 1 75 1 274 1 77 1 368 1 340 1 278 3 341 1 191 2 128 1 17 1 279 2 135 2 196 1 167 1 
236 2 141 1 328 1 144 4 44 1 286 1 48 2 50 1 333 1 206 1 334 1 8 1 161 1 162 2 211 1 20 1 115 1 308 2 269 2 221 1 68 2 309 1 69 2 70 1 180 4 355 2 181 1 270 1 364 2 229 1 75 1 274 1 77 1 368 1 278 4 191 1 131 1 279 4 135 1 196 2 
20 1 236 2 115 1 328 1 200 1 284 1 144 4 44 1 308 2 269 2 286 1 221 1 48 2 68 2 309 1 69 2 70 1 152 1 333 1 50 1 180 4 270 1 181 1 334 1 206 1 8 1 364 2 229 1 75 1 274 1 77 1 368 1 278 4 191 1 162 2 161 1 279 4 131 1 135 1 196 2 211 1 
236 2 328 1 200 1 284 1 144 4 44 1 286 2 48 2 152 1 50 1 333 1 206 1 334 1 8 1 340 1 341 1 17 1 161 1 162 2 211 1 20 2 115 1 308 2 269 2 221 1 68 2 309 1 69 2 70 1 180 4 181 1 270 1 73 1 123 1 364 2 229 1 230 1 75 1 274 1 77 1 368 1 278 4 191 2 128 1 131 1 279 4 135 2 196 2 
328 1 284 1 144 4 44 1 286 2 48 2 50 1 333 1 206 1 334 1 8 1 98 1 340 1 341 1 260 1 261 2 17 1 161 1 162 2 346 1 20 2 115 1 308 2 221 1 309 1 69 2 70 1 180 4 355 2 181 1 270 1 73 1 123 1 364 2 229 1 230 1 75 1 274 1 77 1 368 1 278 4 191 2 128 1 34 2 131 1 279 4 135 2 196 2 
236 2 328 1 200 1 284 1 144 4 44 1 286 2 48 2 90 1 152 1 50 1 333 1 334 1 206 1 8 1 340 1 341 1 17 1 161 1 162 2 211 1 20 2 115 1 308 3 269 2 221 1 68 2 309 1 69 3 70 1 180 5 181 1 270 1 73 1 123 1 364 2 229 1 230 1 75 1 274 1 77 1 368 1 278 4 191 2 128 1 279 5 131 1 135 2 196 3 
20 1 236 2 115 1 328 1 200 1 284 1 144 4 44 1 308 3 269 2 286 1 221 1 48 2 68 2 309 1 69 3 70 1 152 1 90 1 333 1 50 1 180 5 270 1 181 1 206 1 334 1 8 1 364 2 229 1 75 1 274 1 77 1 368 1 278 4 191 1 162 2 161 1 131 1 279 5 135 1 211 1 196 3 
141 1 328 1 144 4 44 1 286 2 48 2 50 1 333 1 206 1 334 1 8 1 98 1 340 1 341 1 261 2 17 1 161 1 162 2 20 2 115 1 308 2 221 1 309 1 69 2 70 1 180 4 355 2 181 1 270 1 73 1 123 1 364 2 229 1 230 1 75 1 274 1 77 1 368 1 278 4 191 2 128 1 34 2 131 1 279 4 135 2 196 2 
11 1 43 1 330 2 285 1 13 2 2 1 4 1 5 1 25 1 313 1 60 1 213 1 166 2 72 1 248 1 
11 1 285 1 13 2 15 1 4 1 82 1 25 1 313 1 290 1 60 1 370 2 213 1 166 2 72 1 248 1 
11 1 43 1 330 2 285 1 13 2 127 1 4 1 5 1 25 1 313 1 60 1 213 1 166 2 72 1 248 1 
11 1 43 1 330 2 307 1 285 1 13 2 2 1 4 1 5 1 25 1 313 1 60 1 213 1 166 2 72 1 
11 1 307 1 285 1 13 2 15 1 4 1 82 1 25 1 313 1 290 1 60 1 370 2 213 1 166 2 72 1 
11 1 43 1 330 2 307 1 285 1 13 2 127 1 4 1 5 1 25 1 313 1 60 1 213 1 166 2 72 1 
11 1 43 1 330 2 285 1 13 2 127 1 4 1 5 1 25 1 313 1 60 1 213 1 72 1 166 2 
20 1 113 1 217 1 330 1 285 1 47 1 4 1 313 1 247 1 72 1 94 1 125 1 339 1 11 1 101 1 13 2 14 1 342 1 343 1 16 1 80 1 57 1 135 1 60 1 370 1 18 1 166 2 40 1 
20 1 113 1 64 1 217 1 330 1 285 1 47 1 175 1 4 1 313 1 247 1 72 1 94 1 125 1 339 1 11 1 188 1 101 1 13 2 342 1 343 1 16 1 80 1 135 1 60 1 370 1 166 2 40 1 
305 1 11 1 43 1 330 2 285 1 13 2 127 1 4 1 5 1 25 1 313 1 60 1 213 1 166 2 72 1 
20 1 113 1 217 1 330 2 43 1 285 1 47 1 5 1 119 1 4 1 25 1 313 1 247 1 72 1 125 1 298 1 339 1 11 1 13 2 127 1 14 1 343 1 80 1 57 1 135 1 60 1 213 1 18 1 166 2 40 1 
305 1 123 1 20 1 330 2 43 1 11 1 285 1 13 2 286 1 127 1 5 1 4 1 223 1 17 1 25 1 313 1 135 1 60 1 213 1 166 2 72 1 122 1 73 1 
112 1 43 1 330 3 285 1 219 2 220 2 4 1 287 1 25 1 313 1 290 1 72 1 248 1 94 2 28 1 126 1 11 1 13 2 277 1 102 1 60 1 370 3 213 1 166 6 214 1 
305 1 182 1 21 1 11 1 285 1 13 2 86 1 4 1 25 1 313 1 60 1 370 1 213 1 166 1 72 1 
305 1 20 2 140 1 113 1 265 1 117 1 217 1 330 1 240 1 285 1 47 1 286 1 87 1 4 1 313 1 247 1 72 1 94 1 73 1 125 1 339 1 11 1 101 1 13 2 255 1 342 1 343 1 80 1 16 1 57 1 17 1 135 2 60 1 370 1 18 1 166 2 19 1 40 1 
305 1 20 2 113 1 117 1 217 1 285 2 47 1 286 1 4 2 25 1 313 2 289 1 247 1 72 2 73 1 125 1 298 1 297 1 339 1 184 1 11 2 275 1 13 4 101 1 255 1 14 1 342 1 343 1 80 1 57 1 17 1 135 2 60 2 370 2 213 1 18 1 166 2 40 1 
20 1 282 1 117 1 217 3 330 1 46 2 285 2 307 1 23 1 47 8 286 1 222 1 119 1 4 2 91 1 313 2 247 7 121 1 72 2 248 1 73 1 125 2 30 1 339 2 11 2 101 2 13 4 190 1 342 1 343 2 104 1 16 1 323 1 17 1 135 1 60 2 370 1 166 2 40 8 
305 1 20 1 43 1 330 1 285 1 286 1 4 1 5 1 288 1 25 1 313 1 290 1 72 1 122 1 73 1 123 1 11 1 13 2 127 1 17 1 82 1 135 1 60 1 370 2 213 1 166 3 
262 1 169 1 330 9 43 3 219 6 220 3 149 1 4 2 5 3 290 3 72 2 272 1 52 1 124 1 250 1 182 2 11 2 185 2 13 4 257 1 127 3 35 2 82 3 193 3 60 2 136 1 370 10 166 19 39 1 215 1 
293 1 262 2 294 1 124 2 250 1 182 2 43 1 330 6 11 1 33 1 13 2 127 1 257 2 5 1 4 1 149 1 35 2 136 1 60 1 370 5 166 11 72 1 39 2 
262 2 330 12 43 3 219 3 220 1 149 1 4 2 5 3 7 1 290 2 72 2 272 1 293 1 294 1 52 1 124 3 250 1 182 4 11 2 185 1 33 1 13 4 257 3 127 3 35 3 82 2 193 2 60 2 136 1 370 12 166 24 39 1 215 1 
262 2 330 12 43 3 219 4 220 2 149 1 4 2 5 3 7 1 290 2 72 2 272 1 293 1 294 1 52 1 124 3 250 1 182 4 11 2 185 1 33 1 13 4 257 3 127 3 35 3 82 2 193 2 60 2 136 1 370 12 166 24 39 1 215 1 
262 1 112 1 330 19 43 6 219 9 220 5 149 1 4 1 5 5 179 2 290 5 72 1 293 1 28 1 294 1 124 2 250 1 182 4 126 1 11 1 33 1 13 2 277 1 257 4 127 5 102 1 35 2 82 4 193 4 60 1 136 1 370 17 166 36 214 1 39 1 215 2 
316 1 63 1 329 1 85 1 253 1 274 1 144 1 186 1 100 1 276 1 174 1 256 1 278 1 150 2 194 1 280 1 337 1 84 1 
316 1 63 1 329 1 85 1 253 1 274 1 144 1 186 1 100 1 276 1 174 1 256 1 278 1 150 2 194 1 280 1 337 1 84 1 
316 1 63 1 329 1 85 1 253 1 274 1 144 1 186 1 100 1 276 1 174 1 256 1 278 1 150 2 194 1 280 1 337 1 84 1 
9 1 99 1 110 1 
9 1 99 1 110 1 
209 1 164 1 
209 1 164 1 110 1 
212 1 27 1 
20 2 329 1 216 1 144 1 174 1 286 2 150 1 246 1 225 1 27 1 94 1 336 1 73 2 186 1 12 1 100 1 256 1 278 1 321 1 103 1 303 1 17 2 135 2 194 1 212 1 280 1 84 1 
316 1 49 1 63 1 194 1 186 1 100 1 280 1 276 1 174 1 84 1 
303 1 246 1 
177 1 31 1 301 1 194 1 186 1 100 1 280 1 174 1 84 1 
9 1 99 1 
209 1 164 1 110 1 
305 1 20 2 217 1 330 1 46 2 285 1 47 2 286 2 3 1 4 1 91 1 313 1 26 1 356 1 247 2 72 1 207 1 125 1 339 1 30 1 11 1 13 2 342 1 343 1 16 1 135 2 108 1 60 1 370 1 166 2 40 2 
263 1 125 1 208 1 1 1 172 1 22 1 339 1 187 1 66 1 47 2 302 1 79 1 147 2 119 1 153 1 271 1 247 2 121 1 40 2 
263 1 125 1 1 1 172 1 22 1 97 1 339 1 187 1 47 1 302 1 79 1 147 2 153 1 271 1 247 1 121 1 40 1 
125 1 208 1 0 1 22 1 339 1 217 1 101 1 23 1 47 1 343 1 104 1 247 1 227 1 40 1 
263 1 208 1 125 1 1 1 172 1 22 1 339 1 187 1 66 1 47 1 302 1 79 1 147 2 153 1 271 1 247 1 121 1 40 1 
204 1 
348 1 115 1 287 1 131 1 130 1 274 1 368 1 
236 1 115 1 144 1 269 1 68 1 48 1 333 1 50 1 355 1 206 1 8 1 274 2 368 1 278 1 131 1 279 1 211 1 
292 1 41 1 125 1 339 1 217 1 254 1 156 1 101 1 47 1 343 1 80 1 50 1 333 1 247 1 206 1 8 1 40 1 
115 4 42 3 43 1 218 1 269 1 351 3 5 1 333 1 50 1 355 2 290 1 206 1 8 1 293 1 294 1 124 1 182 1 274 1 33 1 257 1 127 1 82 1 131 3 344 1 
20 1 115 2 144 1 43 2 286 1 352 2 152 1 333 1 50 1 290 1 206 1 8 1 73 1 123 1 28 1 230 1 277 1 278 1 340 1 341 1 191 1 102 1 128 1 17 1 131 2 107 1 135 1 137 1 
348 1 115 1 274 1 368 1 130 1 131 1 50 1 333 1 206 1 8 1 
115 5 184 1 42 5 43 2 274 5 269 5 127 2 351 5 5 2 352 2 82 2 131 5 355 10 290 2 137 1 
48 1 279 1 274 1 144 1 368 1 278 1 
139 1 199 1 115 2 217 2 143 1 144 3 23 1 47 4 48 2 312 1 333 2 50 1 247 4 206 2 8 2 335 1 295 2 228 2 125 2 299 1 339 3 367 1 157 1 101 2 232 1 278 3 343 2 160 1 104 1 80 1 163 2 279 4 131 2 40 4 
20 3 113 1 217 1 285 1 47 1 286 2 4 1 314 1 313 1 247 1 72 1 94 1 73 2 123 2 125 1 339 1 11 1 13 2 101 1 342 1 14 1 128 1 343 1 80 1 17 2 57 1 135 3 370 1 60 1 18 1 166 1 40 1 
228 1 112 1 115 1 42 2 274 4 368 2 269 2 351 2 163 1 131 2 50 1 333 1 355 4 206 1 8 1 
363 1 280 1 174 1 
363 1 280 1 174 1 
235 1 280 1 174 1 
235 1 280 1 174 1 
235 1 280 1 174 1 
280 1 174 1 
194 1 186 1 
363 1 280 1 174 1 
63 1 345 1 212 1 280 1 174 1 
28 1 112 1 126 1 43 1 330 4 11 2 13 4 219 3 277 1 220 2 102 1 4 2 193 1 290 1 370 4 60 2 304 1 166 8 72 2 214 1 
28 1 102 1 112 1 287 1 126 1 330 3 43 1 290 1 370 3 166 6 219 2 277 1 214 1 220 2 
11 1 43 1 330 2 13 2 219 2 78 1 220 1 127 1 4 1 5 1 82 1 193 1 290 1 370 2 60 1 72 1 166 4 
124 1 182 2 330 3 43 1 219 2 220 1 257 1 127 1 5 1 82 1 193 1 290 1 370 4 166 7 215 1 
112 1 264 1 43 3 330 11 219 9 86 1 220 5 5 2 4 2 179 1 290 3 72 2 28 1 182 2 126 1 11 2 13 4 277 2 127 2 257 2 102 2 82 2 193 4 370 12 60 2 304 2 166 23 214 1 215 1 
182 1 370 1 166 1 
330 1 166 1 257 1 
184 1 11 1 43 1 330 3 13 2 78 1 219 3 127 1 220 2 4 1 5 1 82 1 193 1 290 1 60 1 370 3 72 1 166 6 
293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 1 33 1 13 2 127 1 257 1 5 1 4 1 60 1 370 2 72 1 166 5 
28 1 43 1 330 3 219 2 277 1 220 1 102 1 193 1 290 1 370 3 166 6 
264 1 126 1 330 1 11 1 13 2 219 2 277 1 220 1 102 1 4 1 193 1 370 2 60 1 304 1 166 3 72 1 214 1 
28 1 250 1 11 1 330 5 43 2 13 2 219 5 277 2 220 3 102 2 4 1 193 2 107 1 290 2 60 1 370 5 72 1 166 10 
250 1 11 1 43 1 330 2 13 2 219 1 4 1 5 1 193 1 60 1 72 1 166 2 
250 1 11 1 43 1 330 2 13 2 219 2 220 1 127 1 4 1 5 1 82 1 193 1 290 1 370 2 60 1 72 1 166 4 
272 1 250 1 264 1 11 3 330 1 13 6 219 2 277 1 220 1 102 1 4 3 193 1 370 2 60 3 304 1 166 3 72 3 
112 1 264 1 330 16 43 5 219 12 220 7 4 5 5 3 354 1 290 5 72 5 272 1 28 2 124 1 250 1 182 4 126 1 11 5 13 10 78 1 277 3 257 3 127 3 102 3 259 1 81 1 82 3 193 5 370 18 60 5 304 2 166 34 214 1 215 1 
112 1 43 1 330 4 219 2 220 2 4 1 290 1 72 1 293 1 28 1 124 1 250 1 182 1 126 1 11 1 13 2 277 1 257 1 102 1 370 4 60 1 166 8 214 1 
112 1 330 6 43 2 219 3 220 2 4 2 5 1 290 1 72 2 293 1 28 1 124 1 250 1 182 2 126 1 11 2 13 4 78 1 277 1 257 1 127 1 102 1 193 1 370 5 60 2 166 11 214 1 215 1 
293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 1 33 1 13 2 127 1 257 1 5 1 4 1 60 1 370 2 72 1 166 5 
293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 1 33 1 13 2 127 1 257 1 5 1 4 1 60 1 370 2 72 1 166 5 
112 1 43 1 330 4 219 2 220 2 4 1 290 1 72 1 293 1 28 1 124 1 250 1 182 1 126 1 11 1 13 2 277 1 257 1 102 1 370 4 60 1 166 8 214 1 
293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 1 33 1 13 2 127 1 257 1 5 1 4 1 60 1 370 2 72 1 166 5 
293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 2 33 1 13 4 78 1 127 1 257 1 5 1 4 2 60 2 370 2 72 2 166 5 
272 1 293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 2 33 1 13 4 127 1 257 1 5 1 4 2 60 2 370 2 72 2 166 5 
28 1 126 1 43 1 330 3 219 6 277 3 220 3 102 3 193 3 290 1 370 4 166 7 214 2 
272 1 293 1 294 1 250 1 124 1 182 1 43 1 330 3 11 2 33 1 13 4 127 1 257 1 5 1 4 2 60 2 370 2 72 2 166 5 
20 1 309 1 116 1 71 1 135 1 286 1 94 1 
20 1 361 1 116 1 242 1 286 1 309 1 24 1 154 1 71 1 135 1 109 1 94 1 
343 1 125 1 104 1 287 1 339 1 217 1 23 1 247 1 101 1 47 1 40 1 
20 2 113 1 125 1 117 1 217 1 339 1 101 1 47 1 286 1 343 1 80 1 17 1 135 2 247 1 18 1 94 1 73 1 40 1 
20 2 113 1 117 1 217 3 47 1 286 2 244 1 247 1 94 1 73 2 295 1 125 1 229 1 339 1 77 1 191 1 343 2 80 2 17 1 129 1 135 2 18 1 40 1 
20 2 113 1 117 1 217 3 47 2 286 2 203 1 244 1 175 1 247 2 94 1 73 2 295 1 125 1 229 1 339 1 77 1 191 1 343 2 80 2 17 1 129 1 135 2 40 2 
61 1 217 4 144 2 47 3 203 1 244 1 70 1 120 1 247 3 295 1 125 1 53 1 339 1 254 1 274 1 101 1 368 1 278 2 343 1 80 1 279 1 129 1 40 3 
295 1 125 1 339 1 217 4 274 1 144 2 254 1 101 1 368 1 47 3 203 1 244 1 278 2 343 1 70 1 80 1 129 1 279 1 120 1 247 3 347 1 40 3 
222 1 125 1 339 1 247 1 47 1 40 1 
139 1 125 1 366 1 217 1 339 2 156 1 367 1 101 1 47 1 343 1 80 1 247 1 40 1 
305 1 20 2 112 1 113 1 117 1 217 1 330 3 43 1 285 2 219 2 47 1 286 1 220 2 4 2 119 1 25 1 313 2 290 1 247 1 72 2 207 1 94 2 73 1 28 1 125 1 298 1 339 1 126 1 11 2 275 1 13 4 277 1 14 1 102 1 343 1 80 1 17 1 57 1 135 2 370 3 60 2 213 1 18 1 166 6 214 1 40 1 
348 1 115 1 217 2 144 3 47 1 48 1 331 1 70 1 333 2 50 2 225 1 120 1 247 1 206 2 8 2 335 1 359 1 274 1 254 1 101 1 368 1 320 1 278 3 131 1 130 1 279 2 347 1 40 1 
292 1 125 1 217 1 339 1 156 1 268 1 47 1 222 1 343 1 80 1 120 1 247 1 40 1 
125 1 306 1 339 1 217 1 101 1 23 1 47 4 203 1 343 1 104 1 119 1 247 4 40 4 
139 1 199 1 125 1 299 1 239 1 217 1 339 2 367 1 47 1 343 1 80 1 247 1 40 1 
79 1 147 1 125 1 153 1 339 1 247 1 101 1 47 1 302 1 40 1 
125 1 30 1 217 1 339 1 47 2 3 1 343 1 119 1 247 2 121 1 40 2 
295 1 125 2 306 1 282 1 30 1 217 3 339 2 23 1 101 1 47 5 343 2 104 1 119 1 323 1 247 4 40 5 
295 1 125 2 142 1 306 1 30 1 217 3 339 2 23 1 101 1 47 5 343 2 104 1 119 1 323 1 247 4 40 5 
20 2 113 1 125 1 117 1 217 1 339 1 101 1 47 1 286 1 175 1 343 1 80 1 17 1 135 2 247 1 94 1 73 1 40 1 
139 1 295 1 125 1 366 1 217 1 339 2 156 1 367 1 47 1 343 1 80 1 247 1 40 1 
20 1 251 1 183 1 210 1 286 1 26 1 135 1 108 1 356 1 
148 1 237 1 210 1 
251 1 183 1 318 1 210 1 94 1 
237 1 281 1 229 1 251 2 365 1 183 2 274 1 144 2 77 1 318 2 210 1 368 1 278 2 221 1 191 1 148 1 70 1 225 1 94 1 
192 1 171 1 287 1 202 1 
88 1 192 1 171 1 105 1 266 1 226 1 202 1 
105 1 173 1 32 1 
358 2 322 1 88 3 29 1 192 1 273 1 171 1 105 3 266 1 132 1 226 1 202 1 
88 2 192 1 310 1 171 1 105 2 266 1 226 1 67 1 202 1 
79 1 147 1 88 1 273 1 1 1 105 1 266 1 45 1 226 1 202 1 93 1 
88 1 192 1 273 1 105 1 266 1 226 1 202 1 
88 1 192 2 273 1 171 1 105 1 266 1 226 1 
258 1 88 1 273 1 105 1 266 1 224 1 226 1 
273 1 171 1 170 1 266 1 45 1 202 2 88 3 192 1 310 2 105 3 133 1 226 1 327 1 
168 1 273 1 171 1 1 1 266 1 202 1 147 2 88 2 79 1 192 1 310 1 105 2 153 1 226 1 271 1 
273 1 171 1 266 2 45 1 67 1 202 2 88 4 245 1 192 1 310 2 105 4 226 2 327 1 
88 1 192 1 273 1 171 1 105 1 266 1 226 1 202 1 
358 1 29 1 95 1 171 2 266 1 45 1 202 3 322 1 88 4 192 2 310 2 105 4 226 1 327 1 
273 1 171 1 266 1 118 1 202 1 88 2 192 1 310 1 105 2 353 1 106 1 226 1 
234 1 358 2 29 2 273 1 171 1 266 1 202 1 322 1 88 3 192 1 105 3 226 1 
54 2 59 1 369 1 202 2 
88 1 360 1 273 1 105 1 266 1 226 1 
88 2 192 1 273 1 310 1 171 1 170 1 105 2 266 1 226 1 202 1 
249 1 
88 1 192 1 273 1 171 1 105 1 266 1 226 1 202 1 
358 1 273 1 171 1 170 1 266 1 202 1 88 3 192 1 310 1 105 3 226 1 
95 1 45 1 327 1 202 1 
192 1 202 1 

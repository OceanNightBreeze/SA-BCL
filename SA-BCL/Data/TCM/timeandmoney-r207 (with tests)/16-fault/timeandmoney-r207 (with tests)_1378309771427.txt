#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 26 (39,217) (39,217) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 26 (39,217) (39,217) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 26 (39,217) (39,217) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 26 (39,217) (39,217) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 26 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) (88,109,205,327) 79 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) (88,109,205,327) 79 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 288 18 246 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 288 18 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 288 18 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 121 271 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 317 253 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 208 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) 116 284 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (139,161,225,312) (139,161,225,312) (88,109,205,327) (88,109,205,327) (88,109,205,327) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
90 1 77 1 215 1 80 1 217 1 218 1 10 1 161 2 9 1 263 1 162 1 137 2 329 6 139 7 39 1 312 2 225 4 70 1 116 1 168 2 294 1 169 2 122 2 26 1 
90 1 77 1 215 1 80 1 217 1 218 1 10 1 161 2 9 1 263 1 162 1 137 2 329 6 139 7 39 1 312 2 225 4 70 1 116 1 168 2 294 1 169 2 122 2 26 1 
90 1 77 1 215 1 80 1 217 1 218 1 10 1 161 2 9 1 263 1 162 1 137 2 329 6 139 7 39 1 312 2 225 4 70 1 116 1 168 2 294 1 169 2 122 2 26 1 
90 1 77 1 215 1 80 1 217 1 218 1 10 1 161 2 9 1 263 1 162 1 137 2 329 6 139 7 39 1 312 2 225 4 70 1 116 1 168 2 294 1 169 2 122 2 26 1 
329 1 139 2 312 1 225 1 116 1 161 1 10 1 26 1 
30 1 193 1 218 1 10 1 161 1 9 1 263 1 329 2 242 1 139 2 270 1 312 1 168 1 294 1 169 1 103 1 
30 1 77 1 10 1 161 2 329 3 137 1 139 3 312 2 225 1 169 1 168 2 103 1 122 1 
329 1 139 2 312 1 225 1 79 1 88 1 161 1 10 1 
329 1 139 2 312 1 225 1 79 1 88 1 161 1 10 1 
208 1 
309 1 332 1 146 2 
31 1 52 2 172 1 17 2 334 2 23 2 102 2 227 2 
211 2 171 1 124 1 52 2 172 1 304 1 11 1 63 1 98 1 136 1 307 2 15 1 17 2 268 1 141 2 313 1 23 3 102 3 148 1 149 1 71 1 72 1 274 1 227 2 28 1 31 1 189 1 153 1 104 1 277 1 157 1 165 2 114 1 334 2 293 1 87 1 123 2 
297 1 52 1 172 1 17 1 156 1 334 1 23 1 102 1 342 1 227 1 
187 1 7 1 176 1 106 1 309 1 326 1 66 1 84 1 17 1 85 1 338 1 102 1 23 1 342 1 
187 1 52 1 176 2 7 1 106 2 309 1 326 1 66 1 84 1 17 1 334 1 102 1 23 1 342 1 227 1 
119 1 
119 1 
86 1 176 1 106 1 
119 1 
309 1 
119 1 
180 1 200 1 43 1 119 1 176 1 262 1 106 1 
208 1 
31 1 52 1 17 2 184 1 45 1 334 1 102 2 23 2 342 1 228 1 227 1 
183 1 159 1 105 1 
211 1 124 1 31 1 189 1 153 1 157 1 98 1 307 1 14 1 23 1 102 1 148 1 87 1 71 1 274 1 123 1 
51 1 31 1 52 4 190 2 286 1 202 1 17 4 184 1 334 4 102 4 23 4 342 1 228 1 227 1 
52 2 17 2 244 1 156 1 334 2 23 2 102 2 342 1 
211 1 124 1 189 1 153 1 52 1 190 1 157 1 105 1 98 1 307 1 202 1 17 1 334 1 102 2 23 2 148 1 71 1 87 1 274 1 123 1 
31 1 52 3 17 3 190 1 334 3 23 3 102 3 227 1 
52 1 17 1 156 1 334 1 23 1 102 1 342 1 
52 1 17 1 184 1 334 1 45 1 102 1 23 1 342 1 227 1 
211 1 124 1 171 1 52 3 172 1 94 1 7 1 176 1 63 1 98 1 136 1 307 1 66 1 15 1 17 3 184 1 141 2 313 1 23 4 102 4 148 1 149 1 71 1 72 1 274 1 227 2 187 1 28 1 31 1 189 1 153 1 104 1 277 1 190 1 157 1 106 1 165 1 84 1 202 1 334 3 336 1 87 1 342 1 123 1 
31 1 52 1 17 2 85 1 190 1 334 1 23 2 102 2 186 1 
187 1 52 3 190 2 94 1 176 1 7 1 106 1 324 1 309 1 66 1 84 1 202 1 17 3 184 1 334 3 102 3 23 3 342 1 227 1 
52 2 190 1 105 1 183 1 17 2 184 1 334 2 102 2 23 2 227 1 
211 1 124 1 31 1 189 1 153 1 157 1 98 1 307 1 23 1 102 1 148 1 87 1 71 1 274 1 123 1 
211 1 74 1 124 1 31 1 189 1 153 1 157 1 83 1 98 1 307 1 23 1 102 1 71 1 274 1 123 1 
0 1 1 1 256 1 174 1 261 1 303 1 132 1 11 2 63 1 134 1 183 2 15 1 311 1 141 2 149 1 72 1 28 1 104 1 277 2 159 2 105 2 196 1 165 4 251 1 
187 1 52 1 17 1 244 1 334 1 23 1 102 1 342 1 
241 1 115 1 
241 1 115 1 
16 1 100 1 
16 1 100 1 
16 1 100 1 
49 1 241 1 115 1 
49 1 241 1 115 1 
49 1 241 1 115 1 
229 1 241 1 115 1 
241 2 16 1 282 1 100 1 115 2 226 1 
241 1 115 1 272 1 
241 1 115 1 272 1 
241 1 115 1 272 1 
229 1 31 1 76 1 52 2 213 1 33 1 55 1 176 1 106 1 237 1 35 1 241 1 17 2 243 1 140 1 143 1 115 1 334 2 23 2 102 2 317 1 318 1 252 1 273 1 
76 1 214 1 231 1 33 2 55 2 173 1 191 1 126 1 97 1 176 2 106 2 237 2 306 2 309 1 241 2 115 2 226 1 252 2 273 3 
215 1 218 1 263 1 
193 1 218 1 263 1 
164 1 50 1 215 2 193 1 218 3 287 1 
164 1 215 1 292 1 193 1 218 2 287 1 
164 1 215 1 193 1 218 2 287 2 
188 1 119 1 
182 1 40 1 119 2 185 1 
210 1 302 1 303 1 176 1 262 1 179 1 180 1 67 1 224 1 275 2 234 1 106 1 35 1 200 1 289 1 41 1 43 1 119 2 117 1 251 1 
210 1 275 2 302 1 303 1 234 1 176 1 106 1 262 1 35 1 179 1 200 1 180 1 36 1 289 1 67 1 41 1 43 1 224 1 119 1 117 1 251 1 
208 1 
129 1 274 1 
298 1 
189 1 274 1 98 1 
249 1 274 1 
274 1 98 1 
189 1 111 1 245 2 274 3 98 1 325 1 
256 2 53 1 277 1 278 1 216 1 303 1 160 1 96 1 196 3 323 1 11 3 99 1 12 2 165 4 333 1 337 1 
256 2 53 1 277 1 278 1 216 1 303 1 160 1 96 1 196 3 323 1 11 3 99 1 12 2 165 4 333 1 337 1 
256 2 53 1 277 1 278 1 216 1 303 1 160 1 96 1 196 3 323 1 11 3 99 1 12 2 165 4 333 1 337 1 344 1 
0 3 256 5 53 2 216 2 174 3 303 4 96 2 11 15 99 1 12 3 15 1 141 2 142 1 144 1 149 1 72 1 230 1 104 1 277 13 278 2 234 3 160 1 235 3 323 1 196 10 240 4 165 28 110 1 112 1 333 1 335 1 337 5 251 3 296 1 
256 3 53 1 216 1 303 1 96 1 62 1 11 4 99 1 12 2 15 2 141 4 142 1 149 2 72 2 104 2 278 1 277 2 233 1 160 1 196 4 165 6 333 1 337 1 
211 1 124 1 50 1 215 1 5 1 218 2 10 1 130 1 263 1 307 1 267 1 139 2 19 1 312 1 225 1 103 1 152 1 30 1 75 1 153 1 194 1 193 1 81 1 161 1 163 1 239 1 329 2 168 1 169 1 123 1 
211 1 124 1 50 1 215 1 5 1 218 2 130 1 263 1 307 1 267 1 139 3 19 1 312 1 225 2 103 1 152 1 30 1 75 1 153 1 193 1 81 1 161 1 239 1 199 1 329 3 204 1 168 1 169 1 170 1 123 1 
211 1 124 1 50 1 215 1 5 1 218 2 130 1 263 1 307 1 139 2 225 2 103 1 152 1 30 1 75 1 153 1 193 1 81 1 239 1 199 1 329 2 168 1 169 1 170 1 123 1 
211 1 75 2 125 1 5 2 157 1 81 2 175 1 161 1 307 1 329 1 139 1 204 1 312 1 44 1 169 2 73 1 123 1 
152 1 211 1 124 1 75 1 50 1 153 1 215 1 5 1 193 1 81 1 218 2 130 1 10 1 161 1 263 1 239 1 163 1 307 1 329 1 199 1 267 1 139 1 19 1 312 1 169 1 123 1 
264 1 
211 1 307 1 56 1 157 1 176 1 106 1 123 1 
299 1 176 3 7 1 65 1 66 1 138 1 17 1 310 1 23 1 102 1 22 1 187 1 154 1 280 1 195 2 106 3 84 1 38 1 85 1 338 1 86 2 342 1 
299 1 176 3 7 1 133 1 66 1 309 1 138 1 17 1 310 1 23 1 102 1 22 1 187 1 154 1 280 1 195 3 106 3 326 1 84 1 38 1 85 1 338 1 86 1 342 1 
299 1 176 3 7 1 133 1 65 1 66 1 309 1 138 1 310 1 17 1 101 1 23 1 102 1 22 1 187 1 154 1 280 1 195 3 106 3 326 1 84 1 38 1 85 1 338 1 86 2 342 1 
299 1 56 1 176 3 7 1 65 2 66 1 138 1 17 1 310 1 18 1 145 1 101 2 102 1 23 1 22 1 187 1 154 1 280 1 195 2 106 3 288 1 84 1 38 1 85 1 246 1 338 1 86 3 342 1 
187 1 56 1 154 1 280 1 195 2 7 1 176 2 106 2 66 1 84 1 138 1 38 1 17 1 85 1 338 1 22 1 102 1 23 1 342 1 
187 1 56 1 154 1 280 1 195 2 7 1 176 2 106 2 66 1 288 1 138 1 84 1 38 1 17 1 85 1 145 1 338 1 22 1 102 1 23 1 342 1 
187 1 56 1 154 1 280 1 195 2 7 1 176 2 106 2 66 1 288 1 138 1 84 1 38 1 17 1 85 1 145 1 338 1 22 1 102 1 23 1 342 1 
187 1 56 1 154 1 280 1 127 1 195 2 7 1 176 2 106 2 66 1 138 1 84 1 38 1 331 1 17 1 85 1 338 1 22 1 102 1 23 1 342 1 
56 1 176 2 7 1 133 1 65 1 66 1 138 1 17 1 18 1 145 1 101 1 23 1 102 1 22 1 187 1 154 1 280 1 195 3 106 2 84 1 288 1 38 1 85 1 338 1 86 1 342 1 
56 1 176 2 7 1 133 1 65 1 66 1 138 1 17 1 18 1 145 1 101 1 23 1 102 1 22 1 187 1 154 1 280 1 195 3 106 2 84 1 288 1 38 1 85 1 338 1 86 1 342 1 
187 1 56 1 154 1 280 1 195 2 7 1 176 2 106 2 66 1 84 1 138 1 38 1 17 1 85 1 338 1 22 1 102 1 23 1 342 1 
28 1 15 1 104 1 141 2 149 1 72 1 63 1 208 1 134 1 
0 1 256 1 174 1 260 1 303 2 304 1 63 2 11 8 136 1 183 4 15 2 141 4 144 1 316 1 149 2 72 2 28 1 31 1 104 2 277 6 159 11 234 2 105 11 235 3 196 2 240 3 165 14 42 1 113 1 335 1 337 1 251 2 47 1 
211 1 124 1 3 1 52 1 304 1 98 1 63 1 11 1 307 1 136 1 183 1 14 1 17 1 15 1 141 2 23 2 102 2 148 1 71 1 149 1 274 1 72 1 28 1 31 1 189 1 153 1 104 1 190 1 277 1 232 1 157 1 165 2 202 1 42 1 334 1 87 1 340 1 123 1 
0 2 171 2 256 4 258 2 174 3 98 2 11 10 99 1 183 6 15 3 17 1 102 3 23 3 274 2 28 3 189 2 104 3 277 9 190 1 279 1 105 6 196 5 198 1 202 1 290 2 42 1 123 1 211 1 124 2 52 1 53 1 216 1 59 2 303 4 304 1 63 3 136 1 307 1 141 6 148 2 149 3 71 2 150 1 228 1 72 3 153 2 157 1 159 6 234 2 160 1 165 19 333 1 334 1 337 1 250 2 87 2 342 1 251 2 
211 8 124 2 52 1 300 1 301 1 304 1 177 1 63 2 11 1 98 2 134 1 307 7 136 1 308 1 17 1 15 2 141 4 68 1 23 1 102 1 149 2 274 3 72 2 28 2 153 2 104 2 190 1 277 1 192 1 157 2 194 1 82 1 199 1 165 2 201 1 166 1 114 2 334 1 123 8 
0 1 256 1 52 1 174 1 303 1 219 1 63 1 11 1 183 1 15 1 17 1 184 1 141 2 102 1 23 1 149 1 227 1 72 1 28 1 104 1 277 2 159 1 234 1 105 1 196 1 165 3 42 1 334 1 251 1 
28 1 104 1 159 1 303 1 105 1 196 1 63 1 11 2 134 1 165 2 183 1 15 1 311 1 141 2 337 1 149 1 251 1 72 1 
1 1 0 1 28 1 256 1 104 1 277 2 174 1 159 1 105 1 196 1 63 1 134 1 165 2 183 1 15 1 141 2 149 1 72 1 
0 1 256 1 174 1 303 1 11 2 63 1 134 1 183 2 15 1 141 2 149 1 72 1 28 1 104 1 277 2 234 1 159 2 105 2 196 2 165 4 337 1 251 1 
28 1 104 1 159 1 303 1 105 1 196 1 177 1 63 1 11 2 165 2 183 1 15 1 311 1 141 2 337 1 149 1 251 1 72 1 
1 1 0 1 28 1 256 1 104 1 277 2 174 1 159 1 105 1 196 1 177 1 63 1 165 2 183 1 15 1 141 2 149 1 72 1 
0 1 256 1 174 1 303 1 177 1 11 2 63 1 183 2 15 1 141 2 149 1 72 1 28 1 104 1 277 2 234 1 159 2 105 2 196 2 165 4 337 1 251 1 
0 1 256 1 174 1 303 1 11 2 63 1 183 2 15 1 141 2 149 1 72 1 28 1 104 1 277 2 234 1 159 2 105 2 196 2 165 4 337 1 251 1 
211 1 124 1 171 1 304 1 11 1 98 1 63 1 307 1 136 1 15 1 141 2 102 1 23 1 148 1 71 1 149 1 274 1 72 1 28 1 31 1 189 1 153 1 104 1 277 1 157 1 165 2 87 1 123 1 
211 1 124 1 304 1 11 1 98 1 63 1 307 1 136 1 15 1 141 2 102 1 23 1 71 1 149 1 274 1 72 1 74 1 28 1 31 1 189 1 153 1 104 1 277 1 321 1 157 1 83 1 165 2 123 1 
0 1 256 1 174 1 303 1 11 2 63 1 183 2 15 1 141 2 149 1 72 1 28 1 104 1 277 2 234 1 159 2 105 2 196 2 165 4 42 1 337 1 251 1 
0 1 211 1 124 1 171 1 256 1 258 1 174 1 303 1 11 2 98 1 63 1 307 1 183 2 15 1 141 2 102 1 23 1 148 1 71 1 149 1 274 1 72 1 28 1 189 1 153 1 104 1 277 2 194 1 159 2 234 1 105 2 196 2 165 4 337 1 87 1 251 1 123 1 
0 1 52 1 174 1 303 1 63 1 11 2 183 1 15 1 17 1 184 1 141 2 102 1 23 1 149 1 227 1 72 1 28 1 104 1 277 1 234 1 159 1 105 1 196 1 165 3 42 1 167 1 334 1 337 1 251 1 
209 2 0 3 89 1 212 1 256 3 174 3 128 1 303 3 62 1 11 9 15 2 141 4 147 1 144 1 271 1 149 2 72 2 104 2 277 10 283 1 234 3 235 1 196 6 238 1 240 2 165 19 335 1 337 3 251 3 121 2 
209 3 0 2 212 1 256 1 174 2 128 2 303 3 178 1 62 1 11 13 15 3 142 2 141 6 315 1 314 1 271 1 149 3 72 3 104 3 277 11 283 2 234 3 235 2 196 2 238 1 240 2 165 24 37 1 335 2 337 1 46 1 339 1 251 3 121 1 
209 3 0 4 212 1 256 2 174 4 128 2 303 4 178 1 62 1 11 15 15 3 142 1 141 6 147 1 314 1 315 1 144 1 271 1 149 3 72 3 104 3 277 17 283 1 234 4 235 3 236 1 196 5 238 1 240 4 165 32 37 1 335 3 337 3 46 1 339 1 251 4 121 1 
209 4 0 3 212 1 256 3 174 3 128 2 303 4 178 1 62 1 11 17 15 4 142 2 141 8 147 1 314 1 315 1 144 1 271 1 149 4 72 4 104 4 277 16 283 1 234 4 235 3 236 1 196 6 238 1 240 4 165 33 37 1 335 3 337 3 46 1 339 1 251 4 121 1 
209 3 0 6 212 1 256 6 53 1 216 1 174 6 128 1 303 7 178 1 62 1 11 23 99 1 12 1 15 2 142 1 141 4 314 1 315 1 144 2 271 1 316 2 149 2 72 2 104 2 277 20 283 1 234 6 160 1 235 4 196 12 238 1 240 4 165 43 37 1 333 1 335 2 337 6 46 1 339 1 251 6 121 1 
241 1 214 1 276 1 55 1 33 1 191 1 115 1 226 1 252 1 237 1 
229 1 143 1 
29 1 265 1 241 1 55 1 33 1 281 1 115 1 252 1 237 1 
49 1 13 1 
282 1 305 1 272 1 
76 1 214 1 231 1 33 1 55 1 173 1 191 1 97 1 176 1 106 1 237 1 306 1 309 1 241 1 115 1 226 1 252 1 273 2 
76 1 214 1 231 1 33 1 55 1 173 1 191 1 97 1 176 1 106 1 237 1 306 1 309 1 241 1 115 1 226 1 252 1 273 2 
76 1 214 1 231 1 33 1 55 1 173 1 191 1 97 1 176 1 106 1 237 1 306 1 309 1 241 1 115 1 226 1 252 1 273 2 
49 1 13 1 282 1 
49 1 13 1 282 1 
305 1 272 1 
282 1 305 1 272 1 
243 1 140 1 
241 1 55 1 33 1 173 1 115 1 317 1 119 1 273 1 252 1 253 1 237 1 306 1 
211 2 124 1 301 1 304 1 98 1 63 1 11 1 136 1 307 2 17 2 15 1 141 2 23 2 102 2 149 1 24 1 274 1 72 1 151 1 28 1 153 1 104 1 277 1 82 1 328 1 165 2 42 1 291 1 114 2 295 1 123 2 
211 2 152 1 124 1 50 1 153 1 57 1 215 1 5 1 193 1 194 1 259 1 218 2 8 1 130 1 263 1 307 2 199 1 267 1 123 2 
211 1 152 1 124 1 50 1 153 1 215 1 5 1 193 1 218 2 8 1 130 1 263 1 307 1 199 1 267 1 269 1 123 1 
211 1 307 1 125 1 57 1 322 1 5 1 157 1 123 1 
211 1 152 1 124 1 50 1 153 1 57 1 215 1 5 1 193 1 259 1 218 2 8 1 130 1 263 1 307 1 199 1 267 1 123 1 
120 1 
208 1 
56 1 
211 1 307 1 56 1 157 1 123 1 
56 1 
56 1 145 1 176 1 106 1 
135 1 56 1 
275 2 41 1 224 1 303 1 234 1 251 1 
211 1 307 1 157 1 123 1 
56 1 
92 1 55 1 237 1 
92 1 55 1 237 1 
92 1 55 1 237 1 
32 1 55 1 140 1 191 1 237 1 
55 1 155 1 237 1 
55 1 155 1 237 1 
55 1 155 1 237 1 
55 1 237 1 
241 1 115 1 
256 2 104 2 53 1 277 2 216 1 303 1 160 1 196 3 11 3 99 1 12 1 165 5 15 2 333 1 141 4 142 1 337 1 149 2 72 2 
208 1 
0 1 256 1 257 1 104 1 277 2 174 1 234 1 303 1 196 2 11 2 165 4 15 1 141 2 337 1 149 1 251 1 72 1 
0 1 256 1 277 4 174 1 234 1 303 1 235 1 196 2 11 3 240 2 165 7 335 1 144 1 337 1 251 1 
0 2 256 5 53 2 216 2 174 2 303 3 11 10 99 1 12 1 15 2 142 2 141 4 144 1 316 1 149 2 72 2 104 2 277 10 234 2 160 1 235 2 196 9 240 2 165 20 203 1 333 1 337 4 251 2 47 1 
240 1 165 1 277 1 
165 1 235 1 11 1 
0 1 256 2 257 1 104 1 277 3 174 1 234 1 303 1 196 3 11 3 165 6 15 1 290 1 141 2 337 1 149 1 251 1 72 1 
0 2 256 1 174 2 303 2 62 1 11 6 178 1 15 1 141 2 315 1 314 1 149 1 72 1 104 1 277 6 234 2 235 1 196 2 240 1 165 12 37 1 335 1 337 1 339 1 251 2 
165 1 303 1 160 1 11 1 
256 1 53 1 104 1 277 2 216 1 196 2 11 1 99 1 165 3 15 1 203 1 333 1 142 1 141 2 337 1 149 1 72 1 
256 2 104 1 53 1 277 3 216 1 174 1 303 2 160 1 196 4 62 1 198 1 11 4 165 7 15 1 141 2 337 2 149 1 72 1 
104 1 303 1 196 1 62 1 11 2 165 2 15 1 141 2 337 1 149 1 251 1 72 1 
0 1 256 1 104 1 277 2 174 1 234 1 303 1 196 2 62 1 11 2 165 4 15 1 141 2 337 1 149 1 251 1 72 1 
256 1 104 3 53 1 277 2 216 1 196 2 62 1 11 1 165 3 15 3 203 1 142 1 141 6 147 1 337 1 149 3 72 3 
0 3 256 6 257 1 53 2 216 2 174 3 303 5 62 1 11 14 99 1 12 1 15 5 142 2 141 10 147 1 144 1 149 5 72 5 230 1 104 5 277 14 234 3 160 2 235 3 196 11 240 4 165 28 110 1 203 1 333 1 335 1 337 5 296 1 251 3 
256 2 53 1 216 1 303 1 62 1 11 3 99 1 12 1 15 1 141 2 315 1 149 1 72 1 104 1 277 2 235 1 160 1 196 2 240 1 165 5 333 1 335 1 
256 2 257 1 53 1 216 1 303 2 62 1 11 5 99 1 12 1 15 2 141 4 315 1 144 1 149 2 72 2 104 2 277 3 234 1 160 1 235 1 196 3 240 2 165 8 333 1 335 1 337 1 251 1 
0 2 256 1 257 1 174 2 303 2 178 1 62 1 11 6 15 3 141 6 142 1 315 1 314 1 149 3 72 3 104 3 277 7 234 2 235 1 196 2 240 1 165 13 37 1 335 1 337 1 339 1 251 2 
0 1 256 1 257 1 174 1 303 2 62 1 11 7 178 1 15 3 142 1 141 6 315 1 314 1 149 3 72 3 104 3 277 4 234 2 235 1 196 2 240 1 165 11 37 1 335 1 337 1 339 1 251 2 
256 2 53 1 216 1 303 1 62 1 11 3 99 1 12 1 15 1 141 2 315 1 149 1 72 1 104 1 277 2 235 1 160 1 196 2 240 1 165 5 333 1 335 1 
0 2 256 1 174 2 303 2 62 1 11 6 178 1 15 1 141 2 315 1 314 1 149 1 72 1 104 1 277 6 234 2 235 1 196 2 240 1 165 12 37 1 335 1 337 1 339 1 251 2 
0 1 256 1 257 1 174 1 303 2 178 1 62 1 11 7 15 4 141 8 142 2 315 1 314 1 149 4 72 4 104 4 277 5 234 2 235 1 196 2 240 1 165 12 37 1 335 1 337 1 339 1 251 2 
0 1 256 2 174 1 303 2 178 1 62 1 11 7 15 4 141 8 142 2 315 1 147 1 314 1 149 4 72 4 104 4 277 5 234 2 235 1 196 4 240 1 165 12 37 1 335 1 337 2 339 1 251 2 
256 4 53 2 277 2 174 1 216 2 303 3 160 2 196 7 198 1 11 5 99 1 12 1 165 7 333 1 337 3 
0 1 256 1 174 1 303 2 178 1 62 1 11 7 15 4 141 8 142 2 315 1 147 1 314 1 149 4 72 4 104 4 277 5 234 2 235 1 196 2 240 1 165 12 37 1 335 1 337 1 339 1 251 2 
31 1 17 1 85 1 78 1 23 1 102 1 186 1 
31 1 91 1 78 1 17 1 85 1 21 1 102 1 23 1 118 1 319 1 186 1 343 1 
211 1 307 1 157 1 208 1 123 1 
211 1 124 1 31 1 189 1 52 1 153 1 190 1 157 1 98 1 307 1 17 1 334 1 102 2 23 2 148 1 71 1 274 1 123 1 
211 1 124 1 52 1 7 1 98 2 64 1 307 1 222 1 17 2 23 2 102 2 148 1 71 1 274 3 187 1 31 1 189 2 153 1 190 1 334 2 249 1 342 1 123 1 
211 2 124 1 52 1 7 1 98 2 64 1 307 2 222 1 17 2 23 2 102 2 71 1 274 3 187 1 74 1 31 1 189 2 153 1 190 1 107 1 334 2 249 1 342 1 123 2 
211 3 124 1 129 1 176 2 98 1 64 1 307 3 222 1 266 1 66 1 309 1 274 4 189 1 153 1 157 1 106 2 107 1 108 1 326 1 245 1 249 1 86 1 123 3 
211 3 124 1 189 1 153 1 157 1 176 2 129 1 106 2 98 1 107 1 64 1 222 1 307 3 309 1 326 1 66 1 245 1 249 1 86 1 274 4 123 3 48 1 
211 1 307 1 124 1 308 1 153 1 123 1 
211 7 255 1 124 3 189 1 153 2 301 1 192 1 157 2 194 1 58 1 60 1 98 2 325 1 307 6 308 1 199 1 201 1 166 1 114 1 274 3 123 7 
211 1 124 1 171 1 256 2 52 1 53 1 258 1 216 1 303 1 11 2 98 1 63 2 99 1 307 1 12 1 183 1 17 1 15 2 141 4 23 2 102 2 148 1 71 1 149 2 274 1 72 2 28 2 31 1 189 1 153 1 104 2 277 1 190 1 194 1 159 1 105 1 160 1 196 2 165 3 42 1 333 1 334 1 250 1 87 1 295 1 123 1 
119 1 
211 2 124 2 189 1 153 1 4 1 194 1 98 1 325 1 307 2 308 1 245 1 274 2 123 2 
211 4 124 1 153 1 300 1 157 1 194 1 98 1 107 1 307 4 223 1 68 1 274 1 123 4 
211 2 124 2 189 1 153 1 58 1 220 1 60 1 98 1 222 1 307 2 181 1 20 1 274 1 123 2 
211 1 307 1 124 1 153 1 157 1 193 1 218 1 130 1 263 1 123 1 
211 2 307 2 124 1 328 1 199 1 153 1 301 1 194 1 274 1 98 1 123 2 
211 5 124 2 153 2 300 1 157 1 192 1 301 1 194 1 98 2 222 1 307 4 201 1 223 1 68 1 274 3 123 5 
211 5 124 2 153 2 300 1 157 1 301 1 194 1 98 2 222 1 307 4 201 1 223 1 68 1 247 1 274 3 123 5 
211 1 124 1 74 1 31 1 189 1 52 1 153 1 190 1 157 1 98 1 307 1 17 1 334 1 102 2 23 2 71 1 274 1 123 1 
211 1 255 1 124 2 189 1 153 1 58 1 60 1 98 1 325 1 222 1 307 1 274 1 123 1 
31 1 206 1 341 1 131 1 27 1 
297 1 52 1 172 1 94 1 95 1 7 1 176 1 131 1 66 1 17 1 69 1 23 1 102 1 27 1 227 1 187 1 156 1 285 1 106 1 84 1 330 1 334 1 206 1 119 1 341 1 342 2 
17 1 291 1 206 1 102 1 23 1 24 1 341 1 27 1 151 1 
330 1 69 1 341 1 
208 1 
30 1 329 1 139 1 312 1 168 1 103 1 161 1 
329 1 81 1 169 1 
2 1 30 1 6 1 10 1 161 1 329 3 139 3 312 1 168 1 294 2 103 1 254 1 
329 1 139 2 312 1 225 1 116 1 161 1 
215 1 218 1 10 1 161 1 263 1 329 1 139 1 312 1 205 1 168 1 122 1 
329 1 139 1 312 1 168 1 103 1 161 1 10 1 
30 1 329 1 139 1 312 1 103 2 161 1 10 1 
54 1 10 1 161 2 61 1 329 2 139 2 312 2 248 1 168 1 103 1 
30 1 90 1 10 1 161 1 329 3 137 1 139 3 312 1 225 2 70 1 168 2 103 1 122 1 
320 1 30 1 50 1 215 1 193 1 218 2 10 1 161 1 263 1 329 2 139 2 312 1 225 1 168 1 103 1 
329 1 139 2 312 1 225 1 116 1 284 1 161 1 10 1 
30 1 329 1 139 1 312 1 168 1 103 1 161 1 10 1 
2 1 30 2 93 1 6 1 161 1 329 4 137 1 139 4 312 1 225 2 294 1 168 3 103 2 122 1 
109 1 327 1 329 1 139 2 312 1 225 1 88 1 161 1 10 1 
2 1 30 1 6 2 10 1 161 1 329 3 139 3 312 1 168 1 294 2 207 1 103 1 
168 2 197 1 25 1 221 2 
329 1 139 1 312 1 34 1 161 1 10 1 
30 1 329 2 139 2 312 1 225 1 70 1 168 1 103 1 161 1 10 1 
158 1 
30 1 329 1 139 1 312 1 168 1 103 1 161 1 10 1 
30 1 329 3 139 3 312 1 225 1 70 1 168 1 294 1 103 1 161 1 10 1 
137 1 93 1 168 1 122 1 
168 1 103 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 209 323 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 241 78 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 241 128 129 328 341 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 241 128 129 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 241 128 129 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 241 128 129 328 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 241 128 129 328 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 192 337 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 209 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 59 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 59 260 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 3 159 1 14 1 270 1 200 1 111 2 153 1 259 1 68 2 35 1 135 1 195 3 28 2 
159 2 297 9 270 1 200 3 271 1 3 1 272 2 68 2 278 1 47 1 49 1 231 2 253 1 28 2 305 2 14 4 288 1 16 1 234 2 111 5 153 1 259 1 352 1 35 6 135 1 61 1 195 9 22 1 
159 2 297 9 270 1 200 3 271 1 3 1 272 2 68 2 278 1 47 1 49 1 231 2 253 1 28 2 305 2 14 4 288 1 16 1 234 2 111 5 153 1 259 1 352 1 35 6 135 1 61 1 195 9 22 1 
159 2 297 10 270 1 200 4 271 1 3 1 272 2 68 2 278 1 47 1 49 1 231 2 253 1 28 2 305 2 14 5 288 1 16 1 234 2 111 6 153 1 259 1 352 1 35 7 135 1 61 1 195 10 22 1 
159 2 297 7 270 1 200 2 3 1 272 2 68 2 278 1 47 1 49 1 231 1 253 1 28 2 305 2 14 3 288 1 16 1 234 2 111 4 153 1 259 1 352 1 35 4 135 1 61 1 195 7 22 1 
297 4 14 2 200 1 271 1 234 1 272 1 111 3 153 1 259 1 68 1 352 1 35 3 135 1 49 1 195 4 231 2 28 1 305 1 
286 1 297 2 159 1 16 1 299 1 234 1 111 1 272 1 153 1 259 1 68 1 135 1 47 1 195 2 28 1 348 1 
159 1 297 9 246 1 200 3 270 1 271 1 272 1 68 2 49 1 231 2 28 2 305 1 31 1 14 4 288 1 234 1 111 5 153 1 259 1 352 1 35 7 135 1 61 1 195 9 
159 1 297 9 246 1 200 3 270 1 271 1 272 1 68 2 49 1 231 2 28 2 305 1 31 1 14 4 288 1 234 1 111 5 153 1 259 1 352 1 35 7 135 1 61 1 195 9 
317 1 52 1 255 1 0 1 312 1 122 1 17 1 25 1 115 1 156 1 165 1 230 1 23 1 75 1 
213 1 
36 1 115 2 213 1 165 1 265 1 81 1 193 1 75 2 
77 2 267 1 32 2 33 2 213 1 214 1 275 1 81 1 193 1 36 2 8 1 56 1 114 1 115 5 10 1 263 1 165 2 88 1 75 5 
213 1 252 1 81 1 
236 1 213 1 102 2 
255 1 0 2 122 2 312 2 17 2 25 2 221 1 23 2 
0 2 122 3 41 1 25 2 26 1 124 2 126 1 344 1 46 1 228 1 72 1 232 1 147 2 169 1 186 1 189 1 255 1 312 2 258 1 54 1 15 1 17 2 107 2 109 1 216 1 217 1 83 2 84 1 176 1 155 1 264 1 38 1 87 1 239 1 178 2 221 1 23 3 
52 1 255 1 0 1 312 1 122 1 17 1 25 1 156 1 230 1 23 1 
30 1 312 1 122 1 213 1 161 1 81 1 115 1 57 1 205 1 230 1 334 1 240 1 23 1 75 1 
317 1 52 1 255 1 30 1 0 2 312 2 122 2 213 1 17 2 161 1 25 2 81 1 115 2 156 1 205 1 230 2 240 1 23 2 75 2 
36 1 115 1 332 1 165 1 75 1 
36 1 222 1 115 2 213 1 165 1 81 1 193 1 75 2 
36 1 115 1 75 1 
0 1 210 1 312 2 122 2 105 1 340 1 17 1 25 1 230 1 23 2 221 1 
204 1 73 1 21 1 
122 1 320 1 54 1 15 1 107 1 109 1 216 1 26 1 217 1 83 1 176 1 72 1 178 1 169 1 221 1 23 1 
252 1 221 1 
0 2 312 2 122 2 340 1 25 2 262 1 230 1 23 2 221 1 
0 1 122 1 312 1 156 1 230 1 25 1 23 1 
0 1 312 1 122 1 210 1 105 1 17 1 25 1 230 1 23 1 
0 3 122 4 143 1 161 1 25 3 26 1 124 2 344 1 46 1 228 1 205 1 280 1 72 1 230 1 232 1 147 1 169 1 186 1 75 1 30 1 255 1 312 3 105 1 54 1 15 1 17 2 107 1 109 1 216 1 217 1 219 1 83 1 176 1 115 1 155 1 262 1 264 1 38 1 87 1 239 1 240 1 178 1 221 1 23 4 
0 1 312 2 122 2 2 1 340 1 25 1 262 1 230 1 334 1 23 2 221 1 
30 1 0 3 312 3 122 3 105 1 213 1 143 1 17 1 161 1 25 3 115 1 205 1 280 1 262 2 86 1 230 1 240 1 23 3 75 1 
0 2 204 1 122 2 312 2 105 1 262 1 17 1 21 1 25 2 23 2 
122 1 54 1 15 1 107 1 109 1 216 1 26 1 217 1 83 1 176 1 72 1 178 1 169 1 221 1 23 1 
244 1 122 1 15 1 107 1 108 1 216 1 26 1 217 1 83 1 176 1 72 1 178 1 169 1 221 1 23 1 
224 1 199 1 124 2 46 1 228 2 204 2 183 1 73 2 232 1 147 4 168 1 207 1 150 1 189 2 254 1 314 1 290 1 155 1 333 1 264 1 21 2 87 1 239 1 358 1 
0 1 312 1 122 1 25 1 205 1 230 1 101 1 23 1 
0 1 312 1 122 2 54 1 15 1 107 1 109 1 25 1 216 1 26 1 217 1 83 1 176 1 204 1 280 1 262 1 72 1 169 1 178 1 23 2 
0 4 312 5 122 5 2 1 105 1 340 1 225 1 17 1 25 4 280 1 262 2 230 1 355 1 334 1 23 5 221 1 
0 1 122 1 312 1 156 1 230 1 25 1 23 1 
70 1 211 1 80 1 
125 1 211 2 91 1 80 2 282 1 69 1 
211 1 80 1 
211 1 80 1 
125 1 69 1 
125 1 69 1 
125 1 69 1 
211 1 268 1 80 1 
211 1 268 1 80 1 
211 1 268 1 80 1 
307 1 211 1 80 1 
307 1 211 1 80 1 
307 1 211 1 80 1 
296 1 209 1 211 1 11 1 80 1 323 1 
0 1 122 1 312 1 25 1 18 1 23 1 
299 1 234 2 305 1 273 1 313 2 
234 1 272 1 305 1 
299 1 234 1 272 1 
351 1 299 1 234 3 313 1 273 1 305 2 
190 1 299 1 234 2 313 1 273 1 305 1 
318 1 224 1 66 1 321 1 201 2 275 3 302 2 48 1 183 1 10 1 165 4 102 3 74 1 75 5 12 2 76 1 77 1 32 1 33 1 213 2 214 2 193 1 81 1 36 1 290 1 177 1 236 1 315 1 115 5 157 1 333 1 63 1 
267 1 224 2 66 2 343 1 226 1 322 4 27 1 275 6 302 4 48 1 183 2 10 1 165 6 100 1 102 6 74 2 75 8 12 4 76 4 77 2 32 2 33 2 213 4 214 4 81 1 193 1 36 5 290 2 133 1 236 2 315 2 115 8 333 2 332 4 62 1 
267 1 224 1 66 1 201 1 275 3 302 2 183 1 165 2 74 1 102 4 75 3 12 2 76 1 77 1 32 1 33 1 213 3 214 2 81 1 290 1 236 2 115 3 315 1 157 1 333 1 63 1 
267 1 224 1 66 1 343 1 201 1 275 3 302 2 183 1 165 2 100 1 102 4 74 1 75 3 12 2 76 2 77 1 32 1 33 1 213 2 214 2 290 1 236 2 115 3 315 1 157 1 333 1 62 1 63 1 
279 1 
180 1 72 1 252 1 
242 1 72 1 
217 1 72 1 
217 1 180 2 53 1 72 3 354 1 169 1 
217 1 72 1 169 1 
72 1 174 1 
189 5 171 1 89 2 314 2 289 1 7 1 325 1 127 1 228 5 183 1 238 2 50 2 237 1 333 1 168 4 29 1 147 10 206 1 
243 4 89 3 319 1 224 3 4 1 124 2 325 1 7 2 46 1 127 2 228 14 183 4 50 3 147 30 29 2 168 11 350 1 189 16 171 1 256 3 172 1 314 5 289 1 290 2 315 3 155 1 237 1 238 6 333 3 87 1 316 1 239 1 119 1 179 1 
189 6 171 1 89 2 314 3 124 4 289 1 7 1 96 1 127 1 46 2 228 6 155 2 183 1 50 2 237 1 238 3 333 1 316 1 168 6 29 1 147 12 239 2 87 2 233 1 
189 5 171 1 89 2 314 2 289 1 7 1 325 1 127 1 228 5 183 1 238 2 50 2 237 1 333 1 168 4 29 1 147 10 
189 5 171 1 89 2 314 2 289 1 7 1 325 1 127 1 228 5 183 1 238 2 50 2 237 1 333 1 168 4 29 1 147 10 
64 2 245 1 159 2 297 1 269 1 40 1 107 1 216 1 26 1 68 1 217 1 45 1 83 1 176 1 136 2 116 1 72 1 138 1 195 1 347 1 28 1 178 1 220 2 
64 1 297 1 159 1 299 1 272 1 26 1 68 1 281 1 164 1 167 1 28 1 305 1 187 1 308 1 107 1 351 1 234 2 83 1 135 1 176 1 136 1 293 1 195 1 178 1 295 1 220 1 
64 1 297 2 159 1 299 1 272 1 26 1 68 1 281 1 164 1 167 1 28 1 305 1 187 1 308 1 107 1 351 1 234 2 111 1 153 1 259 1 35 1 83 1 235 1 135 1 176 1 136 1 293 1 195 2 178 1 220 1 
64 1 297 3 159 1 299 1 272 1 26 1 68 1 281 1 164 1 167 1 28 1 305 1 187 1 308 1 351 1 107 1 234 2 111 1 153 1 259 1 82 1 35 2 83 1 176 1 136 1 116 1 195 3 178 1 295 1 220 1 
64 1 159 1 297 2 299 1 272 1 26 1 281 1 164 1 167 1 305 1 107 1 351 1 234 2 111 1 153 1 259 1 35 2 82 1 83 1 176 1 136 1 195 2 178 1 295 1 220 1 
9 1 
39 1 144 1 275 2 10 1 146 1 230 1 51 2 148 1 188 1 107 2 193 1 115 3 57 1 334 1 240 1 23 1 197 1 241 1 245 1 122 1 338 1 66 1 161 1 26 1 71 1 205 1 72 1 347 1 75 3 310 1 130 1 77 1 30 1 78 1 32 1 312 1 33 1 214 2 216 2 217 1 36 2 353 1 218 1 83 2 176 1 178 2 
30 1 312 1 122 1 338 1 161 1 144 1 193 1 36 2 218 1 162 1 115 3 71 1 57 1 205 1 230 1 265 1 51 2 334 1 240 1 23 1 197 1 75 3 
30 1 312 1 122 1 79 1 338 1 213 1 161 1 144 1 193 1 81 1 36 1 218 1 115 3 71 1 57 1 205 1 230 1 265 1 51 3 334 1 240 1 23 1 197 1 75 3 
122 1 338 1 161 1 144 1 162 1 71 1 205 1 230 1 51 3 75 3 30 1 312 1 79 1 213 1 193 1 81 1 36 2 218 1 115 3 57 1 265 1 294 1 240 1 334 1 23 1 197 1 
241 1 122 1 338 1 161 1 341 1 144 1 275 1 162 2 71 1 251 1 10 1 205 1 146 1 128 1 230 1 51 2 129 1 148 1 75 3 328 1 310 1 130 1 77 1 30 1 32 1 312 1 33 1 214 1 193 1 36 3 218 1 115 3 57 1 265 1 294 2 334 1 240 1 23 1 197 1 
241 1 122 1 338 1 161 1 144 1 275 1 71 1 10 1 205 1 146 1 230 1 51 2 148 1 75 2 310 1 130 1 77 1 30 1 32 1 312 1 33 1 214 1 218 1 115 2 57 1 334 1 240 1 23 1 197 1 
241 1 122 1 338 1 161 1 144 1 275 1 71 1 251 1 205 1 10 1 146 1 128 1 230 1 51 2 129 1 148 1 75 2 310 1 130 1 77 1 30 1 32 1 312 1 33 1 214 1 218 1 115 2 57 1 240 1 334 1 23 1 197 1 
241 1 122 1 338 1 161 1 144 1 275 1 71 1 251 1 205 1 10 1 146 1 128 1 230 1 51 2 129 1 148 1 75 2 310 1 130 1 77 1 30 1 32 1 312 1 33 1 214 1 218 1 115 2 57 1 240 1 334 1 23 1 197 1 
317 1 0 1 142 1 144 1 275 1 10 1 230 2 51 3 102 1 148 1 52 1 17 1 193 1 115 3 156 1 57 1 294 1 334 1 240 1 23 2 197 1 241 1 122 2 338 1 161 1 25 1 162 1 71 1 205 1 346 1 128 1 349 1 75 3 310 1 255 1 30 1 77 1 32 1 311 1 312 2 79 1 33 1 213 1 214 1 81 1 36 2 218 1 261 1 
241 1 122 1 338 1 161 1 144 1 275 1 162 1 71 1 251 1 10 1 205 1 146 1 128 1 230 1 51 3 129 1 148 1 75 2 328 1 310 1 130 1 77 1 30 1 32 1 312 1 79 1 33 1 214 1 36 1 218 1 115 2 57 1 294 1 240 1 334 1 23 1 197 1 
241 1 122 1 338 1 161 1 144 1 275 1 162 1 71 1 251 1 10 1 205 1 146 1 128 1 230 1 51 3 129 1 148 1 75 2 328 1 310 1 130 1 77 1 30 1 32 1 312 1 79 1 33 1 214 1 36 1 218 1 115 2 57 1 294 1 240 1 334 1 23 1 197 1 
241 1 122 1 338 1 90 1 142 1 161 1 144 1 275 1 162 2 71 1 10 1 205 1 346 2 230 1 51 4 102 2 148 2 75 4 310 2 77 1 30 1 311 2 32 1 312 1 79 2 33 1 213 1 214 1 81 1 193 2 36 4 218 1 115 4 57 1 294 2 334 1 240 1 23 1 197 1 
121 1 0 1 122 1 245 1 25 1 26 2 124 4 95 1 345 1 46 2 228 1 72 3 232 2 347 1 147 2 207 1 284 1 306 1 189 1 287 1 312 1 258 1 107 8 216 2 217 2 235 1 83 8 176 2 84 2 155 2 262 1 264 2 295 1 178 7 87 2 239 2 38 1 23 1 198 1 
0 1 122 1 224 1 25 1 124 2 46 1 204 1 228 2 183 1 73 1 232 1 168 1 185 1 147 3 189 1 312 1 105 1 17 1 314 1 290 1 194 1 315 1 155 1 333 1 264 1 21 1 87 1 239 1 23 1 
189 4 171 1 89 2 314 2 124 2 289 1 46 1 228 5 155 1 183 1 238 2 237 1 50 2 333 1 264 1 252 1 232 1 147 9 168 4 239 1 87 1 221 4 207 1 
243 4 224 3 92 1 4 2 124 4 46 2 228 7 204 13 183 3 73 13 232 1 168 2 185 1 147 17 189 10 256 3 104 1 258 1 314 1 290 1 315 3 155 2 85 1 238 1 333 1 264 2 21 4 38 1 87 2 239 2 221 1 335 1 179 1 
0 1 122 2 320 1 25 1 26 1 124 2 46 1 228 1 327 1 99 1 280 1 72 1 232 1 169 1 185 1 147 2 189 1 312 1 13 1 258 1 54 1 15 1 107 1 109 1 216 1 217 1 83 1 176 1 155 1 262 1 264 1 21 1 178 1 239 1 87 1 38 1 221 1 23 2 
0 1 89 2 224 2 46 3 97 2 228 12 183 3 50 2 280 1 232 3 185 1 147 23 186 2 189 11 54 2 15 2 107 1 109 2 154 1 289 1 112 2 290 2 155 3 237 1 238 3 333 3 117 2 21 6 239 3 23 3 196 2 122 3 25 1 26 2 124 6 204 6 72 2 73 6 168 9 169 2 171 1 312 1 258 1 216 1 314 6 217 2 83 1 176 2 315 2 137 1 262 1 264 3 38 1 178 1 87 3 221 4 
254 1 189 2 224 1 124 2 46 1 204 1 155 1 183 1 238 1 73 1 264 1 21 1 232 1 168 1 147 2 239 1 87 1 207 1 
150 1 314 1 124 2 290 1 46 1 204 1 228 2 155 1 333 1 73 1 264 1 21 1 232 1 168 1 147 2 239 1 87 1 207 1 
224 1 124 2 46 1 204 2 228 2 183 1 73 2 232 1 147 4 168 1 207 1 189 2 314 1 290 1 315 1 155 1 333 1 264 1 21 2 87 1 239 1 
284 1 254 1 189 2 224 1 124 2 46 1 204 1 155 1 183 1 238 1 73 1 264 1 21 1 232 1 168 1 147 2 239 1 87 1 
284 1 150 1 314 1 124 2 290 1 46 1 204 1 228 2 155 1 333 1 73 1 264 1 21 1 232 1 168 1 147 2 239 1 87 1 
224 1 124 2 46 1 204 2 228 2 183 1 73 2 232 1 147 4 168 2 284 1 189 2 314 1 290 1 315 1 155 1 238 1 333 1 264 1 21 2 87 1 239 1 
224 1 124 2 46 1 204 2 228 2 183 1 73 2 232 1 147 4 168 1 189 2 314 1 290 1 315 1 155 1 333 1 264 1 21 2 87 1 239 1 
122 1 26 1 124 2 46 1 228 1 72 1 232 1 147 2 169 1 186 1 189 1 258 1 54 1 15 1 107 1 109 1 216 1 217 1 83 1 176 1 155 1 264 1 178 1 239 1 87 1 38 1 221 1 23 1 
244 1 122 1 26 1 124 2 44 1 46 1 228 1 72 1 232 1 147 2 169 1 189 1 258 1 15 1 107 1 108 1 216 1 217 1 83 1 176 1 155 1 264 1 178 1 239 1 87 1 38 1 221 1 23 1 
224 1 124 2 46 1 204 2 228 2 183 1 73 2 232 1 185 1 147 4 168 1 189 2 314 1 290 1 315 1 155 1 333 1 264 1 21 2 87 1 239 1 
122 1 224 1 26 1 124 2 46 1 228 2 204 2 183 1 72 1 73 2 232 1 168 1 147 4 169 1 186 1 189 2 54 1 15 1 107 1 109 1 314 1 217 1 112 1 290 1 83 1 235 1 176 1 315 1 155 1 333 1 264 1 21 2 178 1 239 1 87 1 23 1 
0 1 122 1 224 1 25 1 124 2 46 1 228 1 204 1 183 1 73 1 232 1 168 1 185 1 147 3 189 2 309 1 312 1 105 1 17 1 290 1 315 1 155 1 238 1 333 1 264 1 21 1 87 1 239 1 23 1 
158 1 243 2 224 2 160 1 274 1 4 1 124 4 96 1 248 1 46 2 228 5 183 2 147 11 168 2 208 1 189 6 192 1 256 1 314 1 19 1 290 1 113 1 315 2 155 2 238 1 333 1 87 2 239 2 179 1 
337 1 336 1 158 1 243 2 224 3 160 2 274 3 43 1 124 6 324 1 96 1 46 3 228 11 183 3 168 2 147 24 208 2 189 13 192 1 256 2 34 1 215 1 314 1 19 1 290 2 315 3 155 3 238 1 333 2 118 1 316 2 87 3 239 3 179 2 
337 1 336 1 158 1 243 5 1 1 224 5 160 2 274 4 4 2 43 1 324 1 124 8 248 1 96 1 46 4 228 15 183 5 147 34 168 5 208 1 189 19 192 1 256 3 34 1 215 1 314 1 19 1 290 2 315 5 155 4 238 4 333 2 118 1 316 2 87 4 239 4 179 3 
337 1 158 1 243 2 224 2 160 1 274 2 4 1 124 4 96 1 248 1 46 2 228 6 183 2 147 13 168 3 208 1 189 7 192 1 256 1 314 1 19 1 290 1 315 2 155 2 238 2 333 1 87 2 239 2 179 1 
337 1 336 1 158 1 243 3 89 2 224 3 160 1 274 3 4 1 43 1 324 1 124 6 96 1 46 3 228 17 183 4 50 2 147 34 168 9 208 1 189 17 171 1 192 1 256 2 34 1 215 1 314 5 289 1 19 1 290 2 315 3 155 3 237 1 238 4 333 3 118 1 316 2 87 3 239 3 179 2 
266 1 122 2 298 1 67 1 26 1 124 2 94 1 95 1 345 1 46 1 228 1 229 1 72 1 232 1 185 1 147 2 189 1 312 2 258 1 107 2 217 1 83 2 176 1 84 2 155 1 264 1 239 1 87 1 38 1 178 2 23 2 
64 1 245 1 107 1 216 1 202 1 26 1 217 1 6 1 83 1 176 1 72 1 138 1 347 1 178 1 
64 1 351 1 299 1 107 1 234 2 272 1 203 1 26 1 5 1 6 1 83 1 176 1 164 1 167 1 295 1 178 1 305 1 187 1 
64 1 351 1 299 1 107 2 234 2 272 1 203 1 26 1 5 1 6 1 83 2 235 1 176 1 164 1 167 1 295 1 178 2 305 1 187 1 
64 1 351 1 299 1 107 1 234 2 272 1 203 1 26 1 83 1 176 1 303 1 164 1 167 1 295 1 178 1 305 1 187 1 
151 1 
77 1 32 1 33 1 213 1 214 1 81 1 275 1 10 1 263 1 88 1 
12 5 140 1 224 2 213 5 106 2 214 5 275 5 290 2 302 5 315 2 236 5 183 2 333 2 117 1 102 10 
36 1 115 1 213 1 81 1 75 1 193 1 
39 1 267 1 245 1 66 2 26 1 275 2 184 1 10 1 72 1 347 1 103 2 75 3 188 2 77 2 32 2 33 2 107 4 214 2 216 2 55 1 193 2 217 1 36 4 353 1 83 4 176 1 115 3 58 1 178 4 
213 1 263 1 252 1 214 1 88 1 275 1 81 1 
130 1 77 1 32 1 33 1 10 1 146 1 214 1 275 1 
180 2 140 3 223 2 224 2 181 2 275 9 98 2 10 4 183 2 102 12 103 1 188 1 12 6 191 2 106 2 107 3 193 3 290 2 235 1 115 5 236 6 58 1 333 2 117 2 120 1 242 3 339 1 66 2 26 4 302 6 163 2 72 10 169 3 75 5 77 4 30 2 32 4 33 4 212 1 213 8 173 2 174 2 214 8 216 1 81 2 217 3 36 5 83 3 176 3 315 2 263 1 354 1 178 3 88 1 
336 1 243 1 224 2 275 7 324 1 276 1 302 5 10 2 183 2 102 6 75 1 12 5 77 2 32 2 256 1 33 2 213 4 106 1 34 1 214 4 215 1 193 1 81 1 36 1 290 2 115 1 236 3 315 2 333 2 118 1 179 1 
317 1 140 1 0 1 122 1 89 1 25 1 275 2 251 1 10 1 183 2 50 1 230 1 75 1 52 1 77 1 255 1 32 1 312 1 33 1 106 1 152 1 17 1 214 2 289 1 115 1 156 1 333 1 23 1 
0 2 122 3 25 2 26 1 124 2 344 1 46 1 228 1 72 1 232 1 147 1 169 1 186 1 255 1 312 2 54 1 15 1 107 1 17 2 109 1 216 1 217 1 83 1 176 1 155 1 264 1 38 1 87 1 178 1 239 1 221 1 23 3 
12 2 188 1 77 1 32 1 33 1 213 4 66 1 214 2 275 1 81 2 302 2 236 2 10 1 29 1 102 4 
209 1 11 1 
209 1 11 1 
209 1 11 1 
209 1 11 1 
209 1 11 1 
209 1 11 1 
209 1 11 1 
209 1 11 1 
211 1 80 1 
189 4 89 2 152 1 314 2 289 1 228 5 183 1 50 2 238 2 333 1 168 4 147 9 
189 2 224 1 124 2 96 1 46 1 155 1 183 1 238 1 239 1 87 1 147 2 168 1 
189 2 224 1 314 1 124 2 96 1 290 1 46 1 228 2 315 1 155 1 183 1 333 1 168 1 239 1 87 1 147 4 
189 1 89 1 314 1 124 2 96 1 46 1 228 1 155 1 50 1 238 1 147 2 239 1 87 1 168 2 
243 4 89 3 224 3 4 1 124 10 248 1 96 1 46 5 228 17 183 5 50 3 147 33 168 11 283 1 350 1 189 16 170 1 171 1 256 3 172 1 314 5 289 2 290 2 315 3 155 5 237 1 238 6 333 4 316 2 87 5 239 5 119 1 179 1 
189 4 171 1 89 2 314 2 124 4 289 1 46 2 228 5 155 2 183 1 238 2 237 1 50 2 333 1 147 9 168 4 239 2 87 2 316 1 
189 4 171 1 89 2 314 2 289 1 228 5 183 1 237 1 50 2 238 2 333 1 252 1 168 4 147 9 
189 2 224 1 314 1 124 2 290 1 46 1 228 2 315 1 155 1 183 1 238 1 333 1 168 2 239 1 87 1 147 4 283 1 
189 3 243 2 256 1 224 1 314 1 4 1 290 1 228 4 315 1 183 1 238 1 333 1 147 7 168 2 179 1 
243 2 89 3 224 2 92 1 4 1 124 4 46 2 228 13 183 3 50 3 168 10 147 24 189 11 170 1 171 1 256 2 104 1 314 5 289 1 290 2 315 2 155 2 237 1 238 5 333 3 316 2 239 2 87 2 
243 1 228 1 147 1 
189 1 256 1 147 1 
189 3 224 1 314 2 124 2 290 1 46 1 228 3 315 1 155 1 183 1 238 2 333 1 117 1 87 1 239 1 147 6 168 4 283 1 
336 1 243 1 224 2 124 2 324 1 96 1 46 1 228 5 183 2 147 12 168 4 189 7 256 1 34 1 215 1 314 2 290 1 315 2 155 1 238 2 333 1 118 1 87 1 239 1 179 1 
189 3 89 1 314 1 289 1 228 3 183 1 50 1 238 1 333 1 147 6 168 2 
189 1 170 1 171 1 89 1 314 1 124 2 46 1 228 2 155 1 238 1 50 1 237 1 168 2 147 3 316 1 239 1 87 1 
243 2 89 2 224 1 4 1 124 2 96 1 46 1 228 7 183 2 50 2 168 4 147 14 189 7 171 1 256 1 34 1 314 2 289 1 315 1 155 1 238 2 237 1 333 1 87 1 239 1 179 1 
243 2 89 2 224 1 4 1 124 4 96 1 46 2 228 7 183 2 50 2 147 14 168 5 283 1 189 7 171 1 256 1 34 1 314 2 289 1 315 1 155 2 237 1 238 3 333 1 87 2 239 2 179 1 
336 1 243 1 89 4 224 2 124 8 324 1 96 1 46 4 228 15 183 4 50 4 147 30 168 11 283 1 189 15 171 1 256 1 152 1 34 1 215 1 314 5 289 2 290 1 315 2 155 4 237 1 238 6 333 3 118 1 87 4 239 4 316 2 179 1 
336 1 243 1 89 2 224 2 124 8 324 1 96 1 46 4 228 10 183 3 50 2 147 21 168 7 283 1 189 11 171 1 256 1 34 1 215 1 314 4 289 1 290 1 315 2 155 4 237 1 238 3 333 2 118 1 87 4 239 4 316 2 179 1 
243 2 89 2 224 1 4 1 124 2 96 1 46 1 228 7 183 2 50 2 168 4 147 14 189 7 171 1 256 1 34 1 314 2 289 1 315 1 155 1 238 2 237 1 333 1 87 1 239 1 179 1 
336 1 243 1 224 2 124 6 324 1 96 1 46 3 228 5 183 2 147 12 168 4 189 7 256 1 34 1 215 1 314 2 290 1 315 2 155 3 238 2 333 1 118 1 87 3 239 3 316 2 179 1 
336 1 243 1 224 2 124 8 324 1 96 1 46 4 228 5 183 2 147 12 168 2 283 1 189 7 256 1 34 1 215 1 314 1 290 1 315 2 155 4 238 1 333 1 118 1 87 4 239 4 316 2 179 1 
336 1 243 1 224 2 124 4 324 1 96 1 248 1 46 2 228 5 183 2 147 12 168 4 189 7 256 1 34 1 215 1 314 2 290 1 315 2 155 2 238 2 333 1 118 1 87 2 239 2 179 1 
189 2 171 2 89 2 314 2 228 2 237 1 50 2 238 2 168 4 147 4 
336 1 243 1 224 2 124 8 324 1 96 1 248 1 46 4 228 5 183 2 147 12 168 2 189 7 256 1 34 1 215 1 314 1 290 1 315 2 155 4 238 1 333 1 118 1 87 4 239 4 316 2 179 1 
59 1 
149 1 330 1 285 1 260 1 59 1 329 1 
245 1 107 4 216 1 26 1 217 1 83 4 235 1 176 1 291 1 326 1 72 1 347 1 178 4 
139 1 257 1 65 1 342 1 107 2 26 2 217 1 83 2 176 1 292 1 72 1 178 2 169 1 103 1 
83 1 176 1 299 1 167 1 107 1 234 1 178 1 272 1 216 1 26 1 
217 1 345 1 83 2 235 1 176 1 298 1 72 1 107 2 295 1 178 2 26 1 
121 1 245 1 107 5 216 1 26 2 217 2 83 5 235 1 345 1 176 2 326 1 72 3 347 1 178 4 103 1 198 1 
121 1 245 1 107 5 216 1 26 2 217 2 83 5 235 1 345 1 176 2 277 1 326 1 72 3 347 1 178 4 103 1 
217 1 83 1 176 1 245 1 72 1 252 1 107 1 347 1 178 1 216 1 26 1 
0 1 312 1 122 2 15 1 107 1 25 1 109 1 216 1 26 1 217 1 83 1 176 1 262 1 72 1 169 1 178 1 221 1 23 2 
0 2 122 2 340 1 161 1 25 1 26 1 205 1 72 3 230 2 169 2 103 1 191 1 312 2 15 1 107 1 174 1 109 1 217 2 83 1 176 1 262 1 178 1 221 1 23 2 
244 1 0 2 122 2 340 1 161 1 25 1 26 1 205 1 72 3 230 2 169 2 103 1 191 1 312 2 15 1 107 1 174 1 217 2 83 1 176 1 262 1 178 1 221 1 23 2 
180 1 242 1 26 1 249 1 72 4 169 1 103 1 75 2 191 1 30 1 213 1 107 3 174 1 216 1 81 1 36 1 217 1 83 3 176 1 291 1 331 1 115 2 178 3 
180 1 30 1 191 1 242 1 213 1 173 1 174 1 107 3 216 1 26 1 81 1 217 1 36 1 83 3 176 1 291 1 115 2 72 4 169 1 178 3 75 2 103 1 
83 1 176 1 287 1 107 1 178 1 26 1 
139 1 306 1 121 1 287 1 257 1 107 7 216 2 26 3 217 2 345 1 235 1 83 7 84 1 176 2 72 3 166 1 354 1 295 1 178 6 169 1 198 1 
0 1 122 2 89 2 67 1 25 1 26 1 124 4 46 2 97 1 228 5 183 1 50 2 72 1 232 2 147 9 168 4 169 1 185 1 186 1 189 4 171 1 312 1 54 1 15 1 107 1 109 1 314 2 289 1 217 1 112 1 235 1 83 1 176 1 155 2 238 2 237 1 262 1 333 1 264 2 239 2 87 2 178 1 221 4 23 2 
180 1 242 1 181 1 275 1 10 2 98 1 165 1 163 1 72 2 75 3 77 2 30 1 32 2 33 2 213 1 173 1 107 1 214 1 216 1 81 1 193 1 36 2 83 1 115 3 58 1 263 1 178 1 88 1 
120 1 180 1 287 1 107 2 26 2 217 1 235 1 83 2 176 1 72 2 354 1 178 2 169 1 
0 1 244 1 312 1 122 2 15 1 107 1 25 1 216 1 26 1 217 1 83 1 176 1 262 1 72 1 169 1 178 1 221 1 23 2 
139 1 257 1 107 1 26 2 217 1 83 1 176 1 72 1 166 1 354 1 178 1 169 1 103 1 
94 1 266 1 145 1 122 1 312 1 229 1 23 1 247 1 300 1 
131 1 60 1 247 1 
145 1 221 1 110 1 300 1 247 1 
317 1 0 1 122 1 143 1 161 1 25 1 300 1 247 1 301 1 145 1 205 1 165 1 230 2 75 2 52 1 255 1 30 1 312 1 131 1 213 1 17 1 110 1 81 1 115 2 156 1 60 1 240 1 23 1 
135 1 297 1 195 1 28 1 111 1 153 1 259 1 68 1 
297 4 14 1 123 1 200 1 93 1 111 3 153 2 259 2 68 1 35 2 47 1 195 4 304 1 28 1 
31 1 141 1 297 2 111 1 153 1 259 1 68 1 35 1 135 1 195 2 28 1 356 1 
297 3 123 2 93 1 111 1 227 1 259 1 153 1 68 1 135 1 47 2 195 3 28 1 
24 1 42 1 132 2 111 2 
182 1 135 1 297 1 195 1 28 1 68 1 
35 1 135 1 297 2 61 1 195 2 28 1 111 1 153 1 259 1 68 1 
37 1 
135 1 297 1 195 1 28 1 111 1 153 1 259 1 68 1 
252 1 111 1 153 1 259 1 
297 1 195 1 28 1 111 1 153 1 259 1 68 1 
159 1 136 1 195 1 
297 3 123 1 93 1 111 1 259 1 153 1 68 1 20 1 135 1 47 2 195 3 28 1 
35 1 297 2 231 1 195 2 28 1 111 1 153 1 259 1 68 1 
135 1 297 1 14 1 195 1 28 1 234 1 272 1 305 1 111 1 352 1 68 1 
135 1 297 1 195 1 28 1 111 1 153 1 68 1 
135 1 297 1 195 1 28 1 153 2 259 1 68 1 
297 2 111 1 153 1 175 1 68 2 135 1 134 1 195 2 28 2 357 1 
297 3 14 1 288 1 200 1 111 2 153 1 259 1 68 1 35 2 135 1 61 1 195 3 28 1 
297 2 299 1 351 1 234 2 111 1 272 1 153 1 259 1 68 1 35 1 135 1 250 1 195 2 28 1 305 1 
297 4 14 1 200 1 271 1 111 2 153 1 259 1 68 2 35 2 135 1 195 4 231 1 28 2 
35 1 135 1 297 3 47 1 61 1 195 3 28 1 111 1 153 1 259 1 68 1 
14 1 200 1 304 1 111 1 
111 1 153 1 

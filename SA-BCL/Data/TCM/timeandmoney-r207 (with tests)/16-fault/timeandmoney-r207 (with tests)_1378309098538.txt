#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 (72,189) (72,189) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 (72,189) (72,189) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 1 (72,189) (72,189) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 213 55 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (152,296) (143,176) (143,176) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 115 153 162 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 115 153 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 115 153 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (152,296) (152,296) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 298 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (152,296) (143,176) (143,176) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (152,296) (143,176) (143,176) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (152,296) (143,176) (143,176) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 213 55 288 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 2 1 1 179 2 283 2 183 1 6 2 145 1 60 1 39 1 148 3 317 2 226 1 189 1 228 1 16 7 41 7 42 2 271 1 18 1 72 1 323 1 131 3 324 4 275 1 112 2 
240 2 1 1 179 2 283 2 183 1 6 2 145 1 60 1 39 1 148 3 317 2 226 1 189 1 228 1 16 7 41 7 42 2 271 1 18 1 72 1 323 1 131 3 324 4 275 1 112 2 
240 2 1 1 179 2 283 2 183 1 6 2 145 1 60 1 39 1 148 3 317 2 226 1 189 1 228 1 16 7 41 7 42 2 271 1 18 1 72 1 323 1 131 3 324 4 275 1 112 2 
179 2 1 1 183 1 6 2 60 1 145 1 147 1 226 1 317 2 148 4 189 1 228 1 16 7 271 1 18 1 72 1 323 1 275 1 324 4 112 2 240 2 283 2 39 1 41 7 42 2 131 3 134 1 
240 1 1 1 179 1 222 1 283 1 183 2 147 1 317 1 148 3 228 1 16 4 41 4 42 1 271 1 131 2 324 3 134 1 112 1 
307 1 283 1 6 1 145 1 147 1 148 1 317 1 13 1 228 1 16 2 41 2 42 1 194 1 275 1 134 1 112 1 
1 1 179 1 222 1 183 2 6 1 147 1 317 2 148 5 228 1 16 9 191 1 271 1 18 1 323 1 324 7 112 1 240 3 283 2 39 1 41 9 211 1 42 1 131 4 134 1 
1 1 179 1 222 1 183 2 6 1 147 1 317 2 148 5 228 1 16 9 191 1 271 1 18 1 323 1 324 7 112 1 240 3 283 2 39 1 41 9 211 1 42 1 131 4 134 1 
240 1 283 2 6 1 147 1 39 1 317 2 148 2 228 1 16 3 41 3 131 1 324 1 134 1 
126 1 25 1 224 1 
190 1 126 1 249 2 
83 1 84 2 2 1 114 2 182 2 91 2 164 2 154 2 
303 1 138 2 2 1 182 2 144 2 9 1 268 1 99 1 17 1 270 1 234 1 151 1 22 1 23 1 154 2 110 1 278 1 241 1 113 1 197 1 114 3 116 1 327 1 201 1 163 1 165 2 290 1 164 2 331 1 251 1 37 2 83 1 84 2 208 2 214 1 128 1 91 3 
139 1 84 1 2 1 114 1 242 1 57 1 182 1 91 1 164 1 154 1 
114 1 160 1 30 1 57 1 202 1 310 1 286 1 164 1 173 1 126 1 70 1 91 1 25 1 277 1 
114 1 30 2 160 1 182 1 57 1 202 1 286 1 164 1 84 1 173 1 126 1 70 2 91 1 25 1 154 1 
93 1 30 1 70 1 223 1 342 1 
67 1 30 2 311 1 126 1 70 2 25 1 223 1 342 1 
30 1 70 1 223 1 
67 1 30 2 126 1 70 2 25 1 223 1 342 1 109 1 
139 1 2 1 180 1 57 1 182 1 5 1 223 2 63 1 150 2 67 1 105 1 71 1 70 5 273 1 154 1 25 1 238 2 276 1 114 1 242 1 198 1 243 1 30 5 247 1 33 4 119 1 164 1 167 2 122 1 292 1 333 1 84 1 338 4 124 1 295 1 126 1 91 1 342 2 
139 1 2 1 242 1 114 1 30 1 243 1 57 1 182 1 164 1 84 1 70 1 91 1 342 1 154 1 
126 1 
83 1 224 1 
114 1 201 1 144 1 37 1 9 1 83 1 334 1 99 1 208 1 17 1 270 1 214 1 151 1 91 1 22 1 110 1 
114 2 182 1 164 2 83 2 84 1 40 1 91 2 257 1 154 1 
114 2 199 1 201 1 164 1 144 1 9 1 37 1 84 1 99 1 208 1 17 1 336 1 270 1 214 1 151 1 274 1 91 2 22 1 154 1 110 1 
170 1 172 1 336 1 
218 1 114 5 199 1 182 1 310 1 164 5 38 1 83 1 84 4 274 2 91 5 259 1 257 1 154 4 
139 1 84 2 114 2 68 1 57 1 91 2 164 2 154 2 
83 1 84 3 114 3 182 1 274 1 91 3 164 3 154 3 
139 1 84 1 114 1 57 1 91 1 164 1 154 1 
84 1 40 1 114 1 57 1 182 1 91 1 164 1 257 1 154 1 
138 1 2 1 182 2 57 1 4 1 144 1 9 1 268 1 99 1 17 1 270 1 151 1 70 1 272 1 274 1 22 1 23 1 154 3 110 1 278 1 241 1 113 1 114 4 160 1 30 1 116 1 327 1 199 1 201 1 202 1 286 1 165 2 290 1 164 3 331 1 251 1 37 1 83 1 84 3 208 1 173 1 214 1 91 4 257 1 
83 1 84 1 114 2 310 1 91 2 164 2 274 1 259 1 154 1 
114 3 30 1 160 1 199 1 182 1 57 1 202 1 4 1 286 1 164 3 84 3 337 1 173 1 126 1 70 1 274 2 91 3 257 1 154 3 
114 2 182 1 164 2 84 2 170 1 336 1 274 1 91 2 257 1 154 2 
114 1 201 1 144 1 37 1 9 1 83 1 99 1 208 1 17 1 270 1 214 1 151 1 91 1 22 1 110 1 
301 1 114 1 201 1 144 1 37 1 9 1 83 1 99 1 208 1 17 1 214 1 151 1 91 1 20 1 22 1 
241 1 138 2 116 1 32 1 96 1 59 1 290 1 165 2 331 2 167 1 268 1 170 1 172 1 336 1 235 1 130 1 217 1 23 1 278 1 
84 1 114 1 160 1 68 1 57 1 91 1 164 1 154 1 
181 1 
181 1 
188 1 111 1 
188 1 111 1 
188 1 111 1 
181 1 
181 1 
188 1 181 2 111 1 
181 1 
181 1 
181 1 
181 1 
181 1 
302 1 114 1 30 1 264 1 55 1 181 1 117 1 118 1 142 1 330 1 164 1 11 1 84 1 269 1 213 1 70 1 91 1 154 1 135 1 
264 2 30 2 181 2 117 2 143 1 118 2 142 2 330 2 267 1 269 1 176 1 152 1 126 1 70 2 239 1 
179 1 42 1 112 1 
42 1 194 1 112 1 
179 2 231 1 125 1 284 1 194 1 112 3 
0 1 179 1 125 1 284 1 194 1 112 2 
179 1 125 2 284 1 194 1 112 2 
304 1 30 4 309 1 5 1 289 1 121 1 223 1 206 1 67 1 126 1 70 4 25 1 342 3 
93 1 30 4 309 1 5 1 266 1 121 1 223 2 67 1 126 1 70 4 25 1 342 3 343 1 27 1 
139 1 2 1 304 1 180 1 57 1 182 1 58 1 309 1 63 1 66 1 150 1 232 1 104 1 71 1 70 3 154 1 25 1 280 1 114 1 242 1 243 1 30 3 33 1 164 1 289 1 249 1 206 1 84 1 124 1 338 2 126 1 91 1 342 2 135 1 
137 1 304 1 180 1 58 1 309 1 63 1 66 1 150 1 232 1 104 1 71 1 70 2 280 1 30 2 33 1 249 1 289 1 206 1 124 1 338 2 342 1 135 1 
151 1 79 1 224 1 
151 1 35 1 
159 1 
214 1 151 1 22 1 
151 1 81 1 
151 1 22 1 
157 1 214 1 151 3 79 2 22 1 204 1 
29 1 50 1 138 7 197 4 119 1 287 1 331 3 167 1 150 1 85 1 295 1 235 2 105 1 217 3 341 1 297 2 155 1 
29 1 50 1 138 7 197 4 119 1 287 1 331 3 167 1 150 1 85 1 295 1 235 2 105 1 217 3 341 1 297 2 155 1 
29 1 50 1 138 7 197 4 54 1 119 1 287 1 331 3 167 1 150 1 85 1 295 1 235 2 105 1 217 3 341 1 297 2 155 1 
50 2 138 31 178 1 146 1 268 1 150 4 230 3 232 3 235 5 105 2 104 3 155 1 278 1 326 1 241 1 29 5 197 16 116 1 32 3 78 1 119 1 287 1 165 2 331 15 167 4 85 1 171 1 254 4 43 1 295 2 88 1 297 3 341 2 217 10 
50 1 138 9 178 1 220 1 268 2 150 1 235 3 105 1 278 2 241 2 29 1 197 5 116 2 203 1 287 1 119 1 165 4 167 1 331 4 85 1 295 1 297 2 341 1 217 4 
179 1 6 1 144 1 9 1 147 1 148 1 317 1 12 1 228 1 15 1 16 2 17 1 320 1 231 1 107 1 21 1 19 1 194 1 324 1 112 2 283 1 291 1 250 1 37 1 208 1 41 2 169 1 42 1 340 1 134 1 
179 1 184 1 6 1 144 1 9 1 147 1 148 1 317 1 65 1 12 1 15 1 16 3 17 1 231 1 107 1 21 1 194 1 324 2 156 1 112 2 283 1 291 1 250 1 37 1 208 1 41 3 169 1 42 1 340 1 134 1 
179 1 6 1 184 1 144 1 9 1 147 1 148 1 65 1 12 1 15 1 16 2 17 1 231 1 107 1 21 1 194 1 324 2 112 2 250 1 37 1 208 1 41 2 169 1 42 1 134 1 
94 1 161 1 306 1 283 1 329 1 6 2 144 1 250 2 9 1 315 1 37 1 317 1 15 2 16 1 41 1 99 1 208 1 17 1 69 1 151 1 21 2 22 1 156 1 
179 1 283 1 6 1 184 1 291 1 144 1 250 1 9 1 37 1 317 1 12 1 228 1 169 1 16 1 41 1 208 1 15 1 17 1 231 1 320 1 42 1 107 1 340 1 194 1 21 1 112 2 
318 1 
208 1 99 1 30 1 5 1 70 1 144 1 37 1 
57 1 310 1 8 1 223 2 64 1 67 1 70 3 277 1 109 1 114 1 30 3 160 1 245 1 202 1 286 1 164 1 252 1 173 1 91 1 132 1 216 1 258 2 
57 1 310 1 223 1 64 1 316 1 67 1 70 3 25 1 277 1 109 1 114 1 30 3 160 1 245 1 202 1 286 1 164 1 252 1 173 1 126 1 91 1 132 1 216 1 258 3 
57 1 310 1 8 1 223 2 64 1 316 1 67 1 70 3 25 1 109 1 277 1 114 1 281 1 30 3 160 1 245 1 202 1 286 1 164 1 252 1 173 1 126 1 91 1 132 1 216 1 258 3 
140 1 57 1 310 1 5 1 223 3 8 2 64 1 67 1 70 3 153 1 277 1 109 1 114 1 281 2 30 3 160 1 115 1 245 1 162 1 202 1 286 1 164 1 252 1 173 1 91 1 132 1 216 1 258 2 
114 1 160 1 30 2 245 1 57 1 202 1 310 1 286 1 5 1 164 1 64 1 252 1 173 1 70 2 91 1 258 2 216 1 132 1 277 1 
140 1 114 1 160 1 30 2 115 1 245 1 57 1 202 1 310 1 5 1 286 1 164 1 64 1 252 1 173 1 70 2 91 1 258 2 216 1 132 1 277 1 
140 1 114 1 160 1 30 2 115 1 245 1 57 1 202 1 310 1 5 1 286 1 164 1 64 1 252 1 173 1 70 2 91 1 258 2 216 1 132 1 277 1 
279 1 114 1 160 1 30 2 245 1 57 1 202 1 310 1 5 1 286 1 164 1 64 1 252 1 173 1 87 1 70 2 91 1 258 2 216 1 132 1 277 1 
140 1 57 1 310 1 5 1 8 1 223 1 64 1 316 1 70 2 153 1 277 1 114 1 281 1 30 2 160 1 115 1 245 1 202 1 286 1 164 1 252 1 173 1 91 1 132 1 216 1 258 3 
140 1 57 1 310 1 5 1 8 1 223 1 64 1 316 1 70 2 153 1 277 1 114 1 281 1 30 2 160 1 115 1 245 1 202 1 286 1 164 1 252 1 173 1 91 1 132 1 216 1 258 3 
114 1 160 1 30 2 245 1 57 1 202 1 310 1 286 1 5 1 164 1 64 1 252 1 173 1 70 2 91 1 258 2 216 1 132 1 277 1 
138 6 224 1 268 1 150 1 235 2 105 1 23 1 278 1 241 1 197 3 116 1 287 1 119 1 165 2 290 1 167 1 331 3 83 2 85 1 170 1 172 1 336 1 295 1 130 1 217 2 297 1 
48 1 303 1 52 1 138 15 219 1 268 2 150 3 230 3 232 3 193 1 104 3 23 2 278 2 241 2 326 2 113 1 29 2 197 10 116 2 78 1 165 4 290 1 331 5 83 1 172 12 170 3 175 1 254 4 336 12 217 2 
52 1 138 2 303 1 144 1 61 1 9 1 97 1 268 1 99 1 17 1 270 1 151 1 274 1 22 1 23 1 154 1 110 1 278 1 241 1 113 1 114 2 197 1 116 1 199 1 201 1 290 1 164 1 165 2 331 1 37 1 83 1 84 1 208 1 334 1 170 1 214 1 90 1 91 2 
9 1 268 2 99 1 17 1 270 1 104 1 274 1 22 1 23 2 110 1 278 2 113 1 29 2 114 2 197 3 116 2 199 1 200 1 201 1 290 2 37 1 208 1 210 1 214 1 217 3 52 1 138 5 53 1 144 1 150 1 232 1 235 1 151 1 154 1 241 2 158 1 165 4 164 1 331 2 251 1 84 1 172 2 170 2 336 2 255 1 91 2 
51 1 303 1 138 2 141 1 184 1 144 7 9 2 315 1 98 1 268 2 99 2 17 2 151 3 19 1 274 1 22 2 237 1 154 1 23 2 28 1 26 1 278 2 241 2 113 1 114 1 197 1 116 2 161 1 163 2 164 1 165 4 290 2 331 1 37 8 84 1 208 8 256 1 130 1 91 1 
52 1 138 3 263 1 182 1 268 1 150 1 232 1 235 1 104 1 154 1 23 1 278 1 241 1 114 1 197 1 116 1 32 1 165 2 290 1 164 1 167 1 331 2 84 1 170 1 172 1 336 1 91 1 217 1 257 1 
241 1 29 1 138 2 197 2 116 1 290 1 165 2 268 1 150 1 170 1 172 1 336 1 102 1 104 1 130 1 217 1 23 1 278 1 
241 1 138 2 116 1 32 1 59 1 290 1 165 2 167 1 331 2 268 1 170 1 172 1 336 1 235 1 130 1 217 1 23 1 278 1 
138 4 268 1 150 1 232 1 235 1 104 1 23 1 278 1 241 1 29 1 197 2 116 1 32 1 165 2 290 1 167 1 331 2 172 2 170 2 336 2 130 1 217 2 
241 1 29 1 138 2 197 2 116 1 290 1 165 2 268 1 150 1 170 1 172 1 336 1 102 1 256 1 104 1 217 1 23 1 278 1 
241 1 138 2 116 1 32 1 59 1 290 1 165 2 167 1 331 2 268 1 170 1 172 1 336 1 235 1 256 1 217 1 23 1 278 1 
241 1 29 1 138 2 197 2 116 1 290 1 165 2 268 1 150 1 170 1 172 1 232 1 336 1 256 1 104 1 217 1 23 1 278 1 
241 1 29 1 138 2 197 2 116 1 290 1 165 2 268 1 150 1 170 1 172 1 232 1 336 1 104 1 217 1 23 1 278 1 
303 1 138 2 144 1 9 1 268 1 99 1 17 1 270 1 151 1 22 1 23 1 110 1 278 1 241 1 113 1 197 1 114 1 116 1 201 1 290 1 165 2 331 1 251 1 37 1 83 1 208 1 214 1 91 1 
301 1 303 1 138 2 144 1 9 1 10 1 268 1 99 1 17 1 151 1 20 1 22 1 23 1 278 1 241 1 113 1 197 1 114 1 116 1 201 1 290 1 165 2 331 1 37 1 83 1 208 1 214 1 91 1 
241 1 29 1 138 2 52 1 197 2 116 1 290 1 165 2 268 1 150 1 170 1 172 1 232 1 336 1 104 1 217 1 23 1 278 1 
138 2 144 1 9 1 268 1 150 1 17 1 232 1 270 1 104 1 151 1 19 1 22 1 23 1 110 1 278 1 241 1 29 1 197 2 114 1 116 1 200 1 201 1 290 1 165 2 251 1 37 1 208 1 170 1 172 1 336 1 214 1 91 1 217 1 
52 1 138 2 182 1 268 1 150 1 232 1 104 1 154 1 23 1 278 1 241 1 29 1 114 1 197 2 116 1 165 2 290 1 164 1 84 1 172 1 170 1 336 1 91 1 217 1 257 1 92 1 
49 2 138 19 305 1 3 1 220 1 268 2 150 3 230 1 232 3 235 3 104 3 108 1 278 2 241 2 326 1 29 3 197 9 116 2 76 1 32 3 78 1 120 1 165 4 331 10 167 3 254 2 177 1 47 2 217 6 133 1 
261 1 49 3 178 1 138 24 305 1 220 1 313 1 268 2 150 3 230 2 232 3 104 3 108 2 24 1 278 2 241 2 29 1 197 13 116 2 76 1 32 2 282 1 78 2 165 4 167 2 331 11 294 1 123 1 254 2 47 1 177 1 217 1 133 2 
261 1 49 3 138 32 305 1 220 1 313 1 268 2 150 4 230 3 232 4 235 1 104 4 108 1 24 1 278 2 241 2 326 1 29 3 197 15 116 2 76 1 32 4 282 1 78 3 248 1 120 1 165 4 331 17 167 4 294 1 123 1 254 4 47 1 177 1 217 4 133 2 
261 1 49 4 178 1 138 33 305 1 220 1 313 1 268 3 150 4 230 3 232 4 235 2 104 4 108 1 24 1 278 3 241 3 326 1 29 3 197 17 116 3 76 1 32 3 282 1 78 3 248 1 120 1 165 6 331 16 167 3 294 1 123 1 254 4 47 1 177 1 217 5 133 2 
261 1 49 4 48 2 178 1 138 52 305 1 220 1 313 1 268 2 150 8 230 4 232 7 235 7 105 1 104 7 108 1 24 1 278 2 241 2 326 2 29 7 197 27 116 2 76 1 32 7 282 1 78 2 119 1 287 1 165 4 331 25 167 8 294 1 85 1 123 1 254 4 295 1 47 1 177 1 297 1 217 14 133 1 
264 1 181 1 296 1 117 1 152 1 118 1 330 1 
213 1 
264 1 181 1 117 1 118 1 330 1 298 1 
246 1 
285 1 
30 1 264 1 181 1 117 1 143 1 118 1 142 2 330 1 267 1 269 1 176 1 152 1 126 1 70 1 239 1 
30 1 264 1 181 1 117 1 143 1 118 1 142 2 330 1 267 1 269 1 176 1 152 1 126 1 70 1 239 1 
30 1 264 1 181 1 117 1 143 1 118 1 142 2 330 1 267 1 269 1 176 1 152 1 126 1 70 1 239 1 
246 1 
246 1 
285 1 
285 1 
225 1 253 1 
302 1 264 1 30 1 55 1 181 1 117 1 118 1 142 1 330 1 288 1 11 1 267 1 213 1 70 1 342 1 135 1 239 1 
52 1 51 1 303 1 138 2 265 1 314 1 144 2 9 1 268 1 17 1 319 1 151 1 22 1 23 1 28 1 278 1 241 1 113 1 74 1 114 2 197 1 116 1 163 2 290 1 164 2 165 2 331 1 37 2 208 2 91 2 260 1 
179 1 184 1 144 2 9 1 37 2 12 1 208 2 15 1 169 1 17 1 231 1 42 1 174 1 212 1 44 1 340 1 194 1 19 1 112 2 
179 1 184 1 144 1 37 1 9 1 293 1 12 1 208 1 15 1 169 1 17 1 231 1 42 1 212 1 340 1 194 1 112 2 
161 1 144 1 9 1 37 1 315 1 149 1 99 1 208 1 15 1 17 1 69 1 44 1 151 1 22 1 
179 1 184 1 144 1 37 1 9 1 12 1 208 1 15 1 169 1 17 1 231 1 42 1 174 1 212 1 44 1 340 1 194 1 112 2 
103 1 
338 1 33 1 126 1 273 1 25 1 292 1 224 1 
5 1 
208 1 99 1 5 1 144 1 37 1 
5 1 
140 1 30 1 5 1 70 1 
30 1 67 1 126 1 70 1 25 1 223 1 
208 1 99 1 322 1 5 1 144 1 37 1 
5 1 273 1 
138 1 2 1 182 2 144 1 9 1 268 1 99 1 17 1 270 1 151 1 22 1 154 2 23 1 110 1 278 1 241 1 113 1 114 3 116 1 327 1 201 1 165 2 164 2 290 1 331 1 251 1 37 1 83 1 84 2 208 1 214 1 91 3 
5 1 
280 1 150 1 232 1 338 2 58 1 104 1 249 1 
264 1 118 1 332 1 
229 1 264 1 118 1 46 1 225 1 
264 1 118 1 332 1 
264 1 118 1 332 1 
168 1 264 1 118 1 
168 1 264 1 118 1 
168 1 264 1 118 1 
264 1 118 1 
181 1 
241 2 29 1 138 8 178 1 197 4 116 2 119 1 287 1 165 4 167 1 331 4 268 2 150 1 85 1 295 1 235 2 105 1 297 1 217 3 278 2 
138 6 197 3 287 1 119 1 331 3 167 1 224 1 150 1 85 1 295 1 235 2 105 1 297 1 217 2 
241 1 29 1 138 4 197 2 32 1 116 1 165 2 331 2 167 1 268 1 150 1 232 1 235 1 104 1 217 2 73 1 278 1 
326 1 29 1 138 7 197 3 32 1 78 1 167 1 331 4 150 1 230 1 232 1 254 2 235 1 104 1 217 2 
48 1 138 23 178 2 262 1 268 2 150 3 230 2 232 2 235 5 105 2 104 2 193 1 278 2 326 1 241 2 29 4 197 11 32 2 116 2 119 1 287 1 165 4 331 12 167 3 85 1 254 2 295 2 297 1 217 9 
138 1 254 1 331 1 
138 1 197 1 230 1 
241 1 29 1 138 6 197 3 116 1 32 1 165 2 331 3 167 1 268 1 150 1 210 1 232 1 235 2 104 1 73 1 217 3 278 1 
138 12 220 1 313 1 268 1 150 2 230 1 232 2 235 1 104 2 24 1 278 1 241 1 29 1 197 6 116 1 32 2 282 1 78 1 165 2 331 6 167 2 294 1 123 1 254 1 217 2 
29 1 138 6 197 3 119 1 167 1 331 3 150 1 295 1 235 1 105 1 217 2 
241 1 29 1 262 1 138 3 178 1 197 1 116 1 287 1 165 2 331 2 268 1 85 1 295 1 235 1 105 1 217 2 278 1 
138 8 220 1 268 1 150 1 230 1 235 2 105 1 278 1 241 1 197 4 116 1 78 1 287 1 119 1 165 2 167 1 331 4 294 1 85 1 254 1 295 1 297 1 217 2 
138 11 220 1 268 2 150 2 230 1 232 1 235 2 105 1 104 1 73 1 278 2 241 2 326 1 29 1 197 6 116 2 78 1 119 1 287 1 165 4 167 1 331 5 294 1 85 1 254 2 295 1 297 1 217 3 
138 13 220 1 313 1 268 2 150 2 230 1 232 2 104 2 73 1 24 1 278 2 241 2 29 1 197 6 116 2 32 2 282 1 78 1 165 4 331 7 167 2 294 1 123 1 254 1 217 1 
178 1 138 17 220 1 313 1 268 3 150 3 230 1 232 2 235 3 105 1 104 2 73 1 24 1 278 3 241 3 29 2 197 10 116 3 32 1 282 1 78 1 119 1 287 1 165 6 331 7 167 2 294 1 85 1 123 1 254 1 295 1 297 1 217 5 
138 8 220 1 268 1 150 1 230 1 235 2 105 1 278 1 241 1 197 4 116 1 78 1 287 1 119 1 165 2 167 1 331 4 294 1 85 1 254 1 295 1 297 1 217 2 
138 12 220 1 313 1 268 1 150 2 230 1 232 2 235 1 104 2 24 1 278 1 241 1 29 1 197 6 116 1 32 2 282 1 78 1 165 2 331 6 167 2 294 1 123 1 254 1 217 2 
178 1 138 12 220 1 313 1 268 3 150 2 230 1 232 2 104 2 73 1 24 1 278 3 241 3 29 1 197 7 116 3 32 1 282 1 78 1 165 6 331 5 167 1 294 1 123 1 254 1 217 1 
178 1 138 12 220 1 313 1 268 3 150 2 230 1 232 2 235 2 104 2 24 1 278 3 241 3 29 2 197 7 116 3 32 1 282 1 78 1 120 1 165 6 331 5 167 1 294 1 123 1 254 1 217 4 
29 3 138 7 197 3 287 2 119 1 331 4 167 1 150 1 85 1 295 3 235 3 105 3 217 6 
178 1 138 12 220 1 313 1 268 3 150 2 230 1 232 2 104 2 24 1 278 3 241 3 29 1 197 7 116 3 32 1 282 1 78 1 120 1 165 6 331 5 167 1 294 1 123 1 254 1 217 1 
241 1 29 2 138 10 197 5 116 1 220 1 119 1 165 2 331 5 167 2 333 1 268 1 150 2 295 2 235 3 105 2 217 5 278 1 
241 1 29 1 138 2 197 2 116 1 220 1 165 2 268 1 150 1 104 1 217 1 278 1 
241 1 29 1 138 4 197 2 32 1 116 1 220 1 165 2 331 2 167 1 268 1 150 1 232 1 235 1 104 1 217 2 278 1 
241 3 29 1 178 1 262 1 138 3 197 1 116 3 220 1 120 1 165 6 331 2 268 3 295 1 235 1 105 1 217 2 278 3 
262 1 178 2 138 34 220 1 146 1 268 5 150 5 230 3 232 3 235 7 105 3 104 3 73 1 278 5 241 5 326 1 29 5 197 16 116 5 32 3 78 1 119 2 287 1 120 1 165 10 331 18 167 5 85 1 43 1 254 4 295 3 88 1 297 1 217 12 
83 1 114 1 310 1 91 1 164 1 259 1 62 1 
83 1 114 1 339 1 221 1 310 1 89 1 91 1 164 1 259 1 62 1 299 1 186 1 
208 1 99 1 17 1 161 1 151 1 22 1 144 1 9 1 315 1 224 1 37 1 
114 2 201 1 164 1 144 1 37 1 9 1 83 1 84 1 99 1 208 1 17 1 270 1 214 1 151 1 274 1 91 2 22 1 154 1 
114 2 75 1 160 1 57 1 201 1 164 2 81 1 144 1 37 1 9 1 83 1 84 2 208 1 17 1 173 1 270 1 214 2 151 3 274 1 91 2 22 2 154 1 136 1 
301 1 57 1 144 2 9 1 17 1 151 3 274 1 22 2 154 1 75 1 114 2 31 1 160 1 201 1 164 2 81 1 37 2 83 1 84 2 208 2 173 1 214 2 91 2 136 1 
223 1 144 3 9 1 187 1 227 1 99 1 17 1 151 4 70 2 22 1 25 1 75 1 31 1 30 2 79 1 286 1 35 1 81 1 37 3 208 3 214 1 126 1 136 1 
75 1 31 1 30 2 328 1 286 1 79 1 81 1 144 3 35 1 223 1 37 3 9 1 99 1 208 3 17 1 214 1 151 4 126 1 70 2 22 1 25 1 136 1 
208 1 17 1 144 1 237 1 9 1 37 1 
141 1 184 1 7 1 185 1 144 6 9 2 98 1 99 2 17 3 151 3 19 1 22 2 237 1 26 1 28 1 157 1 163 1 37 7 82 1 208 7 214 1 
9 1 268 2 17 1 270 1 105 1 19 1 274 1 22 1 23 2 110 1 278 2 114 2 197 3 116 2 200 1 201 1 287 1 119 1 290 2 37 1 208 1 295 1 214 1 217 2 297 1 52 1 138 6 144 1 150 1 235 2 151 1 154 1 158 1 241 2 165 4 164 1 167 1 331 3 251 1 83 2 84 1 85 1 170 1 172 1 336 1 91 2 260 1 
30 3 328 1 286 1 79 1 5 2 223 2 35 1 144 1 37 1 207 1 99 1 208 1 67 1 233 1 322 1 151 2 70 3 195 1 342 1 
157 1 79 1 144 2 37 2 9 1 208 2 17 2 101 1 214 1 151 2 19 1 22 1 237 1 
31 1 161 1 144 4 37 4 315 1 9 1 99 1 208 4 17 1 321 1 151 1 19 1 22 1 
75 1 141 1 161 1 144 4 315 1 37 5 9 2 99 1 208 5 17 2 321 1 151 3 19 1 22 2 26 1 28 1 
75 1 141 1 161 1 144 4 315 1 37 5 36 1 9 2 99 1 208 5 17 2 321 1 151 3 19 1 22 2 28 1 
75 1 95 1 7 1 185 1 166 1 144 2 37 2 9 1 208 2 209 1 17 2 214 1 151 1 22 1 
12 1 208 1 99 1 17 1 42 1 194 1 144 1 9 1 37 1 112 1 
208 2 17 1 265 1 151 1 184 1 19 1 22 1 144 2 9 1 37 2 28 1 
301 1 114 2 201 1 164 1 144 1 37 1 9 1 83 1 84 1 99 1 208 1 17 1 214 1 151 1 274 1 91 2 22 1 154 1 
157 1 75 1 7 1 185 1 144 1 37 1 9 1 82 1 208 1 17 2 214 1 151 1 22 1 
83 1 14 1 308 1 236 1 300 1 
2 1 139 1 308 1 182 1 57 1 70 1 25 1 154 1 242 1 114 1 30 1 243 1 244 1 164 1 84 1 126 1 127 1 215 1 91 1 342 1 
74 1 114 1 308 1 314 1 164 1 14 1 319 1 236 1 91 1 
308 1 127 1 215 1 
148 1 134 1 224 1 147 1 
148 1 317 1 41 1 16 1 283 1 134 1 147 1 
41 1 6 1 250 1 
283 1 147 1 148 1 317 1 228 1 16 3 41 3 192 1 45 1 129 1 275 2 134 1 
148 1 317 1 41 2 16 2 283 1 183 1 324 1 134 1 147 1 
148 1 317 1 179 1 228 1 41 1 16 1 42 1 271 1 283 1 131 1 112 1 
148 1 317 1 228 1 41 1 16 1 283 1 134 1 
317 1 228 1 41 1 16 1 283 1 134 2 147 1 
77 1 283 2 80 1 148 1 317 2 228 1 16 2 41 2 134 1 325 1 
240 1 283 1 147 1 317 1 148 2 228 1 16 3 41 3 18 1 323 1 131 1 324 2 134 1 
179 1 283 1 147 1 148 1 317 1 228 1 16 2 41 2 231 1 42 1 106 1 194 1 324 1 134 1 112 2 
240 1 283 2 222 1 183 1 147 1 317 2 148 2 228 1 16 4 41 4 131 1 324 2 134 1 
148 1 317 1 228 1 41 1 16 1 283 1 134 1 147 1 
283 1 147 1 317 1 148 1 228 1 16 3 41 3 323 1 324 1 275 1 134 1 
148 1 240 1 56 1 131 1 
148 1 134 1 
148 1 317 1 228 1 41 2 16 2 283 1 323 1 324 1 134 1 147 1 
196 1 
148 1 317 1 228 1 41 1 16 1 283 1 134 1 147 1 
240 1 56 1 283 1 147 2 317 1 148 3 16 4 41 4 192 1 45 1 131 1 275 1 324 2 134 2 
283 1 147 1 148 1 317 1 228 1 16 2 41 2 100 1 191 1 86 1 324 1 134 1 
283 1 34 1 147 1 148 1 317 1 228 1 16 3 41 3 192 2 45 1 275 2 134 1 
148 1 205 1 312 1 
317 1 228 1 41 1 16 1 335 1 283 1 

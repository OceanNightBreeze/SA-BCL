#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 58 (120,192,311) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) (138,243) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (138,243) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) (138,243) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (5,32,121,214) (5,32,121,214) (5,32,121,214) 162 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 159 195 124 161 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
126 1 324 1 226 1 
28 1 226 1 159 2 
37 2 147 2 139 1 265 2 152 1 254 2 92 2 116 2 
89 2 212 1 252 1 254 3 130 1 163 1 218 1 164 2 92 2 14 1 54 2 165 1 264 1 24 1 265 2 102 1 307 1 229 1 271 2 65 1 183 1 231 1 314 1 186 2 139 1 140 1 30 1 112 1 116 3 145 1 146 1 37 2 147 2 201 1 79 1 152 1 153 1 
37 1 147 1 265 1 152 1 215 1 254 1 92 1 319 1 116 1 
272 1 125 1 232 1 215 1 254 2 48 1 316 1 92 2 319 1 116 2 15 1 37 1 147 1 80 1 324 1 226 1 82 1 265 1 152 1 60 1 288 1 
272 2 125 1 232 1 215 1 254 2 48 1 316 2 92 2 319 1 116 2 15 1 147 2 37 2 80 1 324 1 226 1 152 1 265 2 288 1 
272 1 118 1 316 1 122 1 137 1 
272 2 215 1 254 1 316 2 92 1 319 1 116 1 196 1 37 1 147 1 80 1 324 1 132 1 226 1 265 1 152 1 137 1 122 1 
272 1 316 1 122 1 
272 1 215 1 254 1 316 1 92 1 319 1 116 1 147 1 37 1 80 1 152 1 265 1 137 1 
226 1 
272 2 324 1 226 1 316 2 278 1 122 1 196 1 137 1 
272 5 313 1 210 1 189 2 316 5 238 1 36 2 196 1 73 1 240 2 220 1 280 1 21 1 224 1 324 1 226 1 26 1 137 2 122 2 
183 1 140 1 212 1 252 1 129 1 254 2 130 1 11 1 164 1 92 1 116 2 54 1 37 1 79 1 24 1 265 1 286 1 102 1 307 1 271 1 
126 1 139 1 
107 1 139 1 48 1 254 2 92 2 259 1 116 2 147 1 37 1 265 1 206 1 
141 1 286 1 17 1 
183 1 139 1 212 1 140 1 252 1 254 1 130 1 164 1 116 1 241 1 54 1 79 1 24 1 102 1 307 1 271 1 
147 1 37 3 139 1 129 1 265 3 254 3 92 3 116 3 
37 1 265 1 254 1 92 1 319 1 116 1 
37 1 147 1 265 1 48 1 254 1 206 1 92 1 259 1 116 1 
89 1 252 1 254 4 11 1 163 1 164 1 12 1 92 3 14 1 15 1 24 1 265 3 102 1 271 1 107 1 272 1 183 1 186 2 112 1 116 4 37 3 201 1 206 1 288 1 125 1 212 1 129 1 48 2 130 1 218 1 54 1 307 1 229 1 65 1 232 1 314 1 140 1 139 1 316 1 145 1 147 2 146 1 79 1 152 1 330 1 
37 1 139 1 265 1 129 1 6 1 254 2 60 1 92 2 116 2 
272 1 125 1 232 1 129 2 48 1 254 3 7 1 316 1 11 1 92 3 116 3 15 1 147 1 37 3 226 1 265 3 206 1 288 1 330 1 
37 1 147 1 265 1 254 1 286 1 206 1 92 1 116 1 
183 1 139 1 212 1 140 1 252 1 254 1 130 1 164 1 116 1 54 1 79 1 24 1 102 1 307 1 271 1 
183 1 139 1 140 1 252 1 254 1 130 1 164 1 116 1 54 1 19 1 79 1 300 1 24 1 102 1 271 1 
65 1 89 2 184 1 186 2 141 1 8 1 163 1 318 1 14 1 145 1 146 1 151 1 201 2 286 1 309 1 229 1 
37 1 265 1 275 1 48 1 254 1 92 1 15 1 116 1 
107 1 139 1 129 2 48 1 254 4 11 1 92 4 116 4 37 4 147 1 265 4 228 1 206 1 64 1 
37 1 265 1 254 1 92 1 319 1 116 1 
293 1 192 1 
293 1 192 1 
58 1 120 1 
58 1 120 1 
58 1 120 1 
293 1 167 1 192 1 
311 1 293 1 192 1 
293 1 58 1 120 1 192 1 
293 1 167 1 192 1 
293 1 167 1 192 1 
293 1 204 1 192 1 
293 1 204 1 192 1 
293 1 204 1 192 1 
207 1 273 1 272 2 247 3 293 2 292 1 27 1 128 2 192 2 316 2 263 2 149 2 222 2 299 1 168 1 119 1 226 1 328 1 136 2 
247 1 293 1 292 1 128 1 254 2 257 1 92 2 263 1 53 1 298 1 265 2 136 1 272 1 311 1 139 1 192 1 316 1 143 1 114 1 144 1 116 2 37 2 149 1 325 1 
74 1 150 1 61 1 
150 1 61 1 287 1 
74 2 181 1 150 3 142 1 287 1 177 1 
74 1 52 1 150 2 142 1 287 1 177 1 
74 1 150 2 142 2 287 1 177 1 
250 2 257 1 13 1 95 1 56 1 166 1 298 1 224 2 226 2 309 1 137 4 106 2 272 5 313 3 28 1 189 1 191 1 316 5 143 1 34 1 36 1 238 1 240 1 196 1 151 1 78 1 202 2 324 1 284 1 159 3 122 1 158 1 
47 1 56 3 298 4 166 2 224 6 225 5 226 5 308 1 309 3 137 7 106 6 272 9 313 8 28 3 109 1 189 2 191 1 316 9 238 1 36 2 73 1 196 1 240 2 242 1 151 3 78 3 118 5 202 6 324 1 284 3 246 1 289 1 159 9 122 6 158 2 
250 1 95 1 56 1 166 1 298 1 224 2 226 3 309 1 137 2 272 3 106 2 313 3 28 2 189 1 316 3 34 1 36 1 240 1 73 1 151 1 78 1 324 1 202 2 284 1 158 1 159 4 
250 2 95 1 56 2 166 1 298 2 224 4 226 4 309 2 137 3 106 4 272 4 313 5 28 3 189 1 316 4 34 1 36 1 240 1 73 1 242 1 151 2 78 2 324 1 202 4 284 2 246 1 289 1 159 7 158 1 
183 1 126 1 50 1 
183 1 237 1 
69 1 
183 1 102 1 
198 1 183 3 1 1 24 1 102 1 50 2 
183 1 24 1 102 1 
183 1 33 1 
89 7 249 2 70 3 30 4 75 1 151 1 322 1 97 1 201 3 301 1 244 1 284 1 62 1 84 1 270 1 63 1 291 2 
89 7 249 2 70 3 30 4 75 1 151 1 322 1 97 1 201 3 301 1 244 1 284 1 62 1 84 1 270 1 63 1 291 2 
89 7 249 2 70 3 30 4 75 1 151 1 322 1 97 1 201 3 301 1 244 1 284 1 62 1 84 1 270 1 104 1 63 1 291 2 
209 1 88 1 89 22 211 4 249 1 14 1 56 3 97 1 301 4 227 3 270 1 309 3 103 1 229 1 63 2 65 1 186 2 30 11 70 7 239 1 197 1 145 1 322 1 78 3 151 3 201 11 284 3 245 1 329 1 84 1 291 3 
89 9 249 2 14 2 98 1 97 1 301 1 62 1 103 1 229 2 63 1 65 2 186 4 30 5 70 4 145 2 75 1 282 1 151 1 322 1 201 4 244 1 284 1 84 1 291 3 
68 1 162 1 32 1 5 1 121 1 
243 1 68 1 32 1 5 1 121 1 
68 1 214 1 121 1 138 1 
243 1 68 1 32 1 5 1 121 1 
68 1 162 1 32 1 5 1 121 1 
44 1 
90 1 252 2 254 1 164 2 92 1 15 1 166 1 169 1 171 2 102 1 174 1 178 2 105 1 271 2 272 5 183 1 28 2 189 1 276 1 190 2 36 1 195 1 196 3 116 1 281 4 199 1 117 1 40 1 205 1 288 1 122 6 208 2 125 1 127 1 48 1 130 1 54 2 224 2 226 4 305 1 306 1 60 1 313 2 233 2 232 1 140 1 315 2 316 5 238 1 240 1 76 2 324 3 82 1 159 2 87 1 
125 1 127 1 254 1 48 1 92 1 15 1 226 2 306 1 60 1 174 1 272 3 232 1 190 1 316 3 278 1 196 1 116 1 281 2 117 1 324 2 82 1 288 1 87 1 122 2 
272 2 125 1 233 1 232 1 127 1 48 1 254 1 316 2 92 1 15 1 116 1 281 3 117 1 324 2 226 2 82 1 306 1 60 1 174 1 288 1 87 1 
125 1 127 1 254 1 48 1 92 1 15 1 226 3 306 1 60 1 174 1 272 3 232 1 233 1 315 1 190 1 316 3 278 1 196 1 116 1 281 3 117 1 324 3 82 1 288 1 87 1 122 2 
4 1 254 2 92 2 15 1 172 1 171 2 265 1 174 1 178 2 272 5 28 2 189 1 190 4 31 1 278 1 36 1 195 1 116 2 196 3 37 1 281 4 199 1 117 1 288 1 122 7 124 1 208 2 125 1 127 1 215 1 48 1 224 1 226 3 306 1 60 1 313 1 232 1 233 2 315 4 316 5 238 1 319 1 240 1 147 1 321 1 76 2 80 1 324 3 82 1 152 1 87 1 
254 1 92 1 15 1 171 2 174 1 178 2 272 4 28 2 189 1 190 2 276 1 36 1 195 1 116 1 196 2 281 4 199 1 117 1 288 1 122 4 208 2 125 1 127 1 48 1 224 1 226 4 306 1 60 1 313 1 232 1 233 2 315 2 316 4 238 1 240 1 76 2 324 3 82 1 87 1 159 2 
4 1 254 2 92 2 15 1 172 1 171 2 265 1 174 1 178 2 272 4 28 2 189 1 190 2 36 1 195 1 116 2 196 2 37 1 281 4 199 1 117 1 288 1 124 1 122 4 208 2 125 1 127 1 215 1 48 1 224 1 226 3 306 1 60 1 313 1 232 1 233 2 315 2 316 4 238 1 319 1 240 1 147 1 76 2 80 1 324 3 82 1 152 1 87 1 
4 1 254 2 92 2 15 1 172 1 171 2 265 1 174 1 178 2 272 4 28 2 189 1 190 2 36 1 195 1 116 2 196 2 37 1 281 4 199 1 117 1 288 1 124 1 122 4 208 2 125 1 127 1 215 1 48 1 224 1 226 3 306 1 60 1 313 1 232 1 233 2 315 2 316 4 238 1 319 1 240 1 147 1 76 2 80 1 324 3 82 1 152 1 87 1 
125 1 127 1 161 1 254 1 48 1 92 1 15 1 224 1 131 1 133 1 226 2 306 1 60 1 174 1 178 1 272 2 313 1 232 1 189 1 316 2 238 1 36 1 195 1 240 1 116 1 281 2 76 1 117 1 38 1 324 2 82 1 288 1 159 1 124 1 87 1 
4 1 254 2 92 2 15 1 172 1 171 2 265 1 174 1 178 2 272 4 28 2 189 1 190 3 31 1 36 1 195 1 116 2 196 2 37 1 281 5 199 1 117 1 288 1 122 5 124 1 208 2 125 1 127 1 215 1 48 1 224 1 226 3 306 1 60 1 313 1 232 1 233 3 315 3 316 4 238 1 319 1 240 1 147 1 76 2 80 1 324 3 82 1 152 1 87 1 
4 1 254 2 92 2 15 1 172 1 171 2 265 1 174 1 178 2 272 4 28 2 189 1 190 3 31 1 36 1 195 1 116 2 196 2 37 1 281 5 199 1 117 1 288 1 122 5 124 1 208 2 125 1 127 1 215 1 48 1 224 1 226 3 306 1 60 1 313 1 232 1 233 3 315 3 316 4 238 1 319 1 240 1 147 1 76 2 80 1 324 3 82 1 152 1 87 1 
125 1 127 1 254 1 48 1 92 1 15 1 224 1 131 2 133 1 226 3 306 1 60 1 174 1 178 2 272 4 313 1 233 2 232 1 189 1 276 1 190 2 315 2 316 4 36 1 238 1 195 1 196 2 72 2 240 1 116 1 281 4 76 2 117 1 324 3 82 1 288 1 122 4 159 2 87 1 
89 6 126 1 249 1 8 1 163 1 14 1 17 1 62 1 229 1 65 1 186 2 139 2 70 2 30 3 141 1 75 1 145 1 146 1 322 1 151 1 201 3 244 1 284 1 286 1 84 1 291 2 
89 9 211 2 2 1 213 1 48 1 163 2 93 1 14 2 17 6 56 2 301 1 227 2 268 1 229 2 107 1 65 2 314 1 186 4 139 1 70 1 30 6 141 7 145 2 146 1 78 2 201 3 284 2 286 7 329 1 85 1 
89 2 212 1 252 1 213 1 129 1 254 2 130 1 163 1 11 1 164 1 92 1 14 1 17 1 54 1 24 1 264 1 265 1 102 1 307 1 229 1 271 1 230 1 65 1 183 1 312 1 186 2 314 1 139 1 140 1 30 1 116 2 241 1 145 1 146 1 37 1 323 1 79 1 201 1 
89 5 252 1 254 2 11 1 163 2 164 1 92 1 14 2 17 1 24 1 265 1 102 1 269 1 271 1 108 1 183 1 186 4 30 3 112 1 193 1 116 2 37 1 201 2 284 1 286 2 291 1 212 1 213 1 129 1 216 1 130 1 54 1 56 1 307 1 229 2 65 2 314 1 140 1 70 1 141 2 145 2 146 2 78 1 79 1 154 1 
160 1 89 2 252 2 129 1 8 1 254 1 253 1 130 2 163 2 164 8 92 1 14 2 296 1 54 7 55 1 302 1 264 1 265 1 134 1 102 2 229 2 105 1 271 8 310 1 65 2 183 3 186 4 314 1 140 2 30 1 111 1 116 1 145 2 37 1 146 2 201 1 153 2 205 1 42 1 
89 3 213 1 254 1 163 1 92 1 14 1 17 1 56 1 265 1 309 1 229 1 65 1 186 2 70 1 30 1 141 1 116 1 145 1 147 1 146 1 37 1 39 1 78 1 151 1 201 2 284 1 286 1 206 1 291 1 
65 1 89 2 186 2 30 2 141 1 8 1 163 1 14 1 145 1 146 1 56 1 284 1 326 1 286 1 229 1 
65 1 89 2 186 2 141 1 8 1 163 1 318 1 14 1 145 1 146 1 151 1 201 2 286 1 309 1 229 1 
65 1 89 2 186 2 30 2 141 1 8 1 163 1 14 1 145 1 146 1 56 1 78 1 284 1 286 1 229 1 
65 1 89 2 186 2 30 2 141 1 163 1 14 1 145 1 146 1 56 1 302 1 284 1 326 1 286 1 229 1 
65 1 89 2 186 2 141 1 163 1 318 1 14 1 145 1 146 1 151 1 201 2 302 1 286 1 309 1 229 1 
65 1 89 2 186 2 30 2 141 1 163 1 14 1 145 1 146 1 56 1 78 1 302 1 284 1 286 1 229 1 
65 1 89 2 186 2 30 2 141 1 163 1 14 1 145 1 146 1 56 1 78 1 284 1 286 1 229 1 
89 2 212 1 252 1 254 1 130 1 163 1 164 1 14 1 54 1 264 1 24 1 102 1 307 1 229 1 271 1 65 1 183 1 186 2 314 1 139 1 140 1 30 1 112 1 116 1 145 1 146 1 79 1 201 1 
89 2 252 1 254 1 130 1 256 1 163 1 164 1 14 1 54 1 19 1 300 1 264 1 24 1 102 1 229 1 271 1 65 1 183 1 186 2 314 1 139 1 140 1 30 1 116 1 145 1 146 1 79 1 201 1 
65 1 89 2 186 2 213 1 30 2 141 1 163 1 14 1 145 1 146 1 56 1 78 1 284 1 286 1 229 1 
89 2 212 1 254 1 130 1 163 1 164 1 14 1 54 1 56 1 24 1 102 1 307 1 229 1 271 1 310 1 65 1 183 1 186 2 140 1 30 2 141 1 112 1 193 1 116 1 145 1 146 1 78 1 79 1 284 1 286 1 
89 2 213 1 254 1 163 1 92 1 14 1 17 1 56 1 301 1 100 1 265 1 229 1 65 1 186 2 70 1 30 2 141 1 116 1 145 1 147 1 146 1 37 1 78 1 284 1 286 1 206 1 
209 3 89 41 211 4 249 1 251 1 9 1 219 2 295 4 14 3 56 4 96 1 22 1 23 1 301 4 227 3 62 1 103 1 309 4 135 1 229 3 65 3 186 6 274 1 30 20 70 8 277 1 115 1 75 1 145 3 282 1 148 1 200 1 322 1 78 4 151 5 201 21 244 1 284 5 329 1 84 1 290 1 291 4 331 1 
209 3 89 38 211 4 249 1 251 1 9 1 219 2 295 4 14 4 56 4 96 1 22 1 23 1 301 3 227 3 62 1 103 2 309 3 135 1 229 4 65 4 186 8 274 1 30 20 70 7 277 1 115 1 75 1 145 4 282 1 148 1 200 1 322 1 78 4 151 4 201 18 244 1 284 5 329 1 84 1 290 1 291 4 331 1 
209 2 89 53 211 4 249 1 251 1 9 1 219 1 295 4 14 3 56 7 96 1 23 1 301 7 227 4 62 1 268 2 103 2 309 7 135 1 229 3 65 3 186 6 274 1 30 27 70 15 115 1 75 1 145 3 282 1 148 1 200 1 322 1 78 7 151 8 201 26 244 1 284 8 329 2 84 1 290 1 291 8 331 1 
209 1 89 19 211 2 251 2 9 1 219 1 295 2 14 2 56 3 22 1 301 3 227 1 309 3 229 2 65 2 186 4 30 9 70 6 194 1 115 1 145 2 282 1 148 1 78 3 151 3 201 10 284 3 329 1 291 3 331 1 
209 2 89 26 211 2 251 1 9 2 219 2 295 4 14 3 56 3 96 1 301 2 23 1 227 2 103 2 309 2 229 3 135 1 65 3 186 6 274 1 70 4 30 14 115 1 145 3 282 1 148 1 200 1 151 2 78 3 201 12 284 3 291 2 331 1 290 1 
273 1 180 1 293 1 149 1 299 1 168 1 128 1 192 1 136 1 263 1 
311 1 114 1 
221 1 46 1 293 1 149 1 128 1 192 1 136 1 94 1 263 1 
273 1 272 1 247 2 292 1 293 1 27 1 128 1 316 1 192 1 263 1 149 1 222 1 299 1 168 1 119 1 226 1 328 1 136 1 
273 1 272 1 247 2 292 1 293 1 27 1 128 1 316 1 192 1 263 1 149 1 222 1 299 1 168 1 119 1 226 1 328 1 136 1 
273 1 272 1 247 2 292 1 293 1 27 1 128 1 316 1 192 1 263 1 149 1 222 1 299 1 168 1 119 1 226 1 328 1 136 1 
167 1 49 1 51 1 
167 1 49 1 51 1 
204 1 235 1 
204 1 235 1 51 1 
53 1 325 1 
247 1 293 1 128 1 254 2 257 1 92 2 263 1 53 1 222 1 298 1 303 1 265 2 136 1 137 1 272 1 311 1 139 1 316 1 192 1 143 1 114 1 144 1 116 2 37 2 149 1 119 1 325 1 
167 1 49 1 
204 1 235 1 51 1 
89 2 294 1 213 1 254 2 253 1 130 1 163 1 164 2 92 2 14 1 54 2 18 1 264 1 134 1 102 1 266 1 229 1 271 2 65 1 183 1 186 2 314 1 140 1 30 1 116 2 145 1 146 1 201 1 83 1 327 1 153 2 
310 1 181 1 45 1 182 1 67 1 140 1 3 1 217 1 130 1 111 1 164 2 279 1 74 1 54 2 150 2 297 1 61 1 287 1 271 2 
181 1 45 1 182 1 67 1 140 1 217 1 111 1 130 1 164 1 279 1 74 1 54 1 150 2 61 1 287 1 41 1 271 1 
183 1 45 1 140 1 3 1 252 1 130 1 164 1 54 1 20 1 102 1 205 1 105 1 271 1 25 1 
181 1 45 1 182 1 67 1 3 1 140 1 217 1 130 1 111 1 164 1 279 1 74 1 54 1 150 2 297 1 61 1 287 1 271 1 
262 1 
313 1 21 1 224 1 126 1 324 1 226 1 26 1 
208 1 224 1 171 1 226 2 272 1 313 1 28 1 189 1 316 1 36 1 238 1 240 1 196 1 199 1 324 1 159 1 122 1 
183 2 140 1 252 1 189 1 130 2 237 1 164 1 238 1 36 1 240 1 54 1 320 1 198 1 24 1 173 1 102 1 271 1 
209 1 211 1 56 2 166 1 224 5 170 1 23 1 304 2 226 5 305 1 227 1 267 1 309 2 135 1 272 1 106 5 313 8 274 1 28 3 29 1 189 2 316 1 36 2 238 2 196 1 240 2 200 1 78 2 151 2 202 5 324 2 284 2 122 1 159 6 290 1 
215 1 254 1 92 1 224 1 170 1 172 1 304 2 265 1 272 1 313 2 234 1 189 1 316 1 36 1 238 1 319 1 240 1 116 1 147 1 37 1 322 1 151 1 80 1 284 1 152 1 84 1 
313 1 189 1 238 1 36 1 240 1 21 1 224 1 324 1 226 1 26 1 
108 1 106 5 313 5 28 5 56 2 78 2 224 5 151 2 170 1 202 5 304 2 226 5 284 2 309 2 159 10 
272 1 324 1 226 1 316 1 122 1 196 1 
248 1 90 1 252 2 130 1 164 4 54 4 166 2 224 2 169 1 99 1 305 2 102 1 105 1 271 4 272 3 183 1 313 2 140 1 189 2 71 2 316 3 36 2 238 1 73 1 240 2 196 2 81 1 205 1 122 4 
89 1 212 1 252 1 254 3 130 1 218 1 163 1 164 1 92 2 14 1 54 1 24 1 265 2 102 1 307 1 229 1 271 1 65 1 183 1 314 1 186 2 139 1 140 1 112 1 116 3 145 1 37 2 147 2 146 1 201 1 79 1 152 1 
106 2 313 1 249 1 28 2 189 1 238 1 36 1 240 1 166 1 224 2 202 2 324 2 226 4 305 1 159 4 
128 1 255 1 263 1 
53 1 299 1 128 1 176 1 263 1 
128 1 255 1 263 1 
128 1 255 1 263 1 
128 1 123 1 263 1 
128 1 123 1 263 1 
128 1 123 1 263 1 
128 1 263 1 
293 1 192 1 
209 1 89 8 211 1 249 1 14 1 227 1 62 1 229 1 65 1 186 2 30 4 70 2 145 1 75 1 282 1 151 1 322 1 201 4 244 1 284 1 84 1 290 1 291 2 
209 1 89 11 211 2 249 1 14 2 56 1 301 1 227 1 62 1 229 2 65 2 186 4 30 6 70 3 75 1 145 2 282 1 151 1 322 1 78 1 201 5 244 1 284 2 155 1 329 1 84 1 291 2 290 1 
209 1 89 19 211 1 249 1 14 3 56 2 301 1 23 1 227 1 62 1 309 2 103 1 229 3 135 1 65 3 186 6 274 1 30 9 70 4 75 1 145 3 282 1 200 1 322 1 78 2 151 3 201 10 244 1 284 3 155 1 84 1 290 1 291 3 
209 1 89 12 211 1 14 4 56 2 301 1 23 1 227 1 309 1 103 2 229 4 135 1 65 4 186 8 274 1 30 7 70 3 145 4 282 1 200 1 78 2 151 1 201 5 284 2 155 1 290 1 291 2 
209 1 89 8 211 1 249 1 14 1 227 1 62 1 229 1 65 1 186 2 30 4 70 2 145 1 75 1 282 1 151 1 322 1 201 4 244 1 284 1 84 1 290 1 291 2 
209 1 89 13 211 1 14 2 56 2 301 1 23 1 227 1 309 2 103 1 229 2 135 1 65 2 186 4 274 1 30 6 70 3 145 2 282 1 200 1 78 2 151 2 201 7 284 2 290 1 291 2 
209 1 89 18 211 1 249 1 14 4 56 2 301 2 23 1 227 1 62 1 309 1 103 2 229 4 135 1 65 4 186 8 274 1 30 10 70 5 75 1 145 4 282 1 200 1 322 1 78 2 151 2 201 8 244 1 284 3 155 1 84 1 290 1 291 3 
209 1 89 16 211 1 14 4 56 3 22 1 301 3 23 1 227 1 309 2 103 2 229 4 135 1 65 4 186 8 274 1 30 9 70 6 145 4 282 1 200 1 78 3 151 2 201 7 284 3 290 1 291 3 
89 7 70 6 30 3 75 1 151 1 322 3 201 4 301 3 244 2 284 1 62 1 84 3 291 3 
209 1 89 18 211 1 249 1 14 4 56 2 22 1 301 1 23 1 227 1 62 1 309 1 103 2 229 4 135 1 65 4 186 8 274 1 30 10 70 4 75 1 145 4 282 1 200 1 322 1 78 2 151 2 201 8 244 1 284 3 84 1 290 1 291 3 
65 2 89 8 249 1 186 4 30 4 70 3 14 2 145 2 75 1 151 1 322 1 201 4 301 1 244 1 284 1 62 1 84 1 103 1 229 2 291 2 
89 6 249 1 126 1 70 2 30 3 75 1 322 1 151 1 201 3 244 1 284 1 62 1 84 1 291 2 
65 1 89 4 186 2 70 2 30 2 14 1 145 1 56 1 151 1 78 1 201 2 301 1 284 1 155 1 309 1 229 1 291 1 
209 1 89 7 211 2 30 3 70 2 56 1 151 1 78 1 201 4 301 1 227 1 284 1 329 1 309 1 291 1 
89 23 211 2 249 1 14 2 56 2 301 4 227 2 62 1 268 1 309 2 103 2 229 2 65 2 186 4 70 9 30 11 75 1 145 2 322 2 78 2 151 3 77 1 201 12 244 1 284 3 329 1 84 2 85 1 291 5 
89 1 211 1 201 1 
89 1 30 1 227 1 
65 1 108 1 89 6 186 2 30 3 70 3 14 1 145 1 56 1 78 1 151 1 201 3 301 1 284 1 155 1 309 1 229 1 291 2 
209 1 89 13 211 1 14 2 56 2 301 1 23 1 227 1 309 2 103 1 229 2 135 1 65 2 186 4 274 1 30 6 70 3 145 2 282 1 200 1 78 2 151 2 201 7 284 2 290 1 291 2 
89 6 30 3 70 2 151 1 322 1 201 3 301 1 284 1 62 1 84 1 291 1 
65 1 89 3 186 2 30 1 70 2 14 1 145 1 75 1 322 1 77 1 201 2 301 1 244 1 84 1 103 1 229 1 291 1 
65 1 89 6 186 2 234 1 70 4 30 3 14 1 145 1 282 1 322 1 151 1 201 3 301 2 284 1 84 1 229 1 291 2 
65 1 89 2 186 2 30 2 70 1 14 1 145 1 282 1 56 1 301 1 284 1 229 1 
65 1 89 4 186 2 70 2 30 2 14 1 145 1 282 1 56 1 151 1 78 1 201 2 301 1 284 1 309 1 229 1 291 1 
65 3 89 3 186 6 70 2 30 1 14 3 145 3 282 1 77 1 322 1 22 1 201 2 301 1 84 1 103 1 229 3 291 1 
209 1 89 34 211 4 249 1 14 5 56 3 22 1 301 5 227 3 62 2 103 2 309 3 229 5 65 5 186 10 30 16 70 12 239 1 197 1 75 1 145 5 282 1 322 3 77 1 78 3 151 5 201 18 244 1 245 1 284 5 155 1 329 1 84 3 291 7 
185 1 139 1 254 1 6 1 60 1 92 1 116 1 
0 1 185 1 139 1 110 1 6 1 254 1 236 1 92 1 258 1 116 1 60 1 156 1 
54 1 183 1 126 1 140 1 252 1 130 1 102 1 205 1 164 1 105 1 271 1 
183 1 139 1 140 1 252 1 129 1 254 2 130 1 164 1 92 1 116 2 54 1 37 1 79 1 24 1 265 1 102 1 307 1 271 1 
129 1 254 2 48 1 130 1 164 1 92 2 15 1 260 1 54 1 24 2 265 1 102 2 307 1 271 1 183 3 232 1 139 1 140 1 71 1 33 1 116 2 37 2 79 1 
129 1 254 2 48 1 130 1 164 2 92 2 15 1 260 1 54 2 300 1 24 2 265 1 59 1 102 2 271 2 183 3 232 1 139 1 140 1 71 1 33 1 116 2 37 2 79 1 
125 1 215 1 254 1 10 1 130 1 50 1 164 1 92 1 261 1 260 1 54 1 24 1 226 1 265 1 102 1 271 1 272 2 183 4 140 1 71 1 316 2 33 1 237 1 319 1 116 1 37 1 147 1 80 1 324 1 152 1 122 1 
125 1 215 1 254 1 91 1 130 1 50 1 164 1 92 1 260 1 54 1 24 1 226 1 265 1 102 1 271 1 272 2 183 4 140 1 71 1 316 2 33 1 237 1 319 1 116 1 37 1 147 1 80 1 324 1 152 1 122 1 
54 1 55 1 140 1 130 1 164 1 271 1 
310 1 160 1 183 3 187 1 140 2 252 2 111 1 130 3 164 7 296 1 16 1 54 6 55 1 198 1 24 1 203 1 153 1 134 1 102 2 42 1 271 7 
89 6 294 1 249 1 212 1 213 1 129 1 254 2 130 1 163 2 164 1 92 1 14 2 17 1 54 1 24 1 265 1 62 1 102 1 307 1 229 2 271 1 65 2 310 1 183 1 186 4 139 2 140 1 30 3 70 2 141 1 112 1 193 1 116 2 75 1 145 2 146 2 37 1 151 1 322 1 201 3 79 1 244 1 284 1 286 1 154 1 84 1 291 2 
252 1 254 1 91 1 164 1 92 1 21 1 170 1 99 1 265 1 175 1 271 1 26 1 272 3 183 2 189 2 36 2 196 1 116 1 37 1 284 1 122 2 125 1 43 1 215 1 50 1 54 1 224 3 226 1 304 2 137 1 313 2 234 1 316 3 237 1 238 2 319 1 240 2 147 1 322 1 151 1 324 1 80 1 152 1 84 1 86 1 
310 1 183 2 140 1 130 2 50 1 164 2 54 2 320 1 55 1 198 1 24 1 102 1 271 2 
310 1 66 1 183 1 140 1 252 1 130 1 164 4 54 4 59 1 205 1 102 1 105 1 271 4 
183 1 187 1 140 1 71 1 130 2 317 1 164 2 35 1 16 1 54 2 24 1 102 1 179 1 271 2 
54 1 67 1 150 1 140 1 252 1 61 1 130 1 287 1 164 1 271 1 
310 1 183 1 140 1 111 1 130 1 164 2 54 2 327 1 134 1 102 1 271 2 
310 1 66 1 160 1 183 3 140 2 252 1 71 1 130 2 164 5 296 1 54 4 134 1 205 1 102 2 105 1 271 5 
310 1 66 1 183 3 140 2 252 1 71 1 130 2 164 5 296 1 54 4 134 1 205 1 102 2 105 1 271 5 157 1 
183 1 139 1 140 1 252 1 129 1 254 2 130 1 164 1 92 1 116 2 54 1 37 1 79 1 300 1 24 1 265 1 102 1 271 1 
54 1 198 1 183 1 187 1 140 1 24 1 203 1 130 2 102 1 71 1 164 1 16 1 271 1 
18 1 57 1 223 1 83 1 254 1 266 1 101 1 92 1 116 1 
223 1 285 1 113 1 
57 1 223 1 139 1 283 1 101 1 
125 1 215 1 254 1 48 1 92 1 15 1 57 1 223 1 226 1 265 1 101 1 137 1 272 2 232 1 188 1 316 2 113 1 319 1 116 1 37 1 147 1 324 1 80 1 283 1 152 1 285 1 288 1 330 1 

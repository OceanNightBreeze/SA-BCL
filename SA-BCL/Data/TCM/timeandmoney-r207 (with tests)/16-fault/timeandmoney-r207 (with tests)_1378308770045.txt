#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (32,68,104,116,219) (209,264) (209,264) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (32,68,104,116,219) (209,264) (209,264) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (32,68,104,116,219) (209,264) (209,264) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (32,68,104,116,219) (209,264) (209,264) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (32,68,104,116,219) (146,236) (146,236) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 294 174 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 294 174 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 119 151 166 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 119 151 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (17,133,332) (111,200,212) (111,200,212) (111,200,212) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (53,66,185,268) (53,66,185,268) (111,200,212) (111,200,212) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (53,66,185,268) (53,66,185,268) (111,200,212) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (53,66,185,268) (53,66,185,268) (111,200,212) (111,200,212) (111,200,212) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 300 97 240 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 177 (3,162) (3,162) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (17,133,332) (17,133,332) (17,133,332) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 118 298 312 187 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 119 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 47 181 (59,93) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 300 97 240 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 300 197 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (53,66,185,268) (53,66,185,268) 125 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 1 131 1 209 1 234 1 168 1 39 1 66 1 21 1 116 1 185 1 351 1 60 1 63 1 154 1 264 1 
53 1 131 1 209 1 234 1 168 1 39 1 66 1 21 1 116 1 185 1 351 1 60 1 63 1 154 1 264 1 
53 1 131 1 209 1 234 1 168 1 39 1 66 1 21 1 116 1 185 1 351 1 60 1 63 1 154 1 264 1 
53 1 131 1 209 1 234 1 168 1 39 1 66 1 21 1 116 1 185 1 351 1 60 1 63 1 154 1 264 1 
53 1 131 1 234 1 211 1 39 1 66 1 21 2 100 1 294 1 185 2 340 1 273 1 154 1 268 1 
53 1 234 1 168 1 39 1 66 1 21 1 236 1 116 1 185 1 63 1 146 1 154 1 218 1 
53 2 39 1 170 1 124 1 66 2 21 3 100 2 80 1 185 3 340 1 63 1 267 1 268 1 
53 2 131 1 234 1 222 1 211 1 331 1 39 1 170 2 134 1 100 3 66 2 21 7 294 1 80 1 185 7 174 1 340 3 63 1 273 1 154 1 268 5 
53 2 131 1 234 1 222 1 211 1 331 1 39 1 170 2 134 1 100 3 66 2 21 7 294 1 80 1 185 7 174 1 340 3 63 1 273 1 154 1 268 5 
82 1 54 1 303 1 
201 1 54 1 88 2 
15 2 86 2 345 2 349 2 261 1 325 1 347 2 265 2 
36 1 110 1 322 1 149 1 169 2 195 2 325 1 298 2 3 1 86 3 177 1 7 1 87 1 345 2 9 1 241 1 118 2 11 1 261 1 307 1 262 1 347 2 265 3 270 2 15 2 140 1 349 2 18 1 311 1 312 1 318 1 70 1 190 1 227 1 105 1 275 1 230 1 
15 1 210 1 113 1 349 1 99 1 325 1 86 1 345 1 347 1 265 1 
95 1 54 1 210 1 167 1 349 1 171 1 213 1 317 1 86 1 303 1 89 1 352 1 253 1 265 1 
15 1 54 1 210 1 167 2 349 1 171 1 213 2 317 1 86 1 345 1 303 1 352 1 253 1 347 1 265 1 
167 1 90 1 324 1 244 1 213 1 
54 1 210 1 167 2 113 1 278 1 325 1 283 1 213 2 86 1 345 1 303 1 90 1 347 1 244 1 265 1 15 1 349 1 99 1 73 1 
167 1 90 1 213 1 
15 1 210 1 167 1 113 1 278 1 349 1 99 1 325 1 213 1 86 1 345 1 347 1 244 1 265 1 
54 1 
54 1 210 1 167 2 113 1 278 1 325 1 213 2 86 1 345 1 303 1 90 1 347 1 244 1 265 1 15 1 349 1 99 1 25 1 73 1 
130 1 207 2 147 1 210 1 54 2 167 5 113 1 278 1 115 2 325 1 172 1 40 1 213 5 86 1 302 5 345 1 215 2 61 2 303 2 90 2 306 4 242 2 347 1 265 1 244 2 155 1 199 1 15 1 349 1 99 1 19 1 250 1 251 1 188 1 29 2 73 1 33 1 257 1 
82 1 261 1 
15 1 210 1 349 2 248 1 22 1 86 2 345 1 145 1 261 1 347 1 265 2 
326 1 237 1 
36 1 270 1 140 1 322 1 298 1 312 1 86 1 177 1 7 1 28 1 70 1 118 1 11 1 261 1 105 1 265 1 
36 1 108 1 270 1 15 1 140 1 322 1 349 1 298 1 312 1 237 1 186 1 86 2 177 1 7 1 70 1 11 1 118 1 347 1 105 1 265 2 
15 2 210 1 349 2 248 1 186 1 86 2 345 1 145 1 261 1 347 2 265 2 
15 2 208 1 86 2 210 1 113 1 349 2 347 2 265 2 
15 3 210 1 349 3 186 1 86 3 345 1 261 1 145 1 347 3 265 3 
15 1 86 1 210 1 113 1 349 1 347 1 265 1 
15 1 210 1 349 1 248 1 22 1 86 1 345 1 347 1 265 1 
36 1 108 1 110 1 210 1 167 1 322 1 169 2 195 1 325 1 298 1 3 1 171 1 213 1 177 1 86 4 7 1 87 1 345 2 9 1 11 1 118 1 261 1 307 1 347 3 265 4 121 1 270 1 15 3 140 1 349 3 18 1 248 1 312 1 186 1 317 1 70 1 352 1 190 1 30 1 253 1 227 1 105 1 275 1 230 1 
348 1 15 1 86 2 89 1 349 2 261 1 347 1 265 2 186 1 
108 1 15 3 54 1 210 1 277 1 167 1 349 3 248 1 171 1 213 1 186 2 317 1 86 3 345 1 352 1 253 1 30 1 347 3 265 3 
15 2 77 1 349 2 248 1 186 1 237 1 86 2 345 1 347 2 265 2 
36 1 270 1 140 1 322 1 298 1 312 1 86 1 177 1 7 1 70 1 118 1 11 1 261 1 105 1 265 1 
36 1 270 1 140 1 298 1 312 1 59 1 86 1 26 1 7 1 70 1 118 1 11 1 261 1 105 1 265 1 
110 2 77 2 38 1 258 1 115 1 149 2 169 2 195 4 237 2 282 1 136 1 215 1 87 1 326 2 9 1 216 1 307 1 287 1 98 1 18 1 225 1 51 1 227 1 275 1 
317 1 15 1 86 1 208 1 210 1 349 1 347 1 265 1 
260 1 44 1 
260 1 44 1 
224 1 328 1 
224 1 328 1 
224 1 328 1 
24 1 260 1 44 1 
342 1 299 1 74 1 224 1 328 1 260 2 44 2 
260 1 308 1 44 1 
24 1 260 1 44 1 
24 1 260 1 44 1 
288 1 260 1 44 1 
288 1 260 1 44 1 
288 1 260 1 44 1 
151 1 14 1 132 1 166 1 167 1 119 1 260 1 213 1 44 1 
151 1 14 1 132 1 119 1 260 1 44 1 
131 1 234 1 154 1 
234 1 154 1 218 1 
131 2 48 1 234 3 202 1 191 1 218 1 
131 1 341 1 234 2 202 1 191 1 218 1 
131 1 234 2 202 2 191 1 218 1 
297 1 207 1 76 1 54 2 38 1 167 5 115 1 4 2 173 1 213 5 301 1 85 1 136 1 302 2 344 1 215 1 61 1 88 3 62 2 303 1 153 2 90 1 242 1 306 3 244 4 246 1 155 1 201 1 269 1 350 1 73 1 192 1 
207 2 232 1 76 1 54 5 38 3 167 9 115 3 324 5 172 1 4 6 173 2 213 9 301 3 136 3 302 6 344 2 215 3 178 5 61 2 88 9 303 1 153 6 90 6 242 2 306 8 243 1 244 7 155 1 156 1 201 3 269 4 316 1 295 1 73 1 128 1 
207 1 54 3 167 3 38 1 115 1 172 1 4 2 173 1 213 3 85 1 301 1 136 1 344 1 302 2 215 1 61 1 62 1 88 4 303 1 153 2 242 1 306 3 244 2 201 2 269 1 350 1 
207 1 232 1 54 4 167 4 38 2 115 2 4 4 172 1 173 1 213 4 85 1 301 2 136 2 344 1 302 4 215 2 61 1 88 7 62 2 303 1 153 4 242 1 306 5 244 3 156 1 201 3 269 2 350 1 128 1 
36 1 82 1 296 1 
36 1 94 1 
323 1 
36 1 140 1 70 1 
36 1 183 1 
36 1 70 1 
36 2 140 1 323 1 296 2 70 1 160 1 52 1 
130 1 110 3 115 1 259 1 149 4 195 7 282 2 226 1 285 1 251 1 188 1 215 1 304 1 255 2 287 3 274 1 290 1 
130 1 110 3 115 1 259 1 149 4 195 7 282 2 226 1 285 1 251 1 188 1 215 1 304 1 255 2 287 3 274 1 290 1 
130 1 110 3 115 1 259 1 149 4 195 7 282 2 226 1 285 1 251 1 188 1 215 1 304 1 255 2 287 3 274 1 290 1 198 1 
130 2 110 15 38 3 115 4 169 2 280 1 149 16 259 2 195 31 282 5 301 3 285 1 136 3 215 4 87 1 304 1 91 4 286 1 307 1 287 10 289 1 290 2 157 1 184 1 67 1 226 1 251 1 188 2 204 3 334 1 255 3 227 1 274 5 275 1 
130 1 110 4 115 1 169 4 149 5 259 1 195 9 282 3 285 1 215 1 87 2 307 2 287 4 290 1 96 1 223 1 184 1 226 1 188 1 251 1 255 2 227 2 274 1 275 2 
200 1 53 1 291 1 111 1 212 1 293 1 39 1 292 1 332 1 66 1 21 1 185 1 46 1 343 1 63 1 
53 1 131 1 234 2 212 1 298 1 214 1 343 1 7 1 118 1 63 1 154 1 218 1 245 1 268 2 291 1 200 1 270 1 292 1 293 1 332 1 21 2 66 1 185 3 126 1 48 1 163 1 105 1 
200 1 291 1 270 1 131 1 234 2 298 1 292 1 332 1 21 1 185 2 214 1 126 1 48 1 7 1 343 1 118 1 63 1 154 1 105 1 218 1 245 1 268 2 
36 1 53 1 291 2 270 1 148 1 55 1 271 1 298 1 292 2 66 1 21 1 312 1 185 1 42 1 7 1 343 2 70 1 163 1 118 1 63 2 105 1 336 1 129 1 
200 1 53 1 291 1 270 1 131 1 234 2 111 1 212 1 293 1 39 1 298 1 292 1 332 1 66 1 21 1 185 2 126 1 48 1 7 1 343 1 118 1 63 1 154 1 105 1 218 1 245 1 268 1 
309 1 
36 2 207 1 112 1 167 2 298 2 281 1 173 1 213 2 42 1 7 2 302 1 61 1 118 2 90 2 242 1 306 1 155 1 220 1 270 2 140 1 312 2 187 1 45 1 70 2 103 1 73 1 105 3 276 1 336 1 
109 1 210 1 167 3 171 1 213 3 86 1 238 1 43 1 89 1 90 2 265 1 95 1 349 1 101 1 25 1 317 1 205 1 352 1 72 2 73 1 253 1 335 1 
109 1 210 1 54 1 167 3 171 1 213 3 86 1 238 1 43 1 89 1 303 1 90 1 265 1 137 1 95 1 349 1 25 1 317 1 205 1 352 1 72 3 253 1 73 1 335 1 
109 1 210 1 167 3 171 1 213 3 86 1 238 1 43 1 89 1 90 2 265 1 137 1 95 1 349 1 101 1 25 1 317 1 27 1 205 1 352 1 72 3 73 1 253 1 335 1 
109 1 231 2 193 1 54 1 113 1 278 1 114 2 325 1 6 1 238 1 61 1 242 1 155 1 201 2 15 1 25 1 27 4 205 1 72 5 253 1 73 3 206 2 335 1 207 1 210 2 167 5 171 1 213 5 86 2 302 1 345 1 43 1 303 1 346 1 89 1 90 7 305 1 306 1 92 2 347 1 265 2 137 3 95 1 349 2 99 1 313 1 101 4 317 1 352 1 353 1 107 1 
109 1 231 2 54 1 113 1 278 1 114 2 325 1 238 1 61 1 242 1 155 1 201 2 15 1 27 2 205 1 72 4 253 1 206 2 73 2 335 1 207 1 210 2 167 4 171 1 213 4 86 2 302 1 345 1 43 1 88 2 89 1 303 1 305 1 90 4 306 1 92 2 347 1 265 2 137 2 95 1 349 2 99 1 101 2 317 1 352 1 229 1 107 1 
207 1 231 2 109 1 54 1 210 1 167 4 114 2 171 1 213 4 6 1 86 1 238 1 302 1 61 1 43 1 303 1 89 1 90 4 305 1 306 1 242 1 92 2 137 2 265 1 155 1 201 2 95 1 349 1 313 1 101 2 317 1 27 2 205 1 352 1 72 4 73 2 206 2 253 1 353 1 335 1 107 1 
109 1 231 2 54 1 113 1 278 1 114 2 325 1 6 1 238 1 61 1 242 1 155 1 201 2 15 1 27 2 205 1 72 4 253 1 206 2 73 2 335 1 207 1 210 2 167 4 171 1 213 4 86 2 302 1 345 1 43 1 89 1 303 1 305 1 90 4 306 1 92 2 347 1 265 2 137 2 95 1 349 2 99 1 313 1 101 2 317 1 352 1 353 1 107 1 
109 1 231 2 54 1 113 1 278 1 325 1 2 2 152 1 6 1 238 1 61 1 327 1 242 1 155 1 15 1 27 2 205 1 72 4 253 1 206 2 73 2 256 2 335 1 207 1 165 1 210 2 167 4 171 1 213 4 86 2 302 1 345 1 43 1 88 2 89 1 303 1 90 4 306 1 347 1 265 2 137 2 95 1 349 2 99 1 101 2 317 1 352 1 107 1 
109 1 231 2 193 1 54 1 113 1 278 1 114 2 325 1 6 1 238 1 61 1 242 1 155 1 201 2 15 1 27 3 205 1 72 5 253 1 206 2 73 2 335 1 207 1 210 2 167 4 171 1 213 4 86 2 302 1 345 1 43 1 89 1 303 1 90 5 305 1 306 1 92 2 347 1 137 3 265 2 95 1 349 2 99 1 313 1 101 3 317 1 352 1 353 1 107 1 
109 1 231 2 193 1 54 1 113 1 278 1 114 2 325 1 6 1 238 1 61 1 242 1 155 1 201 2 15 1 27 3 205 1 72 5 253 1 206 2 73 2 335 1 207 1 210 2 167 4 171 1 213 4 86 2 302 1 345 1 43 1 89 1 303 1 90 5 305 1 306 1 92 2 347 1 137 3 265 2 95 1 349 2 99 1 313 1 101 3 317 1 352 1 353 1 107 1 
109 1 231 2 54 1 2 2 238 1 61 1 327 1 242 1 155 1 27 1 205 1 72 3 253 1 206 2 73 1 256 1 335 1 207 1 210 1 167 3 171 1 213 3 86 1 302 1 43 1 88 2 89 1 303 1 90 2 306 1 265 1 137 1 95 1 349 1 101 1 317 1 352 1 229 1 107 1 
130 1 110 3 77 1 115 1 169 2 149 3 195 6 237 1 282 2 82 1 285 1 87 1 215 1 326 1 9 1 261 2 307 1 287 2 18 1 225 1 226 1 188 1 251 1 255 1 227 1 275 1 
164 1 320 1 110 5 210 1 38 2 77 3 115 2 169 4 149 6 195 11 282 1 237 8 301 2 136 1 87 2 215 1 326 8 9 1 117 1 261 1 91 2 287 2 307 2 289 1 221 1 18 2 204 2 69 1 145 1 274 1 227 2 275 2 230 1 
36 1 108 1 110 1 77 1 194 1 322 1 169 2 149 1 298 1 195 2 177 1 86 2 7 1 87 1 9 1 117 1 11 1 118 1 261 1 307 1 347 1 265 2 270 1 15 1 140 1 349 1 18 1 312 1 311 1 186 1 143 1 28 1 70 1 227 1 105 1 275 1 34 1 230 1 
108 1 110 10 322 2 115 3 149 10 195 20 3 2 282 4 237 7 285 1 7 2 326 7 117 1 9 3 118 1 11 2 287 6 15 1 122 2 18 3 251 1 162 2 70 2 255 1 130 1 36 2 37 2 77 7 38 2 169 6 298 1 339 1 301 2 86 3 177 2 136 2 215 3 87 3 261 2 179 1 307 3 347 1 263 2 265 3 270 1 140 2 349 1 311 1 312 1 186 1 226 1 188 1 227 3 274 2 105 2 275 3 230 1 
36 1 110 1 169 4 149 1 298 3 195 2 300 1 86 1 42 1 7 1 240 1 87 2 9 2 118 3 307 2 262 1 347 1 265 1 270 3 15 1 16 1 97 1 349 1 18 2 247 1 312 2 311 1 186 1 46 1 225 1 70 1 227 2 105 1 275 2 230 1 336 1 
110 2 77 1 38 1 115 1 169 2 149 1 195 3 282 1 237 1 301 1 86 1 136 1 345 1 87 1 215 1 326 1 9 1 117 1 287 1 307 1 347 1 265 1 15 1 349 1 248 1 18 1 227 1 228 1 275 1 
77 1 38 1 115 1 169 2 98 1 149 2 195 2 18 1 237 1 225 1 87 1 326 1 9 1 287 1 307 1 274 1 227 1 275 1 
110 2 77 1 169 2 195 2 18 1 282 1 237 1 225 1 136 1 87 1 215 1 326 1 9 1 216 1 287 1 307 1 227 1 275 1 
110 2 38 1 77 2 115 1 149 2 169 2 195 4 237 2 282 1 301 1 136 1 87 1 215 1 326 2 9 1 307 1 287 2 18 1 225 1 227 1 274 1 275 1 
77 1 38 1 115 1 169 2 98 1 149 2 195 2 247 1 18 1 237 1 87 1 326 1 9 1 287 1 307 1 274 1 227 1 275 1 
110 2 77 1 169 2 195 2 247 1 18 1 282 1 237 1 136 1 87 1 215 1 326 1 9 1 216 1 287 1 307 1 227 1 275 1 
110 2 38 1 77 2 115 1 149 2 169 2 195 4 237 2 282 1 301 1 136 1 87 1 215 1 326 2 9 1 307 1 287 1 18 1 247 1 227 1 275 1 
110 2 38 1 77 2 115 1 149 2 169 2 195 4 237 2 282 1 301 1 136 1 87 1 215 1 326 2 9 1 307 1 287 2 18 1 227 1 274 1 275 1 
36 1 110 1 322 1 149 1 169 2 195 2 298 1 3 1 177 1 86 1 7 1 87 1 9 1 11 1 118 1 261 1 307 1 265 1 270 1 140 1 18 1 311 1 312 1 70 1 227 1 105 1 275 1 230 1 
36 1 110 1 149 1 169 2 195 2 298 1 59 1 86 1 7 1 87 1 9 1 11 1 118 1 261 1 307 1 265 1 270 1 140 1 18 1 311 1 312 1 102 1 26 1 70 1 227 1 105 1 275 1 230 1 
110 2 38 1 77 2 115 1 149 2 169 2 195 4 237 2 282 1 301 1 136 1 87 1 215 1 326 2 9 1 117 1 307 1 287 2 18 1 227 1 274 1 275 1 
46 1 177 1 162 1 3 1 
110 1 38 1 77 1 115 1 169 2 149 2 195 3 237 1 301 1 136 1 86 1 215 1 345 1 87 1 326 1 9 1 117 1 287 1 307 1 347 1 265 1 15 1 349 1 248 1 18 1 274 1 227 1 275 1 75 1 
110 21 235 1 115 5 279 4 149 20 150 1 195 41 196 1 282 4 285 1 12 1 287 8 289 1 158 1 67 3 251 1 204 3 254 1 255 1 130 1 38 4 169 6 78 1 41 1 83 2 301 4 136 4 215 5 87 3 91 4 307 3 138 1 182 1 96 1 184 1 315 1 226 1 188 1 189 1 319 1 274 4 227 3 275 3 
130 1 110 18 235 1 38 4 279 4 115 5 150 1 169 8 149 20 195 38 78 1 196 1 41 1 282 4 83 2 301 4 285 1 136 3 87 4 215 4 12 1 91 4 307 4 287 7 289 1 138 1 182 1 96 1 158 1 184 2 67 3 315 1 226 1 251 1 188 1 204 3 189 1 319 1 255 1 254 1 227 4 274 3 275 4 
130 1 164 2 110 25 235 1 38 7 279 4 115 8 169 4 149 27 195 52 196 1 41 1 282 7 83 1 301 7 285 1 136 7 87 2 215 8 12 1 91 4 307 2 287 14 289 2 138 1 182 1 96 1 158 1 184 1 67 2 315 1 226 1 251 1 188 1 204 4 189 1 319 1 255 1 254 1 227 2 274 7 275 2 
110 10 235 1 38 3 279 2 115 3 150 1 169 4 149 9 195 19 196 1 282 3 83 1 301 3 136 3 87 2 215 3 8 1 91 2 307 2 287 6 289 1 138 1 96 1 158 2 67 1 204 1 319 1 227 2 274 3 275 2 
110 12 235 1 38 3 279 4 115 3 169 6 149 14 195 26 196 2 41 1 282 2 83 2 301 3 136 2 215 2 87 3 91 2 12 1 287 4 307 3 138 1 182 1 96 1 158 1 184 2 67 2 315 1 204 2 189 1 319 1 254 1 274 2 227 3 275 3 
36 1 110 1 169 2 149 1 195 2 298 2 300 1 81 1 86 2 7 1 87 1 9 1 117 1 10 1 118 2 307 1 262 2 265 2 270 2 16 1 349 2 18 1 311 1 159 1 272 1 70 1 50 1 227 1 105 1 275 1 230 1 
46 1 270 1 126 1 17 1 343 1 133 1 118 1 293 1 298 1 332 1 5 1 
270 1 139 1 131 1 234 2 133 1 298 1 293 1 332 1 126 1 48 1 343 1 7 1 118 1 154 1 105 1 218 1 245 1 
36 1 270 1 55 1 298 1 312 1 5 1 58 1 42 1 7 1 343 1 70 1 118 1 105 1 336 1 
270 1 131 1 234 2 17 1 133 1 298 1 293 1 332 1 5 1 126 1 48 1 343 1 7 1 118 1 154 1 105 1 218 1 245 1 
321 1 
82 1 54 1 302 1 303 1 306 1 19 1 33 1 
207 1 210 1 54 1 167 1 113 1 278 1 114 1 325 1 213 1 86 1 302 1 345 1 61 1 88 1 303 1 305 1 90 1 306 1 242 1 92 1 347 1 265 1 155 1 201 1 15 1 349 1 99 1 73 1 
54 3 115 1 57 1 4 3 7 1 61 2 118 1 153 3 242 2 155 2 201 3 65 1 330 1 70 1 252 1 296 1 29 1 253 1 73 1 31 1 36 4 207 2 167 2 37 1 38 1 298 1 173 1 213 2 84 1 301 1 136 1 302 3 215 1 88 6 90 2 306 4 94 2 270 1 140 1 312 1 105 2 106 1 52 1 
54 5 113 1 115 2 278 1 325 1 4 5 61 2 153 5 242 2 12 1 155 2 201 3 15 1 67 1 204 1 29 2 73 1 257 1 207 2 210 1 38 2 167 1 41 1 337 1 173 1 213 1 301 2 86 1 136 2 302 5 215 2 345 1 88 6 303 2 90 1 91 1 306 8 217 1 347 1 265 1 182 1 349 1 99 1 315 1 189 1 103 1 
130 1 207 1 210 1 167 1 113 1 115 2 278 1 325 1 213 1 86 1 302 2 61 1 215 1 345 1 242 1 306 2 347 1 265 1 199 1 155 1 15 1 349 1 99 1 188 1 251 1 29 2 353 1 257 1 
207 1 54 1 19 1 302 1 61 1 303 1 242 1 306 1 33 1 155 1 
201 5 54 5 37 1 38 2 115 2 4 5 301 2 136 2 302 5 215 2 88 10 29 2 153 5 306 5 257 1 
15 1 210 1 54 1 167 1 113 1 349 1 278 1 325 1 99 1 213 1 86 1 345 1 303 1 90 1 73 1 347 1 265 1 
207 1 270 2 112 1 167 1 298 2 312 2 249 1 173 1 213 1 187 1 302 1 61 1 90 2 118 2 73 1 103 1 306 1 242 1 155 1 
36 1 110 1 322 1 169 2 195 1 298 1 325 1 3 1 86 3 177 1 7 1 345 2 87 1 9 1 118 1 11 1 261 1 307 1 347 2 265 3 270 1 15 2 140 1 349 2 18 1 312 1 70 1 190 1 227 1 105 1 275 1 230 1 
201 2 207 1 54 4 4 2 173 1 302 2 61 1 88 4 303 2 153 2 255 1 242 1 306 1 103 1 155 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
132 1 119 1 
260 1 44 1 
130 1 110 4 115 1 169 2 149 4 195 8 282 2 285 1 215 1 87 1 91 1 12 1 307 1 287 2 96 1 67 1 226 1 188 1 251 1 204 1 255 1 227 1 275 1 
130 1 110 5 38 1 115 2 169 4 149 6 195 11 282 2 301 1 285 1 215 1 87 2 91 2 12 1 307 2 287 3 289 1 96 1 141 1 67 1 226 1 251 1 188 1 204 1 255 1 227 2 274 1 275 2 
130 1 110 10 38 2 115 3 169 6 149 9 195 19 41 1 282 3 301 2 285 1 136 2 87 3 215 3 91 1 12 1 307 3 287 4 182 1 96 1 141 1 184 1 67 1 315 1 226 1 251 1 188 1 204 1 189 1 255 1 274 1 227 3 275 3 
130 1 110 7 38 2 115 3 169 6 149 10 195 17 41 1 282 3 301 2 285 1 136 1 87 3 215 2 91 1 12 1 307 3 287 5 182 1 96 1 141 1 184 1 67 1 315 1 226 1 251 1 188 1 204 1 189 1 255 1 274 2 227 3 275 3 
130 1 110 4 115 1 169 2 149 4 195 8 282 2 285 1 215 1 87 1 91 1 12 1 307 1 287 2 96 1 67 1 226 1 188 1 251 1 204 1 255 1 227 1 275 1 
110 6 38 2 115 2 169 2 149 6 195 12 41 1 282 1 301 2 136 2 87 1 215 2 91 1 12 1 307 1 287 2 182 1 96 1 67 1 315 1 204 1 189 1 274 1 227 1 275 1 
130 1 110 8 38 2 115 3 169 8 149 10 195 18 41 1 282 3 301 2 285 1 136 1 87 4 215 2 91 1 12 1 307 4 287 5 182 1 96 1 141 1 184 2 67 1 315 1 226 1 251 1 188 1 204 1 189 1 255 1 274 2 227 4 275 4 
110 7 38 3 115 3 169 8 150 1 149 9 195 16 41 1 282 3 301 3 136 2 87 4 215 2 91 1 12 1 307 4 287 6 182 1 96 1 184 2 67 1 315 1 204 1 189 1 274 3 227 4 275 4 
130 3 110 4 115 1 149 3 195 7 282 3 226 2 285 1 188 3 251 1 215 1 287 6 274 3 
130 1 110 8 38 2 115 3 169 8 150 1 149 10 195 18 41 1 282 3 301 2 285 1 136 1 87 4 215 2 91 1 12 1 307 4 287 4 182 1 96 1 184 2 67 1 315 1 226 1 251 1 188 1 204 1 189 1 255 1 274 1 227 4 275 4 
130 1 110 4 115 1 149 4 169 4 195 8 184 1 282 2 226 1 285 1 251 1 188 1 215 1 87 2 255 1 287 3 307 2 274 1 227 2 275 2 
130 1 110 3 115 1 149 3 195 6 282 2 82 1 226 1 285 1 188 1 251 1 215 1 255 1 287 2 
110 2 38 1 115 1 141 1 169 2 149 2 195 4 282 1 301 1 136 1 215 1 87 1 287 2 307 1 227 1 274 1 275 1 
110 4 38 1 115 1 149 3 195 7 282 1 67 1 301 1 136 1 215 1 204 1 91 2 287 2 274 1 289 1 
130 2 164 1 110 12 38 2 115 3 149 11 169 4 195 23 282 5 301 2 285 1 136 2 215 3 87 2 91 2 287 9 307 2 289 1 64 1 184 2 226 1 251 1 188 2 204 2 69 1 255 1 274 4 227 2 275 2 
110 1 195 1 91 1 
204 1 149 1 195 1 
110 3 37 1 38 1 115 1 169 2 141 1 149 3 195 6 282 2 301 1 136 1 87 1 215 1 307 1 287 3 227 1 274 1 275 1 
110 6 38 2 115 2 169 2 149 6 195 12 41 1 282 1 301 2 136 2 87 1 215 2 91 1 12 1 307 1 287 2 182 1 96 1 67 1 315 1 204 1 189 1 274 1 227 1 275 1 
130 1 110 3 115 1 149 3 195 6 282 1 251 1 188 1 215 1 287 2 274 1 
130 1 110 2 64 1 149 1 169 2 195 3 184 1 282 1 226 1 285 1 188 1 87 1 287 2 307 1 274 1 227 1 275 1 
130 2 110 5 96 1 115 2 169 2 149 5 195 10 282 3 188 2 251 1 87 1 215 2 307 1 287 5 227 1 274 2 275 1 199 1 
38 1 96 1 115 1 169 2 149 2 195 2 87 1 307 1 287 1 227 1 274 1 275 1 
110 2 38 1 96 1 115 1 169 2 149 2 195 4 282 1 301 1 136 1 215 1 87 1 287 2 307 1 227 1 274 1 275 1 
130 1 110 2 64 1 96 1 150 1 169 6 149 1 195 3 184 1 282 1 188 1 87 3 307 3 287 2 227 3 274 1 275 3 
130 3 110 18 38 3 115 5 280 1 150 1 169 10 149 16 195 34 282 7 301 3 285 1 136 3 87 5 215 5 91 4 307 5 287 12 289 1 64 1 157 1 96 1 141 1 184 2 67 1 226 1 251 2 188 3 334 1 204 3 255 1 227 5 274 5 275 5 
348 1 176 1 86 1 349 1 89 1 261 1 265 1 
13 1 348 1 180 1 310 1 349 1 20 1 176 1 86 1 144 1 89 1 261 1 265 1 
36 1 82 1 270 1 42 1 7 1 70 1 118 1 298 1 312 1 105 1 336 1 
36 1 270 1 15 1 140 1 322 1 349 1 298 1 312 1 186 1 86 2 7 1 70 1 11 1 118 1 261 1 347 1 105 1 265 2 
36 3 270 1 15 2 210 1 140 2 322 1 183 1 349 2 298 1 186 1 317 1 284 1 86 2 47 1 7 1 70 2 352 1 11 1 118 1 261 1 347 1 105 1 265 2 
36 3 210 1 298 2 59 1 284 1 86 2 7 1 118 2 11 1 261 1 347 1 265 2 270 2 15 2 140 2 349 2 183 1 186 1 317 1 161 1 47 1 70 2 352 1 105 1 
36 4 270 1 181 1 140 1 167 1 183 1 298 1 213 1 284 1 47 1 7 1 70 1 296 1 118 1 93 1 94 1 105 1 
36 4 270 3 54 1 140 1 167 2 183 1 298 3 312 1 213 2 284 1 161 1 47 1 7 1 70 1 252 1 296 1 303 1 118 3 90 1 253 1 94 1 105 1 
270 1 7 1 127 1 118 1 298 1 105 1 
36 1 270 2 220 1 140 1 97 1 298 2 312 2 300 1 45 1 23 1 46 1 7 1 240 1 70 1 118 2 105 2 52 1 
15 1 349 1 169 2 18 1 186 1 46 1 86 1 87 1 50 1 117 1 9 1 307 1 227 1 347 1 265 1 275 1 
54 2 113 1 115 2 278 1 325 1 57 1 61 2 118 1 242 2 244 1 155 2 199 1 15 1 19 1 249 1 251 1 296 1 252 1 29 2 73 1 253 1 31 1 33 1 257 1 36 2 207 2 130 1 210 1 167 3 298 1 213 3 84 1 86 1 302 5 215 2 345 1 303 2 90 2 306 4 94 1 347 1 265 1 270 1 349 1 99 1 312 1 188 1 
36 2 270 1 140 1 330 1 298 1 46 1 7 1 296 1 70 1 127 1 118 1 105 2 52 1 
36 1 220 1 270 1 140 1 298 1 312 1 281 1 45 1 46 1 42 1 7 1 70 1 118 1 105 2 276 1 
36 1 270 2 220 1 140 1 298 2 281 1 45 1 284 1 7 1 70 1 71 1 118 2 105 2 276 1 
270 1 234 1 298 1 312 1 7 1 118 1 154 1 105 1 218 1 245 1 
270 1 126 1 46 1 118 1 298 1 
46 1 270 1 118 1 298 1 312 1 
46 1 270 1 118 1 298 1 312 1 300 1 197 1 
36 1 270 1 15 1 140 1 349 1 298 1 312 1 186 1 59 1 86 2 7 1 70 1 11 1 118 1 261 1 347 1 105 1 265 2 
36 1 270 1 220 1 140 1 298 1 45 1 23 1 284 1 7 1 70 1 118 1 105 2 52 1 
233 1 0 1 261 1 338 1 333 1 
35 1 0 1 233 2 54 1 210 1 167 2 79 1 171 1 338 2 213 2 333 2 314 1 317 1 303 1 352 1 261 1 253 1 30 1 244 1 
86 1 0 1 349 1 10 1 265 1 338 1 81 1 333 1 272 1 
0 1 79 1 314 1 
82 1 124 1 100 1 267 1 
53 1 124 1 100 1 21 1 66 1 185 1 267 1 
63 1 292 1 21 1 
219 1 53 1 39 1 124 1 100 1 66 1 21 3 185 3 116 2 68 1 104 1 267 1 
53 1 211 1 124 1 66 1 21 2 100 1 185 2 329 1 268 1 267 1 
53 1 131 1 234 1 39 1 66 1 21 1 100 1 185 1 340 1 273 1 154 1 
53 1 39 1 100 1 21 1 66 1 185 1 267 1 
53 1 39 1 124 1 21 1 66 1 185 1 267 2 
53 2 39 1 100 1 66 2 21 2 185 2 175 1 239 1 203 1 267 1 
53 1 222 1 331 1 39 1 170 1 124 1 66 1 21 3 100 2 185 3 340 1 267 1 268 2 
53 1 131 1 48 1 234 2 39 1 154 1 21 1 66 1 125 1 218 1 185 2 268 1 
53 1 211 1 39 1 170 1 124 1 66 1 21 3 142 1 100 2 185 3 340 1 329 1 267 1 268 2 
53 1 39 1 124 1 100 1 21 1 66 1 185 1 267 1 
53 1 170 1 124 2 21 4 66 1 100 3 116 1 185 4 340 1 68 1 104 1 267 2 329 1 268 2 
53 1 39 1 123 1 134 1 124 1 100 1 66 1 21 2 185 2 49 1 267 1 268 1 
53 1 39 1 124 1 100 1 66 1 21 3 185 3 116 2 68 2 104 1 32 1 267 1 
56 2 100 2 1 1 266 1 
53 1 135 1 39 1 21 1 66 1 185 1 
53 1 331 1 39 1 124 1 100 1 21 2 66 1 185 2 267 1 268 1 
120 1 
53 1 39 1 124 1 100 1 21 1 66 1 185 1 267 1 
53 1 331 1 39 1 124 1 66 1 21 3 100 1 185 3 116 1 268 1 267 1 
340 1 170 1 100 1 329 1 
100 1 267 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (262,330) (262,330) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (262,330) (262,330) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (262,330) (262,330) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (262,330) (262,330) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (96,155,212) (96,155,212) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 93 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 160 274 356 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 160 274 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 160 274 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 207 15 348 156 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 207 15 348 156 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 207 15 348 156 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 1 262 1 132 1 298 1 107 1 241 1 331 1 330 1 81 1 
48 1 262 1 132 1 298 1 107 1 241 1 331 1 330 1 81 1 
48 1 262 1 132 1 298 1 107 1 241 1 331 1 330 1 81 1 
48 1 262 1 132 1 298 1 107 1 241 1 331 1 330 1 81 1 
48 1 170 1 132 4 298 1 364 1 84 1 107 4 42 3 43 3 125 2 315 1 256 2 26 1 55 1 113 1 116 1 69 1 81 1 
48 1 94 1 76 1 132 2 298 1 84 1 107 2 43 1 368 1 66 1 26 1 55 1 69 1 241 1 81 1 331 1 
82 1 48 1 71 1 132 9 84 1 107 9 162 1 315 1 26 1 113 1 55 1 116 3 241 1 145 1 170 1 298 2 364 1 42 7 43 5 125 4 256 2 180 1 69 1 81 2 
82 1 48 1 71 1 132 9 84 1 107 9 162 1 315 1 26 1 113 1 55 1 116 3 241 1 145 1 170 1 298 2 364 1 42 7 43 5 125 4 256 2 180 1 69 1 81 2 
48 1 145 1 132 3 298 2 84 1 107 3 42 1 43 2 125 1 26 1 116 1 241 1 81 2 
265 1 9 1 188 1 
8 2 9 1 345 1 
295 1 190 1 252 2 62 2 41 2 167 2 193 2 136 2 
226 1 282 2 284 1 22 2 135 1 136 3 163 1 353 1 316 1 237 1 190 1 141 1 271 1 167 3 340 1 193 2 60 1 361 1 245 1 295 1 61 1 77 1 251 1 252 2 62 2 41 2 323 1 124 1 276 2 346 2 153 2 304 1 277 1 255 1 257 1 101 1 128 1 
246 1 295 1 172 1 252 1 62 1 41 1 167 1 193 1 51 1 136 1 
9 1 210 1 281 1 252 1 21 1 199 1 136 1 51 1 289 1 188 1 167 1 192 1 130 1 5 1 
9 1 281 1 41 1 62 1 252 1 21 2 136 1 51 1 289 2 188 1 167 1 192 1 193 1 130 1 5 1 
23 1 56 1 21 1 110 1 289 1 
232 1 9 1 188 1 206 1 56 1 21 2 110 1 289 2 
56 1 21 1 289 1 
246 1 295 1 172 1 41 1 62 1 252 1 21 1 110 1 51 1 289 1 136 1 354 1 167 1 193 1 
9 1 
9 1 188 1 206 1 56 1 21 2 110 1 341 1 289 2 
144 1 9 1 362 1 351 2 216 1 21 5 110 2 253 1 289 5 45 2 164 1 188 1 111 1 234 1 221 2 318 1 206 1 56 2 6 1 
265 1 190 1 
226 1 37 1 61 1 284 1 148 1 344 1 251 1 62 1 252 1 22 1 135 1 136 2 276 1 346 1 237 1 128 1 271 1 167 2 340 1 193 1 
252 2 41 1 62 1 136 2 52 1 190 2 167 2 208 1 193 1 
307 1 261 1 37 1 
226 1 214 1 284 1 61 1 251 1 22 1 135 1 136 1 276 1 346 1 237 1 190 1 128 1 167 1 271 1 340 1 
231 1 210 1 88 1 148 1 190 1 344 2 41 1 252 5 62 4 208 1 167 5 32 1 193 4 136 5 
246 1 339 1 252 2 62 2 167 2 193 2 51 1 136 2 
190 1 344 1 41 1 252 3 62 3 167 3 193 3 136 3 
246 1 252 1 62 1 167 1 193 1 51 1 136 1 
52 1 252 1 62 1 41 1 167 1 208 1 193 1 51 1 136 1 
0 1 281 1 226 1 282 1 284 1 21 1 229 1 22 1 135 1 136 4 51 1 289 1 163 1 353 1 316 1 237 1 190 1 141 1 271 1 167 4 340 1 192 1 193 3 5 1 361 1 295 1 61 1 148 1 77 1 344 1 251 1 41 2 252 3 62 3 323 1 276 1 346 1 153 2 277 1 255 1 257 1 128 1 208 1 130 1 
231 1 210 1 190 1 344 1 252 2 62 1 167 2 193 1 136 2 
9 1 0 1 281 1 148 1 344 2 41 1 62 3 252 3 21 1 289 1 51 1 136 3 140 1 208 1 167 3 192 1 130 1 193 3 5 1 
261 1 37 1 344 1 41 1 62 2 252 2 136 2 208 1 167 2 193 2 
226 1 284 1 61 1 251 1 22 1 135 1 136 1 276 1 346 1 237 1 190 1 128 1 167 1 271 1 340 1 
226 1 284 1 61 1 251 1 22 1 135 1 136 1 123 1 276 1 346 1 190 1 240 1 167 1 271 1 340 1 
307 2 261 2 283 1 282 4 353 1 236 1 141 1 294 1 361 1 245 2 37 2 39 1 40 1 175 1 323 1 153 2 277 2 303 1 329 1 255 1 257 1 178 1 349 1 207 1 
252 1 62 1 339 1 167 1 192 1 193 1 51 1 136 1 
212 1 91 1 
212 1 91 1 
96 1 185 1 
96 1 185 1 
96 1 185 1 
314 1 212 1 91 1 
212 2 96 1 185 1 91 2 
212 1 155 1 91 1 
314 1 212 1 91 1 
314 1 212 1 91 1 
212 1 91 1 293 1 
212 1 91 1 293 1 
212 1 91 1 293 1 
263 1 20 1 161 1 21 1 289 1 136 2 212 1 166 1 25 1 73 1 190 1 142 1 91 1 167 2 193 2 358 1 168 1 122 1 62 2 252 2 152 1 155 1 68 1 129 1 
9 1 322 1 20 2 161 1 311 1 21 2 302 1 289 2 212 2 112 1 166 2 72 1 25 2 219 2 371 1 373 1 91 2 129 2 358 3 
55 1 113 1 69 1 
76 1 55 1 69 1 
44 1 267 1 76 1 335 1 113 2 55 3 
44 1 76 1 335 1 113 1 173 1 55 2 
44 1 76 1 113 1 335 2 55 2 
283 1 351 1 106 2 21 5 108 1 110 4 289 5 111 1 188 1 191 1 318 3 56 1 6 2 357 1 168 1 34 1 8 3 272 2 9 2 122 1 39 1 64 1 324 2 345 1 45 1 15 1 349 1 221 1 68 1 179 1 206 1 207 1 
19 1 283 3 351 2 106 6 21 9 110 7 289 9 23 5 188 1 111 1 234 1 191 1 318 8 56 6 143 5 6 6 168 4 357 2 7 1 8 9 169 1 9 5 11 1 39 3 365 1 64 2 78 1 324 6 345 3 45 2 15 3 349 3 221 2 206 1 207 3 
283 1 351 1 106 2 108 1 21 3 110 2 51 1 136 1 289 3 188 1 354 1 234 1 318 3 167 1 193 1 357 1 168 1 6 2 272 1 8 4 9 3 246 1 295 1 172 1 39 1 252 1 62 1 41 1 64 1 324 2 345 2 45 1 15 1 349 1 221 1 179 1 207 1 
283 1 351 1 106 2 21 2 108 1 110 1 289 2 234 1 318 3 357 1 168 1 6 2 8 4 272 1 9 2 169 1 39 1 64 1 324 2 345 2 45 1 15 1 349 1 221 1 179 1 207 1 
265 1 226 1 342 1 
226 1 233 1 
269 1 
226 1 271 1 135 1 
226 1 149 1 
226 1 135 1 
165 1 226 3 235 1 271 1 135 1 342 2 
294 1 131 1 244 1 245 1 171 1 282 1 312 1 175 2 100 1 137 1 115 1 279 1 57 1 
294 1 131 1 244 1 245 1 171 1 282 1 312 1 175 2 100 1 137 1 115 1 279 1 57 1 
294 1 131 1 244 1 245 1 171 1 282 1 83 1 312 1 175 2 100 1 137 1 115 1 279 1 57 1 
131 2 309 1 282 25 283 3 312 2 137 2 353 1 138 1 115 1 141 1 270 1 57 2 294 4 245 13 244 2 171 1 147 4 39 3 196 3 175 9 99 1 100 1 153 2 277 12 328 1 204 1 255 1 257 1 15 3 349 3 207 3 279 5 17 1 
131 1 93 1 153 2 245 1 244 1 353 1 255 1 257 1 282 1 141 1 312 1 58 1 
48 1 158 1 132 2 182 1 284 1 84 1 107 2 22 1 313 1 230 1 54 1 267 1 26 1 113 1 55 2 189 1 29 1 241 1 213 1 243 1 76 1 97 1 61 1 298 1 42 1 43 1 346 1 276 1 69 1 81 1 
158 1 132 3 182 1 284 1 286 1 84 1 107 3 22 1 313 1 54 1 267 1 26 1 113 1 55 2 189 1 291 1 29 1 241 1 213 1 243 1 76 1 61 1 298 1 254 1 42 2 43 1 346 1 276 1 69 1 81 1 
158 1 132 2 182 1 284 1 286 1 84 1 107 2 22 1 54 1 267 1 26 1 55 2 113 1 189 1 291 1 29 1 241 1 243 1 76 1 61 1 42 2 43 1 346 1 276 1 69 1 
1 1 226 1 132 1 182 2 284 1 287 1 107 1 334 1 22 1 135 1 54 2 29 2 241 2 61 1 298 1 251 1 254 1 217 1 346 1 276 1 367 1 278 1 81 1 
48 1 158 1 132 1 182 1 284 1 107 1 22 1 313 1 230 1 54 1 267 1 113 1 55 2 189 1 291 1 29 1 241 1 213 1 243 1 76 1 61 1 298 1 346 1 276 1 69 1 81 1 
198 1 
281 1 226 1 284 1 184 1 287 1 228 1 135 1 289 5 136 1 51 1 188 1 337 4 56 6 192 1 6 2 5 1 8 2 9 2 297 2 61 1 251 2 252 1 63 2 64 1 65 2 199 1 301 1 345 2 346 2 154 1 305 2 306 1 205 2 67 2 206 3 159 1 210 1 18 1 351 1 21 5 22 2 111 1 318 2 167 1 176 1 45 1 276 2 327 1 177 1 221 1 278 1 374 1 47 1 130 1 280 2 
210 1 281 1 228 1 252 1 21 3 199 1 51 1 289 3 136 1 176 1 154 1 305 1 306 1 177 1 337 2 206 1 56 2 167 1 192 1 130 1 341 1 5 1 
9 1 210 1 281 1 228 1 252 1 21 3 199 1 51 1 289 3 136 1 176 1 154 1 188 1 306 1 177 1 337 3 206 1 56 1 167 1 192 1 130 1 341 1 280 1 5 1 
210 1 281 1 228 1 21 3 136 1 289 3 51 1 188 1 337 3 56 2 167 1 192 1 341 1 5 1 9 1 252 1 199 1 176 1 154 1 306 1 305 1 177 1 67 1 206 1 130 1 280 1 
210 1 281 1 160 1 228 1 21 3 289 3 136 1 51 1 356 1 337 2 56 3 167 1 192 1 341 1 5 1 252 1 199 1 274 1 176 1 154 1 306 1 305 2 177 1 67 2 206 1 130 1 
281 1 184 1 228 1 51 2 136 2 289 4 188 1 337 4 56 4 192 1 193 1 5 1 6 1 8 2 9 1 246 1 295 1 297 2 62 1 252 2 63 2 199 1 65 2 345 2 154 1 306 1 305 2 205 2 67 2 206 2 159 1 210 1 351 1 21 4 111 1 354 1 318 1 167 2 172 1 41 1 176 1 45 1 177 1 221 1 130 1 47 1 280 2 
210 1 281 1 160 1 228 1 252 1 21 2 199 1 51 1 289 2 136 1 176 1 154 1 306 1 177 1 337 2 167 1 192 1 130 1 5 1 
210 1 281 1 160 1 228 1 252 1 21 2 199 1 51 1 289 2 136 1 176 1 154 1 306 1 177 1 337 2 167 1 192 1 130 1 5 1 
281 1 228 1 51 2 289 4 136 2 188 1 337 4 56 4 192 1 193 1 5 1 6 1 8 2 9 1 246 1 295 1 249 1 62 1 252 2 150 1 63 2 199 1 65 2 154 1 306 1 305 2 67 2 206 2 16 2 210 1 211 2 351 1 21 4 111 1 354 1 318 1 167 2 273 1 172 1 41 1 176 1 45 1 177 1 222 1 221 1 130 1 47 1 280 2 
210 1 281 1 160 1 228 1 252 1 21 2 199 1 51 1 289 2 136 1 274 1 176 1 154 1 305 1 306 1 177 1 67 1 337 3 56 1 167 1 192 1 130 1 280 1 5 1 
210 1 281 1 160 1 228 1 252 1 21 2 199 1 51 1 289 2 136 1 274 1 176 1 154 1 305 1 306 1 177 1 67 1 337 3 56 1 167 1 192 1 130 1 280 1 5 1 
281 1 228 1 51 2 136 2 289 4 188 1 337 4 56 4 192 1 193 1 5 1 6 1 8 2 9 1 246 1 295 1 249 1 62 1 252 2 63 2 199 1 65 2 154 1 306 1 305 2 67 2 206 2 16 2 159 1 210 1 211 2 351 1 21 4 111 1 354 1 318 1 167 2 172 1 41 1 176 1 45 1 177 1 221 1 130 1 47 1 280 2 
294 1 361 1 175 1 323 1 265 1 100 1 153 2 137 1 353 1 255 1 236 1 257 1 115 1 141 1 57 1 
307 11 261 4 282 14 283 1 187 1 353 2 24 1 190 1 141 2 294 1 361 2 321 1 245 8 10 1 37 11 147 3 39 2 174 1 77 1 196 3 175 2 323 1 153 4 304 1 277 6 255 2 328 1 257 2 15 2 349 1 279 1 207 2 17 1 
261 1 226 1 284 1 282 2 187 1 22 1 135 1 136 2 353 1 87 1 237 1 190 1 141 1 271 1 167 2 340 1 193 1 361 1 245 1 214 1 61 1 148 1 77 1 251 1 299 1 344 1 252 1 62 1 323 1 346 1 276 1 153 2 277 1 304 1 255 1 257 1 128 1 157 1 
226 2 282 14 284 2 283 2 187 1 135 2 136 3 137 1 237 2 291 1 141 3 57 1 340 2 193 1 294 3 92 2 245 7 248 2 61 2 148 1 251 1 344 1 62 1 252 1 100 1 346 3 153 6 304 1 255 3 13 2 257 3 15 2 349 2 70 2 207 2 307 6 261 6 22 3 163 2 353 3 115 1 319 1 167 3 271 2 31 1 361 3 37 6 39 2 77 1 175 7 323 3 276 3 277 7 128 2 279 4 80 1 
226 3 284 2 282 2 49 1 287 1 22 8 288 1 135 2 136 1 353 2 236 1 336 1 291 1 141 2 90 1 167 1 193 1 361 2 245 1 194 1 97 1 61 2 77 1 344 1 251 2 252 1 62 1 323 2 346 8 276 7 203 1 153 4 304 1 277 1 255 2 126 1 257 2 101 2 278 1 
307 1 261 1 282 3 283 1 187 1 136 1 353 1 141 1 167 1 193 1 294 1 361 1 245 1 37 1 39 1 62 1 41 1 252 1 300 1 175 1 323 1 153 2 277 2 255 1 257 1 15 1 349 1 208 1 207 1 
307 1 361 1 245 2 261 1 37 1 282 2 39 1 175 1 323 1 153 2 353 1 303 1 255 1 236 1 257 1 141 1 279 1 207 1 
294 1 307 1 361 1 261 1 37 1 282 2 283 1 175 1 323 1 153 2 353 1 277 2 255 1 236 1 257 1 178 1 141 1 349 1 
307 2 261 2 282 4 283 1 353 1 236 1 141 1 294 1 361 1 245 2 37 2 39 1 175 2 323 1 153 2 277 2 255 1 257 1 15 1 349 1 207 1 279 1 
307 1 361 1 245 2 261 1 37 1 282 2 39 1 175 1 323 1 153 2 353 1 303 1 126 1 255 1 257 1 141 1 279 1 207 1 
294 1 307 1 361 1 261 1 37 1 282 2 283 1 175 1 323 1 153 2 353 1 277 2 126 1 255 1 257 1 178 1 141 1 349 1 
307 2 261 2 282 4 283 1 353 1 141 1 294 1 361 1 245 2 37 2 39 1 175 2 323 1 153 2 277 2 255 1 126 1 257 1 15 1 349 1 207 1 279 1 
307 2 261 2 282 4 283 1 353 1 141 1 294 1 361 1 245 2 37 2 39 1 175 2 323 1 153 2 277 2 255 1 257 1 15 1 349 1 207 1 279 1 
226 1 282 2 284 1 22 1 135 1 136 1 163 1 353 1 237 1 190 1 141 1 271 1 167 1 340 1 361 1 245 1 61 1 77 1 251 1 323 1 346 1 276 1 153 2 304 1 277 1 255 1 257 1 128 1 
226 1 282 2 284 1 22 1 135 1 136 1 353 1 190 1 141 1 89 1 240 1 271 1 167 1 340 1 361 1 245 1 61 1 77 1 251 1 123 1 323 1 346 1 276 1 153 2 304 1 277 1 255 1 257 1 
307 2 261 2 282 4 283 1 187 1 353 1 141 1 294 1 361 1 245 2 37 2 39 1 175 2 323 1 153 2 277 2 255 1 257 1 15 1 349 1 207 1 279 1 
307 2 261 2 226 1 283 1 282 4 284 1 22 1 135 1 136 1 163 1 353 1 237 1 141 1 271 1 167 1 340 1 294 1 361 1 245 2 37 2 39 1 61 1 248 1 97 1 175 2 323 1 346 1 276 1 153 2 277 2 255 1 257 1 15 1 349 1 128 1 279 1 207 1 
307 1 308 1 261 1 283 1 282 3 187 1 136 1 353 1 141 1 167 1 193 1 361 1 245 2 37 1 39 1 62 1 41 1 252 1 175 1 323 1 153 2 277 1 255 1 257 1 15 1 349 1 279 1 208 1 207 1 
104 1 282 8 283 1 266 2 353 2 27 1 141 2 30 1 292 1 58 1 359 1 119 1 245 4 146 1 39 1 175 1 153 4 277 4 255 2 257 2 220 2 15 1 349 1 207 1 279 1 
104 1 282 8 283 1 266 2 353 2 27 1 141 2 30 1 292 1 58 1 294 1 359 1 119 1 245 4 146 1 39 1 175 2 153 4 277 4 255 2 257 2 220 2 15 1 349 1 207 1 279 1 
104 1 283 1 282 8 266 2 137 1 353 1 115 1 141 1 292 1 58 1 57 1 294 1 359 1 119 1 245 4 146 1 39 1 175 2 100 1 153 2 277 4 255 1 257 1 220 1 15 1 349 1 279 1 207 1 
104 1 282 12 283 2 266 2 353 2 27 1 141 2 292 1 58 1 359 1 294 2 119 2 245 6 146 1 39 2 175 4 153 4 277 6 369 1 255 2 257 2 220 1 15 2 349 2 207 2 279 2 
104 2 282 8 283 1 266 2 353 1 141 1 292 1 58 1 359 1 119 1 245 4 146 1 39 1 153 2 277 4 255 1 257 1 220 2 15 1 349 1 207 1 
212 1 112 1 166 1 72 1 25 1 371 1 20 1 239 1 91 1 129 1 
155 1 152 1 
347 1 212 1 166 1 38 1 25 1 20 1 91 1 223 1 129 1 
314 1 139 1 
183 1 320 1 293 1 
9 1 322 1 161 1 20 1 311 1 21 1 289 1 212 1 112 1 166 1 72 1 25 1 219 1 371 1 373 1 91 1 129 1 358 2 
9 1 322 1 161 1 20 1 311 1 21 1 289 1 212 1 112 1 166 1 72 1 25 1 219 1 371 1 373 1 91 1 129 1 358 2 
9 1 322 1 161 1 20 1 311 1 21 1 289 1 212 1 112 1 166 1 72 1 25 1 219 1 371 1 373 1 91 1 129 1 358 2 
314 1 139 1 320 1 
314 1 139 1 320 1 
183 1 293 1 
183 1 320 1 293 1 
263 1 142 1 
263 1 20 1 21 1 110 1 136 2 289 1 212 1 166 1 25 1 73 1 190 1 142 1 91 1 167 2 193 2 358 1 168 1 122 1 62 2 252 2 152 1 219 1 155 1 373 1 68 1 46 1 129 1 
226 1 284 1 282 2 49 1 187 1 22 2 288 1 135 1 136 2 353 1 355 1 141 1 167 2 361 1 120 1 245 1 61 1 77 1 252 2 323 1 346 2 276 2 153 2 304 1 277 1 255 1 257 1 101 2 258 1 181 1 209 1 
158 1 76 1 61 1 284 1 97 1 285 1 22 2 313 1 151 1 276 2 346 2 267 1 113 1 55 2 189 1 291 1 29 1 238 1 69 1 
158 1 76 1 284 1 61 1 215 1 22 1 313 1 151 1 276 1 346 1 267 1 113 1 55 2 189 1 291 1 29 1 69 1 
226 1 61 1 284 1 285 1 251 1 287 1 22 1 135 1 276 1 346 1 367 1 202 1 29 1 278 1 
158 1 76 1 61 1 284 1 285 1 22 1 313 1 151 1 276 1 346 1 267 1 113 1 55 2 189 1 291 1 29 1 238 1 69 1 
366 1 
144 1 265 1 9 1 188 1 362 1 318 1 6 1 
351 1 184 1 21 1 289 1 111 1 188 1 318 1 56 1 6 1 8 1 9 2 297 1 345 1 45 1 205 1 221 1 206 1 
226 3 283 1 105 1 284 1 351 2 106 3 21 1 186 1 86 1 22 1 135 1 289 1 165 1 111 2 233 2 318 4 56 1 271 1 6 3 8 6 9 3 121 1 39 1 61 2 98 1 251 1 64 1 324 3 218 1 345 3 346 1 276 1 45 2 370 1 15 1 349 1 221 2 206 1 207 1 70 1 102 1 
283 2 351 1 106 5 111 1 188 1 268 1 318 7 6 4 8 6 9 4 147 1 39 2 196 1 324 5 200 1 45 1 345 3 348 1 15 2 221 1 349 2 156 1 207 2 17 1 259 1 
260 1 351 1 21 1 51 1 136 1 289 1 137 1 111 1 354 1 318 2 167 1 57 1 193 1 33 1 6 2 246 1 295 1 172 1 39 2 195 1 41 1 62 1 252 1 45 1 79 1 370 2 221 1 349 1 
226 1 282 1 284 1 22 1 135 1 136 3 163 1 353 1 316 1 237 1 190 1 141 1 167 3 271 1 340 1 193 2 361 1 295 1 61 1 77 1 251 1 252 2 62 2 41 2 323 1 346 1 276 1 153 2 277 1 255 1 257 1 128 1 
8 4 9 4 351 1 312 1 106 2 64 1 324 2 345 2 45 1 111 1 188 2 221 1 318 1 374 1 6 2 
144 1 9 1 362 1 351 1 45 1 111 1 188 1 221 1 318 1 6 1 
260 1 8 10 9 5 39 2 283 2 106 5 324 5 345 5 370 2 15 2 349 2 318 5 70 1 207 2 6 5 
9 1 188 1 206 1 56 1 21 1 289 1 
18 1 226 2 284 2 351 2 133 1 287 1 21 3 22 4 135 2 289 3 111 1 234 1 290 1 74 2 318 2 56 4 117 1 75 1 271 1 242 1 6 2 61 3 343 1 251 2 64 2 275 1 45 2 346 4 276 4 327 1 221 2 206 2 278 1 374 2 
166 1 25 1 118 1 
166 1 263 1 25 1 371 1 28 1 
166 1 25 1 118 1 
166 1 25 1 118 1 
166 1 25 1 4 1 
166 1 25 1 4 1 
166 1 25 1 4 1 
166 1 25 1 
212 1 91 1 
294 1 245 1 309 1 282 2 175 2 100 1 153 4 137 1 277 1 353 2 255 2 257 2 115 1 141 2 279 1 57 1 
294 1 265 1 100 1 137 1 115 1 57 1 175 1 
294 1 245 2 283 1 39 1 282 4 175 2 153 2 277 2 353 1 255 1 257 1 141 1 15 1 349 1 207 1 279 1 59 1 
294 1 245 3 283 1 147 2 282 7 39 1 196 1 175 2 277 4 328 1 15 1 349 1 207 1 279 1 17 1 
309 2 283 2 282 27 312 1 109 1 137 4 353 2 115 1 141 2 57 4 294 6 245 13 321 1 10 1 39 3 147 2 195 1 196 2 175 11 100 1 153 4 79 1 277 14 328 1 255 2 257 2 15 2 349 3 207 2 279 5 
277 1 282 1 147 1 
245 1 282 1 196 1 
294 2 245 3 282 6 39 1 283 1 175 3 153 2 353 1 277 3 255 1 257 1 141 1 15 1 349 1 70 1 207 1 279 1 59 1 
282 12 283 2 353 1 268 1 141 1 58 1 294 1 245 6 147 1 39 2 196 1 175 2 200 1 153 2 277 6 348 1 255 1 257 1 15 2 349 2 156 1 279 1 207 2 17 1 259 1 
294 1 245 3 39 1 282 6 195 1 175 2 137 1 277 3 349 1 279 1 57 1 
309 1 282 12 312 1 109 1 137 3 353 1 115 1 141 1 57 3 294 3 245 6 39 1 195 1 175 6 100 1 153 2 79 1 277 6 255 1 257 1 349 1 279 3 
294 1 245 1 147 1 282 2 196 1 175 1 100 1 137 1 153 2 353 1 277 1 255 1 257 1 115 1 141 1 156 1 57 1 58 1 17 1 
282 5 137 1 353 2 115 1 141 2 57 1 58 1 59 1 294 1 245 3 147 2 39 1 196 1 175 2 100 1 153 4 277 2 255 2 328 1 257 2 15 1 156 1 207 1 279 1 17 1 
282 13 283 2 353 2 268 1 141 2 58 1 59 1 245 6 147 1 39 2 196 1 175 1 200 1 153 4 277 7 348 1 255 2 257 2 15 2 349 2 156 1 207 2 279 1 17 1 259 1 
294 1 245 6 283 1 39 2 147 1 282 10 196 1 175 1 200 1 153 2 348 1 353 1 277 4 268 1 255 1 257 1 15 2 141 1 349 1 156 1 207 2 58 1 17 1 259 1 
294 1 245 1 147 1 282 2 196 1 175 1 100 1 137 1 153 2 353 1 277 1 255 1 257 1 115 1 141 1 156 1 57 1 58 1 17 1 
282 12 283 2 353 1 268 1 141 1 58 1 294 1 245 6 147 1 39 2 196 1 175 2 200 1 153 2 277 6 348 1 255 1 257 1 15 2 349 2 156 1 279 1 207 2 17 1 259 1 
245 6 283 1 39 2 147 1 282 11 196 1 200 1 153 4 348 1 353 2 277 5 268 1 255 2 257 2 15 2 141 2 349 1 156 1 207 2 58 1 17 1 259 1 59 1 
309 1 282 12 283 1 353 3 268 1 27 1 141 3 58 1 294 2 245 7 147 1 39 2 196 1 175 4 200 1 153 6 277 5 348 1 255 3 257 3 15 2 349 1 156 1 279 2 207 2 17 1 259 1 
294 2 245 1 282 2 175 4 100 1 137 2 277 1 115 2 279 2 57 2 
245 6 283 1 39 2 147 1 282 11 196 1 200 1 153 4 348 1 353 2 277 5 268 1 255 2 257 2 27 1 15 2 141 2 349 1 156 1 207 2 58 1 17 1 259 1 
294 3 245 5 282 10 39 2 195 1 175 5 153 2 137 2 353 1 79 1 277 5 255 1 257 1 141 1 349 2 279 2 58 1 57 2 
245 2 39 1 282 2 175 1 153 2 353 1 255 1 257 1 141 1 207 1 279 1 58 1 
294 1 245 2 283 1 39 1 282 4 175 2 153 2 277 2 353 1 255 1 257 1 141 1 15 1 349 1 207 1 279 1 58 1 
294 1 245 1 309 1 282 3 109 1 175 2 153 6 137 1 277 2 353 3 255 3 257 3 27 1 141 3 279 1 58 1 57 1 
309 2 282 28 283 3 109 1 137 3 353 5 138 1 115 1 27 1 141 5 270 1 57 3 58 1 59 1 294 6 245 13 147 4 39 4 195 1 196 3 175 11 99 1 100 1 153 10 277 15 255 5 328 1 257 5 15 3 349 4 207 3 279 5 17 1 
231 1 210 1 190 1 134 1 252 1 167 1 136 1 
210 1 264 1 333 1 134 1 252 1 85 1 136 1 231 1 317 1 2 1 190 1 167 1 
265 1 346 1 276 1 226 1 61 1 284 1 287 1 251 1 278 1 22 1 135 1 
226 1 61 1 284 1 344 1 251 1 62 1 252 1 22 1 135 1 136 2 276 1 346 1 190 1 128 1 271 1 167 2 340 1 193 1 
281 1 226 3 61 1 284 1 250 1 149 1 344 1 62 1 252 2 22 1 135 2 51 1 136 2 276 1 346 1 190 1 74 1 128 1 271 2 167 2 192 1 340 1 193 2 
281 1 226 3 61 1 284 1 250 1 149 1 344 1 62 1 252 2 22 2 135 2 51 1 136 2 276 2 346 2 114 1 190 1 74 1 240 1 271 2 167 2 192 1 340 1 193 2 
226 1 350 1 21 1 22 1 51 1 289 1 136 1 188 1 233 1 354 1 74 1 167 1 193 1 9 1 246 1 295 1 172 1 41 1 62 1 252 1 346 1 276 1 
226 1 21 1 22 1 51 1 289 1 136 1 188 1 233 1 354 1 74 1 167 1 193 1 9 1 246 1 295 1 172 1 41 1 62 1 252 1 218 1 346 1 276 1 
346 1 276 1 203 1 61 1 284 1 22 1 
35 1 194 1 226 3 97 1 284 2 61 3 49 1 133 1 251 2 22 7 135 2 276 6 346 7 203 1 165 1 336 1 291 1 101 1 90 1 271 1 75 1 
226 1 284 1 187 1 22 1 135 1 136 2 163 1 137 1 353 2 115 1 237 1 141 2 271 1 167 2 57 1 340 1 193 1 294 1 361 2 61 1 97 1 248 1 344 1 252 1 62 1 175 1 323 2 100 1 276 1 346 1 153 4 255 2 13 1 257 2 128 1 209 1 
226 1 186 1 86 1 51 1 289 2 136 1 137 1 188 2 233 1 56 1 57 1 193 1 6 5 144 1 9 2 246 1 295 1 343 1 195 1 251 1 62 1 252 1 346 1 349 2 206 1 102 1 260 1 351 2 21 2 22 1 110 1 111 2 354 1 318 4 167 1 362 1 172 1 39 2 41 1 218 1 45 2 276 1 79 1 370 2 221 2 
121 1 226 2 97 1 284 1 61 2 22 2 135 1 276 2 346 2 203 1 165 1 271 1 342 1 
226 1 61 1 97 1 284 1 50 1 251 1 287 1 22 4 135 1 276 4 346 4 114 1 278 1 
226 1 284 1 61 2 133 1 22 2 135 1 276 2 346 2 290 1 74 1 271 1 75 1 31 1 242 1 
158 1 346 1 276 1 76 1 55 1 61 1 284 1 251 1 69 1 22 1 
226 1 97 1 284 1 61 1 49 1 22 2 135 1 276 2 346 2 291 1 181 1 
194 1 226 3 97 1 284 2 61 2 49 1 50 1 287 1 251 1 22 5 135 2 276 4 346 5 74 1 90 1 278 1 
226 3 97 1 284 2 61 2 49 1 50 1 287 1 251 1 22 5 135 2 276 4 346 5 326 1 74 1 90 1 278 1 
226 1 61 1 284 1 344 1 251 1 62 1 252 1 22 1 135 1 136 2 276 1 346 1 190 1 240 1 271 1 167 2 340 1 193 1 
35 1 226 1 284 1 61 2 133 1 22 1 135 1 276 1 346 1 165 1 74 1 271 1 75 1 
225 1 310 1 190 1 363 1 103 1 
9 1 36 1 281 1 0 1 225 2 296 1 310 2 363 1 21 2 110 1 51 1 289 2 188 1 190 1 338 1 192 1 130 1 103 2 5 1 
120 1 225 1 355 1 363 1 258 1 252 1 167 1 136 1 103 1 
36 1 363 1 338 1 
43 1 265 1 26 1 84 1 
43 1 132 1 26 1 298 1 84 1 107 1 81 1 
54 1 132 1 241 1 
48 1 247 1 94 2 132 3 298 1 107 3 84 1 352 1 43 1 325 1 26 1 81 1 
43 1 256 1 132 2 26 1 298 1 84 1 107 2 42 1 81 1 
43 1 48 1 125 1 132 1 55 1 113 1 298 1 364 1 69 1 107 1 81 1 
43 1 48 1 132 1 26 1 298 1 107 1 81 1 
48 1 132 1 26 2 298 1 84 1 107 1 81 1 
48 1 132 2 298 2 107 2 43 1 201 1 14 1 26 1 3 1 81 2 
48 1 132 3 298 1 84 1 107 3 162 1 42 2 43 2 125 1 26 1 116 1 180 1 81 1 
48 1 76 1 132 2 298 1 84 1 107 2 42 1 43 1 267 1 26 1 55 2 113 1 127 1 69 1 81 1 
48 1 170 1 132 4 298 2 84 1 107 4 42 2 43 2 125 1 256 1 26 1 116 1 81 2 
43 1 48 1 94 1 132 3 26 1 298 1 180 1 84 1 107 3 42 1 81 1 
43 1 125 1 12 1 116 1 
43 1 26 1 
43 1 48 1 132 1 26 1 298 1 84 1 107 1 81 1 
94 1 247 1 12 1 132 4 298 1 84 2 107 4 42 2 325 1 43 3 125 1 26 2 116 1 81 1 
48 1 82 1 132 2 227 1 298 1 107 2 84 1 197 1 42 1 43 1 26 1 81 1 
48 1 224 1 247 2 94 2 132 3 298 1 107 3 84 1 325 1 43 1 26 1 81 1 
43 2 53 1 360 1 95 2 
48 1 332 1 132 1 298 1 107 1 81 1 
43 1 48 1 132 2 26 1 298 1 84 1 180 1 107 2 42 1 81 1 
372 1 
43 1 48 1 132 1 26 1 298 1 84 1 107 1 81 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 74 196 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 313 127 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 313 127 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (107,340) (107,340) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (107,340) 90 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (107,340) (107,340) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 1 85 1 126 2 104 1 305 9 206 2 21 1 158 3 46 2 259 1 5 1 6 2 160 2 341 4 140 1 167 1 114 1 30 1 31 6 346 9 194 1 173 2 119 1 249 1 101 2 37 1 201 1 177 5 
301 1 85 1 126 2 104 1 305 9 206 2 21 1 158 3 46 2 259 1 5 1 6 2 160 2 341 4 140 1 167 1 114 1 30 1 31 6 346 9 194 1 173 2 119 1 249 1 37 1 101 2 201 1 177 5 
301 1 85 1 126 2 104 1 305 10 206 2 21 1 158 4 46 2 259 1 5 1 6 2 160 2 341 5 140 1 167 1 114 1 30 1 31 7 346 10 194 1 173 2 119 1 249 1 37 1 101 2 201 1 177 6 
301 1 85 1 126 2 104 1 305 7 206 2 21 1 158 2 46 2 5 1 6 2 160 2 341 3 140 1 167 1 114 1 30 1 31 4 346 7 194 1 173 2 119 1 249 1 37 1 101 1 201 1 177 4 
341 2 167 1 30 1 305 4 31 3 206 1 346 4 194 1 158 1 173 1 46 1 259 1 6 1 5 1 160 1 37 1 101 2 177 3 
126 1 140 1 87 1 167 1 30 1 305 2 206 1 346 2 194 1 21 1 208 1 173 1 6 1 160 1 177 1 178 1 
341 1 126 1 167 1 30 1 305 3 31 1 346 3 194 1 158 1 173 2 160 2 201 1 177 2 
126 1 104 1 278 1 305 9 206 1 158 3 46 1 259 1 5 1 6 1 160 2 341 4 167 1 30 1 31 7 346 9 194 1 348 1 173 2 119 1 37 1 101 2 201 1 177 5 
126 1 104 1 278 1 305 9 206 1 158 3 46 1 259 1 5 1 6 1 160 2 341 4 167 1 30 1 31 7 346 9 194 1 348 1 173 2 119 1 37 1 101 2 201 1 177 5 
365 1 
226 1 215 1 324 2 
352 2 197 2 132 2 337 2 1 2 314 1 228 1 244 2 
303 1 17 1 1 2 106 1 257 1 306 1 108 1 228 1 20 1 311 1 232 1 112 1 210 1 233 1 132 2 337 2 7 1 314 1 361 1 70 1 190 1 164 1 213 1 29 1 292 1 115 2 294 1 244 2 53 2 351 1 352 3 197 3 36 1 271 2 148 1 123 2 372 2 
353 1 352 1 197 1 132 1 337 1 1 1 314 1 205 1 282 1 244 1 
353 1 1 1 322 1 224 1 143 1 45 1 205 2 282 1 226 1 182 1 244 1 184 1 11 1 197 2 352 2 132 1 337 2 25 1 121 1 314 1 318 1 
353 1 224 2 1 2 322 2 45 1 205 2 282 1 226 1 244 2 184 1 11 1 197 2 352 2 132 2 337 2 25 1 121 1 314 1 318 1 
110 1 153 1 224 1 322 1 332 1 
195 1 110 1 153 1 224 2 322 2 45 1 226 1 363 1 
110 1 224 1 322 1 
353 1 153 1 322 1 224 1 1 1 205 1 282 1 244 1 197 1 352 1 132 1 337 1 121 1 314 1 
226 1 
110 1 153 1 224 2 322 2 19 1 45 1 226 1 363 1 
196 1 153 1 146 1 279 1 224 2 322 2 199 1 74 1 58 1 
365 1 
1 1 228 2 244 1 197 2 352 2 132 1 337 2 251 1 79 1 
277 1 86 1 230 1 
213 1 29 1 343 1 292 1 115 1 228 1 232 1 112 1 351 1 352 1 197 1 36 1 271 1 70 1 372 1 164 1 
213 1 330 1 29 1 1 1 292 1 115 1 230 1 232 1 351 1 112 1 36 1 197 2 352 2 132 1 337 1 271 1 260 1 70 1 372 1 164 1 
330 1 352 3 197 3 132 3 337 3 1 3 228 1 244 1 
353 1 352 1 197 1 132 1 337 1 1 1 205 1 
352 1 197 1 132 1 337 1 1 1 251 1 205 1 79 1 244 1 
330 1 224 1 1 3 228 1 184 1 232 1 132 3 233 1 337 3 7 1 292 1 244 2 53 2 11 1 351 1 197 4 352 4 148 1 303 1 306 1 257 1 106 1 205 2 311 1 112 1 210 1 25 1 314 1 260 1 70 1 361 1 164 1 318 1 213 1 29 1 168 1 322 1 115 1 270 1 118 1 36 1 271 1 79 1 372 1 123 1 
179 1 352 2 197 2 330 1 132 1 337 2 1 1 228 1 182 1 
330 2 224 1 322 1 1 3 205 1 226 1 244 1 11 1 184 1 23 1 197 3 352 3 118 1 132 3 337 3 25 1 79 1 260 1 318 1 
277 1 330 1 1 2 230 1 244 1 197 2 352 2 132 2 337 2 79 1 
213 1 29 1 292 1 115 1 228 1 232 1 112 1 351 1 352 1 197 1 36 1 271 1 372 1 70 1 164 1 
213 1 367 1 29 1 292 1 115 1 228 1 172 1 232 1 112 1 352 1 197 1 36 1 271 1 372 1 70 1 
303 1 203 1 86 1 62 1 106 2 257 1 230 1 53 2 216 1 35 1 233 1 210 1 7 1 123 2 361 1 72 1 
9 1 352 1 197 1 132 1 25 1 337 1 1 1 205 1 
179 1 330 2 1 4 228 1 10 1 182 1 244 1 326 1 197 5 352 5 132 4 337 5 79 1 260 1 
9 1 353 1 352 2 197 2 132 2 337 2 1 2 205 1 
159 1 145 1 
159 1 145 1 
92 1 263 1 
92 1 263 1 
92 1 263 1 
159 1 111 1 145 1 
159 1 145 1 138 1 
159 2 92 1 145 2 26 1 71 1 263 1 
159 1 111 1 145 1 
159 1 111 1 145 1 
159 1 192 1 145 1 
159 1 192 1 145 1 
159 1 192 1 145 1 
27 1 238 2 0 2 368 2 369 2 154 1 240 1 322 2 224 2 97 3 226 1 98 1 109 1 159 2 24 2 188 1 211 1 145 2 26 1 
302 1 1 2 224 1 228 1 155 1 109 1 131 1 159 1 24 1 132 2 337 2 358 1 138 1 238 1 369 1 368 1 97 1 322 1 268 1 197 2 352 2 145 1 12 1 200 1 
46 1 6 1 206 1 
6 1 206 1 208 1 
285 1 46 2 144 1 214 1 6 3 208 1 
285 1 46 1 214 1 328 1 6 2 208 1 
285 2 46 1 214 1 6 2 208 1 
40 3 222 1 203 1 153 4 331 1 279 1 224 5 45 1 226 2 310 1 131 1 110 1 133 2 357 2 358 1 163 1 363 1 72 1 165 1 322 5 241 1 215 1 324 3 323 1 349 1 100 1 198 1 199 1 175 2 176 2 200 1 58 1 
40 8 222 1 203 3 153 7 61 5 18 1 224 9 279 2 332 5 45 1 226 5 310 3 110 6 133 6 357 6 358 4 48 1 136 1 163 2 363 1 72 3 165 1 322 9 215 3 99 1 324 9 269 1 349 3 100 2 198 3 146 1 77 1 199 2 175 6 58 2 
40 3 203 1 153 2 279 1 224 3 45 1 226 3 310 1 357 2 133 2 358 1 163 1 72 1 322 3 241 1 215 2 323 1 324 4 349 1 100 1 198 1 146 1 199 1 176 1 175 2 58 1 
40 5 203 2 153 3 279 1 224 4 45 1 226 4 310 2 133 4 357 4 358 2 48 1 163 1 72 2 322 4 241 1 215 3 324 7 99 1 323 1 269 1 349 2 100 1 198 2 146 1 199 1 175 4 176 2 58 1 
365 1 
237 1 70 1 
298 1 
213 1 70 1 
213 1 68 2 292 1 70 3 298 1 81 1 231 1 
213 1 292 1 70 1 
370 1 70 1 
319 2 203 1 265 1 106 2 281 1 333 1 108 4 309 1 296 1 187 2 91 1 198 1 162 1 218 1 8 3 123 6 103 1 
319 2 203 1 265 1 106 3 281 1 333 1 108 4 309 1 296 1 187 2 91 1 198 1 162 1 218 1 8 3 123 7 103 1 
319 2 203 1 265 1 106 2 169 1 281 1 333 1 108 4 309 1 296 1 187 2 91 1 198 1 162 1 218 1 8 3 123 6 103 1 
303 1 203 5 16 1 42 3 255 1 257 1 106 19 281 2 333 1 66 1 108 19 309 2 310 2 22 1 91 1 187 3 210 1 7 1 135 1 162 5 8 13 339 1 72 2 319 8 265 3 347 3 53 2 296 3 349 2 34 1 198 5 218 1 123 38 103 2 
303 2 203 1 16 1 128 1 106 5 257 2 281 1 108 5 333 1 309 1 187 2 210 2 7 2 162 1 8 5 319 4 265 1 116 1 53 4 296 1 198 1 218 1 123 10 103 1 
126 1 151 1 305 2 206 1 308 1 208 1 183 1 46 1 6 2 160 1 261 1 94 1 167 1 291 1 29 1 30 1 31 1 115 1 75 1 346 2 194 1 173 1 36 1 144 1 120 1 271 1 372 1 82 1 177 1 83 1 
126 1 151 1 305 3 206 1 208 1 183 1 46 1 6 2 160 1 261 1 362 1 94 1 167 1 29 1 30 1 31 2 115 1 75 1 346 3 173 1 217 1 144 1 36 1 120 1 271 1 56 1 372 1 82 1 177 1 83 1 
126 1 151 1 94 1 167 1 29 1 30 1 305 2 31 2 115 1 206 1 346 2 208 1 183 1 46 1 217 1 144 1 36 1 120 1 6 2 271 1 56 1 261 1 372 1 82 1 177 1 
213 1 139 1 126 2 152 1 94 2 166 1 29 1 142 1 305 1 115 1 346 1 55 1 173 1 112 1 36 1 120 2 13 1 160 1 271 1 261 2 70 1 372 1 362 1 
126 1 151 1 305 1 206 1 308 1 208 1 183 1 46 1 6 2 160 1 261 1 94 1 29 1 115 1 75 1 346 1 194 1 173 1 36 1 144 1 120 1 271 1 56 1 372 1 82 1 83 1 
289 1 
40 2 222 1 180 1 223 1 224 5 279 1 45 2 89 1 226 3 182 1 184 1 337 1 96 4 143 1 11 1 245 2 197 1 352 1 247 1 13 1 199 1 147 1 58 1 204 2 105 1 63 2 205 1 64 1 209 1 110 6 112 2 312 1 357 2 25 1 163 1 70 1 316 2 363 3 212 1 318 1 213 1 364 1 166 1 29 1 322 5 266 1 115 2 215 2 324 2 371 2 36 1 271 2 372 2 273 2 84 2 
180 1 224 3 19 1 205 1 45 2 89 1 226 2 182 1 184 1 209 1 110 2 312 1 337 1 25 1 363 1 318 1 364 1 322 3 96 2 143 1 11 1 245 1 352 1 197 1 
364 1 180 1 204 1 96 3 322 2 224 2 143 1 45 2 205 1 226 2 89 1 182 1 11 1 184 1 209 1 312 1 197 1 352 1 25 1 337 1 318 1 
180 1 204 1 224 3 19 1 205 1 45 2 89 1 226 2 182 1 184 1 209 1 110 2 312 1 337 1 25 1 363 1 318 1 364 1 322 3 96 3 143 1 11 1 245 1 371 1 352 1 197 1 
40 1 222 1 180 1 224 3 279 1 1 1 45 3 129 1 226 3 89 1 282 1 182 1 184 1 132 1 337 2 96 2 143 1 242 1 244 1 11 1 245 2 352 2 197 2 247 1 199 1 58 1 353 1 19 1 205 2 209 1 67 1 110 3 312 1 357 1 25 1 314 1 363 1 318 1 364 1 322 3 371 2 327 1 121 1 
40 1 222 1 180 1 224 4 279 1 45 3 226 4 89 1 182 1 184 1 337 1 96 4 143 1 11 1 245 2 352 1 197 1 247 1 199 1 147 1 58 1 204 2 105 1 63 2 205 1 209 1 110 4 312 1 357 1 25 1 316 2 363 2 318 1 364 1 322 4 215 2 324 2 371 2 84 2 273 2 
353 1 40 1 222 1 180 1 1 1 279 1 224 2 205 2 45 3 282 1 89 1 226 3 182 1 184 1 209 1 312 1 132 1 357 1 337 2 25 1 314 1 318 1 364 1 322 2 96 2 143 1 242 1 244 1 11 1 352 2 197 2 327 1 247 1 121 1 199 1 58 1 
353 1 40 1 222 1 180 1 1 1 279 1 224 2 205 2 45 3 282 1 89 1 226 3 182 1 184 1 209 1 312 1 132 1 357 1 337 2 25 1 314 1 318 1 364 1 322 2 96 2 143 1 242 1 244 1 11 1 352 2 197 2 327 1 247 1 121 1 199 1 58 1 
40 1 222 1 60 1 304 1 43 1 180 1 204 2 105 1 279 1 224 4 63 2 205 1 45 3 89 1 226 3 182 1 184 1 209 1 110 4 335 1 312 1 357 1 337 1 25 1 161 2 363 2 316 2 318 1 364 1 322 4 96 4 143 1 324 2 11 1 245 2 371 2 352 1 197 1 199 1 272 2 58 1 
353 1 40 1 222 1 180 1 204 1 1 1 279 1 224 2 205 2 45 3 282 1 89 1 226 3 182 1 184 1 209 1 67 1 110 1 312 1 132 1 357 1 337 2 25 1 314 1 318 1 364 1 322 2 96 3 143 1 242 1 244 1 11 1 245 1 371 1 327 1 352 2 197 2 247 1 121 1 199 1 58 1 
353 1 40 1 222 1 180 1 204 1 1 1 279 1 224 2 205 2 45 3 282 1 89 1 226 3 182 1 184 1 209 1 67 1 110 1 312 1 132 1 357 1 337 2 25 1 314 1 318 1 364 1 322 2 96 3 143 1 242 1 244 1 11 1 245 1 371 1 327 1 352 2 197 2 247 1 121 1 199 1 58 1 
40 1 222 1 180 1 224 4 279 1 45 3 226 3 89 1 182 1 184 1 335 1 337 1 96 4 143 1 11 1 245 2 352 1 197 1 199 1 147 1 58 1 204 2 105 1 63 2 205 1 209 1 110 4 312 1 357 1 25 1 161 2 316 2 363 2 318 1 364 1 322 4 324 2 371 2 272 2 
365 1 303 1 35 1 210 1 233 1 7 1 257 1 361 1 53 2 
303 2 277 5 42 2 86 7 88 1 44 1 106 3 257 2 205 1 228 1 230 7 108 6 156 1 310 2 284 1 210 2 233 1 7 2 93 1 361 2 168 1 347 2 53 4 349 2 198 2 148 1 123 9 202 1 
303 1 277 1 254 1 330 1 88 1 1 1 257 1 106 1 228 1 108 1 232 1 112 1 210 1 233 1 132 1 337 1 7 1 69 1 260 1 70 1 361 1 164 1 213 1 29 1 343 1 292 1 115 1 294 1 53 2 54 1 351 1 36 1 352 2 197 2 271 1 148 1 372 1 123 2 
303 1 330 1 88 1 1 1 257 1 106 1 227 1 112 1 210 1 233 1 132 1 337 1 7 1 260 1 361 1 115 1 53 2 352 1 197 1 271 1 148 1 123 1 372 1 
275 1 303 2 330 1 1 1 256 1 257 2 106 1 108 1 112 2 132 1 210 2 233 2 337 1 7 2 359 1 70 3 361 2 190 2 213 2 191 1 342 1 50 1 166 1 291 1 29 2 115 8 294 1 32 1 53 4 35 1 352 1 197 1 36 2 271 8 13 1 56 1 148 1 372 7 123 2 
303 1 277 1 203 1 86 1 1 1 88 1 257 1 106 2 230 1 108 1 310 1 210 1 233 1 132 1 337 1 7 1 8 1 361 1 72 1 319 1 320 1 244 1 53 2 349 1 197 1 352 1 198 1 79 1 123 3 
303 1 86 1 257 1 230 1 108 2 53 2 349 1 35 1 233 1 210 1 198 1 7 1 123 2 361 1 236 1 
303 1 203 1 86 1 257 1 106 2 230 1 53 2 216 1 35 1 233 1 210 1 7 1 123 2 361 1 72 1 
303 1 86 1 257 1 230 1 108 2 53 2 310 1 349 1 35 1 233 1 210 1 198 1 7 1 123 2 361 1 
303 1 50 1 86 1 257 1 230 1 108 2 53 2 349 1 233 1 210 1 198 1 7 1 123 2 361 1 236 1 
303 1 50 1 203 1 86 1 257 1 106 2 230 1 53 2 216 1 233 1 210 1 7 1 123 2 361 1 72 1 
303 1 50 1 86 1 257 1 230 1 108 2 53 2 310 1 349 1 233 1 210 1 198 1 7 1 123 2 361 1 
303 1 86 1 257 1 230 1 108 2 53 2 310 1 349 1 233 1 210 1 198 1 7 1 361 1 123 2 
303 1 257 1 106 1 108 1 228 1 232 1 311 1 112 1 233 1 210 1 7 1 70 1 361 1 164 1 213 1 29 1 292 1 115 1 294 1 53 2 351 1 36 1 197 1 352 1 271 1 148 1 123 2 372 1 
303 1 257 1 106 1 108 1 228 1 232 1 112 1 233 1 210 1 7 1 70 1 361 1 213 1 367 1 29 1 292 1 115 1 294 1 53 2 172 1 36 1 197 1 352 1 271 1 148 1 123 2 372 1 220 1 
303 1 86 1 88 1 257 1 230 1 108 2 53 2 310 1 349 1 233 1 210 1 198 1 7 1 123 2 361 1 
303 1 86 1 257 1 230 1 108 2 310 1 232 1 311 1 233 1 210 1 7 1 70 1 361 1 164 1 213 1 291 1 29 1 292 1 115 1 53 2 349 1 351 1 36 1 197 1 352 1 198 1 271 1 123 2 219 1 372 1 
303 1 277 1 86 1 1 1 88 1 257 1 108 2 230 1 310 1 210 1 233 1 132 1 337 1 7 1 162 1 8 1 361 1 345 1 244 1 53 2 349 1 197 1 352 1 198 1 79 1 123 2 
303 2 41 1 203 3 42 2 127 1 255 1 257 2 106 10 283 2 108 9 310 3 185 1 210 2 234 1 7 2 313 2 162 3 8 6 317 1 72 3 319 3 28 1 116 1 347 1 33 1 53 4 349 3 198 3 123 19 202 1 
253 1 221 1 303 3 276 1 16 2 203 2 41 2 42 2 127 1 255 2 106 12 257 3 283 4 108 14 310 3 4 1 210 3 234 1 7 3 313 1 162 2 8 3 317 1 72 2 319 1 51 1 116 1 347 2 33 2 53 6 325 1 349 3 198 3 123 26 
253 1 221 1 276 1 303 3 16 1 41 2 203 5 42 4 127 1 255 3 257 3 106 21 333 1 283 4 108 20 310 4 185 1 187 1 4 1 210 3 234 1 7 3 313 1 162 4 8 8 317 1 72 4 319 4 265 1 51 1 116 1 347 3 325 1 33 1 53 6 296 1 349 4 198 5 218 1 123 41 103 1 39 1 202 1 
221 1 276 1 41 2 42 4 127 1 283 4 333 1 185 1 187 1 4 1 234 1 7 4 8 8 51 1 347 3 53 8 296 1 349 4 198 5 103 1 202 1 253 1 303 4 203 4 16 2 255 3 106 19 257 4 108 20 310 4 210 4 313 1 162 3 317 1 72 3 319 5 265 1 116 1 33 1 325 1 218 1 123 39 39 1 
253 1 221 1 276 1 303 2 16 1 41 1 203 7 42 4 127 1 255 2 44 2 257 2 106 22 333 1 283 2 108 23 310 6 187 1 4 1 210 2 234 1 7 2 313 1 162 6 8 13 317 1 72 6 319 7 265 1 51 1 116 1 347 4 325 1 33 1 53 4 296 1 349 6 198 7 218 1 123 45 103 1 202 2 
159 1 27 1 24 1 238 1 369 1 368 1 145 1 26 1 78 1 98 1 
12 1 138 1 
159 1 24 1 238 1 369 1 368 1 145 1 225 1 149 1 264 1 
27 1 238 1 0 1 368 1 369 1 154 1 240 1 322 1 224 1 97 2 226 1 98 1 109 1 159 1 24 1 188 1 145 1 26 1 
27 1 238 1 0 1 368 1 369 1 154 1 240 1 322 1 224 1 97 2 226 1 98 1 109 1 159 1 24 1 188 1 145 1 26 1 
27 1 238 1 0 1 368 1 369 1 154 1 240 1 322 1 224 1 97 2 226 1 98 1 109 1 159 1 24 1 188 1 145 1 26 1 
111 1 193 1 71 1 
111 1 193 1 71 1 
171 1 192 1 
171 1 192 1 71 1 
302 1 155 1 
302 1 0 1 153 1 224 1 1 2 228 1 155 1 131 1 159 1 24 1 188 1 132 2 358 1 337 2 138 1 238 1 369 1 368 1 322 1 97 1 268 1 352 2 197 2 145 1 12 1 252 1 200 1 
111 1 193 1 
171 1 192 1 71 1 
352 1 197 1 337 1 307 1 
151 1 141 1 291 1 29 1 115 2 206 1 75 1 117 1 208 1 183 1 46 1 144 1 36 1 356 1 6 2 271 2 56 1 261 1 372 2 
151 1 29 1 115 1 206 1 75 1 117 1 208 1 183 1 46 1 144 1 36 1 6 2 271 1 56 1 261 1 372 1 299 1 
213 1 152 1 141 1 166 1 29 1 115 1 52 1 112 1 36 1 271 1 13 1 261 1 70 1 372 1 
151 1 141 1 29 1 115 1 206 1 75 1 117 1 208 1 183 1 46 1 144 1 36 1 356 1 6 2 271 1 56 1 261 1 372 1 
189 1 
365 1 
40 1 222 1 279 1 224 1 45 1 226 2 110 1 357 1 363 1 322 1 215 1 324 1 247 1 199 1 58 1 84 1 273 1 
125 1 59 1 40 4 222 2 203 1 224 2 279 2 226 3 310 1 157 1 258 1 110 2 186 1 112 1 68 1 357 3 133 3 286 1 134 1 163 1 70 4 363 1 290 1 72 1 237 2 213 1 29 1 322 2 292 1 115 1 215 3 324 6 11 1 349 1 36 2 198 1 297 1 271 1 199 2 372 1 175 3 81 1 58 2 
125 1 40 7 253 1 222 2 276 1 203 2 42 1 224 1 255 1 279 2 45 1 226 4 310 2 110 1 4 1 133 5 357 4 363 1 72 2 322 1 51 1 215 3 347 1 324 6 325 1 349 2 198 2 174 1 199 2 175 5 58 2 
353 1 125 2 40 2 222 1 203 1 279 1 224 1 1 1 2 1 205 1 282 1 357 2 132 1 337 1 314 1 339 1 265 1 322 1 244 1 296 1 352 1 197 1 327 1 198 2 199 1 121 1 58 1 103 1 
49 1 40 1 222 1 279 1 45 1 226 1 357 1 199 1 288 1 58 1 
125 2 40 5 203 2 2 1 226 5 215 5 324 10 310 2 349 2 198 2 357 5 133 5 297 1 175 5 72 2 
110 1 224 1 322 1 45 1 226 1 363 1 
40 2 222 1 354 1 223 1 279 2 224 3 110 4 112 2 336 1 357 2 163 2 70 1 212 2 363 2 213 1 166 1 29 1 322 3 266 1 115 4 36 1 146 1 199 2 271 4 13 1 372 4 124 2 58 2 329 1 
303 1 1 2 106 1 257 1 306 1 228 1 311 1 232 1 112 1 210 1 132 2 233 1 337 2 7 1 314 1 70 1 361 1 164 1 213 1 29 1 292 1 115 1 244 2 53 2 351 1 352 3 197 3 36 1 271 1 148 1 123 1 372 1 
125 1 40 2 222 1 279 1 45 2 226 4 187 1 357 2 133 2 163 1 212 1 215 2 324 4 199 1 175 2 58 1 
24 1 369 1 248 1 
302 1 24 1 369 1 98 1 243 1 
24 1 369 1 248 1 
24 1 369 1 248 1 
24 1 369 1 295 1 
24 1 369 1 295 1 
24 1 369 1 295 1 
24 1 369 1 
159 1 145 1 
319 1 303 2 203 1 16 1 265 1 106 3 257 2 108 4 333 1 53 4 296 1 187 1 198 1 210 2 7 2 162 1 8 2 218 1 123 7 103 1 
365 1 
319 1 303 1 203 1 106 2 257 1 170 1 108 2 53 2 310 1 349 1 210 1 198 1 7 1 162 1 8 2 123 4 72 1 
319 1 203 1 42 2 255 1 106 4 108 3 347 1 310 1 349 1 198 1 162 1 8 2 123 7 72 1 202 1 
15 1 303 2 203 3 16 2 42 2 44 1 106 11 257 2 333 1 108 11 156 1 310 2 187 1 210 2 7 2 162 4 8 8 72 2 319 4 265 2 347 2 53 4 296 2 349 2 198 3 218 1 123 22 103 1 202 1 
42 1 106 1 123 1 
123 1 108 1 347 1 
319 2 303 1 203 1 257 1 106 3 170 1 108 3 53 2 310 1 349 1 210 1 198 1 297 1 7 1 162 1 8 3 123 6 72 1 
253 1 303 1 276 1 203 2 42 1 255 1 106 6 257 1 108 6 310 2 210 1 4 1 7 1 162 1 8 2 72 2 319 1 51 1 116 1 347 1 53 2 325 1 349 2 198 2 123 12 
319 1 203 1 265 1 106 3 108 3 296 1 198 1 162 1 8 2 123 6 103 1 
319 1 15 1 303 1 16 1 265 1 106 2 257 1 108 1 333 1 53 2 296 1 210 1 7 1 162 1 8 2 218 1 123 3 
319 3 303 1 203 2 265 2 257 1 106 5 116 1 108 5 53 2 296 2 210 1 198 2 7 1 162 2 8 5 123 10 339 1 103 1 
303 1 257 1 116 1 108 2 53 2 349 1 210 1 198 1 7 1 162 1 8 1 123 2 
319 1 303 1 203 1 106 2 257 1 116 1 108 2 53 2 310 1 349 1 210 1 198 1 7 1 162 1 8 2 123 4 72 1 
15 1 319 1 303 3 16 1 265 1 106 2 257 3 116 1 108 1 53 6 296 1 185 1 210 3 7 3 162 1 8 2 123 3 
15 1 303 5 16 2 203 5 42 4 255 1 106 17 257 5 333 1 108 16 310 3 22 1 185 1 187 1 210 5 7 5 135 1 162 5 8 11 72 3 319 6 265 3 170 1 116 1 347 3 53 10 296 3 349 3 34 1 198 5 218 1 123 33 103 2 202 1 
253 1 303 1 203 1 42 1 255 1 106 3 257 1 108 4 333 1 187 1 210 1 7 1 8 1 319 1 265 1 116 1 347 1 53 2 296 1 198 1 218 1 123 7 103 1 
253 1 303 2 203 1 42 2 255 1 106 4 257 2 333 1 108 6 310 1 187 1 210 2 7 2 162 1 8 2 319 1 265 1 170 1 116 1 347 1 53 4 296 1 349 1 198 2 218 1 123 10 103 1 202 1 
253 1 303 3 276 1 203 2 16 1 42 1 255 1 106 7 257 3 108 6 310 2 4 1 210 3 7 3 162 1 8 2 72 2 319 1 51 1 170 1 116 1 347 1 53 6 325 1 349 2 198 2 123 13 
253 1 303 3 276 1 16 1 203 1 42 1 255 1 106 4 257 3 108 7 310 2 210 3 4 1 7 3 162 1 8 2 72 1 319 1 51 1 170 1 116 1 347 1 53 6 325 1 349 2 198 2 123 11 
253 1 303 1 203 1 42 1 255 1 106 3 257 1 108 4 333 1 187 1 210 1 7 1 8 1 319 1 265 1 116 1 347 1 53 2 296 1 198 1 218 1 123 7 103 1 
253 1 303 1 276 1 203 2 42 1 255 1 106 6 257 1 108 6 310 2 210 1 4 1 7 1 162 1 8 2 72 2 319 1 51 1 116 1 347 1 53 2 325 1 349 2 198 2 123 12 
253 1 303 4 276 1 203 1 16 2 42 1 255 1 106 5 257 4 108 7 310 2 4 1 210 4 7 4 162 1 8 2 72 1 319 1 51 1 170 1 116 1 347 1 53 8 325 1 349 2 198 2 123 12 
253 1 303 4 276 1 203 1 16 2 42 1 255 1 106 5 257 4 108 7 310 2 185 1 4 1 210 4 7 4 162 2 8 4 72 1 319 2 51 1 116 1 347 1 53 8 325 1 349 2 198 2 123 12 
319 3 203 1 265 3 106 4 333 1 108 3 296 3 198 1 162 3 218 2 8 6 123 7 103 1 
253 1 303 4 276 1 203 1 16 2 42 1 255 1 106 5 257 4 108 7 310 2 185 1 4 1 210 4 7 4 162 1 8 2 72 1 319 1 51 1 116 1 347 1 53 8 325 1 349 2 198 2 123 12 
179 1 352 1 197 1 337 1 360 1 228 1 182 1 
179 1 73 1 65 1 228 1 182 1 47 1 197 1 352 1 337 1 360 1 57 1 338 1 
365 1 112 1 271 1 115 1 372 1 
213 1 330 1 29 1 1 1 292 1 115 1 228 1 232 1 112 1 351 1 36 1 197 2 352 2 132 1 337 1 271 1 70 1 372 1 
330 1 1 1 205 2 228 1 232 1 132 1 337 1 25 1 70 3 318 1 213 2 29 1 95 1 168 1 292 2 370 1 115 1 351 1 352 1 197 1 36 1 271 1 372 1 124 1 
330 1 1 1 205 2 228 1 232 1 132 1 337 1 25 1 70 3 318 1 213 2 29 1 95 1 168 1 292 2 370 1 115 1 172 1 352 1 197 1 36 1 271 1 372 1 124 1 
353 1 1 1 224 2 205 1 45 1 282 1 226 1 110 1 68 1 132 1 337 1 314 1 70 4 237 1 213 1 29 1 95 1 322 2 292 1 344 1 370 1 115 1 244 1 11 1 352 1 197 1 36 1 121 1 250 1 271 1 372 1 124 1 
353 1 1 1 224 2 205 1 45 1 282 1 226 1 110 1 68 1 132 1 337 1 134 1 314 1 70 4 237 1 213 1 29 1 95 1 322 2 292 1 370 1 115 1 244 1 11 1 352 1 197 1 36 1 121 1 271 1 372 1 124 1 
342 1 36 1 29 1 271 1 115 1 372 1 
213 1 112 1 36 1 29 1 292 1 271 1 107 1 70 1 115 1 372 1 81 1 340 1 
330 1 86 1 1 1 88 1 333 1 228 3 230 1 232 1 187 1 132 1 233 2 337 1 7 2 8 4 339 1 291 1 239 1 292 1 53 4 296 2 351 1 197 2 352 2 198 3 103 2 303 2 203 3 257 2 106 6 205 1 108 7 311 1 210 2 162 1 113 1 361 2 70 1 164 1 213 1 319 3 265 2 29 1 168 1 115 1 36 1 271 1 218 1 219 1 372 1 123 13 
125 2 40 4 222 2 224 3 279 2 1 1 2 1 45 2 226 2 282 1 286 1 132 1 337 1 134 1 288 1 339 1 290 1 237 1 49 1 244 1 11 1 296 1 352 1 197 1 198 2 199 2 58 2 103 1 353 1 153 1 354 1 203 2 205 1 258 1 110 2 112 1 68 1 357 5 314 1 70 2 363 1 265 1 322 3 115 1 271 1 121 1 372 1 
213 1 342 1 291 1 29 1 292 1 115 2 186 1 68 1 36 2 271 2 372 2 70 2 81 1 
213 1 166 1 291 1 29 1 115 4 112 1 36 1 271 4 13 1 38 1 372 4 70 1 80 1 
213 1 36 1 90 1 29 1 292 1 271 1 122 1 107 1 70 1 115 1 372 1 130 1 
183 1 112 1 36 1 29 1 6 1 271 1 115 1 372 1 206 1 208 1 
36 1 291 1 29 1 271 2 56 1 115 2 372 2 150 1 
213 2 275 1 191 1 166 1 291 1 29 2 115 5 112 1 36 2 13 1 271 5 359 1 38 1 372 4 70 3 124 1 
213 2 275 1 191 1 166 1 291 1 29 2 115 5 334 1 112 1 36 2 13 1 271 5 38 1 372 4 70 3 124 1 
213 1 330 1 29 1 1 1 292 1 115 1 228 1 232 1 172 1 112 1 36 1 197 2 352 2 132 1 337 1 271 1 70 1 372 1 
213 1 36 1 29 1 292 1 271 1 107 1 70 1 115 1 372 1 124 1 81 1 340 1 
14 1 228 1 137 1 76 1 300 1 
353 1 14 1 153 1 1 1 224 2 205 2 45 1 226 1 282 1 207 1 184 1 132 1 337 1 25 1 314 1 137 1 262 1 318 1 322 2 244 1 76 1 11 1 350 1 352 1 197 1 118 1 121 1 300 1 
14 1 307 1 76 1 300 1 
14 1 350 1 262 1 
365 1 
173 1 167 1 30 1 160 1 305 1 346 1 177 1 
126 1 94 1 346 1 
366 1 167 1 30 1 305 3 267 1 346 3 194 1 21 2 173 1 160 1 315 1 177 1 
173 1 167 1 30 1 101 1 160 1 305 2 31 1 346 2 177 1 
341 1 305 1 206 1 346 1 194 1 173 1 46 1 5 1 6 1 160 1 177 1 
173 1 167 1 160 1 305 1 346 1 177 1 194 1 
173 1 167 2 30 1 160 1 305 1 346 1 194 1 
321 1 167 1 305 2 280 1 346 2 194 1 173 2 160 2 235 1 177 1 
341 1 104 1 167 1 30 1 305 3 31 2 346 3 194 1 158 1 173 1 119 1 160 1 177 2 
167 1 30 1 305 2 31 1 293 1 206 1 346 2 194 1 208 1 173 1 46 1 144 1 6 2 160 1 177 1 
341 1 167 1 30 1 305 4 31 2 346 4 194 1 158 1 173 2 259 1 160 2 101 1 177 2 
173 1 167 1 30 1 160 1 305 1 346 1 177 1 194 1 
341 1 366 1 167 2 30 2 305 4 31 2 267 1 346 4 21 1 158 1 246 1 173 1 160 1 177 3 
167 1 278 1 30 1 305 2 31 1 229 1 346 2 194 1 173 1 160 1 177 1 274 1 
355 1 366 2 167 1 30 1 305 3 267 1 346 3 194 1 21 2 173 1 160 1 177 1 
3 1 181 2 177 2 373 1 
173 1 102 1 160 1 305 1 346 1 194 1 
173 1 119 1 167 1 30 1 160 1 305 2 31 1 346 2 177 1 194 1 
287 1 
173 1 167 1 30 1 160 1 305 1 346 1 177 1 194 1 
173 1 119 1 167 1 30 1 160 1 305 3 31 1 346 3 177 1 194 1 21 1 
246 1 341 1 177 1 158 1 
167 1 177 1 

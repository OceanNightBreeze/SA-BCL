#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 80 237 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 80 6 144 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 80 6 311 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 80 143 164 19 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 361 (46,60,233) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 80 6 333 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 80 237 257 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 80 307 346 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 80 97 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 80 6 311 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 80 97 149 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 80 6 311 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 80 6 34 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 362 69 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 362 69 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 362 102 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 80 97 149 359 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 80 97 149 359 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 80 6 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 300 114 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 80 6 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 80 307 346 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 80 (243,355) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 80 (153,225) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 80 (153,225) 247 90 (70,196) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 366 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 1 5 1 165 1 110 1 31 1 218 6 270 1 11 9 194 3 224 1 197 1 334 5 227 1 339 2 16 2 301 4 78 2 95 2 364 2 205 2 179 2 127 9 304 1 208 1 64 1 215 1 185 1 327 1 
283 1 5 1 165 1 110 1 31 1 218 6 270 1 11 9 194 3 224 1 197 1 334 5 227 1 339 2 16 2 301 4 78 2 95 2 364 2 205 2 179 2 127 9 304 1 208 1 64 1 215 1 185 1 327 1 
283 1 5 1 165 1 110 1 31 1 218 7 270 1 11 10 194 4 224 1 197 1 334 6 227 1 339 2 16 2 301 5 78 2 95 2 364 2 205 2 179 2 127 10 304 1 208 1 64 1 215 1 185 1 327 1 
283 1 5 1 165 1 110 1 31 1 218 4 270 1 11 7 194 2 224 1 197 1 334 4 227 1 339 2 16 2 301 3 78 2 95 1 364 2 205 2 179 2 127 7 304 1 208 1 64 1 215 1 327 1 
339 1 16 1 5 1 301 2 78 1 218 3 95 2 179 1 205 1 127 4 270 1 208 1 194 1 11 4 334 3 227 1 215 1 185 1 
339 1 4 1 5 1 31 1 78 1 179 1 205 1 364 1 127 2 130 1 270 1 208 1 11 2 334 1 64 1 200 1 
5 1 301 1 218 1 179 2 205 2 364 1 127 3 304 1 270 1 208 1 11 3 194 1 334 2 
5 1 165 1 218 7 270 1 194 3 11 9 334 5 336 1 227 1 339 1 16 1 301 4 78 1 95 2 364 1 98 1 205 2 179 2 304 1 127 9 208 1 215 1 185 1 327 1 
5 1 165 1 218 7 270 1 194 3 11 9 334 5 336 1 227 1 339 1 16 1 301 4 78 1 95 2 364 1 98 1 205 2 179 2 304 1 127 9 208 1 215 1 185 1 327 1 
366 1 93 1 265 1 
126 1 
107 2 351 1 152 2 230 2 124 2 119 2 363 2 129 1 
138 1 107 3 347 1 264 1 266 1 68 1 351 1 352 2 354 1 54 1 295 1 316 1 119 2 337 1 15 1 148 1 58 1 229 2 150 2 152 3 91 1 76 1 230 2 38 1 124 2 153 1 363 2 129 1 305 1 23 1 310 1 134 1 345 2 137 1 184 2 242 1 369 1 
107 1 351 1 152 1 230 1 77 1 188 1 124 1 119 1 363 1 292 1 
107 1 151 1 152 1 230 1 93 1 263 1 265 1 32 1 292 1 261 1 353 1 55 1 12 1 358 1 
107 1 151 1 152 1 230 1 93 1 263 2 124 1 265 1 32 2 363 1 292 1 353 1 119 1 55 1 358 1 
237 1 263 1 226 1 80 1 32 1 
6 1 263 1 226 1 80 1 32 1 144 1 
263 1 80 1 32 1 
107 1 152 1 230 1 77 1 188 1 263 1 124 1 32 1 363 1 292 1 351 1 344 1 226 1 119 1 
93 1 
6 1 263 1 226 1 80 1 32 1 311 1 
155 1 164 1 117 1 236 1 263 3 226 2 80 1 32 3 19 1 143 1 291 1 
366 1 129 1 
107 2 152 2 230 2 124 1 363 1 129 2 350 1 119 1 183 1 
3 1 53 1 154 1 
58 1 107 1 138 1 150 1 152 1 153 1 264 1 323 1 68 1 129 1 352 1 316 1 345 1 137 1 337 1 369 1 
58 1 3 1 138 1 107 2 150 1 152 2 230 1 153 1 124 1 264 1 139 1 68 1 352 1 209 1 316 1 119 1 345 1 137 1 337 1 369 1 
107 5 152 5 29 1 230 5 124 4 48 1 139 2 349 1 363 1 129 1 261 1 209 1 119 4 183 1 
0 1 107 2 152 2 230 2 77 1 124 2 119 2 292 1 
107 3 152 3 230 3 124 3 119 3 139 1 363 1 129 1 
107 1 152 1 230 1 77 1 124 1 119 1 292 1 
350 1 107 1 152 1 230 1 124 1 119 1 183 1 363 1 292 1 
138 1 107 4 347 1 263 1 264 1 139 1 32 1 266 1 68 1 292 1 351 1 352 1 354 1 353 1 54 1 316 1 119 3 55 1 337 1 358 1 15 1 58 1 229 2 320 1 151 1 150 1 152 4 91 1 76 1 230 3 153 1 124 3 363 2 129 1 131 1 23 1 209 1 183 1 134 1 345 1 137 1 184 1 242 1 369 1 
107 2 261 1 152 2 29 1 230 2 124 1 119 1 139 1 129 1 
151 1 107 3 320 1 152 3 230 3 93 1 263 1 124 3 32 1 139 2 363 1 292 1 353 1 209 1 119 3 145 1 55 1 183 1 358 1 
107 2 3 1 152 2 230 2 124 2 139 1 363 1 53 1 119 2 183 1 
58 1 107 1 150 1 138 1 152 1 153 1 264 1 68 1 129 1 352 1 316 1 345 1 137 1 337 1 369 1 
243 1 107 1 150 1 138 1 152 1 264 1 68 1 129 1 324 1 352 1 316 1 345 1 137 1 337 1 369 1 
3 2 47 1 347 1 287 1 266 1 168 1 268 1 71 1 53 2 54 1 15 1 229 2 91 1 76 2 154 2 279 1 260 1 22 1 62 1 310 2 240 1 184 4 241 1 242 1 
0 1 107 1 152 1 230 1 124 1 55 1 119 1 292 1 
75 1 233 1 
75 1 233 1 
75 1 361 1 60 1 233 1 
75 1 361 1 60 1 233 1 
361 1 60 1 
75 1 190 1 233 1 
75 1 190 1 233 1 
75 1 361 1 60 1 233 1 
75 1 46 1 233 1 
75 1 190 1 233 1 
75 1 140 1 233 1 
75 1 140 1 233 1 
75 1 140 1 233 1 
253 1 107 1 152 1 230 1 124 1 119 1 
244 1 107 1 66 1 188 1 217 1 263 1 32 1 191 1 292 1 192 1 294 1 351 1 119 1 86 1 253 1 152 1 75 1 230 1 77 1 124 1 231 1 178 1 363 1 42 1 233 1 344 1 368 1 
339 1 16 1 78 1 
339 1 4 1 78 1 
16 2 4 1 122 1 335 1 78 3 290 1 
16 1 4 1 103 1 335 1 78 2 290 1 
16 1 4 1 335 2 78 2 290 1 
333 1 6 1 263 1 226 1 80 1 32 1 
257 1 84 1 237 1 263 2 226 2 80 1 32 2 160 1 
81 1 263 3 265 1 32 3 220 3 291 1 117 1 226 2 296 1 35 2 121 1 17 1 93 3 20 1 126 4 279 1 280 1 155 1 157 2 43 2 22 1 236 1 240 1 213 1 241 1 214 2 
81 2 348 1 263 4 265 1 32 4 220 5 291 1 117 1 296 1 226 3 35 4 121 1 17 2 93 4 126 7 20 2 39 1 279 2 100 1 280 1 155 1 157 4 43 3 22 2 236 1 240 2 213 1 241 2 214 4 
366 1 223 1 
138 1 30 1 
135 1 
138 1 316 1 137 1 
138 1 41 1 
138 1 316 1 
138 3 223 2 316 1 137 1 136 1 49 1 
177 1 342 1 142 1 115 1 169 1 267 1 260 1 268 2 159 1 281 1 310 1 14 1 184 1 
177 1 342 1 142 1 115 1 169 1 267 1 260 1 268 2 159 1 281 1 310 1 14 1 184 1 
177 1 342 1 142 1 115 1 169 1 99 1 267 1 260 1 268 2 159 1 281 1 310 1 14 1 184 1 
262 1 245 1 332 1 249 1 266 1 51 1 115 1 142 2 267 2 169 5 268 9 14 1 15 1 229 2 91 1 177 2 76 12 203 1 360 4 20 3 59 1 342 1 279 3 260 4 156 3 159 2 22 3 281 2 310 13 240 3 184 25 241 3 242 1 
229 4 91 2 177 1 76 1 266 2 342 1 51 1 142 1 115 1 169 1 267 1 260 2 268 3 159 1 172 1 281 1 310 2 184 3 242 2 15 2 328 1 
106 1 4 1 28 1 5 1 189 1 218 1 331 1 68 1 116 1 352 1 270 1 11 2 334 1 13 1 57 1 339 1 150 1 16 1 122 1 341 1 78 2 205 1 179 1 364 1 127 2 206 1 325 1 208 1 345 1 369 1 
106 1 4 1 28 1 5 1 189 1 218 2 331 1 68 1 170 1 116 1 352 1 270 1 11 3 334 1 57 1 339 1 150 1 16 1 321 1 122 1 78 2 204 1 205 1 179 1 364 1 127 3 206 1 325 1 345 1 369 1 
106 1 4 1 5 1 189 1 218 2 331 1 68 1 352 1 270 1 11 2 334 1 57 1 339 1 150 1 16 1 321 1 122 1 78 2 204 1 364 1 127 2 206 1 325 1 345 1 369 1 
106 2 138 1 189 2 68 1 50 1 170 1 352 1 11 1 316 1 337 1 57 2 150 1 275 1 205 1 179 1 364 2 127 1 182 1 309 1 345 1 282 1 27 1 369 1 
106 1 4 1 28 1 189 1 331 1 68 1 116 1 352 1 11 1 13 1 57 1 339 1 150 1 16 1 122 1 78 2 204 1 205 1 179 1 364 1 127 1 206 1 325 1 208 1 345 1 369 1 
56 1 
150 1 346 1 263 1 32 1 220 1 291 1 307 1 117 1 352 1 236 1 296 1 80 1 345 1 337 1 319 1 
151 1 107 1 152 1 230 1 263 2 32 2 97 1 292 1 21 1 343 1 261 1 353 1 24 1 55 1 80 1 12 1 298 2 358 1 162 1 338 1 
151 1 107 1 152 1 6 1 230 1 93 1 248 1 263 2 265 1 32 2 292 1 21 1 343 1 261 1 353 1 24 1 55 1 80 1 12 1 298 3 311 1 162 1 338 1 358 1 
149 1 151 1 107 1 152 1 230 1 263 2 32 2 97 1 292 1 21 1 343 1 261 1 353 1 24 1 55 1 80 1 12 1 298 2 162 1 338 1 358 1 
6 1 263 1 80 1 32 1 311 1 
107 1 6 1 263 2 32 2 220 1 291 1 292 1 117 1 353 1 34 1 35 1 55 1 12 1 298 2 338 1 358 1 319 1 151 1 176 1 152 1 256 1 230 1 302 1 126 1 21 1 343 1 207 1 43 1 261 1 236 1 210 1 24 1 80 1 162 1 
107 1 263 2 32 2 220 1 289 1 69 1 292 1 291 1 117 1 353 1 35 1 55 1 12 1 298 2 358 1 338 1 319 1 151 1 152 1 230 1 362 1 21 1 343 1 261 1 210 1 236 1 24 1 162 1 
107 1 263 2 32 2 220 1 289 1 69 1 292 1 291 1 117 1 353 1 35 1 55 1 12 1 298 2 358 1 338 1 319 1 151 1 152 1 230 1 362 1 21 1 343 1 261 1 210 1 236 1 24 1 162 1 
107 1 263 2 32 2 220 1 292 1 291 1 117 1 353 1 35 1 55 1 12 1 298 2 358 1 338 1 319 1 151 1 152 1 230 1 362 1 21 1 343 1 102 1 367 1 44 1 261 1 236 1 24 1 162 1 
149 1 151 1 107 1 152 1 230 1 263 2 32 2 97 1 292 1 21 1 343 1 261 1 353 1 24 1 55 1 80 1 12 1 298 2 162 1 338 1 358 1 359 1 
149 1 151 1 107 1 152 1 230 1 263 2 32 2 97 1 292 1 21 1 343 1 261 1 353 1 24 1 55 1 80 1 12 1 298 2 162 1 338 1 358 1 359 1 
107 1 263 2 32 2 220 1 291 1 292 1 117 1 353 1 34 1 35 1 55 1 356 1 12 1 298 2 338 1 358 1 319 1 151 1 152 1 230 1 302 1 126 1 21 1 343 1 207 1 261 1 44 1 236 1 212 1 24 1 162 1 
366 1 229 2 347 1 91 1 71 1 54 1 266 1 342 1 115 1 15 1 242 1 
3 8 262 1 347 1 285 1 266 1 169 1 268 2 221 1 53 3 54 1 199 1 15 1 229 2 255 1 274 1 91 1 76 4 360 2 154 8 20 2 279 1 260 1 156 2 22 2 310 6 240 1 184 10 241 2 242 1 
138 1 107 2 347 1 285 1 264 1 139 1 266 1 68 1 288 1 352 1 354 1 53 1 271 1 54 1 316 1 119 1 337 1 15 1 58 1 150 1 229 2 152 2 91 1 230 1 76 1 153 1 124 1 38 1 323 1 278 1 129 1 209 1 345 1 310 1 137 1 184 2 369 1 242 1 
138 2 3 6 285 1 139 1 9 2 142 1 196 2 53 6 54 3 337 1 15 3 58 2 150 3 152 3 91 3 258 1 153 2 154 6 204 1 20 2 342 1 260 3 22 2 209 1 23 2 211 1 345 3 310 7 107 3 216 1 347 3 264 2 266 3 68 2 115 1 169 4 268 7 352 3 354 1 119 1 316 2 73 2 229 6 177 1 76 7 230 1 38 1 124 1 322 2 279 2 240 2 137 2 184 14 241 2 242 3 369 2 
138 4 284 1 139 1 295 2 54 2 198 1 337 2 87 1 15 2 150 7 152 1 91 2 204 1 96 1 61 1 310 1 345 7 107 1 163 1 347 2 67 1 266 2 68 4 171 1 352 6 354 1 71 1 118 1 316 3 119 1 317 1 229 4 275 1 76 1 230 1 38 1 124 1 180 1 182 1 137 1 184 2 242 2 369 3 
3 1 107 1 347 1 285 1 266 1 268 1 53 1 54 1 119 1 15 1 229 2 152 1 91 1 230 1 76 2 124 1 154 1 79 1 20 1 363 1 279 1 260 1 22 1 183 1 310 1 240 1 241 1 184 3 242 1 
3 1 229 2 47 1 347 1 91 1 154 1 266 1 169 1 268 1 22 1 71 1 53 1 54 1 310 2 184 2 241 1 242 1 15 1 
3 1 229 2 347 1 91 1 76 2 154 1 266 1 168 1 279 1 260 1 268 1 71 1 53 1 54 1 240 1 184 2 242 1 15 1 
3 2 347 1 266 1 169 1 268 2 71 1 53 2 54 1 15 1 229 2 91 1 76 2 154 2 20 1 279 1 260 1 22 1 310 2 240 1 241 1 184 4 242 1 
3 1 229 2 47 1 347 1 91 1 67 1 154 1 266 1 169 1 268 1 22 1 53 1 54 1 310 2 184 2 241 1 242 1 15 1 
3 1 229 2 347 1 91 1 76 2 67 1 154 1 266 1 168 1 279 1 260 1 268 1 53 1 54 1 240 1 184 2 242 1 15 1 
3 2 347 1 67 1 266 1 169 1 268 2 53 2 54 1 15 1 229 2 91 1 76 2 154 2 20 1 279 1 260 1 22 1 310 2 240 1 241 1 184 4 242 1 
3 2 347 1 266 1 169 1 268 2 53 2 54 1 15 1 229 2 91 1 76 2 154 2 20 1 279 1 260 1 22 1 310 2 240 1 184 4 241 1 242 1 
138 1 107 1 347 1 264 1 266 1 68 1 352 1 354 1 54 1 316 1 337 1 15 1 58 1 150 1 229 2 152 1 91 1 76 1 38 1 153 1 129 1 23 1 310 1 345 1 137 1 184 2 369 1 242 1 
243 1 138 1 107 1 347 1 264 1 266 1 68 1 352 1 354 1 54 1 316 1 337 1 228 1 15 1 150 1 229 2 152 1 91 1 76 1 38 1 129 1 324 1 310 1 345 1 137 1 184 2 369 1 242 1 
3 2 347 1 285 1 266 1 169 1 268 2 53 2 54 1 15 1 229 2 91 1 76 2 154 2 20 1 279 1 260 1 22 1 310 2 240 1 241 1 184 4 242 1 
3 2 138 1 107 1 347 1 264 1 266 1 68 1 169 1 268 2 352 1 53 2 54 1 316 1 15 1 58 1 150 1 229 2 152 1 91 1 76 2 341 1 153 1 154 2 322 1 20 1 279 1 260 1 22 1 23 1 240 1 310 2 345 1 137 1 184 4 241 1 369 1 242 1 
107 1 3 1 347 1 285 1 266 1 169 1 268 1 53 1 54 1 119 1 15 1 229 2 152 1 91 1 76 1 230 1 124 1 154 1 20 1 363 1 279 1 306 1 22 1 183 1 240 1 310 2 241 1 184 3 242 1 
262 1 111 1 312 1 332 1 8 1 266 2 169 2 314 1 268 4 172 1 15 2 229 4 92 1 91 2 277 1 76 7 123 1 360 2 20 2 303 1 279 2 260 2 156 1 22 2 104 1 310 6 240 2 184 13 241 2 242 2 
187 1 111 3 312 1 332 2 266 3 51 2 169 1 193 1 268 2 195 1 172 1 15 3 37 1 229 6 92 2 91 3 76 9 277 2 360 2 20 2 303 1 279 1 260 1 156 2 158 1 22 2 104 1 240 1 310 11 184 20 241 2 242 3 186 1 
262 1 111 1 312 1 332 1 8 1 266 2 169 1 268 2 172 1 15 2 229 4 92 1 91 2 277 1 76 5 360 2 20 1 303 1 279 1 260 1 156 1 22 1 104 1 310 4 240 1 184 9 241 1 242 2 
262 1 111 1 312 1 332 1 8 1 266 2 169 1 268 2 172 1 15 2 229 4 92 1 91 2 277 1 76 5 360 2 20 1 303 1 279 1 260 1 156 1 22 1 104 1 310 4 240 1 184 9 241 1 242 2 
262 2 187 1 111 3 312 1 332 2 266 2 51 1 142 1 115 1 169 6 193 1 268 12 195 1 172 1 15 2 37 1 229 4 255 2 92 1 91 2 177 1 277 1 76 20 360 4 20 6 342 1 303 1 279 6 260 6 156 4 158 1 22 6 104 1 310 21 240 6 184 41 241 6 186 1 242 2 
75 1 308 1 66 1 330 1 86 1 178 1 318 1 293 1 192 1 233 1 
269 1 46 1 
254 1 273 1 75 1 66 1 86 1 178 1 128 1 192 1 233 1 
234 1 190 1 
2 1 315 1 140 1 
244 1 107 1 188 1 217 1 191 1 292 1 294 1 351 1 119 1 253 1 152 1 230 1 77 1 124 1 231 1 363 1 42 1 344 1 368 1 
244 1 107 1 188 1 217 1 191 1 292 1 294 1 351 1 119 1 253 1 152 1 230 1 77 1 124 1 231 1 363 1 42 1 344 1 368 1 
244 1 107 1 188 1 217 1 191 1 292 1 294 1 351 1 119 1 253 1 152 1 230 1 77 1 124 1 231 1 363 1 42 1 344 1 368 1 
234 1 315 1 190 1 
234 1 315 1 190 1 
2 1 140 1 
2 1 315 1 140 1 
94 1 141 1 
1 1 81 1 107 2 66 1 263 1 32 1 191 1 112 1 141 1 192 1 269 1 226 1 119 2 86 1 173 1 152 2 75 1 230 2 124 2 94 1 231 1 178 1 232 1 129 1 233 1 368 1 46 1 
138 1 107 2 347 1 285 1 246 1 266 1 68 1 352 2 354 1 54 1 295 2 316 1 297 1 317 1 15 1 150 2 229 2 202 1 152 2 91 1 230 2 76 1 38 1 96 1 239 1 345 2 310 1 326 1 184 2 369 1 242 1 
339 1 150 2 329 1 16 1 4 1 122 1 341 1 78 2 204 1 68 1 181 1 116 1 206 1 325 1 352 2 238 1 345 2 57 1 369 1 
339 1 150 1 16 1 4 1 122 1 78 2 204 1 68 1 181 1 116 1 206 1 325 1 352 1 345 1 88 1 57 1 369 1 
138 1 150 1 275 1 68 1 352 1 182 1 309 1 316 1 238 1 133 1 345 1 337 1 57 1 369 1 
339 1 150 1 329 1 16 1 4 1 122 1 78 2 204 1 68 1 181 1 116 1 206 1 325 1 352 1 238 1 345 1 57 1 369 1 
89 1 
366 1 276 1 25 1 
176 1 256 1 6 1 126 1 220 1 291 1 117 1 43 1 236 1 210 1 35 1 80 1 319 1 
300 1 150 1 68 1 291 1 114 1 117 1 352 1 236 1 345 1 337 1 369 1 319 1 
187 1 332 1 220 6 291 1 193 1 117 1 195 1 35 4 319 1 37 1 360 1 126 3 20 2 279 2 157 5 156 1 22 2 236 1 240 2 241 2 214 5 186 1 
107 1 188 1 263 1 32 1 289 1 220 2 292 1 142 1 291 1 351 1 117 1 35 2 119 1 120 1 252 1 319 1 152 1 177 1 230 1 77 1 124 1 363 1 101 1 22 2 344 1 236 1 45 2 240 1 
276 1 93 1 265 1 220 1 291 1 117 1 236 1 25 1 35 1 319 1 
93 2 20 1 126 4 220 2 279 1 157 2 22 1 43 2 35 2 240 1 241 1 214 2 
6 1 80 1 
150 1 346 1 220 1 291 1 352 1 117 1 307 1 236 1 296 1 80 1 105 1 345 1 337 1 319 1 
107 3 138 1 347 1 264 1 266 1 68 1 351 1 352 1 354 1 54 1 119 2 316 1 337 1 15 1 58 1 229 2 150 1 152 3 91 1 76 1 230 2 124 2 153 1 363 2 129 1 23 1 345 1 134 1 137 1 184 1 242 1 369 1 
93 1 265 1 126 1 220 1 291 1 157 1 117 1 222 1 236 1 35 1 296 1 319 1 
66 1 85 1 178 1 
66 1 85 1 178 1 
66 1 178 1 318 1 141 1 65 1 
66 1 85 1 178 1 
74 1 66 1 178 1 
74 1 66 1 178 1 
74 1 66 1 178 1 
66 1 178 1 
75 1 233 1 
229 4 91 2 76 1 177 1 266 2 51 1 342 1 115 1 142 1 169 1 260 1 268 2 310 1 184 2 242 2 15 2 
366 1 342 1 115 1 
229 2 91 1 76 2 266 1 20 1 279 1 169 1 260 1 268 2 22 1 240 1 310 2 241 1 184 4 242 1 15 1 175 1 
262 1 76 4 360 2 332 1 20 1 279 1 169 1 260 1 268 2 156 1 22 1 240 1 310 3 184 7 241 1 
262 1 266 2 51 2 142 4 115 1 169 5 221 1 268 11 120 1 147 1 15 2 229 4 255 1 91 2 177 4 76 14 360 2 20 2 342 1 279 2 101 1 260 6 156 2 22 3 281 1 240 3 310 13 241 2 184 27 242 2 
76 1 360 1 184 1 
156 1 310 1 184 1 
229 2 91 1 76 3 266 1 20 1 9 1 279 1 169 1 260 2 268 3 22 1 310 3 240 1 184 6 241 1 15 1 242 1 175 1 
187 1 332 1 266 1 169 1 268 2 193 1 195 1 172 1 15 1 37 1 229 2 91 1 76 6 360 1 20 2 279 2 260 1 156 1 22 2 310 6 240 2 184 12 241 2 242 1 186 1 
76 3 177 1 142 1 169 1 101 1 260 1 268 2 22 1 310 3 240 1 184 6 
266 1 51 1 115 1 142 3 169 3 268 6 120 1 147 1 15 1 229 2 91 1 76 6 177 3 342 1 260 3 101 1 22 1 281 1 310 6 240 1 184 12 242 1 
229 2 91 1 177 2 76 5 266 1 142 2 169 2 260 3 101 1 268 5 22 2 172 1 310 5 240 2 120 1 184 10 15 1 242 1 
229 2 91 1 266 1 169 1 268 1 22 1 172 1 310 2 241 1 184 2 242 1 15 1 
229 2 91 1 76 2 266 1 20 1 279 1 169 1 260 1 268 2 22 1 172 1 240 1 310 2 241 1 184 4 242 1 15 1 
229 6 91 3 76 2 177 1 8 1 266 3 51 1 142 1 169 1 260 1 268 2 172 1 310 1 147 1 184 3 242 3 15 3 
245 1 262 1 332 1 8 1 266 5 51 2 142 3 115 1 169 5 268 11 172 1 147 1 15 5 175 1 229 10 91 5 177 3 203 1 76 15 360 4 59 1 20 3 342 1 279 3 101 1 260 6 156 3 22 4 310 13 240 4 184 28 241 3 242 5 
229 2 187 1 91 1 177 1 76 1 360 1 332 1 266 1 342 1 142 1 115 1 260 1 268 1 156 1 172 1 310 1 184 2 242 1 15 1 
262 1 187 1 332 1 266 2 142 1 115 1 169 1 268 2 172 1 15 2 175 1 229 4 91 2 177 1 76 2 360 2 20 1 342 1 260 1 156 1 22 1 310 3 184 5 241 1 242 2 
187 1 332 1 266 3 51 1 142 1 115 1 169 1 193 1 268 3 195 1 172 1 15 3 175 1 37 1 229 6 91 3 177 1 76 7 360 1 20 2 342 1 279 2 260 2 156 1 22 2 310 6 240 2 184 13 241 2 242 3 186 1 
187 1 332 1 266 3 51 1 142 1 115 1 169 2 268 4 193 1 195 1 172 1 15 3 175 1 37 1 229 6 91 3 177 1 76 4 360 1 20 2 342 1 279 1 260 2 156 1 22 2 310 7 240 1 184 11 241 2 242 3 186 1 
229 2 187 1 91 1 177 1 76 1 360 1 332 1 266 1 342 1 142 1 115 1 260 1 268 1 156 1 172 1 310 1 184 2 242 1 15 1 
187 1 332 1 266 1 169 1 268 2 193 1 195 1 172 1 15 1 37 1 229 2 91 1 76 6 360 1 20 2 279 2 260 1 156 1 22 2 310 6 240 2 184 12 241 2 242 1 186 1 
187 1 332 1 266 4 51 2 142 1 115 1 169 2 193 1 268 4 195 1 172 1 15 4 175 1 37 1 229 8 91 4 177 1 76 5 360 1 20 2 342 1 279 1 260 2 156 1 22 2 310 7 240 1 184 12 241 2 242 4 186 1 
187 1 332 1 266 4 8 1 51 2 169 3 193 1 268 6 195 1 172 1 15 4 37 1 229 8 91 4 76 7 360 1 20 3 279 2 260 3 156 1 22 3 310 9 240 2 184 16 241 3 242 4 186 1 
177 2 76 1 342 2 115 1 142 2 169 2 260 2 268 4 310 1 184 2 
187 1 332 1 266 4 8 1 51 2 142 1 115 1 169 1 193 1 268 3 195 1 172 1 15 4 37 1 229 8 91 4 177 1 76 5 360 1 20 2 342 1 279 1 260 2 156 1 22 2 310 7 240 1 184 12 241 2 242 4 186 1 
107 1 152 1 261 1 235 1 230 1 29 1 129 1 
107 1 152 1 29 1 230 1 219 1 167 1 129 1 52 1 235 1 261 1 83 1 357 1 
366 1 150 1 352 1 182 1 345 1 337 1 
138 1 107 2 150 1 152 2 230 1 124 1 153 1 264 1 139 1 68 1 129 1 352 1 316 1 119 1 345 1 137 1 337 1 369 1 
138 3 107 2 150 1 152 2 230 2 124 2 153 1 264 1 139 1 68 1 292 1 129 1 41 1 352 1 353 1 55 1 316 2 119 1 72 1 345 1 137 2 161 1 369 1 
243 1 107 2 138 3 264 1 139 1 68 1 292 1 352 2 353 1 72 1 119 1 316 2 55 1 146 1 150 2 152 2 230 2 124 2 129 1 41 1 345 2 137 2 161 1 369 1 
138 1 150 1 352 1 30 1 355 1 263 1 72 1 80 1 32 1 345 1 
138 1 150 1 352 1 30 1 225 1 263 1 72 1 80 1 32 1 345 1 
150 1 352 1 345 1 68 1 180 1 369 1 
284 1 163 1 150 6 138 3 204 1 259 1 68 3 180 1 352 5 118 1 295 1 198 1 316 2 345 6 136 1 137 1 87 1 337 2 317 1 369 2 
138 1 107 2 347 2 285 1 264 1 139 1 266 2 68 1 142 1 115 1 268 1 352 1 196 1 54 2 316 1 119 1 15 2 58 1 229 4 150 1 152 2 91 2 177 1 230 1 341 1 124 1 153 1 322 1 342 1 260 1 23 1 345 1 137 1 326 1 369 1 242 2 
90 1 138 1 150 1 30 1 247 1 263 1 32 1 70 1 291 1 117 1 352 1 236 1 225 1 226 1 80 1 105 1 345 1 337 1 319 1 
300 1 150 1 352 1 345 1 68 1 180 1 369 1 
150 4 138 1 275 1 341 1 33 1 68 1 352 4 182 1 316 1 146 1 345 4 337 1 369 1 
150 2 138 1 68 2 171 1 61 1 352 2 211 1 118 1 72 1 316 1 345 2 137 1 87 1 369 1 
339 1 325 1 150 1 4 1 352 1 78 1 345 1 68 1 337 1 369 1 
150 2 138 1 341 1 246 1 204 1 68 1 352 2 316 1 345 2 317 1 369 1 
150 5 284 1 138 3 275 1 341 1 33 1 68 2 352 4 182 1 72 1 316 2 198 1 345 5 337 1 317 1 369 2 
150 5 138 3 275 1 341 1 33 1 68 2 352 4 182 1 72 1 316 2 198 1 345 5 337 1 317 1 299 1 369 2 
243 1 138 1 107 2 150 1 152 2 230 1 124 1 264 1 139 1 68 1 129 1 352 1 316 1 119 1 345 1 137 1 337 1 369 1 
150 1 138 1 259 1 68 2 352 1 118 1 72 1 316 1 345 1 136 1 137 1 87 1 369 1 
82 1 286 1 7 1 113 1 129 1 
107 1 188 1 263 1 265 1 32 1 166 1 113 1 292 1 351 1 226 1 119 1 36 1 152 1 230 1 93 1 77 1 124 1 363 1 344 1 63 1 
107 1 202 1 152 1 230 1 7 1 113 1 82 1 239 1 297 1 
166 1 36 1 113 1 
366 1 270 1 5 1 
270 1 5 1 11 1 334 1 205 1 179 1 127 1 
11 1 189 1 364 1 
340 1 270 1 208 1 5 1 11 3 334 1 64 2 205 1 179 1 10 1 174 1 127 3 
270 1 5 1 11 2 334 1 218 1 95 1 205 1 179 1 127 2 
339 1 16 1 208 1 11 1 301 1 78 1 334 1 215 1 205 1 179 1 127 1 
270 1 208 1 11 1 334 1 205 1 179 1 127 1 
270 2 208 1 5 1 11 1 205 1 179 1 127 1 
365 1 179 2 205 2 127 2 313 1 270 1 208 1 11 2 334 1 26 1 
5 1 165 1 301 1 218 2 179 1 205 1 127 3 270 1 208 1 11 3 194 1 334 2 327 1 
339 1 4 1 16 1 5 1 122 1 78 2 218 1 179 1 205 1 127 2 270 1 208 1 11 2 132 1 334 1 
5 1 301 1 218 2 95 1 179 2 205 2 127 4 270 1 208 1 11 4 194 1 334 2 185 1 
270 1 208 1 5 1 11 1 334 1 205 1 179 1 127 1 
5 2 301 1 218 2 179 1 205 1 10 1 127 4 270 2 11 4 194 1 334 3 64 1 174 1 272 1 
108 1 5 1 125 1 218 1 179 1 205 1 98 1 127 2 270 1 208 1 11 2 334 1 
5 1 18 1 179 1 205 1 127 3 10 2 208 1 270 1 11 3 334 1 64 2 174 1 
109 2 334 2 251 1 201 1 
208 1 11 1 250 1 205 1 179 1 127 1 
270 1 208 1 5 1 165 1 11 2 334 1 218 1 205 1 179 1 127 2 
40 1 
270 1 208 1 5 1 11 1 334 1 205 1 179 1 127 1 
5 1 165 1 218 1 179 1 205 1 127 3 208 1 270 1 11 3 334 1 64 1 
194 1 301 1 334 1 272 1 
270 1 334 1 

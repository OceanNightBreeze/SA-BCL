#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (24,62,164,257,305) (98,228) (98,228) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (24,62,164,257,305) (98,228) (98,228) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (24,62,164,257,305) (98,228) (98,228) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (24,62,164,257,305) (98,228) (98,228) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 11 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (24,62,164,257,305) (213,227) (213,227) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 11 27 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 11 27 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (58,134) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (7,8,141) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (58,134) (58,134) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (7,8,141) 119 312 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (7,8,141) 119 278 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (199,215) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (199,215) 160 281 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (199,215) 160 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (89,138,201,261) (89,138,201,261) (240,258,296) (240,258,296) (240,258,296) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (89,138,201,261) (89,138,201,261) (240,258,296) (240,258,296) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (89,138,201,261) (89,138,201,261) (240,258,296) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (89,138,201,261) (89,138,201,261) (240,258,296) (240,258,296) (240,258,296) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (7,8,141) (7,8,141) 211 43 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 156 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 309 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (58,134) (58,134) 279 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 156 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (58,134) (58,134) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (58,134) (58,134) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 47 88 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (89,138,201,261) (89,138,201,261) 26 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
164 1 299 1 163 1 263 1 89 1 284 1 177 1 201 1 289 1 256 1 98 1 228 1 120 1 138 1 139 1 
164 1 299 1 163 1 263 1 89 1 284 1 177 1 201 1 289 1 256 1 98 1 228 1 120 1 138 1 139 1 
164 1 299 1 163 1 263 1 89 1 284 1 177 1 201 1 289 1 256 1 98 1 228 1 120 1 138 1 139 1 
164 1 299 1 163 1 263 1 89 1 284 1 177 1 201 1 289 1 256 1 98 1 228 1 120 1 138 1 139 1 
299 1 163 2 263 1 89 1 193 1 11 1 201 2 254 1 256 1 77 1 183 1 120 1 138 1 261 1 
164 1 299 1 163 1 89 1 263 1 213 1 201 1 289 1 227 1 275 1 120 1 138 1 139 1 
299 1 163 3 89 2 318 1 147 1 72 1 201 3 77 2 183 1 102 1 138 2 139 1 261 1 
299 1 163 7 263 1 89 2 318 1 193 1 27 1 195 1 11 1 201 7 256 1 254 1 77 3 183 3 120 1 54 1 102 2 138 2 236 1 261 5 139 1 
299 1 163 7 263 1 89 2 318 1 193 1 27 1 195 1 11 1 201 7 256 1 254 1 77 3 183 3 120 1 54 1 102 2 138 2 236 1 261 5 139 1 
156 1 99 1 233 1 
319 2 99 1 218 1 
42 1 12 1 226 2 59 2 171 2 245 2 277 2 65 2 
212 1 165 1 42 1 44 2 130 1 300 1 171 2 217 1 132 1 93 1 97 1 12 1 226 3 16 1 136 1 184 1 277 2 235 1 238 1 142 1 315 1 57 1 144 1 317 2 59 3 22 1 23 1 149 1 111 1 245 2 65 2 67 1 155 2 71 1 291 1 76 1 292 2 37 1 158 2 
58 1 
226 1 59 1 171 1 7 1 68 1 8 1 
226 1 59 1 171 1 245 1 277 1 65 1 7 1 
178 1 302 1 52 1 197 1 141 1 
107 1 178 1 99 1 302 1 233 1 52 2 334 1 141 2 
302 1 52 1 141 1 
134 1 58 1 178 1 52 1 141 1 
99 1 
107 1 178 1 181 1 99 1 302 1 233 1 52 2 141 2 
107 1 86 1 61 1 320 1 302 2 325 1 247 1 268 2 74 1 178 2 308 1 75 1 204 2 99 1 232 2 233 1 52 5 122 1 141 5 
12 1 156 1 
314 1 59 2 171 2 170 1 245 1 65 1 12 2 226 2 277 1 
221 1 185 1 186 1 
212 1 165 1 144 1 59 1 44 1 22 1 23 1 111 1 97 1 10 1 155 1 12 1 226 1 16 1 292 1 136 1 235 1 142 1 
165 1 212 1 144 1 59 2 44 1 22 1 171 1 23 1 243 1 111 1 245 1 97 1 155 1 226 2 292 1 311 1 185 1 277 1 235 1 142 1 
59 4 171 4 170 1 243 1 25 1 245 4 65 1 12 1 226 4 16 1 136 1 311 2 277 4 105 1 
226 2 16 1 59 2 171 2 131 1 207 1 245 2 277 2 
12 1 226 3 59 3 171 3 311 1 245 3 65 1 277 3 
226 1 16 1 59 1 171 1 131 1 245 1 277 1 
314 1 226 1 16 1 59 1 171 1 170 1 245 1 277 1 65 1 
226 2 59 2 170 1 171 2 243 1 119 1 311 1 245 2 65 1 277 2 312 1 7 1 
96 1 12 1 226 2 59 2 171 2 311 1 245 1 277 1 68 1 
226 1 59 1 171 1 243 1 119 1 311 1 245 1 277 1 7 1 278 1 
59 2 170 1 171 2 221 1 245 2 65 1 226 2 311 1 185 1 277 2 
212 1 165 1 144 1 59 1 44 1 22 1 23 1 111 1 97 1 155 1 12 1 226 1 16 1 292 1 136 1 235 1 142 1 
212 1 165 1 144 1 59 1 44 1 23 1 111 1 32 1 97 1 155 1 12 1 226 1 16 1 292 1 136 1 235 1 313 1 
130 1 4 1 220 1 221 2 93 2 304 1 271 1 184 1 101 1 185 2 186 2 317 4 189 1 149 2 323 1 29 1 33 1 71 1 291 1 76 1 259 1 37 1 158 2 81 1 
226 1 16 1 59 1 171 1 207 1 274 1 245 1 277 1 
199 1 223 1 
199 1 223 1 
215 1 159 1 
215 1 159 1 
215 1 159 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 223 1 
199 1 281 1 92 1 160 1 52 1 223 1 141 1 
199 1 92 1 160 1 223 1 
263 1 256 1 120 1 
263 1 120 1 275 1 
256 2 265 1 229 1 120 3 275 1 124 1 
327 1 256 1 265 1 120 2 275 1 124 1 
256 1 265 1 120 2 275 1 124 2 
266 2 302 1 218 1 219 1 220 1 225 1 268 1 178 4 308 3 99 2 310 1 232 1 52 5 233 1 141 5 107 1 319 3 61 2 146 1 320 1 148 1 286 1 323 1 29 1 151 2 112 2 153 1 204 1 295 1 208 1 81 1 121 1 
172 1 302 6 218 3 219 2 220 3 303 1 95 5 268 2 178 7 308 8 99 5 232 2 52 9 233 1 141 9 107 1 56 1 319 9 61 6 146 1 320 1 148 2 323 3 29 3 325 1 324 1 31 1 151 6 112 6 153 4 197 5 154 1 204 2 295 3 81 3 
266 1 218 2 219 1 220 1 268 1 178 2 308 3 99 3 232 1 233 1 52 3 141 3 61 2 319 4 148 1 286 1 323 1 29 1 325 1 151 2 153 1 112 2 204 1 295 1 208 1 81 1 
172 1 266 2 218 3 219 1 220 2 268 1 178 3 308 5 99 4 232 1 233 1 52 4 141 4 319 7 61 4 148 1 286 1 323 2 29 2 325 1 31 1 151 4 112 4 153 2 154 1 204 1 295 2 208 1 81 2 
97 1 145 1 156 1 
97 1 82 1 
73 1 
97 1 23 1 111 1 
97 1 190 1 
97 1 111 1 
97 3 48 1 145 2 23 1 321 1 111 1 
125 1 4 4 220 3 93 6 267 1 180 1 19 2 279 1 317 13 189 3 60 1 63 1 149 7 323 3 248 1 36 2 293 1 117 2 
125 1 4 6 220 3 93 6 267 1 180 3 19 2 279 1 317 13 189 3 60 1 63 1 149 7 323 3 248 1 36 2 293 1 117 2 
125 1 4 4 220 3 93 6 267 1 180 1 19 2 279 1 317 13 189 3 60 1 63 1 149 7 323 3 248 1 36 2 293 1 117 2 40 1 
125 2 264 1 3 1 4 13 130 1 220 6 93 19 267 1 14 1 180 7 19 3 279 1 317 39 189 6 60 1 63 2 30 1 149 20 29 3 323 6 248 2 36 3 291 1 115 3 330 4 293 1 76 1 117 2 37 1 158 2 118 1 295 3 81 3 83 1 84 1 
0 1 125 1 3 1 130 2 4 6 220 3 93 7 180 2 19 2 279 1 317 15 189 4 60 1 63 1 323 3 149 8 248 1 69 1 36 2 291 2 76 2 293 1 37 2 117 2 158 4 
163 1 299 1 212 1 165 1 263 1 89 1 126 1 44 1 229 1 275 1 138 1 139 1 240 1 241 1 150 1 246 1 250 1 155 1 201 2 256 1 203 1 292 1 258 1 78 1 120 2 261 1 296 1 
163 2 212 1 165 1 263 1 89 1 126 1 44 1 175 1 229 1 275 1 138 1 139 1 240 1 150 1 246 1 250 1 155 1 34 1 201 3 256 1 328 1 203 1 292 1 258 1 78 1 120 2 261 2 
165 1 212 1 163 1 263 1 240 1 44 1 246 1 150 1 175 1 34 1 155 1 250 1 201 2 256 1 203 1 292 1 229 1 78 1 120 2 275 1 261 2 139 1 
165 1 163 1 212 1 89 1 166 1 91 1 44 1 97 1 270 1 235 1 138 1 139 2 143 1 316 1 111 1 150 2 155 1 250 2 201 1 328 1 114 1 292 1 78 2 
163 1 299 1 212 1 165 1 263 1 89 1 126 1 44 1 229 1 275 1 138 1 139 1 240 1 150 1 246 1 250 1 155 1 34 1 201 2 256 1 203 1 292 1 258 1 78 1 120 2 261 1 296 1 
222 1 
165 1 212 1 43 1 167 1 44 2 171 1 302 2 219 1 7 1 8 1 97 1 268 1 226 1 308 1 232 1 234 1 52 2 235 2 141 2 107 1 316 1 283 1 59 1 61 1 320 1 28 1 111 1 68 1 113 1 155 2 114 1 292 2 204 1 211 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
107 1 43 1 167 1 59 1 171 1 302 1 7 1 8 1 68 1 226 1 181 1 52 2 234 1 141 2 211 1 
43 1 167 1 59 1 171 1 320 1 7 1 68 1 8 1 268 1 226 1 204 1 232 1 52 1 234 1 141 1 211 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 226 1 167 1 59 1 171 1 234 1 52 1 7 1 68 1 8 1 211 1 141 1 
43 1 167 1 59 1 171 1 320 1 7 1 68 1 8 1 268 1 226 1 204 1 232 1 52 1 234 1 141 1 211 1 
317 4 189 1 4 1 130 1 60 1 220 1 323 1 149 2 93 2 33 1 71 1 12 1 36 1 291 1 156 1 76 1 293 1 117 1 37 1 158 2 184 1 19 1 
214 1 4 2 130 2 220 2 221 4 93 6 12 1 180 1 184 1 185 11 186 11 315 1 317 14 189 1 191 1 21 1 149 8 30 1 29 2 323 1 67 1 200 1 71 2 330 3 291 2 115 3 76 2 294 1 37 2 158 4 295 2 81 1 83 1 
165 1 171 1 93 1 10 1 97 1 12 1 16 1 184 1 277 1 21 1 22 1 23 1 111 1 291 1 292 1 37 1 212 1 44 1 130 1 221 1 226 2 136 1 311 1 235 1 140 1 142 1 315 1 144 1 317 2 59 2 243 1 149 1 245 1 67 1 155 1 71 1 76 1 331 1 158 2 332 1 
165 2 168 2 4 6 171 1 93 13 97 2 12 2 16 1 180 1 184 3 185 6 277 1 19 2 186 6 279 1 282 1 189 5 21 1 285 2 22 2 23 2 111 2 29 2 36 2 291 3 293 1 292 1 117 2 37 3 295 2 212 2 44 1 130 3 217 2 220 5 221 6 226 3 136 1 311 1 235 1 142 2 315 1 144 2 317 26 59 3 60 1 243 1 245 1 149 13 323 5 66 1 67 1 155 1 71 3 76 3 158 6 80 2 333 2 81 2 
165 3 212 2 44 2 130 1 173 1 93 1 97 2 17 1 184 1 51 1 235 1 315 1 316 1 57 1 317 2 23 1 149 1 111 2 196 1 67 1 288 1 155 2 71 1 291 1 114 1 292 2 76 1 37 1 158 2 41 1 
4 1 130 1 170 1 171 1 220 1 221 1 93 2 226 1 184 1 185 1 277 1 186 1 317 3 189 1 59 1 21 1 110 1 245 1 29 1 149 1 323 1 65 1 71 1 291 1 76 1 37 1 158 2 295 1 81 1 
317 2 4 1 130 1 220 1 221 1 29 1 149 2 304 1 33 1 71 1 291 1 180 1 76 1 37 1 158 2 184 1 185 1 186 1 
317 2 189 1 4 1 130 1 221 1 323 1 93 2 33 1 71 1 291 1 76 1 37 1 259 1 158 2 184 1 185 1 81 1 186 1 
130 1 4 2 220 1 221 2 93 2 180 1 184 1 185 2 186 2 317 4 189 1 149 2 29 1 323 1 33 1 71 1 291 1 76 1 37 1 158 2 295 1 81 1 
317 2 4 1 130 1 220 1 221 1 29 1 149 2 304 1 71 1 291 1 180 1 76 1 37 1 158 2 184 1 51 1 185 1 186 1 
317 2 189 1 4 1 130 1 221 1 323 1 93 2 71 1 291 1 76 1 37 1 259 1 158 2 184 1 51 1 185 1 81 1 186 1 
130 1 4 2 220 1 221 2 93 2 180 1 184 1 51 1 185 2 186 2 317 4 189 1 149 2 29 1 323 1 71 1 291 1 76 1 37 1 158 2 295 1 81 1 
317 4 189 1 4 2 130 1 220 1 323 1 221 2 29 1 149 2 93 2 71 1 291 1 180 1 76 1 37 1 158 2 184 1 295 1 81 1 185 2 186 2 
165 1 212 1 44 1 130 1 217 1 93 1 97 1 12 1 226 1 16 1 136 1 184 1 235 1 142 1 315 1 144 1 317 2 59 1 22 1 23 1 149 1 111 1 67 1 155 1 71 1 291 1 292 1 76 1 37 1 158 2 
165 1 212 1 44 1 130 1 93 1 97 1 12 1 226 1 16 1 136 1 184 1 235 1 313 1 315 1 144 1 317 1 59 1 23 1 111 1 32 1 155 1 70 1 71 1 291 1 292 1 76 1 37 1 158 2 
130 1 4 2 220 1 221 2 93 2 180 1 184 1 185 2 186 2 317 4 189 1 21 1 149 2 29 1 323 1 71 1 291 1 76 1 37 1 158 2 295 1 81 1 
165 1 212 1 168 1 44 1 4 1 130 1 217 1 220 1 221 2 93 2 97 1 226 1 184 1 185 2 186 2 142 1 144 1 317 4 189 1 59 1 241 1 22 1 23 1 323 1 149 2 29 1 111 1 155 1 71 1 291 1 292 1 76 1 37 1 158 2 295 1 81 1 
4 1 130 1 170 1 171 1 220 1 221 1 93 1 226 1 180 1 184 1 185 1 277 1 186 1 317 3 59 1 21 1 323 1 245 1 29 1 149 2 65 1 152 1 71 1 291 1 76 1 37 1 158 2 295 1 81 1 
127 1 130 2 4 2 220 1 93 5 306 1 180 1 53 1 103 1 317 9 189 1 149 4 30 1 29 1 323 1 69 1 251 1 255 1 330 2 291 2 115 1 76 2 206 1 37 2 158 4 295 1 81 1 83 1 85 1 
1 1 3 2 4 2 130 3 220 2 93 9 9 1 306 1 179 1 180 1 103 2 187 1 317 20 189 1 322 1 323 1 149 11 29 2 69 1 251 1 255 3 291 3 330 2 115 2 76 3 206 1 157 1 37 3 158 6 295 2 39 1 81 1 83 2 85 2 
130 2 4 2 220 1 93 5 306 1 180 1 53 1 103 1 317 9 189 1 149 4 30 1 29 1 323 1 69 1 251 1 255 1 330 2 291 2 115 1 76 2 206 1 157 1 37 2 158 4 295 1 81 1 83 1 85 1 
130 2 4 2 220 1 93 5 306 1 180 1 53 1 103 1 317 9 189 1 149 4 30 1 29 1 323 1 69 1 251 1 255 1 330 2 291 2 115 1 76 2 206 1 157 1 37 2 158 4 295 1 81 1 83 1 85 1 
1 1 3 1 130 2 4 12 220 7 93 22 9 1 306 1 179 1 180 6 19 1 187 1 103 1 317 45 189 6 60 1 322 1 149 23 30 2 29 6 323 7 69 1 251 1 36 1 255 3 330 4 291 2 115 4 293 1 76 2 206 1 157 1 117 1 294 2 37 2 158 4 295 6 39 1 81 6 83 2 85 1 
165 1 212 1 262 1 44 2 129 1 130 1 171 2 174 1 93 1 176 1 97 1 226 2 17 1 184 1 276 1 315 1 57 2 317 2 59 2 21 1 111 1 149 1 67 1 155 2 71 1 291 1 76 1 292 2 37 1 158 2 123 1 
165 1 212 1 263 1 126 1 44 2 169 1 241 1 94 1 246 1 34 1 155 2 250 1 256 1 203 1 292 2 229 1 120 2 275 1 137 1 
298 1 212 1 165 1 263 1 126 1 44 1 169 1 246 1 34 1 155 1 250 1 256 1 203 1 292 1 229 1 120 2 275 1 
165 1 212 1 316 1 166 1 44 1 111 1 5 1 97 1 155 1 250 1 114 1 292 1 137 1 235 1 
165 1 212 1 263 1 126 1 44 1 169 1 94 1 246 1 34 1 155 1 250 1 256 1 203 1 292 1 229 1 120 2 275 1 137 1 
133 1 
74 1 308 1 75 1 156 1 61 1 99 1 233 1 
302 1 218 1 269 1 268 1 308 1 99 2 232 1 52 1 233 1 141 1 107 1 61 1 319 1 320 1 249 1 204 1 209 1 
55 1 165 2 212 1 44 1 23 1 320 1 111 1 97 2 155 1 268 1 48 1 204 1 292 1 309 1 232 1 82 1 235 1 
1 1 90 1 216 1 301 1 302 1 219 1 218 3 220 2 9 1 268 2 308 8 99 5 232 2 52 1 233 2 187 1 141 1 107 1 319 6 61 5 320 2 322 1 109 2 28 1 29 2 323 2 151 5 112 5 330 1 115 1 204 2 295 2 39 1 81 2 83 1 
279 1 58 1 188 1 61 1 320 1 109 2 220 1 323 1 134 1 268 1 36 1 308 2 204 1 117 1 232 1 52 1 19 1 141 1 
61 1 320 1 268 1 74 1 75 1 308 1 204 1 99 1 232 1 233 1 
90 1 61 5 319 10 109 2 218 5 220 2 29 2 323 2 151 5 112 5 308 5 99 5 80 1 295 2 81 2 
107 1 99 1 302 1 233 1 52 1 141 1 
165 1 212 1 2 2 44 4 302 4 219 2 97 1 268 2 308 2 232 2 52 3 235 2 237 1 141 3 107 2 316 1 283 1 61 2 320 1 28 2 111 1 64 1 325 1 113 1 155 4 114 1 204 2 292 4 161 1 
212 1 165 1 42 1 44 1 130 1 171 2 217 1 132 1 93 1 97 1 12 1 226 3 184 1 277 2 235 1 142 1 315 1 144 1 317 1 59 3 22 1 23 1 245 2 111 1 65 2 155 1 71 1 291 1 76 1 292 1 37 1 158 2 
319 4 61 2 320 1 218 2 219 1 28 1 151 2 248 1 112 2 268 1 308 1 204 1 99 4 232 1 233 2 
35 1 242 1 194 1 6 1 106 1 
242 1 194 1 260 1 
242 1 194 1 260 1 
242 1 194 1 260 1 
242 1 244 1 194 1 
242 1 244 1 194 1 
242 1 244 1 194 1 
242 1 194 1 
199 1 223 1 
3 1 130 2 4 6 220 3 93 8 180 3 19 2 279 1 317 16 189 3 60 1 149 8 323 3 36 2 291 2 293 1 76 2 37 2 117 2 158 4 
317 4 189 1 60 1 4 1 220 1 149 2 323 1 93 2 36 1 156 1 293 1 117 1 19 1 
317 4 189 1 4 2 130 1 220 1 323 1 29 1 149 2 93 2 291 1 272 1 76 1 180 1 37 1 158 2 295 1 81 1 
317 7 189 1 4 2 220 1 323 1 149 3 30 1 29 1 93 4 330 2 115 1 180 1 295 1 81 1 83 1 
3 1 4 6 130 1 220 5 93 12 180 2 19 2 279 1 317 24 189 4 60 1 323 5 29 2 30 1 149 12 200 1 36 2 115 2 330 2 291 1 293 1 76 1 117 2 294 1 37 1 158 2 295 2 81 2 
317 1 330 1 93 1 
317 1 115 1 149 1 
317 6 189 2 130 1 4 3 220 1 29 1 149 3 323 1 93 3 291 1 76 1 272 1 180 1 37 1 158 2 80 1 295 1 81 1 
1 1 130 1 4 2 220 2 93 6 9 1 180 1 187 1 317 12 189 1 322 1 149 6 29 2 323 2 69 1 115 1 330 1 291 1 76 1 37 1 158 2 295 2 81 2 39 1 83 1 
317 6 189 1 4 2 220 1 149 3 323 1 93 3 36 1 180 1 117 1 19 1 
317 3 3 1 189 1 4 2 130 1 60 1 149 1 93 2 36 1 291 1 180 1 293 1 76 1 37 1 79 1 158 2 19 1 
279 1 317 10 189 3 130 1 4 5 220 2 149 5 323 2 93 5 69 1 36 2 291 1 76 1 180 2 37 1 117 1 158 2 19 2 
317 2 130 1 4 1 220 1 29 1 149 2 69 1 291 1 76 1 180 1 37 1 158 2 
317 4 189 1 4 2 130 1 220 1 323 1 29 1 149 2 93 2 69 1 291 1 76 1 180 1 37 1 158 2 295 1 81 1 
317 3 3 1 189 1 130 3 4 2 149 1 93 2 69 1 36 1 291 3 76 3 180 1 37 3 79 1 158 6 53 1 19 1 
264 1 3 1 130 4 4 8 220 5 93 15 14 1 272 1 180 4 53 1 19 2 279 1 317 30 189 4 60 1 149 15 29 2 323 5 69 1 36 2 330 3 291 4 115 3 293 1 76 4 117 2 37 4 158 8 118 1 295 2 81 2 83 1 
130 1 4 4 220 3 93 7 180 1 187 1 19 2 279 1 317 14 189 3 60 1 323 3 149 7 69 1 36 2 115 1 330 1 291 1 76 1 293 1 37 1 117 2 158 2 83 1 
130 2 4 5 220 4 93 8 272 1 180 2 19 2 187 1 279 1 317 17 189 3 60 1 323 3 149 9 30 1 29 1 69 1 36 2 330 2 291 2 115 1 293 1 76 2 117 2 37 2 158 4 295 1 83 1 
1 1 3 1 130 3 4 6 220 5 93 13 9 1 272 1 180 2 19 2 187 1 279 1 317 25 189 4 60 1 322 1 149 12 29 2 323 5 69 1 36 2 115 1 330 1 291 3 293 1 76 3 117 2 37 3 158 6 295 2 81 2 39 1 83 1 
1 1 3 1 130 3 4 8 220 5 93 10 9 1 272 1 180 4 19 2 187 1 279 1 317 23 189 4 60 1 322 1 149 13 29 2 323 4 69 1 36 2 115 1 330 1 291 3 293 1 76 3 117 2 37 3 158 6 295 2 81 1 39 1 83 1 
130 1 4 4 220 3 93 7 180 1 187 1 19 2 279 1 317 14 189 3 60 1 323 3 149 7 69 1 36 2 115 1 330 1 291 1 76 1 293 1 37 1 117 2 158 2 83 1 
1 1 130 1 4 2 220 2 93 6 9 1 180 1 187 1 317 12 189 1 322 1 149 6 29 2 323 2 69 1 115 1 330 1 291 1 76 1 37 1 158 2 295 2 81 2 39 1 83 1 
1 1 3 2 130 4 4 6 220 5 93 11 9 1 180 2 272 1 19 2 187 1 279 1 317 24 189 4 60 1 322 1 149 13 29 2 323 4 69 1 36 2 330 1 291 4 115 1 293 1 76 4 117 2 37 4 158 8 295 2 39 1 81 1 83 1 
1 1 3 2 130 4 4 6 220 3 93 7 9 1 180 3 53 1 187 1 317 16 189 3 322 1 149 9 29 3 323 2 69 1 330 1 291 4 115 1 76 4 37 4 158 8 295 3 39 1 81 2 83 1 
317 7 189 3 60 1 4 6 220 1 323 1 149 3 93 4 36 3 293 2 180 3 117 1 19 3 
1 1 3 2 130 4 4 6 220 5 93 11 9 1 180 2 53 1 19 2 187 1 279 1 317 24 189 4 60 1 322 1 149 13 29 2 323 4 69 1 36 2 330 1 291 4 115 1 293 1 76 4 117 2 37 4 158 8 295 2 39 1 81 1 83 1 
96 1 12 1 226 1 59 1 171 1 68 1 224 1 
59 1 171 1 326 1 287 1 224 1 68 1 96 1 12 1 226 1 329 1 205 1 273 1 
97 1 165 1 212 1 316 1 155 1 114 1 156 1 44 1 292 1 111 1 235 1 
212 1 165 1 44 1 171 1 97 1 12 1 226 2 16 1 136 1 311 1 277 1 235 1 144 1 59 2 22 1 23 1 245 1 111 1 155 1 292 1 
212 1 165 1 2 1 44 1 171 1 97 3 12 1 226 1 16 2 50 1 136 1 311 1 274 1 277 1 144 1 59 1 190 1 22 1 23 2 245 1 111 2 155 1 252 1 292 1 
212 1 165 1 2 1 44 1 171 1 97 3 12 1 226 1 16 2 50 1 136 1 311 1 274 1 277 1 144 1 59 1 190 1 23 2 245 1 111 2 32 1 155 1 252 1 292 1 
212 1 165 1 2 1 44 1 302 1 97 4 134 1 50 1 99 1 18 1 52 2 233 1 239 1 141 2 58 1 145 1 190 1 23 1 111 1 155 1 292 1 38 1 82 1 
212 1 165 1 2 1 44 1 302 1 97 4 134 1 49 1 50 1 99 1 52 2 233 1 141 2 58 1 145 1 190 1 23 1 111 1 155 1 292 1 38 1 82 1 
165 1 212 1 155 1 44 1 292 1 182 1 
212 1 165 2 44 1 23 1 111 1 173 1 196 1 97 1 155 1 48 1 292 1 231 1 235 1 
165 1 168 1 4 4 171 1 93 6 97 1 12 2 16 1 180 1 184 2 277 1 19 2 279 1 189 3 21 1 22 1 23 1 111 1 36 2 291 2 292 1 293 1 37 2 117 2 212 1 44 1 129 1 130 2 217 1 220 3 226 2 136 1 311 1 142 1 144 1 317 12 59 2 241 1 60 1 245 1 149 6 323 3 155 1 71 2 76 2 158 4 333 1 
87 1 44 1 302 2 46 1 97 2 268 2 178 1 308 1 49 1 99 1 232 2 233 1 52 3 235 1 104 1 237 1 141 3 107 1 145 1 61 1 320 2 155 1 74 1 75 1 292 1 204 2 38 1 82 1 
55 1 212 1 165 2 145 1 44 1 23 1 111 1 97 2 155 1 73 1 48 1 292 1 182 1 
165 3 316 1 212 2 44 2 241 1 23 1 173 1 111 2 196 1 288 1 97 2 155 2 114 1 292 2 41 1 235 1 
280 1 212 1 165 2 44 1 23 1 111 1 173 1 196 1 288 1 97 1 155 1 292 1 41 1 
212 1 165 1 263 1 44 1 246 1 155 1 292 1 275 1 120 1 235 1 
97 1 165 1 212 1 34 1 155 2 44 2 292 2 241 1 111 1 174 1 123 1 
165 4 212 3 44 3 173 1 97 4 230 1 235 1 316 1 192 1 241 1 23 1 111 3 196 1 288 1 155 3 114 1 292 2 41 1 123 1 
165 4 212 3 44 3 173 1 97 4 235 1 316 1 108 1 192 1 241 1 23 1 111 3 196 1 288 1 155 3 114 1 292 2 41 1 123 1 
212 1 165 1 44 1 171 1 97 1 12 1 226 2 16 1 136 1 311 1 277 1 235 1 144 1 59 2 23 1 245 1 111 1 32 1 155 1 292 1 
212 1 165 2 2 1 44 1 23 1 111 1 173 1 196 1 97 1 155 1 48 1 292 1 231 1 
202 2 20 1 276 1 47 1 
88 1 178 1 202 2 20 1 15 1 276 1 52 1 47 1 210 1 141 1 
202 1 20 1 276 1 47 1 
88 1 202 1 210 1 
72 1 156 1 77 1 147 1 
163 1 89 1 72 1 201 1 77 1 147 1 138 1 
163 1 78 1 139 1 
299 1 163 3 164 2 89 1 147 1 24 1 62 1 305 1 201 3 72 1 77 1 138 1 
163 2 89 1 72 1 201 2 254 1 77 1 147 1 261 1 138 1 
299 1 163 1 89 1 263 1 193 1 201 1 256 1 77 1 183 1 120 1 138 1 
163 1 299 1 89 1 72 1 201 1 77 1 138 1 
163 1 299 1 89 1 72 2 201 1 147 1 138 1 
299 1 163 2 89 2 128 1 72 1 201 2 307 1 77 1 116 1 138 2 
299 1 163 3 89 1 147 1 195 1 72 1 201 3 77 2 183 1 54 1 102 1 138 1 261 2 
163 1 299 1 263 1 89 1 201 2 256 1 229 1 26 1 120 2 275 1 261 1 138 1 
299 1 163 4 89 2 147 1 72 1 201 4 290 1 254 1 77 2 183 1 102 1 138 2 261 2 
163 1 299 1 89 1 72 1 201 1 77 1 147 1 138 1 
164 1 163 4 89 1 147 2 24 1 62 1 198 1 72 2 201 4 77 3 183 1 102 1 261 2 138 1 
299 1 163 2 89 1 147 1 72 1 201 2 77 1 135 1 138 1 236 1 261 1 162 1 
299 1 163 3 164 2 89 1 147 1 24 2 62 1 201 3 72 1 257 1 77 1 138 1 
77 2 45 1 100 1 297 2 
163 1 299 1 89 1 201 1 13 1 138 1 
163 2 299 1 89 1 72 1 201 2 77 1 147 1 261 1 138 1 195 1 
253 1 
163 1 299 1 89 1 72 1 201 1 77 1 147 1 138 1 
299 1 163 3 164 1 89 1 147 1 195 1 201 3 72 1 77 1 261 1 138 1 
198 1 77 1 183 1 102 1 
72 1 77 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 109 (185,215) (185,215) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 109 (185,215) (185,215) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 109 (185,215) (185,215) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 109 (185,215) (185,215) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 166 171 327 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 166 171 327 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 252 (130,318) 92 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 252 127 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 252 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 252 (130,318) 92 48 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 252 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (25,241,269) (25,241,269) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,76,217) (21,102,253) (21,102,253) (21,102,253) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,76,217) (21,102,253) (21,102,253) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (16,76,217) (21,102,253) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (36,225) (193,205) (193,205) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,76,217) (21,102,253) (21,102,253) (21,102,253) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 252 127 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 296 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 252 (130,318) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 252 (130,318) (130,318) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,76,217) (16,76,217) (16,76,217) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,76,217) (16,76,217) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (36,225) (36,225) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,76,217) (16,76,217) (16,76,217) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 47 125 186 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 252 (130,318) 92 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 26 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 1 218 1 262 1 304 1 112 1 222 1 211 1 109 1 329 1 215 1 185 1 
111 1 218 1 262 1 304 1 112 1 222 1 211 1 109 1 329 1 215 1 185 1 
111 1 218 1 262 1 304 1 112 1 222 1 211 1 109 1 329 1 215 1 185 1 
111 1 218 1 262 1 304 1 112 1 222 1 211 1 109 1 329 1 215 1 185 1 
255 2 120 1 304 1 166 1 65 1 171 1 106 3 329 4 308 1 218 1 262 4 335 1 222 1 338 3 341 1 199 1 95 2 228 1 143 1 
187 1 204 1 304 1 166 1 65 1 192 1 211 1 329 2 218 1 111 1 262 2 222 1 338 1 199 1 182 1 228 1 
304 2 65 1 106 1 329 3 71 1 218 1 111 1 262 3 222 2 338 2 341 1 95 1 228 1 
120 1 255 1 304 2 166 1 82 1 171 1 106 5 329 7 327 1 213 1 71 1 218 1 111 1 332 1 262 7 335 1 222 2 338 3 199 1 341 2 95 3 
120 1 255 1 304 2 166 1 82 1 171 1 106 5 329 7 327 1 213 1 71 1 218 1 111 1 332 1 262 7 335 1 222 2 338 3 199 1 341 2 95 3 
322 1 26 1 300 1 
322 1 281 2 239 1 
290 2 254 2 165 2 279 1 201 1 183 2 138 2 128 2 
252 1 144 1 254 1 165 1 6 1 84 1 11 2 128 1 290 1 134 1 92 1 201 1 183 1 138 1 318 1 
290 1 254 1 165 1 209 1 149 1 201 1 183 1 138 1 128 1 54 1 
254 2 165 1 43 1 209 1 128 2 54 2 224 1 183 1 138 2 317 1 64 1 322 1 323 1 147 1 280 1 149 1 287 1 243 1 290 1 201 1 300 1 
254 2 322 1 64 1 165 2 323 1 147 2 43 1 209 1 149 1 280 1 128 2 287 1 54 2 290 2 201 1 183 2 300 1 138 2 317 2 
147 1 257 1 114 1 317 1 141 1 
0 1 322 1 147 2 257 1 300 1 87 1 317 2 141 1 
147 1 257 1 317 1 
254 1 165 1 147 1 209 1 280 1 149 1 128 1 54 1 290 1 201 1 183 1 138 1 141 1 317 1 
322 1 
322 1 147 2 257 1 258 1 300 1 87 1 317 2 141 1 
101 1 322 1 147 5 257 2 27 2 259 1 284 2 242 1 87 1 88 1 245 1 176 1 73 1 154 1 300 1 141 2 317 5 37 2 273 1 
279 1 26 1 
254 2 165 1 279 2 128 2 152 1 290 1 60 1 183 1 138 2 
324 1 33 1 79 1 
252 1 144 1 11 1 127 1 
252 1 144 1 254 1 165 1 168 1 11 1 183 1 138 1 128 1 288 1 
290 1 254 3 165 3 279 1 168 1 183 3 138 3 128 3 
254 1 165 1 209 1 183 1 138 1 128 1 54 1 
290 1 254 1 165 1 60 1 183 1 138 1 128 1 54 1 152 1 
252 1 144 1 254 3 64 1 323 1 165 3 147 1 43 1 168 1 11 1 128 3 48 1 54 1 287 1 288 1 152 1 290 2 131 1 92 1 201 1 183 3 138 3 318 1 317 1 
254 2 165 1 279 1 168 1 224 1 227 1 183 1 138 2 128 2 
254 3 322 1 64 1 165 3 323 1 147 1 43 1 168 2 128 3 152 1 54 1 288 1 287 1 290 1 131 1 183 3 138 3 317 1 301 1 
290 1 254 2 165 2 324 1 168 1 183 2 138 2 128 2 152 1 79 1 
252 1 144 1 11 1 
144 1 221 1 279 1 107 1 11 1 54 1 
2 1 169 1 173 1 49 2 51 1 55 1 175 1 261 2 135 1 313 1 61 1 17 4 315 2 316 1 23 1 324 2 148 1 236 1 283 1 326 1 286 1 33 2 35 1 79 2 
254 1 323 1 165 1 183 1 184 1 138 1 128 1 54 1 
254 4 165 4 168 2 279 1 107 1 128 4 52 1 288 1 54 1 152 1 290 1 247 1 183 4 138 4 
254 2 165 2 209 1 184 1 183 2 138 2 128 2 54 1 
28 1 241 1 
28 1 241 1 
163 1 25 1 
163 1 25 1 
163 1 25 1 
119 1 28 1 241 1 
119 1 28 1 241 1 
163 1 25 1 28 2 241 2 
269 1 28 1 241 1 
119 1 28 1 241 1 
297 1 28 1 241 1 
297 1 28 1 241 1 
297 1 28 1 241 1 
146 1 276 1 322 1 145 3 122 1 147 2 108 1 235 2 28 2 196 1 241 2 293 2 295 1 342 2 160 2 139 2 162 1 272 1 317 2 
254 2 165 2 44 1 124 1 128 2 12 1 269 1 183 2 138 2 272 1 99 1 317 1 19 1 189 1 145 1 147 1 279 1 235 1 328 1 28 1 241 1 293 1 160 1 342 1 
120 1 166 1 199 1 
204 1 166 1 199 1 
302 1 204 1 120 2 123 1 306 1 199 3 
302 1 204 1 120 1 123 1 267 1 199 2 
302 2 204 1 120 1 123 1 199 2 
257 1 212 1 51 1 55 1 87 1 88 1 15 1 266 1 268 2 136 1 313 1 18 2 99 1 19 1 317 5 141 4 189 1 322 2 190 2 147 5 281 3 27 1 283 1 284 1 239 1 331 1 242 3 245 2 250 1 343 1 300 1 37 1 
121 1 257 6 212 2 51 3 55 3 87 1 88 1 309 1 136 3 96 1 313 3 59 5 18 6 99 4 140 1 317 9 141 7 274 1 101 1 322 5 190 6 147 9 281 9 27 2 283 3 284 2 239 3 331 1 242 8 245 6 114 5 343 2 202 1 300 1 37 2 
212 1 51 1 55 1 15 1 266 1 268 1 136 1 313 1 18 2 99 1 141 2 317 3 101 1 322 3 190 2 147 3 281 4 27 1 283 1 284 1 239 2 242 3 245 2 343 1 300 1 37 1 
212 1 51 2 55 2 15 1 266 1 268 2 136 2 313 2 18 4 99 2 140 1 317 4 141 3 274 1 101 1 322 4 190 4 147 4 281 7 27 1 283 2 284 1 239 3 242 5 245 4 343 1 202 1 300 1 37 1 
180 1 26 1 86 1 
180 1 151 1 
75 1 
5 1 180 1 
5 1 86 2 113 1 75 1 94 1 180 2 100 1 
5 1 180 1 100 1 
180 1 63 1 
303 1 283 1 10 1 51 1 286 2 240 2 49 4 175 3 261 3 334 1 310 1 57 1 157 1 312 1 137 1 17 7 345 1 
303 1 283 1 10 1 51 1 286 2 240 2 49 4 175 3 261 3 334 1 310 1 57 1 157 1 312 1 137 1 17 7 345 1 
303 1 283 1 10 1 51 1 286 2 240 2 49 4 175 3 261 3 334 1 310 1 57 1 157 1 339 1 312 1 137 1 17 7 345 1 
303 2 80 1 2 1 125 1 47 1 49 3 175 2 261 3 310 1 137 1 17 6 315 2 316 1 231 1 236 1 240 1 286 1 334 1 78 1 157 1 298 1 35 1 117 1 345 1 
303 1 2 2 10 1 51 1 49 5 175 4 261 4 310 1 57 1 223 1 312 1 137 1 17 9 315 4 316 2 275 1 236 2 283 1 240 2 286 3 334 1 78 1 157 1 35 2 
102 1 253 1 21 1 305 1 304 1 46 1 329 1 11 1 216 1 218 1 111 1 262 1 155 1 222 1 16 1 97 1 
102 1 253 1 305 1 304 1 256 1 106 1 85 1 46 1 329 2 11 1 216 1 129 1 111 1 262 2 155 1 222 1 16 1 
111 1 102 1 262 1 155 1 256 1 16 1 106 1 46 1 329 1 11 1 216 1 129 1 
144 1 205 1 304 1 85 1 46 2 193 1 329 1 11 1 216 2 111 2 262 1 155 2 222 1 225 1 314 1 
102 1 253 1 21 1 305 1 304 1 46 1 329 1 11 1 216 1 129 1 218 1 111 1 262 1 155 1 222 1 16 1 
319 1 
254 1 257 6 9 1 11 2 87 3 13 2 88 1 91 1 265 1 188 1 281 2 282 1 27 1 284 1 29 2 287 1 30 2 31 1 115 2 300 2 37 1 118 1 41 1 43 1 212 1 128 1 54 1 311 1 224 1 58 2 138 1 317 5 320 2 144 2 64 1 322 3 323 1 147 5 238 1 237 1 68 2 239 2 242 2 243 1 245 2 74 1 340 4 
254 1 41 1 43 1 257 2 258 1 128 1 54 1 87 1 91 1 265 1 224 1 138 1 317 3 64 1 322 2 323 1 147 3 237 1 29 1 287 1 243 1 74 1 340 2 300 2 
254 1 322 2 64 1 323 1 41 1 147 2 43 1 237 1 128 1 54 1 287 1 243 1 74 1 91 1 265 1 224 1 340 3 115 1 300 2 138 1 317 2 
254 1 41 1 43 1 257 2 258 1 128 1 54 1 87 1 91 1 265 1 224 1 138 1 317 3 320 1 64 1 322 3 323 1 147 3 237 1 29 1 287 1 243 1 74 1 340 3 115 1 300 3 
254 2 165 1 257 7 258 1 9 1 87 3 13 2 88 1 91 1 265 1 183 1 280 1 105 1 27 1 284 1 29 4 287 1 30 2 290 1 31 1 201 1 299 1 115 3 300 4 37 1 41 1 42 1 43 1 209 1 126 1 128 2 54 2 224 1 58 2 138 2 317 5 320 4 322 4 64 1 323 1 147 5 149 1 237 1 68 2 239 2 243 1 242 1 245 1 74 1 156 1 340 5 
254 1 257 4 9 1 13 2 87 2 88 1 91 1 265 1 281 2 27 1 284 1 29 2 287 1 30 2 31 1 115 2 300 3 37 1 41 1 43 1 128 1 54 1 224 1 58 2 138 1 317 4 320 2 322 4 64 1 323 1 147 4 237 1 238 1 68 2 239 2 243 1 242 1 245 1 74 1 340 4 
254 1 41 1 257 4 43 1 126 1 9 1 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 58 2 138 1 317 4 320 2 64 1 322 3 323 1 147 4 105 1 27 1 284 1 237 1 29 2 239 2 68 2 287 1 30 2 242 1 243 1 31 1 245 1 74 1 156 1 340 4 115 2 300 3 37 1 
254 1 41 1 257 4 43 1 126 1 9 1 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 58 2 138 1 317 4 320 2 64 1 322 3 323 1 147 4 105 1 27 1 284 1 237 1 29 2 239 2 68 2 287 1 30 2 242 1 243 1 31 1 245 1 74 1 156 1 340 4 115 2 300 3 37 1 
254 1 41 1 40 1 257 4 4 2 43 1 7 2 126 1 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 181 1 138 1 317 4 320 2 64 1 322 3 323 1 232 1 147 4 281 2 27 1 284 1 237 1 29 2 68 2 287 1 242 1 243 1 31 1 245 1 74 1 340 4 115 2 300 3 37 1 
254 1 41 1 42 1 43 1 257 5 126 1 9 1 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 58 2 138 1 317 4 320 3 64 1 322 3 323 1 147 4 105 1 27 1 284 1 237 1 239 2 68 2 29 3 287 1 30 2 242 1 243 1 31 1 245 1 74 1 156 1 340 5 115 3 300 3 37 1 
254 1 41 1 42 1 43 1 257 5 126 1 9 1 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 58 2 138 1 317 4 320 3 64 1 322 3 323 1 147 4 105 1 27 1 284 1 237 1 239 2 68 2 29 3 287 1 30 2 242 1 243 1 31 1 245 1 74 1 156 1 340 5 115 3 300 3 37 1 
254 1 41 1 257 4 4 2 43 1 7 2 128 1 54 1 87 2 13 2 88 1 91 1 265 1 224 1 181 1 138 1 317 4 320 2 64 1 322 3 323 1 147 4 281 2 27 1 238 1 237 1 284 1 29 2 68 2 287 1 242 1 243 1 31 1 245 1 74 1 340 4 115 2 300 3 37 1 
2 1 10 1 51 1 49 3 175 2 261 3 57 1 312 1 137 1 61 1 17 6 315 2 316 1 324 1 23 1 279 2 26 1 236 1 326 1 283 1 286 2 240 1 33 1 157 1 35 1 79 1 
2 2 47 1 49 1 54 1 53 1 261 3 61 2 17 4 62 1 315 4 316 2 23 1 279 1 107 1 236 2 67 1 244 1 32 1 33 2 298 1 35 2 117 1 79 2 
252 1 38 1 254 1 165 1 2 1 168 1 11 1 127 1 128 1 49 1 261 1 90 1 61 1 183 1 17 2 138 1 315 2 316 1 144 1 321 1 324 1 23 1 236 1 288 1 244 1 336 1 32 1 35 1 
144 1 254 1 165 1 23 1 2 1 168 1 236 1 11 1 128 1 288 1 244 1 261 1 296 1 32 1 61 1 17 1 183 1 35 1 138 1 315 2 316 1 
254 1 165 1 2 2 168 1 11 4 49 1 128 1 261 1 90 1 134 1 61 2 97 1 17 2 183 1 138 1 315 4 316 2 144 2 23 2 191 1 236 2 326 1 110 1 244 1 116 1 35 2 
254 1 165 1 2 1 128 1 51 1 49 1 55 1 175 1 261 2 136 1 61 1 313 1 183 1 17 3 138 1 315 2 316 1 324 1 23 1 236 1 283 1 286 1 152 1 72 1 290 1 33 1 32 1 35 1 79 1 
324 1 23 1 2 1 148 1 236 1 326 1 51 1 49 2 55 1 175 1 334 1 33 1 61 1 17 2 35 1 315 2 79 1 316 1 
324 1 23 1 2 1 236 1 326 1 283 1 286 1 175 1 261 2 33 1 135 1 61 1 313 1 17 2 35 1 315 2 79 1 316 1 
324 2 23 1 2 1 236 1 283 1 326 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 33 2 136 1 313 1 61 1 17 4 35 1 315 2 79 2 316 1 
324 1 191 1 23 1 2 1 148 1 236 1 51 1 49 2 55 1 175 1 334 1 33 1 61 1 17 2 35 1 315 2 79 1 316 1 
324 1 191 1 23 1 2 1 236 1 283 1 286 1 175 1 261 2 33 1 135 1 61 1 313 1 17 2 35 1 315 2 79 1 316 1 
324 2 191 1 23 1 2 1 236 1 283 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 33 2 136 1 313 1 61 1 17 4 35 1 315 2 79 2 316 1 
324 2 23 1 2 1 236 1 283 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 33 2 136 1 313 1 61 1 35 1 17 4 315 2 79 2 316 1 
252 1 144 1 11 1 318 1 
144 1 23 1 2 1 279 1 107 1 236 1 11 1 285 1 54 1 244 1 261 1 221 1 61 1 17 1 35 1 315 2 316 1 
324 2 23 1 2 1 236 1 283 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 33 2 32 1 136 1 313 1 61 1 17 4 35 1 315 2 79 2 316 1 
252 1 11 1 97 1 318 1 130 1 
254 1 165 1 2 1 307 1 128 1 51 1 49 2 55 1 175 1 261 1 136 1 313 1 61 1 183 1 17 3 138 1 315 2 316 1 23 1 324 1 236 1 283 1 152 1 290 1 334 1 32 1 33 1 35 1 79 1 
1 1 39 1 2 2 125 1 83 2 47 1 49 7 51 2 55 2 175 4 261 7 93 1 136 2 313 2 17 14 315 4 316 2 275 1 325 2 236 2 283 2 330 1 286 2 153 1 334 2 200 1 159 1 35 2 117 1 
2 1 125 1 83 1 47 1 49 5 51 1 55 1 261 5 93 1 136 1 313 1 17 10 315 2 316 1 275 1 325 2 236 1 283 1 330 1 153 1 200 2 159 2 35 1 117 1 
39 1 2 2 125 2 83 1 47 2 49 6 51 1 55 1 175 1 261 6 93 1 136 1 313 1 17 12 315 4 316 2 275 1 325 2 236 2 283 1 330 1 153 1 334 1 337 1 200 2 159 1 35 2 117 2 
39 1 2 3 125 3 83 1 47 3 49 15 51 3 55 3 175 4 174 1 261 12 133 1 93 1 136 3 313 2 17 27 315 6 230 1 316 3 186 1 275 1 325 4 236 3 283 2 330 1 195 1 286 2 153 1 334 2 337 1 78 1 198 1 200 2 159 1 35 3 117 3 
2 1 125 1 83 1 47 2 10 2 49 16 51 5 55 3 175 8 261 14 57 2 93 1 312 2 136 3 137 2 313 3 17 30 315 2 316 1 20 1 275 1 325 2 236 1 283 5 330 1 240 2 286 5 153 1 334 3 157 2 200 1 159 1 35 1 117 2 203 1 
146 1 276 1 89 1 293 1 160 1 235 1 342 1 28 1 162 1 241 1 
269 1 12 1 
293 1 207 1 234 1 160 1 235 1 342 1 194 1 28 1 241 1 
146 1 276 1 322 1 145 2 147 1 108 1 235 1 28 1 196 1 241 1 293 1 295 1 342 1 160 1 139 1 162 1 272 1 317 1 
146 1 276 1 322 1 145 2 147 1 108 1 235 1 28 1 196 1 241 1 293 1 295 1 342 1 160 1 139 1 162 1 272 1 317 1 
146 1 276 1 322 1 145 2 147 1 108 1 235 1 28 1 196 1 241 1 293 1 295 1 342 1 160 1 139 1 162 1 272 1 317 1 
119 1 34 1 70 1 
119 1 34 1 70 1 
297 1 344 1 
34 1 297 1 344 1 
44 1 328 1 
254 2 164 1 165 2 44 1 124 1 128 2 12 1 269 1 183 2 138 2 139 1 99 1 317 1 141 1 19 1 189 1 145 1 147 1 279 1 235 1 328 1 28 1 241 1 293 1 295 1 160 1 342 1 
119 1 70 1 
34 1 297 1 344 1 
254 2 2 1 3 1 23 1 236 1 11 2 49 1 128 2 110 1 244 1 261 1 90 1 134 2 263 1 292 1 32 1 61 1 17 2 35 1 138 2 315 2 229 1 316 1 
217 1 103 1 305 1 16 1 76 1 97 1 11 2 216 1 129 1 
219 1 305 1 16 1 76 1 11 1 216 1 129 1 
144 1 103 1 225 1 11 1 36 1 216 1 
217 1 103 1 305 1 16 1 76 1 11 1 216 1 129 1 
66 1 
245 1 322 1 154 1 26 1 259 1 300 1 242 1 
257 1 9 1 87 1 88 1 58 1 317 1 322 2 147 1 281 1 27 1 284 1 239 1 242 1 30 1 245 1 300 1 37 1 
88 1 144 1 167 1 27 1 284 1 11 1 37 1 
322 1 190 1 125 1 281 2 27 1 47 1 284 1 239 1 242 1 88 1 245 1 18 1 117 1 37 1 186 1 
254 1 165 1 45 1 209 1 51 2 128 1 54 1 88 1 57 1 137 1 183 1 138 1 271 1 317 1 147 1 24 2 280 1 149 1 27 1 284 1 283 1 242 2 290 1 245 2 156 1 157 1 201 1 37 1 
322 1 27 1 284 1 259 1 242 1 88 1 245 1 154 1 300 1 37 1 
322 5 190 5 45 1 24 2 281 10 283 2 239 5 51 2 55 2 242 5 132 1 245 5 136 2 313 2 18 5 
322 1 147 1 257 1 300 1 317 1 87 1 
144 2 101 1 147 3 257 4 233 2 212 2 8 1 282 2 27 2 284 2 11 4 87 2 242 2 289 1 88 1 245 2 311 1 270 1 317 3 37 2 118 1 
252 1 144 1 290 1 254 1 165 1 92 1 201 1 11 1 183 1 138 1 128 1 318 1 
322 4 190 2 281 4 212 1 27 1 282 1 284 1 239 2 240 1 242 1 88 1 245 2 18 2 300 2 37 1 
293 1 77 1 160 1 
293 1 77 1 160 1 
293 1 44 1 249 1 160 1 162 1 
293 1 77 1 160 1 
293 1 160 1 251 1 
293 1 160 1 251 1 
293 1 160 1 251 1 
293 1 160 1 
28 1 241 1 
2 2 236 2 283 1 10 1 240 1 51 1 49 4 286 2 175 3 261 4 334 1 57 1 78 1 157 1 312 1 137 1 17 8 35 2 315 4 316 2 
26 1 283 1 10 1 240 1 286 2 51 1 49 3 175 2 261 3 57 1 157 1 312 1 137 1 17 6 
2 1 170 1 236 1 283 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 136 1 313 1 35 1 17 4 315 2 316 1 
261 1 125 1 47 1 17 2 49 1 117 1 
2 1 47 1 10 1 51 2 49 7 53 1 175 6 261 8 57 1 312 1 137 2 17 15 271 1 315 2 316 1 236 1 283 2 286 3 334 3 78 1 157 2 298 1 35 1 117 1 
261 1 17 1 117 1 
47 1 17 1 49 1 
2 1 170 1 236 1 283 1 51 1 49 3 286 2 55 1 132 1 175 3 261 3 334 1 136 1 313 1 35 1 17 6 315 2 316 1 
2 1 125 1 47 1 49 6 51 2 55 2 174 1 175 2 261 6 133 1 136 2 313 2 17 12 315 2 230 1 186 1 316 1 275 1 236 1 283 2 286 1 334 1 198 1 35 1 117 1 
283 1 51 1 49 3 286 1 175 2 261 3 334 1 57 1 157 1 137 1 17 6 
2 1 236 1 10 1 49 1 286 1 175 2 261 2 334 1 157 1 78 1 312 1 298 1 137 1 17 3 35 1 315 2 316 1 
275 1 2 1 236 1 283 2 286 3 49 5 51 2 175 5 261 5 334 2 57 1 157 2 137 2 35 1 17 10 271 1 315 2 316 1 
275 1 2 1 236 1 51 1 49 2 55 1 175 1 334 1 35 1 17 2 315 2 316 1 
275 1 2 1 236 1 283 1 286 1 51 1 49 2 55 1 175 2 261 2 334 1 136 1 313 1 35 1 17 4 315 2 316 1 
275 1 39 1 2 3 236 3 286 1 49 1 175 2 261 2 334 1 78 1 157 1 298 1 137 1 17 3 35 3 315 6 316 3 
39 1 2 4 125 1 170 1 47 1 10 1 51 2 49 7 175 6 261 8 57 1 312 1 137 2 17 15 271 1 315 8 316 4 231 1 275 1 236 4 283 2 286 3 334 3 78 1 157 2 298 1 35 4 117 1 
2 2 125 1 47 1 10 1 49 14 51 5 55 2 174 1 175 9 261 10 133 1 57 2 312 1 136 2 137 2 313 1 17 24 271 1 315 4 230 1 186 1 316 2 275 1 236 2 283 4 240 1 286 5 334 4 157 2 78 1 198 1 35 2 117 1 
2 3 125 1 170 1 47 1 10 1 49 10 51 3 55 2 174 1 175 4 261 7 133 1 57 1 312 1 136 2 137 1 313 1 17 17 315 6 230 1 186 1 316 3 275 1 236 3 283 2 240 1 286 3 334 1 157 1 78 1 198 1 35 3 117 1 
2 3 170 1 125 1 47 1 10 1 49 9 51 3 55 2 174 1 175 4 261 10 133 1 57 1 312 1 136 2 137 1 313 2 17 19 315 6 230 1 186 1 316 3 275 1 236 3 283 3 240 1 286 3 334 1 157 1 198 1 78 1 35 3 117 1 
2 3 170 1 125 1 47 1 10 1 49 10 51 3 55 2 174 1 175 5 261 7 133 1 57 1 312 1 136 2 137 1 313 1 17 17 315 6 230 1 186 1 316 3 275 1 236 3 283 2 240 1 286 3 334 2 157 1 78 1 198 1 35 3 117 1 
2 2 125 1 47 1 10 1 49 14 51 5 55 2 174 1 175 9 261 10 133 1 57 2 312 1 136 2 137 2 313 1 17 24 271 1 315 4 230 1 186 1 316 2 275 1 236 2 283 4 240 1 286 5 334 4 157 2 78 1 198 1 35 2 117 1 
2 1 125 1 47 1 49 6 51 2 55 2 174 1 175 2 261 6 133 1 136 2 313 2 17 12 315 2 230 1 186 1 316 1 275 1 236 1 283 2 286 1 334 1 198 1 35 1 117 1 
2 4 125 1 170 1 47 1 10 1 49 10 51 3 55 2 174 1 175 5 261 8 133 1 57 1 312 1 136 2 137 1 313 1 17 18 315 8 230 1 186 1 316 4 275 1 236 4 283 2 240 1 286 3 334 2 157 1 198 1 78 2 35 4 117 1 
39 1 2 4 125 1 47 1 49 9 51 3 55 3 174 1 175 6 261 7 133 1 136 3 313 2 17 16 315 8 230 1 186 1 316 4 275 1 236 4 283 2 286 3 334 3 198 1 78 2 35 4 117 1 
283 1 10 1 286 3 51 1 49 3 175 6 261 4 334 3 57 1 157 3 312 2 137 3 17 7 
39 1 2 4 125 1 47 1 10 1 49 10 51 3 55 2 174 1 175 4 261 8 133 1 57 1 312 1 136 2 137 1 313 1 17 18 315 8 230 1 186 1 316 4 275 1 236 4 283 2 240 1 286 3 334 1 157 1 198 1 78 2 35 4 117 1 
254 1 294 1 279 1 224 1 227 1 138 1 128 1 
254 1 333 1 294 1 104 1 279 1 224 1 150 1 158 1 227 1 138 1 128 1 214 1 
144 1 26 1 11 1 
144 1 254 1 165 1 168 1 11 1 183 1 138 1 128 1 
254 1 165 1 233 1 168 1 11 1 183 1 138 1 128 1 
254 1 165 1 233 1 168 1 11 1 183 1 138 1 128 1 
147 1 233 1 11 1 317 1 
147 1 233 1 11 1 317 1 
11 1 197 1 
144 1 11 1 
254 1 165 1 23 1 2 1 168 1 236 1 11 1 128 1 292 1 32 1 61 1 97 1 183 1 35 1 138 1 315 2 316 1 
88 1 289 1 144 1 147 1 27 1 284 1 11 1 37 1 317 1 141 1 
11 1 197 1 
144 1 206 1 220 1 97 1 11 4 
56 1 11 1 
144 1 11 1 
11 2 97 1 129 1 
144 1 97 1 11 2 
144 1 97 1 11 2 
144 1 254 1 165 1 168 1 11 1 183 1 138 1 128 1 
233 1 11 1 
254 1 246 1 263 1 3 1 278 1 138 1 128 1 69 1 229 1 
81 1 278 1 98 1 
246 1 279 1 248 1 278 1 69 1 
81 1 254 1 165 1 43 1 209 1 128 1 54 2 131 1 177 1 183 1 138 1 98 1 317 2 141 1 64 1 322 1 323 1 147 2 278 1 280 1 149 1 69 1 287 1 290 1 246 1 248 1 201 1 300 1 
65 1 338 1 26 1 228 1 
262 1 304 1 65 1 222 1 338 1 329 1 228 1 
111 1 262 1 155 1 
304 1 65 1 192 2 329 3 50 1 218 1 260 1 262 3 222 1 338 1 228 1 142 1 
255 1 304 1 65 1 106 1 329 2 308 1 262 2 222 1 338 1 228 1 
120 1 304 1 166 1 329 1 218 1 262 1 335 1 222 1 338 1 95 1 199 1 
218 1 262 1 304 1 222 1 338 1 329 1 228 1 
218 1 262 1 304 1 65 1 222 1 329 1 228 2 
218 1 291 1 262 2 22 1 304 2 222 2 338 1 329 2 226 1 228 1 
304 1 82 1 65 1 106 2 329 3 218 1 262 3 332 1 222 1 338 2 341 1 95 1 228 1 
204 1 120 1 304 1 166 1 306 1 65 1 106 1 329 2 172 1 218 1 262 2 222 1 338 1 199 2 228 1 
255 1 304 1 65 1 106 2 329 3 308 1 218 1 262 3 222 1 338 2 341 1 95 1 228 1 143 1 
218 1 262 1 304 1 65 1 222 1 338 1 329 1 228 1 
304 1 65 2 192 1 106 2 329 4 308 1 260 1 262 4 222 1 338 3 341 1 95 1 228 2 142 1 
218 1 262 2 304 1 264 1 65 1 222 1 338 1 106 1 210 1 213 1 329 2 228 1 
304 1 65 1 192 2 329 3 14 1 218 1 260 2 262 3 222 1 338 1 228 1 142 1 
277 1 338 2 208 2 179 1 
218 1 262 1 304 1 222 1 329 1 161 1 
218 1 262 2 304 1 82 1 65 1 222 1 338 1 106 1 329 2 228 1 
178 1 
218 1 262 1 304 1 65 1 222 1 338 1 329 1 228 1 
304 1 82 1 65 1 106 1 192 1 329 3 218 1 262 3 222 1 338 1 228 1 
308 1 338 1 95 1 341 1 
338 1 228 1 

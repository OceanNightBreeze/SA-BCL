#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 342 (77,240) (77,240) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 342 (77,240) (77,240) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 342 (77,240) (77,240) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 342 (77,240) (77,240) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 121 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 103 151 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 103 151 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 103 183 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 103 151 207 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 103 151 207 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 179 78 105 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 188 355 82 210 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 179 78 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 2 147 1 342 1 75 1 77 1 347 1 190 1 127 1 116 1 240 1 59 1 131 1 353 2 14 1 161 1 303 1 
93 2 147 1 342 1 75 1 77 1 347 1 190 1 127 1 116 1 240 1 59 1 131 1 353 2 14 1 161 1 303 1 
93 2 147 1 342 1 75 1 77 1 347 1 190 1 127 1 116 1 240 1 59 1 131 1 353 2 14 1 161 1 303 1 
93 2 147 1 342 1 75 1 77 1 347 1 190 1 127 1 116 1 240 1 59 1 131 1 353 2 14 1 161 1 303 1 
93 4 147 1 342 1 343 1 75 1 66 2 245 2 347 1 190 1 324 1 276 3 237 1 114 1 116 1 278 3 353 4 303 1 35 1 
93 2 332 1 136 1 75 1 76 1 190 1 347 1 324 1 278 1 116 1 59 1 353 2 14 1 161 1 303 1 35 1 
93 3 245 1 190 2 359 1 324 1 276 1 237 1 116 1 278 2 353 3 161 1 303 2 35 1 
93 9 147 1 343 1 342 1 189 1 201 1 75 1 66 2 245 4 347 1 190 2 359 1 324 1 276 7 114 1 237 3 278 5 116 1 42 1 353 9 174 1 161 1 303 2 35 1 
93 9 147 1 343 1 342 1 189 1 201 1 75 1 66 2 245 4 347 1 190 2 359 1 324 1 276 7 114 1 237 3 278 5 116 1 42 1 353 9 174 1 161 1 303 2 35 1 
203 1 98 1 70 1 
203 1 356 1 252 2 
350 2 270 1 196 2 18 2 262 2 287 2 149 2 65 1 
16 1 270 1 345 1 18 2 17 1 294 1 272 2 149 2 319 1 1 1 97 1 233 2 58 1 21 1 297 1 350 3 23 1 259 1 157 1 185 1 159 1 305 1 262 2 65 1 283 1 48 1 216 1 111 1 33 1 193 2 11 2 194 1 169 1 309 2 196 3 286 1 287 2 
344 1 262 1 18 1 65 1 149 1 254 1 350 1 266 1 196 1 287 1 
344 1 18 1 316 1 149 1 254 2 98 1 350 2 102 1 203 1 4 1 83 1 84 1 262 1 65 1 307 1 264 1 196 2 266 1 287 2 361 1 117 1 
344 1 18 2 316 1 149 2 254 2 98 1 350 2 102 1 203 1 83 1 84 2 262 2 65 1 307 2 196 2 266 1 287 2 361 1 117 1 
84 1 328 1 307 1 364 1 49 1 
344 1 200 1 18 1 149 1 254 1 98 1 274 1 350 1 203 1 83 1 84 2 262 1 65 1 307 2 49 1 266 1 196 1 287 1 364 1 
84 1 307 1 49 1 
344 1 262 1 18 1 65 1 149 1 254 1 307 1 350 1 266 1 196 1 287 1 83 1 84 1 364 1 
203 1 
344 1 200 1 18 1 149 1 254 1 98 1 350 1 203 1 83 1 84 2 31 1 262 1 65 1 307 2 49 1 266 1 196 1 287 1 364 1 
344 1 200 1 18 1 148 1 149 1 295 1 231 1 254 1 98 2 123 1 79 1 350 1 203 2 83 1 43 2 84 5 26 1 329 2 304 1 262 1 214 1 65 1 284 1 307 5 49 2 357 2 88 2 191 4 167 1 265 5 196 1 266 1 287 1 247 2 69 1 54 1 364 2 146 2 
16 1 305 1 345 1 17 1 18 1 244 1 149 1 283 1 97 1 233 1 193 1 89 1 309 1 350 2 196 2 286 1 287 1 185 1 159 1 15 1 
270 1 70 1 
270 2 0 1 262 1 18 1 149 1 350 2 196 2 287 2 206 1 
115 1 52 1 244 1 
16 1 270 1 305 1 345 1 17 1 283 1 97 1 233 1 193 1 309 1 350 1 196 1 286 1 299 1 185 1 159 1 
89 1 350 3 270 1 196 3 262 1 18 3 287 3 149 3 
350 1 344 1 196 1 18 1 287 1 149 1 254 1 
0 1 262 1 18 1 149 1 254 1 350 1 196 1 287 1 206 1 
16 1 270 1 345 1 0 1 17 1 18 3 316 1 272 2 149 3 1 1 254 1 97 1 233 1 122 1 58 1 297 1 350 4 102 1 23 1 259 1 157 1 185 1 84 1 159 1 305 1 262 2 65 1 283 1 307 1 216 1 111 1 193 1 11 1 194 1 169 1 89 1 309 1 196 4 286 1 287 3 361 1 117 1 314 1 15 1 
89 1 350 2 270 1 196 2 18 1 287 2 149 1 264 1 10 1 
0 1 262 1 18 3 316 1 149 3 254 1 334 1 307 1 122 1 89 2 350 3 203 1 102 1 196 3 287 3 361 1 84 1 117 1 15 1 
350 1 196 1 0 1 18 1 262 1 244 1 287 1 149 1 
16 1 270 1 305 1 345 1 17 1 283 1 97 1 233 1 193 1 309 1 350 1 196 1 286 1 185 1 159 1 
63 1 270 1 305 1 345 1 17 1 283 1 321 1 97 1 233 1 193 1 309 1 350 1 196 1 185 1 159 1 
244 1 178 1 272 2 165 1 1 1 32 1 346 1 111 1 58 1 11 2 169 1 194 1 51 1 115 1 52 1 23 1 157 2 43 1 8 1 
350 1 102 1 196 1 18 1 287 1 149 1 254 1 125 1 
289 1 89 2 350 5 270 1 196 5 0 1 262 1 18 4 287 5 149 4 264 1 10 1 15 1 315 1 
350 1 344 1 196 1 18 1 287 1 149 1 254 1 
242 1 46 1 
242 1 46 1 
61 1 67 1 
61 1 67 1 
61 1 67 1 
242 1 46 1 228 1 
242 1 46 1 228 1 
242 1 46 1 228 1 
242 1 46 1 322 1 
226 1 242 2 170 1 46 2 61 1 67 1 
242 1 46 1 277 1 
242 1 46 1 277 1 
242 1 46 1 277 1 
226 1 242 2 29 1 46 2 251 1 36 1 320 2 307 2 137 2 57 2 203 1 90 2 223 2 312 1 84 2 313 3 160 1 118 1 354 1 
250 1 270 1 36 1 18 2 149 2 320 1 322 1 323 1 350 2 84 1 302 1 187 1 107 1 132 1 242 1 46 1 307 1 137 1 138 1 196 2 90 1 287 2 223 1 313 1 
147 1 75 1 347 1 
332 1 75 1 347 1 
147 2 332 1 208 1 75 3 99 1 100 1 
147 1 332 1 85 1 75 2 99 1 100 1 
147 1 332 1 75 2 99 2 100 1 
250 1 200 1 229 2 252 3 98 1 152 1 296 1 236 2 203 2 326 2 43 1 84 5 302 1 7 1 329 1 188 1 304 1 215 1 355 1 356 1 87 1 32 1 307 5 49 1 357 1 88 1 138 1 191 3 265 2 363 1 364 4 146 1 
344 1 18 1 149 1 254 1 98 1 350 1 203 1 83 1 84 2 328 1 24 1 262 1 65 1 307 2 49 1 266 1 196 1 246 1 287 1 364 2 339 1 
229 2 252 4 98 1 152 1 296 1 236 2 203 3 326 1 43 1 84 3 302 1 329 1 188 1 215 1 355 1 356 2 87 1 32 1 307 3 357 1 88 1 191 3 265 2 54 1 364 2 146 1 
229 2 236 2 326 1 184 1 43 1 83 1 84 3 329 1 188 1 87 1 335 1 88 1 191 3 196 1 287 1 54 1 146 1 344 1 18 1 149 1 252 4 150 1 254 1 152 1 98 1 296 1 350 1 203 3 302 2 215 1 262 1 355 1 65 1 356 2 307 3 32 1 357 1 265 2 266 1 364 2 
345 1 366 1 70 1 
345 1 175 1 
55 1 
345 1 185 1 
45 1 55 1 345 3 185 1 159 1 280 1 366 2 
345 1 185 1 159 1 
221 1 345 1 
148 1 293 1 294 4 165 2 232 1 346 3 110 1 167 1 11 7 128 1 311 2 157 3 69 1 12 1 43 1 146 1 340 1 
148 1 293 1 294 4 165 2 232 1 346 3 110 1 167 1 11 7 128 1 311 2 157 3 69 1 12 1 43 1 146 1 340 1 
148 1 293 1 294 4 165 2 232 1 346 3 110 1 167 1 11 7 128 1 311 2 157 3 69 1 327 1 12 1 43 1 146 1 340 1 
148 1 294 16 293 2 272 2 232 5 273 1 1 1 346 10 20 1 58 1 128 1 23 1 157 15 43 4 300 1 188 3 355 3 108 1 165 5 166 3 32 3 110 1 111 1 167 2 11 31 113 1 91 1 311 3 69 2 12 2 13 1 176 4 340 1 146 4 
148 1 293 1 294 5 272 4 165 3 232 1 181 1 1 2 346 4 110 1 111 2 58 2 167 1 11 9 128 1 129 1 23 2 311 2 69 1 157 4 12 1 43 1 13 1 146 1 
93 2 147 1 291 1 17 1 233 1 75 2 235 1 347 1 324 1 126 1 22 1 276 1 41 1 278 1 352 1 353 2 208 1 161 1 303 1 305 1 332 1 86 1 193 1 190 1 309 1 116 1 336 1 224 1 35 1 92 1 
93 3 147 1 199 1 56 1 17 1 233 1 75 2 235 1 347 1 324 1 126 1 22 1 276 2 278 1 352 1 353 3 6 1 208 1 161 1 303 1 305 1 332 1 86 1 193 1 190 1 309 1 336 1 224 1 35 1 92 1 
93 2 147 1 199 1 56 1 17 1 233 1 75 2 235 1 347 1 324 1 276 2 278 1 352 1 353 2 208 1 161 1 305 1 332 1 86 1 193 1 309 1 336 1 224 1 35 1 92 1 
93 1 305 1 345 1 17 1 86 2 94 1 109 1 97 1 233 1 235 2 190 1 193 1 309 1 325 1 50 1 352 2 158 1 185 1 6 1 353 1 161 2 303 1 72 1 
93 1 147 1 199 1 291 1 17 1 233 1 75 2 235 1 347 1 126 1 22 1 352 1 353 1 208 1 161 1 303 1 305 1 332 1 86 1 193 1 190 1 309 1 116 1 336 1 224 1 92 1 
60 1 
316 1 74 1 233 2 121 1 2 1 325 1 4 1 239 1 185 1 84 3 329 1 49 2 88 1 191 2 193 2 196 1 197 1 287 1 200 1 345 1 17 1 94 1 96 1 97 2 254 1 152 1 98 1 350 1 102 1 203 1 205 2 304 1 305 1 164 1 307 3 264 1 357 1 358 1 309 2 265 2 34 1 361 1 173 1 117 1 268 1 
227 1 316 1 74 1 254 1 98 1 2 1 350 1 102 1 203 1 4 1 205 2 84 2 164 1 264 1 307 2 49 1 358 1 196 1 287 1 197 1 361 1 117 1 
164 1 316 1 74 1 254 1 98 1 307 2 264 1 2 1 358 1 350 1 203 1 102 1 205 3 4 1 196 1 222 1 197 1 287 1 361 1 84 2 117 1 
227 1 316 1 74 1 254 1 98 1 2 1 350 1 102 1 203 1 4 1 205 2 84 2 164 1 264 1 307 2 49 1 358 1 196 1 287 1 197 1 361 1 337 1 117 1 
227 1 344 1 200 1 18 1 316 1 149 1 74 1 254 2 98 2 2 1 350 2 102 1 203 2 4 1 205 3 83 1 84 3 262 1 164 1 31 1 65 1 264 1 307 3 49 2 358 1 68 1 266 1 196 2 222 1 287 2 197 1 337 1 361 1 117 1 
316 1 74 1 254 1 98 1 2 1 350 1 102 1 203 1 4 1 205 2 84 2 329 1 304 1 164 1 307 2 264 1 357 1 358 1 88 1 191 1 265 1 196 1 197 1 287 1 34 1 361 1 117 1 268 1 
316 1 74 1 151 1 254 1 98 1 2 1 350 1 102 1 203 1 103 1 4 1 205 2 84 2 329 1 304 1 164 1 264 1 307 2 357 1 88 1 358 1 191 1 265 1 196 1 287 1 197 1 34 1 361 1 117 1 268 1 225 1 
316 1 74 1 151 1 254 1 98 1 2 1 350 1 102 1 203 1 103 1 4 1 205 2 84 2 329 1 304 1 164 1 264 1 307 2 357 1 88 1 358 1 191 1 265 1 196 1 287 1 197 1 34 1 361 1 117 1 268 1 225 1 
316 1 74 1 202 1 254 1 98 1 2 1 350 1 102 1 203 1 183 1 103 1 4 1 205 2 84 2 329 1 304 1 164 1 264 1 307 2 357 1 88 1 358 1 191 1 265 1 196 1 287 1 197 1 34 1 361 1 142 1 117 1 
227 1 316 1 74 1 151 1 254 1 98 1 2 1 350 1 102 1 203 1 103 1 4 1 205 2 84 2 207 1 329 1 304 1 164 1 264 1 307 2 49 1 357 1 88 1 358 1 191 1 265 1 196 1 287 1 197 1 34 1 361 1 337 1 117 1 268 1 225 1 
227 1 316 1 74 1 151 1 254 1 98 1 2 1 350 1 102 1 203 1 103 1 4 1 205 3 84 2 207 1 329 1 304 1 164 1 264 1 307 2 49 1 357 1 88 1 358 1 191 1 265 1 196 1 222 1 287 1 197 1 34 1 361 1 337 1 117 1 268 1 225 1 
316 1 74 1 254 1 98 1 2 1 350 1 102 1 203 1 4 1 205 2 84 2 329 1 304 1 164 1 307 2 264 1 357 1 358 1 88 1 191 1 265 1 196 1 197 1 287 1 34 1 361 1 142 1 117 1 
270 2 294 2 148 1 272 2 165 2 1 1 346 2 110 1 111 1 58 1 11 5 167 2 169 1 194 1 128 1 23 1 157 3 69 2 43 1 8 1 146 1 70 1 
290 1 270 1 73 1 294 10 272 4 232 3 1 2 234 1 346 3 58 2 297 1 23 2 157 5 188 3 244 12 355 3 166 3 48 1 111 2 192 1 168 1 194 2 169 1 11 15 113 1 52 12 115 12 91 2 176 4 146 3 
290 1 18 1 294 1 149 1 272 2 1 1 58 1 297 1 350 1 23 1 157 1 44 1 48 1 285 1 111 1 194 1 169 1 89 1 11 2 196 1 115 1 287 1 15 1 
272 4 232 2 1 2 120 1 233 1 130 1 185 1 188 1 244 2 283 1 193 1 89 1 194 2 11 5 196 2 286 1 52 2 287 1 198 1 15 1 146 1 290 1 16 1 345 1 18 1 17 1 294 3 149 1 97 1 346 3 58 2 297 1 101 1 350 2 154 1 23 2 259 1 157 2 159 1 305 1 355 1 165 1 111 2 309 1 169 2 115 2 
345 2 17 2 294 1 272 2 94 1 97 1 1 1 233 2 58 1 21 1 297 1 325 1 23 1 157 1 185 2 159 1 27 1 163 1 305 3 281 1 48 1 111 1 193 2 309 2 194 1 169 1 11 2 53 1 362 1 365 1 
290 1 0 1 18 1 294 1 149 1 272 2 37 1 1 1 346 1 58 1 350 1 23 1 157 2 43 1 188 1 262 1 244 1 355 1 165 1 32 1 111 1 194 1 169 1 11 3 196 1 115 1 52 1 287 1 146 1 
188 1 244 1 294 2 272 2 232 1 1 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 8 1 248 1 146 1 
244 1 178 1 272 2 165 1 1 1 32 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 157 2 43 1 8 1 
294 2 272 2 232 1 1 1 346 2 58 1 23 1 157 2 43 1 8 1 188 1 244 2 355 1 165 1 32 1 111 1 194 1 169 1 11 4 52 2 115 2 146 1 
188 1 281 1 244 1 294 2 272 2 232 1 1 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 248 1 146 1 
281 1 244 1 178 1 272 2 165 1 1 1 32 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 157 2 43 1 
188 1 281 1 244 1 294 2 272 2 355 1 232 1 1 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 146 1 
188 1 244 1 294 2 272 2 355 1 232 1 1 1 346 1 111 1 58 1 169 1 194 1 11 2 115 1 52 1 23 1 146 1 
16 1 270 1 345 1 17 1 294 1 272 2 97 1 1 1 233 1 58 1 297 1 350 1 259 1 23 1 157 1 185 1 159 1 305 1 283 1 48 1 111 1 193 1 11 2 309 1 169 1 194 1 196 1 286 1 
270 1 345 1 17 1 294 1 272 2 321 1 97 1 1 1 233 1 58 1 297 1 350 1 23 1 157 1 185 1 159 1 330 1 63 1 305 1 283 1 48 1 111 1 193 1 11 2 309 1 169 1 194 1 196 1 
290 1 188 1 244 1 294 2 272 2 355 1 232 1 1 1 346 1 111 1 58 1 11 2 169 1 194 1 115 1 52 1 23 1 146 1 
16 1 345 1 17 1 294 2 272 2 232 1 1 1 233 1 346 1 58 1 350 1 259 1 41 1 23 1 185 1 159 1 188 1 305 1 244 1 355 1 283 1 111 1 193 1 11 2 309 1 169 1 194 1 196 1 115 1 52 1 286 1 198 1 146 1 
290 1 0 1 18 1 294 2 149 1 272 2 232 1 1 1 346 1 58 1 350 1 204 1 23 1 188 1 262 1 244 1 355 1 111 1 194 1 169 1 11 2 196 1 52 1 115 1 287 1 146 1 
294 4 272 4 180 1 232 1 1 2 346 2 182 1 58 2 78 1 256 1 349 1 129 1 23 2 157 5 105 1 43 1 25 1 188 1 355 1 165 1 166 1 32 1 111 2 11 9 113 1 91 1 176 2 146 1 
294 4 272 4 180 1 232 1 1 2 346 2 182 1 58 2 78 1 256 1 349 1 129 1 23 2 157 5 105 1 43 1 25 1 188 1 355 1 165 1 166 1 32 1 111 2 11 9 113 1 91 1 176 2 146 1 
341 1 148 1 294 18 179 1 272 4 180 2 230 1 232 3 1 2 38 1 234 1 346 7 58 2 78 1 128 1 275 1 349 1 129 1 23 2 157 14 43 4 105 1 25 1 188 4 355 4 165 4 166 3 32 3 110 1 111 2 167 1 11 32 113 2 91 1 311 1 69 1 13 1 269 1 176 3 146 5 
294 6 272 4 180 1 232 2 1 2 346 4 58 2 78 1 256 1 349 1 129 1 82 1 23 2 157 7 105 1 43 2 25 1 210 1 188 2 355 2 165 2 166 1 32 2 111 2 11 13 113 1 91 1 176 2 146 2 
341 1 294 10 179 1 272 6 180 2 232 1 230 1 1 3 38 1 346 2 58 3 78 2 275 1 349 1 129 1 23 3 157 8 43 1 105 1 25 2 188 2 355 2 165 1 166 2 32 1 111 3 11 18 113 2 13 2 269 1 176 2 146 2 
226 1 242 1 46 1 90 1 223 1 312 1 320 1 118 1 137 1 71 1 
132 1 322 1 
212 1 80 1 242 1 46 1 90 1 223 1 320 1 137 1 249 1 
226 1 242 1 29 1 46 1 251 1 36 1 320 1 307 1 137 1 57 1 203 1 90 1 223 1 312 1 84 1 313 2 118 1 354 1 
226 1 242 1 29 1 46 1 251 1 36 1 320 1 307 1 137 1 57 1 203 1 90 1 223 1 312 1 84 1 313 2 118 1 354 1 
226 1 242 1 29 1 46 1 251 1 36 1 320 1 307 1 137 1 57 1 203 1 90 1 223 1 312 1 84 1 313 2 118 1 354 1 
170 1 228 1 301 1 
170 1 228 1 301 1 
277 1 213 1 
170 1 277 1 213 1 
323 1 107 1 
250 1 270 1 18 2 149 2 320 1 322 1 57 1 323 1 350 2 84 1 302 1 186 1 187 1 107 1 132 1 29 1 242 1 46 1 307 1 137 1 138 1 196 2 90 1 287 2 223 1 364 1 313 1 
228 1 301 1 
170 1 277 1 213 1 
290 1 345 1 17 1 294 1 272 2 1 1 233 2 58 1 21 2 297 1 348 1 350 2 3 1 23 1 104 1 157 1 185 1 241 1 163 1 305 1 48 1 111 1 217 1 193 2 309 2 194 1 169 1 11 2 196 2 172 1 287 2 
147 1 199 1 332 1 305 1 17 1 75 2 233 2 235 1 347 1 193 2 309 2 22 1 41 1 360 1 224 1 208 1 106 1 62 1 92 1 
147 1 199 1 332 1 305 1 261 1 17 1 75 2 233 1 235 1 347 1 193 1 309 1 22 1 224 1 208 1 106 1 92 1 
305 1 345 1 17 1 94 1 97 1 233 1 235 1 193 1 309 1 325 1 158 1 185 1 62 1 28 1 
147 1 199 1 332 1 305 1 17 1 75 2 233 1 235 1 347 1 193 1 309 1 22 1 360 1 224 1 208 1 106 1 62 1 92 1 
306 1 
203 1 265 1 214 1 295 1 98 1 191 1 70 1 
200 1 318 1 252 1 98 1 203 2 84 1 329 1 304 1 356 1 307 1 49 1 357 1 88 1 191 1 265 1 140 1 268 1 
316 1 229 3 233 1 236 3 43 1 185 1 84 2 329 2 45 1 188 1 333 1 47 1 49 2 88 2 191 4 193 1 247 1 146 1 345 4 200 1 17 1 253 1 252 6 97 1 152 1 257 1 203 3 154 1 155 1 159 1 304 2 305 2 263 1 355 1 356 3 307 2 32 1 357 2 309 1 265 3 267 1 175 2 366 1 
229 5 230 1 38 1 236 5 275 1 239 1 43 2 83 1 84 1 329 2 188 2 284 1 49 1 88 2 191 8 196 1 287 1 247 2 146 2 341 1 344 1 200 1 18 1 149 1 252 6 254 1 98 2 152 1 350 1 203 5 304 2 30 1 262 1 355 2 65 1 356 3 166 1 32 2 307 1 357 2 265 5 113 1 266 1 269 1 176 1 119 1 
344 1 18 1 148 1 149 1 231 1 254 1 350 1 43 1 83 1 84 1 329 1 304 1 262 1 65 1 284 1 307 1 357 1 88 1 191 2 167 1 265 2 196 1 266 1 287 1 247 2 69 1 225 1 146 2 
304 1 214 1 295 1 98 1 357 1 88 1 191 1 265 1 203 1 329 1 
188 2 229 5 355 2 284 1 252 10 356 5 32 2 191 5 236 5 265 5 203 5 154 1 247 2 43 2 146 2 
344 1 200 1 18 1 262 1 149 1 65 1 254 1 307 1 98 1 49 1 350 1 203 1 196 1 266 1 287 1 83 1 84 1 
345 2 200 1 17 2 94 1 96 1 97 2 233 2 152 1 325 1 239 1 185 2 84 2 159 1 27 1 329 2 9 1 304 1 305 3 307 2 49 2 357 2 88 2 193 2 191 1 309 2 265 1 53 1 362 1 54 1 173 1 365 1 
16 1 270 1 345 1 18 2 17 1 272 2 149 2 1 1 97 1 233 1 58 1 297 1 350 3 259 1 23 1 157 1 185 1 159 1 305 1 262 2 65 1 283 1 216 1 111 1 193 1 11 1 309 1 169 1 194 1 196 3 286 1 287 2 
304 1 229 2 356 2 252 4 152 1 98 2 357 1 88 1 191 1 236 2 265 2 203 4 311 1 239 1 329 1 
90 1 317 1 223 1 
90 1 317 1 223 1 
90 1 317 1 223 1 
90 1 223 1 107 1 
90 1 223 1 145 1 
90 1 223 1 145 1 
90 1 223 1 145 1 
90 1 223 1 
242 1 46 1 
148 1 294 4 272 2 165 2 230 1 166 1 1 1 346 2 110 1 111 1 58 1 167 1 11 8 128 1 113 1 129 1 23 1 311 1 69 1 157 4 43 1 176 1 146 1 
148 1 294 6 272 4 230 1 232 1 1 2 346 3 58 2 128 1 298 1 129 1 23 2 157 5 43 1 188 1 355 1 165 2 166 1 110 1 111 2 167 1 11 11 113 1 91 1 311 1 69 1 176 2 146 2 
341 1 148 1 294 9 272 6 232 1 230 1 1 3 38 1 346 4 58 3 128 1 298 1 275 1 129 1 23 3 157 10 43 3 188 2 355 2 165 3 166 1 32 2 110 1 111 3 167 1 11 19 113 1 311 1 69 1 13 1 269 1 176 1 146 3 
341 1 148 1 294 10 272 6 232 2 230 1 1 3 38 1 346 5 58 3 128 1 298 1 275 1 129 1 23 3 157 7 43 2 188 2 355 2 165 3 166 1 32 1 110 1 111 3 167 1 11 17 113 1 311 1 69 1 13 1 269 1 176 1 146 3 
148 1 294 4 272 2 165 2 230 1 166 1 1 1 346 2 110 1 111 1 58 1 167 1 11 8 128 1 113 1 129 1 23 1 311 1 69 1 157 4 43 1 176 1 146 1 
341 1 294 6 272 2 232 1 230 1 1 1 38 1 346 2 58 1 275 1 129 1 23 1 157 6 43 2 188 2 355 2 165 1 166 1 32 2 111 1 11 12 113 1 269 1 176 1 146 2 
341 1 148 1 294 10 272 8 232 2 230 1 1 4 38 1 346 5 58 4 128 1 275 1 298 1 129 1 23 4 157 8 43 2 188 2 355 2 165 3 166 1 32 1 110 1 111 4 167 1 11 18 113 1 311 1 69 1 13 2 269 1 176 1 146 3 
341 1 294 9 272 8 232 3 230 1 1 4 38 1 346 6 58 4 275 1 256 1 129 1 23 4 157 7 43 2 188 3 355 3 165 3 166 1 32 2 111 4 11 16 113 1 13 2 269 1 176 1 146 3 
148 1 294 3 165 3 232 3 346 6 110 2 11 7 167 3 128 1 157 4 69 3 43 1 146 1 
341 1 148 1 294 10 272 8 232 1 230 1 1 4 38 1 346 4 58 4 128 1 275 1 256 1 129 1 23 4 157 8 43 2 188 2 355 2 165 3 166 1 32 1 110 1 111 4 167 1 11 18 113 1 311 1 69 1 13 2 269 1 176 1 146 3 
148 1 294 4 272 4 165 2 232 1 1 2 346 3 110 1 111 2 58 2 11 8 167 1 128 1 23 2 311 1 157 4 69 1 43 1 13 1 146 1 
148 1 294 3 165 2 346 2 110 1 167 1 11 6 128 1 311 1 157 3 69 1 43 1 70 1 146 1 
188 1 294 2 272 2 355 1 165 1 232 1 1 1 32 1 346 2 111 1 58 1 11 4 298 1 23 1 157 2 43 1 146 1 
11 2 113 1 294 1 157 1 166 1 176 1 
148 2 294 13 272 2 231 1 232 4 1 1 234 1 346 8 58 1 128 1 23 1 157 12 43 5 188 2 355 2 165 4 166 2 32 2 110 1 111 1 192 1 167 2 11 25 91 1 311 1 69 2 13 1 176 2 146 5 
11 1 157 1 176 1 
11 1 294 1 166 1 
188 1 294 3 272 2 355 1 165 2 232 1 1 1 32 1 346 3 58 1 111 1 11 6 298 1 154 1 23 1 157 3 43 1 146 1 
341 1 294 6 272 2 232 1 230 1 1 1 38 1 346 2 58 1 275 1 129 1 23 1 157 6 43 2 188 2 355 2 165 1 166 1 32 2 111 1 11 12 113 1 269 1 176 1 146 2 
148 1 294 3 165 1 232 1 346 2 11 6 167 1 157 3 69 1 43 1 146 1 
294 1 272 2 165 1 232 1 1 1 346 2 110 1 111 1 58 1 167 1 11 3 219 1 128 1 23 1 69 1 157 2 13 1 
294 5 148 1 272 2 165 3 231 1 232 2 1 1 346 5 58 1 111 1 167 2 11 10 129 1 23 1 69 2 157 5 43 2 146 2 
188 1 294 2 272 2 232 1 1 1 346 1 111 1 58 1 11 2 129 1 23 1 146 1 
188 1 294 2 272 2 355 1 165 1 232 1 1 1 32 1 346 2 111 1 58 1 11 4 129 1 23 1 157 2 43 1 146 1 
294 1 272 6 165 1 232 1 1 3 346 2 111 3 58 3 11 3 167 1 219 1 256 1 129 1 23 3 157 2 69 1 13 1 
148 2 294 16 272 10 273 1 232 5 1 5 346 12 58 5 128 1 298 1 256 1 129 1 23 5 157 18 300 1 43 5 188 3 355 3 108 1 165 7 166 3 32 3 110 1 111 5 167 3 11 34 219 1 113 1 91 1 311 1 69 3 13 2 176 4 146 5 
350 1 270 1 196 1 287 1 95 1 264 1 10 1 
270 1 243 1 19 1 95 1 264 1 10 1 218 1 350 1 196 1 287 1 143 1 331 1 
309 1 325 1 305 1 345 1 17 1 94 1 185 1 97 1 233 1 70 1 193 1 
270 1 305 1 345 1 18 1 17 1 149 1 283 1 97 1 233 1 193 1 89 1 309 1 350 2 196 2 286 1 287 1 185 1 159 1 
270 1 305 1 345 3 18 2 17 1 149 1 283 1 254 1 233 1 112 1 193 1 89 1 309 1 350 2 221 1 102 1 196 2 286 1 287 2 361 1 185 2 159 2 260 1 
270 1 345 3 17 1 18 2 149 1 254 1 233 2 350 2 351 1 102 1 185 2 260 1 159 2 63 1 305 1 283 1 193 2 112 1 309 2 89 1 221 1 196 2 287 2 361 1 
344 1 345 1 18 1 149 1 254 1 98 1 233 1 350 1 203 1 83 1 84 1 260 1 262 1 135 1 65 1 307 1 193 1 309 1 266 1 196 1 287 1 175 1 
344 1 345 1 18 1 149 1 254 1 98 1 233 1 350 1 203 1 83 1 84 1 260 1 333 1 262 1 65 1 307 1 193 1 309 1 266 1 196 1 287 1 175 1 
309 1 305 1 17 1 233 1 177 1 193 1 
45 1 199 1 133 1 305 3 345 3 17 2 97 2 233 6 21 1 193 5 255 1 309 6 81 1 53 1 104 1 185 2 159 1 288 1 365 1 177 1 
290 1 16 1 270 2 345 1 17 1 18 1 294 2 148 1 149 1 272 4 1 2 120 1 233 1 346 2 58 2 128 1 350 2 23 2 41 1 259 1 157 3 43 1 185 1 159 1 241 1 305 1 165 2 283 1 110 1 111 2 193 1 11 5 167 2 194 2 169 2 89 1 309 1 196 2 286 1 287 1 69 2 198 1 146 1 
316 1 231 1 233 1 43 2 83 1 84 3 329 2 9 1 333 1 284 1 49 2 88 2 193 1 191 4 196 1 287 1 247 2 146 2 344 1 200 1 345 2 18 1 148 1 149 1 295 1 254 1 97 1 98 2 350 1 203 2 155 1 304 2 214 1 262 1 263 1 65 1 307 3 357 2 309 1 167 1 265 5 266 1 267 1 69 1 175 1 364 1 366 1 
45 1 305 2 345 2 17 1 253 1 233 2 193 2 309 2 41 1 185 1 159 1 366 1 177 1 
305 1 345 1 17 1 94 1 97 1 233 4 193 4 309 4 325 1 351 1 258 1 41 1 185 1 
305 2 345 1 17 1 233 2 124 1 193 2 309 2 53 1 362 1 185 1 260 1 159 1 365 1 27 1 
309 1 332 1 305 1 17 1 97 1 75 1 233 1 347 1 92 1 193 1 
199 1 305 1 345 1 17 1 233 2 193 2 309 2 41 1 172 1 104 1 185 1 
305 2 345 3 17 2 94 1 97 1 233 5 193 4 309 5 255 1 325 1 258 1 41 1 104 1 185 2 260 1 288 1 
305 2 345 3 17 2 94 1 97 1 233 5 193 4 309 5 255 1 325 1 5 1 258 1 41 1 104 1 185 2 260 1 
63 1 270 1 305 1 345 1 18 1 17 1 149 1 283 1 97 1 233 1 193 1 89 1 309 1 350 2 196 2 287 1 185 1 159 1 
45 1 305 2 345 1 17 1 233 1 193 1 309 1 81 1 53 1 185 1 260 1 159 1 365 1 
270 1 271 1 134 1 40 1 144 1 
344 1 271 1 18 1 316 1 149 1 254 2 98 1 122 1 39 1 350 1 102 1 203 1 40 1 156 1 83 1 84 2 211 1 134 1 262 1 65 1 307 2 196 1 266 1 287 1 361 1 117 1 364 1 144 1 
271 1 134 1 217 1 3 1 348 1 350 1 196 1 287 1 144 1 
134 1 39 1 211 1 
324 1 278 1 35 1 70 1 
93 1 324 1 278 1 353 1 303 1 35 1 190 1 
93 1 86 1 161 1 
93 3 162 1 282 1 190 1 324 1 310 1 278 1 116 1 353 3 14 2 303 1 35 1 
93 2 324 1 276 1 278 1 353 2 66 1 303 1 35 1 190 1 
93 1 147 1 343 1 75 1 245 1 190 1 347 1 116 1 278 1 353 1 303 1 
93 1 278 1 116 1 353 1 303 1 35 1 190 1 
93 1 324 1 116 1 353 1 303 1 35 2 190 1 
93 2 190 2 195 1 278 1 238 1 116 1 353 2 279 1 303 2 35 1 
93 3 189 1 245 1 190 1 324 1 276 2 237 1 116 1 278 2 353 3 174 1 303 1 35 1 
93 2 147 1 332 1 75 2 190 1 347 1 308 1 324 1 276 1 278 1 116 1 353 2 208 1 303 1 35 1 
93 4 66 1 245 1 190 2 324 1 276 2 114 1 237 1 116 1 278 2 353 4 303 2 35 1 
93 1 324 1 278 1 116 1 353 1 303 1 35 1 190 1 
93 4 282 1 245 1 190 1 324 2 276 2 310 1 237 1 171 1 278 3 353 4 14 1 303 1 35 2 
93 2 292 1 201 1 190 1 324 1 276 1 278 1 116 1 338 1 353 2 303 1 35 1 
93 3 282 1 153 1 190 1 324 1 310 2 278 1 116 1 353 3 14 2 303 1 35 1 
220 2 139 1 141 1 278 2 
93 1 116 1 353 1 209 1 303 1 190 1 
93 2 324 1 276 1 278 1 116 1 189 1 353 2 303 1 35 1 190 1 
64 1 
93 1 324 1 278 1 116 1 353 1 303 1 35 1 190 1 
93 3 324 1 276 1 278 1 116 1 189 1 353 3 14 1 303 1 35 1 190 1 
237 1 171 1 278 1 245 1 
278 1 35 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 278 109 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 278 109 306 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 278 109 306 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 173 351 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (56,185) 203 240 351 236 139 259 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 7 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 173 351 236 6 206 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 40 19 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 240 351 236 139 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (74,163,164,230) (74,163,164,230) 82 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 74 2 230 3 100 1 163 2 49 3 133 2 151 1 318 1 164 1 218 1 154 1 42 1 
361 1 230 1 49 1 163 1 74 1 154 1 
361 1 230 1 49 1 163 1 74 1 154 1 
361 1 230 1 49 1 163 1 74 1 154 1 
361 1 230 1 49 1 163 1 74 1 154 1 
138 1 166 1 74 1 109 1 230 2 278 1 163 1 49 2 133 1 164 1 215 1 218 1 219 1 154 1 
50 1 21 1 354 1 74 1 308 1 335 1 230 2 278 1 163 1 49 2 133 1 151 1 318 1 319 1 154 1 219 1 
138 1 21 1 166 1 74 2 306 1 169 1 109 1 30 1 230 7 278 1 100 1 163 2 49 7 17 1 133 3 164 5 215 1 218 3 219 1 154 1 42 2 
138 1 21 1 166 1 74 2 306 1 169 1 109 1 30 1 230 7 278 1 100 1 163 2 49 7 17 1 133 3 164 5 215 1 218 3 219 1 154 1 42 2 
271 1 15 1 250 1 249 1 332 1 62 1 285 1 269 1 359 1 201 1 326 1 41 1 243 1 125 1 
233 1 
250 2 15 2 155 1 35 1 252 1 285 1 233 1 334 1 
143 1 22 1 15 5 250 5 105 1 71 1 35 1 155 2 252 1 225 1 345 1 285 2 238 2 362 1 329 1 233 1 191 2 217 2 341 1 
46 1 252 1 233 1 
98 1 101 2 233 1 
359 2 223 1 201 2 249 2 332 1 41 2 243 2 125 2 
273 1 1 1 165 2 223 1 249 2 61 1 106 1 63 1 256 1 65 1 131 2 201 3 48 1 232 1 328 1 9 2 261 1 70 1 112 1 14 1 332 1 72 1 75 2 309 1 96 1 265 1 313 1 286 1 359 3 140 1 38 2 210 1 41 2 243 2 292 1 246 1 125 2 
249 1 332 1 62 1 269 1 359 1 201 1 326 1 41 1 243 1 125 1 
271 1 250 1 249 2 252 1 62 1 128 1 324 1 87 1 201 2 326 2 132 1 233 1 15 1 332 1 359 2 269 1 211 1 41 1 243 1 79 1 125 1 
250 2 249 1 15 2 252 1 128 1 359 1 324 1 87 1 201 1 326 1 132 1 41 1 243 1 233 1 125 1 
250 1 15 1 155 1 94 1 285 1 
250 2 15 2 155 1 35 1 252 1 285 1 233 1 124 1 
250 1 15 1 155 1 
273 1 70 1 1 1 112 1 165 1 249 1 72 1 185 1 96 1 286 1 359 2 99 1 360 1 140 1 38 1 131 1 201 2 48 1 41 1 243 1 
249 2 223 1 359 2 3 1 336 1 201 2 326 1 290 1 41 1 243 1 125 1 
222 1 185 1 203 1 
273 1 70 1 1 1 112 1 165 1 223 1 72 1 96 1 286 1 359 1 140 1 38 1 131 1 201 1 48 1 31 1 
46 1 223 1 
249 3 223 1 359 3 360 1 336 1 201 3 326 1 41 3 243 3 125 1 
359 1 201 1 249 1 326 1 41 1 62 1 243 1 
249 1 359 1 3 1 201 1 326 1 290 1 41 1 243 1 125 1 
273 1 1 1 165 1 223 1 249 3 250 1 61 1 106 1 63 1 128 1 256 1 324 1 87 1 200 1 131 1 201 4 48 1 232 1 326 1 132 1 9 2 70 1 112 1 15 1 72 1 332 1 75 1 309 1 96 1 265 1 313 1 286 1 359 4 360 1 99 1 140 1 38 1 77 1 290 1 41 3 243 3 292 1 246 1 125 2 
249 2 223 1 359 2 360 1 336 1 201 2 326 1 41 1 243 1 350 1 79 1 
250 1 15 1 249 3 128 1 359 3 99 1 360 2 324 1 87 1 201 3 77 1 326 1 290 1 132 1 41 3 243 3 291 1 233 1 125 1 
359 2 360 1 222 1 201 2 249 2 185 1 290 1 41 2 243 2 125 1 
273 1 70 1 112 1 1 1 165 1 223 1 72 1 96 1 286 1 359 1 140 1 38 1 131 1 201 1 48 1 
126 1 273 1 92 1 112 1 1 1 165 1 223 1 72 1 96 1 359 1 140 1 38 1 131 1 201 1 48 1 
222 1 106 1 63 2 130 1 256 1 198 1 232 1 325 1 173 1 300 1 203 1 9 2 137 1 14 1 185 1 75 3 309 1 52 1 265 1 97 1 240 1 56 1 246 1 103 1 
359 1 201 1 249 1 326 1 132 1 41 1 243 1 330 1 
249 2 223 1 359 2 360 1 336 1 201 2 326 1 290 1 41 2 243 2 125 1 
359 2 201 2 249 2 326 1 41 2 62 1 243 2 330 1 
47 1 258 1 323 1 
294 1 104 1 160 1 262 1 47 2 258 2 
47 1 258 1 
47 1 258 1 
294 1 262 1 
294 1 262 1 
294 1 262 1 
47 1 60 1 258 1 
47 1 60 1 258 1 
47 1 60 1 258 1 
47 1 276 1 258 1 
47 1 276 1 258 1 
47 1 276 1 258 1 
135 2 248 1 104 1 352 2 331 1 15 2 250 2 253 1 54 1 267 2 255 2 297 1 29 1 47 2 188 3 258 2 233 1 293 2 234 1 
221 1 223 1 250 1 249 2 253 1 254 1 323 1 255 1 28 1 47 1 201 2 66 1 89 1 258 1 352 1 15 1 267 1 359 2 188 1 76 1 41 2 243 2 123 1 293 1 
187 2 50 1 166 1 2 1 219 2 
278 1 166 1 219 1 
50 1 278 1 219 1 
187 1 50 1 166 2 2 1 244 1 219 3 
187 1 181 1 50 1 166 1 2 1 219 2 
271 1 143 3 249 1 250 5 252 1 62 1 64 2 201 1 173 1 326 1 89 1 177 1 233 1 351 1 137 1 15 5 332 1 71 1 155 1 35 1 73 1 333 1 285 4 97 1 16 1 238 1 315 1 359 1 269 1 362 1 240 1 101 1 338 1 41 1 243 1 191 1 217 1 80 1 125 1 
271 1 250 2 249 1 252 1 62 1 147 1 201 1 326 1 233 1 260 1 15 2 155 1 94 1 332 1 285 2 312 1 269 1 359 1 41 1 243 1 125 1 
271 1 143 3 249 1 250 3 252 1 225 1 62 1 64 1 201 1 326 1 173 1 89 1 233 1 351 1 137 1 15 3 332 1 333 1 73 1 285 2 238 1 16 1 97 1 359 1 269 1 315 1 362 1 240 1 101 1 338 1 41 1 243 1 191 1 217 1 125 1 80 1 
271 1 220 1 225 1 227 1 326 1 173 2 89 2 233 2 137 2 15 4 332 1 333 1 285 3 16 1 238 1 97 2 98 1 240 2 101 3 338 2 243 1 191 1 143 5 250 4 249 1 252 1 62 1 64 2 201 1 351 2 73 1 358 1 315 1 269 1 359 1 362 2 41 1 217 1 80 2 125 1 
51 1 
46 1 229 1 1 1 
45 1 1 1 
1 1 112 1 
346 1 229 2 1 3 112 1 96 1 117 1 
1 1 112 1 96 1 
121 1 1 1 
137 1 192 1 43 1 343 1 14 3 224 1 307 1 75 4 52 3 63 1 119 1 198 2 88 1 162 1 40 1 190 1 216 2 
192 1 274 1 224 1 106 1 195 1 63 3 347 1 256 1 198 1 88 2 6 1 9 2 11 1 14 3 307 1 75 6 309 1 52 2 116 1 119 1 208 1 190 1 216 1 246 1 
9 4 69 1 137 1 43 1 275 1 343 1 14 4 224 1 307 1 75 6 106 2 195 1 52 4 309 2 63 2 119 1 256 2 198 3 88 1 40 1 190 1 216 2 246 2 
137 1 192 1 43 1 14 3 343 1 224 1 307 1 75 4 52 3 63 1 119 1 198 2 88 1 40 1 190 1 216 2 
137 1 192 1 43 1 14 3 343 1 224 1 307 1 75 4 52 3 63 1 119 1 198 2 88 1 40 1 190 1 216 2 
205 1 81 2 1 1 112 1 21 2 165 1 72 1 74 1 27 1 140 1 148 1 230 1 38 1 131 1 48 1 163 1 49 1 299 1 18 1 39 1 202 1 270 2 32 2 
272 1 81 1 165 1 21 1 166 1 145 1 194 1 230 1 278 1 131 1 49 1 301 1 32 1 304 1 154 1 50 1 72 1 74 1 268 1 140 1 38 1 163 1 337 1 270 1 244 1 219 2 
272 1 81 1 165 1 21 1 166 1 145 1 194 1 230 2 278 1 131 1 49 2 133 1 151 1 32 1 304 1 154 1 50 1 72 1 74 1 268 1 287 1 140 1 38 1 163 1 337 1 318 1 164 1 270 1 244 1 219 2 
272 1 81 1 165 1 21 1 166 1 145 1 194 1 27 1 230 3 278 1 131 1 49 3 133 1 151 1 301 1 32 1 235 1 50 1 72 1 74 1 268 1 140 1 38 1 163 1 337 1 318 1 244 1 270 1 164 2 219 2 
272 1 81 1 21 1 165 1 166 1 145 1 194 1 230 2 131 1 278 1 49 2 133 1 151 1 301 1 32 1 235 1 50 1 72 1 140 1 38 1 318 1 270 1 164 2 244 1 219 2 
12 1 
0 1 1 1 165 2 128 1 85 1 324 1 87 1 131 2 48 2 326 1 279 1 132 1 282 1 15 3 238 1 140 1 239 1 18 1 191 1 342 1 193 1 143 2 58 2 250 3 249 1 196 1 26 1 296 1 148 1 201 1 303 1 153 1 112 1 35 1 155 2 71 1 72 1 315 1 159 1 359 1 362 2 38 2 211 1 214 1 79 1 217 1 
58 2 15 3 250 3 249 1 35 1 155 2 196 1 128 1 334 1 296 1 359 1 324 1 87 1 239 1 201 1 326 1 211 1 132 1 175 1 214 1 303 1 79 1 
58 3 15 2 250 2 249 1 196 1 128 1 170 1 296 1 359 1 324 1 87 1 239 1 201 1 326 1 211 1 132 1 214 1 303 1 79 1 
58 3 249 1 250 3 196 1 128 1 296 1 170 1 324 1 87 1 201 1 326 1 132 1 175 1 303 1 15 3 35 1 155 2 334 1 359 1 314 1 239 1 211 1 214 1 79 1 
271 1 0 1 128 1 324 1 87 1 326 2 132 1 279 1 175 2 233 1 15 3 332 1 238 1 334 1 239 1 243 1 189 1 191 1 58 2 143 1 193 2 250 3 249 2 252 1 62 1 196 1 296 1 199 1 201 2 303 1 153 2 353 1 35 1 155 3 71 1 157 1 269 1 314 2 359 2 362 1 209 1 211 1 41 1 214 1 79 1 217 1 125 1 
0 1 342 1 193 1 143 1 58 2 250 2 249 1 196 1 128 1 296 1 324 1 87 1 201 1 326 1 279 1 132 1 303 1 153 1 15 2 71 1 238 1 359 1 362 1 239 1 211 1 214 1 191 1 79 1 217 1 
271 1 0 1 193 2 143 1 58 2 249 2 250 2 252 1 62 1 196 1 128 1 296 1 324 1 87 1 201 2 326 2 279 1 132 1 303 1 233 1 153 2 353 1 15 2 332 1 71 1 157 1 238 1 269 1 359 2 362 1 239 1 211 1 41 1 243 1 214 1 189 1 79 1 191 1 217 1 125 1 
271 1 0 1 193 2 143 1 58 2 249 2 250 2 252 1 62 1 196 1 128 1 296 1 324 1 87 1 201 2 326 2 279 1 132 1 303 1 233 1 153 2 353 1 15 2 332 1 71 1 157 1 238 1 269 1 359 2 362 1 239 1 211 1 41 1 243 1 214 1 189 1 79 1 191 1 217 1 125 1 
271 1 193 2 143 1 58 2 249 2 250 2 252 1 62 1 196 1 128 1 296 1 324 1 87 1 201 2 326 2 279 1 132 1 303 1 233 1 153 2 353 1 15 2 332 1 71 1 284 1 186 1 238 1 269 1 359 2 362 1 161 1 239 1 211 1 41 1 243 1 214 1 79 1 191 1 217 1 125 1 
0 1 271 1 128 1 170 1 324 1 87 1 326 2 132 1 279 1 175 1 233 1 15 2 332 1 238 1 239 1 243 1 189 1 191 1 58 3 143 1 193 2 250 2 249 2 252 1 62 1 196 1 296 1 199 1 201 2 303 1 153 2 353 1 155 1 71 1 157 1 314 1 359 2 269 1 362 1 211 1 41 1 214 1 79 1 217 1 125 1 
0 1 271 1 128 1 170 1 324 1 87 1 326 2 132 1 279 1 175 1 233 1 15 2 332 1 238 1 239 1 243 1 189 1 191 1 58 3 143 1 193 2 250 2 249 2 252 1 62 1 196 1 296 1 199 1 201 2 303 1 153 2 353 1 155 1 71 1 157 1 314 1 359 2 269 1 362 1 211 1 41 1 214 1 79 1 217 1 125 1 
342 1 193 1 143 1 58 2 250 2 249 1 196 1 128 1 296 1 324 1 87 1 201 1 326 1 279 1 132 1 303 1 153 1 15 2 71 1 186 1 238 1 359 1 362 1 239 1 211 1 214 1 191 1 79 1 217 1 
1 3 165 8 249 1 106 2 63 1 129 1 256 2 148 1 131 8 201 1 48 2 325 1 232 2 328 1 301 1 33 1 9 4 110 1 261 2 112 2 14 1 184 1 72 2 264 1 75 2 207 1 309 2 265 2 310 1 313 1 359 1 287 1 360 1 140 2 38 7 18 1 41 1 243 1 246 2 
9 2 137 1 14 2 249 1 75 2 168 1 106 1 309 1 115 1 265 1 359 1 256 1 201 1 232 1 173 1 290 1 41 1 243 1 246 1 351 1 125 1 
9 2 137 1 43 1 222 1 223 1 14 2 343 1 185 1 307 1 75 3 106 1 52 2 309 1 265 1 63 1 119 1 46 1 256 1 198 2 325 1 232 1 40 1 203 1 216 1 246 1 
9 2 137 1 11 1 14 2 236 1 185 4 75 5 106 1 309 1 115 1 265 1 97 1 139 1 63 3 347 1 256 1 240 1 232 1 173 1 203 4 259 1 246 1 351 1 
320 1 273 1 1 1 165 1 222 1 223 1 249 1 106 1 63 1 256 1 131 1 48 1 201 2 232 1 31 1 328 1 178 1 9 2 70 1 305 1 112 1 14 1 72 1 75 2 96 1 309 1 265 1 115 1 313 1 286 1 359 2 360 1 99 1 140 1 38 1 41 1 243 1 246 1 
273 2 43 1 1 2 165 1 222 5 223 1 86 1 171 2 131 1 48 1 232 3 173 2 328 1 179 1 9 6 91 2 137 3 14 7 185 5 52 4 96 2 97 2 286 2 99 1 140 2 240 2 243 1 246 3 343 1 249 1 144 2 61 2 295 2 106 3 63 8 256 3 198 4 201 3 203 5 351 2 70 2 112 2 72 2 307 1 75 15 309 3 115 1 265 3 313 1 119 1 359 3 360 1 38 1 40 1 41 1 216 1 
9 2 137 1 14 1 75 1 106 1 309 1 265 1 256 1 325 1 232 1 173 1 300 1 246 1 
9 2 222 1 185 1 75 2 106 1 52 1 309 1 265 1 97 1 63 2 130 1 256 1 198 1 240 1 325 1 232 1 203 1 246 1 
222 1 106 1 63 2 256 1 198 1 232 1 325 1 173 1 203 1 351 1 9 2 137 1 14 1 185 1 75 3 309 1 52 1 265 1 97 1 240 1 246 1 
9 2 137 1 14 1 75 1 106 1 309 1 265 1 310 1 256 1 232 1 173 1 300 1 246 1 
9 2 222 1 185 1 75 2 106 1 52 1 309 1 265 1 310 1 97 1 63 2 130 1 256 1 198 1 240 1 232 1 203 1 246 1 
222 1 106 1 63 2 256 1 198 1 232 1 173 1 203 1 351 1 9 2 137 1 14 1 185 1 75 3 309 1 52 1 265 1 310 1 97 1 240 1 246 1 
222 1 106 1 63 2 256 1 198 1 232 1 173 1 203 1 351 1 9 2 137 1 14 1 185 1 75 3 309 1 52 1 265 1 97 1 240 1 246 1 
273 1 1 1 165 1 223 1 61 1 106 1 63 1 256 1 131 1 48 1 201 1 232 1 328 1 9 2 70 1 112 1 14 1 72 1 75 2 96 1 309 1 265 1 313 1 286 1 359 1 140 1 38 1 246 1 
126 1 273 1 1 1 165 1 223 1 106 1 63 1 256 1 131 1 48 1 201 1 232 1 328 1 9 2 112 1 92 1 14 1 72 1 75 2 96 1 309 1 265 1 313 1 359 1 140 1 38 1 57 1 246 1 
222 1 106 1 63 2 256 1 198 1 232 1 173 1 203 1 351 1 9 2 137 1 14 1 185 1 75 3 309 1 52 1 265 1 115 1 97 1 240 1 246 1 
273 1 1 1 222 1 165 1 144 1 61 1 106 1 63 2 256 1 198 1 131 1 201 1 232 1 173 1 203 1 351 1 9 2 137 1 70 1 112 1 14 1 72 1 185 1 75 3 52 1 96 1 309 1 265 1 97 1 286 1 359 1 287 1 140 1 38 1 240 1 246 1 
249 1 344 1 106 1 63 1 256 1 201 1 232 1 173 1 351 1 9 2 137 1 14 1 75 2 309 1 265 1 115 1 97 1 359 1 240 1 290 1 41 1 243 1 246 1 125 1 
43 1 275 1 343 1 322 1 106 4 195 2 63 14 197 1 25 1 347 2 256 4 198 4 6 2 173 3 67 1 34 1 8 3 351 3 9 8 136 1 137 4 10 1 11 2 13 1 14 13 206 1 307 1 75 27 52 6 309 4 97 3 118 1 119 1 141 1 240 3 40 1 339 1 190 2 216 1 246 4 247 1 
275 1 106 3 195 2 63 14 25 1 347 2 256 3 198 1 6 2 173 3 67 1 68 1 8 4 34 2 351 3 9 6 136 1 137 3 10 1 11 2 13 2 14 11 206 1 75 25 52 2 309 3 97 3 118 1 141 1 240 3 339 1 190 1 246 3 247 1 
43 1 275 1 343 1 106 4 195 2 63 15 197 1 25 1 347 2 256 4 198 3 6 2 173 3 67 1 68 1 34 1 8 4 351 3 9 8 136 1 137 4 10 1 11 2 13 1 14 14 206 1 307 1 75 29 52 5 309 4 97 3 118 1 119 1 141 1 240 3 40 1 339 1 190 2 216 1 246 4 247 1 
43 1 275 1 343 1 106 4 195 2 63 15 197 1 25 1 347 2 256 4 198 3 6 2 173 3 67 1 68 1 34 1 8 4 351 3 9 8 136 1 137 4 10 1 11 2 13 1 14 14 206 1 307 1 75 29 52 5 309 4 97 3 118 1 119 1 141 1 240 3 40 1 339 1 190 2 216 1 246 4 247 1 
43 3 275 1 343 3 106 3 195 2 63 17 25 1 347 2 256 3 198 6 6 2 173 3 67 1 68 1 34 1 8 4 351 3 9 6 136 1 137 6 10 1 11 2 13 1 14 19 206 1 307 3 75 36 52 10 309 3 97 3 118 1 119 3 141 1 240 3 40 3 339 1 190 4 216 3 246 3 247 1 
255 1 248 1 104 1 352 1 297 1 47 1 298 1 258 1 293 1 267 1 
66 1 323 1 
228 1 255 1 352 1 47 1 316 1 258 1 53 1 293 1 267 1 
135 1 248 1 104 1 352 1 15 1 250 1 253 1 54 1 267 1 255 1 297 1 29 1 47 1 188 2 258 1 233 1 293 1 234 1 
135 1 248 1 104 1 352 1 15 1 250 1 253 1 54 1 267 1 255 1 297 1 29 1 47 1 188 2 258 1 233 1 293 1 234 1 
135 1 248 1 104 1 352 1 15 1 250 1 253 1 54 1 267 1 255 1 297 1 29 1 47 1 188 2 258 1 233 1 293 1 234 1 
160 1 60 1 122 1 
160 1 60 1 122 1 
276 1 120 1 
160 1 276 1 120 1 
28 1 76 1 
221 1 223 1 250 1 249 2 254 1 323 1 255 1 28 1 172 1 47 1 201 2 66 1 89 1 258 1 234 1 135 1 352 1 15 1 285 1 267 1 359 2 188 1 76 1 41 2 123 1 243 2 293 1 
60 1 122 1 
160 1 276 1 120 1 
1 1 165 2 249 2 167 1 251 1 106 1 24 1 63 1 129 1 256 1 131 2 5 1 201 2 232 1 328 1 9 2 261 2 112 1 14 1 72 1 114 1 264 1 75 2 309 1 265 1 115 1 313 1 359 2 140 1 38 2 246 1 
1 1 112 1 165 1 72 1 355 1 140 1 148 1 38 1 131 1 48 1 317 1 299 1 18 1 32 1 
272 1 50 1 165 1 166 1 72 1 37 1 145 1 268 1 140 1 278 1 38 1 131 1 317 1 327 1 244 1 301 1 32 1 219 2 
272 1 50 1 165 2 166 1 72 1 37 1 145 1 268 1 287 1 140 1 278 1 38 2 131 2 317 1 327 1 244 1 301 1 32 1 219 2 
272 1 50 1 165 1 166 1 72 1 37 1 145 1 237 1 268 1 140 1 278 1 38 1 131 1 244 1 301 1 32 1 219 2 
241 1 
143 1 22 1 105 1 71 1 252 1 238 1 362 1 191 1 233 1 217 1 
137 1 143 2 127 1 97 1 98 1 362 1 240 1 101 2 173 1 338 1 233 1 351 1 80 1 
250 1 15 1 155 1 35 1 252 1 233 1 
143 2 1 1 165 4 250 3 225 1 85 1 26 2 348 1 148 1 131 4 231 1 48 2 112 1 182 2 15 3 72 1 71 1 155 4 35 2 238 2 158 1 159 1 315 2 140 1 362 2 38 4 18 1 191 2 217 2 
46 1 143 1 362 1 22 1 105 1 252 1 233 1 
0 1 143 1 44 1 250 1 15 1 155 1 35 1 71 1 252 1 238 1 98 1 362 1 101 1 340 1 233 2 191 1 217 1 
1 2 112 1 165 1 72 1 71 1 95 1 96 1 117 1 238 1 45 1 140 2 38 1 131 1 48 1 7 1 191 1 217 1 
137 1 11 1 143 1 206 1 71 1 236 1 238 1 98 2 347 1 362 3 6 1 101 3 173 1 338 2 233 1 191 1 217 1 351 1 80 2 
137 1 143 2 15 1 250 1 71 1 307 1 127 1 97 1 157 1 238 1 119 1 362 2 40 1 19 1 191 1 217 1 
273 1 1 1 165 1 223 1 249 2 61 1 106 1 63 1 256 1 131 1 48 1 201 3 232 1 9 2 70 1 112 1 332 1 72 1 75 1 96 1 309 1 265 1 313 1 286 1 359 3 140 1 38 1 41 2 243 2 292 1 246 1 125 2 
143 1 71 1 252 2 238 1 26 1 98 2 315 1 362 2 101 4 338 2 216 1 191 1 233 4 217 1 80 2 
255 1 248 1 76 1 356 1 293 1 
255 1 293 1 108 1 
255 1 293 1 108 1 
255 1 293 1 108 1 
281 1 255 1 293 1 
281 1 255 1 293 1 
281 1 255 1 293 1 
255 1 293 1 
47 1 258 1 
137 2 14 2 307 1 75 4 52 3 97 1 63 2 119 1 198 2 19 1 40 1 190 1 
9 2 137 1 275 1 14 1 106 1 75 1 309 1 256 1 173 1 246 1 
9 2 137 1 275 1 14 1 106 1 75 3 52 1 309 1 63 2 97 1 256 1 198 1 240 1 173 1 246 1 351 1 
9 6 275 1 14 1 307 1 75 3 106 3 195 1 309 3 52 2 116 1 63 2 197 1 119 1 256 3 198 1 190 1 246 3 
275 1 43 1 343 1 106 4 195 1 63 6 84 1 197 1 347 1 256 4 198 3 6 1 9 8 137 2 11 1 14 5 307 2 75 11 52 6 309 4 116 1 97 1 119 2 208 1 40 1 19 1 190 3 246 4 
9 4 137 1 43 1 14 3 343 1 307 1 75 5 106 2 52 3 309 2 195 1 63 2 119 1 256 2 198 2 40 1 190 1 216 1 246 2 
137 1 43 1 343 1 14 2 307 1 75 3 52 2 63 1 119 1 46 1 198 2 40 1 216 1 
9 2 137 1 14 1 106 1 75 3 52 1 309 1 63 2 97 1 84 1 256 1 198 1 240 1 173 1 246 1 351 1 
347 1 11 1 14 1 6 1 75 2 63 1 
347 1 137 1 11 1 240 1 14 2 173 1 236 1 75 5 97 1 63 3 139 1 351 1 
347 1 75 1 63 1 
11 1 14 1 75 1 
9 2 137 1 14 2 106 1 75 5 309 1 52 2 63 3 97 1 84 1 256 1 171 1 198 2 240 1 173 1 246 1 351 1 
275 1 106 2 195 1 63 6 25 1 347 1 256 2 198 1 6 1 173 2 67 1 351 2 9 4 137 2 11 1 206 1 14 5 75 11 309 2 52 2 97 2 141 1 240 2 190 1 246 2 247 1 
137 1 14 1 40 1 75 1 
9 2 43 1 14 1 343 1 307 1 75 3 106 1 52 2 195 1 309 1 116 1 63 2 119 1 256 1 198 1 190 1 246 1 
43 1 275 1 343 1 106 2 195 1 63 8 25 1 347 1 256 2 198 5 6 1 173 2 67 1 351 2 9 4 137 5 11 1 206 1 14 9 307 2 75 17 309 2 52 9 97 3 119 2 141 1 240 2 19 1 40 2 190 4 216 1 246 2 247 1 
43 1 275 1 343 1 106 3 195 1 63 7 84 1 25 1 347 1 256 3 198 3 6 1 173 2 67 1 351 2 9 6 137 3 11 1 206 1 14 7 307 1 75 14 309 3 52 4 97 2 119 1 141 1 240 2 40 1 190 1 216 1 246 3 247 1 
275 1 106 4 195 2 63 7 84 1 25 1 347 1 256 4 198 1 6 1 173 2 67 1 351 2 9 8 137 2 11 1 206 1 14 5 75 12 309 4 52 2 97 2 141 1 240 2 190 1 246 4 247 1 
43 1 275 1 343 1 106 3 195 1 63 7 84 1 25 1 347 1 256 3 198 3 6 1 173 2 67 1 351 2 9 6 137 3 11 1 206 1 14 7 307 1 75 14 309 3 52 5 97 2 119 1 141 1 240 2 40 1 190 2 216 1 246 3 247 1 
43 1 275 1 343 1 106 2 195 1 63 8 25 1 347 1 256 2 198 5 6 1 173 2 67 1 351 2 9 4 137 5 11 1 206 1 14 9 307 2 75 17 309 2 52 9 97 3 119 2 141 1 240 2 19 1 40 2 190 4 216 1 246 2 247 1 
275 1 106 2 195 1 63 6 25 1 347 1 256 2 198 1 6 1 173 2 67 1 351 2 9 4 137 2 11 1 206 1 14 5 75 11 309 2 52 2 97 2 141 1 240 2 190 1 246 2 247 1 
43 1 275 1 343 1 106 4 195 2 63 8 84 1 25 1 347 1 256 4 198 3 6 1 173 2 67 1 351 2 9 8 137 3 11 1 206 1 14 7 307 1 75 15 309 4 52 5 97 2 119 1 141 1 240 2 40 1 190 2 216 1 246 4 247 1 
275 1 106 4 195 2 63 9 197 1 25 1 347 1 256 4 198 3 6 1 173 3 67 1 351 3 9 8 137 3 11 1 206 1 14 6 75 15 309 4 52 4 97 3 141 1 240 3 190 1 246 4 247 1 
137 3 43 1 343 1 14 4 307 2 75 6 52 7 63 2 97 1 119 2 198 4 19 1 40 2 190 3 216 1 
43 1 275 1 343 1 106 4 195 2 63 8 197 1 25 1 347 1 256 4 198 3 6 1 173 2 67 1 351 2 9 8 137 3 11 1 206 1 14 7 307 1 75 15 309 4 52 4 97 2 119 1 141 1 240 2 40 1 190 1 216 1 246 4 247 1 
249 1 223 1 359 1 336 1 201 1 326 1 350 1 245 1 79 1 
20 1 111 1 223 1 249 1 183 1 107 1 359 1 336 1 201 1 326 1 350 1 245 1 79 1 180 1 
287 1 140 1 1 1 112 1 148 1 165 4 131 4 38 4 48 1 72 1 23 1 18 1 102 1 
112 1 1 1 165 2 182 1 72 1 96 1 266 1 277 1 140 2 38 2 131 2 150 1 213 1 302 1 
140 1 50 1 278 1 165 1 131 1 38 1 48 1 72 1 145 1 219 1 
112 1 1 1 165 2 72 1 114 1 129 1 287 1 140 1 38 2 131 2 301 1 
110 1 112 2 1 3 165 5 182 1 184 1 72 2 23 1 129 1 287 1 140 2 148 1 38 4 131 5 48 1 18 1 
110 1 112 2 1 3 165 5 182 1 72 2 23 1 83 1 129 1 287 1 140 2 148 1 38 4 131 5 48 1 18 1 
46 1 140 1 1 1 112 1 148 1 165 1 131 1 38 1 48 1 72 1 18 1 
273 1 70 1 1 1 112 1 165 1 223 1 249 1 72 1 96 1 359 2 360 1 140 1 38 1 131 1 201 2 48 1 41 1 243 1 
273 1 1 3 165 1 223 1 249 2 128 1 4 1 131 1 201 2 326 1 132 1 70 1 112 2 182 1 72 1 96 2 359 2 360 1 140 1 121 1 38 1 41 1 243 2 
126 1 273 1 1 3 165 2 223 1 249 2 128 1 4 1 131 2 201 2 326 1 132 1 112 2 182 1 72 1 96 2 359 2 360 1 140 1 121 1 38 2 41 1 243 2 102 1 
112 1 59 1 1 4 165 3 15 2 250 2 182 1 155 1 72 1 252 1 96 1 45 1 324 1 121 1 140 1 229 1 4 1 38 3 131 3 48 1 176 1 102 1 233 1 
263 1 112 1 1 4 165 3 15 2 250 2 182 1 155 1 72 1 252 1 96 1 45 1 324 1 121 1 140 1 229 1 4 1 38 3 131 3 48 1 102 1 233 1 
140 1 165 1 131 1 38 1 72 1 207 1 
110 1 261 1 112 2 1 3 165 7 184 1 72 2 207 1 96 1 117 1 129 1 287 1 140 3 38 6 131 7 288 1 150 1 48 2 301 1 302 1 33 1 
273 1 43 1 1 1 222 1 165 1 223 1 343 1 249 1 144 1 167 1 61 1 106 2 63 1 256 2 198 2 131 1 201 2 232 2 203 1 9 4 137 1 91 1 70 1 112 1 14 2 72 1 185 1 307 1 75 3 52 2 96 1 309 2 265 2 115 1 119 1 286 1 359 2 360 1 287 1 140 1 38 1 40 1 41 1 243 1 216 1 246 2 
321 1 143 1 1 2 165 1 22 1 250 3 105 1 252 1 45 1 229 1 324 1 131 1 48 1 134 1 233 1 263 1 15 3 113 1 71 2 155 2 35 1 285 1 238 2 158 1 362 1 38 1 191 2 217 2 
112 1 1 2 165 2 72 1 95 1 207 1 96 1 117 1 287 1 229 1 140 2 38 2 131 2 
126 1 273 1 1 1 112 1 165 1 223 1 249 1 72 1 96 1 359 2 360 1 140 1 38 1 131 1 201 2 48 1 41 1 243 1 
112 1 1 1 165 1 182 1 72 1 96 1 117 1 140 2 38 1 131 1 288 1 150 1 302 1 
249 1 36 1 251 1 24 1 311 1 359 1 5 1 201 1 174 1 
363 1 283 1 174 1 
223 1 36 1 174 1 156 1 311 1 
90 1 223 1 15 2 250 2 36 2 283 1 252 1 156 2 285 1 128 1 311 2 324 1 87 1 363 1 77 1 326 1 132 1 174 1 233 1 
230 1 49 1 163 1 74 1 133 1 151 1 318 1 154 1 
74 1 308 1 149 1 230 4 49 4 163 1 349 1 78 1 133 3 151 2 318 2 164 2 218 1 42 1 
74 1 230 2 163 1 49 2 17 1 133 1 151 1 318 1 164 1 152 1 154 1 280 1 
74 1 308 2 226 1 230 3 163 1 49 3 78 1 349 2 133 1 151 1 318 1 154 1 
357 1 212 2 133 2 242 1 
230 1 93 1 49 1 163 1 74 1 154 1 
230 2 49 2 163 1 74 1 133 1 151 1 318 1 164 1 169 1 154 1 
289 1 
230 1 49 1 163 1 74 1 133 1 151 1 318 1 154 1 
46 1 133 1 151 1 318 1 
230 1 49 1 163 1 74 1 133 1 151 1 318 1 
81 1 21 1 49 1 
230 3 49 3 163 1 349 1 78 1 74 1 133 1 151 1 308 2 318 1 204 1 154 1 
138 1 230 2 49 2 163 1 74 1 133 1 151 1 318 1 164 1 
230 1 278 1 166 1 49 1 163 1 74 1 133 1 215 1 218 1 219 1 154 1 
230 1 49 1 163 1 74 1 133 1 318 1 154 1 
230 1 49 1 163 1 74 1 151 1 318 2 154 1 
74 2 230 2 257 1 55 1 142 1 163 2 49 2 133 1 318 1 154 1 
74 1 169 1 230 3 30 1 163 1 49 3 133 2 151 1 318 1 164 2 218 1 154 1 42 1 
230 2 50 1 82 1 49 1 163 1 74 1 164 1 154 1 219 1 
138 1 74 2 146 1 230 4 163 2 49 4 133 2 151 1 318 1 164 2 218 1 154 1 42 1 
74 1 308 1 169 1 230 3 163 1 49 3 133 1 151 1 164 1 318 1 154 1 
149 1 133 1 218 1 42 1 
133 1 318 1 

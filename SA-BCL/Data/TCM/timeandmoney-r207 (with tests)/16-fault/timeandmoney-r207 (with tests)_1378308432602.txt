#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (85,163,212) 128 176 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (85,163,212) 128 176 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 187 28 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 187 28 185 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (85,163,212) 128 (9,181,250) 232 267 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 35 293 295 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 35 293 295 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 35 293 295 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 35 293 295 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 35 293 295 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (85,163,212) 128 176 120 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (85,163,212) 128 176 120 153 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 2 259 1 135 1 225 2 70 3 183 1 111 1 203 1 206 3 161 1 18 2 162 1 52 1 
301 1 259 1 86 2 135 6 179 2 225 2 183 1 226 2 138 1 142 1 18 2 52 4 268 1 59 1 310 1 237 1 238 1 279 1 283 5 68 1 110 1 70 9 111 1 203 3 206 9 161 1 162 2 36 2 
301 1 259 1 86 2 135 6 179 2 225 2 183 1 226 2 138 1 142 1 18 2 52 4 268 1 59 1 310 1 237 1 238 1 279 1 283 5 68 1 110 1 70 9 111 1 203 3 206 9 161 1 162 2 36 2 
301 1 259 1 86 2 135 7 179 2 225 2 183 1 226 2 138 1 142 1 18 2 52 5 268 1 59 1 310 1 237 1 238 1 279 1 283 6 68 1 110 1 70 10 111 1 203 4 206 10 161 1 162 2 36 2 
301 1 259 1 86 2 135 4 179 2 225 2 183 1 226 2 138 1 142 1 18 2 52 3 268 1 59 1 310 1 237 1 238 1 283 4 68 1 110 1 70 7 111 1 203 2 206 7 161 1 162 2 36 1 
310 1 279 1 283 3 86 1 259 1 135 3 179 1 225 1 70 4 183 1 203 1 226 1 206 4 161 1 18 1 52 2 36 2 59 1 
238 1 283 1 259 1 68 1 86 1 302 1 179 1 260 1 225 1 70 2 183 1 206 2 161 1 18 1 73 1 162 1 309 1 
259 1 86 1 135 7 179 1 225 2 183 1 226 1 18 2 186 1 52 4 268 1 59 1 310 1 279 1 283 5 110 1 70 9 203 3 111 1 206 9 244 1 161 1 162 1 36 2 
259 1 86 1 135 7 179 1 225 2 183 1 226 1 18 2 186 1 52 4 268 1 59 1 310 1 279 1 283 5 110 1 70 9 203 3 111 1 206 9 244 1 161 1 162 1 36 2 
271 1 82 1 4 1 85 1 312 1 258 1 241 1 285 1 181 1 318 1 208 1 163 1 117 1 212 1 
81 1 
81 1 92 1 318 1 211 1 188 1 32 1 241 2 181 2 
81 2 82 1 4 1 85 1 130 2 175 2 258 1 134 5 87 1 181 5 184 1 50 1 92 2 306 2 188 1 189 1 271 1 21 1 103 2 273 1 274 2 311 1 236 2 312 1 241 5 285 1 71 1 114 4 318 2 208 1 115 1 163 1 117 1 118 1 212 1 211 2 248 1 296 1 
81 1 92 1 108 1 
81 1 113 1 265 2 
271 2 208 1 163 2 85 2 117 2 212 2 20 1 258 2 
125 1 0 1 3 1 173 1 255 1 5 1 85 2 83 1 258 2 224 1 15 1 14 1 264 1 20 1 56 1 308 2 149 2 196 1 271 3 66 1 107 1 282 1 242 2 287 2 160 1 208 1 246 1 74 1 163 3 117 2 212 2 213 1 38 2 40 1 169 1 42 1 79 1 
271 1 82 1 208 1 163 1 85 1 117 1 312 1 212 1 258 1 285 1 
128 1 212 1 9 1 
271 2 81 1 82 1 4 1 85 2 218 1 312 2 258 2 241 2 285 1 181 2 92 1 208 1 163 2 117 2 212 2 214 1 37 1 250 1 
318 1 95 1 211 1 241 1 181 1 
81 1 124 1 92 1 318 1 211 1 188 1 241 2 181 2 
211 1 241 1 181 1 
271 2 129 1 85 1 312 1 258 1 202 1 163 2 117 1 212 2 20 1 41 1 
290 1 249 1 78 1 
271 1 0 1 3 1 255 1 83 1 242 1 224 1 160 1 246 1 163 1 100 1 213 1 20 1 308 1 38 1 79 1 
20 1 108 1 
271 2 0 1 216 1 3 1 255 1 83 1 85 1 258 1 242 1 224 1 159 1 160 1 290 1 246 1 163 2 212 1 213 1 308 1 38 1 79 1 
271 3 216 1 163 3 117 1 85 3 212 3 20 1 258 3 
271 1 82 1 163 1 85 1 312 1 212 1 258 1 
271 1 163 1 129 1 85 1 117 1 312 1 212 1 258 1 41 1 
0 1 3 1 255 1 173 1 5 1 85 3 83 1 258 3 181 1 15 1 20 1 271 4 196 1 107 1 282 1 200 1 202 1 286 1 287 1 208 1 117 2 213 1 212 3 37 1 214 1 38 1 41 1 42 1 216 1 218 1 224 1 56 1 308 1 149 2 312 2 241 1 242 1 159 1 160 1 246 1 163 4 74 1 250 1 79 1 169 1 
271 1 216 1 128 1 163 1 85 1 212 2 176 1 258 1 
271 3 81 1 216 2 218 1 85 3 312 1 106 1 258 3 200 1 241 1 181 1 159 1 163 3 117 1 212 3 214 1 37 1 41 1 250 1 
271 2 216 1 85 2 258 2 290 1 163 2 117 1 212 2 249 1 41 1 
271 1 0 1 3 1 255 1 83 1 242 1 224 1 160 1 246 1 163 1 213 1 20 1 308 1 38 1 79 1 
271 1 0 1 83 1 155 1 242 1 224 1 11 1 160 1 246 1 163 1 213 1 20 1 308 1 38 1 79 1 
196 1 103 1 125 2 173 1 46 1 130 1 313 1 27 1 282 1 314 1 240 1 88 1 316 1 287 4 290 2 291 1 74 1 249 2 191 1 56 2 78 2 149 2 42 1 169 1 
271 1 143 1 163 1 85 1 312 1 212 1 37 1 258 1 
271 4 123 1 216 2 1 1 128 1 85 4 176 1 258 4 159 1 163 4 117 1 212 5 20 1 41 1 
271 2 143 1 82 1 163 2 85 2 312 1 212 2 258 2 
101 1 
24 1 31 1 101 2 
101 1 
101 1 
24 1 31 1 
24 1 31 1 
24 1 31 1 
101 1 
101 1 
101 1 
101 1 
101 1 
101 1 
235 1 187 1 55 1 28 1 
235 1 185 1 187 1 55 1 28 1 241 1 181 1 
226 1 190 1 199 2 309 1 179 2 
226 1 86 1 179 1 
86 1 309 1 179 1 
226 2 219 1 199 1 190 1 309 1 179 3 
226 1 307 1 199 1 190 1 309 1 179 2 
81 2 82 1 4 1 85 1 46 1 8 1 134 2 177 1 258 1 303 1 49 1 181 5 92 1 94 1 306 1 265 2 188 1 271 1 103 1 274 1 152 1 236 1 23 2 312 1 241 5 285 1 113 1 114 1 318 4 208 1 163 1 117 1 118 1 75 1 167 1 212 1 211 1 122 1 
81 2 82 1 4 1 85 1 46 1 134 2 177 1 258 1 303 1 49 1 181 5 144 1 92 1 94 1 95 2 306 1 265 2 188 1 271 1 103 1 274 1 152 1 236 1 312 1 241 5 285 1 315 2 113 1 114 1 318 4 208 1 163 1 118 1 117 1 75 1 211 3 210 1 212 1 122 1 
81 2 82 1 4 1 85 1 8 1 46 1 258 1 177 1 134 2 87 1 49 1 303 1 181 3 92 1 94 1 306 1 265 2 271 1 103 1 274 1 236 1 23 1 312 1 241 3 285 1 113 1 318 2 114 1 208 1 163 1 117 1 167 1 75 1 212 1 122 1 
81 1 8 1 46 1 177 1 134 2 48 1 87 1 49 1 303 1 181 2 94 1 306 1 265 2 103 1 274 1 236 1 23 1 241 2 113 1 114 1 318 1 75 1 167 1 122 1 
156 1 
234 1 108 1 79 1 
221 1 79 1 
79 1 224 1 
234 2 160 1 165 1 158 1 79 3 224 1 
160 1 79 1 224 1 
193 1 79 1 
21 1 103 1 273 1 125 4 311 1 253 1 26 1 130 1 313 3 27 2 109 1 223 2 34 1 227 1 287 7 294 1 56 3 168 1 
125 14 172 1 217 4 130 1 46 4 178 1 223 1 303 4 304 1 227 1 51 4 230 1 56 8 149 4 195 1 21 1 196 2 103 4 273 1 62 2 26 4 313 5 27 1 240 1 282 2 288 1 287 22 74 2 294 1 77 1 215 1 169 2 
21 1 196 2 103 1 273 1 62 1 125 5 311 1 253 1 26 1 130 1 313 4 27 3 282 2 223 2 227 1 287 9 90 1 91 1 294 1 74 2 56 4 149 4 168 1 169 2 
21 1 103 1 273 1 125 4 311 1 253 1 26 1 130 1 313 3 27 2 223 2 34 1 227 1 287 7 294 1 56 3 168 1 
21 1 103 1 273 1 125 4 311 1 253 1 26 1 130 1 313 3 27 2 223 2 34 1 227 1 287 7 294 1 56 3 168 1 
171 1 0 1 105 1 239 1 180 2 242 1 224 1 225 1 70 1 206 1 93 1 162 2 18 1 17 1 246 1 146 1 213 1 229 1 308 1 38 1 192 2 79 1 270 2 
0 1 219 1 86 1 259 1 180 1 179 2 225 1 226 1 139 1 141 1 18 1 97 1 98 1 53 1 192 1 308 1 150 1 309 1 270 1 154 1 242 1 70 1 206 1 162 1 246 1 38 1 
0 1 219 1 86 1 259 1 135 1 180 1 179 2 225 1 183 1 226 1 139 1 141 1 18 1 97 1 98 1 192 1 308 1 150 1 309 1 270 1 154 1 280 1 283 1 242 1 70 2 206 2 161 1 162 1 246 1 38 1 
0 1 219 1 133 1 86 1 135 2 180 1 179 2 225 1 183 1 226 1 139 1 18 1 97 1 98 1 53 1 192 1 308 1 150 1 309 1 270 1 154 1 239 1 283 1 242 1 70 3 206 3 161 1 162 1 246 1 38 1 
0 1 219 1 133 1 86 1 135 2 180 1 179 2 183 1 226 1 98 1 53 1 192 1 308 1 150 1 309 1 270 1 154 1 283 1 242 1 70 2 206 2 161 1 162 1 246 1 38 1 
284 1 
171 1 0 1 44 1 128 1 6 1 9 1 134 1 181 2 224 1 93 1 306 1 188 1 267 1 308 2 232 1 274 1 236 1 65 1 29 1 241 2 242 2 317 1 114 1 246 1 118 1 212 1 213 2 211 2 38 2 122 1 79 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 211 1 188 1 9 1 267 1 32 1 241 2 181 2 
232 1 274 1 236 1 44 1 128 1 9 1 241 1 181 1 317 1 306 1 118 1 212 1 267 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 317 1 44 1 128 1 212 1 9 1 267 1 241 1 181 1 
232 1 274 1 236 1 44 1 128 1 9 1 241 1 181 1 317 1 306 1 118 1 212 1 267 1 
171 1 216 1 0 2 125 1 173 2 85 1 84 1 258 1 88 1 224 2 89 1 93 1 53 1 264 1 56 1 308 8 149 4 271 1 196 2 64 1 66 2 280 1 281 1 107 1 282 2 67 1 30 1 201 1 242 7 287 2 246 2 163 1 74 2 212 1 213 2 38 8 79 3 169 2 42 2 
125 1 173 1 85 1 46 1 258 1 303 1 145 1 149 2 196 1 271 1 103 1 282 1 287 1 245 1 74 1 163 1 117 1 212 1 41 1 169 1 42 1 
125 3 253 1 173 1 130 1 88 1 223 1 20 2 56 3 149 2 21 1 196 1 103 1 273 1 311 1 313 2 282 1 27 2 108 1 287 6 290 1 74 1 249 1 78 1 168 1 169 1 42 1 
80 1 125 8 254 1 173 1 217 3 130 1 46 2 303 2 304 1 51 3 145 1 264 1 230 1 20 1 56 6 148 1 149 4 196 2 103 2 26 1 107 1 313 1 240 1 282 2 287 14 290 11 74 2 249 3 77 1 78 11 169 2 42 2 
0 1 216 1 125 1 3 1 255 1 173 1 83 1 85 1 258 1 224 1 145 1 96 1 100 1 264 1 20 1 56 1 308 1 149 2 102 1 196 1 271 2 107 1 282 1 242 1 159 1 287 2 160 1 246 1 292 1 163 2 74 1 213 1 212 1 249 1 38 1 79 1 169 1 42 1 
216 1 173 1 300 1 85 1 258 1 145 1 56 1 308 1 149 2 196 1 271 1 107 1 282 1 242 1 287 1 159 1 163 1 74 1 212 1 213 1 38 1 169 1 42 1 
196 1 103 1 125 2 173 1 26 1 46 1 313 1 282 1 88 1 287 2 290 1 74 1 249 1 191 1 78 1 149 2 42 1 169 1 
196 1 173 1 130 1 313 1 27 1 282 1 240 1 88 1 287 2 290 1 291 1 74 1 249 1 56 2 78 1 149 2 42 1 169 1 
196 1 103 1 125 2 173 1 46 1 282 1 88 1 303 1 287 2 290 1 74 1 249 1 78 1 149 2 42 1 169 1 
196 1 103 1 125 2 173 1 26 1 84 1 46 1 313 1 282 1 287 2 290 1 74 1 249 1 191 1 78 1 149 2 42 1 169 1 
196 1 173 1 84 1 130 1 313 1 27 1 282 1 240 1 287 2 290 1 291 1 74 1 249 1 56 2 78 1 149 2 42 1 169 1 
196 1 103 1 125 2 173 1 84 1 46 1 282 1 303 1 287 2 290 1 74 1 249 1 78 1 149 2 42 1 169 1 
196 1 103 1 125 2 173 1 46 1 282 1 303 1 287 2 290 1 74 1 249 1 78 1 149 2 42 1 169 1 
125 1 0 1 3 1 255 1 173 1 5 1 83 1 224 1 264 1 20 1 56 1 308 1 149 2 271 1 196 1 107 1 282 1 242 1 287 2 160 1 246 1 163 1 74 1 213 1 38 1 79 1 42 1 169 1 
170 1 125 1 0 1 173 1 83 1 224 1 11 1 264 1 20 1 56 1 308 1 149 2 271 1 196 1 155 1 107 1 282 1 242 1 287 2 160 1 246 1 163 1 74 1 213 1 38 1 79 1 42 1 169 1 
196 1 103 1 125 2 173 1 46 1 282 1 303 1 287 2 290 1 145 1 74 1 249 1 78 1 149 2 42 1 169 1 
125 2 0 1 3 1 255 1 173 1 5 1 83 1 46 1 303 1 224 1 308 1 149 2 271 1 196 1 103 1 280 1 282 1 242 1 287 2 160 1 112 1 290 1 246 1 163 1 74 1 249 1 38 1 78 1 79 1 42 1 169 1 
125 2 173 1 127 1 85 1 130 1 46 1 258 1 303 1 145 1 56 1 149 2 196 1 271 1 103 1 282 1 240 1 287 3 290 1 74 1 163 1 117 1 212 1 41 1 78 1 169 1 42 1 
196 1 90 1 35 1 293 1 74 1 166 1 295 1 282 1 149 2 169 1 
196 1 90 1 35 1 293 1 74 1 166 1 295 1 282 1 149 2 169 1 
196 1 90 1 35 1 293 1 74 1 166 1 295 1 282 1 149 2 169 1 
196 1 90 1 35 1 293 1 74 1 166 1 295 1 282 1 149 2 169 1 
196 1 90 1 35 1 293 1 74 1 166 1 295 1 282 1 149 2 169 1 
0 1 125 1 173 1 132 1 136 1 224 1 145 1 264 1 56 1 308 2 149 2 196 1 271 2 66 2 277 1 281 1 107 1 282 1 67 1 242 2 287 2 289 1 246 1 163 2 74 1 212 2 38 2 79 1 42 1 297 1 169 1 
171 1 0 1 126 1 242 1 180 1 224 1 93 1 246 1 164 1 146 1 213 1 308 1 38 1 79 1 
126 1 0 1 219 1 86 1 222 1 179 2 242 1 180 1 226 1 139 1 246 1 98 1 53 1 121 1 308 1 38 1 309 1 150 1 
0 1 126 1 219 1 280 1 86 1 222 1 179 2 242 2 180 1 226 1 139 1 246 1 98 1 53 1 121 1 308 2 38 2 309 1 150 1 
0 1 219 1 86 1 222 1 179 2 242 1 180 1 33 1 226 1 139 1 246 1 98 1 53 1 308 1 38 1 309 1 150 1 
137 1 
274 1 81 1 236 1 134 1 92 1 114 1 306 1 118 1 248 1 296 1 
103 1 81 1 46 1 134 2 303 1 113 1 94 1 75 1 265 2 
81 1 92 1 211 1 188 1 241 1 181 1 
171 1 0 2 6 1 256 1 134 2 87 1 10 1 224 2 181 3 93 1 306 2 188 2 308 4 194 1 233 1 63 1 274 2 236 2 65 1 29 2 241 3 69 2 242 4 160 1 72 1 114 2 246 3 118 1 116 1 213 2 211 4 38 4 122 2 79 2 
81 1 114 1 92 1 248 1 296 1 134 1 108 1 
299 1 81 2 134 1 181 1 92 1 306 1 265 1 188 1 151 1 274 1 236 1 198 1 241 1 113 1 114 1 118 1 211 1 
0 1 81 5 82 1 4 1 85 1 7 1 258 1 181 5 92 1 94 4 188 3 265 8 269 2 271 1 104 2 103 2 274 3 22 2 276 1 278 2 29 1 285 1 114 4 113 4 208 1 117 1 118 3 212 1 213 1 211 5 38 1 122 2 218 2 46 2 47 1 221 3 134 7 303 2 224 1 306 3 308 1 234 2 236 3 312 1 241 5 242 1 243 2 160 1 246 2 163 1 165 1 247 2 75 4 79 6 
81 2 217 1 46 2 134 4 303 2 261 1 51 1 94 3 306 1 265 4 19 1 230 1 103 2 274 1 236 1 25 1 114 2 113 2 319 1 118 1 75 3 252 1 
82 1 4 1 85 1 175 2 130 1 134 2 258 1 181 1 306 1 99 1 189 1 271 1 21 1 103 2 273 1 274 1 236 1 311 1 312 1 241 1 285 1 71 1 114 2 208 1 163 1 118 1 117 1 212 1 
0 1 3 1 255 1 173 1 5 1 85 2 83 1 258 2 224 1 15 1 20 1 56 1 308 1 149 2 271 3 196 1 107 1 282 1 242 1 287 1 160 1 208 1 246 1 74 1 163 3 117 2 213 1 212 2 38 1 169 1 79 1 42 1 
274 1 81 4 236 1 29 1 134 2 223 1 113 2 114 1 92 2 94 2 306 1 118 1 75 2 265 4 122 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
235 1 187 1 
101 1 
196 1 21 2 103 2 273 2 125 5 311 1 26 2 130 2 313 5 282 1 27 3 90 1 287 10 71 1 74 1 56 5 149 2 169 1 
196 1 103 1 125 2 26 1 46 1 313 1 282 1 90 1 287 2 74 1 149 2 169 1 
196 1 103 1 125 2 26 1 130 1 46 1 313 1 240 1 282 1 303 1 90 1 287 4 74 1 56 2 149 2 169 1 
196 3 21 1 62 1 273 1 125 1 2 1 172 1 26 1 313 2 282 3 27 1 287 3 90 1 74 3 56 2 149 6 169 3 
125 20 253 1 2 1 172 1 217 4 46 4 130 5 223 1 303 4 304 1 90 1 51 4 230 1 56 19 58 1 149 10 195 1 21 3 196 5 103 6 273 3 62 2 311 2 26 6 313 10 27 4 282 5 240 3 288 1 287 39 74 5 77 1 168 1 215 1 169 5 
21 1 196 1 103 1 273 1 125 4 311 1 253 1 25 1 217 1 130 1 313 2 27 2 282 1 223 1 90 1 287 8 51 1 74 1 230 1 56 4 149 2 168 1 169 1 
125 11 217 2 46 4 130 3 303 4 304 1 261 1 90 1 51 2 19 1 230 1 56 9 149 4 58 1 196 2 103 4 25 1 26 2 313 2 282 2 240 3 287 20 319 1 74 2 77 1 252 1 169 2 
125 6 217 1 46 2 303 2 261 1 90 1 51 1 19 1 230 1 56 2 149 4 58 1 196 2 103 2 25 1 26 1 313 1 282 2 287 8 319 1 74 2 169 2 252 1 
125 6 217 1 46 2 130 1 303 2 261 1 90 1 51 1 19 1 230 1 56 4 149 4 58 1 196 2 103 2 25 1 282 2 240 1 287 10 319 1 74 2 169 2 252 1 
21 1 196 1 103 1 273 1 125 4 311 1 253 1 25 1 217 1 130 1 313 2 27 2 282 1 223 1 90 1 287 8 51 1 74 1 230 1 56 4 149 2 168 1 169 1 
196 1 103 2 125 6 25 1 217 1 26 1 46 2 313 1 282 1 303 2 261 1 90 1 287 8 51 1 319 1 74 1 19 1 230 1 56 2 149 2 252 1 169 1 
125 6 217 1 46 2 130 1 303 2 261 1 90 1 51 1 19 1 230 1 56 4 58 1 149 4 196 2 103 2 25 1 282 2 240 1 287 10 319 1 74 2 169 2 252 1 
125 6 2 1 217 1 130 1 46 2 303 2 261 1 90 1 51 1 19 1 230 1 56 4 149 4 196 2 103 2 25 1 26 1 313 1 282 2 240 1 287 10 319 1 74 2 169 2 252 1 
21 3 103 1 273 3 125 3 253 2 311 1 26 3 130 1 313 6 27 3 287 7 56 4 168 1 
125 6 2 1 217 1 46 2 130 1 303 2 261 1 90 1 51 1 19 1 230 1 56 4 149 4 196 2 103 2 25 1 282 2 240 1 287 10 319 1 74 2 169 2 252 1 
196 2 21 1 103 1 125 4 62 1 273 1 311 1 253 1 26 1 130 1 313 3 27 2 282 2 223 1 287 8 74 2 56 4 149 4 168 1 169 2 
21 1 103 1 273 1 125 3 253 1 311 1 130 1 313 2 27 2 108 1 223 1 287 6 56 3 168 1 
196 1 103 1 125 2 46 1 282 1 303 1 287 2 74 1 58 1 149 2 169 1 
103 2 125 6 217 2 26 2 46 2 313 2 303 2 304 1 287 8 51 2 77 1 230 1 56 2 
125 14 253 1 172 1 217 2 130 2 46 2 223 1 303 2 304 1 51 2 56 12 148 1 149 4 21 4 196 2 103 4 273 4 62 2 311 2 26 5 313 10 27 5 282 2 287 26 71 1 74 2 77 1 168 1 169 2 
287 1 217 1 56 1 
287 1 125 1 51 1 
103 1 22 1 125 3 26 1 46 1 313 1 303 1 287 4 56 1 
196 1 103 2 125 6 25 1 217 1 26 1 46 2 313 1 282 1 303 2 261 1 90 1 287 8 51 1 319 1 74 1 19 1 230 1 56 2 149 2 252 1 169 1 
21 1 103 1 125 3 273 1 311 1 26 1 130 1 313 2 27 1 287 6 56 3 
21 1 196 1 125 1 273 1 62 1 253 1 172 1 26 1 313 2 27 1 282 1 287 3 74 1 56 2 149 2 168 1 169 1 
128 1 120 1 212 1 176 1 
272 1 153 1 128 1 120 1 45 1 212 1 176 1 57 1 231 1 
171 1 0 1 280 1 157 1 242 4 224 1 305 1 93 1 246 1 213 1 308 4 38 4 79 1 
60 1 233 1 63 1 0 1 69 1 242 2 10 1 224 1 160 1 72 1 246 2 308 2 38 2 79 1 
0 1 246 1 98 1 213 1 86 1 38 1 308 1 309 1 179 1 242 1 
0 1 280 1 281 1 132 1 242 2 224 1 246 1 53 1 308 2 38 2 79 1 
171 1 0 2 64 1 280 1 281 1 30 1 69 1 242 4 224 2 305 1 93 1 246 2 213 1 308 5 38 5 79 3 
171 1 0 2 280 1 281 1 30 1 69 1 242 4 224 2 228 1 305 1 93 1 246 2 213 1 308 5 38 5 79 3 
171 1 0 1 93 1 246 1 213 1 108 1 38 1 308 1 242 1 79 1 224 1 
271 2 216 1 0 1 3 1 83 1 85 1 258 1 242 1 224 1 160 1 246 1 163 2 212 1 213 1 20 1 308 1 38 1 79 1 
0 1 216 1 3 1 174 1 85 2 83 1 258 1 224 2 20 1 308 1 193 1 271 2 312 2 242 1 69 1 202 1 160 2 246 1 163 2 212 2 214 1 37 1 38 1 79 3 
0 1 216 1 174 1 85 2 83 1 258 1 224 2 11 1 20 1 308 1 193 1 271 2 312 2 242 1 69 1 202 1 160 2 246 1 163 2 212 2 214 1 37 1 38 1 79 3 
0 1 81 1 82 1 4 1 174 1 85 1 218 1 257 1 258 1 221 1 181 2 224 1 16 1 92 1 308 1 193 1 271 1 234 1 312 1 241 2 285 1 242 1 69 1 160 1 208 1 246 1 163 1 117 1 212 1 211 1 38 1 79 4 
0 1 81 1 82 1 4 1 174 1 85 1 218 1 258 1 221 1 181 2 224 1 92 1 308 1 193 1 269 1 271 1 234 1 312 1 241 2 285 1 242 1 69 1 160 1 208 1 246 1 163 1 117 1 212 1 211 1 38 1 79 4 
89 1 0 1 246 1 38 1 308 1 242 1 
233 1 63 1 0 2 64 1 275 1 66 1 280 1 281 1 30 1 201 1 242 6 224 2 89 1 160 1 246 3 165 1 53 1 213 2 308 7 38 7 79 3 
125 3 0 1 216 1 253 1 3 1 173 2 255 1 5 1 83 1 85 1 130 1 258 1 223 1 224 1 145 1 20 2 56 3 308 1 149 4 21 1 196 2 271 2 103 1 61 1 273 1 311 1 280 1 313 2 27 2 282 2 242 1 287 6 160 1 112 1 289 1 290 1 246 1 163 2 74 2 212 1 249 1 38 1 78 1 168 1 79 1 169 2 42 2 
81 2 82 1 4 1 85 1 175 2 258 1 181 3 92 2 188 1 189 1 269 1 271 1 21 1 104 1 103 2 274 2 273 1 278 1 285 1 114 4 208 1 116 1 118 2 117 1 211 2 213 1 212 1 296 1 38 1 218 1 130 2 221 1 134 5 306 2 308 1 234 1 236 2 311 1 312 1 241 3 242 1 243 1 71 1 318 1 163 1 248 1 79 2 
234 1 0 1 280 1 47 1 242 2 224 1 89 1 160 1 246 2 165 1 308 2 38 2 79 2 
271 2 216 1 0 1 83 1 85 1 258 1 242 1 224 1 11 1 160 1 246 1 163 2 212 1 213 1 20 1 308 1 38 1 79 1 
233 1 63 1 0 1 275 1 69 1 242 1 224 1 160 1 246 2 165 1 308 1 38 1 79 1 
271 1 140 1 163 1 277 1 212 1 131 1 266 1 136 1 297 1 
220 1 131 1 251 1 
13 1 140 1 266 1 131 1 20 1 
81 1 82 1 4 1 85 1 218 1 220 1 131 1 258 1 181 2 13 1 12 1 140 1 92 1 266 1 271 1 312 2 200 1 241 2 285 1 318 1 208 1 163 1 117 1 212 1 214 1 37 1 250 1 251 1 
183 1 206 1 161 1 18 1 283 1 259 1 70 1 225 1 
43 1 238 1 283 3 302 1 135 2 70 4 225 1 183 2 203 1 205 1 206 4 161 2 18 1 52 1 
183 1 206 2 161 1 18 1 186 1 119 1 209 1 283 1 259 1 135 1 70 2 225 1 
43 2 298 1 238 2 283 1 259 1 225 1 70 3 183 1 205 1 206 3 161 1 18 1 
263 1 76 2 283 2 182 1 
204 1 206 1 18 1 259 1 70 1 225 1 
183 1 206 2 161 1 18 1 283 1 259 1 135 1 110 1 70 2 225 1 
39 1 
183 1 206 1 161 1 18 1 283 1 259 1 70 1 225 1 
183 1 161 1 283 1 108 1 
183 1 206 1 161 1 18 1 283 1 70 1 225 1 
206 1 162 1 270 1 
43 1 238 2 283 1 259 1 225 1 70 3 183 1 206 3 205 1 161 1 207 1 18 1 
183 1 206 2 161 1 18 1 36 1 283 1 135 1 70 2 225 1 
283 1 259 1 86 1 179 1 225 1 70 1 226 1 206 1 18 1 52 1 59 1 
183 1 206 1 18 1 283 1 259 1 70 1 225 1 
183 2 206 1 161 1 18 1 259 1 70 1 225 1 
183 1 206 2 197 1 18 2 54 1 283 1 147 1 259 1 70 2 225 2 
283 2 259 1 110 1 135 2 225 1 70 3 183 1 203 1 206 3 161 1 18 1 52 1 268 1 
219 1 283 1 259 1 86 1 135 1 179 2 225 1 70 2 183 1 226 1 206 2 161 1 18 1 262 1 309 1 
279 1 283 2 259 1 135 2 225 2 70 4 183 1 203 1 206 4 161 1 18 2 52 1 36 1 
238 1 283 1 259 1 135 1 110 1 225 1 70 3 183 1 206 3 161 1 18 1 
203 1 52 1 283 1 302 1 
183 1 283 1 

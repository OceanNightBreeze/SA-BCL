#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 197 200 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 197 157 264 154 (78,335) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 197 167 28 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 197 167 28 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 197 167 28 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 197 167 28 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 197 167 28 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 331 343 36 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 197 200 42 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 197 200 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 197 157 264 160 219 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 197 157 264 154 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 197 157 264 154 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 197 200 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 197 200 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 197 35 341 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 197 35 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 197 35 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 197 35 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 197 35 341 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (207,281) 294 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (207,281) 294 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (207,281) 306 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (207,281) 306 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 197 200 42 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 202 261 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 197 202 261 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 197 157 264 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 197 202 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 197 112 186 11 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 137 91 202 (269,319) (269,319) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 137 91 202 (269,319) (269,319) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 197 157 264 160 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 197 112 186 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 197 112 25 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 197 112 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 197 157 264 160 219 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 197 112 186 184 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 197 157 89 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 137 91 202 (269,319) (269,319) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 197 202 (269,319) (269,319) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 15 1 141 1 52 2 300 2 210 2 6 3 54 1 234 3 17 1 213 1 88 1 337 1 
246 2 120 1 141 6 52 2 300 5 144 2 6 9 304 1 54 1 234 9 224 2 88 2 337 3 32 1 263 1 158 1 64 1 15 1 159 1 356 1 210 2 240 1 290 1 322 2 17 4 325 1 213 1 44 1 
246 2 120 1 141 6 52 2 300 5 144 2 6 9 304 1 54 1 234 9 224 2 88 2 337 3 32 1 263 1 158 1 64 1 15 1 159 1 356 1 210 2 240 1 290 1 322 2 17 4 325 1 213 1 44 1 
246 2 120 1 141 7 52 2 300 6 144 2 6 10 304 1 54 1 234 10 224 2 88 2 337 4 32 1 263 1 158 1 64 1 15 1 159 1 356 1 210 2 240 1 290 1 322 2 17 5 325 1 213 1 44 1 
246 2 120 1 141 4 52 2 300 4 144 2 6 7 304 1 54 1 234 7 224 1 88 2 337 2 263 1 158 1 64 1 15 1 159 1 356 1 210 2 240 1 290 1 322 2 17 3 325 1 213 1 44 1 
246 1 32 1 64 1 15 1 141 3 356 1 52 1 300 3 144 1 210 1 6 4 322 1 54 1 234 4 17 2 325 1 224 2 337 1 
120 1 246 1 64 1 15 1 238 1 300 1 52 1 210 1 240 1 6 2 322 1 54 1 234 2 96 1 107 1 88 1 
246 1 141 7 349 1 52 2 300 5 144 1 6 9 304 1 54 1 234 9 224 2 88 1 337 3 307 1 158 1 32 1 64 1 15 1 356 1 210 2 322 1 17 4 325 1 213 1 
246 1 141 7 349 1 52 2 300 5 144 1 6 9 304 1 54 1 234 9 224 2 88 1 337 3 307 1 158 1 32 1 64 1 15 1 356 1 210 2 322 1 17 4 325 1 213 1 
161 1 80 1 5 1 271 1 69 1 166 1 57 1 198 1 230 1 86 1 243 1 284 1 226 1 12 1 
168 1 
271 1 166 2 168 1 243 2 334 1 258 1 179 1 169 1 
348 1 121 1 310 1 111 2 183 2 65 1 68 1 271 2 166 5 125 1 168 1 243 5 19 2 126 1 73 1 258 1 179 1 46 1 169 2 
265 1 168 1 179 1 
128 2 168 1 235 1 
69 2 161 2 86 2 230 2 350 1 226 2 80 2 12 1 
298 1 189 1 171 1 139 2 218 1 328 1 350 1 220 1 192 1 280 1 80 2 195 1 149 1 197 1 86 3 333 2 177 1 226 2 12 1 13 1 200 1 339 1 262 1 180 1 285 1 161 3 182 1 357 1 344 1 272 1 69 2 293 2 295 1 274 1 230 2 275 1 118 1 
69 1 57 1 161 1 86 1 230 1 284 1 226 1 80 1 5 1 12 1 
311 1 267 1 161 1 163 1 5 1 150 1 166 1 168 1 230 1 86 1 10 1 243 1 179 1 228 1 
267 1 161 1 80 1 5 1 150 1 69 1 166 2 168 1 230 1 86 1 10 1 243 2 179 1 226 1 228 1 
271 1 166 1 204 1 243 1 169 1 
271 1 166 2 168 1 243 2 79 1 258 1 179 1 169 1 
166 1 243 1 169 1 
90 1 161 2 350 1 342 1 80 1 5 1 69 1 152 1 230 2 86 2 226 1 
78 1 321 1 260 1 
139 1 161 1 182 1 350 1 220 1 192 1 195 1 272 1 293 1 86 1 333 1 153 1 177 1 118 1 275 1 13 1 
265 1 350 1 
139 1 161 2 182 1 220 1 192 1 195 1 272 1 69 1 324 1 293 1 230 1 86 2 333 1 275 1 118 1 177 1 226 1 13 1 135 1 260 1 
161 3 350 1 80 1 5 1 69 3 324 1 230 3 86 3 152 1 226 3 
69 1 57 1 161 1 86 1 230 1 226 1 5 1 
90 1 161 1 342 1 80 1 5 1 69 1 230 1 86 1 226 1 
298 1 189 1 171 1 218 1 139 1 328 1 350 1 220 1 192 1 80 2 195 1 5 1 149 1 150 1 174 1 86 4 333 1 10 1 177 1 226 3 13 1 12 1 228 1 339 1 262 1 285 1 267 1 90 1 161 4 182 1 357 1 344 1 272 1 115 1 69 3 324 1 166 1 293 1 295 1 230 3 275 1 118 1 243 1 135 1 
69 1 324 1 161 2 86 2 230 2 350 1 163 1 239 1 226 1 
267 1 90 1 161 3 80 1 5 1 150 1 115 1 69 3 166 1 324 2 168 1 230 3 86 3 243 1 10 1 99 1 226 3 135 1 228 1 
90 1 161 2 78 1 80 1 69 2 324 1 230 2 86 2 226 2 260 1 
139 1 161 1 182 1 350 1 220 1 192 1 195 1 272 1 293 1 86 1 333 1 177 1 118 1 275 1 13 1 
139 1 161 1 182 1 350 1 220 1 192 1 67 1 272 1 293 1 86 1 333 1 177 1 118 1 275 1 227 1 
189 1 298 1 339 1 264 1 171 1 285 1 78 1 357 1 321 1 344 1 323 1 149 2 351 1 197 1 295 2 154 1 157 1 335 1 260 1 110 1 245 1 237 1 
150 1 69 1 161 1 86 1 230 1 268 1 226 1 5 1 
90 1 161 2 350 1 80 1 5 1 69 2 324 1 152 1 230 2 86 2 226 2 
69 2 57 1 161 2 86 2 230 2 268 1 226 2 5 1 
114 1 252 1 330 1 
252 2 330 2 281 1 142 1 205 1 72 1 
252 1 330 1 
252 1 330 1 
205 1 72 1 
205 1 72 1 
205 1 72 1 
252 1 330 1 358 1 
252 1 330 1 358 1 
252 1 330 1 358 1 
252 1 330 1 4 1 
252 1 330 1 4 1 
252 1 330 1 4 1 
100 1 309 2 207 1 129 2 2 2 122 3 287 1 27 1 252 2 39 2 330 2 55 1 166 2 168 1 85 1 361 2 243 2 43 1 133 1 
350 1 122 1 2 1 173 1 252 1 330 1 55 1 81 1 86 2 108 1 226 2 309 1 161 2 129 1 114 1 69 2 166 1 360 1 230 2 361 1 243 1 326 1 231 1 20 1 
238 1 1 1 144 1 297 2 322 2 
246 1 144 1 322 1 
246 1 238 1 322 1 
201 1 238 1 1 1 144 2 297 1 322 3 
124 1 238 1 1 1 144 1 297 1 322 2 
50 2 249 1 194 2 173 1 329 1 351 1 108 1 257 2 235 1 126 2 258 1 157 1 179 1 264 1 128 3 160 1 111 1 183 1 65 3 130 1 165 1 271 4 360 1 166 5 212 1 168 2 243 5 19 1 46 1 169 1 245 1 215 1 
138 1 26 5 50 6 249 2 351 3 125 1 84 1 108 4 257 6 235 3 126 6 259 1 258 1 157 3 179 1 264 3 128 9 34 1 160 3 204 5 111 2 183 2 65 8 130 1 165 2 271 7 166 9 168 5 243 9 19 2 134 1 74 1 169 6 46 1 245 3 
249 1 50 2 80 1 194 1 5 1 351 1 57 1 198 1 125 1 86 1 284 1 108 1 257 2 235 2 126 2 226 1 179 1 157 1 12 1 264 1 128 4 161 1 160 1 111 1 183 1 65 3 165 1 271 2 69 1 166 3 212 1 230 1 168 3 243 3 19 1 245 1 215 1 
50 2 249 1 194 1 351 1 125 1 108 1 257 2 235 2 126 2 157 1 264 1 128 4 160 1 111 1 183 1 65 3 165 1 271 1 166 2 212 1 168 2 243 2 19 1 134 1 245 1 215 1 
127 1 
216 1 265 1 182 1 
340 1 182 1 
182 1 275 1 
216 2 22 1 127 1 182 3 296 1 118 1 275 1 
182 1 275 1 118 1 
206 1 182 1 
14 1 197 1 222 1 167 1 28 1 
14 1 197 1 167 1 28 1 
14 1 197 1 167 1 28 1 
14 1 197 1 167 1 28 1 
14 1 197 1 167 1 28 1 
217 1 139 1 192 1 52 1 6 1 123 1 250 1 251 2 234 1 82 1 333 1 177 1 223 1 88 2 314 1 182 1 210 1 288 1 272 1 347 2 293 1 132 2 275 1 
246 1 139 1 24 1 52 1 192 1 144 1 233 1 6 1 53 1 251 1 54 1 234 1 106 1 333 1 88 1 201 1 181 1 238 1 162 1 210 1 185 1 322 2 272 1 347 1 293 1 132 1 
246 1 139 1 141 1 24 1 300 1 52 1 192 1 144 1 6 2 53 1 251 1 54 1 234 2 106 1 333 1 88 1 201 1 181 1 64 1 15 1 238 1 16 1 162 1 210 1 185 1 322 2 272 1 347 1 293 1 132 1 
246 1 327 1 139 1 141 2 24 1 300 1 52 1 192 1 144 1 233 1 6 3 53 1 251 1 234 3 106 1 333 1 88 1 201 1 181 1 64 1 15 1 238 1 162 1 210 1 288 1 322 2 272 1 347 1 293 1 132 1 
246 1 327 1 139 1 141 2 24 1 300 1 192 1 144 1 233 1 6 2 53 1 251 1 234 2 333 1 88 1 201 1 181 1 64 1 15 1 238 1 322 2 272 1 347 1 293 1 132 1 
286 1 
190 4 139 2 192 1 5 1 150 1 282 1 331 1 333 2 10 1 235 2 63 1 161 1 111 1 163 1 65 2 289 1 165 1 211 1 70 1 166 5 293 2 168 2 243 5 19 1 169 6 244 1 214 2 119 2 302 1 82 1 86 1 177 2 258 3 126 2 179 1 178 1 228 1 311 1 267 1 313 2 128 2 314 1 182 1 183 1 93 1 272 1 38 1 40 2 41 2 230 1 187 1 275 1 45 2 46 1 188 2 
190 2 302 1 5 1 150 1 86 1 10 1 334 1 258 1 228 1 311 1 267 1 63 1 161 1 163 1 289 1 211 1 166 3 230 1 187 1 243 3 169 2 214 1 
190 3 302 1 5 1 150 1 86 1 10 1 334 1 258 1 179 1 228 1 311 1 267 1 63 1 161 1 163 1 289 1 211 1 166 3 230 1 187 1 168 1 243 3 169 1 188 1 
190 3 302 1 5 1 150 1 86 1 10 1 334 1 258 1 179 1 228 1 311 1 267 1 63 1 161 1 163 1 289 1 211 1 166 3 230 1 187 1 168 1 243 3 45 1 169 2 214 1 188 1 
190 2 80 1 302 1 5 2 150 1 105 1 57 1 198 1 86 2 284 1 10 1 334 1 258 1 226 1 179 1 12 1 228 1 311 1 267 1 63 1 161 2 163 1 289 1 211 1 69 1 166 3 168 1 230 2 187 1 243 3 169 2 45 1 214 1 
190 4 302 1 5 1 150 1 282 1 331 1 86 1 10 1 235 2 258 2 126 1 179 1 228 1 311 1 267 1 313 2 63 1 128 2 161 1 111 1 163 1 183 1 65 1 289 1 211 1 40 2 70 1 41 2 166 4 168 2 230 1 187 1 243 4 19 1 45 2 169 4 46 1 214 2 188 2 119 2 
190 4 302 1 5 1 150 1 29 1 331 1 86 1 10 1 155 1 235 2 258 2 126 1 179 1 228 1 311 1 267 1 313 2 63 1 161 1 111 1 163 1 183 1 65 1 343 1 289 1 211 1 40 2 70 1 41 2 166 4 168 1 230 1 187 1 243 4 19 1 45 2 169 4 46 1 214 2 188 2 119 2 
190 4 302 1 5 1 150 1 29 1 331 1 86 1 10 1 155 1 235 2 258 2 126 1 179 1 228 1 311 1 267 1 313 2 63 1 161 1 111 1 163 1 183 1 65 1 343 1 289 1 211 1 40 2 70 1 41 2 166 4 168 1 230 1 187 1 243 4 19 1 45 2 169 4 46 1 214 2 188 2 119 2 
190 2 278 1 302 1 5 1 150 1 331 1 86 1 10 1 126 1 228 1 311 1 267 1 63 1 161 1 111 1 163 1 183 1 65 1 343 1 289 1 211 1 36 1 40 1 292 1 166 2 230 1 187 1 243 2 19 1 46 1 119 1 
190 5 302 1 5 1 150 1 29 1 331 1 86 1 10 1 155 1 235 2 258 2 126 1 179 1 228 1 311 1 267 1 313 2 63 1 315 1 161 1 111 1 163 1 183 1 65 1 343 1 289 1 211 1 40 2 70 1 41 2 166 4 168 1 230 1 187 1 243 4 19 1 46 1 45 3 169 5 214 3 119 2 188 3 
190 5 302 1 5 1 150 1 29 1 331 1 86 1 10 1 155 1 235 2 258 2 126 1 179 1 228 1 311 1 267 1 313 2 63 1 315 1 161 1 111 1 163 1 183 1 65 1 343 1 289 1 211 1 40 2 70 1 41 2 166 4 168 1 230 1 187 1 243 4 19 1 46 1 45 3 169 5 214 3 119 2 188 3 
190 2 302 1 5 1 150 1 331 1 86 1 10 1 126 1 228 1 311 1 267 1 63 1 161 1 111 1 163 1 183 1 65 1 289 1 211 1 40 1 166 2 292 1 230 1 187 1 243 2 19 1 46 1 119 1 
189 1 298 1 339 1 171 1 285 1 139 1 357 1 344 1 197 1 293 1 333 1 42 1 177 1 31 1 200 1 
189 1 298 1 339 1 264 1 171 1 285 1 90 1 160 1 161 1 357 1 80 1 344 1 197 1 69 1 86 1 230 1 87 1 156 1 157 1 226 1 
189 1 298 1 339 1 202 1 265 1 171 1 285 1 248 1 91 1 172 1 357 1 319 1 269 1 344 1 197 1 110 1 
298 1 189 1 339 1 285 1 171 1 357 1 156 1 113 1 344 1 
298 1 189 1 60 1 339 1 285 1 171 1 328 1 161 1 357 1 344 1 149 1 197 1 69 1 324 1 295 1 254 1 230 1 86 1 156 1 226 1 135 1 200 1 
189 2 298 2 218 1 171 2 139 1 328 1 219 1 78 1 220 1 192 1 51 1 147 1 195 1 149 2 197 1 86 2 333 1 177 1 156 1 157 1 226 1 13 1 260 1 339 2 264 1 285 2 160 1 161 2 182 1 357 2 359 1 321 1 344 2 95 1 272 1 69 1 324 1 293 1 295 2 230 1 275 1 118 1 135 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 154 1 357 1 157 1 344 1 110 1 
189 1 298 1 339 1 171 1 285 1 248 1 172 1 78 1 357 1 321 1 344 1 149 2 351 1 295 2 260 1 110 1 245 1 237 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 160 1 357 1 157 1 344 1 110 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 154 1 357 1 157 1 31 1 344 1 
189 1 298 1 339 1 171 1 285 1 248 1 172 1 78 1 357 1 321 1 344 1 149 2 351 1 295 2 31 1 260 1 245 1 237 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 160 1 357 1 157 1 31 1 344 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 160 1 357 1 157 1 344 1 
189 1 298 1 218 1 139 1 171 1 328 1 350 1 220 1 192 1 195 1 149 1 197 1 333 1 86 1 177 1 13 1 200 1 339 1 285 1 161 1 182 1 357 1 344 1 272 1 293 1 295 1 275 1 118 1 
189 1 298 1 139 1 171 1 328 1 350 1 220 1 192 1 149 1 197 1 333 1 86 1 177 1 227 1 200 1 339 1 285 1 161 1 182 1 357 1 67 1 344 1 272 1 293 1 295 1 98 1 275 1 118 1 
298 1 189 1 339 1 197 1 264 1 285 1 171 1 160 1 357 1 156 1 157 1 344 1 
298 1 189 1 339 1 264 1 285 1 171 1 139 1 218 1 16 1 160 1 161 1 182 1 357 1 220 1 192 1 359 1 195 1 344 1 272 1 197 1 293 1 86 1 333 1 275 1 118 1 157 1 13 1 
189 1 298 1 339 1 264 1 312 1 171 1 285 1 90 1 160 1 161 1 357 1 80 1 344 1 197 1 69 1 86 1 230 1 156 1 157 1 226 1 
149 1 298 1 339 1 197 1 9 1 285 1 171 1 295 1 341 1 357 1 103 1 35 1 301 1 362 1 
149 1 298 1 339 1 197 1 9 1 285 1 171 1 295 1 341 1 357 1 103 1 35 1 301 1 362 1 
149 1 298 1 339 1 197 1 9 1 285 1 171 1 295 1 341 1 357 1 103 1 35 1 301 1 362 1 
149 1 298 1 339 1 197 1 9 1 285 1 171 1 295 1 341 1 357 1 103 1 35 1 301 1 362 1 
149 1 298 1 339 1 197 1 9 1 285 1 171 1 295 1 341 1 357 1 103 1 35 1 301 1 362 1 
100 1 309 1 252 1 330 1 47 1 361 1 207 1 129 1 2 1 133 1 
114 1 20 1 
309 1 252 1 330 1 283 1 361 1 129 1 191 1 2 1 94 1 
100 1 309 1 207 1 129 1 2 1 122 2 287 1 252 1 39 1 55 1 330 1 166 1 168 1 85 1 243 1 361 1 43 1 133 1 
100 1 309 1 207 1 129 1 2 1 122 2 287 1 252 1 39 1 55 1 330 1 166 1 168 1 85 1 243 1 361 1 43 1 133 1 
100 1 309 1 207 1 129 1 2 1 122 2 287 1 252 1 39 1 55 1 330 1 166 1 168 1 85 1 243 1 361 1 43 1 133 1 
281 1 294 1 358 1 
281 1 294 1 358 1 
306 1 4 1 
281 1 306 1 4 1 
326 1 231 1 
350 1 2 1 122 1 173 1 252 1 330 1 81 1 86 2 108 1 236 1 226 2 309 1 161 2 129 1 287 1 271 1 114 1 39 1 69 2 166 1 360 1 230 2 243 1 361 1 326 1 231 1 20 1 
294 1 358 1 
281 1 306 1 4 1 
298 1 189 1 339 1 285 1 171 1 161 2 357 1 209 1 344 1 197 1 230 2 86 2 42 1 176 1 156 1 200 1 136 1 338 1 
139 1 314 1 182 1 192 1 345 1 272 1 293 1 82 1 333 1 275 1 177 1 132 1 223 1 225 1 
246 1 201 1 139 1 181 1 238 1 192 1 144 1 233 1 322 2 53 1 272 1 106 1 293 1 333 1 132 1 225 1 109 1 59 1 
246 1 201 1 139 2 181 1 238 1 16 1 192 1 144 1 233 1 322 2 53 1 272 1 106 1 293 2 333 2 132 1 225 1 109 1 59 1 
246 1 201 1 139 1 181 1 238 1 102 1 192 1 144 1 233 1 322 2 53 1 272 1 106 1 293 1 333 1 132 1 109 1 
303 1 
348 1 111 1 183 1 65 1 168 1 19 1 73 1 126 1 179 1 46 1 
264 2 128 10 219 1 160 2 318 1 50 5 65 5 351 2 56 2 168 5 257 5 235 5 126 5 157 2 245 2 
166 1 168 1 243 1 258 1 179 1 169 1 
139 4 77 1 192 1 82 1 175 2 125 1 333 4 177 2 126 2 258 2 178 1 266 1 314 1 182 1 111 2 183 2 65 2 93 2 165 2 272 1 293 4 166 3 275 1 243 3 19 2 276 1 244 1 46 1 169 4 
348 1 265 1 168 1 126 1 73 1 65 1 179 1 
235 1 126 1 258 1 179 1 313 1 128 1 111 1 183 1 65 1 70 1 41 1 166 1 168 2 243 1 19 1 46 1 169 1 
340 1 139 1 219 1 182 2 111 1 192 2 183 1 65 1 272 1 293 1 242 1 332 1 333 1 296 1 275 1 118 1 177 1 19 1 46 1 232 1 
75 1 0 1 143 1 50 5 351 2 352 1 56 2 257 5 235 3 258 1 126 5 157 2 179 2 308 1 264 2 128 6 160 2 111 2 112 1 318 1 183 2 92 1 65 8 184 1 93 1 165 1 186 1 166 1 71 1 168 5 243 1 19 2 169 1 46 2 245 2 
261 1 202 1 91 1 111 1 183 1 65 1 166 1 29 1 56 1 243 1 19 1 126 1 46 1 
298 1 189 1 139 1 218 1 171 1 328 1 350 1 220 1 192 1 80 2 195 1 149 1 333 1 86 3 177 1 226 2 12 1 13 1 339 1 262 1 285 1 161 3 182 1 357 1 344 1 272 1 69 2 293 1 295 1 230 2 118 1 275 1 
128 4 111 1 50 2 183 1 65 1 93 1 165 1 167 1 168 4 257 2 19 1 235 2 126 2 179 2 46 1 
100 1 309 1 23 1 361 1 231 1 
309 1 97 1 361 1 
309 1 97 1 361 1 
309 1 97 1 361 1 
309 1 361 1 317 1 
309 1 361 1 317 1 
309 1 361 1 317 1 
309 1 361 1 
252 1 330 1 
261 1 202 1 197 1 248 1 91 1 172 1 
298 1 339 1 197 1 264 1 285 1 171 1 357 1 301 1 157 1 
298 1 339 1 197 1 264 1 285 1 171 1 160 1 357 1 301 1 157 1 
298 1 202 1 339 1 197 1 285 1 171 1 248 1 91 1 172 1 357 1 301 1 
298 3 339 3 171 3 285 3 0 1 112 1 357 3 301 1 149 1 197 1 186 1 295 1 256 1 11 1 30 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
298 2 339 2 171 2 285 2 0 1 112 1 357 2 301 1 184 1 149 1 197 1 186 1 295 1 256 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
298 2 339 2 171 2 285 2 0 1 112 1 357 2 301 1 184 1 149 1 197 1 186 1 295 1 256 1 
298 2 339 2 171 2 285 2 0 1 112 1 357 2 301 1 184 1 149 1 197 1 186 1 295 1 30 1 
202 1 248 1 91 1 172 1 319 1 269 1 137 1 
298 2 339 2 171 2 285 2 0 1 112 1 357 2 301 1 184 1 149 1 197 1 186 1 295 1 30 1 
298 2 339 2 202 1 171 2 285 2 248 1 91 1 172 1 357 2 319 1 164 1 269 1 137 1 
202 1 197 1 265 1 248 1 91 1 172 1 319 1 269 1 
298 1 339 1 197 1 264 1 285 1 171 1 160 1 256 1 357 1 157 1 
149 1 197 1 186 1 0 1 295 1 112 1 
149 1 197 1 0 1 295 1 25 1 112 1 
149 1 0 1 295 1 
197 1 112 1 
149 1 197 1 264 1 295 1 219 1 160 1 157 1 
149 1 298 1 339 1 197 1 186 1 285 1 171 1 0 1 295 1 112 1 357 1 301 1 184 1 
197 1 89 1 157 1 
298 1 202 1 339 1 171 1 285 1 248 1 91 1 172 1 357 1 319 1 164 1 269 1 7 1 149 1 295 1 137 1 
305 1 161 1 86 1 230 1 350 1 163 1 239 1 
279 1 350 1 5 1 148 1 37 1 241 1 18 1 152 1 
139 4 314 1 16 1 182 1 192 1 66 1 272 1 293 4 82 1 333 4 177 1 275 1 355 1 
247 1 139 2 203 1 182 1 192 2 104 1 272 1 293 2 175 1 83 1 333 2 118 1 275 1 336 1 
246 1 272 1 139 1 293 1 238 1 333 1 177 1 192 1 322 1 53 1 
139 2 61 1 16 1 182 1 192 1 3 1 233 1 272 1 293 2 333 2 275 1 
139 5 314 1 229 1 49 1 16 1 182 3 192 2 3 1 272 2 82 1 293 4 175 1 333 5 177 1 275 2 355 1 
139 5 314 1 49 1 16 1 182 3 316 1 192 2 3 1 272 2 82 1 293 4 175 1 333 5 177 1 275 2 355 1 
272 1 265 1 139 1 82 1 293 1 314 1 333 1 182 1 275 1 177 1 192 1 
139 1 161 2 182 1 350 1 220 1 192 1 272 1 69 1 324 1 293 1 230 1 86 2 333 1 275 1 118 1 177 1 226 1 13 1 
139 1 350 1 220 1 192 1 145 1 5 1 150 1 175 1 333 1 86 2 10 1 226 1 13 1 161 2 206 1 182 3 272 1 69 2 293 1 324 1 230 2 118 2 275 2 
139 2 350 1 220 1 192 1 145 1 5 1 150 1 175 1 333 2 86 2 10 1 227 1 226 1 161 2 206 1 182 3 66 1 272 1 69 2 293 2 324 1 230 2 118 2 275 2 
216 1 139 3 76 1 192 1 145 1 175 1 353 1 333 3 177 1 179 1 340 1 267 1 206 1 182 4 66 1 272 1 293 3 166 2 168 1 243 2 118 1 275 1 169 1 
216 1 340 1 267 1 139 3 206 1 182 4 192 1 145 1 66 1 272 1 253 1 166 2 293 3 175 1 168 1 333 3 177 1 275 1 118 1 243 2 179 1 169 1 
272 1 139 1 293 1 333 1 117 1 192 1 
170 1 247 1 139 7 48 1 49 1 229 1 16 1 182 3 192 3 3 1 233 1 272 2 293 6 83 1 274 1 333 7 296 1 117 1 177 2 118 1 275 2 
189 2 298 2 171 2 139 1 218 1 248 1 172 1 220 1 192 1 51 1 195 1 197 1 86 2 333 1 156 1 226 1 13 1 202 1 339 2 285 2 91 1 16 1 161 2 182 1 357 2 319 1 269 1 359 1 344 2 272 1 69 1 324 1 293 1 230 1 275 1 118 1 136 1 
348 1 216 1 139 1 253 1 333 1 177 1 255 1 126 1 258 1 179 1 199 1 340 1 267 1 111 2 182 2 183 2 320 1 65 1 271 1 293 1 166 3 168 1 243 3 19 2 73 1 276 1 46 2 169 2 
216 1 139 2 16 1 182 2 192 2 272 1 293 2 242 1 333 2 296 1 117 1 118 1 275 1 
139 1 161 2 182 1 350 1 220 1 192 1 272 1 69 1 324 1 293 1 230 1 86 2 333 1 275 1 118 1 177 1 226 1 227 1 
170 1 247 1 139 1 182 1 192 2 272 1 293 1 175 1 83 1 333 1 296 1 118 1 275 1 
151 1 8 1 62 1 161 1 86 1 230 1 176 1 209 1 338 1 
131 1 116 1 8 1 
151 1 62 1 8 1 350 1 354 1 
267 1 62 2 350 1 5 1 150 1 271 1 151 2 115 1 116 1 131 1 8 1 166 2 168 1 10 1 243 2 179 1 354 2 228 1 21 1 
54 1 234 1 64 1 15 1 300 1 52 1 210 1 6 1 
120 1 299 1 64 2 15 2 141 2 52 1 300 3 210 1 146 1 6 4 234 4 17 1 291 1 337 1 
64 1 141 1 15 1 300 1 52 1 208 1 210 1 221 1 6 2 54 1 234 2 307 1 
299 2 120 2 15 1 64 1 300 1 52 1 210 1 6 3 54 1 234 3 291 1 273 1 
33 1 300 1 193 1 
54 1 234 1 52 1 210 1 196 1 6 1 
158 1 54 1 234 2 64 1 15 1 141 1 300 1 52 1 210 1 6 2 
140 1 
54 1 234 1 64 1 15 1 300 1 52 1 210 1 6 1 
265 1 64 1 15 1 300 1 
234 1 64 1 15 1 300 1 52 1 210 1 6 1 
251 1 88 1 6 1 
299 1 120 2 15 1 64 1 300 1 52 1 210 1 6 3 54 1 234 3 291 1 58 1 
234 2 64 1 15 1 141 1 224 1 300 1 52 1 210 1 6 2 
246 1 356 1 52 1 300 1 144 1 210 1 6 1 322 1 54 1 234 1 17 1 
54 1 234 1 64 1 300 1 52 1 210 1 6 1 
54 1 234 1 64 2 15 1 52 1 210 1 6 1 
101 1 64 1 277 1 300 1 52 2 210 2 6 2 54 1 234 2 346 1 
158 1 64 1 15 1 141 2 52 1 300 2 210 1 6 3 304 1 54 1 234 3 17 1 337 1 
201 1 246 1 64 1 15 1 238 1 141 1 300 1 52 1 144 1 210 1 6 2 322 2 270 1 54 1 234 2 
32 1 64 1 15 1 141 2 52 2 300 2 210 2 6 4 54 1 234 4 17 1 224 1 337 1 
120 1 158 1 141 1 15 1 64 1 52 1 300 1 210 1 6 3 54 1 234 3 
17 1 300 1 146 1 337 1 
64 1 300 1 

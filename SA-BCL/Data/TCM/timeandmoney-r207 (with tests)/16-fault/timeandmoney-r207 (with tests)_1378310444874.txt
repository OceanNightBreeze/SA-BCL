#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (174,178) (253,341) (253,341) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (174,178) (253,341) (253,341) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (174,178) (253,341) (253,341) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (174,178) (253,341) (253,341) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (174,178) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (174,178) 319 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (174,178) 319 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (48,184,201) (157,254,353) (157,254,353) (157,254,353) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 305 (149,263) (149,263) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 321 147 85 155 73 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 321 147 85 155 73 339 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 321 147 85 155 73 339 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (48,184,201) (48,184,201) (48,184,201) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 306 71 281 102 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 321 147 85 155 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 321 147 85 155 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 321 147 85 155 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 170 135 374 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 170 135 374 200 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 124 136 (58,192) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 138 224 103 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 138 327 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
66 2 253 1 295 1 246 1 278 1 298 1 335 1 265 1 173 1 174 1 128 1 341 1 178 1 238 1 237 1 108 2 
66 2 253 1 295 1 246 1 278 1 298 1 335 1 265 1 173 1 174 1 128 1 341 1 178 1 237 1 238 1 108 2 
66 2 253 1 295 1 246 1 278 1 298 1 335 1 265 1 173 1 174 1 128 1 341 1 178 1 237 1 238 1 108 2 
66 2 253 1 295 1 246 1 278 1 298 1 335 1 265 1 173 1 174 1 128 1 341 1 178 1 237 1 238 1 108 2 
66 4 273 1 165 1 54 3 278 1 298 1 265 1 210 1 267 2 173 1 128 1 175 1 59 1 162 2 238 1 357 1 108 4 193 3 
331 1 100 1 66 2 295 1 246 1 278 1 298 1 335 1 265 1 173 1 128 1 59 1 19 1 193 1 357 1 108 2 
66 1 173 1 174 1 298 1 108 1 265 1 
49 1 66 2 173 1 174 1 54 1 319 1 298 1 108 2 265 1 
49 1 66 2 173 1 174 1 54 1 319 1 298 1 108 2 265 1 
299 1 34 1 222 1 
262 1 259 2 34 1 
81 2 9 1 216 2 231 2 120 2 290 1 221 2 325 2 
306 2 0 1 216 2 217 2 120 2 263 1 290 1 221 3 81 2 177 1 6 1 328 1 314 1 63 1 356 1 179 2 330 1 148 1 36 1 316 1 9 1 231 2 92 1 153 1 281 1 43 1 302 2 233 1 303 1 71 2 16 1 44 1 21 1 194 1 305 1 325 3 163 1 
81 1 9 1 216 1 231 1 228 1 120 1 343 1 221 1 64 1 325 1 
240 1 120 1 170 1 221 1 222 1 2 1 13 1 367 1 228 1 344 1 34 1 250 1 98 1 325 1 
240 2 231 1 216 1 120 1 221 1 222 1 2 1 13 1 81 1 367 1 228 1 344 2 34 1 98 1 325 1 
240 1 88 1 344 1 232 1 271 1 
240 2 216 1 120 1 221 1 222 1 354 1 81 1 228 1 34 1 64 1 271 1 9 1 231 1 185 1 232 1 344 2 343 1 325 1 22 1 
240 1 344 1 271 1 
240 1 9 1 231 1 216 1 120 1 221 1 232 1 81 1 228 1 344 1 343 1 64 1 325 1 22 1 
34 1 
240 2 216 1 120 1 221 1 222 1 354 1 81 1 228 1 34 1 64 1 271 1 9 1 231 1 232 1 344 2 343 1 161 1 325 1 22 1 
240 5 216 1 139 2 24 1 76 1 348 1 218 1 166 1 326 1 120 1 221 1 351 2 56 1 222 2 354 1 81 1 126 1 312 1 228 1 34 2 64 1 292 1 35 5 271 2 9 1 110 1 231 1 232 2 42 2 282 2 15 4 260 2 343 1 344 5 215 1 370 2 325 1 22 1 
36 1 306 1 196 1 231 1 216 1 217 1 120 1 132 1 221 2 281 1 233 1 16 1 71 1 328 1 314 1 146 1 305 1 325 2 148 1 163 1 
290 1 299 1 
231 1 216 1 297 1 120 2 221 2 290 2 307 1 81 1 325 2 
277 1 132 1 123 1 
306 1 36 1 217 1 290 1 221 1 281 1 233 1 190 1 71 1 16 1 328 1 314 1 305 1 325 1 148 1 163 1 
65 1 196 1 231 4 216 4 120 4 221 4 290 1 307 1 81 1 82 1 228 1 146 2 325 4 150 1 
274 1 216 2 231 2 228 1 120 2 221 2 64 1 325 2 
81 1 216 3 231 3 120 3 290 1 221 3 146 1 325 3 
216 1 231 1 228 1 120 1 221 1 64 1 325 1 
81 1 216 1 231 1 228 1 297 1 120 1 221 1 307 1 325 1 
240 1 306 1 0 1 196 1 216 3 217 1 263 1 120 3 290 1 221 4 307 1 2 1 28 1 81 2 311 1 228 1 6 1 328 1 314 1 63 1 179 1 146 1 330 1 148 1 36 1 9 1 231 3 92 1 281 1 13 1 43 1 302 2 233 1 303 1 16 1 367 1 71 1 44 1 344 1 98 1 305 1 194 1 325 4 163 1 
216 1 231 1 120 2 290 1 170 1 221 2 146 1 325 2 135 1 
240 1 196 1 231 3 216 3 120 3 221 3 307 1 2 1 13 1 28 1 81 1 367 1 228 1 344 1 31 1 34 1 98 1 146 2 325 3 
231 2 216 2 277 1 120 2 132 1 221 2 307 1 81 1 146 1 325 2 
306 1 36 1 217 1 290 1 221 1 281 1 233 1 71 1 16 1 328 1 314 1 305 1 325 1 163 1 148 1 
306 1 36 1 217 1 290 1 221 1 281 1 169 1 233 1 71 1 16 1 328 1 192 1 325 1 163 1 148 1 
0 1 139 1 245 1 123 2 225 1 226 1 143 1 6 1 63 1 179 4 330 1 316 2 272 1 360 1 92 1 277 2 132 2 41 1 321 1 365 1 302 2 43 2 260 1 44 1 
216 1 231 1 274 1 228 1 120 1 221 1 2 1 325 1 
60 1 47 1 
60 1 47 1 
51 1 114 1 
51 1 114 1 
51 1 114 1 
286 1 60 1 47 1 
37 1 60 1 47 1 
51 1 119 1 114 1 60 2 154 1 47 2 
286 1 60 1 47 1 
286 1 60 1 47 1 
60 1 256 1 47 1 
60 1 256 1 47 1 
60 1 256 1 47 1 
240 1 101 1 241 1 216 2 77 1 289 1 140 1 120 2 290 1 221 2 308 1 4 1 60 1 84 1 37 1 231 2 332 1 362 1 344 1 46 1 47 1 325 2 118 1 23 1 
240 2 38 1 53 1 119 1 113 2 362 1 140 2 289 2 308 3 323 1 223 1 4 2 60 2 344 2 270 1 288 1 34 1 47 2 118 2 
128 1 278 1 238 1 
100 1 128 1 278 1 
14 1 100 1 111 1 128 3 238 2 206 1 
14 1 100 1 111 1 128 2 304 1 238 1 
14 2 100 1 111 1 128 2 238 1 
240 5 101 1 262 1 139 1 24 1 55 1 349 2 222 1 354 1 248 1 249 2 84 1 34 2 35 2 147 1 271 1 151 1 152 1 361 2 332 1 10 1 321 1 232 4 12 1 42 1 365 1 282 1 259 3 15 3 260 1 344 5 370 1 
240 2 243 1 216 1 120 1 221 1 222 1 81 1 228 1 34 1 64 1 271 1 9 1 88 1 231 1 334 1 232 2 70 1 344 2 343 1 325 1 22 1 
240 3 101 1 262 2 139 1 166 1 55 1 349 2 222 1 248 1 249 1 34 3 35 2 147 1 151 1 361 2 10 1 232 2 321 1 42 1 365 1 282 1 259 4 15 3 260 1 344 3 370 1 
240 4 101 2 262 3 139 2 166 1 55 1 349 4 222 1 248 1 249 2 329 1 34 4 35 4 147 2 151 1 361 4 10 1 279 1 232 3 321 2 42 1 69 1 365 2 282 1 259 7 15 5 260 2 344 4 370 1 
235 1 299 1 148 1 
7 1 148 1 
83 1 
233 1 148 1 163 1 
317 1 148 1 
233 1 148 1 
233 1 3 1 235 2 322 1 148 3 163 1 
315 1 360 2 316 4 139 1 91 1 218 1 56 1 258 2 80 1 43 3 283 1 94 1 226 3 260 1 215 1 345 1 179 7 
315 1 360 2 316 4 139 1 91 1 218 1 56 1 258 2 80 1 43 3 283 1 94 1 226 3 260 1 215 1 345 1 179 7 
315 1 360 2 316 4 139 1 91 1 218 1 56 1 258 2 80 1 43 3 283 1 94 1 226 3 260 1 213 1 215 1 345 1 179 7 
0 1 139 4 218 2 56 2 171 1 352 1 57 3 80 1 226 10 30 1 33 1 63 1 179 31 147 3 315 2 316 16 360 5 318 1 91 2 92 1 321 3 258 3 211 1 365 3 94 1 302 2 43 15 283 5 285 1 44 1 368 4 260 4 215 1 345 1 
0 2 139 1 218 1 122 1 56 1 352 1 80 1 226 4 63 2 179 9 315 1 316 5 360 3 89 1 91 1 92 2 258 2 302 4 43 4 283 1 260 1 44 2 215 1 345 1 
48 1 293 1 66 1 254 1 246 1 219 1 168 1 298 1 26 1 265 1 353 1 173 1 157 1 45 1 108 1 
306 1 48 1 100 1 217 1 54 2 246 1 219 1 168 1 26 1 353 1 173 1 128 2 59 1 328 1 357 1 108 3 206 1 293 1 66 3 294 1 278 1 298 1 363 1 301 1 71 1 157 1 16 1 238 1 193 1 375 1 
306 1 48 1 100 1 217 1 54 2 246 1 219 1 168 1 353 1 128 2 59 1 328 1 357 1 108 2 206 1 293 1 66 2 294 1 278 1 363 1 71 1 16 1 238 1 193 1 375 1 
306 1 217 1 246 2 219 2 168 2 247 1 350 1 173 1 204 1 328 2 108 1 148 2 293 2 66 1 275 1 298 1 281 1 11 1 300 1 301 1 233 2 16 1 158 1 71 1 369 1 18 1 287 1 372 1 324 1 163 1 
306 1 48 1 100 1 217 1 246 1 219 1 168 1 265 1 26 1 353 1 173 1 128 2 328 1 108 1 206 1 293 1 66 1 254 1 278 1 298 1 363 1 71 1 157 1 16 1 238 1 375 1 
74 1 
306 2 240 2 102 1 217 2 24 1 247 1 350 1 354 1 248 1 204 1 328 2 35 1 148 2 271 2 281 2 300 1 42 1 336 1 282 1 233 2 15 1 16 1 71 2 72 1 369 1 344 2 370 1 372 1 163 1 
240 3 120 1 221 1 170 1 78 1 2 1 354 1 176 1 228 1 250 1 271 2 112 1 320 1 13 1 367 1 344 3 17 2 161 1 236 1 371 1 98 1 325 1 
240 3 120 1 221 1 170 1 78 1 222 1 2 1 354 1 176 1 228 1 250 1 34 1 271 1 112 1 320 1 13 1 367 1 344 3 17 3 236 1 161 1 98 1 325 1 99 1 
240 3 120 1 221 1 170 1 78 1 2 1 354 1 125 1 176 1 228 1 250 1 271 2 112 1 320 1 13 1 367 1 344 3 17 3 161 1 236 1 371 1 98 1 325 1 99 1 
240 5 2 1 106 1 291 1 62 1 250 1 64 1 9 1 112 1 13 1 116 2 15 1 343 1 17 4 344 5 161 1 261 1 22 1 164 2 262 2 216 1 24 1 120 2 221 2 78 1 170 1 222 1 264 2 354 3 81 1 125 4 228 2 176 1 34 1 35 1 271 7 182 1 181 1 87 1 231 1 276 2 320 1 42 1 282 1 367 1 236 1 371 4 370 1 98 1 325 2 99 2 
240 4 104 1 2 1 106 1 250 1 64 1 9 1 112 1 13 1 116 2 259 2 15 1 343 1 17 4 344 4 22 1 164 2 262 2 216 1 24 1 120 2 221 2 170 1 78 1 264 2 222 1 354 2 81 1 125 2 228 2 176 1 34 1 35 1 181 1 271 4 231 1 276 2 320 1 42 1 282 1 367 1 236 1 370 1 371 2 98 1 325 2 99 2 
164 2 240 4 262 2 24 1 120 1 221 1 170 1 78 1 222 1 264 2 2 1 354 2 125 2 106 1 291 1 176 1 228 1 34 1 250 1 35 1 271 4 181 1 182 1 87 1 112 1 276 2 320 1 13 1 42 1 282 1 116 2 15 1 367 1 344 4 17 4 236 1 371 2 370 1 98 1 325 1 99 2 
240 4 2 1 106 1 291 1 250 1 64 1 9 1 112 1 13 1 116 2 15 1 343 1 17 4 344 4 22 1 164 2 262 2 216 1 24 1 120 2 78 1 170 1 221 2 264 2 222 1 354 2 81 1 125 2 228 2 176 1 34 1 35 1 182 1 181 1 271 4 87 1 231 1 276 2 320 1 42 1 282 1 367 1 236 1 370 1 371 2 98 1 325 2 99 2 
240 4 199 1 2 1 106 1 144 1 291 1 250 1 64 1 9 1 112 1 333 2 13 1 259 2 15 1 343 1 17 4 344 4 22 1 164 2 216 1 24 1 120 2 78 1 170 1 221 2 222 1 354 2 81 1 125 2 228 2 176 1 130 2 34 1 35 1 271 4 231 1 276 2 40 1 320 1 42 1 282 1 367 1 236 1 370 1 371 2 98 1 325 2 99 2 
240 4 2 1 106 1 291 1 250 1 64 1 9 1 112 1 13 1 116 2 15 1 343 1 17 5 344 4 261 1 22 1 164 2 262 2 216 1 24 1 120 2 78 1 170 1 221 2 264 2 222 1 354 2 81 1 125 3 228 2 176 1 34 1 35 1 182 1 271 5 181 1 87 1 231 1 276 2 320 1 42 1 282 1 367 1 236 1 371 3 370 1 98 1 325 2 99 3 
240 4 2 1 106 1 291 1 250 1 64 1 9 1 112 1 13 1 116 2 15 1 343 1 17 5 344 4 261 1 22 1 164 2 262 2 216 1 24 1 120 2 78 1 170 1 221 2 264 2 222 1 354 2 81 1 125 3 228 2 176 1 34 1 35 1 182 1 271 5 181 1 87 1 231 1 276 2 320 1 42 1 282 1 367 1 236 1 371 3 370 1 98 1 325 2 99 3 
240 3 104 1 2 1 106 1 144 1 250 1 112 1 333 1 13 1 259 2 15 1 17 3 344 3 164 2 24 1 120 1 221 1 170 1 78 1 222 1 354 1 125 1 228 1 176 1 130 2 34 1 35 1 271 2 276 2 320 1 42 1 282 1 367 1 236 1 370 1 371 1 98 1 325 1 99 1 
0 1 139 1 218 1 290 2 56 1 123 1 80 1 225 1 226 2 6 1 63 1 179 6 330 1 360 2 316 3 277 1 92 1 132 1 299 1 258 1 302 2 43 3 44 1 260 1 215 1 345 1 
0 2 244 1 139 2 290 1 171 1 27 1 123 11 57 3 355 1 226 2 227 1 33 1 6 2 63 2 179 14 330 1 147 2 360 1 316 8 92 2 277 4 132 11 321 2 133 1 365 1 283 1 43 6 302 4 303 1 368 3 44 2 260 1 21 1 
306 1 0 1 196 1 217 1 216 1 120 1 290 1 221 2 266 1 268 1 328 1 6 1 314 1 63 1 146 1 179 2 330 1 148 1 36 1 316 1 231 1 277 1 92 1 281 1 68 1 133 1 233 1 302 2 43 1 190 1 303 1 16 1 71 1 44 1 21 1 305 1 325 2 163 1 
196 1 0 3 139 3 290 2 56 1 142 1 6 3 328 2 63 3 146 1 330 3 147 2 149 2 148 2 296 2 258 1 302 6 303 1 71 3 16 2 260 3 215 1 21 1 345 1 305 2 163 2 347 2 306 3 217 3 216 1 218 1 25 1 120 1 263 2 221 3 123 7 80 1 226 8 314 2 179 20 358 1 36 2 360 4 316 10 231 1 92 3 277 7 280 2 132 7 281 1 363 1 321 2 133 1 365 2 43 10 233 2 283 4 44 3 325 3 
306 2 0 1 217 2 247 1 350 1 204 1 328 2 6 1 63 1 356 1 179 2 330 1 148 2 316 1 92 1 281 1 300 1 302 2 43 1 233 2 303 1 16 1 71 2 44 1 340 1 369 1 117 1 21 1 372 1 163 1 
0 1 216 1 139 1 120 1 221 1 307 1 123 1 81 1 226 1 6 1 63 1 179 3 330 1 147 1 360 1 316 1 231 1 277 1 92 1 187 1 132 1 321 1 133 1 365 1 302 2 43 2 44 1 260 1 325 1 
0 1 316 2 139 1 277 1 92 1 132 1 321 1 123 1 283 1 302 2 226 1 225 1 143 1 44 1 6 1 63 1 179 2 330 1 
360 1 0 1 277 1 92 1 132 1 41 1 123 1 365 1 302 2 43 2 226 1 225 1 44 1 260 1 6 1 63 1 179 2 330 1 
360 1 0 1 316 2 139 1 277 2 92 1 132 2 321 1 123 2 365 1 43 2 283 1 302 2 226 2 225 1 260 1 44 1 6 1 63 1 179 4 330 1 147 1 
0 1 316 2 139 1 277 1 92 1 132 1 321 1 123 1 283 1 302 2 226 1 143 1 340 1 44 1 6 1 63 1 179 2 330 1 
360 1 0 1 277 1 92 1 132 1 41 1 123 1 365 1 302 2 43 2 226 1 340 1 44 1 260 1 6 1 63 1 179 2 330 1 
360 1 0 1 316 2 139 1 277 2 92 1 132 2 321 1 123 2 365 1 43 2 283 1 302 2 226 2 260 1 340 1 44 1 6 1 63 1 179 4 330 1 147 1 
360 1 0 1 316 2 139 1 277 2 92 1 132 2 321 1 123 2 365 1 43 2 283 1 302 2 226 2 260 1 44 1 6 1 63 1 179 4 330 1 147 1 
306 1 0 1 217 1 263 1 290 1 221 1 328 1 6 1 314 1 63 1 179 2 330 1 148 1 36 1 316 1 92 1 281 1 233 1 302 2 43 1 303 1 16 1 71 1 44 1 21 1 305 1 325 1 163 1 
306 1 0 1 217 1 290 1 169 1 221 1 328 1 6 1 63 1 179 2 330 1 148 1 36 1 316 1 92 1 281 1 233 1 302 2 43 1 366 1 303 1 16 1 71 1 44 1 21 1 192 1 325 1 163 1 
360 1 0 1 316 2 139 1 277 2 92 1 132 2 321 1 123 2 365 1 133 1 43 2 283 1 302 2 226 2 260 1 44 1 6 1 63 1 179 4 330 1 147 1 
263 1 45 1 305 1 149 1 
0 1 242 1 216 1 139 1 120 1 221 1 307 1 123 1 81 1 226 1 6 1 63 1 179 3 330 1 147 1 316 2 231 1 92 1 277 1 132 1 321 1 365 1 133 1 43 1 283 1 302 2 260 1 44 1 325 1 
137 1 0 2 139 3 171 1 79 1 57 1 203 2 226 6 32 1 313 2 33 1 63 2 179 19 147 3 252 1 360 3 316 9 89 1 92 2 321 3 365 3 302 4 43 10 283 3 339 1 368 2 44 2 260 3 73 1 195 1 
316 6 0 1 139 1 89 1 92 1 321 1 171 2 79 1 57 2 302 2 43 5 155 1 339 1 368 2 44 1 73 2 5 1 313 2 63 1 179 11 147 1 85 1 195 2 
0 2 139 3 171 3 79 1 57 3 203 1 226 3 32 1 5 1 313 3 33 1 63 2 179 24 180 1 85 1 147 3 252 1 360 1 316 12 89 1 92 2 321 3 365 2 302 4 43 12 283 2 155 1 339 1 368 4 44 2 260 2 73 1 195 2 
0 2 139 3 171 3 79 1 57 3 203 1 226 4 32 1 5 1 313 4 33 1 63 2 179 26 180 1 85 1 147 3 252 1 183 1 360 2 316 13 89 1 92 2 321 3 365 2 302 4 43 13 283 2 155 1 339 1 368 4 44 2 260 2 73 1 195 2 
0 2 139 6 218 1 56 1 171 2 79 1 352 1 57 3 80 1 203 1 226 10 227 1 5 1 313 4 33 1 61 1 63 2 179 42 85 1 147 5 252 1 183 1 360 5 316 22 89 1 207 1 92 2 321 5 258 1 365 5 302 4 43 20 283 5 155 1 339 1 260 6 368 3 44 2 73 1 215 1 345 1 195 1 
4 1 53 1 119 1 289 1 60 1 140 1 270 1 121 1 47 1 118 1 
37 1 77 1 
4 1 107 1 167 1 289 1 60 1 140 1 364 1 47 1 118 1 
286 1 373 1 
97 1 154 1 256 1 
240 1 38 1 53 1 119 1 113 1 362 1 140 1 289 1 308 2 323 1 223 1 4 1 60 1 344 1 270 1 34 1 47 1 118 1 
240 1 38 1 53 1 119 1 113 1 362 1 140 1 289 1 308 2 323 1 223 1 4 1 60 1 344 1 270 1 34 1 47 1 118 1 
240 1 38 1 53 1 119 1 113 1 362 1 140 1 289 1 308 2 323 1 223 1 4 1 60 1 344 1 270 1 34 1 47 1 118 1 
286 1 154 1 373 1 
286 1 154 1 373 1 
97 1 256 1 
97 1 154 1 256 1 
241 1 23 1 
240 1 101 1 241 1 216 2 77 1 289 1 140 1 120 2 290 1 221 2 308 1 4 1 60 1 84 1 37 1 231 2 113 1 90 1 332 1 232 1 323 1 344 1 46 1 325 2 47 1 118 1 23 1 
306 2 0 1 138 1 50 1 217 2 120 2 221 2 328 1 6 1 63 1 356 2 179 2 330 1 148 1 316 1 255 1 208 1 92 1 133 1 233 1 284 1 338 1 302 2 43 1 303 1 16 1 71 2 44 1 117 1 21 1 325 2 
48 1 306 1 217 1 184 1 71 1 45 1 168 1 201 1 363 1 26 1 205 1 
100 1 306 1 48 1 217 1 278 1 168 1 201 1 363 1 26 1 128 2 156 1 71 1 16 1 328 1 238 1 206 1 375 1 
306 1 217 1 247 1 168 1 350 1 328 2 204 1 205 1 148 2 11 1 281 1 300 1 233 2 71 1 16 1 191 1 369 1 287 1 372 1 163 1 
100 1 306 1 48 1 217 1 184 1 278 1 168 1 201 1 363 1 26 1 128 2 71 1 16 1 328 1 238 1 205 1 206 1 375 1 
127 1 
15 1 76 1 299 1 34 1 222 1 35 1 292 1 
240 1 262 1 216 1 24 1 120 1 221 1 264 1 222 1 354 1 81 1 228 1 34 1 64 1 35 1 181 1 271 1 9 1 231 1 42 1 282 1 116 1 259 1 15 1 343 1 344 1 370 1 325 1 22 1 
240 2 1 1 139 1 202 1 248 1 328 2 251 1 7 2 147 1 148 3 209 1 13 1 337 1 259 6 15 4 212 1 16 1 71 1 260 1 159 1 344 2 163 1 347 1 306 1 262 3 217 1 24 2 349 3 351 1 354 1 34 3 35 3 271 2 361 3 281 1 322 1 321 1 42 2 282 2 365 1 233 1 370 2 
262 2 24 1 139 2 349 5 171 1 57 1 5 1 61 1 34 2 35 4 85 1 147 2 361 5 207 1 321 2 42 1 282 1 365 2 259 4 15 6 155 1 368 1 260 2 370 1 
240 1 216 1 24 1 139 2 348 1 218 1 120 1 221 1 351 2 56 1 81 1 126 1 228 1 64 1 35 2 87 1 9 1 231 1 42 1 282 1 15 2 260 1 344 1 343 1 370 1 215 1 325 1 22 1 
24 1 76 1 222 1 42 1 282 1 15 1 370 1 34 1 292 1 35 1 
262 5 139 2 361 5 348 1 349 5 351 2 321 2 365 2 259 10 15 5 260 2 34 5 35 5 147 2 347 1 
240 1 9 1 216 1 231 1 120 1 221 1 222 1 354 1 81 1 228 1 344 1 343 1 34 1 64 1 325 1 271 1 22 1 
240 1 306 2 359 1 102 1 217 2 24 1 281 2 42 1 336 1 354 1 282 1 248 1 15 1 71 2 72 1 344 1 370 1 35 1 271 2 
306 1 0 1 217 1 216 2 120 2 263 1 290 1 221 3 81 2 328 1 6 1 314 1 63 1 179 1 330 1 148 1 36 1 9 1 231 2 92 1 281 1 43 1 302 2 233 1 303 1 71 1 16 1 44 1 194 1 305 1 325 3 163 1 
262 2 361 2 24 1 349 2 222 2 258 1 42 1 282 1 248 1 259 4 15 1 72 1 370 1 34 4 35 2 
4 1 289 1 109 1 
131 1 241 1 4 1 53 1 289 1 
4 1 289 1 109 1 
4 1 289 1 109 1 
4 1 289 1 257 1 
4 1 289 1 257 1 
4 1 289 1 257 1 
4 1 289 1 
60 1 47 1 
316 4 360 2 0 2 139 1 92 2 218 1 56 1 352 1 258 1 80 1 43 4 283 1 302 4 226 3 260 1 44 2 215 1 63 2 345 1 179 8 
360 2 316 3 139 1 218 1 299 1 56 1 258 1 80 1 43 3 226 2 260 1 215 1 345 1 179 6 
360 1 0 1 316 2 139 1 92 1 321 1 365 1 43 2 302 2 283 1 226 2 260 1 44 1 63 1 346 1 179 4 147 1 
316 1 43 1 368 1 171 1 179 2 57 1 
0 1 139 5 244 1 218 2 56 2 352 1 57 2 80 1 126 1 226 8 227 1 33 1 63 1 179 25 147 2 360 4 316 13 92 1 321 2 258 1 365 2 43 12 283 4 302 2 260 5 368 2 44 1 215 2 345 1 
43 1 368 1 179 1 
316 1 179 1 57 1 
0 1 316 3 360 2 139 1 92 1 321 1 365 1 302 2 43 3 283 1 226 3 44 1 260 1 63 1 346 1 179 6 147 1 347 1 
0 1 139 2 171 1 57 1 226 2 5 1 61 1 63 1 179 12 85 1 147 2 316 6 360 1 89 1 92 1 207 1 321 2 365 2 283 1 43 6 302 2 155 1 368 1 44 1 260 2 
316 3 360 1 139 1 218 1 56 1 43 3 283 1 226 2 260 1 215 1 179 6 
316 1 360 1 0 1 218 1 92 1 56 1 352 1 80 1 283 1 43 2 302 2 226 2 44 1 214 1 63 1 345 1 179 3 
0 1 360 3 316 5 139 2 89 1 92 1 218 2 56 2 302 2 283 2 43 5 126 1 226 5 44 1 260 2 215 1 63 1 179 10 
0 1 316 2 139 1 89 1 92 1 321 1 302 2 283 1 226 1 44 1 63 1 179 2 
360 1 0 1 316 2 139 1 89 1 92 1 321 1 365 1 43 2 302 2 283 1 226 2 260 1 44 1 63 1 179 4 147 1 
0 3 360 1 316 1 89 1 92 3 218 1 56 1 352 1 43 2 302 6 283 1 226 2 44 3 214 1 32 1 63 3 179 3 
0 5 139 5 218 3 56 3 171 1 352 2 57 3 80 1 226 12 30 1 32 1 33 1 63 5 179 34 147 3 316 16 360 7 318 1 89 1 92 5 321 3 258 1 365 3 43 18 302 10 283 5 285 1 368 4 44 5 260 5 214 1 215 2 345 1 346 1 
0 1 139 1 218 1 171 1 56 1 57 1 80 1 226 2 63 1 179 8 316 4 360 2 89 1 92 1 258 1 43 4 302 2 155 1 260 1 368 1 44 1 215 1 345 1 
0 2 139 2 218 1 56 1 171 1 57 1 80 1 226 3 33 1 63 2 179 11 147 1 360 2 316 6 89 1 92 2 321 1 258 1 43 5 302 4 283 1 155 1 260 1 368 2 44 2 215 1 345 1 346 1 
316 3 0 1 139 1 89 1 92 1 321 1 171 1 57 1 302 2 43 2 155 1 44 1 368 1 5 1 63 1 179 5 147 1 85 1 
0 3 139 3 218 1 56 1 171 1 352 1 57 1 80 1 226 5 5 1 61 1 63 3 179 17 85 1 147 2 316 10 360 3 89 1 92 3 207 1 321 2 258 1 365 1 283 2 43 7 302 6 155 1 368 1 44 3 260 2 215 1 345 1 346 1 
0 1 139 1 218 1 171 1 56 1 57 1 80 1 226 2 63 1 179 8 316 4 360 2 89 1 92 1 258 1 43 4 302 2 155 1 260 1 368 1 44 1 215 1 345 1 
0 1 139 2 171 1 57 1 226 2 5 1 61 1 63 1 179 12 85 1 147 2 316 6 360 1 89 1 92 1 207 1 321 2 365 2 283 1 43 6 302 2 155 1 368 1 44 1 260 2 
316 3 0 2 139 1 89 1 92 2 321 1 171 1 57 1 302 4 43 2 155 1 44 2 368 1 5 1 63 2 346 1 179 5 147 1 85 1 
0 4 139 3 171 1 352 2 57 1 226 6 32 1 5 1 61 1 63 4 179 16 85 1 147 3 316 9 360 3 89 1 207 1 92 4 321 3 365 2 283 3 43 7 302 8 155 1 368 1 44 4 260 2 
360 3 316 3 139 1 218 3 56 3 80 2 43 4 283 3 226 6 260 1 215 1 345 1 179 7 
316 3 0 2 139 1 89 1 92 2 321 1 171 1 57 1 302 4 43 2 155 1 44 2 368 1 5 1 32 1 63 2 179 5 147 1 85 1 
170 1 374 1 135 1 
200 1 29 1 129 1 145 1 170 1 141 1 374 1 135 1 
306 1 233 1 217 1 71 1 247 1 299 1 281 1 372 1 148 1 
36 1 306 1 231 1 216 1 217 1 120 1 290 1 221 2 281 1 233 1 71 1 16 1 328 1 314 1 146 1 325 2 148 1 163 1 
306 1 217 1 216 2 120 2 290 1 221 2 2 1 124 1 228 1 328 1 314 1 146 1 148 3 36 1 317 1 231 1 233 2 234 1 16 1 71 1 98 1 325 2 163 2 
306 2 217 2 216 2 120 2 290 1 221 2 2 1 124 1 228 1 328 1 146 1 86 1 148 3 36 1 317 1 231 1 233 2 234 1 16 1 71 2 192 1 98 1 325 2 163 2 
136 1 240 1 306 1 317 1 217 1 124 1 233 1 58 1 234 1 71 1 16 1 235 1 344 1 328 1 7 1 163 1 148 4 
306 1 240 2 217 1 216 1 120 1 221 1 222 1 81 1 228 1 34 1 64 1 7 1 271 1 148 1 9 1 231 1 209 1 13 1 234 1 71 1 344 2 343 1 325 1 22 1 
306 1 309 1 217 1 16 1 71 1 328 1 
306 2 138 1 217 2 103 1 281 2 350 1 322 1 233 1 224 1 71 2 16 1 134 1 45 1 204 1 328 2 163 1 148 1 
0 1 231 1 216 1 92 1 120 1 221 1 133 1 302 2 284 1 44 1 45 1 6 1 63 1 146 1 325 1 330 1 
240 3 1 1 139 2 56 1 251 1 64 1 7 1 292 1 148 1 9 1 209 1 13 1 15 4 212 1 71 1 260 2 344 3 343 1 215 1 22 1 306 1 217 1 216 1 24 2 76 1 348 1 218 1 120 1 221 1 222 2 351 2 354 1 81 1 126 1 228 1 34 2 35 5 271 2 359 1 231 1 281 1 232 1 42 2 282 2 370 2 325 1 
306 1 217 1 322 1 309 1 233 1 71 1 16 1 235 1 159 1 45 1 328 2 163 1 148 2 
306 1 217 1 247 1 350 1 281 1 300 1 233 1 16 1 71 1 45 1 369 1 204 1 328 2 148 1 163 1 
306 2 217 2 350 1 300 1 233 1 234 1 71 2 16 1 369 1 204 1 328 2 358 1 163 1 148 1 
100 1 306 1 217 1 128 1 16 1 71 1 278 1 328 1 281 1 375 1 
306 1 217 1 71 1 45 1 363 1 
306 1 217 1 71 1 45 1 281 1 
306 1 138 1 217 1 71 1 45 1 281 1 327 1 
36 1 306 1 231 1 216 1 217 1 120 1 290 1 221 2 281 1 233 1 71 1 16 1 328 1 192 1 146 1 325 2 148 1 163 1 
306 1 217 1 350 1 322 1 233 1 234 1 71 1 16 1 134 1 204 1 328 2 163 1 148 1 
75 1 342 1 290 1 20 1 93 1 
240 2 8 1 75 2 220 1 290 1 222 1 232 1 2 1 93 2 13 1 28 1 96 1 367 1 228 1 342 1 344 2 20 2 34 1 98 1 
50 1 75 1 208 1 120 1 221 1 338 1 342 1 20 1 325 1 
96 1 220 1 342 1 
59 1 299 1 193 1 357 1 
66 1 173 1 59 1 298 1 193 1 357 1 108 1 
293 1 246 1 108 1 
66 3 197 1 298 1 335 2 105 1 265 1 173 1 95 1 59 1 193 1 108 3 357 1 
66 2 173 1 54 1 59 1 298 1 162 1 193 1 357 1 108 2 
66 1 278 1 298 1 265 1 210 1 267 1 173 1 128 1 238 1 108 1 193 1 
66 1 173 1 59 1 298 1 193 1 108 1 265 1 
66 1 173 1 59 2 298 1 357 1 108 1 265 1 
230 1 66 2 52 1 298 2 265 1 173 2 59 1 229 1 193 1 108 2 
66 3 54 2 298 1 265 1 267 1 172 1 173 1 189 1 175 1 59 1 357 1 108 3 193 2 
100 1 66 2 54 1 278 1 298 1 265 1 115 1 173 1 128 2 59 1 238 1 193 1 357 1 108 2 206 1 
66 4 165 1 54 2 298 2 265 1 267 1 173 2 175 1 59 1 162 1 357 1 108 4 193 2 
66 1 173 1 59 1 298 1 193 1 357 1 108 1 265 1 
197 1 66 4 54 2 298 1 335 1 267 1 95 1 173 1 175 1 59 2 160 1 357 2 108 4 193 3 
66 2 49 1 54 1 298 1 265 1 173 1 310 1 59 1 269 1 193 1 108 2 357 1 
197 1 66 3 198 1 298 1 335 2 265 1 173 1 95 2 59 1 193 1 108 3 357 1 
186 1 188 2 193 2 239 1 
66 1 173 1 39 1 298 1 108 1 265 1 
172 1 66 2 173 1 54 1 59 1 298 1 193 1 357 1 108 2 265 1 
67 1 
66 1 173 1 59 1 298 1 193 1 357 1 108 1 265 1 
172 1 66 3 173 1 54 1 59 1 298 1 335 1 193 1 357 1 108 3 265 1 
175 1 160 1 193 1 267 1 
59 1 193 1 

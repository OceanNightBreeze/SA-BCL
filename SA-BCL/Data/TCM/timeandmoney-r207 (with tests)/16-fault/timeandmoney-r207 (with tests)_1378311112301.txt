#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (21,305) 75 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (21,305) 75 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (26,176) 251 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (46,257) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (68,317,338) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (46,257) (46,257) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 189 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (26,176) 251 100 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 248 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (46,257) (46,257) 150 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 189 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 340 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 340 60 143 205 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 340 60 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 340 270 215 (210,346) (27,303) (27,303) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 340 270 215 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 189 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 217 304 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 248 293 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 248 (26,176) (26,176) (216,343) 55 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (26,176) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 333 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (26,176) (26,176) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (46,257) (46,257) 150 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (46,257) (46,257) 150 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (46,257) (46,257) 150 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 340 80 201 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 340 270 215 (210,346) (210,346) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 340 60 143 268 297 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 221 53 66 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 316 31 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 340 270 215 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (26,176) 251 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 189 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 340 60 118 (78,253) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 56 (78,253) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 56 (84,106) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 340 60 143 232 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 340 60 118 (84,106) 248 (26,176) (26,176) (216,343) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 56 (84,106) 336 192 (216,343) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 340 60 143 268 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 340 270 215 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 340 60 97 117 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 340 80 201 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 340 80 99 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 340 80 359 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 340 60 118 (78,253) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 340 60 143 232 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 1 305 1 329 1 102 1 21 1 193 4 23 2 199 9 105 2 29 9 287 2 52 1 312 1 8 1 88 1 186 4 188 1 351 1 207 2 321 1 190 2 299 6 322 2 98 2 302 1 64 3 
67 1 305 1 329 1 102 1 21 1 193 4 23 2 199 9 105 2 29 9 287 2 52 1 312 1 8 1 88 1 186 4 188 1 351 1 207 2 321 1 190 2 299 6 322 2 98 2 302 1 64 3 
67 1 305 1 329 1 102 1 21 1 193 4 23 2 199 9 105 2 29 9 287 2 52 1 312 1 8 1 88 1 186 4 188 1 351 1 207 2 321 1 190 2 299 6 322 2 98 2 302 1 64 3 
67 1 305 1 102 1 21 1 193 3 23 1 199 7 105 2 29 7 287 2 52 1 312 1 8 1 88 1 186 3 188 1 351 1 207 2 321 1 190 2 299 4 322 2 98 2 302 1 64 2 
67 1 8 1 312 1 329 1 186 2 193 2 23 2 207 1 199 4 105 1 190 1 299 3 322 1 29 4 287 1 64 1 
52 1 67 1 175 1 44 1 193 1 207 1 220 1 199 2 125 1 321 1 190 1 28 1 322 1 29 2 287 1 98 1 
67 1 175 1 21 1 186 1 193 2 199 3 299 1 28 1 322 2 29 3 287 2 98 1 64 1 
67 1 75 1 199 1 21 1 29 1 322 1 287 1 
67 1 75 1 199 1 21 1 29 1 322 1 287 1 
189 1 214 1 358 1 
224 2 214 1 123 1 
157 2 228 1 
107 2 251 1 227 2 228 1 334 1 298 2 157 1 269 1 26 1 339 1 259 1 
157 1 46 1 228 1 
51 1 68 1 204 1 276 1 141 1 345 1 109 1 317 1 208 1 17 1 214 1 338 1 246 1 358 1 
157 1 338 1 
51 1 145 1 83 1 296 1 317 1 
51 2 263 1 145 1 83 1 314 1 214 1 358 1 317 2 
51 1 145 1 317 1 
51 1 83 1 157 1 257 1 46 1 228 1 317 1 
214 1 
51 2 58 1 145 1 83 1 314 1 214 1 358 1 317 2 
51 5 83 2 313 1 314 1 103 1 91 1 195 2 317 5 165 2 145 2 267 1 95 2 18 1 214 1 323 1 358 1 19 1 20 1 158 1 
189 1 
283 1 131 1 276 1 141 1 109 1 113 1 208 1 180 1 157 1 
283 1 276 2 141 2 109 2 352 2 208 1 180 1 157 1 353 1 223 2 
352 1 208 1 147 1 276 1 141 1 109 1 223 1 
157 1 131 1 113 1 
51 1 107 1 251 1 131 1 227 1 42 1 276 1 100 1 345 1 141 1 109 1 228 1 317 1 298 1 352 1 208 1 353 1 157 2 17 1 26 1 338 1 246 1 259 1 218 1 223 1 
352 1 180 1 353 1 204 1 276 2 141 2 109 2 132 1 223 1 
51 1 131 1 42 1 276 2 219 1 141 2 345 1 109 2 317 1 352 2 208 1 157 1 353 2 17 1 214 1 338 1 246 1 218 1 223 2 
157 1 131 1 
298 1 107 1 227 1 259 1 
298 1 107 1 227 1 259 1 
24 1 156 1 225 1 331 1 239 1 295 2 301 1 104 1 
352 1 208 1 276 1 345 1 141 1 13 1 109 1 223 1 
248 1 340 1 107 1 227 1 276 1 118 1 141 1 237 1 109 1 352 1 298 1 60 1 353 1 106 1 81 1 218 1 223 1 259 1 
283 1 131 1 276 1 141 1 109 1 352 1 208 1 180 1 353 1 157 1 223 1 
352 2 208 1 147 1 276 2 13 1 141 2 109 2 223 2 
354 1 191 1 
354 1 191 1 
85 1 348 1 
85 1 348 1 
85 1 348 1 
354 1 231 1 191 1 
354 1 231 1 191 1 
354 1 231 1 191 1 
146 1 354 1 191 1 
250 1 85 1 354 2 191 2 37 1 348 1 
260 1 354 1 191 1 
260 1 354 1 191 1 
260 1 354 1 191 1 
51 2 328 2 226 1 264 2 315 1 46 1 185 1 3 1 228 1 265 2 317 2 157 1 354 2 257 1 35 1 62 2 191 2 214 1 30 2 150 1 247 1 
249 1 51 1 328 1 264 1 276 2 73 1 141 2 109 2 3 1 317 1 265 1 352 2 180 1 146 1 25 1 266 1 354 1 62 1 191 1 30 1 137 1 138 1 325 1 223 2 
207 1 105 1 190 1 
207 1 220 1 190 1 
207 3 59 1 220 1 327 1 105 2 273 1 
207 2 59 1 220 1 105 1 273 1 275 1 
207 2 59 1 220 1 105 1 273 2 
330 1 43 1 73 1 103 3 195 1 242 1 310 1 79 1 183 1 158 1 249 1 51 5 224 3 83 4 314 1 54 1 291 2 108 2 123 1 165 1 317 5 229 1 15 1 145 1 16 1 36 2 95 1 357 1 323 2 214 2 358 1 325 1 
330 3 73 4 103 8 241 1 195 2 154 1 134 1 135 1 242 3 310 3 48 5 183 3 158 1 51 9 224 9 83 7 313 1 314 1 54 1 291 6 108 6 140 1 123 3 296 5 317 9 165 2 229 3 15 2 145 6 212 1 16 2 95 2 323 6 214 5 358 1 
330 1 73 1 103 3 195 1 242 1 310 1 79 1 183 1 51 3 83 2 224 4 313 1 291 2 108 2 123 2 165 1 317 3 229 1 15 1 16 1 36 1 357 1 95 1 214 3 323 2 358 1 
330 2 73 2 103 5 195 1 134 1 135 1 242 2 310 2 79 1 183 2 51 4 224 7 83 3 313 1 291 4 108 4 123 3 165 1 317 4 229 2 15 1 212 1 16 1 36 2 95 1 357 1 214 4 323 4 358 1 
189 1 240 1 
56 1 
101 1 
340 1 
340 1 60 1 205 1 143 1 
340 1 60 1 
187 1 
262 1 160 1 342 1 1 2 294 3 278 4 316 1 350 2 229 1 242 1 211 1 335 1 94 5 213 1 96 9 245 1 172 1 
262 1 160 1 342 1 1 2 294 3 278 4 316 1 350 2 229 1 242 1 211 1 335 1 94 5 213 1 96 9 245 1 172 1 
262 1 271 1 160 1 342 1 1 2 294 3 278 4 316 1 350 2 229 1 242 1 211 1 335 1 94 5 213 1 96 9 245 1 172 1 
262 2 326 1 69 4 330 3 41 1 1 1 239 1 24 1 156 1 242 5 335 3 77 1 310 3 245 1 183 3 160 1 184 3 225 1 342 1 31 1 294 13 316 3 295 2 278 17 111 1 350 6 229 5 211 7 34 1 94 17 256 1 96 34 213 2 172 1 129 1 
262 1 41 1 1 2 239 2 24 2 242 1 156 2 335 1 136 1 245 1 225 2 342 1 294 4 295 4 278 5 316 1 350 3 32 1 229 1 211 1 94 6 96 11 213 1 172 1 
233 1 67 1 327 1 175 1 237 1 193 1 220 1 74 1 199 2 105 1 28 1 7 1 29 2 287 1 81 1 159 1 107 1 227 1 292 1 344 1 252 1 163 1 142 1 298 1 124 1 207 2 299 1 190 1 322 1 98 1 
327 1 175 1 237 1 193 1 179 1 220 1 199 3 105 1 337 1 28 1 7 1 29 3 287 1 81 1 159 1 107 1 227 1 292 1 344 1 252 1 163 1 142 1 90 1 298 1 124 1 207 2 190 1 299 2 322 1 98 1 
327 1 175 1 237 1 193 1 179 1 220 1 199 2 105 1 337 1 28 1 7 1 29 2 81 1 107 1 227 1 292 1 344 1 252 1 142 1 298 1 124 1 207 2 299 2 190 1 98 1 
340 1 107 1 227 1 344 2 252 2 142 2 90 1 298 1 210 1 199 1 61 1 27 1 322 1 29 1 270 1 215 1 287 1 98 2 303 1 259 1 
67 1 327 1 237 1 220 1 74 1 199 1 105 1 337 1 7 1 29 1 287 1 81 1 159 1 107 1 227 1 292 1 344 1 252 1 163 1 142 1 298 1 124 1 207 2 190 1 322 1 98 1 
152 1 
51 2 340 1 107 2 314 1 227 2 12 1 103 1 195 1 57 1 317 2 165 1 298 2 15 1 145 2 95 1 169 1 323 1 270 1 215 1 158 1 259 2 
68 1 2 1 286 1 338 1 246 1 82 1 51 3 202 1 290 1 314 1 276 1 204 1 141 1 345 1 109 1 89 1 317 3 318 2 208 1 58 1 145 2 17 1 
68 1 2 1 286 1 338 1 246 1 82 1 51 3 202 1 314 1 276 1 204 1 141 1 345 1 109 1 89 1 317 3 318 3 208 1 167 1 58 1 145 1 17 1 214 1 358 1 
68 1 2 1 286 1 338 1 246 1 82 1 51 3 202 1 203 1 290 1 314 1 276 1 204 1 141 1 345 1 109 1 89 1 317 3 318 3 58 1 208 1 167 1 145 2 17 1 214 1 358 1 
2 1 177 2 45 2 103 1 4 1 51 5 9 1 314 3 276 1 141 1 109 1 112 1 317 5 318 6 58 1 145 7 230 1 149 1 17 1 323 1 284 2 285 2 68 1 195 1 286 1 338 1 246 1 82 1 158 1 202 1 290 4 203 4 204 1 345 1 89 1 121 1 123 2 165 1 208 1 167 4 95 1 214 5 358 5 171 1 
2 1 177 2 45 2 103 1 51 4 224 2 9 1 314 2 276 1 141 1 109 1 112 1 317 4 318 4 145 4 17 1 323 1 284 2 285 2 68 1 195 1 286 1 338 1 246 1 120 1 158 1 82 1 202 1 203 2 290 2 204 1 345 1 89 1 123 2 165 1 208 1 167 2 95 1 214 2 358 1 
284 2 285 2 68 1 2 1 45 2 177 2 103 1 195 1 286 1 338 1 246 1 82 1 158 1 51 4 9 1 202 1 290 2 203 2 314 2 276 1 204 1 141 1 345 1 109 1 121 1 89 1 123 2 112 1 317 4 165 1 318 4 167 2 208 1 145 4 230 1 17 1 95 1 214 1 323 1 358 1 171 1 
284 2 285 2 68 1 2 1 45 2 177 2 103 1 195 1 286 1 338 1 246 1 82 1 158 1 51 4 9 1 202 1 290 2 203 2 314 2 276 1 204 1 141 1 345 1 109 1 121 1 89 1 123 2 112 1 317 4 165 1 318 4 167 2 208 1 145 4 230 1 17 1 95 1 214 1 323 1 358 1 171 1 
285 2 68 1 2 1 177 2 103 1 195 1 153 1 196 1 286 1 338 1 246 1 82 1 158 1 51 4 224 2 272 1 202 1 290 2 203 2 314 2 162 2 276 1 204 1 141 1 345 1 109 1 121 1 89 1 14 2 112 1 317 4 165 1 318 4 167 2 208 1 145 4 17 1 95 1 214 1 323 1 358 1 
284 2 285 2 68 1 2 1 45 2 177 2 103 1 195 1 4 1 286 1 338 1 246 1 158 1 82 1 51 4 9 1 202 1 203 3 290 3 314 2 276 1 204 1 141 1 345 1 109 1 121 1 89 1 123 2 112 1 165 1 317 4 318 5 208 1 167 3 145 5 230 1 17 1 95 1 214 1 323 1 358 1 171 1 
284 2 285 2 68 1 2 1 45 2 177 2 103 1 195 1 4 1 286 1 338 1 246 1 158 1 82 1 51 4 9 1 202 1 203 3 290 3 314 2 276 1 204 1 141 1 345 1 109 1 121 1 89 1 123 2 112 1 165 1 317 4 318 5 208 1 167 3 145 5 230 1 17 1 95 1 214 1 323 1 358 1 171 1 
2 1 177 2 103 1 51 4 224 2 314 2 276 1 141 1 109 1 112 1 14 2 317 4 318 4 145 4 17 1 323 1 285 2 68 1 195 1 196 1 286 1 338 1 246 1 120 1 158 1 82 1 202 1 203 2 290 2 162 2 204 1 345 1 89 1 165 1 208 1 167 2 95 1 214 1 358 1 
225 1 331 1 294 1 278 1 295 2 239 1 316 1 350 1 104 1 24 1 156 1 189 1 94 1 335 1 96 2 245 1 301 1 172 1 
304 1 184 1 225 1 69 1 331 1 295 2 239 1 278 1 104 1 24 1 156 1 94 1 281 1 96 2 217 1 
261 1 331 1 118 1 237 1 239 1 104 1 24 1 156 1 106 1 81 1 223 1 248 1 340 1 107 1 139 1 225 1 227 1 87 1 276 1 293 1 141 1 109 1 277 1 295 2 278 1 298 1 352 1 60 1 353 1 281 1 94 1 356 1 96 2 63 1 259 1 218 1 
331 1 118 1 176 1 237 1 239 1 104 1 24 1 156 1 106 1 26 1 81 1 223 1 248 1 340 1 107 1 139 1 225 1 343 1 227 1 276 1 55 1 141 1 109 1 295 2 278 1 352 1 298 1 60 1 353 1 281 1 96 1 218 1 259 1 
107 1 225 1 227 1 331 1 277 1 164 1 295 2 239 1 104 1 24 1 298 1 156 1 94 1 96 1 288 1 259 1 
131 1 330 1 331 1 239 1 104 1 24 1 156 1 242 1 157 1 310 1 244 1 183 1 225 1 295 2 278 1 229 1 281 1 94 1 96 2 
225 1 10 1 331 1 295 2 239 1 104 1 24 1 156 1 242 1 94 1 96 1 301 1 183 1 
225 1 330 1 331 1 295 2 239 1 278 1 104 1 24 1 156 1 229 1 96 1 301 1 127 1 
225 1 330 1 331 1 278 1 295 2 239 1 104 1 24 1 229 1 156 1 242 1 94 1 310 1 96 2 301 1 183 1 
225 1 10 1 331 1 164 1 295 2 239 1 104 1 24 1 156 1 242 1 94 1 96 1 183 1 
225 1 330 1 331 1 164 1 295 2 239 1 278 1 104 1 24 1 156 1 229 1 96 1 127 1 
225 1 330 1 331 1 278 1 164 1 295 2 239 1 104 1 24 1 229 1 156 1 242 1 94 1 310 1 96 2 183 1 
225 1 330 1 331 1 278 1 295 2 239 1 104 1 24 1 229 1 156 1 242 1 94 1 310 1 96 2 183 1 
298 1 107 1 227 1 26 1 259 1 
298 1 107 1 227 1 333 1 259 1 
225 1 330 1 331 1 278 1 295 2 239 1 104 1 24 1 229 1 156 1 242 1 281 1 94 1 310 1 96 2 183 1 
298 1 233 1 107 1 227 1 26 1 176 1 
235 1 225 1 131 1 330 1 331 1 278 1 295 2 239 1 104 1 24 1 229 1 242 1 156 1 157 1 94 1 281 1 310 1 96 2 183 1 
173 1 151 1 69 2 330 3 238 1 239 2 24 2 156 2 242 3 76 1 77 1 310 3 183 3 184 1 225 2 161 1 294 6 347 1 295 4 278 10 122 1 350 3 32 1 280 2 229 3 320 2 211 3 34 1 94 9 96 19 
173 1 41 2 69 2 330 2 239 3 24 3 156 3 309 1 242 3 76 1 243 1 310 3 221 1 183 3 184 2 225 3 53 1 161 2 294 4 278 12 347 2 295 6 122 1 350 2 32 1 280 1 229 2 211 2 320 4 34 2 94 14 126 1 96 26 66 1 
173 1 41 1 69 4 330 4 238 1 239 3 24 3 309 1 156 3 242 4 335 1 76 1 77 1 243 1 310 4 221 1 245 1 183 4 184 3 225 3 53 1 161 1 294 8 316 1 347 2 295 6 278 19 122 1 350 4 32 1 280 1 229 4 320 4 211 4 34 3 94 17 126 1 96 36 128 1 172 1 66 1 
173 1 41 2 69 4 330 3 1 1 238 1 239 4 24 4 309 1 156 4 242 5 335 1 76 1 77 1 243 1 310 4 221 1 245 1 183 4 184 3 225 4 342 1 53 1 161 1 294 7 316 1 347 2 295 8 278 19 122 1 350 4 32 1 280 1 229 4 320 4 211 3 34 3 94 21 126 1 96 40 128 1 172 1 66 1 
173 1 41 1 69 4 330 7 1 1 239 2 24 2 309 1 156 2 242 8 198 2 335 1 76 1 77 2 243 1 310 7 221 1 245 1 183 7 184 4 225 2 342 1 53 1 161 1 294 14 316 1 347 1 295 4 278 26 122 1 350 7 32 1 280 1 229 8 320 4 211 7 34 2 94 28 126 1 96 54 172 1 66 1 
130 1 328 1 264 1 72 1 110 1 92 1 265 1 354 1 35 1 191 1 30 1 
146 1 138 1 
328 1 354 1 264 1 191 1 30 1 119 1 200 1 289 1 265 1 
51 1 328 1 226 1 264 1 315 1 46 1 185 1 3 1 228 1 317 1 265 1 157 1 354 1 257 1 35 1 62 2 191 1 214 1 30 1 150 1 247 1 
51 1 328 1 226 1 264 1 315 1 46 1 185 1 3 1 228 1 317 1 265 1 157 1 354 1 257 1 35 1 62 2 191 1 214 1 30 1 150 1 247 1 
51 1 328 1 226 1 264 1 315 1 46 1 185 1 3 1 228 1 317 1 265 1 157 1 354 1 257 1 35 1 62 2 191 1 214 1 30 1 150 1 247 1 
174 1 231 1 37 1 
174 1 231 1 37 1 
260 1 307 1 
260 1 37 1 307 1 
25 1 137 1 
328 1 264 1 70 1 73 1 265 1 180 1 266 1 25 1 30 1 138 1 137 1 223 2 51 1 249 1 83 1 226 1 315 1 276 2 141 2 109 2 317 1 352 2 146 1 354 1 62 1 191 1 325 1 
174 1 231 1 
260 1 37 1 307 1 
331 1 239 1 104 1 24 1 156 1 269 2 288 1 80 1 340 1 201 1 107 2 139 1 225 1 227 2 11 1 276 2 141 2 109 2 277 1 295 2 278 1 33 1 298 2 281 1 94 1 96 2 324 1 170 1 
233 1 159 1 107 2 311 1 327 1 86 1 227 2 292 1 344 1 237 1 306 1 207 2 298 2 124 1 220 1 105 1 190 1 337 1 81 1 
159 1 107 1 311 1 327 1 227 1 292 1 344 1 237 1 207 2 298 1 124 1 220 1 105 1 190 1 337 1 168 1 81 1 
340 1 107 1 227 1 344 1 346 1 306 1 298 1 210 1 215 1 270 1 259 1 
159 1 107 1 311 1 327 1 86 1 227 1 292 1 344 1 237 1 306 1 207 2 298 1 124 1 220 1 105 1 190 1 337 1 81 1 
178 1 
189 1 18 1 214 1 323 1 103 1 358 1 91 1 
284 1 45 1 103 1 195 1 158 1 51 1 224 1 9 1 314 1 123 1 165 1 317 1 145 1 95 1 323 1 214 2 358 1 
340 1 107 1 227 1 195 1 165 1 297 1 143 1 298 1 60 1 268 1 95 1 158 1 259 1 
69 1 330 1 103 5 133 1 195 2 309 1 242 1 6 1 310 1 221 1 183 1 158 2 51 1 224 6 184 1 53 1 314 1 291 4 108 4 123 3 317 1 165 2 229 1 145 1 34 1 95 2 126 1 214 4 323 3 358 1 66 1 
51 1 335 1 31 1 95 1 323 1 316 1 103 1 133 1 195 1 171 1 165 1 158 1 317 1 
103 1 91 1 195 1 165 1 95 1 18 1 323 1 214 1 358 1 158 1 
224 10 40 1 330 2 291 5 108 5 103 5 123 5 242 2 229 2 310 2 323 5 214 5 183 2 
51 1 145 1 314 1 214 1 358 1 317 1 
103 1 194 1 195 1 270 1 158 1 51 1 340 1 107 2 314 1 227 2 12 1 57 1 165 1 317 1 298 2 15 1 145 2 95 1 169 1 323 1 215 1 259 2 
298 1 107 1 157 1 251 1 227 1 26 1 228 1 259 1 
224 2 12 1 108 1 103 1 123 1 195 1 165 1 15 1 95 1 323 1 214 2 358 1 158 1 
328 1 258 1 265 1 
328 1 258 1 265 1 
328 1 258 1 265 1 
328 1 71 1 116 1 137 1 265 1 
328 1 49 1 265 1 
328 1 49 1 265 1 
328 1 49 1 265 1 
328 1 265 1 
354 1 191 1 
225 2 41 1 294 2 295 4 239 2 316 1 350 1 24 2 156 2 211 1 335 1 245 1 172 1 
342 1 1 1 294 2 316 1 278 4 350 2 229 1 189 1 242 1 335 1 94 4 96 8 245 1 172 1 
225 1 330 1 294 2 278 2 295 2 239 1 350 1 308 1 24 1 229 1 156 1 242 1 211 1 94 2 310 1 96 4 183 1 
184 1 330 1 69 2 294 2 278 4 350 1 229 1 242 1 211 1 34 1 94 3 77 1 310 1 96 7 183 1 
69 2 330 2 41 2 1 1 239 2 24 2 242 3 156 2 198 1 335 2 77 1 310 2 245 1 183 2 184 2 225 2 342 1 294 9 316 2 278 11 295 4 350 5 166 1 229 3 211 4 94 10 96 21 217 1 172 1 
69 1 96 1 278 1 
184 1 94 1 96 1 
40 1 225 1 330 1 294 3 239 1 295 2 278 3 350 2 308 1 24 1 156 1 242 1 229 1 211 1 94 3 310 1 96 6 183 1 
184 1 225 1 53 1 330 2 69 1 294 2 295 2 239 1 278 6 350 1 32 1 24 1 229 2 242 2 309 1 156 1 211 1 34 1 94 6 310 2 126 1 221 1 96 12 183 2 66 1 
229 1 242 1 211 1 335 1 94 3 342 1 294 2 96 6 316 1 278 3 350 1 
225 1 41 1 294 2 316 1 278 1 295 2 239 1 350 1 166 1 24 1 156 1 211 1 335 1 96 1 245 1 172 1 
225 1 342 1 31 1 294 4 239 1 295 2 316 1 278 5 350 2 32 1 24 1 156 1 242 2 229 2 211 2 335 1 94 5 96 10 
225 1 294 1 295 2 239 1 32 1 24 1 156 1 242 1 211 1 94 2 96 2 183 1 
225 1 330 1 294 2 278 2 295 2 239 1 350 1 32 1 24 1 229 1 156 1 242 1 211 1 94 2 310 1 96 4 183 1 
225 1 294 1 278 1 295 2 239 1 316 1 350 1 32 1 24 1 156 1 335 1 94 1 96 2 
326 1 41 2 69 4 330 3 238 1 239 5 308 1 24 5 156 5 242 4 335 3 77 1 310 3 245 1 183 3 184 3 225 5 342 1 294 11 316 3 278 14 295 10 350 6 32 1 166 1 229 4 211 5 34 1 256 1 94 12 96 26 172 1 129 1 
69 1 1 1 239 1 24 1 242 1 156 1 335 1 245 1 184 1 225 1 342 1 294 2 278 5 295 2 316 1 350 2 32 1 229 1 34 1 94 5 96 10 172 1 66 1 
69 2 1 1 239 2 308 1 24 2 156 2 242 2 335 1 77 1 310 1 245 1 183 1 184 1 225 2 342 1 294 3 316 1 278 6 295 4 350 2 32 1 229 1 211 1 34 1 94 7 96 13 172 1 66 1 
69 1 330 2 41 1 1 1 239 3 308 1 24 3 156 3 309 1 242 3 335 1 310 2 221 1 245 1 183 2 184 1 225 3 342 1 53 1 294 4 316 1 278 11 295 6 350 3 32 1 229 3 211 1 34 1 94 10 126 1 96 21 172 1 66 1 
41 1 69 1 330 1 1 1 239 3 308 1 24 3 156 3 309 1 242 3 335 1 310 2 221 1 245 1 183 2 184 1 225 3 342 1 53 1 294 5 316 1 278 8 295 6 350 3 32 1 229 2 211 2 34 1 94 11 126 1 96 19 172 1 66 1 
69 1 1 1 239 1 24 1 242 1 156 1 335 1 245 1 184 1 225 1 342 1 294 2 278 5 295 2 316 1 350 2 32 1 229 1 34 1 94 5 96 10 172 1 66 1 
184 1 225 1 53 1 330 2 69 1 294 2 295 2 239 1 278 6 350 1 32 1 24 1 229 2 242 2 309 1 156 1 211 1 34 1 94 6 310 2 126 1 221 1 96 12 183 2 66 1 
69 1 330 1 41 2 1 1 239 4 308 1 24 4 156 4 309 1 242 3 335 1 310 2 221 1 245 1 183 2 184 1 225 4 342 1 53 1 294 5 316 1 278 9 295 8 350 3 32 1 229 2 211 2 34 1 94 11 126 1 96 20 172 1 66 1 
69 1 330 2 41 2 239 4 238 1 24 4 156 4 309 1 242 3 310 3 221 1 183 3 184 1 225 4 53 1 294 6 278 7 295 8 350 3 32 1 229 2 211 3 34 1 94 9 126 1 96 16 66 1 
294 4 316 2 278 2 350 2 211 2 335 2 94 2 96 4 245 1 172 2 
69 1 330 1 41 2 1 1 239 4 238 1 24 4 156 4 309 1 242 3 335 1 310 2 221 1 245 1 183 2 184 1 225 4 342 1 53 1 294 4 316 1 278 9 295 8 350 3 32 1 229 2 211 1 34 1 94 11 126 1 96 20 172 1 66 1 
115 1 180 1 276 1 204 1 141 1 109 1 132 1 
234 1 341 1 204 1 276 1 236 1 141 1 109 1 132 1 115 1 180 1 148 1 181 1 
298 1 340 1 189 1 107 1 227 1 270 1 215 1 259 1 
340 1 107 1 227 1 276 1 118 1 141 1 237 1 109 1 352 1 298 1 60 1 353 1 106 1 81 1 223 1 259 1 
340 1 107 1 227 1 276 1 118 1 141 1 237 1 109 1 352 1 298 1 60 1 353 1 106 1 182 1 81 1 223 1 
340 1 107 1 227 1 276 1 118 1 141 1 237 1 109 1 253 1 352 1 298 1 60 1 353 1 182 1 81 1 223 1 
298 1 51 1 107 1 227 1 78 1 182 1 56 1 317 1 
298 1 51 1 107 1 84 1 227 1 182 1 56 1 317 1 
298 1 107 1 227 1 237 1 81 1 65 1 
298 1 340 1 107 1 60 1 227 1 232 1 143 1 259 1 
233 1 331 1 118 1 176 1 237 1 239 1 104 1 24 1 156 1 106 1 26 1 81 1 223 1 248 1 340 1 107 1 225 1 227 1 343 1 276 1 141 1 109 1 295 2 352 1 298 1 60 1 353 1 281 1 170 1 
51 1 107 1 83 1 84 1 192 1 227 1 194 1 56 1 195 1 317 1 165 1 298 1 336 1 95 1 216 1 158 1 259 1 
298 1 340 1 107 1 60 1 268 1 227 1 143 1 65 1 
233 1 298 2 340 1 107 2 227 2 270 1 215 1 259 1 
298 1 340 1 107 1 197 1 60 1 117 1 227 1 97 1 
207 1 298 1 220 1 107 1 190 1 227 1 292 1 237 1 81 1 259 1 
298 2 233 1 340 1 201 1 107 2 337 1 227 2 80 1 
233 1 298 2 340 1 107 2 99 1 227 2 80 1 259 1 
233 1 298 2 340 1 107 2 227 2 80 1 359 1 259 1 
340 1 107 1 227 1 276 1 118 1 141 1 237 1 109 1 253 1 352 1 298 1 60 1 353 1 81 1 223 1 259 1 
298 1 340 1 107 1 60 1 227 1 232 1 182 1 143 1 
11 1 276 1 141 1 109 1 254 1 279 1 33 1 255 1 324 1 
255 1 47 1 222 1 
255 1 180 1 254 1 282 1 279 1 
51 2 83 1 42 1 345 1 254 2 317 2 279 2 255 1 208 1 180 1 47 1 17 1 300 1 214 1 222 1 338 1 246 1 358 1 282 2 
189 1 175 1 28 1 193 1 
199 1 175 1 28 1 29 1 322 1 287 1 193 1 
29 1 252 1 98 1 
319 1 52 2 144 1 67 1 199 3 175 1 28 1 29 3 322 1 287 1 193 1 206 1 
199 2 299 1 175 1 28 1 29 2 322 1 287 1 193 1 23 1 
67 1 312 1 186 1 193 1 207 1 199 1 105 1 190 1 322 1 29 1 287 1 
67 1 199 1 28 1 29 1 322 1 287 1 193 1 
67 1 199 1 175 1 28 2 29 1 322 1 287 1 
67 1 332 1 193 1 209 1 199 2 28 1 322 2 29 2 287 2 50 1 
67 1 175 1 186 1 188 1 193 2 351 1 199 3 299 2 28 1 322 1 29 3 287 1 64 1 
67 1 327 1 175 1 349 1 193 1 207 2 220 1 199 2 105 1 190 1 299 1 28 1 322 1 29 2 287 1 
67 1 329 1 175 1 186 1 193 2 23 1 199 4 299 2 28 1 322 2 29 4 287 2 64 1 
67 1 199 1 175 1 28 1 29 1 322 1 287 1 193 1 
52 1 175 2 22 1 186 1 193 3 206 1 144 1 199 4 299 2 28 2 29 4 322 1 287 1 64 1 
155 1 67 1 199 2 299 1 175 1 355 1 28 1 29 2 322 1 287 1 193 1 39 1 
114 1 52 2 144 2 67 1 199 3 175 1 28 1 29 3 322 1 287 1 193 1 206 1 
5 2 274 1 193 2 38 1 
93 1 67 1 199 1 29 1 322 1 287 1 
67 1 199 2 299 1 175 1 28 1 29 2 322 1 287 1 193 1 351 1 
0 1 
67 1 199 1 175 1 28 1 29 1 322 1 287 1 193 1 
52 1 67 1 199 3 299 1 175 1 28 1 29 3 322 1 287 1 193 1 351 1 
22 1 186 1 193 1 64 1 
28 1 193 1 

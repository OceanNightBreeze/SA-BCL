#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 363 283 237 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (94,233) 151 332 196 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 204 343 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 363 192 51 54 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 363 340 51 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 363 192 51 54 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 363 192 51 54 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 363 192 51 54 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 29 282 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 269 18 340 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 363 283 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 363 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 363 340 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 63 (57,91) (57,91) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 2 19 1 35 1 126 3 63 1 307 1 91 1 292 1 117 1 276 1 252 2 57 1 95 3 
265 2 298 1 129 2 302 1 77 1 6 1 307 6 117 2 275 1 276 1 80 1 252 2 159 1 57 1 19 1 35 4 87 2 126 9 63 4 143 2 142 1 91 1 293 1 292 3 65 2 42 1 95 9 170 1 
265 2 298 1 129 2 302 1 77 1 6 1 307 6 117 2 275 1 276 1 80 1 252 2 159 1 57 1 19 1 35 4 87 2 126 9 63 4 143 2 142 1 91 1 293 1 292 3 65 2 42 1 95 9 170 1 
265 2 298 1 129 2 302 1 77 1 6 1 307 7 117 2 275 1 276 1 80 1 252 2 159 1 57 1 19 1 35 5 87 2 126 10 63 5 143 2 142 1 91 1 293 1 292 4 65 2 42 1 95 10 170 1 
129 1 298 1 265 2 19 1 35 3 302 1 77 1 87 2 63 3 126 7 307 4 142 1 143 2 91 1 292 2 293 1 275 1 117 2 276 1 42 1 80 1 65 2 252 2 159 1 57 1 170 1 95 7 
265 1 129 2 19 1 35 2 77 1 87 1 6 1 126 4 63 2 307 3 143 1 91 1 292 1 42 1 65 1 252 1 57 1 95 4 
265 1 19 1 302 1 162 1 87 1 126 2 143 1 91 1 117 1 252 1 11 1 57 1 170 1 95 2 67 1 
129 2 298 1 265 2 16 1 19 1 35 4 77 1 87 1 6 1 63 4 126 9 307 7 143 1 142 1 91 1 292 3 117 1 276 1 65 1 42 1 252 2 57 1 95 9 369 1 
129 2 298 1 265 2 16 1 19 1 35 4 77 1 87 1 6 1 63 4 126 9 307 7 143 1 142 1 91 1 292 3 117 1 276 1 65 1 42 1 252 2 57 1 95 9 369 1 
123 1 183 1 185 1 323 1 137 1 311 1 266 1 36 1 351 1 353 1 239 1 251 1 262 1 280 1 
189 1 
364 1 291 1 323 2 185 2 189 1 368 1 113 1 239 1 
323 5 225 1 69 5 172 1 174 1 246 1 173 2 266 1 200 2 113 2 201 1 247 1 351 1 333 2 353 1 210 2 251 1 253 1 155 1 280 1 183 1 123 1 137 1 185 5 311 1 36 1 21 2 286 1 141 4 239 2 341 2 291 1 189 2 368 2 262 1 128 1 110 1 145 1 
189 1 131 1 368 1 
272 2 189 1 216 1 
183 2 137 2 311 2 266 1 36 2 262 2 351 2 32 1 
71 1 96 2 266 1 72 1 175 2 3 1 351 2 207 1 208 1 232 1 177 1 209 1 308 2 56 1 213 1 136 1 182 1 279 1 32 1 59 1 281 1 183 2 137 2 311 2 217 1 85 1 36 3 107 1 161 2 89 2 314 1 125 1 365 1 64 1 168 1 345 1 262 3 
183 1 123 1 137 1 311 1 266 1 36 1 262 1 280 1 351 1 353 1 
137 1 185 1 323 1 82 1 73 1 36 1 108 1 306 1 353 1 189 1 368 1 262 1 245 1 221 1 
183 1 323 2 137 1 185 2 82 1 311 1 73 1 36 1 351 1 108 1 306 1 353 1 189 1 368 1 262 1 
323 1 185 1 198 1 113 1 239 1 
291 1 323 2 185 2 189 1 368 1 113 1 86 1 239 1 
323 1 185 1 113 1 
183 1 137 2 360 1 311 1 36 2 98 1 351 1 262 2 32 2 
233 1 93 1 151 1 
71 1 96 1 217 1 36 1 107 1 161 1 207 1 125 1 177 1 209 1 308 1 168 1 262 1 261 1 32 1 281 1 
131 1 32 1 
183 1 137 1 71 1 311 1 96 1 217 1 36 2 268 1 107 1 161 1 125 1 207 1 177 1 209 1 334 1 233 1 308 1 168 1 262 2 281 1 
183 4 138 1 137 4 360 1 311 4 20 1 36 4 268 1 351 1 353 1 334 2 262 4 32 1 12 1 
183 2 137 2 311 2 36 2 37 1 262 2 280 1 353 1 
183 3 137 3 334 1 311 3 36 3 262 3 351 1 32 1 
183 1 137 1 311 1 36 1 262 1 280 1 353 1 
183 1 137 1 360 1 311 1 36 1 98 1 262 1 351 1 353 1 
323 1 71 1 96 1 266 1 73 1 175 2 268 1 351 2 207 1 306 1 353 1 177 1 209 1 334 1 308 1 56 1 213 1 136 1 279 1 32 1 59 1 281 1 183 3 137 3 185 1 360 1 82 1 311 3 217 1 85 1 36 4 107 1 161 1 89 1 314 1 125 1 108 1 365 1 188 1 64 1 168 1 191 1 345 1 262 4 
296 1 183 1 137 2 334 1 311 1 36 2 262 2 245 1 32 1 
183 3 323 1 185 1 137 3 360 1 82 1 311 3 73 1 36 3 268 1 351 1 108 1 353 1 306 1 334 2 188 1 189 1 262 3 222 1 
183 2 137 2 360 1 311 2 36 2 351 1 334 1 233 1 262 2 93 1 
71 1 96 1 217 1 36 1 107 1 161 1 207 1 125 1 177 1 209 1 308 1 168 1 262 1 32 1 281 1 
71 1 96 1 217 1 36 1 107 1 161 1 207 1 177 1 209 1 135 1 52 1 308 1 262 1 32 1 281 1 
328 1 175 2 3 2 204 1 205 1 151 2 250 1 233 2 104 1 56 1 213 1 136 1 59 1 83 1 85 1 21 1 314 1 89 3 315 1 345 1 219 1 93 2 94 1 
183 1 137 1 82 1 311 1 36 1 262 1 37 1 353 1 
249 1 49 1 300 1 
354 1 49 2 300 2 132 1 127 1 46 1 
49 1 300 1 
49 1 300 1 
127 1 46 1 
127 1 46 1 
127 1 46 1 
49 1 300 1 238 1 
49 1 300 1 238 1 
49 1 300 1 238 1 
49 1 300 1 157 1 
49 1 300 1 157 1 
49 1 300 1 157 1 
184 1 183 2 137 2 185 1 323 1 311 2 84 1 49 1 199 1 300 1 36 2 76 1 218 1 303 1 249 1 40 1 31 1 119 1 357 1 262 2 156 1 194 1 32 1 147 1 
185 2 323 2 49 2 199 2 300 2 76 2 218 2 354 1 165 1 189 1 153 1 118 1 119 1 244 2 120 1 156 2 194 3 263 1 58 1 
231 2 143 2 65 1 234 1 11 1 
143 1 65 1 87 1 
143 1 11 1 87 1 
231 1 143 3 234 1 65 2 124 1 11 1 
231 1 143 2 105 1 234 1 65 1 11 1 
148 1 323 5 69 2 173 1 200 1 113 1 303 1 204 1 152 2 272 3 273 2 274 2 210 1 10 1 357 1 216 1 184 1 185 5 257 1 21 1 286 1 141 2 239 4 291 1 367 1 189 2 368 1 343 1 167 1 219 1 68 1 
28 1 323 7 69 2 198 3 173 2 200 2 201 1 113 4 114 1 303 2 204 1 272 3 273 2 274 2 210 2 278 3 10 1 216 1 185 7 21 1 286 1 141 2 239 5 291 1 189 3 26 1 368 1 343 1 144 1 167 1 219 1 68 1 
323 3 69 2 173 1 200 1 201 1 303 1 204 1 152 1 272 4 273 2 210 1 274 2 10 1 216 2 185 3 257 1 21 1 141 2 239 2 367 1 189 3 368 1 343 1 167 1 219 1 
185 1 323 1 28 1 257 1 173 1 200 1 201 1 367 1 210 1 
358 1 
209 1 130 1 131 1 
209 1 318 1 
209 1 217 1 281 1 
209 1 228 1 
209 1 281 1 
130 2 209 3 342 1 217 1 338 1 281 1 
172 1 34 1 361 1 21 1 267 2 3 4 89 7 333 1 250 2 78 1 104 3 253 1 260 1 336 1 128 1 309 1 195 1 59 3 
102 1 283 1 237 1 361 1 78 2 267 1 3 2 363 1 89 3 59 1 171 1 
172 1 350 1 175 4 267 2 3 5 333 1 250 3 78 1 104 4 253 1 56 2 336 1 136 2 215 1 309 1 59 4 361 1 34 1 21 1 314 2 89 9 345 2 128 1 27 1 
172 1 34 1 361 1 21 1 267 2 3 4 89 7 333 1 250 2 78 1 104 3 253 1 260 1 336 1 128 1 309 1 59 3 
172 1 34 1 361 1 21 1 267 2 3 4 89 7 333 1 250 2 78 1 104 3 253 1 260 1 336 1 128 1 309 1 59 3 
224 1 265 1 226 2 71 1 96 1 301 1 133 1 107 1 161 1 62 1 206 2 207 1 126 1 290 1 209 1 116 1 117 2 252 1 308 1 243 2 95 1 281 1 322 1 
254 1 265 1 226 1 71 1 48 1 19 1 96 1 124 1 362 1 107 1 161 1 87 1 305 1 88 1 206 1 126 1 143 2 117 1 65 1 252 1 344 1 308 1 243 1 11 1 169 1 95 1 
254 1 265 1 226 1 71 1 48 1 19 1 96 1 124 1 362 1 107 1 161 1 87 1 305 1 88 1 206 1 126 2 307 1 143 2 91 1 117 1 65 1 252 1 308 1 243 1 11 1 169 1 158 1 57 1 95 2 
265 1 226 1 71 1 96 1 48 1 301 1 206 1 305 1 307 1 117 1 308 1 252 1 11 1 61 1 362 1 124 1 107 1 161 1 87 1 88 1 126 2 143 2 65 1 243 1 344 1 66 1 169 1 95 2 
96 1 61 1 243 1 308 1 344 1 161 1 
176 1 
264 1 324 1 323 5 173 1 96 2 330 1 270 1 272 2 9 2 335 1 235 2 13 2 281 1 339 1 185 5 137 1 107 1 286 1 287 4 62 1 141 2 108 1 291 3 189 2 245 1 69 2 112 2 71 1 200 1 113 6 73 1 149 1 75 1 207 2 306 1 353 1 30 2 209 1 116 1 210 1 308 2 216 2 122 1 81 2 82 1 36 1 161 2 38 1 313 1 90 2 368 1 167 1 44 1 262 1 221 1 
185 3 323 3 137 1 82 1 113 2 73 1 149 1 36 1 287 2 38 1 313 1 108 1 270 1 90 1 353 1 306 1 364 1 291 1 262 1 245 1 122 1 221 1 
323 3 112 1 113 1 73 1 149 1 270 1 306 1 353 1 122 1 137 1 185 3 82 1 36 1 38 1 287 3 313 1 108 1 364 1 291 1 189 1 368 1 262 1 245 1 221 1 
185 3 323 3 137 1 82 1 112 1 113 2 73 1 149 1 36 1 287 3 38 1 313 1 108 1 270 1 90 1 353 1 306 1 364 1 291 1 30 1 189 1 368 1 262 1 245 1 122 1 221 1 
264 1 323 5 173 1 270 1 9 2 335 1 235 2 13 2 185 5 137 1 106 1 139 1 287 6 286 1 108 1 141 1 291 3 189 5 245 1 146 1 347 1 69 1 112 4 200 1 73 1 113 7 149 1 353 1 306 1 248 1 30 4 210 1 122 1 216 2 81 2 82 1 36 1 38 1 313 1 90 4 364 1 368 5 262 1 221 1 
264 1 323 4 69 1 112 2 173 1 200 1 113 4 73 1 149 1 75 1 270 1 306 1 353 1 272 2 30 2 210 1 9 2 335 1 235 2 216 2 122 1 81 2 13 2 185 4 137 1 82 1 36 1 38 1 286 1 287 4 313 1 141 1 108 1 90 2 291 2 189 2 368 1 262 1 245 1 221 1 
264 1 323 4 69 1 112 2 173 1 200 1 113 4 73 1 149 1 270 1 306 1 353 1 30 2 210 1 9 2 335 1 235 2 216 2 122 1 81 2 13 2 137 1 185 4 82 1 106 1 139 1 36 1 38 1 287 4 286 1 313 1 141 1 108 1 90 2 291 2 189 1 368 1 262 1 245 1 221 1 347 1 
264 1 323 4 69 1 112 2 173 1 200 1 113 4 73 1 149 1 270 1 306 1 353 1 30 2 210 1 9 2 335 1 235 2 216 2 122 1 81 2 13 2 137 1 185 4 82 1 106 1 139 1 36 1 38 1 287 4 286 1 313 1 141 1 108 1 90 2 291 2 189 1 368 1 262 1 245 1 221 1 347 1 
323 4 69 1 112 2 173 1 200 1 113 4 73 1 149 1 329 1 270 1 306 1 353 1 272 2 30 2 210 1 9 2 335 1 356 2 122 1 13 2 310 1 137 1 185 4 359 1 82 1 36 1 38 1 287 4 286 1 313 1 141 1 108 1 90 2 164 2 291 2 189 1 368 1 262 1 245 1 221 1 347 1 
264 1 323 4 69 1 112 3 173 1 200 1 73 1 113 5 149 1 270 1 306 1 353 1 248 1 30 3 210 1 9 2 335 1 235 2 216 2 122 1 81 2 13 2 137 1 185 4 82 1 106 1 139 1 36 1 286 1 38 1 287 5 313 1 141 1 108 1 90 3 291 2 189 1 368 1 262 1 245 1 221 1 347 1 
264 1 323 4 69 1 112 3 173 1 200 1 73 1 113 5 149 1 270 1 306 1 353 1 248 1 30 3 210 1 9 2 335 1 235 2 216 2 122 1 81 2 13 2 137 1 185 4 82 1 106 1 139 1 36 1 286 1 38 1 287 5 313 1 141 1 108 1 90 3 291 2 189 1 368 1 262 1 245 1 221 1 347 1 
323 4 69 1 112 2 173 1 200 1 113 4 73 1 149 1 75 1 270 1 306 1 353 1 272 2 30 2 210 1 9 2 335 1 356 2 122 1 13 2 310 1 185 4 137 1 82 1 36 1 38 1 286 1 287 4 313 1 141 1 108 1 90 2 164 2 291 2 189 1 368 1 262 1 245 1 221 1 
325 1 71 2 96 8 327 1 72 1 175 4 3 1 115 1 207 2 229 1 208 2 103 1 334 1 209 3 116 1 308 8 56 2 213 2 136 2 158 1 59 1 281 2 183 1 137 1 311 1 85 2 36 1 107 2 161 7 140 1 314 2 89 2 62 1 315 1 64 1 344 1 345 2 45 1 262 1 
175 2 3 1 351 1 204 1 151 1 250 1 233 1 104 1 56 1 213 1 136 1 59 1 183 1 137 1 360 1 311 1 85 1 36 1 21 1 314 1 89 2 366 1 343 1 295 1 345 1 219 1 262 1 93 1 
131 1 172 1 175 2 267 1 3 3 333 1 151 1 250 2 233 1 104 2 253 1 56 1 336 1 213 1 136 1 309 1 32 2 59 3 85 1 21 1 314 1 89 6 315 1 345 1 128 1 93 1 
85 1 175 2 3 1 89 2 314 1 332 1 151 3 102 1 233 3 295 1 56 1 345 1 213 1 136 1 196 1 171 1 59 1 
71 1 96 1 72 1 175 2 268 1 3 1 207 1 177 1 209 1 334 1 308 1 154 1 56 1 213 1 136 1 32 1 281 1 59 1 183 1 137 1 311 1 217 1 85 1 36 2 107 1 161 1 125 1 314 1 89 2 187 1 64 1 168 1 295 1 345 1 261 1 262 2 93 1 320 1 
172 1 96 1 267 1 175 6 268 1 50 1 3 10 333 1 100 2 177 2 334 1 233 7 104 5 56 3 336 1 337 2 136 3 279 2 59 8 281 2 183 1 137 1 17 2 21 3 107 2 288 1 64 1 343 2 295 1 345 3 71 2 72 1 204 2 207 1 151 7 209 2 250 4 253 1 308 1 213 3 309 1 32 2 34 1 311 1 217 2 85 3 36 3 161 1 39 2 314 3 89 18 125 2 168 2 219 2 128 1 262 3 93 7 
34 1 83 1 85 1 175 2 21 1 3 2 89 2 314 1 151 1 315 1 233 1 104 1 56 1 345 1 213 1 219 1 136 1 93 1 
85 1 175 2 205 1 204 1 314 1 89 1 151 1 315 1 250 1 233 1 104 1 56 1 345 1 213 1 136 1 93 1 59 1 
175 2 3 2 204 1 151 2 250 1 233 2 104 2 56 1 213 1 136 1 59 1 34 1 85 1 21 1 314 1 89 3 315 1 343 1 345 1 219 1 93 2 
34 1 83 1 85 1 175 2 21 1 3 2 89 2 314 1 151 1 103 1 233 1 104 1 56 1 345 1 213 1 219 1 136 1 93 1 
85 1 175 2 205 1 204 1 314 1 89 1 151 1 103 1 250 1 233 1 104 1 56 1 345 1 213 1 136 1 93 1 59 1 
175 2 3 2 204 1 151 2 103 1 250 1 233 2 104 2 56 1 213 1 136 1 59 1 34 1 85 1 21 1 314 1 89 3 343 1 345 1 219 1 93 2 
34 1 85 1 175 2 21 1 3 2 204 1 314 1 89 3 151 2 250 1 233 2 104 2 343 1 56 1 345 1 213 1 219 1 136 1 93 2 59 1 
71 1 96 1 72 1 175 2 3 1 207 1 177 1 209 1 308 1 56 1 213 1 279 1 136 1 32 1 281 1 59 1 217 1 85 1 36 1 107 1 161 1 89 2 125 1 314 1 64 1 168 1 345 1 262 1 
71 1 96 1 72 1 175 2 3 1 207 1 177 1 209 1 52 1 135 1 308 1 56 1 213 1 136 1 32 1 281 1 59 1 217 1 85 1 36 1 107 1 161 1 89 2 314 1 259 1 64 1 345 1 262 1 
175 2 3 2 204 1 151 2 250 1 233 2 104 2 56 1 213 1 136 1 59 1 34 1 85 1 21 1 314 1 89 3 343 1 295 1 345 1 219 1 93 2 
71 1 96 1 175 2 3 2 204 1 151 2 177 1 209 1 250 1 233 2 104 2 308 1 56 1 337 1 213 1 279 1 136 1 158 1 59 1 281 1 34 1 217 1 85 1 21 1 36 1 107 1 161 1 89 3 125 1 314 1 343 1 168 1 345 1 219 1 262 1 93 2 
175 2 3 2 204 1 351 1 151 1 233 1 56 1 213 1 136 1 59 1 183 1 137 1 360 1 311 1 85 1 36 1 21 1 314 1 89 3 343 1 295 1 345 1 219 1 262 1 93 1 111 1 
350 1 175 2 3 2 4 1 51 1 363 1 89 4 314 1 102 1 54 1 56 1 345 1 192 1 136 1 121 1 59 2 171 1 
340 1 350 1 175 2 3 4 363 2 4 1 51 2 89 8 314 1 102 2 54 1 56 1 345 1 192 2 136 1 121 2 171 2 59 4 
350 1 175 2 3 2 4 1 51 1 363 1 89 4 314 1 102 1 54 1 56 1 345 1 192 1 136 1 121 1 59 2 171 1 
350 1 175 2 3 2 4 1 51 1 363 1 89 4 314 1 102 1 54 1 56 1 345 1 192 1 136 1 121 1 59 2 171 1 
350 1 175 2 3 2 4 1 51 1 363 1 89 4 314 1 102 1 54 1 56 1 345 1 192 1 136 1 121 1 59 2 171 1 
354 1 165 1 153 1 190 1 199 1 49 1 300 1 218 1 156 1 76 1 
249 1 31 1 
41 1 199 1 49 1 300 1 277 1 97 1 218 1 156 1 76 1 
238 1 202 1 
197 1 132 1 157 1 
185 1 323 1 49 1 199 1 300 1 76 1 218 1 354 1 165 1 189 1 153 1 118 1 119 1 244 1 120 1 156 1 194 2 58 1 
185 1 323 1 49 1 199 1 300 1 76 1 218 1 354 1 165 1 189 1 153 1 118 1 119 1 244 1 120 1 156 1 194 2 58 1 
185 1 323 1 49 1 199 1 300 1 76 1 218 1 354 1 165 1 189 1 153 1 118 1 119 1 244 1 120 1 156 1 194 2 58 1 
238 1 202 1 132 1 
238 1 202 1 132 1 
197 1 157 1 
197 1 132 1 157 1 
40 1 84 1 
323 1 70 1 199 1 49 1 300 1 76 1 303 1 249 1 31 1 120 1 156 1 357 1 32 1 184 1 183 2 185 1 137 2 311 2 84 1 36 2 218 1 239 1 40 1 244 1 262 2 194 1 147 1 
71 1 96 2 72 1 175 2 74 1 3 1 229 1 134 1 208 2 209 1 79 1 308 2 56 1 213 1 136 1 281 1 59 1 15 1 137 2 85 1 36 2 107 1 161 2 140 1 314 1 89 2 64 1 295 1 345 1 262 2 223 1 
71 1 96 1 2 1 107 1 161 1 207 1 206 1 62 1 23 1 290 1 209 1 116 1 308 1 281 1 
71 1 96 1 48 1 124 1 2 1 107 1 161 1 99 1 87 1 206 1 305 1 143 2 65 1 212 1 344 1 308 1 11 1 169 1 
71 1 96 2 48 1 124 1 2 1 107 1 161 2 99 1 87 1 206 1 305 1 143 2 65 1 212 1 344 1 308 2 11 1 158 1 169 1 
71 1 96 1 48 1 124 1 107 1 161 1 99 1 87 1 206 1 305 1 7 1 143 2 65 1 344 1 308 1 11 1 169 1 
256 1 
225 1 69 1 173 1 200 1 286 1 141 1 210 1 189 1 368 1 145 1 
69 5 174 1 21 2 204 2 141 3 100 1 272 10 341 2 273 5 274 5 189 5 343 2 219 2 216 5 
323 1 185 1 291 1 189 1 368 1 113 1 
324 1 323 2 69 1 71 1 173 2 96 3 29 1 200 2 201 1 113 3 207 2 209 1 355 1 210 2 116 1 308 3 214 1 282 1 281 1 339 1 185 2 107 1 286 1 161 3 141 2 62 1 291 1 167 2 44 1 
225 1 69 1 189 1 131 1 368 1 145 1 141 1 
264 1 323 1 185 1 69 1 173 1 200 1 113 1 286 1 141 1 291 1 272 1 189 2 210 1 368 1 235 1 216 1 81 1 
225 1 326 2 323 5 130 2 173 4 96 3 1 1 174 3 228 2 101 2 271 2 100 2 272 12 273 6 274 6 179 2 338 1 339 1 281 3 185 5 21 2 107 3 286 4 141 7 108 2 240 1 291 3 341 2 189 8 343 2 145 1 69 8 71 4 200 4 113 5 304 2 204 2 207 1 209 10 355 1 210 4 308 3 214 1 158 1 216 6 217 3 161 3 368 2 167 2 318 3 43 2 219 2 220 1 
323 1 69 3 173 2 200 2 113 1 269 1 204 1 331 1 102 1 272 6 273 4 274 4 210 2 53 1 216 3 340 1 185 1 18 1 21 1 286 2 363 1 141 4 291 1 341 1 316 1 189 4 368 1 343 1 219 1 171 1 
323 1 69 2 172 1 174 1 173 1 200 1 266 1 247 1 351 1 333 1 353 1 210 1 251 1 253 1 280 1 123 1 183 1 185 1 137 1 311 1 139 1 36 1 21 2 286 1 141 2 341 2 262 1 128 1 
71 1 96 1 266 1 175 2 351 2 207 1 177 1 209 1 308 1 56 1 213 1 279 1 136 1 32 1 59 1 281 1 183 2 137 2 311 2 217 1 85 1 36 3 107 1 161 1 89 1 314 1 125 1 365 1 64 1 168 1 345 1 262 3 
69 2 173 1 200 1 267 1 286 1 141 1 272 4 273 2 274 2 210 1 189 4 368 2 167 1 216 2 339 1 
165 1 40 1 199 1 218 1 5 1 
199 1 218 1 352 1 
199 1 218 1 352 1 
199 1 218 1 352 1 
199 1 218 1 22 1 
199 1 218 1 22 1 
199 1 218 1 22 1 
199 1 218 1 
49 1 300 1 
34 2 172 1 247 1 350 1 175 2 21 2 3 5 314 1 89 10 333 2 250 3 104 5 253 2 345 1 56 1 136 1 128 2 59 5 
34 1 350 1 175 2 21 1 3 2 314 1 89 2 104 1 56 1 345 1 219 1 136 1 
34 1 350 1 175 2 21 1 3 2 204 1 314 1 89 3 250 1 104 2 343 1 56 1 345 1 219 1 136 1 59 1 
348 1 34 1 350 1 175 6 3 1 89 3 314 3 25 1 250 1 104 2 253 1 56 3 345 3 215 1 136 3 128 1 59 2 
283 1 33 1 348 1 350 1 175 6 3 1 363 1 89 2 314 3 102 1 56 3 345 3 136 3 171 1 59 1 
340 1 350 1 175 2 3 1 363 1 314 1 89 2 102 1 56 1 345 1 136 1 171 1 59 1 
340 1 33 1 350 1 175 4 3 1 363 1 314 2 89 2 102 1 56 2 345 2 136 2 171 1 59 1 
172 1 350 1 267 1 175 6 3 9 204 2 269 1 331 1 333 1 102 1 250 3 53 1 104 4 253 1 56 3 336 1 136 3 215 1 309 1 59 8 340 1 33 1 34 1 18 1 21 3 363 1 89 17 314 3 343 2 345 3 219 2 128 1 171 1 
340 1 350 1 175 2 3 1 363 1 314 1 89 2 102 1 56 1 345 1 136 1 171 1 59 1 
340 1 350 1 175 2 3 1 363 1 314 1 89 2 102 1 56 1 345 1 136 1 171 1 59 1 
350 1 175 2 3 6 204 2 269 1 331 1 102 1 250 1 53 1 104 2 56 1 136 1 59 4 340 1 18 1 34 1 21 2 363 1 89 10 314 1 343 2 345 1 219 2 171 1 
340 1 33 1 350 1 175 4 3 1 363 1 314 2 89 2 102 1 56 2 345 2 136 2 171 1 59 1 
340 1 348 1 350 1 175 4 3 1 363 1 314 2 89 2 102 1 56 2 345 2 136 2 171 1 59 1 
34 3 172 1 21 1 3 3 89 7 333 1 250 3 104 6 253 3 336 1 128 3 309 2 59 4 
340 1 348 1 350 1 175 4 3 1 363 1 314 2 89 2 102 1 56 2 345 2 136 2 171 1 59 1 
172 1 34 1 267 1 21 1 175 4 3 4 89 8 314 2 333 1 250 2 104 3 253 1 56 2 345 2 336 1 136 2 215 1 128 1 309 1 59 4 
131 1 172 1 267 1 21 1 3 3 89 6 333 1 250 2 104 2 253 1 336 1 128 1 309 1 59 3 
33 1 34 1 175 2 21 1 3 2 204 1 314 1 89 3 250 1 104 2 343 1 56 1 345 1 219 1 136 1 59 1 
102 1 3 1 363 1 89 2 59 1 171 1 
102 1 3 1 89 2 332 1 59 1 171 1 
89 1 59 1 171 1 
102 1 3 1 89 1 
33 1 34 2 175 2 21 1 3 3 204 1 314 1 89 5 100 1 250 2 104 4 343 1 345 1 56 1 219 1 136 1 59 2 
340 1 350 1 175 2 3 1 363 1 314 1 89 2 102 1 56 1 345 1 136 1 171 1 59 1 
172 1 34 1 21 1 3 3 89 6 333 1 250 1 104 2 253 1 128 1 59 3 
34 1 175 2 3 1 89 3 314 1 25 1 250 1 104 2 253 1 56 1 345 1 336 1 128 1 215 1 136 1 309 1 59 2 
296 1 137 1 36 1 319 1 262 1 245 1 32 1 
0 1 296 1 160 1 137 1 284 1 36 1 186 1 241 1 319 1 262 1 245 1 32 1 
255 1 71 1 96 4 258 1 107 1 161 4 207 1 62 1 209 1 116 1 308 4 158 1 281 1 
71 2 96 2 217 1 107 1 161 2 209 1 355 1 8 1 55 1 308 2 180 1 236 1 321 1 281 1 
143 1 71 1 96 1 308 1 11 1 107 1 169 1 161 1 87 1 207 1 
71 1 96 2 74 1 107 1 161 2 140 1 209 1 308 2 344 1 158 1 281 1 
255 1 325 1 71 2 96 5 107 2 161 4 115 1 62 1 207 1 140 1 209 3 355 1 116 1 308 5 158 1 281 2 
14 1 255 1 71 2 96 5 107 2 161 4 115 1 62 1 207 1 140 1 209 3 355 1 116 1 308 5 158 1 281 2 
209 1 71 1 116 1 131 1 96 1 308 1 107 1 161 1 62 1 207 1 281 1 
183 1 137 1 71 1 311 1 96 1 217 1 36 2 107 1 161 1 207 1 125 1 177 1 209 1 334 1 308 1 262 2 32 1 281 1 
71 1 96 1 228 1 306 1 353 2 177 1 334 1 209 3 355 1 308 1 32 1 12 1 281 2 183 1 137 1 82 1 311 1 217 2 36 1 107 1 161 1 125 1 43 1 262 1 
71 1 96 1 228 1 306 1 353 2 177 1 334 1 209 3 52 1 355 1 308 1 32 1 12 1 281 2 183 1 137 1 82 1 311 1 217 2 36 1 107 1 161 1 43 1 262 1 
185 2 323 2 130 1 71 1 96 3 217 1 113 1 258 1 107 1 228 1 161 3 207 1 108 1 209 4 189 1 355 1 368 1 211 1 308 3 318 1 43 1 92 1 281 1 
185 2 323 2 130 1 71 1 96 3 217 1 113 1 258 1 107 1 228 1 161 3 207 1 108 1 271 1 209 4 189 1 355 1 368 1 308 3 318 1 43 1 281 1 
71 1 96 1 327 1 308 1 107 1 161 1 
325 1 71 3 96 7 217 1 327 1 107 2 115 1 161 6 140 1 207 2 208 1 209 3 55 1 344 1 308 7 45 1 236 1 109 1 158 1 338 1 281 2 
172 1 71 1 96 1 267 1 175 4 3 3 333 1 151 1 177 1 209 1 334 1 250 2 233 1 104 2 253 1 308 1 56 2 336 1 213 2 337 1 136 2 279 1 309 1 158 1 32 2 59 3 281 1 183 1 137 1 311 1 217 1 85 2 21 1 36 2 107 1 161 1 39 1 89 6 314 2 125 1 295 1 168 1 345 2 128 1 262 2 93 1 223 1 
225 1 323 3 326 1 69 1 130 1 173 2 96 1 200 2 113 2 207 1 101 1 271 1 209 2 210 2 179 1 308 1 214 1 185 3 161 1 286 2 141 1 108 1 239 1 291 1 189 1 368 1 318 1 145 1 
130 1 71 2 96 2 217 1 327 1 107 1 161 2 240 1 209 2 308 2 158 1 338 1 281 1 
183 1 137 1 71 1 311 1 96 1 217 1 36 2 107 1 161 1 207 1 177 1 209 1 334 1 52 1 308 1 262 2 32 1 281 1 
71 2 96 1 217 1 107 1 161 1 209 1 355 1 55 1 308 1 236 1 109 1 338 1 281 1 
15 1 134 1 137 1 242 1 79 1 36 1 262 1 150 1 181 1 
346 1 150 1 289 1 
242 1 285 1 181 1 150 1 32 1 
60 1 185 2 323 2 82 1 73 1 285 2 150 1 108 1 353 1 306 1 239 1 289 1 242 2 188 1 189 1 368 1 346 1 181 2 32 1 
265 1 91 1 19 1 252 1 57 1 95 1 126 1 
265 1 312 1 35 1 126 4 63 1 307 2 24 1 91 2 292 1 252 1 66 1 57 2 170 1 95 4 
307 1 299 1 265 1 91 1 19 1 252 1 227 1 57 1 95 2 369 1 126 2 
265 1 312 1 19 1 126 3 24 2 91 1 317 1 252 1 57 1 95 3 170 2 
166 1 163 1 63 2 230 2 
297 1 265 1 19 1 252 1 95 1 126 1 
307 1 298 1 265 1 91 1 19 1 252 1 57 1 95 2 126 2 
178 1 
265 1 91 1 19 1 252 1 57 1 95 1 126 1 
91 1 131 1 57 1 
265 1 91 1 252 1 57 1 95 1 126 1 
226 1 117 1 126 1 
265 1 19 1 312 1 126 3 24 1 91 1 294 1 252 1 57 1 95 3 170 2 
307 1 129 1 265 1 91 1 252 1 57 1 95 2 126 2 
265 1 19 1 35 1 77 1 87 1 126 1 63 1 143 1 65 1 252 1 95 1 
265 1 19 1 252 1 57 1 95 1 126 1 
265 1 91 1 19 1 252 1 57 1 95 1 63 1 126 1 
265 2 19 1 349 1 203 1 126 2 252 2 47 1 57 1 95 2 
265 1 298 1 19 1 35 1 126 3 63 1 307 2 142 1 91 1 292 1 252 1 57 1 95 3 
265 1 19 1 124 1 87 1 126 2 307 1 143 2 91 1 65 1 252 1 193 1 11 1 57 1 95 2 
265 2 129 1 19 1 35 1 6 1 126 4 63 1 307 2 91 1 292 1 252 2 57 1 95 4 
307 1 298 1 265 1 91 1 19 1 252 1 57 1 170 1 95 3 126 3 
292 1 35 1 66 1 63 1 
57 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 151 180 296 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 91 157 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) (305,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) (305,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 91 (110,248) 289 204 (77,137) 245 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 91 (19,306) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 91 (110,248) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 91 (110,248) 289 204 (77,137) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (29,32,115,139) (29,32,115,139) (29,32,115,139) 176 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
60 1 189 1 310 1 68 1 168 1 254 1 334 1 237 1 70 1 56 1 61 1 27 1 340 1 269 1 
241 1 
241 1 271 1 189 2 60 2 116 1 227 1 254 1 160 1 
190 1 189 3 60 3 196 1 1 1 180 1 254 2 315 1 296 1 151 1 
241 1 116 1 35 1 
241 1 268 2 313 1 
27 2 340 2 310 2 168 1 237 2 70 2 229 1 56 2 
66 1 127 1 69 2 70 3 71 1 229 1 107 1 56 3 161 1 327 2 184 1 27 2 110 1 28 1 92 1 211 1 43 1 58 2 59 2 44 1 310 2 309 1 168 1 311 1 172 1 237 2 117 2 142 1 118 1 33 1 20 1 243 1 147 1 340 2 319 1 244 1 80 1 
27 1 340 1 310 1 68 1 168 1 237 1 70 1 56 1 269 1 61 1 
153 1 60 1 189 1 273 1 116 1 235 1 70 1 129 1 56 1 241 1 291 1 27 1 260 1 269 1 
153 1 189 2 60 2 273 1 310 1 116 1 235 1 237 1 70 1 56 1 241 1 27 1 340 1 260 1 269 1 
271 1 189 1 60 1 254 1 266 1 
241 1 271 1 189 2 60 2 116 1 227 1 122 1 254 1 
271 1 189 1 60 1 
310 1 237 1 70 2 56 2 229 2 72 1 27 2 340 1 330 1 
216 1 210 1 4 1 
66 1 309 1 117 1 70 1 221 1 142 1 118 1 229 1 56 1 33 1 184 1 110 1 319 1 43 1 58 1 59 1 
216 1 66 1 102 1 309 1 237 1 117 1 70 2 118 1 142 1 33 1 56 2 184 1 27 1 340 1 110 1 224 1 319 1 43 1 58 1 59 1 
229 1 35 1 
102 1 27 3 310 1 340 3 237 3 70 3 229 1 56 3 
27 1 340 1 68 1 237 1 70 1 56 1 269 1 
72 1 27 1 340 1 310 1 237 1 70 1 56 1 269 1 330 1 
66 1 83 1 102 1 153 1 127 1 273 1 69 1 70 4 71 1 229 1 107 1 56 4 161 1 327 2 184 1 27 3 110 1 43 1 260 1 58 1 59 1 330 1 60 1 189 1 310 2 309 1 311 1 168 1 172 1 235 1 237 3 117 1 118 1 142 1 33 1 243 1 147 1 340 3 224 1 319 1 244 1 342 1 80 1 269 1 
102 1 27 2 219 1 340 1 237 1 70 2 129 1 229 1 56 2 
102 2 153 1 189 1 60 1 273 1 310 1 235 1 237 3 70 3 56 3 239 1 241 1 27 3 340 3 224 1 342 1 260 1 269 1 330 1 
216 1 102 1 310 1 237 2 70 2 56 2 27 2 340 2 210 1 330 1 
66 1 309 1 117 1 70 1 142 1 118 1 229 1 56 1 33 1 184 1 110 1 319 1 43 1 58 1 59 1 
66 1 309 1 103 1 117 1 70 1 118 1 229 1 56 1 33 1 19 1 184 1 319 1 43 1 58 1 59 1 
126 1 155 1 127 1 39 1 69 4 228 1 107 2 4 2 161 1 327 2 328 1 162 1 28 2 210 2 185 1 216 2 191 1 312 1 172 1 179 1 243 1 147 1 62 1 80 1 
27 1 223 1 273 1 340 1 237 1 70 1 56 1 269 1 
102 2 307 1 310 1 237 3 70 3 56 3 229 1 27 3 340 3 224 1 269 1 330 1 
223 1 27 2 340 2 68 1 237 2 70 2 56 2 269 1 
36 1 138 1 207 1 
9 1 138 2 343 1 207 2 34 1 270 1 
138 1 207 1 
138 1 207 1 
9 1 34 1 
9 1 34 1 
9 1 34 1 
138 1 133 1 207 1 
138 1 133 1 207 1 
138 1 133 1 207 1 
316 1 138 1 207 1 
316 1 138 1 207 1 
316 1 138 1 207 1 
225 2 76 1 322 2 60 2 189 2 104 1 138 2 324 1 40 2 337 1 207 2 290 3 97 1 87 2 18 1 241 1 197 2 294 1 343 1 
225 1 322 1 53 1 40 1 70 2 2 1 207 1 229 1 87 1 56 2 27 2 230 1 75 1 30 1 134 1 76 1 189 1 60 1 138 1 237 2 290 1 36 1 340 2 123 1 
259 1 101 1 93 1 
114 1 101 1 93 1 
82 1 73 1 218 1 259 2 114 1 93 3 
82 1 73 1 112 1 259 1 114 1 93 2 
82 2 73 1 259 1 114 1 93 2 
126 1 271 1 182 1 1 1 67 1 253 2 227 1 254 4 2 1 208 2 328 1 75 1 304 1 232 1 279 1 190 1 189 5 60 5 287 3 116 1 312 1 313 1 335 2 315 1 241 2 195 2 268 3 62 1 22 1 37 1 123 1 203 1 
126 3 271 6 182 3 1 2 67 2 253 6 254 7 227 1 301 1 130 1 208 6 328 3 304 1 279 1 262 1 189 9 60 9 190 2 287 8 116 1 312 3 313 3 266 5 315 2 241 5 195 6 120 1 196 1 268 9 339 1 62 3 198 1 99 5 37 2 123 4 
126 1 182 1 1 1 67 1 253 2 254 2 208 2 328 1 232 1 190 1 189 3 60 3 287 3 116 1 312 1 313 2 335 1 315 1 241 3 195 2 196 1 268 4 62 1 22 1 37 1 123 1 
126 2 182 2 1 1 67 1 253 4 254 3 301 1 208 4 328 2 232 1 262 1 190 1 189 4 60 4 287 5 116 1 312 2 313 3 335 2 315 1 241 4 195 4 268 7 120 1 196 1 62 2 22 1 37 1 123 2 
174 1 
91 1 35 1 
184 1 33 1 
152 1 184 1 66 1 157 1 91 1 33 1 
167 1 33 1 
184 1 66 1 33 1 
12 1 33 1 
126 3 298 1 158 1 69 15 228 4 107 7 90 1 7 1 28 8 285 1 220 1 136 2 191 5 13 1 171 2 15 2 240 1 222 2 62 3 
126 6 298 1 84 1 127 1 182 3 158 1 69 41 252 1 228 7 107 20 161 1 327 2 328 3 90 7 7 2 28 21 281 1 233 1 188 3 284 1 31 4 285 2 136 2 191 14 13 1 14 1 171 3 312 3 15 3 240 1 17 1 222 3 243 1 147 1 62 6 
126 3 298 1 127 2 69 17 228 5 107 8 161 2 327 4 90 2 7 1 28 9 215 1 285 1 136 2 191 7 13 1 14 1 171 2 15 2 240 1 222 2 243 2 147 2 62 3 81 1 
126 3 298 1 158 1 69 15 228 4 107 7 90 1 7 1 28 8 285 1 136 2 191 5 13 1 171 2 15 2 240 1 222 2 62 3 
126 3 298 1 158 1 69 15 228 4 107 7 90 3 7 1 28 8 285 1 136 2 191 7 13 1 171 2 15 2 240 1 222 2 62 3 
115 1 308 1 139 1 32 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 308 1 139 1 32 1 
41 2 275 1 231 1 29 2 305 1 259 1 43 1 58 1 114 1 59 1 93 2 218 1 331 1 139 2 141 1 332 1 192 1 117 1 336 1 178 1 46 1 194 1 319 1 295 1 101 1 
303 1 
154 2 153 1 299 1 206 1 1 1 67 1 253 2 70 1 5 1 304 1 42 4 43 1 260 1 217 1 264 2 309 2 116 1 313 2 117 2 315 1 119 1 268 2 319 1 125 2 269 1 271 6 181 1 274 1 273 1 226 1 227 3 325 1 129 1 56 1 184 1 27 1 276 1 278 1 280 2 58 2 59 2 60 5 189 5 190 1 287 2 140 2 235 1 236 2 33 1 241 2 291 1 242 2 202 1 345 1 249 1 
153 1 154 1 271 2 274 1 273 1 227 1 70 1 129 1 160 1 56 1 5 1 27 1 276 1 278 1 42 2 260 1 189 3 60 3 235 1 291 1 345 1 269 1 
271 1 153 1 274 1 273 1 227 1 70 1 129 1 160 1 56 1 5 1 27 1 276 1 278 1 42 3 260 1 189 3 60 3 116 1 235 1 291 1 241 1 345 1 269 1 125 1 
153 1 154 1 271 2 274 1 273 1 227 1 70 1 160 1 129 1 56 1 5 1 27 1 276 1 278 1 42 3 280 1 260 1 189 3 60 3 116 1 235 1 291 1 241 1 345 1 269 1 125 1 
154 4 153 1 206 1 1 1 253 1 70 1 160 1 5 1 304 1 42 6 260 1 217 1 10 1 264 2 116 5 313 2 315 1 269 1 125 4 271 7 273 1 274 1 227 3 129 1 56 1 276 1 27 1 278 1 57 1 280 4 60 5 189 5 190 1 287 1 234 1 140 2 235 1 236 2 291 1 241 5 242 2 200 1 201 1 345 1 
153 1 154 2 206 1 1 1 253 1 70 1 5 1 304 1 42 4 260 1 217 1 264 2 116 1 313 2 315 1 268 2 269 1 125 2 271 4 273 1 274 1 226 1 227 2 129 1 56 1 276 1 27 1 278 1 280 2 60 4 189 4 190 1 287 1 140 2 235 1 236 2 291 1 241 2 242 2 345 1 
154 2 271 4 153 1 274 1 273 1 206 1 1 1 253 1 227 2 70 1 129 1 56 1 5 1 27 1 276 1 304 1 278 1 57 1 280 2 42 4 260 1 217 1 264 2 189 4 60 4 190 1 287 1 116 1 234 1 140 2 235 1 313 2 236 2 315 1 241 1 291 1 242 2 201 1 125 2 345 1 269 1 
154 2 271 4 153 1 274 1 273 1 206 1 1 1 253 1 227 2 70 1 129 1 56 1 5 1 27 1 276 1 304 1 278 1 57 1 280 2 42 4 260 1 217 1 264 2 189 4 60 4 190 1 287 1 116 1 234 1 140 2 235 1 313 2 236 2 315 1 241 1 291 1 242 2 201 1 125 2 345 1 269 1 
154 2 271 4 153 1 274 1 273 1 1 1 253 1 227 2 70 1 129 1 56 1 256 2 131 1 5 1 27 1 276 1 304 1 278 1 280 2 42 4 113 1 260 1 283 2 217 1 264 2 189 4 60 4 190 1 287 1 116 1 234 1 235 1 236 2 315 1 241 1 291 1 268 2 38 1 125 2 345 1 269 1 
153 1 154 3 271 5 274 1 273 1 206 1 1 1 253 1 227 2 70 1 129 1 56 1 5 1 27 1 276 1 304 1 278 1 57 1 42 5 280 3 260 1 217 1 264 2 190 1 189 4 60 4 287 1 116 1 234 1 140 2 235 1 313 2 236 2 315 1 241 1 291 1 242 2 200 1 201 1 345 1 269 1 125 3 
153 1 154 3 271 5 274 1 273 1 206 1 1 1 253 1 227 2 70 1 129 1 56 1 5 1 27 1 276 1 304 1 278 1 57 1 42 5 280 3 260 1 217 1 264 2 190 1 189 4 60 4 287 1 116 1 234 1 140 2 235 1 313 2 236 2 315 1 241 1 291 1 242 2 200 1 201 1 345 1 269 1 125 3 
154 2 271 4 153 1 274 1 273 1 1 1 226 1 253 1 227 2 70 1 129 1 56 1 256 2 5 1 131 1 27 1 276 1 304 1 278 1 280 2 42 4 260 1 283 2 217 1 264 2 190 1 189 4 60 4 287 1 116 1 235 1 236 2 315 1 241 1 291 1 268 2 125 2 345 1 269 1 
66 1 102 1 299 1 39 1 69 2 70 1 71 1 107 1 161 2 6 1 43 3 44 1 309 2 166 1 172 2 117 7 20 1 48 1 319 4 320 1 121 1 80 2 181 1 127 2 183 1 86 1 56 1 327 4 184 3 27 1 28 1 282 1 58 7 59 6 286 1 331 1 96 1 237 1 33 4 147 2 243 2 340 1 293 1 247 1 
126 1 127 1 182 1 85 1 69 3 228 1 159 1 70 1 4 1 56 1 107 2 161 1 327 2 27 1 328 1 28 1 210 1 330 1 216 1 191 1 310 1 172 1 312 1 237 1 340 1 243 1 147 1 62 1 80 1 
216 1 127 1 191 1 39 1 69 2 172 1 4 1 161 1 327 2 328 1 90 1 147 1 243 1 162 1 62 1 28 2 210 1 80 1 
216 1 126 1 127 1 191 1 39 1 69 2 228 1 172 1 312 1 4 1 179 1 107 2 161 1 327 2 147 1 243 1 210 1 80 1 
126 1 216 2 127 1 191 2 182 1 39 1 69 4 228 1 312 1 172 1 107 2 4 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 210 2 80 1 
216 1 286 1 127 1 191 1 69 2 172 1 4 1 161 1 327 2 328 1 90 1 147 1 243 1 162 1 62 1 28 2 210 1 80 1 
216 1 126 1 286 1 127 1 191 1 69 2 228 1 172 1 312 1 4 1 179 1 107 2 161 1 327 2 147 1 243 1 210 1 80 1 
126 1 216 2 286 1 127 1 191 2 182 1 69 4 228 1 312 1 172 1 107 2 4 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 210 2 80 1 
126 1 216 2 127 1 191 2 182 1 69 4 228 1 312 1 172 1 107 2 4 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 210 2 80 1 
66 1 127 1 69 2 70 1 71 1 229 1 56 1 107 1 161 1 327 2 184 1 110 1 28 1 43 1 58 1 59 1 44 1 309 1 172 1 117 1 118 1 142 1 33 1 147 1 243 1 319 1 244 1 80 1 
66 1 127 1 103 1 69 2 70 1 71 1 229 1 56 1 107 1 161 1 327 2 184 1 28 1 43 1 58 1 59 1 44 1 309 1 172 1 78 1 117 1 118 1 33 1 19 1 147 1 243 1 319 1 80 1 
126 1 216 2 127 1 191 2 182 1 85 1 69 4 228 1 312 1 172 1 107 2 4 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 210 2 80 1 
126 1 66 1 127 1 182 1 69 4 228 1 70 1 107 2 4 2 56 1 161 1 327 2 184 1 328 1 90 1 110 1 28 2 210 2 43 1 58 1 59 1 216 2 191 2 312 1 172 1 117 1 118 1 142 1 16 1 33 1 147 1 243 1 62 1 319 1 244 1 80 1 247 1 
126 1 127 1 182 1 85 1 69 3 70 1 107 1 56 1 4 1 161 1 327 2 27 1 328 1 90 1 28 2 210 1 330 1 216 1 191 1 310 1 312 1 172 1 237 1 340 1 243 1 147 1 62 1 80 1 344 1 
240 1 327 2 127 1 243 1 147 1 13 1 39 1 172 1 80 1 35 1 161 1 
126 1 127 2 182 2 85 1 69 14 228 1 71 1 229 1 107 6 4 11 161 2 327 4 328 2 90 1 28 8 210 4 213 1 216 11 188 3 44 1 31 3 284 1 191 2 170 1 172 2 312 1 17 1 243 2 147 2 62 2 199 1 149 1 80 1 
66 1 102 1 127 1 85 1 69 2 70 2 71 1 229 1 56 2 107 1 161 1 327 2 184 1 27 1 110 1 28 1 210 1 43 1 58 1 59 1 44 1 309 1 172 1 117 1 237 1 238 1 118 1 142 1 221 1 33 1 147 1 340 1 243 1 224 1 319 1 100 1 80 1 297 1 
102 1 66 2 298 1 105 1 69 28 70 3 71 1 107 14 4 7 161 3 110 2 210 7 43 2 212 1 216 7 44 1 307 1 309 1 13 1 45 2 171 1 172 3 312 2 15 2 117 1 118 2 16 2 222 2 224 1 319 2 80 3 269 1 126 5 127 3 182 2 85 1 228 6 229 3 56 3 327 6 184 2 27 1 328 2 90 1 28 14 58 1 59 1 186 2 136 2 191 7 137 2 237 1 142 2 33 2 240 1 243 3 340 1 147 3 62 5 244 2 
126 3 25 1 127 2 300 1 182 3 54 2 69 19 228 3 107 10 161 2 327 4 209 1 328 3 90 3 132 2 28 9 215 1 188 1 261 1 31 2 284 1 265 1 191 6 169 1 333 1 312 3 17 1 243 2 147 2 62 3 
126 2 51 1 250 1 25 2 127 3 300 1 182 3 54 1 69 26 228 2 302 1 107 12 108 1 161 3 327 6 328 3 90 2 132 4 28 14 215 1 188 2 31 2 265 1 191 4 14 2 169 2 333 1 312 2 17 2 243 3 147 3 62 3 63 1 23 1 
250 1 300 1 69 41 302 1 107 21 108 1 161 3 215 1 261 1 265 1 13 1 14 1 312 4 169 2 171 1 173 1 15 1 17 3 222 1 23 1 126 5 51 1 127 3 25 1 182 4 54 1 228 3 327 6 328 4 90 4 132 4 28 20 188 3 284 1 31 4 136 1 191 7 333 1 240 1 147 3 243 3 62 5 63 1 
250 1 300 1 69 38 302 1 107 18 108 1 161 4 215 1 261 1 265 1 13 1 14 2 312 3 169 2 171 1 173 1 15 1 17 3 222 1 23 1 126 4 51 1 127 4 25 1 182 4 54 1 228 4 327 8 328 4 90 3 132 4 28 20 188 3 284 1 31 4 136 1 191 7 333 1 240 1 147 4 243 4 62 5 63 1 
51 1 126 8 250 1 25 1 127 2 300 1 182 7 54 1 69 52 228 6 302 1 107 25 108 1 161 2 327 4 328 7 90 7 132 4 28 27 213 2 215 1 188 4 31 4 284 2 136 1 265 1 191 13 13 1 14 1 171 1 169 1 333 1 312 7 15 1 240 1 17 2 222 1 243 2 147 2 62 8 63 1 23 1 
225 1 322 1 21 1 138 1 40 1 294 1 343 1 207 1 97 1 87 1 
36 1 230 1 
225 1 322 1 263 1 138 1 40 1 55 1 207 1 124 1 87 1 
76 1 225 1 322 1 60 1 189 1 104 1 138 1 40 1 337 1 207 1 290 2 97 1 87 1 18 1 241 1 197 1 294 1 343 1 
76 1 225 1 322 1 60 1 189 1 104 1 138 1 40 1 337 1 207 1 290 2 97 1 87 1 18 1 241 1 197 1 294 1 343 1 
76 1 225 1 322 1 60 1 189 1 104 1 138 1 40 1 337 1 207 1 290 2 97 1 87 1 18 1 241 1 197 1 294 1 343 1 
135 1 133 1 270 1 
135 1 133 1 270 1 
0 1 316 1 
0 1 316 1 270 1 
53 1 134 1 
225 1 322 1 53 1 26 1 40 1 254 1 70 2 2 1 207 1 229 1 56 2 87 1 230 1 27 2 75 1 30 1 134 1 189 1 60 1 138 1 237 2 290 1 18 1 36 1 197 1 340 2 123 1 
135 1 133 1 
0 1 316 1 270 1 
127 1 85 1 69 2 70 2 255 1 71 1 56 2 107 1 161 1 327 2 184 1 27 2 111 1 277 1 28 1 43 1 58 2 59 2 44 1 172 1 117 2 33 1 143 1 20 2 147 1 292 1 243 1 319 1 320 1 121 1 80 1 
184 1 145 1 272 1 181 1 299 1 146 1 309 1 319 1 141 1 117 1 43 1 58 1 33 1 59 1 
218 1 272 1 11 1 331 1 141 1 117 1 178 1 341 1 319 1 259 1 257 1 43 1 58 1 114 1 295 1 101 1 59 1 93 2 
218 1 272 1 11 1 331 1 141 1 117 2 178 1 341 1 319 1 259 1 257 1 43 1 58 2 114 1 295 1 101 1 59 2 247 1 93 2 
218 1 11 1 331 1 94 1 141 1 117 1 178 1 341 1 319 1 259 1 43 1 58 1 114 1 295 1 101 1 59 1 93 2 
318 1 
190 1 287 1 52 1 1 1 116 1 253 1 315 1 338 1 241 1 304 1 
126 2 287 5 128 1 182 2 95 2 45 1 253 5 312 2 313 5 208 5 241 5 328 2 195 5 268 10 62 2 
241 1 271 1 189 1 60 1 116 1 227 1 
66 1 271 4 299 1 181 1 1 2 67 2 106 1 253 2 227 2 89 2 184 2 6 1 304 1 163 1 43 2 58 4 59 4 190 2 60 3 189 3 287 2 309 2 165 1 96 1 117 4 315 2 33 2 119 1 48 1 196 1 293 1 319 3 202 2 249 1 
338 1 52 1 35 1 
271 1 206 1 1 1 253 1 227 1 304 1 190 1 60 1 189 1 287 1 116 1 140 1 313 1 315 1 241 2 242 1 268 1 
152 1 204 1 271 1 66 1 1 1 67 1 184 1 109 1 304 1 91 1 43 1 58 1 59 1 190 1 287 1 289 1 309 1 167 2 77 1 117 1 315 1 33 3 319 2 245 1 248 1 
51 1 126 2 271 1 250 1 205 1 128 1 182 2 1 2 67 1 253 5 227 1 302 1 208 5 328 2 304 2 188 1 31 1 189 1 60 1 190 2 287 8 95 2 116 2 312 2 313 3 315 2 17 1 241 5 195 5 268 6 62 2 63 1 23 1 246 1 202 1 
126 1 298 1 128 1 1 1 68 1 253 2 70 1 56 1 27 1 304 1 57 1 190 1 189 1 60 1 136 1 287 2 310 1 95 2 168 1 15 1 334 1 237 1 315 1 61 1 222 1 340 1 62 2 269 1 
66 1 127 1 69 1 70 3 71 1 229 1 107 1 56 3 161 1 327 2 184 1 27 2 110 1 43 1 58 1 59 1 309 1 310 2 168 1 311 1 172 1 117 1 237 2 142 1 118 1 33 1 243 1 340 2 147 1 319 1 244 1 80 1 
190 1 287 1 1 1 67 1 116 2 253 2 171 1 313 2 315 1 208 2 241 4 195 2 268 4 304 1 202 1 
187 1 53 1 40 1 294 1 87 1 
40 1 87 1 8 1 
40 1 87 1 8 1 
40 1 87 1 8 1 
40 1 267 1 87 1 
40 1 267 1 87 1 
40 1 267 1 87 1 
40 1 87 1 
138 1 207 1 
126 2 298 1 127 1 136 1 191 5 69 10 228 3 15 2 107 5 161 1 327 2 222 2 90 2 243 1 147 1 62 2 28 5 215 1 
127 1 191 1 69 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 215 1 
126 1 127 1 191 2 182 1 69 4 228 1 312 1 107 2 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 215 1 
261 1 127 3 191 2 323 1 14 1 69 3 228 1 15 1 107 2 161 3 327 6 222 1 90 1 147 3 243 3 28 1 215 1 
126 5 298 1 84 1 127 4 182 2 69 32 252 1 228 5 107 16 326 1 161 4 327 8 328 2 90 4 28 16 233 1 215 1 188 3 31 3 261 1 136 2 191 9 13 1 14 1 171 1 312 2 15 2 240 1 17 1 222 2 243 4 147 4 62 5 
126 3 51 1 298 1 127 1 69 16 228 4 107 8 161 1 327 2 90 1 28 8 215 1 188 1 31 1 136 2 191 5 13 1 171 1 15 2 17 1 240 1 222 2 243 1 147 1 62 3 
126 3 51 1 298 1 127 2 182 1 69 19 228 4 107 9 161 2 326 1 327 4 328 1 90 2 28 10 215 1 188 1 31 2 284 1 136 2 191 6 13 1 171 1 15 2 240 1 17 1 222 2 243 2 147 2 62 4 
51 1 126 5 250 1 298 1 127 3 182 2 69 27 228 5 302 1 107 14 326 1 161 3 327 6 328 2 90 2 28 13 215 1 188 1 31 1 136 2 191 7 13 1 14 1 171 1 312 2 15 2 240 1 17 1 222 2 243 3 147 3 62 5 63 1 23 1 
51 1 126 4 250 1 298 1 127 3 182 2 69 25 228 5 302 1 107 11 326 1 161 3 327 6 328 2 90 4 28 14 215 1 188 1 31 1 136 2 191 9 13 1 14 1 171 1 312 1 15 2 240 1 17 1 222 2 243 3 147 3 62 5 63 1 23 1 
126 3 51 1 298 1 127 1 69 16 228 4 107 8 161 1 327 2 90 1 28 8 215 1 188 1 31 1 136 2 191 5 13 1 171 1 15 2 17 1 240 1 222 2 243 1 147 1 62 3 
51 1 126 2 250 1 127 1 182 2 69 12 228 1 302 1 107 6 161 1 327 2 328 2 90 1 28 6 215 1 188 1 31 1 191 2 312 2 17 1 243 1 147 1 62 2 63 1 23 1 
51 1 126 4 250 1 298 1 127 4 182 2 69 26 228 5 302 1 107 12 326 1 161 4 327 8 328 2 90 2 28 14 215 1 188 1 31 1 136 2 191 7 13 1 14 2 171 1 312 1 15 2 240 1 17 1 222 2 243 4 147 4 62 5 63 1 23 1 
51 1 126 2 250 1 127 4 182 3 69 16 228 3 302 1 107 7 161 4 327 8 328 3 90 3 28 9 215 1 188 1 31 1 261 1 191 6 14 2 312 2 17 1 243 4 147 4 62 3 63 1 23 1 
126 1 136 1 191 6 13 2 69 7 228 3 15 3 107 4 240 1 222 3 90 3 62 1 28 3 
51 1 126 4 250 1 298 1 127 4 182 2 69 26 228 5 302 1 107 12 161 4 327 8 328 2 90 2 28 14 215 1 188 1 31 1 261 1 136 2 191 7 13 1 14 2 171 1 312 1 15 2 240 1 17 1 222 2 243 4 147 4 62 5 63 1 23 1 
126 3 298 1 127 2 69 18 228 4 107 9 161 2 327 4 90 3 28 9 136 2 191 7 13 1 14 1 171 1 15 2 240 1 222 2 243 2 147 2 62 3 
240 1 13 1 35 1 
126 1 127 1 191 2 182 1 69 4 228 1 312 1 107 2 326 1 161 1 327 2 328 1 90 1 147 1 243 1 62 1 28 2 
126 1 188 1 31 2 284 1 182 1 191 2 69 7 228 1 312 1 107 4 17 1 328 1 90 1 62 1 28 3 
126 5 298 1 127 1 182 2 69 26 228 5 107 13 161 1 327 2 328 2 90 2 28 13 213 1 188 2 284 1 31 2 136 2 191 7 13 1 14 1 171 1 312 2 170 1 15 2 240 1 222 2 147 1 243 1 62 5 
31 1 69 1 107 1 
188 1 69 1 28 1 
126 1 127 1 182 1 191 3 45 1 69 6 312 1 228 2 107 3 161 1 326 1 327 2 328 1 90 1 243 1 147 1 62 1 28 3 
51 1 126 2 250 1 127 1 182 2 69 12 228 1 302 1 107 6 161 1 327 2 328 2 90 1 28 6 215 1 188 1 31 1 191 2 312 2 17 1 243 1 147 1 62 2 63 1 23 1 
126 1 136 1 191 2 69 6 228 1 15 1 107 3 222 1 90 1 62 1 28 3 
127 1 191 2 13 1 323 1 14 1 69 3 228 1 15 1 107 2 161 1 327 2 240 1 222 1 90 1 147 1 243 1 28 1 
27 1 219 1 288 1 70 1 129 1 229 1 56 1 
24 1 288 1 219 1 70 1 129 1 229 1 56 1 193 1 47 1 74 1 27 1 258 1 
299 1 181 1 309 1 117 4 33 1 184 1 317 1 64 1 319 1 43 1 58 4 59 4 247 1 
66 1 156 1 96 1 117 2 33 1 89 1 184 1 48 1 6 1 293 1 319 2 43 1 58 2 59 2 
309 1 319 1 117 1 43 1 58 1 114 1 295 1 101 1 59 1 93 1 
184 1 331 1 111 1 319 1 320 1 117 2 43 1 58 2 33 1 59 2 247 1 
181 1 299 1 309 1 166 1 117 5 33 3 86 1 89 1 184 2 317 1 320 1 319 2 43 2 58 5 59 4 247 1 
181 1 299 1 309 1 117 5 33 3 86 1 89 1 184 2 317 1 98 1 320 1 319 2 43 2 58 5 59 4 247 1 
299 1 309 1 117 1 58 1 59 1 35 1 
66 1 102 1 309 1 237 1 117 1 70 2 118 1 229 1 33 1 56 2 184 1 27 1 340 1 110 1 319 1 43 1 58 1 59 1 
102 1 66 2 153 1 273 1 251 1 70 2 229 1 56 2 89 1 184 2 27 2 110 1 43 1 58 1 59 1 12 1 117 1 237 2 118 1 33 3 340 1 319 1 269 1 
102 1 66 2 153 1 273 1 251 1 70 2 229 1 56 2 89 1 184 2 27 2 43 1 58 2 59 2 12 1 117 2 237 2 118 1 33 3 19 1 340 1 64 1 319 1 269 1 
271 1 89 1 189 1 60 1 167 1 91 1 117 1 58 1 33 1 59 1 306 1 
271 1 89 1 189 1 60 1 167 1 91 1 117 1 58 1 33 1 248 1 59 1 
319 1 117 1 282 1 43 1 58 1 59 1 
152 1 66 1 331 1 309 2 166 1 117 6 183 1 86 1 33 3 184 2 48 1 320 1 293 1 319 3 282 1 43 2 58 6 247 1 59 5 321 1 
102 1 66 1 298 1 69 14 70 2 255 1 107 7 4 1 161 2 110 1 210 1 43 1 216 1 307 1 13 1 172 2 171 1 117 1 15 2 118 1 16 1 222 2 319 1 80 2 269 1 126 3 127 2 85 1 228 4 56 2 229 3 327 4 184 1 27 1 90 1 28 7 58 1 59 1 136 2 137 1 191 5 237 1 142 1 33 1 240 1 243 2 340 1 147 2 62 3 244 1 247 1 
204 1 271 1 60 1 189 1 190 1 289 1 309 1 1 1 167 1 77 1 106 1 254 1 117 1 315 1 33 1 304 1 91 1 58 1 248 1 59 1 
152 1 184 1 66 1 109 1 91 1 319 2 117 1 282 1 43 1 58 1 33 1 59 1 
66 1 102 1 309 1 237 1 117 1 70 2 118 1 229 1 33 1 56 2 19 1 184 1 27 1 340 1 319 1 43 1 58 1 59 1 
152 1 66 1 117 1 33 1 89 1 184 1 48 1 293 1 319 2 43 1 58 1 59 1 321 1 
88 1 143 1 27 1 292 1 329 1 277 1 70 1 3 1 56 1 
88 1 314 1 65 1 
88 1 50 1 329 1 3 1 229 1 
153 1 60 2 189 2 273 1 116 1 254 1 235 1 314 1 3 2 229 1 88 1 79 1 241 1 50 2 329 2 342 1 260 1 65 1 269 1 
115 1 139 1 32 1 176 1 
115 1 49 1 139 2 32 1 29 1 41 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
164 1 144 1 214 2 275 2 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
150 1 
115 1 139 1 32 1 176 1 
231 1 336 1 35 1 
115 1 139 1 32 1 
46 1 192 1 41 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 148 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 114 1 93 1 
115 1 139 1 32 1 176 1 
115 1 139 1 32 1 176 1 
49 1 177 1 175 1 275 1 
231 1 275 1 

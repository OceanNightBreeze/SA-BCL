#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (150,249) 307 (169,312) (169,312) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (150,249) 307 (169,312) (169,312) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (150,249) 307 (169,312) (169,312) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (150,249) 307 (169,312) (169,312) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (81,273,304,350) (81,273,304,350) 324 135 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (81,273,304,350) (81,273,304,350) 324 135 245 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (81,273,304,350) (81,273,304,350) 324 135 245 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (15,122,314) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (15,122,314) 274 337 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (15,122,314) 274 12 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 278 (3,80,212) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (15,122,314) (15,122,314) 95 300 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (15,122,314) 274 69 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (81,273,304,350) (81,273,304,350) 324 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (81,273,304,350) (81,273,304,350) 324 166 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
138 1 84 1 307 1 312 1 308 1 273 1 185 1 350 1 169 1 150 1 81 1 
138 1 84 1 307 1 312 1 308 1 273 1 185 1 350 1 169 1 150 1 81 1 
138 1 84 1 307 1 312 1 308 1 273 1 185 1 350 1 169 1 150 1 81 1 
138 1 84 1 307 1 312 1 308 1 273 1 185 1 350 1 169 1 150 1 81 1 
138 1 324 1 135 1 308 1 273 2 350 1 304 1 81 1 
125 1 84 1 280 1 273 2 194 1 185 1 138 1 287 1 41 1 308 2 179 1 234 1 350 1 65 1 81 1 214 1 
138 1 249 1 41 1 308 3 273 3 194 2 234 1 259 1 291 1 185 1 350 2 304 1 81 2 
324 1 135 1 273 7 194 2 60 1 185 1 291 2 304 5 245 1 138 1 257 1 249 1 177 1 308 6 350 2 259 2 81 2 
324 1 135 1 273 7 194 2 60 1 185 1 291 2 304 5 245 1 138 1 257 1 249 1 177 1 308 6 350 2 259 2 81 2 
76 1 224 1 225 1 
189 2 258 1 224 1 
167 1 255 1 267 2 328 2 88 2 289 2 143 2 299 2 
290 1 117 1 255 1 334 1 184 1 5 1 164 1 50 2 275 1 167 1 105 1 74 1 53 1 139 1 143 2 144 1 299 2 35 1 193 1 261 1 281 2 302 1 328 2 13 1 88 3 38 1 243 2 173 1 17 1 175 1 246 1 176 1 114 1 93 1 21 2 267 3 63 1 289 2 133 2 
255 1 74 1 267 1 320 1 265 1 328 1 88 1 289 1 143 1 299 1 
267 1 314 1 88 1 289 1 122 1 279 1 
267 1 314 1 328 1 88 1 289 1 143 1 299 1 
36 1 77 1 4 1 227 1 15 1 
36 1 76 1 224 1 4 1 303 1 227 2 206 1 15 2 
4 1 227 1 15 1 
36 1 255 1 265 1 328 1 88 1 15 1 74 1 320 1 267 1 289 1 227 1 341 1 143 1 299 1 
224 1 
36 1 76 1 148 1 224 1 4 1 227 2 206 1 15 2 
322 1 33 2 83 1 36 2 161 1 239 2 266 1 4 2 15 5 200 1 319 2 76 1 252 1 64 1 129 1 224 1 97 1 227 5 206 1 
167 1 225 1 
263 1 328 1 88 2 211 1 167 2 267 2 289 2 143 1 299 1 
248 1 208 1 61 1 
117 1 290 1 281 1 184 1 13 1 88 1 119 1 164 1 243 1 173 1 50 1 167 1 114 1 267 1 63 1 139 1 
290 1 117 1 281 1 184 1 13 1 209 1 328 1 88 2 164 1 243 1 173 1 50 1 248 1 114 1 178 1 267 2 63 1 139 1 289 1 143 1 
209 2 328 4 88 5 165 1 211 1 167 1 218 1 9 1 267 5 178 1 289 5 279 1 143 4 299 1 
40 1 74 1 267 2 265 1 328 2 88 2 289 2 143 2 
167 1 267 3 209 1 328 3 88 3 289 3 143 3 299 1 
74 1 267 1 265 1 328 1 88 1 289 1 143 1 
211 1 74 1 267 1 263 1 328 1 88 1 289 1 143 1 299 1 
211 1 337 1 267 2 178 1 314 1 328 2 209 1 88 2 289 2 274 1 143 2 299 1 
167 1 218 1 267 2 328 1 209 1 88 2 289 2 279 1 143 1 
12 1 267 1 178 1 314 1 328 1 209 1 88 1 289 1 274 1 143 1 
208 1 209 1 328 2 88 2 211 1 248 1 267 2 289 2 143 2 299 1 
117 1 290 1 281 1 184 1 13 1 88 1 164 1 243 1 50 1 173 1 167 1 114 1 267 1 63 1 139 1 
117 1 290 1 281 1 184 1 13 1 88 1 164 1 243 1 50 1 173 1 167 1 73 1 267 1 63 1 98 1 
182 1 208 1 61 1 5 1 152 1 17 1 275 1 285 1 233 1 248 1 176 2 105 1 21 2 93 1 250 1 202 1 133 2 236 1 144 1 
40 1 74 1 267 1 195 1 328 1 88 1 289 1 143 1 
222 1 80 1 
222 1 80 1 
212 1 278 1 
212 1 278 1 
212 1 278 1 
222 1 345 1 80 1 
222 1 345 1 80 1 
3 1 222 1 80 1 
212 1 222 1 278 1 80 1 
222 1 345 1 80 1 
196 1 222 1 80 1 
196 1 222 1 80 1 
196 1 222 1 80 1 
68 1 70 1 3 1 292 1 25 1 167 1 31 1 108 1 141 1 80 1 143 2 147 1 328 2 86 1 242 1 88 2 15 1 16 1 19 1 267 2 222 1 289 2 227 1 158 1 
272 1 255 1 292 2 26 1 318 1 188 1 295 1 74 1 320 1 31 2 80 2 341 1 143 1 299 1 265 1 328 1 86 2 88 1 242 1 15 2 16 2 19 2 267 1 94 1 222 2 224 1 269 1 289 1 132 1 253 1 227 2 
154 1 125 1 214 1 
125 1 179 1 214 1 
154 2 348 1 330 1 125 3 228 1 179 1 
154 1 348 1 330 1 125 2 179 1 241 1 
154 1 330 1 348 2 125 2 179 1 
182 1 161 2 70 1 4 1 186 1 189 3 319 1 258 1 76 1 108 1 141 1 56 1 82 1 33 1 322 1 36 4 126 2 239 1 346 1 198 2 149 1 15 5 199 1 250 1 268 1 288 1 224 2 129 3 181 2 227 5 206 1 332 1 
182 3 161 6 162 1 4 6 186 2 104 1 189 9 319 2 258 3 76 1 168 1 107 1 77 5 141 4 56 3 82 3 322 1 33 2 83 1 36 7 126 6 239 2 149 2 14 1 15 9 199 1 217 5 250 3 288 3 224 5 129 8 131 1 181 6 227 9 206 1 
182 1 161 2 186 1 189 4 319 1 258 2 76 1 141 1 82 1 56 1 33 1 83 1 36 2 126 2 239 1 198 1 149 1 15 3 250 1 268 1 288 1 224 3 129 3 227 3 181 2 332 1 
182 2 161 4 162 1 186 1 104 1 189 7 319 1 258 3 76 1 141 2 82 2 56 2 33 1 83 1 36 3 126 4 239 1 198 2 149 1 15 4 250 2 268 1 288 2 224 4 129 5 131 1 181 4 227 4 332 1 
203 1 225 1 173 1 
113 1 173 1 
174 1 
290 1 184 1 173 1 
293 1 173 1 
290 1 173 1 
290 1 240 1 184 1 203 2 79 1 173 3 
193 4 120 1 315 1 282 1 62 2 152 2 176 2 201 1 250 1 349 1 202 3 351 1 130 1 44 1 133 6 56 1 116 1 
193 4 120 1 315 1 282 1 62 2 152 2 176 3 201 1 250 1 349 1 202 3 351 1 130 1 44 1 133 7 56 1 116 1 
193 4 120 1 315 1 282 1 62 2 152 2 284 1 176 2 201 1 250 1 349 1 202 3 351 1 130 1 44 1 133 6 56 1 116 1 
182 3 333 3 2 1 120 1 315 2 275 1 51 1 191 1 144 1 82 3 56 6 192 1 323 4 193 21 282 3 62 3 152 9 17 1 286 1 216 1 176 22 93 1 21 2 201 3 349 1 250 6 202 14 351 1 288 3 96 1 226 1 130 5 44 2 133 43 116 2 
315 1 120 1 210 1 275 2 56 1 144 2 193 5 62 2 282 1 152 4 89 1 17 2 176 5 21 4 93 2 201 1 250 1 349 1 202 5 226 1 130 1 133 10 44 1 116 1 
117 1 228 1 273 2 103 1 185 1 50 1 231 1 8 1 138 1 234 1 124 1 140 1 78 1 214 1 81 1 342 1 125 2 194 1 281 1 304 1 243 1 197 1 154 1 92 1 41 1 308 2 179 1 63 1 350 1 331 1 
117 1 228 1 273 3 103 1 185 1 50 1 234 1 124 1 140 1 78 1 214 1 81 1 342 1 125 2 194 1 281 1 304 2 243 1 197 1 153 1 154 1 92 1 41 1 308 3 179 1 220 1 63 1 204 1 350 1 331 1 
117 1 228 1 273 2 103 1 185 1 50 1 234 1 124 1 78 1 214 1 342 1 125 2 194 1 281 1 304 2 243 1 197 1 153 1 154 1 92 1 41 1 308 2 179 1 63 1 204 1 
254 1 117 1 0 1 290 1 46 1 273 1 103 2 185 2 164 1 50 1 124 2 55 1 81 1 281 1 344 1 243 1 173 1 91 1 92 2 308 1 220 1 63 1 350 1 
117 1 228 1 273 1 103 1 185 1 50 1 231 1 138 1 124 1 140 1 78 1 214 1 81 1 342 1 125 2 281 1 243 1 197 1 153 1 154 1 92 1 308 1 179 1 63 1 350 1 331 1 
128 1 
254 1 117 3 290 2 161 1 184 1 4 2 164 2 50 2 335 1 277 1 319 1 171 1 340 1 33 1 322 1 239 1 281 2 243 2 149 1 173 2 15 2 91 1 306 1 63 2 221 1 129 1 353 1 227 2 206 1 
300 1 314 1 301 1 88 1 122 1 15 1 155 1 267 1 95 1 289 1 227 1 279 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
300 1 314 1 301 1 88 1 148 1 4 1 122 1 15 2 155 1 267 1 95 1 289 1 227 2 206 1 279 1 
322 1 33 1 300 1 239 1 314 1 301 1 88 1 122 1 15 1 155 1 319 1 267 1 95 1 289 1 227 1 279 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
155 1 300 1 267 1 314 1 301 1 88 1 95 1 289 1 122 1 227 1 279 1 15 1 
322 1 33 1 300 1 239 1 314 1 301 1 88 1 122 1 15 1 155 1 319 1 267 1 95 1 289 1 227 1 279 1 
208 1 120 1 5 1 275 1 167 2 105 1 236 1 144 1 56 1 193 3 61 1 282 1 62 1 152 1 17 1 248 1 176 2 93 1 21 2 201 1 349 1 250 1 202 1 225 1 44 1 133 5 
333 3 2 1 334 1 208 3 136 1 5 2 275 2 167 1 105 1 144 2 82 3 56 3 145 1 192 2 323 4 193 10 61 12 17 2 90 1 175 1 176 5 20 1 248 12 93 2 21 4 202 2 288 3 130 2 180 1 133 15 
290 1 117 1 1 1 183 1 230 1 208 1 334 1 184 1 209 1 119 1 5 1 164 1 50 1 275 1 167 1 105 1 139 1 143 1 144 1 145 1 193 1 281 1 13 1 328 1 88 2 243 1 173 1 17 1 175 1 114 1 176 1 21 2 93 1 267 2 178 1 63 1 289 1 133 2 
290 1 117 1 334 1 184 1 209 1 5 2 164 1 50 1 232 1 275 2 336 1 29 1 105 2 139 1 143 1 144 2 145 1 281 1 59 1 13 1 328 1 88 2 38 1 243 1 173 1 17 2 114 1 176 1 21 4 93 2 267 2 178 1 63 1 289 1 133 1 
99 1 254 1 117 2 290 2 334 1 209 1 5 2 121 1 164 2 50 7 317 1 8 1 275 2 105 2 30 1 339 1 236 1 143 1 144 2 193 1 281 8 328 1 88 1 243 8 153 1 173 3 17 2 347 1 175 1 246 2 91 1 176 1 93 2 21 4 267 1 63 2 251 1 289 1 133 2 
182 1 229 1 208 1 5 1 275 1 211 1 105 1 143 1 299 1 144 1 82 1 56 1 145 1 193 1 328 1 88 1 61 1 152 1 17 1 248 1 176 2 93 1 21 2 267 1 250 1 202 1 288 1 289 1 133 3 
193 2 208 1 61 1 5 1 17 1 275 1 18 1 248 1 105 1 21 2 93 1 202 1 288 1 130 1 133 2 236 1 144 1 56 1 
182 1 208 1 61 1 5 1 152 1 17 1 275 1 233 1 248 1 176 2 105 1 21 2 93 1 250 1 202 1 133 2 236 1 144 1 
182 1 208 2 5 1 275 1 105 1 236 1 56 1 82 1 144 1 193 2 61 2 152 1 17 1 248 2 176 2 93 1 21 2 250 1 202 2 288 1 130 1 133 4 
193 2 208 1 61 1 5 1 17 1 275 1 18 1 248 1 105 1 21 2 93 1 202 1 288 1 130 1 339 1 133 2 144 1 56 1 
182 1 208 1 61 1 5 1 152 1 17 1 275 1 233 1 248 1 176 2 105 1 21 2 93 1 250 1 202 1 339 1 133 2 144 1 
193 2 208 1 61 1 5 1 17 1 275 1 248 1 105 1 21 2 93 1 202 1 288 1 130 1 339 1 133 2 144 1 82 1 56 1 
193 2 208 1 61 1 5 1 17 1 275 1 248 1 105 1 21 2 93 1 202 1 288 1 130 1 133 2 144 1 82 1 56 1 
290 1 117 1 334 1 184 1 5 1 164 1 50 1 275 1 167 1 105 1 139 1 144 1 193 1 281 1 13 1 88 1 38 1 243 1 173 1 17 1 175 1 114 1 176 1 21 2 93 1 267 1 63 1 133 2 
290 1 117 1 334 1 184 1 5 1 164 1 50 1 275 1 167 1 73 1 105 1 338 1 144 1 193 1 281 1 13 1 88 1 243 1 173 1 17 1 175 1 176 1 21 2 93 1 267 1 63 1 98 1 133 2 
145 1 193 2 208 1 61 1 5 1 17 1 275 1 248 1 105 1 21 2 93 1 202 1 288 1 130 1 133 2 144 1 82 1 56 1 
117 1 290 1 208 1 184 1 5 1 50 1 8 1 275 1 105 1 139 1 56 1 144 1 82 1 193 2 281 1 59 1 13 1 88 1 61 1 38 1 243 1 173 1 17 1 248 1 114 1 21 2 93 1 267 1 63 1 202 1 288 1 130 1 133 2 
207 1 208 1 5 1 275 1 211 1 105 1 143 1 299 1 144 1 82 1 56 1 145 1 193 2 328 1 88 1 61 1 17 1 248 1 93 1 21 2 267 1 202 1 288 1 130 1 289 1 133 2 
310 2 182 3 333 1 2 1 210 1 72 1 123 2 275 2 27 1 276 1 213 1 144 2 82 3 56 3 192 1 109 1 323 2 193 9 112 1 152 3 17 2 176 10 93 2 21 4 250 3 202 6 288 3 130 3 270 1 133 19 
310 1 182 2 333 2 256 1 2 2 102 1 210 1 316 1 123 4 275 3 27 1 276 2 190 1 213 1 144 3 82 3 56 3 323 2 193 14 112 1 152 2 39 1 17 3 176 12 93 3 21 6 250 2 202 4 288 3 226 2 130 2 270 2 133 26 66 1 
182 4 310 1 2 3 47 1 102 1 316 1 275 3 276 2 190 1 56 6 144 3 192 2 109 1 323 5 193 22 112 1 282 1 62 1 152 5 17 3 21 6 201 1 250 5 202 9 288 5 66 1 333 3 256 1 120 1 210 1 123 4 27 1 213 1 82 5 39 1 176 22 93 3 349 1 226 1 130 4 133 44 270 1 44 1 
310 1 182 4 333 3 256 1 47 1 2 3 102 1 120 1 210 1 316 1 123 4 275 4 27 1 276 2 190 1 213 1 144 4 82 5 56 6 192 2 109 1 323 5 193 22 112 1 62 1 282 1 152 6 39 1 17 4 176 22 93 4 21 8 201 1 349 1 250 5 202 9 288 5 226 2 130 3 44 1 66 1 270 1 133 44 
310 1 182 7 333 4 256 1 2 2 102 1 120 1 210 1 316 1 123 4 275 3 27 1 276 1 190 1 213 1 144 3 82 7 56 8 192 2 323 4 193 27 112 1 62 1 282 1 152 9 39 1 17 3 176 27 93 3 21 6 201 1 349 1 250 8 202 16 288 7 226 2 130 7 180 2 44 1 66 1 270 1 133 54 
117 1 290 1 334 1 5 1 121 1 317 1 50 2 275 1 105 1 144 1 145 1 146 1 193 1 326 1 281 2 172 1 88 2 243 2 173 1 17 1 175 1 246 2 176 1 219 1 21 2 93 1 267 2 63 1 289 2 67 1 133 2 
125 2 117 1 228 1 101 1 281 2 103 1 243 2 197 1 153 1 50 2 154 1 8 1 179 1 63 1 223 1 140 1 78 1 205 1 214 1 
125 2 117 1 228 1 101 1 281 1 103 1 243 1 197 1 153 1 50 1 154 1 179 1 63 1 157 1 140 1 78 1 214 1 
254 1 117 1 290 1 46 1 313 1 281 1 103 1 164 1 243 1 173 1 50 1 91 1 63 1 223 1 
125 2 117 1 228 1 101 1 281 1 103 1 243 1 197 1 153 1 50 1 154 1 179 1 63 1 223 1 140 1 78 1 205 1 214 1 
271 1 
161 1 76 1 266 1 129 1 224 1 225 1 97 1 
322 1 33 1 161 1 239 1 4 1 15 1 215 1 137 1 189 1 319 1 258 1 76 1 224 2 129 1 227 1 206 1 260 1 
182 2 184 2 48 2 4 5 50 3 8 1 189 12 319 4 142 1 56 2 322 4 239 4 281 3 240 1 110 2 243 3 149 2 151 2 15 5 113 3 63 2 250 2 203 2 288 2 206 3 159 2 117 3 290 2 161 8 118 1 163 2 71 1 164 1 293 1 294 1 258 6 76 2 32 2 82 2 34 1 33 4 126 6 266 1 264 2 87 1 173 8 221 1 129 9 224 8 97 1 352 2 43 2 227 5 181 6 
182 2 333 1 256 1 161 5 2 1 102 1 4 1 316 1 189 6 190 1 319 2 258 3 75 1 76 2 32 1 82 2 56 2 33 2 322 2 323 1 126 5 239 2 110 2 149 1 15 1 247 1 250 2 221 1 288 2 129 8 224 5 227 1 181 5 206 1 66 1 
161 2 255 1 319 1 74 1 320 1 32 1 341 1 191 1 321 1 143 1 56 2 299 1 33 1 322 1 239 1 265 1 110 2 328 1 88 1 282 1 15 1 267 1 201 1 250 1 129 2 289 1 227 1 44 1 
322 1 33 1 161 1 239 1 266 1 319 1 76 1 224 1 129 1 97 1 
182 2 161 5 126 5 110 2 151 1 189 10 258 5 250 2 288 2 32 1 224 5 129 5 181 5 82 2 56 2 
76 1 224 1 4 1 227 1 15 1 206 1 
254 1 117 3 290 2 161 1 184 1 4 2 164 2 50 2 335 1 277 1 319 1 171 1 340 1 33 1 322 1 34 1 239 1 281 2 243 2 149 1 173 2 15 1 91 1 306 1 63 2 221 1 129 1 353 1 227 1 206 1 
117 1 290 1 255 1 334 1 184 1 5 1 164 1 50 1 275 1 167 1 105 1 53 1 139 1 143 2 144 1 299 2 281 1 328 2 13 1 88 3 38 1 243 1 173 1 17 1 176 1 114 1 93 1 21 2 267 3 63 1 289 2 133 1 
322 1 33 1 126 2 161 2 239 1 110 1 62 1 149 1 189 4 319 1 258 2 76 2 221 1 129 2 224 4 181 2 
343 1 292 1 16 1 
343 1 292 1 16 1 
68 1 325 1 85 1 292 1 16 1 
343 1 292 1 16 1 
156 1 292 1 16 1 
156 1 292 1 16 1 
156 1 292 1 16 1 
292 1 16 1 
222 1 80 1 
193 4 120 1 62 1 282 1 152 1 17 2 275 2 176 3 21 4 93 2 201 1 250 1 349 1 202 2 226 1 130 1 44 1 133 7 56 1 144 2 
193 3 120 1 62 1 282 1 152 1 176 2 201 1 349 1 250 1 202 1 225 1 44 1 133 5 56 1 
182 1 193 2 152 1 17 1 275 1 176 2 21 2 93 1 250 1 202 2 42 1 288 1 130 1 133 4 144 1 82 1 56 1 
192 1 182 1 323 2 333 1 193 3 2 1 152 1 176 4 250 1 202 2 288 1 130 1 133 7 82 1 56 1 
182 2 333 2 120 1 275 2 56 3 82 2 144 2 192 1 237 1 323 2 193 11 62 1 282 2 152 4 17 2 90 1 176 11 21 4 93 2 201 2 349 1 250 3 202 8 288 2 226 2 130 4 180 1 44 1 133 22 
176 1 323 1 133 1 
333 1 193 1 133 1 
182 1 193 3 151 1 152 2 17 1 275 1 176 3 93 1 21 2 250 1 202 3 42 1 288 1 130 1 133 6 144 1 82 1 56 1 
182 2 333 1 256 1 2 1 102 1 210 1 316 1 275 2 190 1 144 2 82 2 56 2 323 1 193 6 152 2 17 2 176 7 93 2 21 4 250 2 202 3 288 2 226 1 130 1 133 13 66 1 
193 3 282 1 152 1 176 3 201 1 250 1 202 2 130 1 44 1 133 6 56 1 
237 1 193 1 120 1 282 1 152 1 17 1 275 1 176 2 21 2 93 1 201 1 349 1 202 2 226 1 130 1 133 3 144 1 
193 5 210 1 282 2 152 3 17 1 275 1 176 5 93 1 21 2 201 2 250 2 202 5 130 2 191 1 133 10 44 1 144 1 56 2 
193 2 210 1 17 1 275 1 21 2 93 1 202 1 288 1 130 1 133 2 144 1 56 1 
182 1 193 2 210 1 152 1 17 1 275 1 176 2 21 2 93 1 250 1 202 2 288 1 130 1 133 4 144 1 82 1 56 1 
237 1 109 1 193 1 210 1 282 1 152 1 17 3 275 3 176 2 21 6 93 3 201 1 202 2 226 1 130 1 133 3 144 3 
182 3 333 3 2 1 120 1 210 1 275 5 144 5 82 3 56 5 192 1 237 1 109 1 323 4 193 16 62 1 282 3 152 6 17 5 216 1 286 1 176 17 93 5 21 10 201 3 349 1 250 5 202 11 96 1 42 1 288 3 226 2 130 5 44 2 133 33 
333 1 256 1 2 1 120 1 210 1 275 1 144 1 82 1 56 2 192 1 323 2 193 6 62 1 282 1 152 1 17 1 176 4 93 1 21 2 201 1 250 1 349 1 202 1 288 1 44 1 133 10 
333 1 256 1 2 1 120 1 210 1 275 2 144 2 82 1 56 2 192 1 323 2 193 6 62 1 282 1 152 1 17 2 176 4 93 2 21 4 201 1 250 1 349 1 202 2 42 1 288 1 130 1 44 1 133 10 
182 2 333 1 256 1 2 1 102 1 120 1 210 1 316 1 275 3 190 1 144 3 82 2 56 3 323 1 193 9 62 1 282 1 152 2 17 3 176 9 93 3 21 6 201 1 349 1 250 3 202 3 42 1 288 2 226 1 130 1 44 1 133 18 66 1 
182 1 333 1 256 1 2 1 102 1 210 1 316 1 275 4 190 1 144 4 82 2 56 2 323 1 193 7 152 2 17 4 176 5 93 4 21 8 250 1 202 3 42 1 288 2 226 2 130 1 133 12 66 1 
333 1 256 1 2 1 120 1 210 1 275 1 144 1 82 1 56 2 192 1 323 2 193 6 62 1 282 1 152 1 17 1 176 4 93 1 21 2 201 1 250 1 349 1 202 1 288 1 44 1 133 10 
182 2 333 1 256 1 2 1 102 1 210 1 316 1 275 2 190 1 144 2 82 2 56 2 323 1 193 6 152 2 17 2 176 7 93 2 21 4 250 2 202 3 288 2 226 1 130 1 133 13 66 1 
182 1 333 1 256 1 2 1 102 1 120 1 210 1 316 1 275 4 190 1 144 4 82 2 56 3 323 1 193 10 62 1 282 1 152 2 17 4 176 7 93 4 21 8 201 1 349 1 250 2 202 4 42 1 288 2 226 2 130 2 44 1 133 17 66 1 
182 2 333 1 256 1 2 1 102 1 210 1 316 1 275 4 190 1 144 4 82 3 56 3 109 1 323 1 193 9 152 3 17 4 176 7 93 4 21 8 250 2 202 6 288 3 226 2 130 3 133 16 66 1 
193 3 120 1 282 3 152 3 176 4 201 3 250 1 349 2 202 6 130 3 133 7 44 1 56 1 
182 1 333 1 256 1 2 1 102 1 120 1 210 1 316 1 275 4 190 1 144 4 82 2 56 3 109 1 323 1 193 10 62 1 282 1 152 2 17 4 176 7 93 4 21 8 201 1 349 1 250 2 202 3 288 2 226 2 130 1 44 1 133 17 66 1 
167 1 218 1 267 1 88 1 289 1 279 1 22 1 
45 1 111 1 88 1 167 1 218 1 267 1 106 1 54 1 289 1 115 1 22 1 279 1 
254 1 91 1 117 1 290 1 63 1 281 1 225 1 243 1 164 1 173 1 50 1 
290 1 117 1 281 1 184 1 13 1 209 1 328 1 88 2 164 1 243 1 173 1 50 1 167 1 267 2 63 1 139 1 289 1 143 1 
117 1 290 2 100 1 184 2 209 1 71 1 293 1 50 1 294 1 167 1 74 2 139 1 143 1 281 1 195 1 302 1 328 2 13 1 88 2 243 1 173 3 267 2 63 1 289 2 
117 1 290 2 100 1 184 2 209 1 71 1 293 1 50 1 294 1 167 1 73 1 74 2 143 1 281 1 195 1 302 1 328 2 13 1 88 2 243 1 173 3 267 2 63 1 289 2 
117 1 290 1 255 1 184 1 4 1 71 1 293 1 50 1 294 1 74 1 320 1 76 1 11 1 341 1 143 1 299 1 281 1 262 1 265 1 328 1 264 1 88 1 243 1 173 4 15 2 113 1 267 1 63 1 203 1 224 1 289 1 227 2 
117 1 290 1 255 1 184 1 4 1 163 1 71 1 293 1 50 1 294 1 74 1 320 1 76 1 341 1 143 1 299 1 281 1 265 1 328 1 264 1 88 1 243 1 173 4 15 2 113 1 267 1 63 1 203 1 224 1 289 1 227 2 
347 1 117 1 63 1 281 1 243 1 50 1 
99 1 290 2 117 3 281 7 240 1 184 1 121 1 164 2 243 7 153 1 50 6 244 1 173 3 335 1 347 1 8 1 246 1 63 2 30 1 251 1 171 1 
290 1 117 1 208 1 184 1 209 1 120 1 5 2 50 1 275 2 8 1 336 1 167 2 105 2 139 1 143 1 56 1 144 2 145 1 193 3 281 1 59 1 13 1 328 1 88 2 61 1 38 1 62 1 282 1 243 1 152 1 173 1 17 2 248 1 176 2 114 1 21 4 93 2 201 1 267 2 250 1 349 1 63 1 202 1 289 1 133 5 44 1 67 1 
161 1 48 1 163 1 4 2 164 1 50 1 319 2 76 1 33 2 322 2 34 1 36 1 239 2 281 1 266 1 264 1 243 1 15 3 173 2 113 1 203 1 129 1 224 1 97 1 352 1 43 1 227 3 206 1 
290 1 117 2 118 1 281 2 240 1 184 1 243 2 50 2 173 2 8 1 347 1 63 1 203 1 
254 1 117 1 290 1 281 4 164 1 243 4 50 4 173 1 8 1 91 1 296 1 309 1 63 1 
290 1 117 2 281 2 184 1 71 1 24 1 243 2 50 2 173 1 335 1 306 1 63 1 171 1 353 1 
125 1 117 1 179 1 63 1 281 1 197 1 243 1 164 1 214 1 50 1 
290 1 117 1 281 2 172 1 243 2 121 1 50 2 153 1 173 1 8 1 63 1 
254 1 99 1 290 2 117 2 281 5 71 1 164 1 243 5 121 1 50 4 173 3 8 1 91 1 309 1 63 2 30 1 
254 1 238 1 290 2 117 2 281 5 71 1 164 1 243 5 121 1 50 4 173 3 8 1 91 1 309 1 63 2 30 1 
290 1 117 1 281 1 184 1 13 1 209 1 328 1 88 2 164 1 243 1 173 1 50 1 167 1 73 1 267 2 63 1 289 1 143 1 
290 1 117 2 281 1 240 1 184 1 71 1 243 1 50 1 244 1 173 1 335 1 63 1 171 1 
167 1 58 1 170 1 49 1 7 1 
311 1 36 1 58 1 23 1 69 1 314 1 170 1 274 1 49 1 227 1 7 1 15 1 
146 1 326 1 88 1 49 1 7 1 219 1 267 1 170 1 289 1 
311 1 69 1 170 1 
41 1 194 1 234 1 225 1 
41 1 308 1 273 1 194 1 234 1 350 1 81 1 
308 1 185 1 124 1 
273 3 194 1 327 1 138 1 305 1 41 1 308 3 234 1 350 1 65 2 81 1 160 1 
324 1 308 1 273 2 350 1 304 1 81 1 
154 1 125 1 138 1 308 1 273 1 194 1 259 1 350 1 214 1 235 1 81 1 
138 1 308 1 273 1 194 1 234 1 350 1 81 1 
138 1 41 1 308 1 273 1 234 2 350 1 81 1 
273 2 194 1 138 1 28 1 308 2 297 1 234 1 350 2 10 1 81 2 
273 3 194 2 60 1 291 1 304 2 138 1 41 1 177 1 308 3 234 1 350 1 259 1 81 1 
125 2 57 1 228 1 273 2 194 1 304 1 154 1 138 1 41 1 179 1 308 2 234 1 350 1 81 1 214 1 
138 1 324 1 166 1 308 1 273 2 350 1 304 1 81 1 
138 1 41 1 308 1 273 1 194 1 234 1 350 1 81 1 
273 4 327 1 194 3 291 1 304 2 41 2 308 4 234 2 350 1 259 1 65 1 298 1 81 1 160 1 
273 2 194 1 127 1 304 1 138 1 329 1 257 1 41 1 308 2 234 1 350 1 81 1 
273 3 327 1 194 1 187 1 138 1 41 1 308 3 234 1 350 1 65 2 81 1 160 2 
194 2 52 1 6 1 134 2 
138 1 308 1 273 1 350 1 37 1 81 1 
138 1 41 1 308 2 273 2 194 1 234 1 60 1 350 1 304 1 81 1 
283 1 
138 1 41 1 308 1 273 1 194 1 234 1 350 1 81 1 
138 1 41 1 308 3 273 3 194 1 234 1 60 1 350 1 65 1 304 1 81 1 
194 1 259 1 291 1 298 1 
194 1 234 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (103,174,242,331) (228,353) (228,353) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (103,174,242,331) (228,353) (228,353) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (103,174,242,331) (228,353) (228,353) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (103,174,242,331) (228,353) (228,353) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 302 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (103,174,242,331) (70,208) (70,208) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (250,255) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (250,255) 139 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (250,255) 139 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 7 244 366 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 73 (163,245,368) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 215 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,160,172,370) (37,160,172,370) (16,179,249) (16,179,249) (16,179,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,160,172,370) (37,160,172,370) (16,179,249) (16,179,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,160,172,370) (37,160,172,370) (16,179,249) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,160,172,370) (37,160,172,370) (16,179,249) (16,179,249) (16,179,249) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 112 14 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 216 264 214 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 216 264 214 12 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 112 14 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 320 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 350 (24,225) (24,225) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (37,160,172,370) (37,160,172,370) 248 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 1 303 1 370 1 353 1 228 1 294 1 255 1 334 1 110 1 37 1 46 1 219 1 363 1 160 1 270 1 
174 1 303 1 370 1 353 1 228 1 255 1 294 1 334 1 110 1 37 1 46 1 219 1 363 1 160 1 270 1 
174 1 303 1 370 1 353 1 228 1 255 1 294 1 334 1 110 1 37 1 46 1 219 1 363 1 160 1 270 1 
174 1 303 1 370 1 353 1 228 1 255 1 294 1 334 1 110 1 37 1 46 1 219 1 363 1 160 1 270 1 
302 1 259 1 303 1 350 1 370 1 272 1 294 1 110 2 37 1 219 1 363 1 160 2 271 1 172 1 
174 1 303 1 370 1 70 1 334 1 134 1 110 1 37 1 219 1 160 1 208 1 270 1 363 1 
370 1 110 1 250 1 37 1 219 1 160 1 
139 1 278 1 370 1 110 2 250 1 37 1 219 1 172 1 160 2 
139 1 278 1 370 1 110 2 250 1 37 1 219 1 172 1 160 2 
88 1 61 1 320 1 
176 1 88 1 218 2 
8 2 335 1 262 2 306 2 275 1 4 2 362 2 257 2 
48 1 260 1 1 2 262 3 100 2 306 2 102 1 4 3 104 1 105 1 332 1 292 1 8 2 35 1 211 1 335 1 108 1 336 1 361 1 217 1 251 1 362 2 11 1 87 1 152 1 369 1 275 1 155 1 257 2 69 1 298 1 20 2 280 1 25 1 158 2 94 2 96 1 
8 1 335 1 262 1 372 1 306 1 4 1 142 1 362 1 106 1 257 1 
262 2 306 1 4 2 356 1 142 2 106 1 358 1 247 1 8 1 335 1 216 1 61 1 362 1 85 1 88 1 372 1 315 1 257 2 277 1 156 1 281 1 
262 2 306 2 4 2 142 2 106 1 247 1 8 2 358 2 335 1 61 1 362 2 85 2 88 1 372 1 315 1 257 2 277 1 156 1 281 1 
358 1 85 1 236 1 122 1 45 1 
358 2 85 2 236 1 88 1 61 1 45 1 5 1 120 1 
358 1 85 1 236 1 
85 1 372 1 262 1 306 1 4 1 142 1 106 1 257 1 358 1 8 1 335 1 281 1 45 1 362 1 
88 1 
358 2 85 2 236 1 88 1 263 1 61 1 45 1 120 1 
366 1 358 3 85 3 22 1 166 1 45 2 244 1 319 1 7 1 63 1 
275 1 320 1 
348 1 262 2 306 1 123 1 4 2 275 2 257 2 8 1 362 1 
57 1 9 1 119 1 
152 1 369 1 1 1 262 1 100 1 102 1 275 1 4 1 105 1 79 1 69 1 211 1 108 1 25 1 94 1 96 1 
252 1 369 1 152 1 1 1 262 2 100 1 306 1 102 1 4 2 105 1 318 1 257 1 69 1 211 1 8 1 108 1 25 1 119 1 94 1 96 1 
8 3 262 3 306 3 275 1 4 3 362 1 318 1 257 3 
8 1 262 1 306 1 4 1 142 1 106 1 257 1 
8 1 348 1 262 1 306 1 123 1 4 1 142 1 362 1 257 1 
48 1 1 1 100 1 102 1 4 4 142 2 104 1 105 1 332 1 292 1 247 1 8 3 335 1 108 1 192 1 251 1 252 1 152 1 293 1 200 1 69 1 257 3 298 1 20 1 156 1 25 1 158 2 262 4 306 3 123 1 358 1 211 1 361 1 217 1 362 2 85 1 369 1 87 1 315 1 275 1 318 1 277 1 280 1 94 1 96 1 
8 1 262 2 306 1 216 1 275 1 4 2 318 1 264 1 257 2 
85 1 252 1 88 1 262 3 293 1 306 3 315 1 123 1 4 3 142 1 318 2 257 3 277 1 358 1 247 1 8 3 322 1 156 1 362 1 
262 2 306 2 123 1 4 2 318 1 257 2 8 2 57 1 362 1 119 1 
152 1 369 1 1 1 262 1 100 1 102 1 275 1 4 1 105 1 69 1 211 1 108 1 25 1 94 1 96 1 
369 1 1 1 262 1 100 1 102 1 275 1 4 1 105 1 69 1 133 1 211 1 109 1 25 1 94 1 96 1 
48 1 75 1 175 1 87 2 313 1 162 1 114 1 329 1 78 1 17 1 332 1 298 1 57 2 20 4 280 1 9 2 361 1 158 2 119 2 251 1 299 1 194 1 11 2 196 1 
8 1 226 1 262 1 315 1 306 1 4 1 142 1 257 1 
365 1 8 4 252 1 304 1 262 5 306 4 216 1 123 1 275 1 4 5 362 1 318 2 264 1 257 5 
8 2 226 1 262 2 306 2 4 2 142 1 106 1 257 2 
153 1 163 1 
153 1 163 1 
368 1 73 1 
368 1 73 1 
368 1 73 1 
153 1 163 1 354 1 
153 1 163 1 245 1 
368 1 153 1 73 1 163 1 
153 1 163 1 354 1 
153 1 163 1 354 1 
18 1 153 1 163 1 
18 1 153 1 163 1 
18 1 153 1 163 1 
85 2 113 1 186 1 261 2 153 2 99 1 88 1 371 2 163 2 273 1 2 2 180 1 202 2 168 3 358 2 213 1 310 1 21 2 380 1 
261 1 29 1 262 2 306 2 163 1 2 1 4 2 107 1 245 1 168 1 8 2 358 1 213 1 360 1 83 1 85 1 153 1 129 1 275 1 89 1 202 1 257 2 375 1 21 1 
303 1 294 1 363 1 
303 1 134 1 363 1 
265 1 303 3 134 1 378 1 294 2 276 1 
303 2 134 1 378 1 294 1 276 1 13 1 
303 2 134 1 378 2 294 1 276 1 
236 1 287 1 305 2 162 1 289 3 329 1 358 5 212 1 83 1 61 1 194 1 218 3 63 1 85 5 15 1 176 1 88 2 129 1 114 1 199 1 67 1 89 1 154 1 319 1 321 2 117 2 71 2 72 1 22 1 93 1 45 4 207 1 120 1 
287 2 236 6 289 8 329 3 333 1 60 5 61 1 194 3 63 2 15 2 64 1 114 3 199 3 67 1 203 1 117 6 71 6 72 1 22 2 120 1 209 1 210 1 76 1 162 3 122 5 166 1 358 9 212 3 170 1 218 9 85 9 176 3 88 5 129 4 319 2 321 6 45 7 
287 1 305 1 289 3 162 1 166 1 329 1 333 1 358 3 212 1 61 1 194 1 218 4 63 1 85 3 15 1 176 2 88 3 129 1 114 1 199 1 319 1 117 2 321 2 71 2 22 1 93 1 45 2 207 1 
210 1 287 1 305 2 289 5 162 2 166 1 329 2 333 1 358 4 170 1 212 2 61 1 194 2 218 7 63 1 85 4 15 1 176 3 88 4 129 2 114 2 199 2 319 1 203 1 321 4 117 4 71 4 22 1 93 1 45 3 207 1 
222 1 96 1 320 1 
81 1 96 1 
232 1 
102 1 96 1 
222 2 25 1 102 1 140 1 148 1 96 3 
25 1 102 1 96 1 
224 1 96 1 
86 1 326 1 351 1 340 1 313 3 238 1 130 1 316 1 267 1 220 1 196 2 
86 1 326 1 87 1 351 1 340 1 313 3 238 1 130 1 316 1 20 1 267 1 220 1 196 2 
86 1 326 1 351 1 340 1 313 3 238 1 130 1 316 1 311 1 267 1 220 1 196 2 
28 1 48 1 97 1 326 1 349 3 351 3 162 2 238 2 239 1 141 1 31 1 329 2 330 3 332 1 145 1 212 2 267 2 361 1 194 2 220 2 11 9 196 5 86 1 87 11 340 1 313 8 114 2 130 2 316 2 298 1 20 20 158 2 
298 1 91 1 48 1 20 1 87 1 313 1 267 1 215 1 130 1 158 2 361 1 316 1 332 1 196 1 
303 2 286 1 1 1 327 1 352 1 100 1 52 1 3 1 33 1 307 1 211 1 265 1 249 1 110 1 37 1 219 1 172 1 363 1 270 1 369 1 370 1 294 1 16 1 179 1 134 1 94 1 160 2 
303 2 286 1 1 1 327 1 352 1 100 1 3 1 33 1 307 1 211 1 265 1 110 2 37 1 363 1 270 1 172 2 369 1 370 1 65 1 294 1 16 1 179 1 376 1 19 1 134 1 94 1 160 3 
303 2 286 1 369 1 65 1 1 1 352 1 100 1 294 1 3 1 307 1 179 1 33 1 211 1 265 1 19 1 134 1 110 1 94 1 363 1 172 2 160 2 270 1 
286 2 369 1 187 1 370 1 1 1 100 1 102 1 3 2 115 1 33 2 376 1 69 1 211 1 110 1 191 1 23 1 147 1 37 1 94 1 27 1 270 2 160 1 96 1 
303 2 286 1 1 1 327 1 352 1 100 1 3 1 33 1 307 1 211 1 265 1 249 1 110 1 37 1 219 1 172 1 363 1 270 1 369 1 370 1 294 1 16 1 179 1 19 1 134 1 94 1 160 2 
288 1 
183 1 0 1 236 6 287 1 1 2 98 1 50 2 289 2 100 2 102 1 53 2 4 1 142 1 247 1 147 1 61 2 63 1 339 2 198 1 254 1 115 1 68 2 69 2 257 1 117 2 72 1 156 1 22 1 120 3 262 1 356 1 32 1 358 5 211 1 171 2 216 1 125 1 218 2 39 2 85 5 126 1 176 2 369 1 88 3 229 1 315 1 374 2 319 1 277 1 231 1 182 1 324 4 94 2 137 1 96 1 
236 2 262 1 263 1 4 1 356 1 142 1 358 3 247 1 216 1 61 2 125 1 85 3 198 1 88 2 254 1 315 1 68 1 257 1 277 1 231 1 156 1 182 1 324 2 120 1 
85 2 198 1 88 2 50 1 254 1 262 1 315 1 356 1 4 1 142 1 257 1 277 1 247 1 358 2 231 1 156 1 182 1 216 1 61 2 324 3 125 1 
236 2 50 1 262 1 263 1 4 1 356 1 53 1 142 1 358 3 247 1 216 1 61 2 125 1 85 3 198 1 88 2 254 1 315 1 68 1 257 1 277 1 231 1 156 1 182 1 324 3 120 1 
183 1 47 1 236 7 98 1 50 3 289 1 189 1 4 2 53 4 142 2 106 1 8 1 247 1 335 1 61 4 63 1 339 2 198 1 254 1 68 4 257 2 117 1 156 1 72 1 22 1 120 3 262 2 306 1 263 1 356 1 357 1 358 5 171 2 216 1 125 1 362 1 39 2 85 5 176 2 88 4 372 1 315 1 374 2 317 1 319 1 277 1 231 1 182 1 281 1 282 1 324 5 
183 1 0 1 236 4 98 1 50 2 289 1 4 1 53 2 142 1 247 1 61 3 63 1 339 2 198 1 254 1 68 2 257 1 117 1 156 1 72 1 22 1 120 2 262 1 356 1 358 4 171 2 216 1 125 1 218 2 39 2 85 4 176 2 88 4 315 1 374 2 319 1 277 1 231 1 182 1 324 4 
183 1 47 1 236 4 98 1 50 2 289 1 262 1 189 1 53 2 4 1 356 1 142 1 357 1 358 4 247 1 171 2 216 1 61 3 125 1 39 2 63 1 339 2 85 4 176 2 198 1 88 3 254 1 315 1 374 2 68 2 319 1 257 1 277 1 117 1 231 1 156 1 72 1 22 1 182 1 324 4 120 2 
183 1 47 1 236 4 98 1 50 2 289 1 262 1 189 1 53 2 4 1 356 1 142 1 357 1 358 4 247 1 171 2 216 1 61 3 125 1 39 2 63 1 339 2 85 4 176 2 198 1 88 3 254 1 315 1 374 2 68 2 319 1 257 1 277 1 117 1 231 1 156 1 72 1 22 1 182 1 324 4 120 2 
183 1 236 4 50 2 289 1 262 1 53 2 4 1 356 1 142 1 357 1 358 4 247 1 190 1 171 2 216 1 61 3 125 1 218 2 10 2 39 2 63 1 85 4 198 1 88 3 254 1 315 1 131 1 68 2 296 1 319 1 257 1 277 1 117 1 231 1 156 1 72 1 22 1 182 1 206 2 324 4 120 2 
183 1 47 1 236 5 98 1 50 3 289 1 262 1 189 1 4 1 356 1 53 3 142 1 357 1 358 4 247 1 171 2 216 1 61 3 125 1 39 2 63 1 339 2 85 4 176 2 198 1 88 3 254 1 315 1 374 2 317 1 68 3 319 1 257 1 277 1 117 1 231 1 72 1 156 1 22 1 182 1 324 5 120 2 
183 1 47 1 236 5 98 1 50 3 289 1 262 1 189 1 4 1 356 1 53 3 142 1 357 1 358 4 247 1 171 2 216 1 61 3 125 1 39 2 63 1 339 2 85 4 176 2 198 1 88 3 254 1 315 1 374 2 317 1 68 3 319 1 257 1 277 1 117 1 231 1 72 1 156 1 22 1 182 1 324 5 120 2 
183 1 0 1 236 4 50 2 289 1 262 1 53 2 356 1 4 1 142 1 358 4 247 1 190 1 171 2 216 1 61 3 125 1 218 2 10 2 39 2 63 1 85 4 198 1 88 3 254 1 315 1 68 2 319 1 257 1 277 1 117 1 231 1 72 1 156 1 182 1 22 1 206 2 324 4 120 2 
48 1 86 1 326 1 313 1 238 1 78 1 332 1 320 1 298 1 280 1 361 1 158 2 251 1 220 1 196 1 
48 2 349 3 351 1 162 2 30 1 141 1 329 2 330 3 332 2 292 1 212 2 57 4 361 2 9 11 251 1 194 1 269 1 11 8 196 1 87 6 313 2 114 1 295 1 275 1 42 1 155 1 298 2 377 1 20 14 279 1 280 2 158 4 119 11 
48 1 262 1 306 1 4 1 142 1 332 1 292 1 8 1 57 1 192 1 361 1 251 1 11 1 173 1 252 1 87 1 177 1 275 1 42 1 318 1 155 1 257 1 298 1 20 2 280 1 158 2 74 1 
48 3 326 1 1 3 100 3 238 1 102 2 4 3 329 2 104 2 241 2 105 2 332 3 292 1 8 1 108 2 57 6 58 2 9 6 251 3 194 2 11 7 196 3 252 1 152 2 151 2 114 2 155 1 69 1 257 1 298 3 19 1 20 14 118 1 25 2 158 6 119 6 351 4 262 3 162 2 306 1 211 2 212 2 124 1 361 3 220 1 86 1 87 7 369 2 313 7 42 1 318 1 181 1 44 2 280 3 94 3 96 2 
48 2 1 7 52 1 262 1 100 7 306 1 102 3 78 1 4 1 291 1 332 2 292 1 8 1 211 3 359 1 336 2 147 1 361 2 251 2 337 1 11 1 112 1 364 1 369 4 87 1 341 1 274 1 115 1 318 1 155 1 257 1 132 1 69 2 297 1 298 2 19 1 20 2 205 1 280 2 25 1 158 4 94 6 96 4 
48 1 262 1 162 1 306 1 123 1 4 1 329 1 332 1 8 1 212 1 57 1 9 1 361 1 362 1 251 1 194 1 11 1 196 1 87 2 313 1 114 1 42 1 257 1 298 1 20 3 280 1 158 2 119 1 284 1 
48 1 351 1 313 1 162 1 78 1 329 1 17 1 332 1 298 1 57 1 20 2 280 1 9 1 361 1 158 2 119 1 251 1 11 2 
48 1 87 2 313 1 114 1 78 1 332 1 298 1 57 1 20 2 280 1 9 1 361 1 158 2 119 1 251 1 299 1 194 1 196 1 
48 1 87 2 351 1 313 2 162 1 114 1 78 1 329 1 332 1 298 1 212 1 57 2 20 4 280 1 9 2 361 1 158 2 194 1 119 2 251 1 11 2 196 1 
48 1 351 1 313 1 162 1 329 1 17 1 332 1 298 1 57 1 20 2 280 1 9 1 361 1 158 2 119 1 251 1 337 1 11 2 
48 1 87 2 313 1 114 1 332 1 298 1 57 1 20 2 280 1 9 1 361 1 158 2 119 1 251 1 299 1 194 1 337 1 196 1 
48 1 87 2 351 1 313 2 162 1 114 1 329 1 332 1 298 1 212 1 57 2 20 4 280 1 9 2 361 1 158 2 194 1 119 2 251 1 337 1 11 2 196 1 
48 1 87 2 351 1 313 2 162 1 114 1 329 1 332 1 298 1 212 1 57 2 20 4 280 1 9 2 361 1 158 2 194 1 119 2 251 1 11 2 196 1 
48 1 1 1 100 1 262 1 102 1 4 1 104 1 105 1 332 1 292 1 211 1 108 1 361 1 251 1 11 1 369 1 152 1 87 1 275 1 155 1 69 1 298 1 20 2 280 1 25 1 158 2 94 1 96 1 
369 1 1 1 262 1 100 1 102 1 4 1 167 1 105 1 69 1 133 1 211 1 109 1 25 1 94 1 96 1 
48 1 87 2 351 1 313 2 162 1 114 1 329 1 42 1 332 1 298 1 212 1 57 2 20 4 280 1 9 2 361 1 158 2 194 1 119 2 251 1 11 2 196 1 
48 1 351 1 1 1 162 1 100 1 52 1 262 1 102 1 329 1 4 1 104 1 105 1 332 1 211 1 212 1 57 2 108 1 9 2 361 1 194 1 251 1 11 2 196 1 87 2 369 1 152 1 313 2 114 1 44 1 298 1 20 4 280 1 25 1 158 2 119 2 94 1 96 1 
48 1 351 1 262 1 162 1 306 1 123 1 4 1 329 1 332 1 8 1 212 1 57 1 361 1 9 1 193 1 194 1 362 1 251 1 11 2 87 1 313 1 114 1 42 1 257 1 298 1 20 3 280 1 158 2 119 1 
48 2 349 2 351 3 162 3 141 1 329 3 330 1 332 2 212 3 82 1 361 2 194 3 195 1 62 1 11 9 196 3 197 1 128 2 127 1 87 10 313 6 114 3 201 1 230 2 298 2 91 1 20 19 279 1 158 4 159 1 
48 3 285 1 349 2 351 2 328 1 162 3 239 2 141 2 329 3 330 2 54 1 332 3 212 3 82 2 146 1 361 3 194 2 195 1 62 2 11 14 196 2 128 4 127 1 87 12 313 4 114 2 201 1 230 1 298 3 91 1 20 26 158 6 345 1 26 1 
48 3 285 1 326 1 349 4 351 4 328 1 162 4 238 1 239 1 240 1 141 3 329 4 330 3 54 1 332 3 212 4 82 1 146 1 361 3 194 4 195 1 220 1 62 2 11 17 196 3 197 1 128 4 127 1 86 1 87 19 313 7 114 4 201 1 230 1 298 3 91 1 20 36 279 1 158 6 26 1 345 1 
48 4 285 1 326 1 349 4 351 3 328 1 162 4 238 1 239 2 240 1 141 3 329 4 330 3 54 1 332 4 212 4 82 1 146 1 361 4 194 3 195 1 220 1 62 2 11 17 196 4 197 1 128 4 127 1 86 1 87 16 313 7 114 3 201 1 230 1 298 4 91 1 20 33 279 1 158 8 26 1 345 1 
48 2 285 1 326 1 349 4 351 7 328 1 162 7 238 1 239 1 141 2 329 7 330 4 54 1 332 2 212 7 82 1 146 1 361 2 194 7 195 1 220 1 62 1 11 24 196 6 128 4 127 1 86 1 87 23 313 13 114 7 295 2 201 1 230 1 298 2 91 1 20 47 279 2 158 4 26 1 345 1 
186 1 323 1 21 1 153 1 261 1 99 1 163 1 273 1 2 1 202 1 
107 1 245 1 
55 1 21 1 153 1 261 1 163 1 164 1 157 1 2 1 202 1 
85 1 113 1 186 1 261 1 153 1 99 1 88 1 371 1 163 1 273 1 2 1 180 1 202 1 168 2 358 1 213 1 21 1 380 1 
85 1 113 1 186 1 261 1 153 1 99 1 88 1 371 1 163 1 273 1 2 1 180 1 202 1 168 2 358 1 213 1 21 1 380 1 
85 1 113 1 186 1 261 1 153 1 99 1 88 1 371 1 163 1 273 1 2 1 180 1 202 1 168 2 358 1 213 1 21 1 380 1 
354 1 149 1 309 1 
354 1 149 1 309 1 
144 1 18 1 
144 1 18 1 149 1 
360 1 375 1 
261 1 29 1 262 2 163 1 306 2 2 1 4 2 107 1 245 1 168 1 358 1 8 2 360 1 83 1 113 1 85 1 153 1 371 1 129 1 275 1 89 1 202 1 375 1 257 2 21 1 379 1 45 1 
354 1 309 1 
144 1 18 1 149 1 
48 1 1 2 100 2 262 2 4 2 34 1 332 1 292 1 336 2 361 1 251 1 11 1 112 1 14 1 223 1 87 1 341 1 42 1 155 1 257 2 343 1 298 1 20 2 280 1 158 2 94 2 136 1 
303 2 286 1 369 1 1 2 327 1 352 1 100 2 52 1 294 1 307 1 246 1 211 1 265 1 19 1 134 1 268 1 94 2 135 1 363 1 
303 2 286 1 369 1 1 1 327 1 352 1 100 1 294 1 307 1 211 1 265 1 19 1 134 1 268 1 111 1 94 1 363 1 
286 1 369 1 1 1 187 1 100 1 102 1 178 1 115 1 69 1 211 1 147 1 94 1 135 1 96 1 
303 2 286 1 369 1 1 1 327 1 352 1 100 1 294 1 307 1 246 1 211 1 265 1 19 1 134 1 268 1 94 1 135 1 363 1 
188 1 
117 1 88 1 59 1 289 1 61 1 66 1 320 1 
236 1 98 1 289 1 358 1 61 1 218 1 63 1 339 1 85 1 176 1 88 2 374 1 319 1 117 1 72 1 22 1 120 1 
161 1 236 2 287 1 1 1 100 1 289 1 237 1 355 1 102 1 308 1 358 2 247 1 211 1 81 2 148 1 63 2 85 2 222 1 369 2 43 1 319 2 69 1 204 1 72 2 22 2 25 1 283 1 94 1 120 1 96 4 
287 1 236 1 349 1 328 1 289 8 162 2 141 1 329 2 330 1 243 1 143 1 54 1 333 1 358 1 212 2 146 1 61 2 218 6 194 2 63 2 85 1 176 3 88 5 114 2 199 2 319 2 321 5 117 5 71 5 72 2 22 2 345 1 26 1 137 1 120 1 
184 1 262 1 162 2 289 2 238 1 306 1 189 1 4 1 142 1 106 1 6 1 333 1 358 1 8 1 335 1 362 1 220 1 63 1 85 1 372 1 114 1 199 2 319 1 257 1 117 2 72 1 22 1 281 1 
88 1 289 1 66 1 319 1 117 1 59 1 72 1 22 1 61 1 63 1 
176 2 88 2 289 2 162 1 114 1 199 1 329 1 333 1 117 2 321 2 212 1 71 2 218 4 194 1 
358 1 85 1 236 1 88 1 61 1 120 1 
287 2 236 4 1 4 100 4 289 2 102 1 166 1 290 2 32 1 169 1 211 1 358 3 147 1 63 2 85 3 369 1 229 1 115 1 319 2 69 2 117 2 72 1 22 2 233 1 94 4 300 1 137 2 120 2 96 1 
48 1 1 1 100 1 262 3 306 2 102 1 4 3 104 1 105 1 332 1 292 1 8 2 211 1 335 1 108 1 361 1 217 1 362 2 251 1 87 1 152 1 369 1 275 1 69 1 257 2 298 1 20 1 280 1 25 1 158 2 94 1 96 1 
287 1 289 2 267 1 61 1 218 4 63 1 176 2 88 3 199 1 319 1 117 1 321 2 71 2 72 1 22 1 137 1 
21 1 77 1 2 1 
186 1 21 1 2 1 301 1 375 1 
21 1 77 1 2 1 
21 1 77 1 2 1 
367 1 21 1 2 1 
367 1 21 1 2 1 
367 1 21 1 2 1 
21 1 2 1 
153 1 163 1 
48 2 86 1 87 1 326 1 351 1 313 2 238 1 239 1 332 2 298 2 20 2 361 2 158 4 220 1 11 1 196 1 
86 1 326 1 313 1 238 1 220 1 196 1 320 1 
48 1 87 2 351 1 313 2 314 1 162 1 114 1 329 1 332 1 298 1 212 1 20 4 361 1 158 2 194 1 11 2 196 1 
349 2 87 4 351 1 313 2 162 1 114 1 141 1 329 1 330 1 212 1 20 7 279 1 194 1 11 3 196 1 
184 1 48 2 326 1 349 2 351 5 162 3 238 4 101 1 239 2 329 2 330 2 6 1 332 2 212 2 267 1 361 2 194 2 220 4 11 12 196 6 86 1 87 14 313 11 114 3 295 1 298 2 377 1 20 26 279 1 158 4 
20 1 87 1 349 1 
20 1 330 1 11 1 
48 1 151 1 87 3 351 1 313 3 314 1 162 1 114 1 329 1 332 1 298 1 212 1 20 6 158 2 361 1 194 1 11 3 196 2 
48 1 349 1 351 1 162 2 328 1 141 1 329 2 330 1 332 1 54 1 212 2 146 1 361 1 194 2 11 6 196 1 87 6 313 2 114 2 298 1 91 1 20 12 158 2 345 1 26 1 
184 1 87 3 351 1 313 2 162 1 114 1 238 1 20 6 220 1 11 3 196 1 
184 1 48 1 326 1 351 3 162 1 101 1 238 3 239 1 6 1 332 1 267 1 361 1 220 3 11 5 196 4 86 1 87 7 313 7 114 1 298 1 20 12 158 2 
184 1 48 1 87 5 351 2 313 5 162 2 238 2 114 2 6 1 332 1 298 1 91 1 20 10 158 2 361 1 220 2 11 5 196 3 
48 1 351 1 313 1 162 1 329 1 332 1 91 1 298 1 20 2 361 1 158 2 11 2 
48 1 87 2 351 1 313 2 162 1 114 1 329 1 332 1 91 1 298 1 212 1 20 4 361 1 158 2 194 1 11 2 196 1 
197 1 48 3 87 2 351 1 313 2 101 1 238 1 239 1 332 3 91 1 298 3 20 3 361 3 158 6 220 1 11 1 196 1 
184 1 28 1 97 1 48 5 326 1 349 4 351 5 162 4 238 3 101 1 239 2 141 1 329 3 330 3 332 5 145 1 212 3 361 5 194 3 220 3 11 13 196 6 197 1 86 1 87 15 313 11 314 1 114 4 298 5 91 1 20 28 279 1 158 10 
48 1 86 1 326 1 349 1 87 1 313 1 238 1 141 1 330 1 332 1 91 1 298 1 20 2 361 1 158 2 345 1 220 1 11 1 196 1 
48 2 326 1 349 2 351 1 162 1 238 1 141 1 329 1 330 1 332 2 212 1 361 2 220 1 11 3 196 1 86 1 87 2 313 2 314 1 91 1 298 2 20 5 279 1 158 4 345 1 
48 3 326 1 349 1 351 1 328 1 162 2 238 1 239 1 141 1 329 2 330 1 332 3 54 1 212 2 146 1 361 3 194 2 220 1 11 6 196 2 86 1 87 7 313 3 314 1 114 2 298 3 91 1 20 13 158 6 345 1 26 1 
48 3 326 1 349 1 351 2 162 2 328 1 238 1 239 1 141 1 329 2 330 1 332 3 54 1 212 2 146 1 361 3 194 1 220 1 11 7 196 2 86 1 87 4 313 4 314 1 114 1 298 3 91 1 20 11 158 6 345 1 26 1 
48 1 86 1 326 1 349 1 87 1 313 1 238 1 141 1 330 1 332 1 91 1 298 1 20 2 361 1 158 2 345 1 220 1 11 1 196 1 
48 1 349 1 351 1 162 2 328 1 141 1 329 2 330 1 332 1 54 1 212 2 146 1 361 1 194 2 11 6 196 1 87 6 313 2 114 2 298 1 91 1 20 12 158 2 345 1 26 1 
48 4 326 1 349 1 351 2 328 1 162 2 238 1 239 2 141 1 329 2 330 1 54 1 332 4 212 2 146 1 361 4 194 1 220 1 11 7 196 2 86 1 87 5 313 4 314 1 114 1 298 4 91 1 20 12 158 8 345 1 26 1 
48 4 349 1 351 3 328 1 162 3 239 2 141 1 329 3 330 1 54 1 332 4 212 3 146 1 361 4 194 2 11 9 196 3 197 1 87 7 313 6 114 2 91 1 298 4 20 16 158 8 345 1 26 1 
86 1 326 2 87 1 351 2 313 4 238 2 20 2 220 2 11 1 196 2 
48 4 326 1 349 1 351 1 328 1 162 2 238 1 239 2 141 1 329 2 330 1 54 1 332 4 212 2 146 1 361 4 194 1 220 1 11 7 196 2 197 1 86 1 87 5 313 3 114 1 91 1 298 4 20 12 158 8 345 1 26 1 
214 1 216 1 264 1 
325 1 80 1 36 1 214 1 92 1 216 1 264 1 12 1 
211 1 369 1 1 1 100 1 147 1 102 1 115 1 94 1 96 1 320 1 69 1 
369 1 152 1 1 1 262 2 100 1 306 1 102 1 275 1 4 2 105 1 318 1 257 1 69 1 8 1 211 1 25 1 94 1 96 1 
1 1 100 1 262 2 306 1 102 2 4 2 290 1 142 1 105 1 211 1 8 2 152 1 369 1 224 1 315 1 275 1 318 1 257 2 156 1 25 2 94 1 235 1 96 3 
138 1 1 2 100 2 262 2 306 1 102 2 4 2 290 1 142 1 105 1 211 1 8 2 369 1 224 1 315 1 275 1 318 1 257 2 133 1 156 1 25 2 94 2 235 1 96 3 
236 1 1 1 262 1 100 1 306 1 102 1 4 1 142 1 290 1 106 1 8 1 211 1 358 2 247 1 56 1 335 1 81 1 61 1 362 1 222 1 85 2 369 1 224 1 88 1 372 1 257 1 25 1 281 1 234 1 94 1 235 1 96 4 
236 1 1 1 262 1 100 1 306 1 102 1 4 1 142 1 290 1 106 1 8 1 211 1 358 2 247 1 335 1 81 1 61 1 362 1 222 1 85 2 369 1 224 1 88 1 372 1 43 1 257 1 25 1 281 1 94 1 235 1 96 4 
211 1 369 1 266 1 1 1 100 1 94 1 
1 6 100 6 52 1 102 2 211 2 312 1 336 1 148 1 364 1 112 1 369 3 274 1 69 2 132 1 297 1 19 1 205 1 25 1 94 5 96 3 
48 2 326 1 1 1 262 2 52 1 100 1 238 1 306 1 102 1 4 2 104 1 105 1 332 2 211 1 8 1 108 1 58 1 361 2 251 2 220 1 196 1 86 1 223 1 369 1 152 1 313 1 42 1 318 1 257 1 44 1 298 2 280 2 25 1 158 4 94 1 96 1 
184 1 236 2 1 1 237 1 100 1 289 4 238 1 4 1 142 1 106 1 6 1 333 1 247 1 8 1 335 1 59 1 61 2 63 2 114 2 199 2 66 1 69 1 257 1 117 5 204 1 72 2 22 2 120 1 262 1 162 2 306 1 308 1 358 3 81 1 362 1 220 1 222 1 85 3 88 2 372 1 43 1 319 2 233 1 281 1 45 1 94 1 96 2 
222 1 369 2 1 2 52 1 100 2 102 1 211 1 266 1 25 1 283 1 94 2 148 1 96 2 
138 1 369 1 1 4 100 4 52 1 102 1 115 1 69 1 211 1 147 1 344 1 94 4 96 1 
369 2 1 2 100 2 102 1 274 1 290 1 291 1 132 1 211 1 124 1 359 1 25 1 94 2 96 1 
303 1 369 1 1 1 100 1 307 1 69 1 211 1 134 1 94 1 363 1 
14 1 19 1 1 2 100 2 52 1 94 2 112 1 
369 2 1 5 100 5 52 1 102 2 290 1 115 1 69 1 297 1 211 2 205 1 147 1 344 1 94 4 112 1 96 3 
369 2 1 5 49 1 100 5 52 1 102 2 290 1 115 1 69 1 297 1 211 2 147 1 344 1 94 4 112 1 96 3 
369 1 1 1 262 2 100 1 306 1 102 1 275 1 4 2 105 1 318 1 257 1 69 1 8 1 133 1 211 1 25 1 94 1 96 1 
369 2 1 1 100 1 102 1 274 1 290 1 132 1 211 1 312 1 25 1 94 1 148 1 96 1 
338 1 262 1 373 1 4 1 34 1 257 1 343 1 346 1 136 1 
116 1 253 1 346 1 
338 1 373 1 84 1 275 1 346 1 
262 1 306 1 4 1 142 2 106 1 8 1 358 2 247 1 335 1 84 1 61 1 362 1 38 1 338 1 85 2 253 1 88 1 293 1 372 1 373 1 315 1 257 1 277 1 116 1 156 1 281 1 45 1 346 1 
225 1 24 1 320 1 
150 1 225 1 370 1 110 1 24 1 37 1 160 1 
110 1 3 1 270 1 
174 1 150 1 370 1 225 1 103 1 331 1 110 2 24 1 37 1 219 1 160 2 
150 1 370 1 225 1 110 2 24 1 37 1 160 2 271 1 172 1 
259 1 303 1 350 1 370 1 272 1 294 1 110 1 37 1 219 1 160 1 363 1 
225 1 370 1 110 1 37 1 219 1 160 1 
350 1 225 1 370 1 110 1 24 1 37 1 219 1 160 1 
347 1 225 1 370 2 342 1 110 2 37 2 221 1 219 1 160 2 
150 1 350 1 225 1 370 1 272 1 121 1 40 1 110 3 24 1 37 1 219 1 258 1 160 3 172 2 
248 1 265 1 303 2 134 1 370 1 110 1 294 1 37 1 219 1 172 1 363 1 160 2 
150 1 350 1 225 1 370 1 272 1 40 1 90 1 110 3 24 1 37 1 219 1 160 3 271 1 172 2 
150 1 370 1 225 1 110 1 24 1 37 1 219 1 160 1 
150 2 350 1 225 1 370 1 272 1 40 1 110 3 24 1 37 1 172 2 160 3 
150 1 225 1 370 1 227 1 278 1 110 2 24 1 37 1 219 1 160 2 172 1 95 1 
174 1 150 1 370 1 225 1 103 1 242 1 110 2 24 1 37 1 219 1 160 2 
185 1 350 2 51 1 41 2 
370 1 110 1 37 1 165 1 219 1 160 1 
150 1 370 1 225 1 110 2 24 1 37 1 219 1 258 1 160 2 172 1 
256 1 
150 1 370 1 225 1 110 1 24 1 37 1 219 1 160 1 
174 1 150 1 370 1 225 1 110 2 24 1 37 1 219 1 160 2 
150 1 350 1 272 1 40 1 
225 1 

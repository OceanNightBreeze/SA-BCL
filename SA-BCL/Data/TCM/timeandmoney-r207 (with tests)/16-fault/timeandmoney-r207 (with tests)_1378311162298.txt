#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (31,116) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 361 289 9 37 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 36 364 89 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 36 364 89 241 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 3 139 2 238 1 296 1 240 1 56 2 184 1 353 1 10 1 338 1 273 1 95 2 306 4 210 9 309 1 96 1 358 1 341 5 165 1 343 2 192 1 191 1 368 6 260 2 347 9 236 2 220 2 88 1 
73 3 139 2 238 1 296 1 240 1 56 2 184 1 353 1 10 1 338 1 273 1 95 2 306 4 210 9 309 1 96 1 358 1 341 5 165 1 343 2 192 1 191 1 368 6 260 2 347 9 220 2 236 2 88 1 
73 4 139 2 238 1 296 1 240 1 56 2 184 1 353 1 10 1 338 1 273 1 95 2 306 5 210 10 309 1 96 1 358 1 341 6 165 1 343 2 192 1 191 1 368 7 260 2 347 10 220 2 236 2 88 1 
73 2 139 2 238 1 296 1 240 1 56 2 184 1 353 1 10 1 338 1 273 1 95 2 306 3 210 7 309 1 96 1 358 1 341 4 165 1 343 2 191 1 368 4 260 2 347 7 220 2 236 1 88 1 
73 1 139 1 341 3 238 1 240 1 192 1 56 1 368 3 10 1 260 1 347 4 273 1 220 1 95 1 236 2 306 2 88 1 210 4 
139 1 341 1 358 1 238 1 45 1 343 1 56 1 353 1 10 1 347 2 95 1 220 1 200 1 88 1 210 2 107 1 
96 1 73 1 341 2 238 1 343 1 56 2 368 1 10 1 347 3 95 2 306 1 88 1 210 3 
73 3 139 1 238 1 240 1 56 2 184 1 10 1 273 1 95 2 306 4 210 9 96 1 230 1 341 5 343 1 191 1 192 1 368 7 286 1 260 1 347 9 236 2 220 1 88 1 
73 3 139 1 238 1 240 1 56 2 184 1 10 1 273 1 95 2 306 4 210 9 96 1 230 1 341 5 343 1 191 1 192 1 368 7 286 1 260 1 347 9 236 2 220 1 88 1 
319 1 
54 1 
293 1 102 2 145 2 372 1 282 2 113 2 26 2 214 2 
237 1 293 1 109 1 24 1 2 1 113 3 26 2 5 1 30 1 181 1 9 1 302 1 93 1 119 1 145 2 186 1 275 2 244 1 149 1 127 1 277 1 190 1 232 1 34 1 361 2 166 1 282 2 16 1 214 2 101 2 102 3 235 2 287 1 372 1 321 1 288 1 289 2 
293 1 255 1 110 1 102 1 196 1 145 1 282 1 113 1 26 1 214 1 
126 1 1 1 151 1 113 1 168 1 36 1 117 1 102 1 217 1 352 1 196 1 346 1 145 1 199 1 
126 1 1 2 151 1 282 1 113 1 168 1 26 1 214 1 117 1 217 2 102 1 352 1 196 1 346 1 145 1 
1 1 32 1 217 1 19 1 374 1 
1 2 293 1 110 1 113 1 26 1 352 1 145 1 307 1 126 1 32 1 14 1 282 1 214 1 255 1 217 2 102 1 196 1 19 1 20 1 
1 1 32 1 217 1 
1 1 293 1 110 1 282 1 113 1 26 1 214 1 255 1 217 1 102 1 196 1 145 1 19 1 307 1 
352 1 
1 2 293 1 110 1 113 1 26 1 352 1 145 1 307 1 243 1 126 1 32 1 14 1 282 1 214 1 255 1 217 2 102 1 196 1 19 1 
1 5 293 1 325 1 110 1 159 1 25 2 294 1 113 1 114 2 26 1 332 5 335 1 29 1 182 2 352 2 145 1 307 1 126 2 32 2 357 1 13 1 14 1 359 1 249 1 282 1 363 1 214 1 251 2 38 2 367 1 100 1 255 1 102 1 217 5 196 1 103 4 19 2 348 2 
319 1 
282 1 113 2 26 1 214 1 143 1 270 1 102 2 145 2 372 2 
336 1 116 1 174 1 
127 1 109 1 34 1 361 1 166 1 113 1 16 1 102 1 183 1 9 1 235 1 93 1 287 1 372 1 186 1 289 1 
127 1 109 1 326 1 34 1 327 1 361 1 166 1 282 1 113 2 16 1 214 1 116 1 102 2 9 1 93 1 235 1 287 1 145 1 186 1 289 1 
102 3 326 1 145 3 372 1 282 3 113 3 26 1 214 3 
110 1 102 1 196 1 145 1 282 1 113 1 214 1 
143 1 270 1 102 1 196 1 145 1 282 1 113 1 26 1 214 1 
1 1 293 1 109 1 326 1 327 1 48 1 2 1 113 4 26 2 143 1 117 1 181 1 302 1 9 1 93 1 145 3 186 1 275 1 244 1 149 1 127 1 277 1 190 1 232 1 34 1 151 1 361 1 166 1 282 3 168 1 16 1 214 3 101 2 102 4 217 1 196 1 218 1 346 1 235 1 287 1 372 1 321 1 288 1 289 1 
102 2 326 1 145 2 372 1 364 1 282 1 113 2 214 1 36 1 
1 1 326 2 151 1 327 1 282 3 314 1 113 3 168 1 26 1 214 3 143 1 117 1 217 1 102 3 352 1 196 1 218 1 346 1 145 3 
326 1 282 2 113 2 26 1 214 2 116 1 143 1 336 1 102 2 145 2 
127 1 109 1 34 1 361 1 166 1 113 1 16 1 102 1 9 1 235 1 93 1 287 1 372 1 186 1 289 1 
109 1 34 1 361 1 360 1 166 1 113 1 7 1 102 1 9 1 235 1 93 1 287 1 372 1 186 1 289 1 
31 1 67 1 
102 1 196 1 346 1 145 1 282 1 113 1 250 1 214 1 
125 1 326 2 327 1 364 1 282 4 113 5 26 1 214 4 36 1 143 1 226 1 102 5 145 5 372 1 
110 1 102 2 196 1 145 2 282 2 113 2 250 1 214 2 
323 1 283 1 
323 1 283 1 
259 1 104 1 
259 1 104 1 
259 1 104 1 
323 1 140 1 283 1 
323 1 239 1 283 1 
323 2 163 1 259 1 77 1 104 1 283 2 
323 1 140 1 283 1 
323 1 140 1 283 1 
323 1 50 1 283 1 
323 1 50 1 283 1 
323 1 50 1 283 1 
323 2 1 2 42 2 173 1 342 1 150 1 3 3 51 2 267 1 268 2 366 1 283 2 217 2 352 1 185 2 163 1 11 1 209 1 71 2 
323 1 1 1 42 1 46 1 3 1 113 2 239 1 268 1 58 1 185 1 303 1 61 1 145 2 187 1 340 1 342 1 83 1 282 2 214 2 283 1 217 1 102 2 372 1 71 1 
139 1 260 1 220 1 
139 1 220 1 200 1 
157 1 81 1 90 1 260 2 220 3 200 1 
99 1 157 1 90 1 260 1 220 2 200 1 
157 1 90 2 260 1 220 2 200 1 
41 1 1 5 25 1 114 1 54 3 332 2 162 1 58 1 182 1 352 2 228 1 187 1 64 2 126 1 340 1 32 1 13 1 82 2 14 1 97 2 130 1 132 1 98 1 251 1 38 1 284 1 193 1 217 5 370 1 198 1 19 4 103 3 348 1 
1 2 293 1 110 1 113 1 26 1 225 1 92 1 352 1 145 1 147 1 307 1 126 1 32 1 282 1 214 1 255 1 217 2 102 1 196 1 19 2 374 1 
41 1 1 3 293 1 325 1 110 1 25 1 113 1 114 1 26 1 54 3 162 1 332 2 352 2 182 1 145 1 307 1 228 1 64 2 126 1 340 1 82 1 282 1 130 1 97 2 132 1 98 1 214 1 251 1 38 1 193 1 255 1 102 1 217 3 196 1 370 1 19 2 103 3 348 1 
41 1 1 4 325 1 54 6 332 4 182 1 60 1 145 1 228 2 64 4 340 2 97 4 282 1 98 1 193 1 102 1 196 1 19 3 103 5 348 1 293 1 110 1 25 1 113 1 114 2 26 1 162 2 352 3 307 1 126 1 82 2 246 1 130 2 316 1 132 2 251 2 214 1 38 2 255 1 217 4 370 1 
319 1 
166 1 136 1 
59 1 
34 1 166 1 
324 1 34 1 93 1 328 1 166 3 76 2 
34 1 93 1 166 1 
166 1 339 1 
237 4 65 1 141 1 231 1 111 1 294 1 363 1 265 1 153 2 298 1 251 1 38 1 100 1 234 2 171 3 275 6 288 2 
237 4 65 1 141 1 231 1 111 1 294 1 363 1 265 1 153 2 298 1 251 1 38 1 100 1 234 2 171 3 275 7 288 3 
237 4 65 1 141 1 231 1 111 1 294 1 363 1 265 1 153 2 298 1 251 1 38 1 100 1 234 2 171 3 275 6 288 2 124 1 
21 1 237 1 234 1 141 1 111 2 171 1 153 1 275 2 288 1 
237 5 244 2 149 2 65 1 44 1 190 2 141 1 111 1 294 1 363 1 167 1 265 1 153 4 298 1 251 1 38 1 100 1 234 2 101 4 197 1 321 2 171 5 275 10 288 5 
139 1 238 1 75 1 109 1 330 1 207 1 56 1 10 1 95 1 186 1 210 2 355 1 81 1 341 1 128 1 33 1 361 1 343 1 154 1 18 1 368 1 133 1 170 1 235 1 260 1 347 2 220 2 200 1 289 1 88 1 
139 1 238 1 75 1 109 1 330 1 350 1 207 1 56 1 10 1 95 1 186 1 210 3 355 1 81 1 341 1 33 1 361 1 343 1 154 1 368 2 254 1 133 1 170 1 235 1 260 1 347 3 220 2 261 1 200 1 289 1 
139 1 238 1 75 1 109 1 330 1 350 1 207 1 10 1 186 1 210 2 81 1 341 1 361 1 343 1 154 1 368 2 133 1 170 1 235 1 260 1 347 2 220 2 261 1 200 1 289 1 
74 1 109 1 34 1 281 1 361 1 166 1 248 1 343 2 330 2 131 1 56 1 154 2 156 1 254 1 9 1 144 1 235 1 170 2 347 1 95 1 186 1 210 1 289 1 
139 1 75 1 109 1 330 1 207 1 56 1 95 1 186 1 210 1 355 1 81 1 128 1 33 1 361 1 343 1 154 1 133 1 170 1 235 1 260 1 347 1 220 2 261 1 200 1 289 1 88 1 
269 1 
290 1 1 2 109 3 25 1 206 1 53 1 331 1 332 1 9 2 182 1 93 1 305 1 186 2 32 2 13 1 14 1 34 2 311 1 361 2 281 1 166 2 131 1 37 1 217 2 370 1 235 2 103 1 348 1 289 2 
1 3 113 1 117 1 179 2 333 1 57 1 145 1 243 1 32 2 188 1 14 1 212 1 151 1 168 1 36 1 102 1 217 3 196 1 346 1 40 1 371 1 199 1 
243 1 126 1 1 3 32 1 14 1 212 1 151 1 168 1 113 1 36 1 27 1 333 1 179 3 117 1 57 1 217 3 102 1 352 1 196 1 346 1 40 1 371 1 145 1 199 1 
1 3 113 1 27 1 117 1 179 3 333 1 57 1 145 1 243 1 32 2 188 1 14 1 212 1 151 1 280 1 168 1 36 1 102 1 217 3 196 1 346 1 40 1 371 1 199 1 
1 5 172 1 55 1 332 1 333 1 179 4 57 1 182 1 145 2 227 1 62 2 274 2 228 2 13 1 188 4 278 1 14 3 280 4 151 1 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 113 2 112 1 26 1 27 2 117 1 352 1 307 1 243 1 126 1 32 7 212 1 129 1 168 1 214 1 36 1 255 1 217 5 134 2 40 1 371 1 135 2 
1 2 172 1 25 1 113 1 54 1 332 1 117 1 179 2 333 1 57 1 352 1 182 1 227 1 145 1 62 1 274 1 228 1 229 1 13 1 212 1 151 1 168 1 36 1 134 1 217 2 102 1 196 1 346 1 40 1 371 1 103 1 348 1 199 1 
1 4 172 1 332 1 333 1 179 4 57 1 182 1 145 2 227 1 62 2 274 2 228 2 13 1 278 1 188 2 14 2 151 1 280 2 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 112 1 113 2 26 1 27 2 117 1 352 1 307 1 126 1 32 4 212 1 168 1 214 1 36 1 255 1 217 4 134 2 40 1 371 1 135 2 
1 4 172 1 332 1 333 1 179 4 57 1 182 1 145 2 227 1 62 2 274 2 228 2 13 1 278 1 188 2 14 2 151 1 280 2 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 112 1 113 2 26 1 27 2 117 1 352 1 307 1 126 1 32 4 212 1 168 1 214 1 36 1 255 1 217 4 134 2 40 1 371 1 135 2 
1 4 54 2 332 1 333 1 179 4 57 1 182 1 272 1 337 2 145 2 227 1 62 2 13 1 188 2 14 2 151 1 279 2 280 2 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 113 2 26 1 80 1 27 2 117 1 352 1 307 1 126 1 32 4 212 1 168 1 214 1 318 1 36 1 255 1 217 4 134 2 40 1 371 1 
1 4 172 1 55 1 332 1 333 1 179 5 57 1 182 1 145 2 227 1 62 2 274 2 228 2 13 1 278 1 188 3 14 2 280 3 151 1 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 113 2 112 1 26 1 27 3 117 1 352 1 307 1 126 1 32 5 212 1 168 1 214 1 36 1 255 1 217 4 134 2 40 1 371 1 135 2 
1 4 172 1 55 1 332 1 333 1 179 5 57 1 182 1 145 2 227 1 62 2 274 2 228 2 13 1 278 1 188 3 14 2 280 3 151 1 15 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 113 2 112 1 26 1 27 3 117 1 352 1 307 1 126 1 32 5 212 1 168 1 214 1 36 1 255 1 217 4 134 2 40 1 371 1 135 2 
1 3 54 2 332 1 333 1 179 3 57 1 182 1 337 1 145 2 227 1 62 2 229 1 13 1 188 1 14 1 151 1 279 2 280 1 282 1 102 2 196 2 346 1 103 1 348 1 199 1 293 1 110 1 25 1 113 2 26 1 80 1 27 1 117 1 352 1 307 1 126 1 32 2 212 1 168 1 214 1 36 1 255 1 217 3 134 2 40 1 371 1 
67 1 319 1 
0 3 237 8 263 1 2 1 222 1 174 11 116 11 162 2 177 3 336 4 181 2 119 1 120 1 275 14 308 1 244 2 149 2 65 1 190 2 232 1 130 2 153 1 132 1 251 2 38 1 101 4 257 1 258 1 372 1 321 2 171 2 70 1 288 6 
237 1 109 1 326 1 327 1 2 1 113 2 336 1 9 1 183 1 181 1 93 1 119 1 145 1 121 1 186 1 275 2 244 1 127 1 149 1 190 1 34 1 232 1 361 1 166 1 282 1 344 1 16 1 214 1 285 1 101 2 102 2 235 1 287 1 372 1 321 1 70 1 289 1 288 1 
109 1 326 1 327 1 2 1 113 2 329 1 302 1 181 2 9 1 93 1 145 1 123 1 186 1 146 1 275 1 244 2 127 1 149 2 190 2 247 1 34 1 232 2 361 1 166 1 282 1 16 1 214 1 101 4 102 2 235 1 287 1 321 2 70 1 289 1 288 1 
202 1 237 1 109 2 326 1 2 1 113 1 297 1 30 2 9 2 181 1 119 1 145 1 186 2 275 2 244 1 149 1 190 1 232 1 34 2 361 7 281 1 166 3 233 1 282 1 317 1 131 1 214 1 18 1 101 2 102 1 67 1 235 7 86 1 321 1 261 1 72 1 289 6 288 1 
237 1 113 1 26 1 116 1 174 1 162 1 143 1 336 1 181 1 145 1 275 3 148 1 244 1 149 1 190 1 232 1 282 1 130 1 153 1 132 1 214 1 251 1 38 1 101 2 102 1 321 1 171 1 70 1 288 2 
67 1 
67 1 
67 1 
244 1 237 2 149 1 65 1 190 1 232 1 233 1 130 1 251 1 116 1 174 1 252 1 101 2 336 1 181 1 321 1 171 1 275 2 
244 1 149 1 190 1 232 1 233 1 153 1 161 1 132 1 116 1 174 1 38 1 101 2 336 1 181 1 321 1 171 1 275 2 288 2 
244 1 237 2 149 1 65 1 190 1 232 1 233 1 130 1 153 1 132 1 251 1 116 2 174 2 162 1 38 1 101 2 336 2 181 1 321 1 171 2 275 4 288 2 
244 1 237 2 149 1 65 1 190 1 232 1 130 1 153 1 132 1 251 1 116 2 174 2 162 1 38 1 101 2 336 2 181 1 321 1 171 2 275 4 288 2 
237 1 109 1 2 1 113 1 302 1 9 1 181 1 93 1 119 1 186 1 275 2 244 1 127 1 149 1 190 1 34 1 232 1 361 1 166 1 16 1 101 2 102 1 235 1 287 1 372 1 321 1 289 1 288 1 
237 1 109 1 2 1 113 1 7 1 9 1 181 1 93 1 119 1 186 1 275 2 244 1 149 1 190 1 34 1 232 1 360 1 361 1 166 1 253 1 101 2 102 1 235 1 287 1 372 1 321 1 289 1 288 1 
244 1 237 2 149 1 65 1 190 1 232 1 130 1 153 1 132 1 251 1 116 2 174 2 162 1 38 1 101 2 336 2 181 1 321 1 171 2 70 1 275 4 288 2 
237 2 109 1 113 1 116 2 174 2 162 1 336 2 302 1 181 1 93 1 123 1 186 1 275 4 244 1 127 1 149 1 65 1 190 1 34 1 232 1 361 1 166 1 130 1 153 1 132 1 16 1 251 1 38 1 18 1 101 2 102 1 235 1 287 1 321 1 171 2 288 2 289 1 
237 2 295 1 113 1 26 1 162 1 174 1 116 1 143 1 336 1 181 1 145 1 275 3 244 1 149 1 65 1 190 1 232 1 282 1 130 1 132 1 214 1 251 1 38 1 101 2 102 1 321 1 171 1 70 1 288 1 
0 2 237 9 291 1 160 2 222 1 52 1 142 1 162 3 177 1 334 1 8 1 94 1 275 19 211 2 244 2 149 2 356 1 65 3 190 2 167 1 130 3 153 3 132 3 251 3 38 3 101 4 257 1 321 2 171 6 288 10 
0 2 237 14 292 1 44 2 205 1 160 1 142 2 162 3 78 1 177 2 178 1 334 1 8 1 94 2 275 26 211 4 244 3 149 3 356 1 65 2 190 3 167 1 130 3 153 2 132 2 251 3 38 2 101 6 256 1 257 2 321 3 171 4 106 1 288 12 
0 4 237 20 291 1 292 1 44 1 205 1 160 1 294 1 222 1 265 1 298 1 142 1 162 4 78 1 177 3 178 1 334 1 8 1 94 2 275 41 211 4 244 3 149 3 356 1 65 4 190 3 312 1 363 1 167 1 130 4 153 5 132 4 251 5 38 5 234 1 100 1 101 6 256 1 257 3 321 3 171 9 106 1 288 21 
0 4 237 20 291 1 292 1 44 2 205 1 160 1 294 1 222 1 265 1 298 1 142 1 162 4 78 1 177 3 178 1 334 1 8 1 94 2 275 39 211 4 244 4 149 4 356 1 65 3 190 4 312 1 363 1 167 1 130 4 153 5 132 3 251 5 38 4 234 1 100 1 101 8 256 1 257 3 321 4 171 8 106 1 288 19 
0 4 237 27 44 1 292 1 205 1 160 1 294 1 222 2 265 1 298 1 142 1 162 7 78 1 177 4 178 1 334 1 8 1 94 1 275 53 308 2 211 4 244 2 149 2 356 1 65 7 190 2 363 1 167 1 130 7 153 8 132 7 251 8 38 8 234 1 100 1 101 4 256 1 257 2 321 2 171 15 106 1 288 26 
323 1 42 1 185 1 163 1 4 1 267 1 71 1 268 1 366 1 283 1 
46 1 239 1 
208 1 323 1 79 1 42 1 185 1 105 1 71 1 268 1 283 1 
1 1 323 1 42 1 173 1 342 1 150 1 3 2 51 1 267 1 268 1 366 1 283 1 217 1 352 1 185 1 163 1 209 1 71 1 
1 1 323 1 42 1 173 1 342 1 150 1 3 2 51 1 267 1 268 1 366 1 283 1 217 1 352 1 185 1 163 1 209 1 71 1 
1 1 323 1 42 1 173 1 342 1 150 1 3 2 51 1 267 1 268 1 366 1 283 1 217 1 352 1 185 1 163 1 209 1 71 1 
140 1 77 1 349 1 
140 1 77 1 349 1 
85 1 50 1 
85 1 50 1 77 1 
83 1 61 1 
1 1 323 1 42 1 46 1 3 1 51 1 113 2 239 1 268 1 58 1 185 1 303 1 61 1 145 2 187 1 340 1 83 1 150 1 282 2 214 2 283 1 195 1 102 2 217 1 372 1 19 1 71 1 
140 1 349 1 
85 1 50 1 77 1 
237 1 109 1 204 1 264 1 2 1 113 2 297 1 30 2 181 1 119 1 145 2 186 1 275 2 354 1 244 1 149 1 190 1 34 1 232 1 361 2 166 1 317 1 101 2 102 2 235 2 87 1 320 1 321 1 70 1 288 1 289 2 
139 1 81 1 109 1 75 1 33 1 361 2 207 1 154 1 18 1 216 1 118 1 235 2 260 1 220 2 186 1 261 1 200 1 373 1 289 2 
139 1 81 1 75 1 109 1 33 1 361 1 207 1 154 1 235 1 260 1 220 2 261 1 186 1 200 1 373 1 289 1 242 1 
109 1 34 1 361 1 281 1 166 1 131 1 154 1 175 1 216 1 156 1 9 1 235 1 186 1 289 1 
139 1 81 1 109 1 75 1 33 1 361 1 207 1 154 1 216 1 118 1 235 1 260 1 220 2 261 1 186 1 200 1 373 1 289 1 
12 1 
319 1 
172 1 13 1 25 1 54 1 332 1 352 1 182 1 103 1 274 1 348 1 228 1 
1 2 221 1 47 1 328 1 54 6 332 3 182 2 9 1 93 1 186 1 228 3 64 3 13 2 14 1 151 1 97 3 235 1 103 4 348 2 289 1 158 1 109 2 22 1 25 2 76 1 114 1 115 1 162 1 352 3 122 1 32 2 34 1 361 1 166 4 313 1 130 1 132 1 251 1 35 1 38 1 217 2 370 1 136 2 
0 1 1 1 331 1 54 6 332 5 177 1 178 1 182 2 145 1 228 3 64 5 13 2 14 1 97 5 282 1 102 1 196 1 103 8 348 2 106 1 292 1 293 1 110 1 205 1 25 2 113 1 114 2 26 1 162 2 352 5 307 1 126 2 32 1 357 1 362 1 130 2 132 2 365 1 214 1 251 2 38 2 255 1 217 1 256 1 370 1 257 1 
1 1 293 1 110 1 25 1 294 1 113 1 114 2 112 1 26 1 332 2 29 1 182 1 145 1 307 1 357 1 13 1 363 1 282 1 251 2 214 1 38 1 100 1 255 1 102 1 217 1 196 1 103 2 348 1 
126 1 13 1 25 1 249 1 332 1 335 1 182 1 352 1 103 1 348 1 
64 2 130 1 97 2 114 1 132 1 251 1 54 3 162 1 332 2 38 1 352 1 103 2 228 1 
1 1 126 1 32 1 293 1 110 1 14 1 282 1 113 1 26 1 214 1 255 1 102 1 217 1 196 1 352 1 145 1 307 1 
1 1 32 2 13 1 14 1 361 2 25 1 206 1 331 1 332 1 37 1 217 1 9 2 182 1 370 1 235 2 103 1 348 1 289 2 201 1 
293 1 109 1 2 1 113 3 26 2 9 1 302 1 181 1 93 1 145 2 186 1 275 1 244 1 149 1 127 1 277 1 190 1 34 1 232 1 361 1 166 1 282 2 16 1 214 2 101 2 102 3 235 1 287 1 372 1 321 1 288 1 289 1 
64 2 126 2 13 1 25 1 97 2 114 1 331 1 54 4 332 2 234 1 182 1 352 4 370 1 103 2 348 1 228 2 
42 1 185 1 69 1 
42 1 369 1 185 1 61 1 267 1 
42 1 185 1 69 1 
42 1 185 1 69 1 
176 1 42 1 185 1 
176 1 42 1 185 1 
176 1 42 1 185 1 
42 1 185 1 
323 1 283 1 
237 4 244 2 149 2 65 1 44 1 190 2 294 1 363 1 153 1 265 1 298 1 251 1 38 1 234 1 100 1 101 4 321 2 171 2 275 7 288 3 
319 1 
244 1 237 2 149 1 65 1 190 1 130 1 153 1 132 1 251 1 162 1 38 1 101 2 219 1 321 1 171 2 275 4 288 2 
0 2 237 3 65 1 222 1 130 1 153 1 132 1 251 1 162 1 38 1 177 1 257 1 171 2 275 7 288 4 
0 2 237 11 44 2 262 1 294 2 222 1 265 1 298 1 162 2 177 2 275 22 308 1 244 2 149 2 65 4 190 2 363 2 130 2 153 4 132 2 251 3 38 3 234 1 100 1 101 4 258 1 321 2 171 8 288 11 
0 1 275 1 288 1 
237 1 177 1 275 1 
244 1 237 3 149 1 65 1 190 1 130 1 153 2 132 1 251 1 162 1 38 1 101 2 219 1 321 1 122 1 171 3 275 6 288 3 
0 1 237 6 292 1 205 1 162 2 177 1 178 1 275 12 244 1 149 1 65 1 190 1 167 1 130 2 153 1 132 2 251 2 38 2 101 2 256 1 257 1 321 1 171 2 106 1 288 6 
237 3 65 1 294 1 363 1 153 1 251 1 38 1 100 1 171 2 275 6 288 3 
237 1 244 1 149 1 65 1 262 1 44 1 190 1 294 1 363 1 153 1 265 1 298 1 101 2 321 1 171 2 275 3 288 2 
244 1 237 5 149 1 65 2 190 1 294 2 167 1 363 2 153 3 251 2 38 2 101 2 100 1 29 1 321 1 171 5 275 10 288 5 
244 1 237 2 149 1 65 1 190 1 167 1 130 1 251 1 101 2 321 1 171 1 275 2 
244 1 237 2 149 1 65 1 190 1 167 1 130 1 153 1 132 1 251 1 162 1 38 1 101 2 321 1 171 2 275 4 288 2 
244 3 237 1 149 3 291 1 65 1 44 1 262 1 190 3 294 1 167 1 363 1 153 1 101 6 321 3 171 2 275 3 288 2 
0 4 237 16 291 1 262 1 44 2 49 1 294 3 222 1 265 1 298 1 162 3 177 3 275 33 244 5 149 5 65 5 190 5 363 3 84 1 167 1 130 3 153 6 132 3 251 5 38 5 234 1 100 2 101 10 257 1 219 1 321 5 171 11 138 1 288 17 
0 1 237 4 294 1 265 1 298 1 177 1 275 7 244 1 149 1 190 1 167 1 363 1 153 1 251 1 38 1 234 1 101 2 100 1 256 1 257 1 321 1 171 1 288 3 
0 2 237 6 294 1 222 1 265 1 298 1 162 1 177 1 275 10 244 2 149 2 65 1 190 2 363 1 167 1 130 1 153 1 251 2 38 1 234 1 100 1 101 4 256 1 257 1 219 1 321 2 171 2 288 4 
0 1 237 9 44 1 292 1 205 1 294 1 265 1 298 1 162 2 177 1 178 1 275 18 244 3 149 3 65 1 190 3 363 1 167 1 130 2 153 2 132 2 251 3 38 3 234 1 100 1 101 6 256 1 257 1 219 1 321 3 171 3 106 1 288 9 
0 1 237 10 44 1 292 1 205 1 294 1 265 1 298 1 162 2 177 1 178 1 275 16 244 3 149 3 65 2 190 3 363 1 167 1 130 2 153 2 132 1 251 3 38 2 234 1 100 1 101 6 256 1 257 1 219 1 321 3 171 4 106 1 288 6 
0 1 237 4 294 1 265 1 298 1 177 1 275 7 244 1 149 1 190 1 167 1 363 1 153 1 251 1 38 1 234 1 101 2 100 1 256 1 257 1 321 1 171 1 288 3 
0 1 237 6 292 1 205 1 162 2 177 1 178 1 275 12 244 1 149 1 65 1 190 1 167 1 130 2 153 1 132 2 251 2 38 2 101 2 256 1 257 1 321 1 171 2 106 1 288 6 
0 1 237 10 292 1 44 2 205 1 294 1 265 1 298 1 162 2 177 1 178 1 275 17 244 4 149 4 65 2 190 4 363 1 167 1 130 2 153 2 132 1 251 3 38 2 234 1 100 1 101 8 256 1 257 1 219 1 321 4 171 4 106 1 288 7 
0 1 237 9 291 1 292 1 44 2 205 1 162 3 177 1 178 1 275 16 244 4 149 4 65 3 190 4 167 1 130 3 153 3 132 2 251 3 38 2 101 8 256 1 257 1 321 4 171 6 106 1 288 7 
237 3 65 3 294 3 363 3 265 1 153 3 298 2 251 1 38 1 100 1 171 6 275 7 288 4 
0 1 237 10 291 1 292 1 44 2 205 1 294 1 265 1 298 1 162 2 177 1 178 1 275 17 244 4 149 4 65 1 190 4 363 1 167 1 130 2 153 2 132 1 251 3 38 2 234 1 100 1 101 8 256 1 257 1 321 4 171 3 106 1 288 7 
89 1 364 1 36 1 
194 1 89 1 180 1 271 1 241 1 364 1 63 1 36 1 
9 1 361 1 235 1 319 1 289 1 
127 1 109 1 326 1 34 1 361 1 166 1 282 1 113 2 214 1 102 2 9 1 93 1 235 1 287 1 145 1 372 1 186 1 289 1 
203 1 109 1 326 1 113 2 299 1 93 2 145 2 339 1 186 1 127 1 34 2 361 1 166 3 282 1 168 1 214 2 102 2 196 1 346 1 235 1 287 1 372 1 289 1 
203 1 109 1 326 1 113 2 299 1 300 1 7 1 93 2 145 2 339 1 186 1 34 2 361 2 166 3 282 1 168 1 214 2 102 2 196 1 346 1 235 2 287 1 372 1 289 2 
1 2 203 1 109 1 76 1 266 1 299 1 300 1 352 1 9 1 93 1 339 1 186 1 126 1 32 1 34 1 151 1 361 3 166 4 169 1 217 2 235 3 136 1 289 3 
126 1 1 2 32 1 203 1 109 1 151 1 34 1 361 3 166 4 313 1 76 1 299 1 300 1 217 2 9 1 352 1 93 1 235 3 339 1 186 1 136 1 289 3 
6 1 109 1 361 1 235 1 186 1 289 1 
202 1 290 1 109 3 34 2 361 6 328 1 311 1 166 3 223 1 317 1 18 1 30 1 9 2 235 6 93 1 86 1 261 1 186 2 72 1 289 5 
237 3 109 1 326 1 264 1 294 1 265 1 113 2 298 1 116 1 174 1 336 1 181 2 302 1 93 1 145 1 123 1 186 1 275 5 146 1 244 2 149 2 127 1 190 2 34 1 232 2 361 1 166 1 363 1 282 1 153 1 16 1 251 1 214 1 38 1 18 1 234 1 100 1 101 4 102 2 235 1 287 1 372 2 321 2 171 1 70 1 288 2 289 1 
1 3 221 1 47 1 332 5 335 1 182 2 9 1 145 1 13 2 14 1 151 1 282 1 100 1 102 1 196 1 235 1 19 1 103 4 348 2 201 1 289 1 293 1 110 1 158 1 25 2 294 1 76 1 113 1 114 2 26 1 29 1 352 2 307 1 126 2 32 2 357 1 361 1 166 2 313 1 249 1 363 1 251 2 214 1 38 2 255 1 217 3 136 1 
22 1 109 2 34 1 361 2 328 1 166 2 76 1 18 1 6 1 235 2 93 1 186 1 289 2 
18 1 300 1 109 1 9 1 34 1 281 1 361 4 235 4 166 1 315 1 186 1 131 1 289 4 
290 1 109 2 34 1 361 2 311 1 166 1 53 1 299 1 235 2 93 1 305 1 186 1 137 1 289 2 
139 1 109 1 9 1 361 1 235 1 220 1 186 1 200 1 207 1 289 1 
18 1 109 1 34 1 361 2 235 2 166 1 186 1 317 1 261 1 354 1 289 2 
202 1 109 2 34 2 281 1 361 5 166 3 315 1 131 1 317 1 299 1 18 1 9 1 235 5 86 1 186 2 289 4 
202 1 109 2 34 2 281 1 361 5 166 3 315 1 131 1 317 1 299 1 18 1 345 1 9 1 235 5 186 2 289 4 
109 1 326 1 34 1 361 1 166 1 282 1 113 2 214 1 7 1 102 2 9 1 93 1 235 1 287 1 145 1 372 1 186 1 289 1 
290 1 109 2 34 1 361 1 328 1 311 1 166 1 223 1 299 1 235 1 93 1 186 1 289 1 
245 1 102 1 204 1 145 1 87 1 320 1 152 1 113 1 224 1 
304 1 224 1 322 1 
245 1 301 1 152 1 372 1 224 1 
126 1 1 2 245 2 43 1 151 1 152 2 168 1 224 1 301 2 117 1 217 2 352 1 196 1 346 1 218 1 304 1 372 1 19 1 322 1 
319 1 
341 1 238 1 10 1 347 1 95 1 210 1 56 1 
343 1 330 1 210 1 
341 1 358 2 238 1 56 1 39 1 68 1 10 1 347 3 95 1 88 1 210 3 108 1 
368 1 341 1 238 1 10 1 347 2 236 1 95 1 210 2 56 1 
139 1 341 1 240 1 56 1 260 1 347 1 95 1 220 1 306 1 88 1 210 1 
341 1 10 1 347 1 95 1 210 1 56 1 88 1 
238 1 10 2 347 1 95 1 210 1 56 1 88 1 
341 1 189 1 23 1 10 1 347 2 95 2 164 1 210 2 56 2 88 1 
73 1 341 2 238 1 191 1 56 1 368 2 184 1 10 1 347 3 95 1 306 1 88 1 210 3 
81 1 139 1 341 1 238 1 56 1 155 1 368 1 10 1 260 1 347 2 220 2 95 1 200 1 88 1 210 2 
73 1 341 2 238 1 192 1 56 2 368 2 10 1 347 4 95 2 236 1 306 1 88 1 210 4 
341 1 238 1 10 1 347 1 95 1 210 1 56 1 88 1 
73 1 358 1 341 3 238 2 17 1 56 1 368 2 68 1 10 2 347 4 95 1 306 1 108 1 210 4 
310 1 368 1 341 1 238 1 286 1 10 1 347 2 95 1 213 1 210 2 56 1 88 1 
341 1 358 2 238 1 56 1 91 1 68 2 10 1 347 3 95 1 108 1 88 1 210 3 
276 2 28 1 341 2 66 1 
347 1 95 1 215 1 210 1 56 1 88 1 
368 1 341 1 238 1 10 1 347 2 95 1 191 1 210 2 56 1 88 1 
351 1 
341 1 238 1 10 1 347 1 95 1 210 1 56 1 88 1 
368 1 341 1 358 1 238 1 10 1 347 3 95 1 191 1 210 3 56 1 88 1 
73 1 341 1 306 1 17 1 
341 1 10 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (68,252) (68,252) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (68,252) (68,252) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (68,252) (68,252) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (68,252) (68,252) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 135 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 89 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 89 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 82 1 183 1 229 1 252 1 106 1 172 1 137 1 68 1 30 1 130 1 
168 1 82 1 183 1 229 1 252 1 106 1 172 1 137 1 68 1 30 1 130 1 
168 1 82 1 183 1 229 1 252 1 106 1 172 1 137 1 68 1 30 1 130 1 
168 1 82 1 183 1 229 1 252 1 106 1 172 1 137 1 68 1 30 1 130 1 
104 1 235 2 106 1 118 1 125 2 29 3 18 1 30 4 337 1 359 1 82 4 229 1 108 1 46 1 137 1 204 3 232 1 333 1 
104 1 168 1 266 1 106 1 118 1 172 1 30 2 313 1 359 1 82 2 229 1 46 1 261 1 137 1 204 1 86 1 
104 1 168 1 235 1 106 2 29 1 30 3 82 3 229 2 108 1 46 1 109 1 137 1 204 2 
104 1 168 1 49 1 235 4 106 2 118 1 125 2 29 7 18 1 337 1 30 9 91 1 359 1 82 9 229 2 108 3 46 1 37 1 109 1 137 1 204 5 232 1 254 1 333 1 
104 1 168 1 49 1 235 4 106 2 118 1 125 2 29 7 18 1 337 1 30 9 91 1 359 1 82 9 229 2 108 3 46 1 37 1 109 1 137 1 204 5 232 1 254 1 333 1 
89 1 28 1 174 1 
256 1 285 2 174 1 
228 2 95 2 120 2 297 2 100 1 364 2 197 2 185 1 
105 1 286 2 2 2 356 1 52 2 270 1 338 2 54 1 315 1 173 2 358 1 357 1 197 3 4 1 228 2 147 1 201 1 296 2 119 1 120 2 58 1 179 1 297 3 323 1 364 3 299 2 110 1 234 1 153 1 210 1 185 1 214 1 303 1 95 3 307 1 76 1 100 1 330 1 115 1 377 2 264 1 
228 1 35 1 119 1 95 1 120 1 297 1 364 1 197 1 185 1 187 1 
221 1 28 1 174 1 4 1 201 1 119 1 295 1 95 1 361 1 297 1 322 1 99 1 364 1 332 1 
221 1 28 1 197 1 174 1 4 1 228 1 201 1 295 2 119 1 95 1 361 2 120 1 297 1 364 1 332 1 
295 1 355 1 361 1 327 1 42 1 
242 1 295 2 355 1 28 1 361 2 42 1 70 1 174 1 
295 1 361 1 42 1 
355 1 185 1 197 1 187 1 35 1 228 1 176 1 119 1 295 1 95 1 361 1 120 1 297 1 364 1 
174 1 
242 1 244 1 295 2 355 1 28 1 361 2 42 1 174 1 
169 1 242 1 170 1 355 2 28 2 141 1 197 1 174 2 228 1 35 1 5 1 6 2 176 1 119 1 295 5 361 5 120 1 297 1 298 1 42 2 364 1 343 1 365 5 63 1 368 1 16 1 90 1 185 1 187 1 95 1 134 2 331 1 191 2 165 2 77 1 102 4 263 2 26 2 
89 1 100 1 
288 1 371 1 197 1 228 1 95 2 120 1 297 2 100 2 364 2 
320 1 272 1 61 1 
123 1 234 1 286 2 2 1 52 1 210 1 338 2 54 1 357 1 197 1 4 1 147 1 303 1 201 1 119 1 95 1 58 1 297 1 100 1 364 1 299 1 377 2 
286 2 2 1 52 1 338 2 248 1 54 1 357 1 197 2 4 1 147 1 201 1 119 1 320 1 120 1 58 1 297 2 364 2 299 1 300 1 234 1 210 1 303 1 95 2 377 2 
228 1 95 3 120 3 297 3 100 1 248 1 364 3 197 3 
119 1 95 1 120 1 297 1 364 1 197 1 187 1 
228 1 119 1 95 1 288 1 120 1 371 1 297 1 364 1 197 1 
221 1 105 1 286 2 2 1 356 1 288 1 52 1 270 1 338 2 54 1 248 1 173 1 357 1 197 4 4 2 147 1 228 2 201 2 296 2 119 2 295 1 361 1 120 3 58 1 297 4 323 1 364 4 299 1 110 1 300 1 234 1 153 1 349 1 210 1 185 1 303 1 95 4 307 1 189 1 76 1 100 1 330 1 332 1 377 2 264 1 
146 1 95 2 120 1 297 2 100 1 99 1 248 1 364 2 197 1 
300 1 221 1 349 1 288 1 248 2 197 3 174 1 4 1 228 1 201 1 295 1 119 1 8 1 95 3 361 1 120 3 297 3 364 3 332 1 
288 1 248 1 197 2 228 1 320 1 95 2 120 2 297 2 272 1 364 2 
234 1 286 2 2 1 52 1 210 1 338 2 54 1 357 1 197 1 4 1 147 1 303 1 201 1 119 1 95 1 58 1 297 1 100 1 364 1 299 1 377 2 
234 1 286 2 2 1 52 1 312 1 338 2 54 1 357 1 197 1 4 1 304 1 303 1 201 1 119 1 95 1 58 1 297 1 100 1 364 1 299 1 377 2 
105 1 192 1 107 1 270 1 31 1 173 4 296 2 320 2 38 1 149 1 179 2 205 1 323 1 272 2 61 2 11 1 153 1 213 1 74 1 134 1 307 1 76 2 330 1 263 1 
4 1 119 1 95 1 120 1 297 1 53 1 364 1 197 1 
300 1 288 1 248 2 197 4 146 1 228 1 95 5 120 4 163 1 297 5 99 1 100 1 364 5 121 1 
119 1 95 2 120 2 297 2 53 1 364 2 197 2 187 1 
44 1 305 1 
44 1 305 1 
7 1 156 1 
7 1 156 1 
7 1 156 1 
44 1 50 1 305 1 
44 1 305 1 316 1 
103 1 44 2 305 2 328 1 7 1 156 1 
44 1 50 1 305 1 
44 1 50 1 305 1 
44 1 260 1 305 1 
44 1 260 1 305 1 
44 1 260 1 305 1 
44 2 335 2 309 3 64 1 225 1 112 2 184 1 226 2 174 1 305 2 319 1 328 1 295 2 85 1 361 2 206 1 87 1 166 2 334 2 
44 1 48 1 335 1 309 1 112 1 133 1 197 2 316 1 200 1 319 1 305 1 161 1 295 1 47 1 95 2 136 1 361 1 120 2 40 1 297 2 100 1 364 2 166 1 334 1 
118 1 232 1 359 1 
118 1 313 1 359 1 
81 1 96 1 3 1 313 1 232 2 359 3 
81 1 96 1 313 1 232 1 353 1 359 2 
81 2 96 1 313 1 232 1 359 2 
242 1 192 1 287 2 355 4 28 1 141 1 174 2 230 1 6 1 200 1 295 5 361 5 39 2 40 1 42 1 365 2 11 1 256 1 348 2 257 1 277 1 72 1 71 1 134 1 136 1 114 1 191 1 165 1 285 3 25 1 263 1 102 3 
294 1 246 1 295 1 355 1 361 1 249 1 
192 1 355 2 287 2 28 1 174 3 230 1 6 1 295 3 361 3 39 1 40 1 343 1 365 2 11 1 256 2 348 2 277 1 71 1 72 1 134 1 191 1 165 1 25 1 285 4 263 1 102 3 
192 2 287 4 355 3 28 1 311 1 174 4 230 1 6 1 295 4 361 4 39 2 40 2 343 1 365 4 11 2 256 3 88 1 348 4 277 1 71 1 72 2 22 1 134 2 191 1 165 1 285 7 25 1 263 2 102 5 
89 1 162 1 338 1 
338 1 366 1 
217 1 
338 1 377 1 
286 1 162 2 338 3 363 1 377 1 198 1 
286 1 338 1 377 1 
338 1 196 1 
170 1 139 1 173 9 179 5 342 1 205 3 298 1 180 1 151 1 127 1 301 1 213 2 134 2 76 4 374 1 331 1 77 1 263 2 
170 1 139 1 173 9 179 5 342 1 205 4 298 1 180 1 151 1 127 2 301 1 213 2 134 2 76 4 374 1 331 1 77 1 263 2 
170 1 139 1 140 1 173 9 179 5 342 1 205 3 298 1 180 1 151 1 127 1 301 1 213 2 134 2 76 4 374 1 331 1 77 1 263 2 
105 2 170 1 192 3 139 2 270 2 173 34 79 1 292 1 271 1 296 4 298 1 179 17 342 2 205 10 180 1 323 2 10 1 151 1 11 3 233 1 236 1 127 5 301 1 258 3 276 2 213 5 72 3 134 5 307 2 76 17 331 2 375 4 374 2 77 2 101 1 263 5 
105 2 170 1 139 1 270 2 173 11 296 4 298 1 179 6 342 1 205 5 323 2 151 1 209 1 127 2 301 1 276 1 213 3 134 2 307 2 76 5 331 1 98 1 374 1 77 1 263 2 
104 1 308 1 117 1 0 1 220 1 168 1 138 1 2 1 106 1 118 1 29 1 52 1 3 1 30 2 313 1 359 2 82 2 229 1 204 1 232 1 299 1 122 1 182 1 234 1 372 1 303 1 46 1 137 1 262 1 218 1 
104 1 117 1 0 1 220 1 168 1 138 1 2 1 106 1 118 1 52 1 29 2 3 1 30 3 313 1 359 2 82 3 229 1 204 1 150 1 232 1 43 1 299 1 122 1 182 1 234 1 238 1 303 1 46 1 262 1 218 1 
104 1 117 1 0 1 168 1 220 1 2 1 118 1 52 1 29 2 3 1 30 2 313 1 359 2 82 2 204 1 150 1 232 1 43 1 299 1 122 1 182 1 234 1 303 1 46 1 218 1 
220 2 168 2 2 1 106 1 52 1 30 1 338 1 290 1 82 1 229 1 58 1 325 1 299 1 122 2 234 1 65 1 238 1 129 1 303 1 284 1 218 2 376 1 377 1 
0 1 182 1 117 1 168 1 220 1 234 1 138 1 106 1 2 1 118 1 52 1 3 1 30 1 313 1 372 1 359 2 82 1 303 1 229 1 137 1 232 1 262 1 43 1 218 1 299 1 122 1 
155 1 
242 3 2 2 52 2 141 1 289 1 142 2 338 1 4 1 251 1 6 1 201 1 148 1 295 5 203 2 58 2 59 4 297 1 299 2 346 1 256 2 14 1 65 1 67 1 212 2 71 1 303 1 73 2 75 2 165 1 221 1 222 1 28 1 33 1 174 2 119 1 361 5 42 6 322 1 364 1 365 2 273 1 234 1 126 1 370 1 129 1 94 2 280 1 373 2 95 1 99 1 191 1 332 1 285 2 102 2 377 1 
221 1 242 1 244 1 33 1 4 1 251 1 201 1 148 1 295 3 119 1 361 3 59 2 297 1 322 1 42 2 364 1 14 1 370 1 212 1 95 1 99 1 332 1 
221 1 242 1 244 1 28 1 33 1 174 1 4 1 251 1 201 1 148 1 295 3 119 1 361 3 59 3 297 1 42 1 322 1 364 1 14 1 370 1 95 1 75 1 99 1 332 1 
242 1 221 1 244 1 28 1 33 1 174 1 4 1 251 1 201 1 148 1 295 3 119 1 361 3 59 3 297 1 322 1 42 2 364 1 14 1 370 1 212 1 373 1 95 1 75 1 99 1 332 1 
242 3 244 1 51 1 247 1 141 1 289 1 142 2 195 1 4 1 251 1 6 1 148 1 201 1 295 5 59 6 203 2 297 1 14 1 256 2 212 4 159 1 73 2 75 4 352 1 165 1 221 1 222 1 28 5 33 1 174 5 119 1 361 5 42 7 322 1 364 1 365 1 370 1 94 2 373 4 95 1 99 1 332 1 191 1 102 1 
242 2 221 1 222 1 28 1 141 1 289 1 142 2 33 1 174 2 4 1 251 1 6 1 201 1 148 1 295 4 119 1 361 4 203 2 59 4 297 1 42 4 322 1 364 1 365 1 256 2 14 1 370 1 212 2 94 2 280 1 373 2 73 2 95 1 75 2 99 1 191 1 165 1 332 1 285 2 102 1 
242 2 222 1 221 1 28 1 247 1 141 1 289 1 142 2 195 1 33 1 174 1 4 1 251 1 6 1 201 1 148 1 295 4 119 1 361 4 203 2 59 4 297 1 42 4 322 1 364 1 365 1 256 2 14 1 370 1 212 2 94 2 159 1 373 2 73 2 95 1 75 2 99 1 191 1 332 1 165 1 102 1 
242 2 222 1 221 1 28 1 247 1 141 1 289 1 142 2 195 1 33 1 174 1 4 1 251 1 6 1 201 1 148 1 295 4 119 1 361 4 203 2 59 4 297 1 42 4 322 1 364 1 365 1 256 2 14 1 370 1 212 2 94 2 159 1 373 2 73 2 95 1 75 2 99 1 191 1 332 1 165 1 102 1 
14 1 221 1 370 1 33 1 4 1 251 1 148 1 201 1 119 1 295 2 95 1 135 1 361 2 59 2 297 1 322 1 99 1 364 1 332 1 
242 2 222 1 221 1 28 1 247 1 141 1 289 1 142 2 195 1 33 1 174 1 4 1 251 1 6 1 201 1 148 1 295 4 119 1 361 4 203 2 59 5 297 1 322 1 42 5 364 1 365 1 256 2 14 1 370 1 212 3 94 2 159 1 73 2 373 3 95 1 75 3 352 1 99 1 191 1 165 1 332 1 102 1 
242 2 222 1 221 1 28 1 247 1 141 1 289 1 142 2 195 1 33 1 174 1 4 1 251 1 6 1 201 1 148 1 295 4 119 1 361 4 203 2 59 5 297 1 322 1 42 5 364 1 365 1 256 2 14 1 370 1 212 3 94 2 159 1 73 2 373 3 95 1 75 3 352 1 99 1 191 1 165 1 332 1 102 1 
221 1 141 1 289 1 33 1 4 1 251 1 6 1 201 1 148 1 295 2 119 1 361 2 203 1 59 2 297 1 322 1 364 1 365 1 14 1 152 1 370 1 73 1 95 1 99 1 191 1 165 1 332 1 102 1 
89 1 105 1 153 1 296 2 38 1 307 1 301 1 270 1 323 1 330 1 151 1 
105 2 192 2 356 1 270 2 173 22 56 1 83 1 271 2 296 4 320 16 205 4 179 13 323 2 272 6 61 16 11 4 153 1 236 1 17 1 127 2 258 4 213 2 72 4 134 4 307 2 76 9 100 1 375 4 330 2 24 2 219 1 115 1 263 2 
286 2 105 1 2 1 52 1 223 1 356 1 338 2 270 1 54 1 248 1 173 2 357 1 197 2 4 1 147 1 201 1 119 1 296 2 120 1 58 1 297 2 179 1 323 1 272 1 364 2 299 1 345 1 123 1 300 1 234 1 153 1 210 1 19 1 303 1 95 2 307 1 76 1 100 1 330 1 219 1 115 1 377 2 
105 3 286 4 2 1 192 2 52 1 338 4 145 1 248 1 54 2 197 3 4 2 147 2 293 1 201 2 296 6 58 1 298 1 205 5 297 3 151 1 299 1 12 2 61 6 11 2 300 1 110 2 347 2 153 3 210 2 301 1 213 4 303 2 72 2 307 3 76 11 77 1 219 1 115 1 263 4 170 1 356 1 270 3 173 22 357 2 119 3 320 6 120 1 179 11 323 3 364 3 272 6 234 2 127 1 132 2 95 3 241 2 134 4 283 1 100 1 331 1 330 3 377 4 
308 1 105 2 2 8 52 8 356 1 194 1 338 3 270 2 248 1 315 2 173 2 197 1 296 4 321 1 38 1 120 1 58 2 297 1 179 1 323 2 364 1 43 1 299 7 62 1 234 2 124 1 153 2 65 1 129 1 259 1 303 2 160 1 95 1 307 2 76 1 330 2 115 1 354 1 377 2 
228 1 95 1 288 1 224 1 120 1 297 1 364 1 197 1 
105 1 153 1 127 1 270 1 31 1 173 2 320 1 296 2 38 1 134 1 307 1 205 1 179 2 330 1 323 1 272 1 61 1 11 1 
105 1 153 1 192 1 270 1 173 2 213 1 320 1 296 2 38 1 307 1 149 1 205 1 76 2 330 1 323 1 272 1 61 1 263 1 
105 1 192 1 270 1 173 4 296 2 320 2 38 1 179 2 205 2 323 1 272 2 11 1 61 2 153 1 127 1 213 1 72 1 134 1 307 1 76 2 330 1 263 1 
62 1 105 1 153 1 127 1 270 1 31 1 173 2 320 1 296 2 134 1 307 1 205 1 179 2 330 1 323 1 272 1 61 1 11 1 
62 1 105 1 153 1 192 1 270 1 173 2 213 1 320 1 296 2 307 1 149 1 205 1 76 2 330 1 323 1 272 1 61 1 263 1 
105 1 192 1 270 1 173 4 296 2 320 2 179 2 205 2 323 1 272 2 11 1 61 2 62 1 153 1 127 1 213 1 72 1 134 1 307 1 76 2 330 1 263 1 
105 1 192 1 270 1 173 4 296 2 320 2 179 2 205 2 323 1 272 2 11 1 61 2 153 1 127 1 213 1 72 1 134 1 307 1 76 2 330 1 263 1 
105 1 286 2 2 1 356 1 52 1 270 1 338 2 54 1 173 2 357 1 197 1 4 1 147 1 201 1 296 2 119 1 58 1 179 1 297 1 323 1 364 1 299 1 110 1 234 1 153 1 210 1 303 1 95 1 307 1 76 1 100 1 330 1 115 1 377 2 
105 1 286 2 2 1 356 1 52 1 312 1 270 1 338 2 54 1 173 2 357 1 197 1 4 1 201 1 296 2 119 1 58 1 179 1 297 1 323 1 364 1 299 1 234 1 153 1 186 1 303 1 304 1 95 1 307 1 76 1 100 1 330 1 115 1 377 2 
105 1 192 1 270 1 173 4 296 2 320 2 179 2 205 2 323 1 272 2 11 1 61 2 153 1 127 1 213 1 72 1 134 1 307 1 76 2 330 1 219 1 263 1 
308 1 105 1 286 2 2 1 192 1 52 1 270 1 338 2 54 1 173 4 357 1 197 1 4 1 147 1 201 1 320 2 296 2 119 1 205 2 179 2 297 1 323 1 272 2 364 1 61 2 11 1 299 1 110 1 234 1 153 1 210 1 127 1 213 1 72 1 303 1 134 1 241 1 95 1 307 1 76 2 330 1 263 1 377 2 
105 1 192 1 288 1 270 1 173 3 197 1 228 1 296 2 320 1 120 1 205 1 297 1 179 2 323 1 364 1 272 1 11 1 61 1 153 1 127 1 72 1 95 1 134 1 307 1 351 1 76 1 330 1 219 1 263 1 
167 1 1 1 105 2 310 1 192 1 193 1 270 2 173 8 80 1 175 2 296 4 179 4 205 1 323 2 11 1 45 2 128 1 127 1 350 1 72 1 134 1 307 2 76 4 98 1 263 1 
167 1 1 1 105 2 310 1 192 1 193 1 270 2 173 8 80 1 175 2 296 4 179 4 205 2 323 2 11 1 45 2 128 1 127 1 350 1 213 1 72 1 134 1 307 2 76 4 98 1 263 1 
167 1 1 1 105 1 310 1 192 1 270 1 173 8 80 1 175 2 296 2 179 4 205 2 323 1 151 2 11 1 45 1 128 1 127 1 301 2 213 1 72 1 134 1 307 1 76 4 98 1 263 1 
167 1 1 1 310 1 105 2 192 2 193 1 270 2 144 1 173 12 80 2 175 2 296 4 179 6 205 4 323 2 11 2 45 1 128 1 127 2 213 2 72 2 134 2 307 2 76 6 98 1 263 2 
167 1 1 1 105 1 310 1 192 1 270 1 173 8 80 1 175 2 296 2 179 4 323 1 11 1 45 2 128 2 72 1 134 1 307 1 76 4 98 1 263 1 
44 1 36 1 335 1 305 1 328 1 85 1 112 1 87 1 166 1 334 1 
47 1 316 1 
44 1 335 1 305 1 269 1 112 1 158 1 166 1 13 1 334 1 
44 1 335 1 309 2 64 1 112 1 184 1 226 1 174 1 319 1 305 1 328 1 295 1 85 1 361 1 206 1 87 1 166 1 334 1 
44 1 335 1 309 2 64 1 112 1 184 1 226 1 174 1 319 1 305 1 328 1 295 1 85 1 361 1 206 1 87 1 166 1 334 1 
44 1 335 1 309 2 64 1 112 1 184 1 226 1 174 1 319 1 305 1 328 1 295 1 85 1 361 1 206 1 87 1 166 1 334 1 
103 1 15 1 50 1 
103 1 15 1 50 1 
240 1 260 1 
103 1 240 1 260 1 
48 1 133 1 
48 1 335 1 309 1 355 1 226 1 197 2 316 1 200 1 295 1 361 1 120 2 40 1 297 2 364 2 44 1 64 1 131 1 112 1 133 1 305 1 161 1 95 2 47 1 136 1 100 1 166 1 334 1 
15 1 50 1 
103 1 240 1 260 1 
105 1 2 2 52 2 356 1 336 1 270 1 315 2 173 2 84 1 296 2 297 2 179 1 323 1 364 2 299 2 207 1 234 1 124 1 153 1 93 1 303 1 95 2 307 1 76 1 330 1 219 1 115 1 116 1 
308 1 182 1 0 1 234 1 2 2 118 1 52 2 3 1 313 1 359 2 303 1 362 1 232 1 262 1 43 1 299 2 344 1 122 1 78 1 
182 1 0 1 234 1 2 1 118 1 52 1 3 1 313 1 359 2 303 1 178 1 232 1 262 1 43 1 299 1 122 1 78 1 
234 1 2 1 65 1 52 1 338 1 129 1 290 1 303 1 58 1 41 1 299 1 344 1 377 1 122 1 
182 1 0 1 234 1 2 1 118 1 52 1 3 1 313 1 359 2 303 1 362 1 232 1 262 1 43 1 299 1 344 1 122 1 78 1 
55 1 
169 1 89 1 16 1 28 1 365 1 102 1 174 1 
256 1 242 1 222 1 28 1 141 1 142 1 94 1 174 2 6 1 295 1 361 1 42 1 165 1 191 1 285 1 365 1 102 1 
242 3 286 3 2 3 287 6 192 2 52 3 141 4 143 2 338 10 196 2 54 2 291 2 198 1 6 4 295 5 60 1 58 1 299 3 11 2 346 1 347 2 63 2 256 6 348 6 154 1 16 1 157 2 71 2 303 4 72 2 306 2 162 2 165 4 263 2 26 3 308 1 169 1 221 2 267 1 28 2 174 8 361 5 42 5 365 8 366 3 234 3 92 2 188 1 279 1 134 2 191 4 285 12 102 9 377 3 
242 1 245 1 27 1 287 8 192 4 28 2 141 2 250 1 174 7 227 1 340 1 360 1 271 1 6 2 318 1 295 1 361 1 42 1 365 8 11 4 346 1 63 1 256 5 348 8 236 1 258 2 71 1 72 4 134 4 375 2 191 2 165 2 24 1 285 10 102 13 263 4 26 3 
170 1 247 1 141 1 197 1 35 1 228 1 6 1 176 1 119 1 295 1 361 1 120 1 297 1 298 1 364 1 365 2 63 1 185 1 187 1 95 1 134 2 331 1 191 1 165 1 77 1 263 1 102 2 26 2 
169 1 16 1 28 1 141 1 174 1 6 1 165 1 191 1 365 1 102 1 
63 1 347 1 256 5 348 5 287 5 192 2 174 5 72 2 134 2 365 5 285 10 11 2 263 2 102 5 26 2 
242 1 295 1 28 1 361 1 42 1 174 1 
242 2 267 1 2 4 52 4 141 1 338 1 6 2 295 3 361 3 253 1 58 2 181 1 42 4 343 1 365 2 299 4 346 2 234 1 154 2 126 1 65 1 67 1 129 1 303 1 71 2 191 2 165 2 102 2 377 1 
105 1 286 2 2 1 356 1 52 1 270 1 338 2 54 1 173 1 357 1 197 3 4 1 228 2 147 1 201 1 296 2 119 1 120 2 58 1 297 3 323 1 364 3 299 1 110 1 234 1 153 1 210 1 185 1 303 1 95 3 307 1 76 1 100 1 330 1 264 1 377 2 
346 1 256 2 348 2 287 2 28 2 141 1 174 4 71 1 6 1 374 1 165 1 191 1 285 4 365 2 102 1 
215 1 112 1 334 1 
48 1 23 1 112 1 87 1 334 1 
215 1 112 1 334 1 
215 1 112 1 334 1 
211 1 112 1 334 1 
211 1 112 1 334 1 
211 1 112 1 334 1 
112 1 334 1 
44 1 305 1 
105 2 170 1 27 1 245 1 192 1 270 2 173 19 250 1 227 1 360 1 296 4 298 1 179 11 205 6 323 2 151 1 11 2 236 1 127 3 301 1 258 1 276 1 213 3 72 2 134 4 307 2 76 8 331 1 375 1 98 1 77 1 263 3 
105 2 170 1 270 2 173 13 250 1 271 1 296 4 298 1 179 7 205 4 323 2 151 1 11 1 236 1 127 2 301 1 258 1 213 2 72 1 113 1 134 3 307 2 76 6 331 1 375 2 98 1 77 1 263 2 
105 3 170 1 245 1 27 1 192 4 270 3 173 31 250 1 227 1 271 1 360 1 296 6 298 1 179 15 205 7 323 3 151 1 11 4 236 1 127 3 301 1 258 2 276 1 213 4 72 4 113 1 134 6 307 3 76 16 331 1 375 2 98 1 24 1 77 1 263 6 
105 3 170 1 245 1 27 1 192 3 270 3 173 29 250 1 227 1 271 1 360 1 296 6 298 1 179 16 205 8 323 3 151 1 11 4 236 1 127 4 301 1 258 2 276 1 213 4 72 4 113 1 134 6 307 3 76 13 331 1 375 2 98 1 24 1 77 1 263 5 
105 2 170 1 27 1 245 1 192 1 270 2 173 19 250 1 227 1 360 1 296 4 298 1 179 11 205 6 323 2 151 1 11 2 236 1 127 3 301 1 258 1 276 1 213 3 72 2 134 4 307 2 76 8 331 1 375 1 98 1 77 1 263 3 
105 1 245 1 27 1 192 4 270 1 173 22 250 1 227 1 271 1 360 1 296 2 179 11 205 4 323 1 11 4 236 1 127 2 258 2 213 2 72 4 134 4 307 1 76 11 375 2 98 1 24 1 263 4 
105 4 170 1 245 1 27 1 192 3 270 4 173 30 250 1 227 1 360 1 271 1 296 8 298 1 179 16 205 7 323 4 151 1 11 4 236 1 127 3 301 1 258 2 276 2 213 4 72 4 113 1 134 6 307 4 76 14 331 1 375 2 98 1 24 1 77 1 263 5 
105 2 192 1 193 1 270 2 173 7 250 1 271 1 296 4 179 3 205 1 323 2 11 1 236 1 258 1 213 1 72 1 134 1 307 2 76 4 375 2 98 1 263 1 
170 1 127 2 301 1 173 5 213 2 134 1 76 3 179 2 298 1 205 4 331 2 151 1 77 2 263 1 
105 2 192 1 193 1 270 2 173 7 250 1 271 1 296 4 179 3 205 1 323 2 11 1 236 1 258 1 213 1 72 1 134 1 307 2 76 4 375 2 98 1 263 1 
105 2 170 1 270 2 173 10 296 4 205 4 179 5 298 1 323 2 151 1 127 2 301 1 276 1 213 2 134 2 307 2 76 5 331 1 77 1 263 2 
89 1 301 1 151 1 
105 1 192 1 127 1 270 1 173 4 213 1 72 1 113 1 296 2 134 1 307 1 76 2 205 2 179 2 323 1 263 1 11 1 
236 1 192 2 127 1 258 2 173 12 213 1 271 1 72 2 134 2 205 2 76 6 179 6 375 2 24 1 11 2 263 2 
105 1 170 1 192 2 270 1 173 20 271 1 83 1 296 2 298 1 179 10 205 5 323 1 151 1 11 2 127 2 301 1 258 2 276 1 213 3 72 2 134 4 307 1 76 10 331 1 375 2 24 1 77 1 263 4 
76 1 375 1 173 1 
179 1 258 1 173 1 
347 1 105 1 192 1 127 1 270 1 173 6 213 1 72 1 113 1 296 2 134 1 307 1 76 3 179 3 205 2 323 1 11 1 263 1 
105 1 245 1 27 1 192 4 270 1 173 22 250 1 227 1 271 1 360 1 296 2 179 11 205 4 323 1 11 4 236 1 127 2 258 2 213 2 72 4 134 4 307 1 76 11 375 2 98 1 24 1 263 4 
127 1 173 6 213 1 134 1 298 1 179 3 76 3 205 2 331 1 77 1 263 1 
105 1 170 1 127 1 301 1 270 1 173 3 276 1 213 1 296 2 307 1 179 1 205 2 76 2 331 1 323 1 10 1 77 1 151 1 
105 1 170 1 127 2 270 1 173 10 213 3 296 2 134 2 307 1 205 5 179 5 76 5 298 1 323 1 98 1 331 2 77 2 263 2 
105 1 127 1 270 1 173 2 296 2 134 1 307 1 179 2 205 1 98 1 323 1 11 1 
105 1 192 1 127 1 270 1 173 4 213 1 72 1 296 2 134 1 307 1 76 2 205 2 179 2 98 1 323 1 263 1 11 1 
105 3 193 1 127 1 270 3 173 3 276 1 213 1 296 6 307 3 76 2 205 2 179 1 98 1 323 3 331 1 10 1 77 1 
105 4 170 1 192 2 193 1 270 4 173 24 79 1 296 8 298 1 179 12 205 6 323 4 151 1 11 2 233 1 236 1 127 3 301 1 258 3 276 1 213 3 72 2 113 1 134 4 307 4 76 12 331 1 375 3 98 1 77 1 101 1 263 4 
146 1 281 1 95 1 297 1 100 1 99 1 364 1 
237 1 339 1 146 1 281 1 282 1 95 1 57 1 97 1 297 1 100 1 99 1 364 1 
303 1 234 1 89 1 2 1 65 1 52 1 58 1 338 1 129 1 299 1 377 1 
234 1 286 2 2 1 52 1 338 2 54 1 248 1 357 1 197 2 4 1 147 1 303 1 201 1 119 1 95 2 120 1 58 1 297 2 100 1 364 2 299 1 377 2 
234 1 286 1 2 1 154 1 52 1 338 1 248 1 357 1 197 1 147 1 303 1 119 1 95 2 283 1 120 1 297 2 100 1 364 1 299 1 377 1 
234 1 286 1 2 1 154 1 52 1 312 1 338 1 248 1 357 1 197 1 303 1 119 1 95 2 283 1 120 1 297 2 100 1 364 1 299 1 377 1 
221 1 286 1 2 2 52 2 28 1 338 4 196 1 314 1 54 1 32 1 197 1 174 1 228 1 35 1 176 1 119 1 295 2 361 2 120 1 58 1 297 1 42 1 364 1 299 2 366 1 234 1 154 1 185 1 187 1 303 1 95 1 162 1 377 1 
221 1 234 1 286 1 2 3 154 1 28 1 52 3 196 1 338 4 54 1 174 1 278 1 303 1 295 2 306 1 361 2 162 1 58 1 42 1 299 3 377 1 366 1 
303 1 234 1 2 1 52 1 299 1 354 1 
308 1 367 1 234 2 286 1 2 7 52 7 171 1 194 1 338 3 315 1 259 1 198 1 303 3 160 1 321 1 231 1 58 2 43 1 299 6 354 1 377 2 
105 2 286 2 2 1 52 1 338 2 248 1 54 1 197 2 4 1 147 1 201 1 296 4 297 2 205 3 298 1 151 1 12 1 299 1 110 1 153 2 210 1 301 1 213 2 303 1 307 2 76 4 219 1 77 1 263 2 116 1 308 1 170 1 270 2 173 8 357 1 119 2 120 1 179 4 323 2 364 2 234 1 127 1 241 1 95 2 134 2 283 1 100 1 330 2 331 1 377 2 
169 1 221 1 242 1 267 1 2 1 355 1 28 1 52 1 141 2 143 1 338 2 291 1 174 1 6 2 295 3 361 3 58 1 42 2 365 1 299 1 366 1 16 1 157 1 306 1 162 1 191 2 165 2 102 1 
308 1 234 1 286 1 2 2 52 2 338 2 188 1 198 1 303 2 162 1 299 2 354 1 377 1 
265 1 308 1 234 1 2 4 65 1 52 4 129 1 338 1 278 1 303 1 58 1 299 4 377 1 
367 1 234 1 286 1 2 2 154 1 52 2 338 1 199 1 303 2 317 1 341 1 231 1 299 2 377 1 
0 1 303 1 234 1 2 1 118 1 52 1 58 1 313 1 299 1 359 1 
308 1 303 1 234 1 2 2 52 2 336 1 43 1 299 2 
265 1 308 1 234 2 2 5 154 1 65 1 52 5 194 1 129 1 338 3 259 1 303 2 321 1 58 1 299 4 377 2 
367 1 308 1 234 2 286 1 2 2 65 1 52 2 194 1 338 2 199 1 303 3 317 1 329 1 231 1 58 1 299 2 377 2 
234 1 286 2 2 1 52 1 312 1 338 2 54 1 248 1 357 1 197 2 4 1 303 1 201 1 119 1 95 2 120 1 58 1 297 2 100 1 364 2 299 1 377 2 
367 1 303 2 234 1 286 1 2 1 154 1 171 1 52 1 231 1 338 1 299 1 377 1 198 1 
207 1 268 1 275 1 93 1 239 1 84 1 95 1 297 1 364 1 
4 1 221 1 201 1 119 1 349 1 369 1 268 1 275 1 332 1 20 1 326 1 239 1 
268 1 275 1 100 1 326 1 239 1 
274 1 221 1 355 1 369 1 349 1 28 1 275 1 268 2 20 1 239 2 174 1 4 1 201 1 119 1 295 2 361 2 100 1 332 1 326 2 
104 1 89 1 46 1 204 1 
104 1 82 1 229 1 106 1 46 1 204 1 30 1 
168 1 82 1 218 1 
104 1 106 1 66 1 30 3 82 3 229 1 46 1 202 1 137 1 204 1 86 2 324 1 
104 1 82 2 229 1 106 1 46 1 125 1 29 1 204 1 30 2 
82 1 229 1 235 1 106 1 118 1 137 1 204 1 337 1 30 1 232 1 359 1 
82 1 229 1 106 1 46 1 137 1 204 1 30 1 
104 1 82 1 229 1 106 1 46 2 137 1 30 1 
208 1 243 1 106 2 30 2 82 2 229 2 46 1 137 1 190 1 204 1 
104 1 235 1 106 1 29 2 30 3 82 3 229 1 108 1 46 1 37 1 137 1 204 2 254 1 
104 1 255 1 106 1 118 1 29 1 3 1 30 2 313 1 359 2 82 2 229 1 46 1 137 1 204 1 232 1 
104 1 235 1 106 2 125 1 29 2 18 1 30 4 82 4 229 2 108 1 46 1 137 1 204 2 
104 1 82 1 229 1 106 1 46 1 137 1 204 1 30 1 
104 2 235 1 106 1 29 2 111 1 30 4 82 4 229 1 108 1 46 2 202 1 86 1 204 3 324 1 
104 1 49 1 106 1 29 1 30 2 69 1 82 2 229 1 46 1 177 1 137 1 204 1 
104 1 106 1 30 3 34 1 82 3 229 1 46 1 202 2 137 1 204 1 86 2 324 1 
216 1 204 2 302 2 21 1 
82 1 229 1 106 1 137 1 30 1 164 1 
104 1 82 2 229 1 106 1 46 1 29 1 137 1 204 1 30 2 254 1 
9 1 
104 1 82 1 229 1 106 1 46 1 137 1 204 1 30 1 
104 1 82 3 229 1 106 1 46 1 29 1 137 1 204 1 86 1 30 3 254 1 
235 1 108 1 111 1 204 1 
46 1 204 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 111 (223,293) (223,293) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 111 (223,293) (223,293) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 111 (223,293) (223,293) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 111 (223,293) (223,293) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 229 57 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 229 57 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (260,282) 315 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (2,96) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (101,212,254) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 33 240 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (2,96) (2,96) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 33 148 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 256 42 250 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 311 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 33 128 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 7 262 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (2,96) (2,96) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (2,96) (2,96) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 33 132 271 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 33 148 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (101,212,254) (101,212,254) 204 107 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 311 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 4 237 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (260,282) (260,282) (198,275) 182 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (260,282) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (260,282) (260,282) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 201 242 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (190,235) 176 284 (198,275) 192 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 33 220 302 59 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (2,96) (2,96) 118 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 33 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 33 132 271 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (260,282) 315 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 158 (190,235) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 158 (190,235) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 158 (31,244) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 172 257 (31,244) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 172 (190,235) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (190,235) 176 284 (198,275) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 158 (31,244) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 1 111 1 75 1 55 1 23 1 313 1 43 1 14 1 28 1 320 1 293 1 248 1 195 1 223 1 
154 1 111 1 75 1 55 1 23 1 313 1 43 1 14 1 28 1 320 1 293 1 248 1 195 1 223 1 
154 1 111 1 75 1 55 1 23 1 313 1 43 1 14 1 28 1 320 1 293 1 248 1 195 1 223 1 
154 1 111 1 75 1 55 1 23 1 313 1 43 1 14 1 28 1 320 1 293 1 248 1 195 1 223 1 
154 1 111 1 1 2 229 1 23 1 313 4 141 2 43 1 233 2 214 1 191 1 14 1 215 3 60 1 28 4 195 1 
154 1 111 1 206 1 55 1 23 1 313 2 141 1 166 1 14 1 28 2 62 1 174 1 241 1 248 1 195 1 151 1 
181 1 1 1 206 1 55 1 23 1 313 3 141 2 166 1 14 2 215 1 28 3 60 1 195 2 
154 1 181 1 111 1 1 4 229 1 76 1 55 1 23 1 313 9 57 1 141 4 43 1 233 2 214 1 191 1 14 2 215 7 28 9 60 3 195 2 89 1 67 1 
154 1 181 1 111 1 1 4 229 1 76 1 55 1 23 1 313 9 57 1 141 4 43 1 233 2 214 1 191 1 14 2 215 7 28 9 60 3 195 2 89 1 67 1 
238 1 124 1 311 1 
113 1 
52 2 232 1 259 2 104 2 243 2 180 2 314 2 
253 1 52 1 95 1 137 2 310 2 187 2 314 1 232 1 315 1 259 1 260 1 287 1 104 1 106 1 243 1 180 1 
52 1 232 1 259 1 2 1 104 1 243 1 180 1 314 1 
212 1 52 1 53 1 254 1 104 1 243 1 
212 1 52 1 259 1 104 1 243 1 180 1 314 1 
213 1 101 1 7 1 9 1 97 1 
213 1 101 1 240 1 9 1 97 1 33 1 
213 1 101 1 97 1 
52 1 232 1 213 1 259 1 2 1 101 1 104 1 96 1 243 1 180 1 9 1 314 1 
238 1 
213 1 101 1 148 1 9 1 97 1 33 1 
213 3 135 1 101 3 184 1 161 1 256 1 147 1 9 2 42 1 250 1 97 1 
311 1 
52 2 259 1 104 2 208 1 66 1 243 2 180 1 314 1 
253 1 52 1 283 1 259 1 137 1 104 1 183 1 310 1 243 1 187 1 314 1 
52 5 53 1 54 1 183 2 8 1 314 4 283 1 259 4 104 5 66 1 243 5 193 1 180 1 
52 1 259 1 104 1 243 1 314 1 
52 3 259 3 183 1 104 3 243 3 180 1 314 3 
52 1 259 1 104 1 243 1 314 1 
52 1 259 1 104 1 208 1 66 1 243 1 180 1 314 1 
52 2 283 1 259 2 104 2 183 1 66 1 243 2 180 1 314 2 
52 2 53 1 259 1 54 1 104 2 183 1 243 2 314 1 
52 1 283 1 259 1 104 1 183 1 243 1 314 1 
52 1 259 1 104 1 66 1 243 1 180 1 314 1 
253 1 137 1 310 1 187 1 
253 1 137 1 310 1 187 1 
131 1 202 2 305 1 37 1 162 1 48 1 323 1 142 1 
52 1 259 1 104 1 321 1 243 1 314 1 
17 1 177 1 
17 1 177 1 
251 1 300 1 
251 1 300 1 
251 1 300 1 
17 1 177 1 279 1 
251 1 17 2 301 1 300 1 177 2 266 1 
17 1 177 1 39 1 
17 1 177 1 279 1 
17 1 177 1 279 1 
17 1 177 1 24 1 
17 1 177 1 24 1 
17 1 177 1 24 1 
155 1 72 1 117 1 160 1 39 1 210 1 213 1 119 1 259 2 15 1 177 1 85 1 179 1 49 1 17 1 52 2 134 1 314 2 272 1 101 1 103 1 104 2 243 2 
17 2 155 3 227 1 228 2 117 1 231 1 266 1 210 2 213 2 234 1 238 1 272 2 101 2 82 1 15 2 177 2 178 1 179 2 88 1 
43 1 154 1 111 1 
154 1 111 1 151 1 
43 2 269 1 154 3 165 1 151 1 249 1 
43 1 269 1 154 2 125 1 151 1 249 1 
43 1 269 2 154 2 151 1 249 1 
213 1 101 1 9 1 128 1 97 1 33 1 
213 2 69 1 21 1 101 2 7 1 9 2 97 1 262 1 
153 1 71 1 72 1 73 1 2 1 113 3 5 1 161 1 9 2 213 3 259 1 124 1 123 3 288 2 290 1 180 1 50 1 129 1 295 2 52 1 135 1 184 1 96 1 267 1 314 1 98 1 232 1 316 1 270 2 238 2 101 3 104 1 243 1 147 1 68 1 
153 1 71 1 72 2 73 1 2 1 113 3 5 1 161 1 9 2 10 1 213 3 259 1 124 1 123 3 288 2 290 1 180 1 16 1 224 1 295 2 50 1 129 1 52 1 135 1 184 1 96 1 267 1 314 1 98 1 232 1 270 2 316 1 238 2 101 3 104 1 243 1 147 1 68 1 
317 1 311 1 278 1 
317 1 46 1 
100 1 
143 1 317 1 114 1 
317 1 80 1 
317 1 114 1 
143 1 317 3 81 1 114 1 278 2 294 1 
93 1 0 1 70 1 263 1 71 1 136 7 307 1 5 1 185 1 309 1 11 1 167 4 173 3 319 2 105 2 47 3 90 1 
93 1 0 1 70 1 263 1 71 1 136 7 307 1 5 1 185 1 309 1 11 1 167 4 173 3 319 2 105 2 47 3 90 1 
93 1 252 1 0 1 70 1 263 1 71 1 136 7 307 1 5 1 185 1 309 1 11 1 167 4 173 3 319 2 105 2 47 3 90 1 
0 1 70 2 202 2 73 3 71 4 37 1 5 4 162 1 41 1 167 16 11 5 173 10 217 1 47 15 90 1 129 3 93 1 131 1 19 1 263 2 226 1 136 31 307 1 139 3 309 2 185 2 186 4 58 1 273 1 319 3 105 5 323 1 68 3 34 1 
70 1 71 1 202 4 37 2 5 1 162 2 167 5 11 1 173 4 47 4 127 1 90 1 131 2 93 1 19 1 263 1 136 9 307 1 309 1 185 1 319 2 64 1 105 3 323 2 
154 2 111 1 36 1 206 1 255 1 164 1 165 1 166 1 78 1 43 1 215 1 14 1 216 1 289 1 126 1 221 1 91 1 137 1 310 1 55 1 23 1 313 2 140 1 141 1 187 1 99 1 318 1 28 2 195 1 151 1 
154 2 111 1 36 1 206 1 255 1 164 1 165 1 166 1 78 1 43 1 14 1 215 2 216 1 126 1 221 1 91 1 137 1 138 1 310 1 55 1 313 3 141 1 187 1 99 1 318 1 28 3 65 1 32 1 195 1 151 1 
154 2 111 1 36 1 206 1 255 1 164 1 165 1 166 1 78 1 43 1 215 2 126 1 221 1 91 1 137 1 138 1 55 1 310 1 313 2 141 1 187 1 318 1 28 2 65 1 151 1 
253 1 205 1 36 1 255 1 114 1 157 1 209 1 78 2 14 1 285 1 126 2 91 2 297 1 137 1 310 1 55 2 313 1 187 1 144 1 317 1 28 1 32 1 195 1 
154 2 111 1 36 1 255 1 164 1 165 1 78 1 43 1 14 1 216 1 289 1 126 1 221 1 91 1 137 1 310 1 55 1 23 1 313 1 187 1 99 1 318 1 28 1 65 1 195 1 151 1 
79 1 
132 1 253 1 18 1 135 1 137 1 161 1 310 1 40 1 187 1 97 2 213 1 271 1 123 1 101 1 288 1 290 1 147 1 33 1 
52 1 254 1 53 1 204 1 25 1 212 1 213 1 258 1 101 1 104 1 243 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
213 1 101 1 148 1 97 1 33 1 
52 1 53 1 254 1 135 1 204 1 161 1 40 1 25 1 212 1 213 1 258 1 101 1 104 1 243 1 147 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
212 1 52 1 258 1 213 1 53 1 254 1 204 1 101 1 104 1 243 1 25 1 107 1 
52 1 53 1 254 1 135 1 204 1 161 1 40 1 25 1 212 1 213 1 258 1 101 1 104 1 243 1 147 1 107 1 
93 1 131 1 70 1 263 1 202 2 305 1 136 2 37 1 307 1 5 1 162 1 311 1 142 1 167 2 173 1 319 1 105 1 48 1 323 1 90 1 
131 1 202 2 305 1 136 2 37 1 4 1 139 1 162 1 186 1 167 1 237 1 48 1 47 1 245 1 323 1 
131 1 52 1 202 2 304 1 305 1 136 2 37 1 183 1 162 1 314 1 167 1 283 1 259 1 30 1 104 1 145 1 47 1 48 1 243 1 245 1 247 1 323 1 
253 1 202 2 37 1 162 1 282 1 283 1 259 1 260 1 48 1 47 1 52 1 131 1 182 1 305 1 136 1 137 1 183 1 310 1 187 1 314 1 30 1 104 1 243 1 245 1 323 1 275 1 
131 1 253 1 299 1 202 2 305 1 136 1 37 1 137 1 310 1 162 1 187 1 167 1 48 1 247 1 323 1 225 1 
202 2 73 1 71 1 37 1 5 1 162 1 167 1 13 1 259 1 48 1 47 1 180 1 129 1 131 1 52 1 305 1 136 2 314 1 104 1 66 1 243 1 245 1 323 1 68 1 
131 1 202 2 305 1 136 1 37 1 265 1 5 1 162 1 142 1 167 1 48 1 323 1 129 1 
131 1 202 2 71 1 305 1 136 1 37 1 162 1 142 1 44 1 48 1 47 1 323 1 68 1 
131 1 71 1 202 2 73 1 305 1 136 2 37 1 5 1 162 1 142 1 167 1 47 1 48 1 323 1 68 1 129 1 
131 1 202 2 305 1 136 1 37 1 265 1 5 1 162 1 167 1 48 1 323 1 129 1 225 1 
131 1 202 2 71 1 305 1 136 1 37 1 162 1 44 1 48 1 47 1 323 1 68 1 225 1 
131 1 71 1 202 2 73 1 305 1 136 2 37 1 5 1 162 1 167 1 47 1 48 1 323 1 68 1 129 1 225 1 
131 1 71 1 202 2 73 1 305 1 37 1 136 2 5 1 162 1 167 1 47 1 48 1 323 1 68 1 129 1 
253 1 137 1 260 1 310 1 187 1 
253 1 137 1 310 1 187 1 280 1 
131 1 71 1 202 2 73 1 305 1 136 2 37 1 5 1 162 1 167 1 47 1 48 1 245 1 323 1 68 1 129 1 
282 1 137 1 260 1 310 1 140 1 187 1 
202 2 73 1 71 1 37 1 5 1 162 1 167 1 259 1 48 1 47 1 180 1 92 1 129 1 131 1 52 1 305 1 136 2 314 1 104 1 66 1 243 1 245 1 323 1 68 1 
108 1 199 1 201 1 202 6 73 4 71 4 156 3 37 3 5 4 162 3 168 1 167 15 11 3 173 5 175 2 47 17 296 1 129 4 131 3 19 1 20 1 302 1 226 1 303 1 136 32 139 3 186 4 268 1 58 3 59 1 105 2 64 1 322 1 242 1 150 1 323 3 68 4 
108 1 199 1 201 1 202 8 73 4 71 3 156 4 37 4 5 4 162 4 168 1 167 17 11 3 173 6 175 2 47 16 296 1 129 4 131 4 19 2 20 1 302 1 226 1 303 1 136 33 139 3 186 4 268 1 58 3 59 1 105 3 64 1 322 1 242 1 150 1 323 4 68 3 
201 1 70 1 202 4 73 6 71 7 156 3 37 2 5 7 162 2 168 1 167 24 11 6 173 12 175 1 219 2 47 22 90 1 296 1 129 6 93 1 131 2 19 1 263 1 20 1 302 1 226 2 303 1 136 46 307 1 139 4 186 4 268 1 58 2 59 1 319 1 105 6 64 1 322 1 242 1 150 1 323 2 68 6 
199 1 201 2 202 4 73 3 71 3 156 2 37 2 5 3 162 2 168 1 167 9 11 3 173 6 175 1 47 10 296 1 129 3 131 2 226 1 136 19 139 1 186 2 58 1 239 1 105 3 64 1 322 1 242 1 323 2 68 3 
201 1 71 2 202 6 73 3 156 3 37 3 5 3 162 3 11 1 168 2 167 13 173 2 175 2 47 11 296 1 129 3 131 3 19 2 20 1 302 1 303 1 136 24 139 2 186 2 268 1 58 2 59 1 105 1 64 1 322 1 242 1 150 1 323 3 68 2 
52 2 63 1 104 2 243 2 261 1 35 1 
154 2 111 1 36 1 255 1 137 2 310 2 56 1 140 1 165 1 187 2 78 1 43 1 188 1 170 1 318 1 216 1 65 1 221 1 151 1 
154 2 133 1 111 1 36 1 137 1 255 1 310 1 165 1 187 1 78 1 43 1 188 1 318 1 216 1 65 1 221 1 151 1 
253 1 298 1 36 1 205 1 255 1 137 1 114 1 310 1 56 1 187 1 209 1 78 1 144 1 317 1 
154 2 111 1 36 1 255 1 137 1 310 1 56 1 165 1 187 1 78 1 43 1 188 1 170 1 318 1 216 1 65 1 221 1 151 1 
3 1 
200 1 238 1 123 1 124 1 288 1 291 1 311 1 
135 1 113 1 161 1 40 1 267 1 238 1 123 1 286 1 288 1 147 1 196 1 
253 1 198 1 36 1 255 2 114 1 161 1 278 1 40 1 284 1 81 1 123 1 176 1 290 1 46 2 94 1 135 1 137 1 310 1 187 1 97 1 143 1 190 1 317 4 192 1 147 1 
73 1 71 1 113 6 115 1 5 1 161 1 40 1 123 5 124 1 288 2 220 1 295 4 129 1 135 1 302 1 303 1 139 1 186 1 267 3 58 1 97 1 59 1 270 4 238 4 147 1 68 1 33 1 
70 1 71 1 2 1 115 2 5 1 161 1 118 1 40 1 213 1 259 1 123 2 288 1 180 1 52 1 93 1 263 1 135 1 96 1 314 1 232 1 101 1 104 1 146 1 147 1 243 1 
200 1 135 1 161 1 40 1 238 1 124 1 123 1 288 1 291 1 147 1 
73 1 71 1 113 3 5 1 267 1 270 2 238 1 123 2 288 2 129 1 295 2 68 1 
97 1 33 1 
253 1 132 1 18 1 135 1 137 1 310 1 161 1 40 1 187 1 97 2 271 1 123 1 288 1 290 1 86 1 147 1 33 1 
253 1 52 1 232 1 315 1 259 1 137 1 260 1 104 1 310 1 243 1 180 1 187 1 314 1 
18 1 135 1 113 4 161 1 40 1 267 2 270 2 238 4 319 1 123 1 124 2 288 2 290 1 147 1 295 2 
236 1 15 1 210 1 
82 1 15 1 160 1 277 1 210 1 
236 1 15 1 210 1 
236 1 15 1 210 1 
110 1 15 1 210 1 
110 1 15 1 210 1 
110 1 15 1 210 1 
15 1 210 1 
17 1 177 1 
70 1 71 1 202 2 37 1 5 1 162 1 167 4 173 2 47 4 90 1 131 1 93 1 263 1 136 8 307 1 139 1 186 1 58 1 59 1 319 1 64 1 105 2 323 1 
70 1 71 1 202 4 73 1 37 2 5 2 162 2 167 6 11 1 173 3 45 1 47 5 90 1 129 1 93 1 131 2 263 1 226 1 136 11 307 1 139 1 186 2 58 1 59 1 319 1 105 2 64 1 323 2 
202 6 73 2 71 2 37 3 5 2 162 3 11 1 167 6 173 2 45 1 47 7 129 2 131 3 19 1 302 1 303 1 136 13 139 1 186 1 58 1 268 1 59 1 64 1 105 1 150 1 323 3 68 2 
202 6 73 2 71 1 37 3 5 2 162 3 11 1 167 7 173 2 45 1 47 4 129 2 131 3 19 1 302 1 303 1 136 11 139 1 186 1 58 1 268 1 59 1 64 1 105 1 150 1 323 3 68 1 
70 1 71 1 202 2 37 1 5 1 162 1 167 4 173 2 47 4 90 1 131 1 93 1 263 1 136 8 307 1 139 1 186 1 58 1 59 1 319 1 64 1 105 2 323 1 
202 2 73 2 71 2 37 1 5 2 162 1 11 1 167 6 173 2 47 6 129 2 131 1 302 1 303 1 136 12 139 1 186 1 58 1 268 1 59 1 64 1 105 1 150 1 323 1 68 2 
202 8 73 2 71 1 37 4 5 2 162 4 11 1 167 7 173 2 45 1 47 5 129 2 131 4 19 2 302 1 303 1 136 12 139 1 186 1 268 1 58 1 59 1 64 1 105 1 150 1 323 4 68 1 
199 1 202 8 73 2 71 1 37 4 5 2 162 4 11 2 167 7 173 4 47 5 129 2 131 4 19 2 302 1 303 1 136 12 139 1 186 1 268 1 58 1 59 1 64 1 105 2 150 1 323 4 68 1 
93 1 263 3 70 3 71 1 136 7 307 2 5 1 11 3 167 3 173 6 105 3 47 4 90 1 
199 1 202 8 73 2 71 1 37 4 5 2 162 4 11 1 167 7 173 2 47 5 129 2 131 4 19 2 302 1 303 1 136 12 139 1 186 1 268 1 58 1 59 1 64 1 105 1 150 1 323 4 68 1 
93 1 131 2 19 1 263 1 70 1 71 1 202 4 136 8 37 2 307 1 5 1 162 2 167 4 11 1 173 3 319 1 105 2 47 4 323 2 90 1 
93 1 263 1 70 1 71 1 136 6 307 1 5 1 311 1 167 3 173 2 319 1 105 2 47 3 90 1 
131 1 71 1 202 2 73 1 37 1 136 4 5 1 162 1 167 2 11 1 173 2 45 1 105 1 47 2 323 1 68 1 129 1 
71 1 226 1 73 1 136 7 139 1 5 1 186 2 58 1 167 3 11 1 173 2 105 1 47 4 68 1 129 1 
70 2 73 2 71 3 202 4 37 2 4 1 5 3 6 1 162 2 11 4 167 11 173 9 219 1 47 12 90 1 129 2 93 1 131 2 19 2 263 2 226 1 136 23 307 1 139 2 186 2 319 1 105 5 323 2 68 2 
136 1 47 1 186 1 
167 1 136 1 139 1 
131 1 51 1 202 2 73 1 71 1 37 1 136 6 5 1 162 1 167 3 11 1 173 3 45 1 105 2 47 3 323 1 129 1 68 1 
202 2 73 2 71 2 37 1 5 2 162 1 11 1 167 6 173 2 47 6 129 2 131 1 302 1 303 1 136 12 139 1 186 1 58 1 268 1 59 1 64 1 105 1 150 1 323 1 68 2 
93 1 263 1 70 1 71 1 136 6 5 1 167 3 11 1 173 2 105 1 47 3 
131 1 19 1 70 1 263 1 202 2 136 3 37 1 307 1 6 1 162 1 167 1 11 1 173 2 105 1 47 2 323 1 90 1 
131 1 93 1 263 2 70 2 202 2 71 2 37 1 136 10 5 2 162 1 118 1 11 2 167 5 173 5 64 1 105 3 47 5 323 1 
131 1 202 2 37 1 136 2 5 1 162 1 167 2 11 1 173 1 64 1 323 1 129 1 
131 1 71 1 202 2 73 1 37 1 136 4 5 1 162 1 167 2 11 1 173 2 105 1 64 1 47 2 323 1 68 1 129 1 
131 3 19 1 199 1 263 1 70 1 202 6 136 3 37 3 6 1 162 3 11 1 167 1 173 2 64 1 105 1 47 2 323 3 
199 1 70 3 202 10 73 3 71 5 37 5 6 1 5 5 162 5 41 1 167 16 11 5 173 12 45 1 217 1 47 18 90 1 129 3 93 2 131 5 19 2 263 3 226 1 136 34 307 1 139 3 186 4 58 1 319 1 64 1 105 7 323 5 68 3 34 1 
52 1 53 1 104 1 54 1 308 1 243 1 
52 1 53 1 264 1 308 1 54 1 169 1 27 1 12 1 61 1 104 1 243 1 
253 1 317 1 36 1 205 1 255 1 137 1 114 1 310 1 311 1 187 1 209 1 
52 1 253 1 36 1 255 1 137 1 114 1 158 1 183 1 310 1 187 1 314 1 143 1 317 1 235 1 259 1 104 1 243 1 
52 1 36 1 255 1 137 1 114 1 158 1 183 1 310 1 187 1 314 1 143 1 317 1 121 1 235 1 259 1 104 1 243 1 
52 1 36 1 255 1 137 1 114 1 158 1 183 1 310 1 187 1 314 1 143 1 317 1 121 1 259 1 104 1 243 1 244 1 
36 1 255 1 137 1 114 1 310 1 278 1 187 1 257 1 97 1 143 1 213 1 80 1 121 1 317 4 172 1 101 1 46 1 31 1 
36 1 255 1 137 1 114 1 310 1 278 1 187 1 97 1 143 1 213 1 190 1 80 1 121 1 317 4 172 1 101 1 46 1 
36 1 255 1 137 1 29 1 310 1 187 1 
253 2 36 2 255 3 114 2 116 1 159 1 81 1 287 1 87 1 130 1 137 7 310 6 140 1 187 7 143 1 317 3 29 1 102 1 65 1 246 1 274 1 
52 1 259 1 104 1 183 1 243 1 314 1 
253 1 198 1 135 1 137 1 161 1 310 1 278 1 40 1 9 1 187 1 97 1 213 1 190 1 317 2 284 1 101 1 176 1 46 1 86 1 147 1 
94 1 36 1 137 1 255 2 114 1 310 1 278 1 187 1 143 1 100 1 317 2 81 1 29 1 
253 1 112 1 205 1 36 1 255 1 137 4 114 1 310 4 140 1 187 4 209 1 317 1 222 1 
36 1 137 2 255 2 306 1 114 1 310 2 38 1 187 2 26 1 143 1 121 1 317 1 102 1 274 1 
253 1 154 1 318 1 111 1 36 1 255 1 137 1 310 1 187 1 151 1 
317 1 36 1 255 1 137 2 114 1 207 1 65 1 310 2 87 1 140 1 187 2 
253 1 205 1 36 2 137 5 255 2 114 2 310 4 159 1 140 1 187 5 209 1 121 1 317 3 222 1 87 1 246 1 
253 1 205 1 36 2 137 5 255 2 114 2 310 4 140 1 187 5 209 1 121 1 317 3 122 1 222 1 87 1 246 1 
52 1 253 1 36 1 255 1 137 1 114 1 158 1 183 1 310 1 187 1 314 1 143 1 317 1 259 1 104 1 243 1 244 1 
36 1 137 1 255 2 114 1 310 1 187 1 143 1 121 1 317 1 81 1 102 1 274 1 130 1 
197 1 189 1 230 1 163 1 
197 1 189 1 213 1 101 1 83 1 84 1 230 1 149 1 163 1 9 1 
52 1 189 1 63 1 104 1 230 1 243 1 261 1 163 1 35 1 
83 1 84 1 163 1 
206 1 311 1 141 1 166 1 
14 1 28 1 206 1 313 1 141 1 195 1 166 1 
28 1 55 1 91 1 
109 1 206 1 23 1 313 3 141 1 77 1 281 1 166 1 14 1 28 3 241 2 195 1 
233 1 215 1 14 1 28 2 206 1 313 2 141 1 195 1 166 1 
43 1 154 1 191 1 111 1 1 1 14 1 28 1 23 1 313 1 141 1 195 1 
14 1 28 1 23 1 313 1 141 1 195 1 166 1 
14 1 28 1 206 1 23 1 313 1 195 1 166 2 
14 2 28 2 292 1 23 1 313 2 194 1 141 1 324 1 195 2 166 1 
1 1 206 1 76 1 23 1 313 3 141 2 166 1 14 1 215 2 28 3 60 1 195 1 67 1 
154 2 111 1 206 1 23 1 313 2 141 1 165 1 166 1 43 1 14 1 171 1 215 1 28 2 151 1 195 1 
1 1 206 1 23 1 313 4 141 2 166 1 233 1 214 1 14 2 215 2 28 4 60 1 195 2 
14 1 28 1 206 1 23 1 313 1 141 1 195 1 166 1 
109 1 1 1 206 2 313 4 141 3 77 1 166 2 215 2 14 1 28 4 60 1 241 1 195 1 152 1 
120 1 215 1 14 1 28 2 206 1 218 1 23 1 313 2 141 1 89 1 195 1 166 1 
109 2 203 1 206 1 23 1 313 3 141 1 77 1 166 1 14 1 28 3 241 2 195 1 
22 1 276 1 74 2 141 2 
211 1 14 1 28 1 23 1 313 1 195 1 
215 1 14 1 28 2 206 1 23 1 313 2 141 1 195 1 67 1 166 1 
312 1 
14 1 28 1 206 1 23 1 313 1 141 1 195 1 166 1 
206 1 23 1 313 3 141 1 166 1 215 1 14 1 28 3 241 1 195 1 67 1 
1 1 60 1 141 1 152 1 
141 1 166 1 

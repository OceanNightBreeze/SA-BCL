#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 159 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (157,201) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (157,201) 221 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (157,201) 221 17 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 233 128 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) (97,106) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) (97,106) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 132 119 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 215 42 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 41 199 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 41 199 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 41 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 215 42 65 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 215 42 65 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 187 (79,256) 158 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 234 87 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (10,48) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 173 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (54,242) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (16,261) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (39,180,232,250) (39,180,232,250) (39,180,232,250) 153 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
11 1 
74 1 131 1 64 1 45 1 55 1 116 1 67 1 57 1 118 1 271 1 270 1 
174 1 64 1 45 1 49 1 67 1 271 1 131 1 186 1 55 1 116 1 57 1 118 2 
76 1 118 1 
76 1 118 1 
118 1 
76 1 118 1 
76 1 118 1 
138 1 76 1 56 1 118 2 249 1 150 1 
273 1 11 1 
174 1 64 2 45 2 3 1 49 1 67 1 271 2 273 1 186 1 168 1 103 1 
89 1 145 1 165 1 
108 1 189 1 45 1 268 2 239 1 241 1 228 1 194 1 231 1 271 1 273 1 75 1 16 1 216 1 263 1 169 1 247 2 83 2 85 1 
174 3 64 3 45 3 49 3 160 1 67 1 271 3 273 1 186 1 168 1 
174 1 43 1 64 1 45 1 49 1 67 1 271 1 
174 1 64 1 45 1 3 1 49 1 67 1 271 1 186 1 103 1 
174 2 64 2 45 2 49 2 159 1 160 1 6 1 67 1 271 2 131 1 186 1 55 1 116 1 136 1 57 1 103 1 118 1 
174 1 273 1 64 2 45 2 49 1 160 1 5 1 270 1 271 2 
174 1 64 1 223 1 45 1 49 1 160 1 6 1 67 1 271 1 131 1 55 1 116 1 136 1 57 1 118 1 
89 1 174 2 64 2 45 2 49 2 160 1 271 2 145 1 186 1 103 1 
189 1 108 1 45 1 239 1 268 1 241 1 228 1 271 1 273 1 216 1 16 1 247 1 169 1 263 1 83 1 
189 1 108 1 45 1 239 1 268 1 241 1 228 1 9 1 271 1 54 1 273 1 247 1 169 1 263 1 83 1 
220 2 0 1 105 1 89 1 107 2 46 1 226 2 192 1 94 1 229 1 198 1 72 1 145 1 34 1 73 1 165 1 171 1 219 1 120 1 
174 1 64 1 45 1 49 1 67 1 271 1 36 1 57 1 
174 1 108 1 189 1 64 1 45 2 239 1 268 1 49 1 241 1 160 1 228 1 6 1 271 2 145 1 16 1 216 1 263 1 169 1 247 1 83 1 
174 2 64 2 45 2 49 2 160 1 67 1 271 2 273 1 186 1 168 1 103 1 
174 2 36 1 43 1 64 2 45 2 49 2 67 1 271 2 
201 1 51 1 
201 1 51 1 
157 1 179 1 
157 1 179 1 
157 1 179 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 51 1 
201 1 221 1 202 1 51 1 
201 1 221 1 202 1 17 1 51 1 118 1 
33 1 276 1 80 1 
235 1 276 1 80 1 
207 1 33 2 235 1 80 3 50 1 29 1 
207 1 33 1 109 1 235 1 80 2 29 1 
33 1 207 1 235 1 80 2 29 2 
76 1 210 1 118 1 
76 2 195 1 118 2 214 1 70 1 
233 1 138 1 76 1 101 1 193 1 56 1 147 1 142 1 118 2 249 1 150 1 
138 1 193 1 142 1 128 1 233 1 101 1 56 1 147 1 118 1 150 1 249 1 
272 1 228 1 11 1 
228 1 69 1 
275 1 
108 1 228 1 
272 2 108 1 98 1 263 1 228 3 7 1 
108 1 263 1 228 1 
228 1 93 1 
220 3 0 3 175 4 254 1 123 1 46 2 190 1 257 2 226 7 213 1 197 1 73 1 185 1 170 1 265 1 86 1 121 1 
220 3 0 3 175 4 254 1 123 1 46 2 190 1 257 2 226 7 213 1 197 1 73 1 185 1 170 1 265 1 86 1 121 1 
220 3 0 3 175 4 254 1 123 1 46 2 190 1 257 2 226 7 213 1 197 1 73 1 185 1 170 1 264 1 265 1 86 1 121 1 
220 12 0 6 152 2 222 4 254 2 123 1 255 1 190 1 46 2 257 1 226 23 94 2 229 3 8 1 234 1 170 4 58 1 137 1 105 2 107 4 62 3 175 11 66 3 213 3 114 1 72 2 73 3 184 3 35 1 185 1 121 1 120 2 
220 4 152 1 0 4 105 2 107 4 175 5 254 1 224 1 190 1 46 3 257 2 226 9 94 2 213 1 197 1 200 1 72 2 73 1 185 1 170 1 265 1 86 1 121 1 120 2 
232 1 153 1 180 1 250 1 
232 1 106 1 180 1 250 1 
189 1 4 1 50 1 129 1 97 1 235 1 99 1 135 2 169 1 205 1 24 1 238 1 268 1 28 1 212 1 180 2 30 1 113 1 32 1 33 1 247 1 80 2 276 1 83 1 39 2 
232 1 106 1 180 1 250 1 
232 1 153 1 180 1 250 1 
81 1 
188 1 239 1 268 1 142 1 132 1 247 1 56 1 147 1 83 1 118 1 119 1 150 1 249 1 
154 1 209 1 64 1 45 1 125 1 67 1 270 1 271 1 215 1 74 1 131 1 78 1 55 1 116 1 57 1 118 2 60 1 
154 1 209 1 64 1 45 1 125 1 67 1 270 1 271 1 74 1 131 1 78 1 55 1 116 1 57 1 118 2 22 1 60 1 
42 1 154 1 209 1 64 1 45 1 125 1 67 1 270 1 271 1 215 1 74 1 131 1 78 1 55 1 116 1 57 1 118 2 60 1 
118 1 
188 1 154 1 45 1 125 1 126 1 131 1 55 1 56 1 57 1 59 1 206 1 60 1 209 1 64 1 67 1 244 1 181 1 270 1 271 1 144 1 74 1 78 1 116 1 147 1 118 2 249 1 150 1 
41 1 188 1 154 1 45 1 125 1 199 1 131 1 55 1 56 1 20 1 57 1 59 1 60 1 64 1 209 1 67 1 271 1 270 1 144 1 74 1 78 1 116 1 147 1 118 2 150 1 249 1 
41 1 188 1 154 1 45 1 125 1 199 1 131 1 55 1 56 1 20 1 57 1 59 1 60 1 64 1 209 1 67 1 271 1 270 1 144 1 74 1 78 1 116 1 147 1 118 2 150 1 249 1 
41 1 188 1 154 1 45 1 125 1 131 1 55 1 19 1 56 1 57 1 204 1 59 1 60 1 64 1 209 1 67 1 271 1 270 1 74 1 78 1 116 1 147 1 117 1 118 2 150 1 249 1 
42 1 154 1 209 1 64 1 45 1 65 1 125 1 67 1 270 1 271 1 215 1 74 1 131 1 78 1 55 1 116 1 57 1 118 2 60 1 
42 1 154 1 209 1 64 1 45 1 65 1 125 1 67 1 270 1 271 1 215 1 74 1 131 1 78 1 55 1 116 1 57 1 118 2 60 1 
188 1 154 1 45 1 125 1 126 1 260 1 131 1 55 1 56 1 57 1 204 1 59 1 206 1 60 1 209 1 64 1 67 1 181 1 270 1 271 1 74 1 78 1 116 1 147 1 118 2 249 1 150 1 
220 3 0 2 89 1 190 1 46 2 257 1 226 6 192 1 94 1 197 1 11 1 165 1 265 1 105 1 107 2 175 3 213 1 72 1 145 1 34 1 73 1 273 2 86 1 219 1 121 1 120 1 
220 7 0 3 89 3 222 4 255 2 91 1 226 17 94 2 229 1 96 1 234 1 165 13 134 1 133 1 170 3 105 2 107 4 62 3 175 10 139 1 66 3 141 1 213 3 72 2 73 1 34 2 145 13 273 1 183 1 184 3 219 1 120 2 
220 1 89 1 189 1 45 2 91 1 49 1 226 2 160 1 228 1 94 1 6 1 16 1 166 1 133 1 263 1 169 1 267 1 105 1 174 1 107 2 108 1 175 1 64 1 268 1 239 1 27 1 241 1 141 1 271 2 72 1 34 1 273 1 216 1 247 1 83 1 85 1 219 1 120 1 
220 2 0 2 89 2 91 1 226 5 160 1 227 1 6 1 94 2 228 1 13 1 165 2 16 1 169 1 170 2 105 2 107 4 174 1 108 1 175 3 239 1 111 1 241 1 34 2 184 1 247 1 120 2 189 1 45 2 49 1 133 1 263 1 266 1 62 1 64 1 268 1 213 1 271 2 72 2 145 2 216 1 79 1 83 1 148 1 219 2 
220 1 189 2 45 1 91 1 49 1 226 2 192 1 160 1 228 3 94 2 161 1 52 1 194 2 259 1 53 1 100 1 169 2 205 1 23 1 105 2 174 1 107 4 175 1 108 2 64 1 268 8 239 2 141 1 271 1 72 2 34 2 37 1 247 7 217 1 83 8 248 1 149 1 219 2 120 2 
220 2 0 1 89 1 45 1 46 1 191 1 49 1 226 3 94 1 229 1 165 1 133 1 103 1 105 1 174 1 107 2 62 1 175 1 64 1 213 1 271 1 72 1 145 1 34 1 73 1 184 1 186 1 219 1 120 1 
0 1 105 1 89 1 107 2 62 1 175 2 226 2 192 1 94 1 213 1 72 1 145 1 34 1 165 1 170 1 219 1 40 1 120 1 
220 2 0 1 105 1 89 1 107 2 46 1 226 2 192 1 94 1 229 1 198 1 72 1 145 1 34 1 73 1 165 1 219 1 120 1 
220 2 0 2 89 2 46 1 226 4 192 1 94 1 229 1 165 2 170 1 105 1 62 1 107 2 175 2 213 1 72 1 34 1 145 2 73 1 184 1 219 1 120 1 
0 1 105 1 89 1 107 2 62 1 175 2 226 2 94 1 213 1 72 1 145 1 34 1 165 1 170 1 248 1 219 1 40 1 120 1 
220 2 0 1 105 1 89 1 107 2 46 1 226 2 94 1 229 1 198 1 72 1 145 1 34 1 73 1 165 1 248 1 219 1 120 1 
0 1 105 1 89 1 107 2 62 1 175 2 226 2 94 1 213 1 72 1 145 1 34 1 165 1 184 1 170 1 248 1 219 1 120 1 
0 1 105 1 89 1 107 2 62 1 175 2 226 2 94 1 213 1 72 1 145 1 34 1 165 1 184 1 170 1 219 1 120 1 
220 1 189 1 45 1 91 1 226 2 228 1 94 1 16 1 263 1 169 1 105 1 107 2 175 1 108 1 268 1 239 1 241 1 111 1 141 1 271 1 72 1 34 1 273 1 216 1 247 1 83 1 219 1 120 1 
220 1 189 1 45 1 91 1 226 2 228 1 94 1 9 1 54 1 263 1 169 1 105 1 107 2 175 1 108 1 268 1 239 1 241 1 211 1 141 1 271 1 72 1 34 1 273 1 247 1 83 1 219 1 120 1 
0 1 105 1 89 1 107 2 62 1 175 2 226 2 94 1 213 1 72 1 145 1 34 1 165 1 184 1 133 1 170 1 219 1 120 1 
0 1 89 1 189 1 45 1 226 2 228 1 94 1 165 1 16 1 263 1 169 1 170 1 105 1 62 1 107 2 175 2 108 1 268 1 241 1 111 1 213 1 271 1 72 1 145 1 34 1 184 1 216 1 247 1 83 1 148 1 149 1 219 1 120 1 
0 1 89 1 45 1 49 1 226 2 94 1 162 1 165 1 133 1 170 1 103 1 105 1 174 1 107 2 62 1 175 2 64 1 213 1 271 1 72 1 34 1 145 1 184 1 186 1 219 1 120 1 
220 4 251 1 0 1 155 1 226 8 94 2 229 1 196 2 127 1 200 1 170 1 172 1 237 2 105 2 107 4 62 1 175 4 26 1 213 1 72 2 73 1 184 1 146 1 84 1 120 2 
220 4 251 1 0 2 155 1 46 1 226 8 94 2 229 1 196 2 127 1 200 1 170 1 172 1 237 2 105 2 107 4 62 1 175 4 26 1 213 1 72 2 73 1 184 1 146 1 84 1 120 2 
220 8 251 1 0 4 155 1 190 2 46 3 257 2 226 18 94 1 229 1 196 2 127 1 197 2 200 1 170 1 265 2 237 1 105 1 62 1 107 2 175 10 213 3 72 1 73 3 184 1 146 1 84 1 86 2 120 1 121 2 
220 6 251 1 0 4 155 1 46 2 226 12 94 2 229 2 196 2 127 1 200 1 262 1 170 2 172 1 237 1 105 2 107 4 62 2 175 6 213 2 72 2 73 2 184 2 146 1 84 2 120 2 
220 4 251 1 155 1 226 8 94 1 229 1 196 2 127 2 200 1 237 2 105 1 107 2 62 1 175 4 213 1 72 1 73 1 184 1 146 1 84 1 120 1 
220 1 189 1 45 2 91 1 225 1 226 2 228 1 94 1 52 1 194 2 133 1 100 1 203 1 169 1 104 1 105 1 107 2 108 1 175 1 64 2 268 2 141 1 68 1 271 2 72 1 34 1 246 1 247 2 83 2 219 1 120 1 
238 1 25 1 189 1 268 2 50 1 30 1 163 1 33 1 130 1 235 1 77 1 99 1 276 1 80 2 169 1 247 2 83 2 205 1 149 1 
238 1 189 1 268 1 50 1 30 1 163 1 33 1 235 1 274 1 77 1 99 1 276 1 80 2 247 1 169 1 83 1 205 1 
208 1 189 1 108 1 239 1 268 1 228 1 30 1 143 1 130 1 37 1 169 1 247 1 83 1 23 1 
238 1 25 1 189 1 268 1 50 1 30 1 163 1 33 1 130 1 235 1 77 1 99 1 276 1 80 2 169 1 247 1 83 1 205 1 
243 1 
48 1 10 1 11 1 59 1 
188 1 56 1 147 1 244 1 59 1 144 1 249 1 150 1 
189 1 108 1 188 1 239 1 268 1 256 1 158 1 228 2 7 1 142 1 69 1 12 1 169 2 263 1 247 1 56 1 147 1 83 1 187 1 150 1 249 1 
234 1 222 1 188 1 66 1 56 1 147 1 59 1 87 1 249 1 150 1 
88 2 188 1 110 1 190 1 240 1 213 2 73 1 56 1 147 1 20 1 118 1 265 1 59 2 150 1 249 1 121 1 
188 1 56 1 10 1 59 1 249 1 150 1 
62 1 73 1 184 1 147 1 229 1 213 1 59 1 
268 1 239 1 247 1 83 1 
188 1 176 1 56 1 147 1 142 1 59 1 249 1 150 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
173 1 115 1 
201 1 51 1 
220 10 152 1 0 9 222 1 90 1 190 2 46 5 257 1 226 24 94 2 229 1 197 1 234 1 200 1 18 1 170 4 265 2 105 2 107 4 62 2 63 1 175 14 66 1 240 1 140 1 213 5 72 2 73 4 184 2 86 1 121 2 87 1 120 2 
220 5 0 3 222 2 255 1 46 2 190 1 257 1 226 11 94 2 197 1 234 1 200 1 170 1 265 1 105 2 61 1 107 4 62 1 175 6 66 1 213 2 72 2 73 1 184 1 86 1 121 1 87 1 120 2 
220 15 152 1 0 6 222 2 255 1 90 1 190 1 46 4 257 1 226 29 94 3 229 4 197 1 234 1 200 1 18 1 170 2 265 1 61 1 105 3 63 1 107 6 62 4 175 14 66 2 140 1 213 5 72 3 73 5 184 4 183 1 86 1 121 1 87 1 120 3 
220 12 152 1 0 7 222 2 255 1 90 1 190 1 46 4 257 1 226 27 94 3 229 3 197 1 234 1 200 1 18 1 170 3 265 1 61 1 105 3 63 1 107 6 62 4 175 15 66 2 140 1 213 5 72 3 73 4 184 4 183 1 86 1 121 1 87 1 120 3 
220 10 152 1 0 9 222 1 90 1 190 2 46 5 257 1 226 24 94 2 229 1 197 1 234 1 200 1 18 1 170 4 265 2 105 2 107 4 62 2 63 1 175 14 66 1 240 1 140 1 213 5 72 2 73 4 184 2 86 1 121 2 87 1 120 2 
220 11 0 4 222 2 255 1 90 1 46 2 226 22 94 1 229 4 234 1 200 1 18 1 170 2 105 1 63 1 107 2 62 4 175 11 66 2 140 1 213 4 72 1 73 4 184 4 183 1 87 1 120 1 
220 13 152 2 0 7 222 2 90 1 255 1 190 1 46 4 257 1 226 28 94 4 229 3 197 1 234 1 200 1 18 1 170 3 265 1 61 1 105 4 63 1 107 8 62 4 175 15 66 2 140 1 213 5 72 4 73 4 184 4 183 1 86 1 121 1 87 1 120 4 
220 4 0 1 222 2 255 1 46 1 226 7 94 2 229 1 234 1 200 1 172 1 105 2 107 4 62 1 175 3 66 1 213 1 72 2 73 1 184 1 87 1 120 2 
220 4 0 6 175 3 190 3 46 3 226 7 213 1 197 1 73 1 170 3 86 2 265 1 121 3 
220 4 0 1 222 2 255 1 46 1 226 7 94 2 229 1 234 1 200 1 172 1 105 2 107 4 62 1 175 3 66 1 213 1 72 2 73 1 184 1 87 1 120 2 
220 4 0 3 105 2 152 1 107 4 175 4 46 2 190 1 257 1 226 8 94 2 213 1 197 1 72 2 73 1 170 1 265 1 86 1 120 2 121 1 
220 3 0 2 73 1 175 3 46 2 190 1 257 1 226 6 213 1 265 1 86 1 197 1 11 1 121 1 
220 2 0 2 61 1 105 1 107 2 62 1 175 2 46 1 226 4 94 1 229 1 213 1 72 1 73 1 184 1 170 1 120 1 
220 6 0 2 62 2 222 2 175 6 255 1 46 1 66 2 226 12 229 2 213 2 234 1 73 2 183 1 184 2 170 1 
220 12 0 9 152 2 222 2 255 1 190 2 46 5 257 1 226 23 94 2 229 2 197 1 170 4 265 1 105 2 62 2 107 4 175 11 139 1 66 2 213 3 114 1 72 2 73 3 184 2 183 1 86 1 121 2 120 2 
220 1 222 1 226 1 
175 1 66 1 226 1 
220 3 105 1 61 1 0 3 107 2 62 1 175 3 46 2 226 6 94 1 229 1 213 1 72 1 73 1 184 1 170 1 266 1 120 1 
220 11 0 4 222 2 255 1 90 1 46 2 226 22 94 1 229 4 234 1 200 1 18 1 170 2 105 1 63 1 107 2 62 4 175 11 66 2 140 1 213 4 72 1 73 4 184 4 183 1 87 1 120 1 
220 3 0 2 175 3 190 1 46 1 226 6 213 1 73 1 170 1 265 1 121 1 
220 2 0 2 152 1 105 1 107 2 175 1 46 1 190 1 226 3 94 1 197 1 114 1 72 1 170 1 86 1 121 1 120 1 
220 5 105 1 0 5 107 2 175 5 190 2 46 3 240 1 226 10 94 1 213 2 200 1 72 1 73 2 170 2 265 1 120 1 121 2 
105 1 0 1 107 2 62 1 175 2 226 2 94 1 213 1 200 1 72 1 170 1 120 1 
220 2 0 2 105 1 107 2 62 1 175 2 46 1 226 4 94 1 229 1 213 1 200 1 72 1 73 1 184 1 170 1 120 1 
220 2 152 1 105 3 0 2 107 6 175 1 190 1 46 1 226 3 94 3 114 1 200 1 72 3 170 1 172 1 120 3 121 1 
220 8 0 6 152 1 222 1 190 2 46 3 226 15 94 4 197 1 234 1 200 1 170 3 265 1 58 1 172 1 61 1 105 4 107 8 175 7 66 1 240 1 213 2 114 1 72 4 73 2 86 1 120 4 121 2 
273 1 64 1 253 1 45 1 5 1 271 1 270 1 
253 1 64 1 45 1 156 1 47 1 178 1 5 1 270 1 271 1 71 1 273 1 38 1 
189 1 108 1 37 1 268 1 239 1 169 1 247 1 228 1 83 1 11 1 23 1 
174 1 108 1 189 1 64 1 45 2 239 1 268 1 49 1 241 1 160 1 228 1 271 2 273 1 16 1 263 1 169 1 247 1 83 1 
189 1 122 1 45 2 49 2 160 1 228 3 93 1 16 1 168 1 55 1 169 1 263 2 102 1 57 1 174 1 108 2 64 2 268 1 241 1 67 2 271 2 273 1 247 1 83 1 
189 1 122 1 45 2 49 2 160 1 228 3 93 1 54 1 168 1 55 1 169 1 263 2 102 1 57 1 174 1 108 2 64 2 268 1 241 1 67 2 271 2 273 1 247 1 83 1 
122 1 268 1 247 1 228 1 242 1 83 1 118 1 69 1 
122 1 268 1 247 1 228 1 83 1 118 1 69 1 261 1 
189 1 268 1 169 1 247 1 83 1 217 1 
108 2 189 2 239 2 268 7 7 1 228 3 194 1 161 1 52 1 259 1 112 1 53 1 15 1 167 1 247 6 263 1 169 3 217 1 83 7 205 1 149 1 
220 7 0 5 89 1 226 14 160 1 94 2 228 1 165 1 16 1 168 1 169 1 170 1 105 2 107 4 174 1 108 1 175 7 240 1 111 1 241 1 34 2 246 1 247 1 120 2 121 2 189 1 45 2 190 2 46 4 49 1 257 1 197 1 133 1 263 1 265 2 64 1 268 1 67 1 213 3 271 2 72 2 73 3 145 1 273 3 216 1 79 1 83 1 148 1 149 1 86 1 219 2 
76 1 118 1 
108 1 189 1 268 2 7 1 228 2 12 1 272 1 247 2 263 1 169 2 217 1 83 2 149 1 
252 1 108 1 189 1 239 1 268 4 228 1 95 1 37 1 169 1 247 4 83 4 149 1 23 1 
122 1 108 1 189 1 268 2 124 1 228 1 112 1 182 1 15 1 247 2 263 1 169 2 82 1 83 2 
189 1 235 1 268 1 239 1 99 1 276 1 80 1 169 1 247 1 83 1 
108 1 189 1 268 2 225 1 228 1 52 1 247 2 169 1 83 2 149 1 205 1 
122 1 108 2 189 2 239 1 268 5 228 3 52 1 161 1 95 1 53 1 37 1 247 4 169 2 83 5 149 1 23 1 
122 1 108 2 189 2 239 1 268 5 228 3 52 1 161 1 95 1 236 1 37 1 247 4 169 2 83 5 149 1 23 1 
174 1 108 1 189 1 64 1 45 2 239 1 268 1 49 1 241 1 160 1 228 1 271 2 54 1 273 1 263 1 169 1 247 1 83 1 
122 1 108 1 189 1 268 1 7 1 228 1 112 1 15 1 167 1 247 1 263 1 169 2 83 1 
104 1 64 1 45 1 44 1 203 1 68 1 245 1 271 1 31 1 
151 1 230 1 31 1 
273 1 1 1 44 1 245 1 31 1 
151 1 44 2 1 2 258 1 67 1 230 1 245 2 31 1 273 1 131 1 76 1 55 1 116 1 136 1 57 1 118 2 
4 1 11 1 113 1 24 1 
232 1 180 1 250 1 
28 1 135 1 212 1 
232 1 153 1 180 1 250 1 
232 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 218 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 235 1 80 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
232 1 2 1 135 1 180 2 39 1 250 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
14 1 177 2 4 2 92 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
164 1 
232 1 153 1 180 1 250 1 
232 1 153 1 180 1 250 1 
2 1 4 1 269 1 21 1 
4 1 24 1 

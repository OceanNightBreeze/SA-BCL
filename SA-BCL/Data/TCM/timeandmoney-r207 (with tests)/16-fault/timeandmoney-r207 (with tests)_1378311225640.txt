#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 70 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 21 160 84 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 21 160 84 225 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 21 160 84 (23,163) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 21 160 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (9,211) (267,287) (267,287) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 20 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 24 254 132 268 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 24 254 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 24 254 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 24 114 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 24 254 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 24 254 132 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (9,211) (9,211) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 192 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (9,211) (267,287) (267,287) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (9,211) (267,287) (267,287) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (9,211) (267,287) (267,287) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 192 10 33 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 21 160 84 (23,163) (23,163) 70 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 21 160 84 225 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 21 199 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 21 199 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 21 199 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 21 199 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 21 199 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
224 1 63 1 51 2 248 2 12 1 87 3 253 2 52 1 90 1 39 1 19 1 185 3 305 1 
3 1 222 1 224 1 121 1 51 5 12 1 87 9 272 1 52 2 90 1 19 6 169 2 240 2 283 1 138 1 103 2 246 1 290 1 63 1 248 2 293 1 253 2 39 4 185 9 305 3 41 1 76 2 44 1 
3 1 222 1 224 1 121 1 51 5 12 1 87 9 272 1 52 2 90 1 19 6 169 2 240 2 283 1 138 1 103 2 246 1 290 1 63 1 248 2 293 1 253 2 39 4 185 9 305 3 41 1 76 2 44 1 
3 1 222 1 224 1 121 1 51 6 12 1 87 10 272 1 52 2 90 1 19 7 169 2 240 2 283 1 138 1 103 2 246 1 290 1 63 1 248 2 293 1 253 2 39 5 185 10 305 4 41 1 76 2 44 1 
222 1 224 1 121 1 51 4 12 1 87 7 272 1 52 2 90 1 19 4 169 2 240 1 283 1 138 1 103 2 246 1 290 1 63 1 248 2 293 1 253 2 39 3 185 7 305 2 41 1 76 2 44 1 
3 1 103 1 224 1 121 1 63 1 51 3 248 1 12 1 87 4 253 1 39 2 19 3 185 4 305 1 169 1 240 2 76 1 44 1 
103 1 224 1 290 1 63 1 195 1 248 1 127 1 212 1 12 1 87 1 253 1 52 1 92 1 185 1 76 1 
3 1 103 1 224 1 246 1 121 1 51 5 63 1 248 2 12 1 87 9 253 2 52 1 90 1 39 4 276 1 19 7 185 9 169 1 41 1 305 3 240 2 76 1 44 1 156 1 
3 1 103 1 224 1 246 1 121 1 51 5 63 1 248 2 12 1 87 9 253 2 52 1 90 1 39 4 276 1 19 7 185 9 169 1 41 1 305 3 240 2 76 1 44 1 156 1 
163 1 2 1 160 1 218 1 84 1 21 1 260 1 23 1 
171 1 
110 1 2 2 218 2 187 1 260 1 241 1 171 1 88 1 
2 5 118 2 80 1 160 1 122 1 84 1 270 1 88 2 163 1 201 1 17 2 202 3 57 2 58 1 21 1 241 2 171 2 23 1 135 1 146 1 106 1 292 1 67 2 295 2 70 1 299 1 218 5 187 1 43 5 260 2 75 1 
273 1 171 1 88 1 
264 1 
160 1 84 1 21 1 
225 1 160 1 84 1 21 1 
160 1 84 1 21 1 23 1 
2 1 288 1 139 1 47 1 289 1 107 1 85 1 88 1 37 1 256 1 218 1 205 1 94 1 171 1 
160 1 21 1 
2 1 218 1 124 1 260 1 241 1 
2 2 141 1 218 2 187 1 260 1 241 1 171 1 88 1 
2 1 218 1 241 1 
166 1 129 1 149 2 
149 1 
149 1 
149 1 
166 1 129 1 
166 1 129 1 
166 1 129 1 149 1 
149 1 
149 1 
149 1 
149 1 
149 1 
149 1 
286 2 0 1 2 2 287 1 79 1 9 1 149 2 113 2 218 2 133 2 207 1 115 2 171 1 97 2 267 1 
286 1 2 1 113 1 79 1 218 1 21 1 133 1 115 1 97 1 149 1 
103 2 169 1 195 1 126 1 13 2 
103 1 169 1 76 1 
103 1 195 1 76 1 
198 1 103 3 169 2 195 1 126 1 13 1 
103 2 169 1 195 1 126 1 13 1 96 1 
2 5 49 1 160 1 84 1 86 2 88 1 163 1 55 1 202 2 17 1 58 1 236 1 21 1 241 1 282 1 171 1 135 1 23 1 136 1 105 1 250 1 108 1 181 1 67 1 295 1 303 1 218 5 187 1 43 1 260 4 
2 5 49 1 160 1 196 1 84 1 124 2 88 1 232 1 163 1 55 1 202 2 17 1 236 1 58 1 21 1 241 3 171 1 135 1 23 1 136 1 105 1 250 1 108 1 67 1 295 1 303 1 218 5 187 1 43 1 260 4 188 2 
2 3 160 1 49 1 84 1 86 1 88 1 163 1 55 1 17 1 202 2 21 1 171 1 282 1 23 1 135 1 136 1 105 1 250 1 181 1 108 1 67 1 295 1 303 1 218 3 43 1 260 2 75 1 
2 2 49 1 86 1 55 1 17 1 202 2 20 1 282 1 135 1 136 1 105 1 250 1 181 1 108 1 67 1 295 1 303 1 218 2 43 1 260 1 75 1 
152 1 186 1 168 1 
45 1 273 1 112 1 
221 1 112 1 
25 1 112 1 
25 1 45 2 46 1 112 3 203 1 83 1 
25 1 46 1 112 1 
112 1 65 1 
100 1 61 7 223 1 80 1 122 1 227 1 270 1 161 1 68 2 214 3 57 1 72 1 237 3 130 2 238 1 153 1 131 4 135 1 
223 1 158 2 80 2 226 1 122 1 227 5 270 2 161 2 55 3 200 1 57 4 238 1 237 15 130 5 131 16 135 4 285 1 100 1 174 1 101 1 61 31 140 3 32 1 178 3 249 1 108 3 68 3 150 4 183 1 298 1 214 10 72 2 262 1 116 1 
158 4 80 1 226 2 227 1 122 1 270 1 161 1 57 1 237 4 130 3 238 1 131 5 135 1 285 1 100 1 61 9 32 2 177 1 249 2 36 1 68 2 183 2 214 4 72 1 
100 1 61 7 223 1 80 1 122 1 227 1 270 1 161 1 68 2 214 3 57 1 72 1 237 3 130 2 238 1 131 4 135 1 
100 1 61 7 223 1 80 1 122 1 227 1 270 1 161 1 68 2 214 3 57 1 72 1 237 3 130 2 238 1 131 4 135 1 
25 1 117 2 244 1 176 2 81 2 6 2 210 1 248 1 15 1 87 1 182 1 252 1 253 1 52 2 109 2 111 1 112 1 185 1 93 1 259 1 261 1 134 1 208 1 308 2 
117 1 103 2 78 1 81 1 176 1 6 1 31 1 195 1 63 1 64 1 210 1 248 1 87 1 253 1 52 1 109 1 198 1 275 1 301 1 185 1 169 1 259 1 95 1 76 1 242 1 308 1 
117 1 78 1 224 1 81 1 6 1 51 1 195 1 12 1 87 2 52 1 198 1 275 1 19 1 277 1 169 1 95 1 242 1 103 2 176 1 31 1 63 1 210 1 248 1 253 1 109 1 301 1 185 2 259 1 76 1 308 1 
117 1 78 1 224 1 81 1 6 1 51 1 195 1 12 1 87 3 52 1 198 1 275 1 19 2 169 1 281 1 95 1 103 2 176 1 31 1 64 1 210 1 248 1 253 1 109 1 301 1 185 3 259 1 261 1 76 1 308 1 
117 1 78 1 224 1 81 1 6 1 51 1 195 1 12 1 87 2 52 1 198 1 19 2 169 1 281 1 103 2 176 1 31 1 64 1 210 1 109 1 301 1 185 2 259 1 76 1 308 1 
155 1 
190 1 2 2 81 2 6 2 49 1 15 2 230 1 53 1 17 1 202 2 58 1 167 1 93 1 241 2 25 1 209 1 244 1 247 1 210 1 67 1 295 1 255 1 38 1 112 1 216 1 218 2 187 1 259 1 43 2 308 2 
110 1 190 1 255 1 2 2 38 1 40 1 218 2 187 1 241 2 
190 1 255 1 2 1 38 1 218 1 265 1 99 1 
2 2 190 1 175 1 255 1 110 1 38 1 218 2 40 1 187 1 241 2 265 1 99 1 
268 1 2 2 190 1 209 1 175 2 67 1 295 1 254 1 110 1 255 1 38 1 202 1 17 1 58 1 235 1 218 2 40 2 167 1 187 1 43 1 132 1 241 3 24 1 
2 1 190 1 209 1 67 1 295 1 255 1 38 1 202 1 17 1 58 1 218 1 167 1 43 1 
2 1 190 1 209 1 67 1 254 1 295 1 255 1 38 1 202 1 17 1 235 1 58 1 218 1 167 1 43 1 24 1 
2 1 190 1 209 1 67 1 254 1 295 1 255 1 38 1 202 1 17 1 235 1 58 1 218 1 167 1 43 1 24 1 
2 1 190 1 209 1 159 1 67 1 231 1 295 1 255 1 38 1 202 1 17 1 58 1 218 1 114 1 43 1 24 1 
2 1 190 1 209 1 175 1 67 1 295 1 254 1 255 1 38 1 202 1 17 1 58 1 235 1 218 1 40 1 167 1 43 1 132 1 241 1 265 1 24 1 99 1 
2 1 190 1 209 1 175 1 67 1 295 1 254 1 255 1 38 1 202 1 17 1 58 1 235 1 218 1 40 1 167 1 43 1 132 1 241 1 265 1 24 1 99 1 
2 1 190 1 209 1 67 1 295 1 231 1 255 1 38 1 17 1 202 1 58 1 218 1 43 1 
158 4 226 2 227 1 128 1 16 1 55 1 233 1 57 1 130 1 237 5 131 4 60 1 135 1 174 1 61 9 140 1 143 1 30 1 32 2 177 1 291 1 178 1 249 2 108 1 150 2 183 2 298 1 214 2 258 1 
158 6 48 1 226 3 227 1 128 1 11 1 55 2 233 2 57 1 130 1 237 9 131 11 170 1 60 1 285 2 135 2 174 2 62 1 61 20 27 1 140 1 29 1 30 2 32 3 177 1 291 3 178 2 249 3 294 1 108 2 150 2 214 2 183 3 258 1 
158 4 226 2 227 1 128 1 55 1 233 1 57 1 130 1 237 5 131 4 60 1 135 1 174 1 61 9 140 1 143 1 30 1 32 2 177 1 291 1 178 1 249 2 294 1 108 1 150 2 183 2 298 1 214 2 258 1 
158 4 226 2 227 1 128 1 55 1 233 1 57 1 130 1 237 5 131 4 60 1 135 1 174 1 61 9 140 1 143 1 30 1 32 2 177 1 291 1 178 1 249 2 294 1 108 1 150 2 183 2 298 1 214 2 258 1 
191 2 158 4 80 1 48 1 226 2 122 1 227 6 270 1 11 1 128 1 55 6 233 1 57 7 238 1 130 6 237 22 131 24 170 1 60 1 285 1 135 7 100 1 174 2 62 1 61 46 27 1 140 6 29 1 30 1 32 2 177 1 291 3 178 4 249 2 294 1 108 6 68 1 150 4 183 2 298 2 214 12 258 1 
286 1 113 1 211 1 9 1 115 1 97 1 149 1 
192 1 
286 1 113 1 115 1 197 1 97 1 149 1 
286 1 0 1 2 1 287 1 79 1 9 1 149 1 113 1 218 1 133 2 207 1 115 1 171 1 97 1 267 1 
286 1 0 1 2 1 287 1 79 1 9 1 149 1 113 1 218 1 133 2 207 1 115 1 171 1 97 1 267 1 
286 1 0 1 2 1 287 1 79 1 9 1 149 1 113 1 218 1 133 2 207 1 115 1 171 1 97 1 267 1 
204 1 
204 1 
142 1 
142 1 
239 1 14 1 
286 1 0 1 26 1 2 1 192 1 105 1 33 1 10 1 149 1 69 1 113 1 218 1 260 1 207 1 133 1 115 1 97 1 
204 1 
142 1 
157 1 158 2 119 1 81 2 6 2 226 1 123 1 229 1 162 1 54 1 89 1 237 1 131 1 208 2 25 1 61 2 245 1 145 1 32 1 210 1 249 1 107 2 37 2 256 2 183 1 112 1 300 1 259 1 74 1 263 1 308 2 
25 1 102 1 244 1 81 1 176 1 6 1 210 1 15 1 251 1 252 1 112 1 93 1 259 1 308 1 
103 2 4 1 243 1 81 1 176 1 6 1 31 1 195 1 64 1 210 1 251 1 198 1 301 1 169 1 259 1 95 1 76 1 308 1 
103 2 4 1 243 1 81 2 176 1 6 2 31 1 195 1 64 1 210 1 251 1 198 1 301 1 277 1 169 1 259 1 95 1 76 1 308 2 
103 2 243 1 81 1 176 1 6 1 31 1 195 1 64 1 210 1 198 1 302 1 301 1 169 1 259 1 95 1 76 1 308 1 
206 1 
292 1 67 1 88 1 295 1 299 1 17 1 202 1 58 1 43 1 171 1 
136 1 55 1 202 2 303 1 108 1 135 1 
2 1 218 1 187 1 241 1 171 1 88 1 
2 3 120 1 81 4 6 4 49 2 15 2 53 2 164 1 17 2 202 2 58 1 93 1 241 4 22 2 25 1 244 1 247 1 210 1 67 2 295 2 112 1 216 1 73 1 218 3 187 2 259 1 43 2 75 1 308 4 
273 1 299 1 202 1 43 1 292 1 171 1 88 1 
2 1 5 1 193 1 88 1 202 1 17 1 58 1 167 1 241 1 171 2 67 1 295 1 217 1 218 1 187 1 43 1 264 1 
2 2 45 1 46 1 221 2 81 1 6 1 49 1 50 1 8 1 83 1 125 1 85 1 15 1 55 1 202 3 17 2 59 1 58 2 241 2 135 1 136 2 25 1 210 1 66 1 34 1 108 1 67 2 295 2 112 4 303 2 218 2 304 1 187 1 259 2 43 2 154 1 308 1 
118 2 5 3 191 1 48 1 11 1 55 4 17 1 202 7 58 1 57 4 135 4 136 8 174 1 62 1 27 1 140 4 29 1 178 2 108 4 67 1 150 2 295 1 298 1 303 8 43 11 264 3 
2 1 118 2 80 1 160 1 122 1 84 1 270 1 67 1 295 1 163 1 70 1 202 1 17 1 57 1 235 1 58 1 218 1 43 2 21 1 23 1 135 1 
225 1 160 1 84 1 21 1 
136 1 49 1 67 1 88 1 295 1 53 1 202 1 17 1 58 1 43 1 171 1 
28 1 239 1 179 1 115 1 97 1 
115 1 97 1 173 1 
115 1 97 1 173 1 
115 1 97 1 173 1 
189 1 115 1 97 1 
189 1 115 1 97 1 
189 1 115 1 97 1 
115 1 97 1 
149 1 
61 10 158 2 80 2 32 1 226 1 177 1 227 2 122 1 270 2 249 1 70 1 183 1 214 5 57 2 130 3 237 5 131 5 135 2 
61 2 158 2 226 1 32 1 177 1 227 1 249 1 183 1 55 1 214 1 131 2 135 1 
61 4 140 1 158 2 226 1 32 1 177 1 227 1 249 1 108 1 214 2 183 1 55 1 57 1 130 1 237 2 131 2 135 1 
61 3 158 6 143 1 80 1 226 3 32 3 177 1 227 1 270 1 249 3 183 3 214 2 237 2 130 1 131 1 220 1 285 1 
158 10 80 3 226 5 122 2 227 5 270 3 200 1 55 3 57 5 238 1 237 18 279 1 130 7 131 16 285 2 135 5 100 1 174 1 101 1 61 34 140 3 143 1 32 5 177 1 178 3 249 5 108 3 68 1 150 4 183 5 298 1 214 12 220 1 116 1 
158 2 80 1 226 1 122 1 270 1 55 1 57 1 130 2 237 5 238 1 131 6 135 2 174 1 100 1 61 11 27 1 32 1 177 1 178 1 249 1 108 1 68 1 150 2 214 2 183 1 298 1 
158 4 80 1 226 2 122 1 227 1 270 1 55 1 57 1 130 2 238 1 237 5 279 1 131 6 135 2 100 1 174 1 61 11 27 1 32 2 177 1 178 1 249 2 108 1 68 1 150 2 183 2 298 1 214 3 
158 6 80 1 48 1 226 3 122 1 227 1 270 1 11 1 55 2 57 3 238 1 279 1 237 10 130 3 131 9 135 3 285 1 100 1 174 1 61 19 62 1 27 1 140 2 29 1 32 3 177 1 178 1 249 3 108 2 68 1 150 1 183 3 214 4 
158 6 80 1 48 1 226 3 122 1 227 2 270 1 11 1 55 2 57 2 238 1 279 1 237 7 130 3 131 10 285 1 135 3 100 1 174 1 61 17 62 1 27 1 140 1 29 1 32 3 177 1 178 1 249 3 108 2 68 1 150 1 183 3 214 5 
158 2 80 1 226 1 122 1 270 1 55 1 57 1 130 2 237 5 238 1 131 6 135 2 174 1 100 1 61 11 27 1 32 1 177 1 178 1 249 1 108 1 68 1 150 2 214 2 183 1 298 1 
158 2 48 1 226 1 227 1 11 1 55 2 57 2 237 6 130 1 131 6 135 2 174 1 61 12 62 1 27 1 140 2 29 1 32 1 177 1 178 1 249 1 108 2 150 1 183 1 214 2 
158 8 80 1 48 1 226 4 122 1 227 2 270 1 11 1 55 2 57 2 238 1 237 8 279 1 130 3 131 10 135 3 285 2 100 1 174 1 62 1 61 18 27 1 140 1 29 1 32 4 177 1 178 1 249 4 108 2 68 1 150 1 183 4 214 5 
158 8 48 1 226 4 227 3 11 1 55 3 57 2 237 7 130 3 131 9 135 3 285 2 174 1 62 1 61 16 27 1 140 2 29 1 143 1 32 4 177 1 178 1 249 4 108 3 150 1 183 4 214 6 
100 2 61 7 80 3 227 3 122 1 270 3 214 6 57 1 237 4 238 1 130 3 131 3 135 1 
158 8 80 1 48 1 226 4 122 1 227 1 270 1 11 1 55 2 57 2 238 1 237 8 130 3 131 10 135 3 285 2 100 1 174 1 62 1 61 18 27 1 140 1 29 1 143 1 32 4 177 1 178 1 249 4 108 2 68 1 150 1 183 4 214 4 
100 1 61 8 158 4 80 1 226 2 32 2 122 1 227 1 270 1 249 2 68 1 214 3 183 2 57 1 237 4 130 2 238 1 131 4 135 1 285 1 
100 1 61 6 80 1 122 1 270 1 68 1 273 1 214 2 57 1 237 3 238 1 130 2 131 3 135 1 
61 4 140 1 158 2 226 1 32 1 227 1 249 1 108 1 214 2 183 1 55 1 57 1 130 1 237 2 279 1 131 2 135 1 
174 1 61 7 140 1 227 1 178 1 108 1 150 2 298 1 55 1 214 2 57 1 130 1 237 4 131 3 135 1 
191 1 158 4 80 2 226 2 122 1 227 4 270 2 55 2 57 3 238 1 237 12 130 5 131 11 135 3 285 2 100 1 61 23 140 2 32 2 178 2 249 2 108 2 68 1 150 2 214 9 298 1 183 2 215 1 220 1 
61 1 237 1 150 1 
61 1 131 1 178 1 
61 6 158 2 140 1 32 1 226 1 227 1 125 1 249 1 108 1 183 1 55 1 214 3 57 1 279 1 237 3 130 2 131 3 135 1 
158 2 48 1 226 1 227 1 11 1 55 2 57 2 237 6 130 1 131 6 135 2 174 1 61 12 62 1 27 1 140 2 29 1 32 1 177 1 178 1 249 1 108 2 150 1 183 1 214 2 
61 6 80 1 122 1 227 1 270 1 214 2 57 1 237 3 130 1 131 3 135 1 
100 1 61 3 158 2 80 1 226 1 32 1 227 1 270 1 249 1 214 2 183 1 130 1 237 2 238 1 131 1 220 1 285 1 
37 1 256 1 18 1 278 1 307 1 94 1 107 1 
104 1 107 1 213 1 37 1 256 1 234 1 184 1 18 1 278 1 307 1 94 1 266 1 
25 1 244 1 81 4 6 4 210 1 148 1 15 1 151 1 112 1 277 1 93 1 259 1 308 4 
25 1 46 1 81 2 6 2 7 1 210 1 271 1 180 1 112 1 91 1 259 2 22 1 172 1 308 2 
103 1 81 1 6 1 31 1 195 1 259 1 210 1 76 1 15 1 308 1 
25 1 81 2 6 2 64 1 210 1 54 1 112 1 277 1 259 1 74 1 308 2 
25 2 244 1 81 4 6 5 194 1 82 1 210 2 15 1 54 1 151 1 112 3 277 1 93 1 259 2 22 1 308 5 
25 2 244 1 81 4 6 5 194 1 210 2 147 1 15 1 54 1 151 1 112 3 277 1 93 1 259 2 22 1 308 5 
25 1 273 1 112 1 244 1 81 1 6 1 93 1 259 1 210 1 15 1 308 1 
199 1 21 1 
199 1 21 1 
199 1 21 1 
25 1 46 1 2 2 221 1 45 1 81 3 6 3 269 1 65 1 210 1 148 1 15 1 85 1 35 1 88 1 112 4 165 1 218 2 259 1 241 1 171 1 22 1 308 3 
25 1 46 1 2 2 221 1 45 1 81 3 6 3 65 1 8 1 210 1 148 1 15 1 85 1 35 1 88 1 112 4 218 2 259 1 241 1 171 1 22 1 308 3 
81 1 6 1 280 1 259 1 210 1 308 1 
25 2 46 1 81 5 6 6 194 1 64 1 82 1 7 1 83 1 210 2 15 2 54 1 112 3 277 1 91 1 280 1 219 1 306 1 259 3 308 6 
199 1 21 1 
2 3 221 1 45 1 81 1 6 1 50 1 8 1 15 1 85 1 88 1 164 1 202 1 17 2 58 2 241 2 171 1 292 1 67 2 295 2 299 1 112 2 218 3 304 1 187 1 43 1 260 1 154 1 308 1 
25 1 45 1 46 1 81 2 6 2 83 1 210 1 112 2 277 1 59 1 280 1 259 2 308 2 
199 1 21 1 
25 1 46 1 81 1 6 1 7 1 83 1 210 1 112 1 91 1 306 1 259 2 22 1 308 1 
224 1 185 1 51 1 63 1 248 1 12 1 87 1 253 1 
222 1 224 2 51 3 248 1 12 2 87 4 253 1 296 1 39 1 19 2 92 1 185 4 305 1 284 1 
1 1 224 1 144 1 51 1 63 1 248 1 12 1 87 2 253 1 19 1 185 2 156 1 
222 2 224 1 51 1 63 1 248 1 12 1 87 3 253 1 296 1 56 1 185 3 284 2 
51 1 42 1 98 1 
185 1 63 1 228 1 248 1 87 1 253 1 
224 1 19 1 185 2 51 1 41 1 63 1 248 1 12 1 87 2 253 1 
274 1 
224 1 185 1 51 1 63 1 248 1 12 1 87 1 253 1 
273 1 224 1 51 1 12 1 
224 1 185 1 51 1 248 1 12 1 87 1 253 1 
52 1 109 1 185 1 
77 1 222 2 224 1 51 1 63 1 248 1 12 1 87 3 253 1 296 1 185 3 284 1 
224 1 19 1 185 2 51 1 248 1 240 1 12 1 87 2 253 1 
103 1 39 1 121 1 185 1 169 1 51 1 63 1 248 1 76 1 87 1 253 1 
224 1 185 1 51 1 63 1 248 1 87 1 253 1 
224 2 185 1 63 1 248 1 12 1 87 1 253 1 
137 1 224 1 51 1 63 1 248 2 87 2 253 2 71 1 257 1 185 2 
224 1 246 1 63 1 51 2 248 1 12 1 87 3 253 1 39 1 19 2 185 3 41 1 305 1 
103 2 224 1 51 1 195 1 63 1 248 1 12 1 87 2 253 1 198 1 297 1 19 1 185 2 169 1 76 1 
3 1 224 1 63 1 51 2 248 2 12 1 87 4 253 2 39 1 19 2 185 4 305 1 240 1 
222 1 224 1 63 1 51 1 248 1 12 1 87 3 253 1 19 1 185 3 41 1 
39 1 92 1 51 1 305 1 
224 1 51 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (152,220,285,297,307) (267,351) (267,351) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 179 83 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 179 83 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (149,329) 16 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (5,229) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (5,229) (5,229) 318 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (149,329) 16 328 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (166,167,201,349) (166,167,201,349) (29,157,223) (29,157,223) (29,157,223) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (166,167,201,349) (166,167,201,349) (29,157,223) (29,157,223) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (166,167,201,349) (166,167,201,349) (29,157,223) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (166,167,201,349) (166,167,201,349) (29,157,223) (29,157,223) (29,157,223) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 70 242 171 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 70 242 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 70 242 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (149,329) 16 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (5,229) (5,229) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (166,167,201,349) (166,167,201,349) 87 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 167 1 201 1 349 1 317 1 236 1 
112 1 167 1 201 1 349 1 317 1 236 1 
112 1 167 1 201 1 349 1 317 1 236 1 
112 1 167 1 201 1 349 1 317 1 236 1 
179 1 349 1 317 2 103 1 9 1 180 1 166 1 61 1 167 1 201 2 107 1 159 1 236 1 292 1 
111 1 315 1 349 1 317 1 220 1 284 1 180 1 351 1 167 1 201 1 267 1 236 1 159 1 
315 1 349 2 317 3 135 1 9 2 246 1 166 1 127 1 167 2 72 1 201 3 107 1 236 1 
38 1 179 1 26 1 315 1 349 2 317 7 103 1 9 3 136 1 180 1 166 5 61 1 127 2 167 2 72 1 83 1 201 7 107 3 159 1 236 1 292 1 
38 1 179 1 26 1 315 1 349 2 317 7 103 1 9 3 136 1 180 1 166 5 61 1 127 2 167 2 72 1 83 1 201 7 107 3 159 1 236 1 292 1 
225 1 176 1 310 1 
273 2 176 1 120 1 
124 1 143 1 348 1 173 1 212 1 247 1 248 1 30 1 232 1 320 1 
161 1 162 2 124 1 241 2 271 1 327 2 149 1 16 1 234 1 343 1 
124 1 5 1 
225 1 141 1 193 1 124 1 348 1 51 1 80 1 5 1 228 1 229 1 247 1 248 1 176 1 105 1 286 1 320 1 302 1 
225 1 141 1 124 1 143 1 348 1 51 1 80 2 5 1 212 1 229 1 247 1 248 1 232 1 176 1 286 2 105 1 320 1 302 1 
131 1 286 1 80 1 304 1 140 1 
225 1 176 1 286 2 50 1 80 2 304 1 39 1 140 1 
286 1 80 1 140 1 
229 1 124 1 286 1 80 1 304 1 5 1 
176 1 
225 1 324 1 176 1 286 2 80 2 304 1 39 1 140 1 
110 1 293 1 39 1 5 1 244 1 175 1 318 1 176 1 140 2 225 1 192 1 124 1 196 1 80 5 304 2 144 1 257 1 102 1 56 2 229 1 231 1 263 1 286 5 181 2 266 4 183 1 291 2 203 1 237 1 
310 1 173 1 
143 1 348 2 187 1 173 2 212 1 247 2 232 1 320 2 290 1 
216 1 49 1 268 1 
47 1 161 1 162 1 255 1 241 1 3 1 41 1 173 1 82 1 247 1 327 1 320 1 200 1 205 1 252 1 277 1 
47 1 161 1 162 1 49 1 255 1 143 1 348 1 3 1 241 1 41 1 212 1 82 1 247 2 327 1 287 1 320 2 200 1 182 1 205 1 277 1 
347 1 143 4 348 5 187 1 173 1 338 1 212 4 228 1 247 5 232 1 287 1 320 5 182 2 177 1 
247 2 248 1 249 1 294 1 143 2 348 2 320 2 212 2 
247 3 232 1 143 3 348 3 320 3 182 1 173 1 212 3 
247 1 248 1 249 1 143 1 348 1 320 1 212 1 
247 1 248 1 232 1 143 1 348 1 187 1 320 1 290 1 212 1 
141 1 161 1 162 1 124 1 143 2 348 2 187 1 241 1 80 1 51 1 212 2 247 2 283 1 327 1 248 1 232 1 328 1 149 1 16 1 286 1 105 1 287 1 320 2 182 1 302 1 
247 2 143 1 348 2 320 2 182 1 173 1 338 1 212 1 228 1 
141 1 334 1 143 3 187 1 348 3 80 1 51 1 212 3 247 3 283 1 248 1 232 1 176 1 286 1 105 1 287 1 320 3 182 2 302 1 
247 2 232 1 49 1 143 2 348 2 187 1 320 2 182 1 268 1 212 2 
47 1 161 1 162 1 255 1 241 1 3 1 41 1 173 1 82 1 247 1 327 1 320 1 200 1 205 1 277 1 
346 1 47 1 161 1 162 1 255 1 241 1 41 1 173 1 247 1 327 1 320 1 200 1 205 1 35 1 277 1 
206 1 313 1 77 1 85 1 21 1 49 2 268 2 66 1 90 1 155 1 308 2 260 1 31 1 216 2 96 1 181 1 332 2 183 1 275 2 150 1 202 1 75 1 109 4 322 1 
247 1 248 1 143 1 294 1 348 1 320 1 212 1 302 1 
17 1 55 1 
17 1 55 1 
154 1 269 1 
154 1 269 1 
154 1 269 1 
17 1 243 1 55 1 
17 1 243 1 55 1 
17 1 243 1 55 1 
17 1 62 1 55 1 
17 1 314 1 55 1 
154 1 185 1 303 1 17 2 269 1 55 2 
17 1 62 1 55 1 
17 1 62 1 55 1 
314 1 336 1 173 1 8 1 247 2 44 1 17 1 320 2 73 1 46 1 122 1 253 1 143 2 348 2 80 1 164 1 197 1 100 1 212 2 281 1 55 1 259 1 126 1 286 1 
185 1 253 2 210 1 113 1 80 2 145 1 197 2 153 1 281 1 245 2 55 2 104 1 259 2 44 3 176 1 126 2 17 2 286 2 251 1 
180 1 61 1 159 1 
180 1 111 1 159 1 
180 3 111 1 61 2 204 1 240 1 139 1 
180 2 111 1 61 1 204 1 86 1 139 1 
180 2 111 1 61 1 204 2 139 1 
225 1 78 1 304 3 80 4 39 1 101 1 339 1 263 1 262 1 176 1 341 1 286 4 140 1 
131 1 225 1 2 1 304 3 80 4 39 1 101 1 198 1 263 1 341 1 176 1 286 4 168 1 140 2 
244 1 89 1 6 2 339 1 273 4 176 3 15 2 73 1 120 2 191 1 75 1 225 1 78 1 304 2 196 1 80 3 144 1 101 1 260 1 262 1 286 3 181 1 266 3 183 1 291 2 237 1 
6 4 244 1 89 2 339 1 273 7 176 4 340 1 250 1 15 4 119 1 73 2 120 3 191 1 75 2 225 1 78 1 196 1 80 4 304 3 144 1 101 1 260 2 262 2 286 4 181 2 266 5 183 2 291 4 237 1 
310 1 41 1 67 1 
0 1 41 1 
148 1 
47 1 200 1 41 1 
41 1 217 1 
47 1 41 1 
47 1 350 1 25 1 200 1 41 3 67 2 
85 3 21 2 4 1 114 1 102 1 230 1 231 1 308 3 11 1 181 1 183 1 275 4 300 1 203 1 20 2 109 7 160 1 
85 3 21 2 4 1 114 1 102 1 230 1 231 1 308 3 11 1 181 1 183 1 275 4 300 1 203 1 20 2 109 7 160 1 
85 3 21 2 4 1 114 1 102 1 230 1 231 1 308 3 274 1 11 1 181 1 183 1 275 4 300 1 203 1 20 2 109 7 160 1 
313 1 85 10 239 1 295 1 4 5 89 3 114 2 68 4 155 1 11 1 300 1 275 16 20 3 75 3 76 1 160 1 322 1 209 1 21 5 102 2 326 3 230 2 231 2 308 15 260 3 233 1 181 4 332 2 265 1 183 4 333 1 203 1 150 1 109 31 
313 2 85 4 21 3 4 1 114 1 134 1 102 1 230 1 155 2 231 1 308 4 11 1 181 1 332 4 183 1 275 5 203 1 150 2 76 1 20 2 109 9 160 1 322 2 323 1 
111 1 1 1 241 1 240 1 315 1 317 1 157 1 14 1 205 1 223 1 344 1 159 1 162 1 255 1 211 1 349 1 29 1 327 1 180 2 309 1 166 1 61 1 288 1 167 1 235 1 201 2 236 1 
111 1 1 1 240 1 241 1 315 1 317 2 14 1 319 1 205 1 223 1 344 1 159 1 162 1 255 1 163 1 125 1 211 1 349 1 29 1 327 1 180 2 309 1 166 2 61 1 167 1 235 1 201 3 
111 1 162 1 255 1 1 1 240 1 241 1 125 1 315 1 211 1 317 1 29 1 180 2 327 1 309 1 166 2 61 1 319 1 235 1 205 1 201 2 344 1 159 1 
47 1 161 1 218 1 162 1 255 1 163 1 226 1 241 1 41 1 315 2 337 1 211 2 349 1 317 1 258 1 327 1 156 1 309 2 167 1 235 2 205 1 201 1 224 1 
111 1 1 1 241 1 240 1 315 1 317 1 157 1 14 1 205 1 223 1 344 1 159 1 162 1 255 1 125 1 211 1 349 1 29 1 327 1 180 2 309 1 166 1 61 1 167 1 235 1 201 2 236 1 
92 1 
327 1 161 1 162 1 263 1 286 1 241 1 80 1 
39 1 247 1 248 1 118 1 176 2 320 1 140 2 302 1 207 1 225 2 141 1 123 1 324 1 193 1 348 1 80 3 51 1 52 1 53 1 228 1 286 3 105 1 330 2 354 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 52 1 189 1 53 1 228 1 247 1 248 1 118 1 176 2 330 3 105 1 286 2 320 1 354 1 302 1 
39 1 189 1 247 1 248 1 118 1 176 3 320 1 140 2 302 1 207 1 225 3 141 1 123 1 324 1 193 1 348 1 80 3 51 1 52 1 53 1 228 1 213 1 286 3 105 1 330 3 354 1 
242 1 39 1 171 1 42 1 247 1 70 1 248 1 118 1 176 2 320 1 140 3 302 1 207 1 225 2 141 1 123 2 193 1 324 1 348 1 80 3 51 1 52 1 53 1 228 1 213 2 263 1 286 3 105 1 330 2 354 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 52 1 53 1 228 1 247 1 248 1 118 1 263 1 176 2 330 2 105 1 286 2 320 1 354 1 302 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 42 1 52 1 53 1 228 1 247 1 70 1 248 1 118 1 263 1 176 2 330 2 105 1 286 2 320 1 354 1 302 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 42 1 52 1 53 1 228 1 247 1 70 1 248 1 118 1 263 1 176 2 330 2 105 1 286 2 320 1 354 1 302 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 52 1 53 1 228 1 117 1 247 1 248 1 118 1 263 1 176 2 330 2 105 1 286 2 320 1 64 1 354 1 302 1 
242 1 42 1 189 1 247 1 70 1 248 1 118 1 176 2 320 1 140 1 302 1 207 1 225 2 141 1 123 1 193 1 348 1 80 2 51 1 52 1 53 1 228 1 213 1 263 1 286 2 105 1 330 3 354 1 
242 1 42 1 189 1 247 1 70 1 248 1 118 1 176 2 320 1 140 1 302 1 207 1 225 2 141 1 123 1 193 1 348 1 80 2 51 1 52 1 53 1 228 1 213 1 263 1 286 2 105 1 330 3 354 1 
225 2 207 1 141 1 193 1 348 1 51 1 80 2 52 1 53 1 228 1 247 1 248 1 118 1 263 1 176 2 330 2 105 1 286 2 320 1 354 1 302 1 
206 1 313 1 85 2 21 2 49 1 268 1 90 1 173 2 102 1 155 1 231 1 308 3 216 1 310 1 11 1 96 1 181 1 332 2 183 1 275 3 203 1 150 1 20 1 109 6 322 1 160 1 
313 2 85 2 4 1 268 4 172 1 90 1 89 3 173 1 270 1 68 4 155 2 71 1 275 10 75 3 301 1 322 2 206 2 21 1 49 13 326 3 308 7 260 1 216 13 352 1 181 1 265 1 32 1 332 4 183 3 333 2 150 2 109 17 130 1 
313 1 3 1 241 1 41 1 40 1 268 1 90 1 173 1 247 2 155 1 320 2 205 1 275 1 252 1 277 1 322 1 47 1 206 1 161 1 162 1 255 1 143 1 348 1 305 1 212 1 82 1 327 1 308 1 215 1 352 1 287 1 200 1 182 1 332 2 32 1 150 1 109 2 130 1 
313 3 3 2 268 7 4 4 155 3 11 1 320 3 18 2 275 10 20 1 75 2 160 1 322 3 277 2 278 2 161 1 21 4 162 3 279 1 125 1 82 2 231 1 327 3 329 2 287 1 32 1 332 6 200 2 203 1 84 1 130 1 85 8 241 3 41 2 90 3 89 2 91 1 173 2 247 3 137 2 205 2 206 3 47 2 143 1 255 2 49 7 348 1 212 1 102 1 308 10 260 2 149 2 216 7 352 1 181 3 182 1 183 3 150 3 109 20 
313 2 151 1 188 1 155 2 320 1 275 1 321 1 322 2 161 2 162 6 195 1 226 1 125 1 327 7 288 1 32 1 332 4 200 1 128 1 37 1 241 7 41 4 90 2 174 1 247 1 96 1 45 1 343 2 205 3 47 3 206 2 255 4 143 1 348 1 256 1 212 1 258 1 306 1 308 1 352 1 182 1 150 2 109 2 
313 1 85 1 187 1 268 1 90 1 89 1 155 1 247 1 320 1 275 1 75 1 322 1 206 1 21 1 49 1 143 1 348 1 212 1 232 1 260 1 308 2 216 1 311 1 181 1 332 2 183 1 150 1 109 3 130 1 
206 1 313 1 85 1 49 1 4 1 268 1 90 1 66 1 155 1 216 1 96 1 332 2 183 1 275 2 150 1 109 2 75 1 322 1 
206 1 313 1 77 1 85 1 21 1 49 1 268 1 90 1 155 1 260 1 308 2 216 1 96 1 181 1 332 2 150 1 109 2 322 1 
313 1 85 2 268 2 4 1 89 1 90 1 155 1 96 1 275 2 75 1 322 1 206 1 21 1 49 2 260 1 308 2 216 2 181 1 332 2 183 1 150 1 109 4 
206 1 313 1 85 1 49 1 4 1 268 1 90 1 66 1 306 1 155 1 216 1 332 2 183 1 275 2 150 1 109 2 75 1 322 1 
206 1 313 1 77 1 85 1 21 1 49 1 268 1 90 1 306 1 155 1 260 1 308 2 216 1 181 1 332 2 150 1 109 2 322 1 
313 1 85 2 268 2 4 1 89 1 90 1 155 1 275 2 75 1 322 1 206 1 21 1 49 2 306 1 260 1 308 2 216 2 181 1 332 2 183 1 150 1 109 4 
313 1 85 2 268 2 4 1 89 1 90 1 155 1 275 2 75 1 322 1 206 1 21 1 49 2 260 1 308 2 216 2 181 1 332 2 183 1 150 1 109 4 
313 1 3 1 241 1 41 1 90 1 173 1 247 1 155 1 320 1 275 1 205 1 277 1 322 1 47 1 206 1 161 1 162 1 255 1 82 1 327 1 308 1 149 1 352 1 32 1 200 1 332 2 150 1 109 2 
313 1 170 1 241 1 41 1 90 1 173 1 247 1 155 1 320 1 275 1 205 1 277 1 322 1 47 1 346 1 206 1 161 1 162 1 255 1 327 1 308 1 352 1 32 1 200 1 332 2 35 1 150 1 109 2 
313 1 85 2 268 2 4 1 89 1 90 1 155 1 275 2 75 1 322 1 206 1 21 1 49 2 260 1 308 2 216 2 181 1 332 2 183 1 150 1 109 4 130 1 
313 1 85 2 3 1 241 1 4 1 268 2 41 1 90 1 89 1 247 1 155 1 320 1 275 2 205 1 75 1 277 1 322 1 47 1 206 1 21 1 162 1 49 2 255 1 82 1 327 1 308 2 260 1 216 2 149 1 329 1 288 1 181 1 200 1 332 2 183 1 150 1 109 4 
313 1 85 1 187 1 4 1 268 1 90 1 89 1 43 1 155 1 247 1 320 1 275 2 75 1 322 1 206 1 143 1 49 1 348 1 212 1 308 1 260 1 232 1 216 1 181 1 332 2 183 1 150 1 109 3 130 1 
313 3 4 4 115 1 68 5 155 3 11 1 158 2 275 22 75 5 76 1 20 1 322 3 160 1 21 4 194 1 326 3 231 1 332 6 33 1 333 2 34 4 203 1 85 8 89 5 133 1 134 1 298 1 95 1 98 1 99 1 146 1 54 1 102 1 147 1 260 4 308 22 261 1 181 5 265 3 183 6 150 3 355 1 109 44 
313 4 85 8 4 3 133 1 89 5 115 1 134 1 298 1 68 5 155 4 11 1 95 1 158 2 275 22 20 1 76 2 75 5 160 1 322 4 98 1 99 1 194 1 21 5 146 1 102 1 54 1 147 1 326 3 231 1 261 1 308 21 260 4 181 5 265 3 332 8 33 1 183 6 34 4 333 2 203 1 355 1 150 4 109 43 
313 2 85 14 4 7 133 1 89 7 115 1 134 1 298 1 68 4 155 2 71 2 11 1 95 1 158 1 275 27 20 1 76 1 75 7 160 1 322 2 99 1 194 1 21 7 146 1 102 1 54 1 326 4 231 1 261 1 308 25 260 7 181 8 265 2 332 4 33 1 183 8 34 4 333 2 203 1 355 1 150 2 109 52 
313 2 85 6 4 3 89 3 134 1 68 2 155 2 95 1 158 1 275 9 75 3 322 2 99 2 21 3 146 1 147 1 326 1 58 1 308 10 260 3 181 3 265 1 332 4 33 1 183 3 34 2 333 1 355 1 150 2 109 19 
313 3 85 4 4 2 133 1 89 3 134 1 115 1 298 1 68 2 155 3 95 1 158 2 275 14 76 2 75 3 322 3 99 1 21 2 194 1 146 1 54 1 326 2 308 12 261 1 260 2 181 2 332 6 265 2 33 1 183 3 34 4 355 2 150 3 109 26 
104 1 185 1 253 1 259 1 210 1 17 1 126 1 335 1 197 1 55 1 
314 1 8 1 
253 1 259 1 17 1 126 1 353 1 108 1 280 1 197 1 55 1 
12 1 243 1 
303 1 62 1 88 1 
185 1 253 1 210 1 113 1 80 1 197 1 153 1 281 1 245 1 55 1 104 1 259 1 44 2 176 1 286 1 126 1 17 1 251 1 
185 1 253 1 210 1 113 1 80 1 197 1 153 1 281 1 245 1 55 1 104 1 259 1 44 2 176 1 286 1 126 1 17 1 251 1 
185 1 253 1 210 1 113 1 80 1 197 1 153 1 281 1 245 1 55 1 104 1 259 1 44 2 176 1 286 1 126 1 17 1 251 1 
303 1 12 1 243 1 
303 1 12 1 243 1 
62 1 88 1 
303 1 62 1 88 1 
336 1 46 1 
113 1 314 1 336 1 173 1 245 1 8 1 247 2 44 1 17 1 320 2 73 1 46 1 122 1 253 1 143 2 348 2 80 1 304 1 164 1 197 1 100 1 212 2 55 1 57 1 259 1 286 1 126 1 
37 1 313 1 241 2 41 1 90 1 296 1 272 1 247 2 155 1 190 1 320 2 343 2 205 1 275 1 322 1 47 1 206 1 162 2 255 1 22 1 348 2 256 1 327 2 308 1 331 1 352 1 332 2 32 1 150 1 109 2 130 1 
111 1 162 2 254 1 255 1 1 1 240 1 241 2 125 1 180 2 327 2 60 1 14 1 61 1 288 1 235 1 205 1 344 1 159 1 276 1 
111 1 162 1 1 1 255 1 240 1 241 1 125 1 180 2 327 1 60 1 14 1 61 1 235 1 205 1 344 1 159 1 36 1 
47 1 208 1 161 1 162 1 255 1 241 1 226 1 41 1 258 1 327 1 156 1 235 1 205 1 276 1 
111 1 162 1 254 1 255 1 1 1 240 1 241 1 125 1 180 2 327 1 60 1 14 1 61 1 235 1 205 1 344 1 159 1 276 1 
142 1 
225 1 175 1 176 1 310 1 266 1 291 1 257 1 
263 1 
327 1 161 1 162 1 263 1 241 1 
263 1 
263 1 286 1 80 1 42 1 
175 1 263 1 
278 1 89 2 6 5 56 2 199 1 273 10 260 2 176 5 15 5 181 2 266 5 183 2 291 5 75 2 120 5 
225 1 176 1 286 1 80 1 39 1 140 1 
93 1 327 1 161 1 263 1 162 1 241 1 
327 1 161 1 149 1 162 1 124 1 16 1 241 1 
263 1 
253 1 259 1 325 1 
253 1 259 1 325 1 
253 1 259 1 325 1 
116 1 253 1 259 1 
253 1 186 1 336 1 259 1 13 1 
116 1 253 1 259 1 
116 1 253 1 259 1 
253 1 259 1 
17 1 55 1 
313 1 85 2 89 1 134 1 68 2 155 1 11 1 275 6 20 1 75 1 322 1 160 1 21 2 102 1 326 1 231 1 308 5 261 1 181 1 265 1 332 2 183 2 333 1 203 1 150 1 109 11 
313 2 85 3 4 1 89 1 134 1 68 2 155 2 299 1 11 1 275 6 20 1 75 1 160 1 322 2 21 2 102 1 326 1 231 1 308 5 261 1 181 1 265 1 332 4 183 2 333 1 203 1 150 2 109 11 
313 3 85 4 4 1 89 2 134 1 115 1 298 1 68 1 155 3 299 1 11 1 275 9 20 1 75 2 76 1 160 1 322 3 194 1 21 3 102 1 54 1 326 1 231 1 308 10 261 1 260 2 181 3 265 1 332 6 183 3 203 1 150 3 109 19 
313 3 85 5 4 2 89 2 134 1 115 1 298 1 68 1 155 3 299 1 11 1 275 10 20 1 76 1 75 2 160 1 322 3 194 1 21 3 102 1 54 1 326 1 231 1 308 7 261 1 260 1 181 2 265 1 332 6 183 3 203 1 150 3 109 17 
313 1 85 2 89 1 134 1 68 2 155 1 11 1 275 6 20 1 75 1 322 1 160 1 21 2 102 1 326 1 231 1 308 5 261 1 181 1 265 1 332 2 183 2 333 1 203 1 150 1 109 11 
313 1 85 2 4 1 89 2 134 1 115 1 298 1 68 1 155 1 275 6 75 2 322 1 194 1 21 1 54 1 326 1 308 6 261 1 260 2 181 2 265 1 332 2 183 2 150 1 109 12 
313 4 85 5 4 2 89 2 134 1 115 1 298 1 68 1 155 4 299 1 11 1 275 10 20 1 75 2 76 2 160 1 322 4 194 1 21 3 102 1 54 1 326 1 231 1 308 8 261 1 260 1 181 2 265 1 332 8 183 3 203 1 150 4 109 18 
313 4 85 6 4 3 89 3 134 1 115 1 298 1 68 1 155 4 275 9 75 3 76 2 322 4 194 1 21 3 54 1 147 1 326 1 308 7 261 1 260 2 181 2 265 1 332 8 183 3 150 4 109 16 
85 6 21 3 4 3 102 3 231 3 308 4 11 1 181 1 183 1 275 3 203 1 109 7 160 2 
313 4 85 4 4 1 89 2 134 1 115 1 298 1 68 1 155 4 11 1 275 10 20 1 75 2 76 2 160 1 322 4 194 1 21 3 102 1 54 1 147 1 326 1 231 1 308 8 261 1 260 1 181 2 265 1 332 8 183 3 203 1 150 4 109 18 
313 2 85 3 21 2 4 1 102 1 155 2 231 1 308 4 11 1 181 1 332 4 183 1 275 4 203 1 150 2 20 1 109 8 76 1 322 2 160 1 
85 2 21 2 102 1 231 1 308 3 310 1 11 1 181 1 183 1 275 3 203 1 20 1 109 6 160 1 
313 1 85 2 21 1 4 1 89 1 155 1 299 1 308 2 260 1 181 1 332 2 183 1 275 2 150 1 75 1 109 4 322 1 
85 2 21 1 4 1 89 1 68 2 326 1 260 1 308 4 181 1 265 1 183 1 275 3 333 1 109 7 75 1 
313 2 85 9 4 4 89 2 172 1 68 2 155 2 71 1 11 1 275 11 20 1 75 2 76 2 160 1 322 2 21 5 28 1 102 2 326 2 231 2 308 12 260 2 181 3 332 4 183 3 333 1 203 1 150 2 109 23 
308 1 109 1 68 1 
326 1 275 1 109 1 
313 1 278 1 85 3 21 2 4 1 89 1 155 1 299 1 308 3 260 1 181 1 332 2 183 1 275 3 150 1 109 6 75 1 322 1 
313 1 85 2 4 1 89 2 134 1 115 1 298 1 68 1 155 1 275 6 75 2 322 1 194 1 21 1 54 1 326 1 308 6 261 1 260 2 181 2 265 1 332 2 183 2 150 1 109 12 
85 2 21 1 4 1 102 1 231 1 308 3 181 1 183 1 275 3 203 1 109 6 
313 1 85 2 21 1 4 1 28 1 102 1 155 1 231 1 308 2 11 1 332 2 275 1 150 1 109 3 76 1 160 1 322 1 
313 1 85 5 21 3 4 2 134 1 102 2 155 1 231 2 318 1 308 5 181 2 332 2 183 2 275 5 150 1 203 1 109 10 322 1 
313 1 85 1 4 1 134 1 155 1 332 2 183 1 275 2 150 1 75 1 109 2 322 1 
313 1 85 2 21 1 4 1 89 1 134 1 155 1 308 2 260 1 181 1 332 2 183 1 275 2 150 1 75 1 109 4 322 1 
313 3 85 2 21 1 4 1 28 1 134 1 102 1 147 1 155 3 231 1 308 2 332 6 275 1 150 3 76 1 109 3 322 3 
313 5 85 12 239 1 4 5 89 3 134 1 68 4 155 5 299 1 11 1 275 16 20 1 76 2 75 3 160 1 322 5 209 1 21 7 28 1 102 3 147 1 326 3 231 3 308 18 260 3 233 1 181 5 265 1 332 10 183 5 333 1 203 2 150 5 109 34 
247 1 348 1 320 1 222 1 173 1 338 1 228 1 
238 1 348 1 219 1 24 1 65 1 173 1 338 1 228 1 247 1 94 1 222 1 320 1 
47 1 327 1 161 1 162 1 310 1 255 1 226 1 241 1 41 1 205 1 258 1 
47 1 161 1 162 1 255 1 143 1 348 1 241 1 3 1 41 1 173 1 212 1 247 2 327 1 320 2 200 1 182 1 205 1 277 1 
47 2 162 1 255 1 143 1 348 2 51 1 241 1 3 1 41 3 173 1 212 2 247 2 248 1 327 1 264 1 59 1 320 2 200 2 182 1 205 1 217 1 302 1 277 1 
241 2 41 3 173 1 247 2 248 1 320 2 205 1 277 1 302 1 47 2 162 2 143 1 255 1 348 2 51 1 81 1 212 2 327 2 59 1 264 1 182 1 200 2 35 1 217 1 
0 1 225 1 162 1 124 1 80 1 241 1 5 1 41 1 229 1 327 1 176 1 59 1 286 1 97 1 
0 1 241 1 5 1 41 4 67 1 7 1 176 1 205 1 140 1 47 1 225 1 162 1 124 1 255 1 80 2 229 1 327 1 59 1 264 1 286 2 105 1 200 1 217 1 
169 1 327 1 162 1 255 1 241 1 205 1 
178 1 327 1 161 1 162 1 241 1 
313 2 3 1 268 1 155 2 11 1 18 1 320 2 275 3 20 1 322 2 277 1 160 1 162 1 21 2 22 1 82 1 327 1 231 1 329 1 288 1 332 4 200 1 203 1 130 1 85 2 241 1 41 1 90 2 173 2 247 2 205 1 206 2 47 1 143 1 255 1 49 1 348 1 212 1 102 1 308 3 149 1 216 1 181 1 182 1 183 1 150 2 109 6 
0 1 161 1 162 1 79 1 304 1 80 3 241 1 39 1 41 2 67 1 7 1 93 1 327 1 10 1 214 1 263 2 105 1 286 3 140 2 
47 1 169 1 162 2 255 2 241 2 41 2 67 1 327 2 350 1 288 1 74 1 200 1 205 1 
47 1 161 1 162 4 48 1 255 1 241 4 226 1 81 1 41 1 258 1 327 4 288 1 205 1 
47 1 162 2 255 2 195 1 241 2 41 1 91 1 174 1 327 2 59 1 45 1 200 1 205 1 321 1 
161 1 111 1 162 1 1 1 255 1 241 1 327 1 180 1 205 1 159 1 
37 1 47 1 162 2 255 1 241 2 125 1 41 1 272 1 327 2 288 1 205 1 
37 1 47 2 161 1 151 1 162 4 48 1 255 2 226 1 241 5 41 3 188 1 258 1 327 5 59 1 288 1 205 2 
37 1 47 2 161 1 162 4 48 1 255 2 226 1 241 5 41 3 188 1 258 1 69 1 327 5 59 1 288 1 205 2 
47 1 161 1 162 1 255 1 143 1 348 1 241 1 41 1 173 1 212 1 247 2 327 1 320 2 200 1 182 1 205 1 35 1 277 1 
178 1 327 1 162 1 59 1 241 1 
221 1 165 1 312 1 173 1 129 1 
184 1 225 1 141 1 124 1 51 1 304 1 80 2 5 1 221 1 229 1 283 1 248 1 165 1 176 1 105 1 286 2 138 1 312 1 302 1 345 1 129 1 
348 1 296 1 221 1 247 1 165 1 331 1 190 1 320 1 312 1 
184 1 165 1 138 1 
246 1 310 1 9 1 135 1 
246 1 167 1 201 1 349 1 317 1 9 1 135 1 
315 1 211 1 317 1 
152 1 297 1 349 1 317 3 220 2 9 1 135 1 246 1 285 1 167 1 201 3 236 1 
246 1 166 1 167 1 201 2 349 1 317 2 9 1 135 1 103 1 
349 1 317 1 9 1 180 1 61 1 167 1 201 1 107 1 236 1 159 1 292 1 
167 1 201 1 349 1 317 1 236 1 9 1 135 1 
246 1 167 1 201 1 349 1 317 1 236 1 135 2 
23 1 349 2 317 2 9 1 135 1 167 2 201 2 106 1 289 1 236 1 
38 1 349 1 317 3 135 1 9 2 136 1 246 1 166 2 127 1 167 1 201 3 107 1 236 1 
180 2 111 1 166 1 61 1 167 1 240 1 87 1 201 2 349 1 317 1 159 1 236 1 
349 2 317 4 135 1 103 1 9 2 246 1 166 2 127 1 167 2 63 1 201 4 107 1 236 1 
246 1 167 1 201 1 349 1 317 1 236 1 9 1 135 1 
152 1 316 1 349 1 317 4 220 1 135 2 9 3 246 2 285 1 166 2 127 1 167 1 201 4 107 1 
26 1 349 1 317 2 9 1 135 1 246 1 166 1 342 1 167 1 19 1 201 2 236 1 
152 2 349 1 317 3 220 2 9 1 135 1 246 1 307 1 285 1 167 1 201 3 236 1 
132 1 27 2 227 1 9 2 
167 1 201 1 349 1 317 1 236 1 282 1 
136 1 246 1 166 1 167 1 201 2 349 1 317 2 236 1 9 1 135 1 
121 1 
246 1 167 1 201 1 349 1 317 1 236 1 9 1 135 1 
136 1 246 1 166 1 167 1 201 3 349 1 317 3 220 1 236 1 9 1 135 1 
127 1 316 1 107 1 9 1 
9 1 135 1 

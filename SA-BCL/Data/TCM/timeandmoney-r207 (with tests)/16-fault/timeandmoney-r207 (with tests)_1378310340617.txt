#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 235 (54,77) (54,77) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 235 (54,77) (54,77) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 235 (54,77) (54,77) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 235 (54,77) (54,77) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (83,223) 298 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (83,223) 298 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 217 257 133 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 217 257 133 118 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 217 257 133 (7,192) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 217 257 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 217 257 133 (7,192) (7,192) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 124 (12,238,285) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 217 257 133 (7,192) (7,192) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 217 81 97 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 264 310 248 84 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 217 257 133 (7,192) (7,192) 6 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 217 257 133 118 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 217 263 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 217 263 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 217 263 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 217 263 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 217 257 133 (7,192) (7,192) 6 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 217 263 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 35 (185,271) (185,271) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException 35 (185,271) (185,271) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 54 1 303 1 157 1 55 1 235 1 83 1 77 1 8 1 62 1 49 1 
200 1 54 1 303 1 157 1 55 1 235 1 83 1 77 1 8 1 62 1 49 1 
200 1 54 1 303 1 157 1 55 1 235 1 83 1 77 1 8 1 62 1 49 1 
200 1 54 1 303 1 157 1 55 1 235 1 83 1 77 1 8 1 62 1 49 1 
200 1 157 1 303 4 219 1 140 1 185 1 35 2 220 1 212 1 189 1 8 1 63 1 105 2 168 3 271 1 131 1 49 4 252 2 
200 1 157 1 303 2 55 1 185 1 160 1 220 1 8 1 62 1 63 1 271 1 45 1 216 1 155 1 49 2 
200 1 157 2 303 3 185 1 35 1 8 2 189 1 62 1 105 1 223 1 168 1 271 1 49 3 
200 1 303 1 157 1 8 1 49 1 223 1 297 1 298 1 
200 1 303 1 157 1 8 1 49 1 223 1 297 1 298 1 
231 1 
201 1 25 1 198 2 
257 1 133 1 217 1 
257 1 133 1 118 1 217 1 
257 1 192 1 133 1 217 1 
233 1 204 1 23 1 309 1 85 1 265 1 25 1 291 1 268 1 194 1 218 1 180 1 138 1 299 1 
257 1 217 1 
269 1 221 1 320 1 218 1 299 1 
267 1 269 1 204 1 74 1 320 1 25 1 218 2 299 2 
269 1 218 1 299 1 
257 1 192 1 320 1 133 1 7 1 217 1 218 1 299 1 
25 1 
269 1 184 1 204 1 74 1 320 1 25 1 218 2 299 2 
204 1 34 1 143 2 102 1 188 1 104 1 167 1 25 1 227 1 269 2 72 2 74 1 320 2 174 1 176 1 136 2 232 1 218 5 299 5 
12 1 293 1 
12 1 293 1 
124 1 238 1 
124 1 238 1 
124 1 238 1 
12 1 293 1 4 1 
12 1 293 1 124 1 238 1 
12 1 293 1 285 1 
12 1 293 1 4 1 
12 1 293 1 4 1 
12 1 293 1 68 1 
12 1 293 1 68 1 
12 1 293 1 68 1 
234 2 308 1 284 1 239 1 262 1 187 2 146 2 39 1 147 2 25 1 127 1 12 2 293 2 215 1 112 3 46 2 156 1 218 2 299 2 
234 1 12 1 293 1 112 1 187 1 46 1 146 1 156 1 217 1 218 1 299 1 
219 1 220 1 63 1 
160 1 220 1 63 1 
219 2 270 1 160 1 171 1 220 3 326 1 
219 1 270 1 160 1 220 2 87 1 326 1 
219 1 270 1 160 1 220 2 326 2 
34 1 204 1 286 1 210 1 287 1 88 1 290 1 292 1 93 1 44 1 174 3 136 1 17 1 218 5 299 5 143 1 310 1 261 2 60 1 264 1 25 1 106 1 227 1 269 1 72 1 230 1 74 1 320 4 115 1 31 1 198 1 
34 3 204 1 161 1 163 1 286 3 288 1 290 3 93 1 44 2 174 8 136 2 17 4 18 1 137 5 218 9 299 9 143 2 221 5 310 3 102 1 60 3 264 3 25 2 106 2 227 1 108 1 269 6 72 2 74 1 320 7 115 3 321 1 31 3 198 3 
201 1 204 1 34 1 210 1 286 1 287 1 290 1 44 1 174 3 136 1 17 1 218 3 299 3 143 1 261 1 310 1 102 1 60 1 264 1 25 2 106 1 72 1 320 2 115 1 31 1 198 2 
201 1 204 1 34 2 161 1 163 1 286 2 210 1 287 1 290 2 44 1 174 5 136 1 17 2 18 1 218 4 299 4 143 1 261 2 310 2 60 2 102 1 264 2 25 2 106 1 72 1 320 3 115 2 31 2 198 3 
244 1 14 1 231 1 
117 1 149 1 
316 1 
117 1 47 1 
183 1 276 1 117 3 47 1 41 2 182 1 
117 1 47 1 182 1 
92 1 117 1 
281 1 22 1 59 4 311 7 286 1 226 1 27 1 67 1 151 2 10 1 70 1 43 3 319 1 247 3 15 1 95 2 31 1 
281 1 22 1 59 4 311 7 286 1 226 1 27 1 67 1 151 2 10 1 70 1 43 3 319 1 247 3 15 1 95 2 31 1 
281 1 22 1 59 4 311 7 286 1 226 1 27 1 67 1 151 2 10 1 70 1 43 3 319 1 247 3 15 1 95 2 96 1 31 1 
281 1 120 1 206 1 286 5 9 4 10 2 43 6 247 17 129 1 15 2 95 4 249 1 254 1 52 1 305 2 101 1 307 1 22 2 311 32 59 15 310 4 60 4 313 1 222 1 264 4 226 1 266 4 27 2 67 2 151 3 70 1 319 1 195 1 75 1 31 5 
52 2 305 4 281 1 307 2 22 1 206 2 59 5 311 9 286 1 226 1 27 1 67 1 151 2 42 1 10 1 319 1 43 4 247 4 195 1 15 1 95 3 175 1 249 2 31 1 
200 1 157 1 236 1 2 2 160 1 5 2 208 1 8 1 168 1 213 2 11 1 171 1 173 1 49 2 250 1 295 1 219 1 19 1 303 2 57 1 185 1 220 2 63 1 62 1 152 1 271 1 275 1 196 1 325 1 278 1 
157 1 236 1 2 1 205 1 160 1 5 1 208 1 8 1 86 1 213 1 168 2 128 1 11 1 171 1 173 1 250 1 49 3 295 1 219 1 303 3 185 1 220 2 63 1 62 1 152 1 271 1 275 1 325 1 278 1 
236 1 2 1 205 1 160 1 5 1 208 1 86 1 213 1 168 2 11 1 171 1 173 1 250 1 49 2 295 1 303 2 219 1 185 1 220 2 62 1 63 1 271 1 325 1 278 1 
157 1 303 1 122 1 2 1 5 1 8 1 62 2 224 1 213 1 241 1 242 1 169 1 128 1 11 1 173 2 117 1 47 1 250 2 49 1 80 1 32 1 278 1 325 2 
200 1 157 1 236 1 2 1 205 1 160 1 5 1 208 1 8 1 213 1 11 1 171 1 173 1 250 1 49 1 295 1 219 1 303 1 220 2 63 1 62 1 152 1 275 1 196 1 325 1 278 1 
28 1 
0 1 82 2 2 2 162 1 5 2 164 2 242 1 169 2 11 1 174 2 172 1 177 2 255 1 20 1 260 1 106 1 25 1 190 1 269 6 272 2 117 1 198 2 278 1 279 2 201 2 34 2 213 2 47 1 296 1 136 1 218 4 299 4 302 1 56 1 143 1 61 2 224 1 227 1 69 2 228 2 72 1 74 3 
302 1 184 1 269 2 56 1 74 1 272 1 260 1 218 2 299 2 
228 1 302 1 56 1 260 1 177 1 218 1 299 1 
302 1 56 1 184 1 82 1 260 1 228 1 269 2 74 1 272 1 177 1 218 2 299 2 
302 1 184 1 56 1 257 1 204 1 82 2 260 1 7 1 25 1 269 3 192 1 74 1 272 2 133 1 30 1 217 1 218 2 299 2 119 1 
201 2 204 1 82 2 34 1 162 1 164 2 174 1 177 2 136 1 218 3 299 3 302 1 56 1 20 1 143 1 260 1 61 2 25 2 227 1 228 2 190 1 69 2 269 4 72 1 272 2 74 2 198 2 279 2 
202 1 201 2 204 1 82 2 34 1 162 1 164 2 40 1 245 1 174 1 177 2 136 1 218 3 299 3 302 1 56 1 143 1 260 1 61 2 25 1 227 1 228 2 69 2 190 1 269 4 72 1 272 2 74 2 279 2 
202 1 201 2 204 1 82 2 34 1 162 1 164 2 40 1 245 1 174 1 177 2 136 1 218 3 299 3 302 1 56 1 143 1 260 1 61 2 25 1 227 1 228 2 69 2 190 1 269 4 72 1 272 2 74 2 279 2 
202 1 203 2 204 1 82 2 34 1 164 2 174 1 177 2 136 1 218 3 299 3 302 1 56 1 143 1 58 1 260 1 148 1 25 1 150 2 227 1 228 2 190 1 269 4 72 1 272 2 74 2 79 1 198 2 279 2 
201 2 202 1 204 1 82 3 34 1 162 1 164 2 40 1 245 1 174 1 177 3 136 1 218 3 299 3 302 1 56 1 143 1 260 1 61 2 25 1 227 1 69 2 190 1 228 3 269 5 72 1 74 2 272 3 30 1 279 2 
201 2 202 1 204 1 82 3 34 1 162 1 164 2 40 1 245 1 174 1 177 3 136 1 218 3 299 3 302 1 56 1 143 1 260 1 61 2 25 1 227 1 69 2 190 1 228 3 269 5 72 1 74 2 272 3 30 1 279 2 
203 2 204 1 82 2 34 1 164 2 174 1 177 2 136 1 218 3 299 3 302 1 56 1 20 1 58 1 143 1 260 1 25 1 150 2 227 1 228 2 190 1 269 4 72 1 272 2 74 2 198 2 279 2 
1 1 283 1 3 1 206 2 286 2 9 2 43 1 247 7 94 1 95 1 175 1 249 2 254 1 99 1 100 1 52 2 305 4 101 1 307 2 258 1 311 12 59 5 310 2 60 2 313 1 264 2 266 2 71 1 31 2 
1 2 3 1 206 2 84 1 286 2 9 2 43 1 247 11 130 1 248 1 132 1 95 1 175 1 249 2 99 3 100 1 52 2 305 4 307 2 101 2 258 1 311 19 59 8 310 2 60 2 264 2 225 1 266 2 26 1 71 2 195 1 29 1 31 2 
1 1 283 1 3 1 206 2 286 2 9 2 43 1 247 7 95 1 175 1 249 2 254 1 99 1 100 1 52 2 305 4 101 1 307 2 258 1 311 12 59 5 310 2 60 2 313 1 264 2 225 1 266 2 71 1 31 2 
1 1 283 1 3 1 206 2 286 2 9 2 43 1 247 7 95 1 175 1 249 2 254 1 99 1 100 1 52 2 305 4 101 1 307 2 258 1 311 12 59 5 310 2 60 2 313 1 264 2 225 1 266 2 71 1 31 2 
281 1 1 1 3 1 206 1 84 1 286 5 9 3 10 1 43 3 247 16 130 1 248 1 132 1 95 3 175 1 249 1 254 1 99 2 100 1 52 1 305 2 101 2 307 1 258 1 311 29 59 13 310 4 60 4 313 1 264 4 225 1 226 1 266 3 27 1 26 1 151 1 71 1 319 1 29 1 31 5 
234 1 12 1 293 1 237 1 262 1 187 1 46 1 146 1 39 1 127 1 
285 1 125 1 
234 1 12 1 293 1 187 1 46 1 37 1 146 1 314 1 199 1 
234 1 308 1 284 1 262 1 187 1 146 1 39 1 147 1 25 1 127 1 12 1 293 1 215 1 112 2 46 1 156 1 218 1 299 1 
234 1 308 1 284 1 262 1 187 1 146 1 39 1 147 1 25 1 127 1 12 1 293 1 215 1 112 2 46 1 156 1 218 1 299 1 
234 1 308 1 284 1 262 1 187 1 146 1 39 1 147 1 25 1 127 1 12 1 293 1 215 1 112 2 46 1 156 1 218 1 299 1 
142 1 4 1 277 1 
142 1 4 1 277 1 
103 1 68 1 
103 1 277 1 68 1 
123 1 154 1 
234 1 284 1 123 1 285 1 187 1 125 1 146 1 147 1 88 1 12 1 293 1 230 1 112 1 320 1 154 1 46 1 217 1 17 1 97 1 218 1 299 1 81 1 
142 1 4 1 
103 1 277 1 68 1 
233 2 159 1 282 1 2 2 206 1 5 2 213 2 11 1 247 1 47 1 249 1 48 1 251 1 138 2 52 1 305 2 307 1 57 2 59 1 311 2 259 1 312 1 265 2 66 1 318 1 110 1 73 1 114 1 153 1 117 1 278 1 
219 1 19 1 236 1 160 1 205 1 2 2 220 2 5 2 63 1 213 2 107 1 152 1 11 1 171 1 16 1 250 1 295 1 179 1 278 1 
219 1 236 1 160 1 205 1 2 1 220 2 5 1 63 1 213 1 152 1 11 1 246 1 171 1 250 1 295 1 179 1 278 1 
2 1 5 1 224 1 213 1 107 1 242 1 169 1 11 1 13 1 117 1 47 1 250 1 80 1 278 1 
219 1 236 1 160 1 205 1 2 1 220 2 5 1 63 1 213 1 107 1 152 1 11 1 171 1 16 1 250 1 295 1 179 1 278 1 
89 1 
231 1 
201 1 204 1 34 1 143 1 162 1 61 1 25 2 227 1 69 1 269 1 72 1 74 1 174 1 136 1 218 1 198 1 299 1 
2 1 5 1 213 1 170 1 169 1 11 2 174 2 47 1 136 1 253 1 181 1 182 1 143 1 149 1 106 1 227 1 317 1 72 1 193 1 116 1 276 1 117 2 278 1 
201 2 101 1 34 3 143 1 310 1 84 1 264 1 266 1 25 2 9 1 290 3 26 1 227 1 72 1 248 1 174 2 115 3 31 1 136 1 198 4 
281 1 257 1 34 1 143 1 286 1 6 1 7 1 64 2 40 1 227 1 27 1 10 1 72 1 192 1 133 1 174 2 217 1 31 1 136 1 218 1 299 1 
34 1 204 1 143 1 188 1 104 1 25 1 227 1 72 1 174 1 136 1 
201 1 34 1 310 1 60 1 286 1 64 1 264 1 290 1 25 1 174 2 115 1 31 1 198 2 
269 1 204 1 74 1 25 1 218 1 299 1 
0 1 34 2 2 4 5 4 213 4 242 1 169 2 11 1 174 2 47 1 136 2 296 2 218 3 299 3 300 1 255 1 143 2 145 1 102 1 224 1 106 2 227 1 269 4 72 2 74 2 274 1 117 1 323 2 278 1 
257 1 133 1 118 1 217 1 
201 2 34 2 204 2 143 1 290 2 106 1 25 4 227 1 151 1 72 1 115 2 174 1 136 1 296 1 198 4 
234 1 36 1 146 1 
234 1 154 1 146 1 39 1 322 1 
234 1 36 1 146 1 
234 1 36 1 146 1 
234 1 165 1 146 1 
234 1 165 1 146 1 
234 1 165 1 146 1 
234 1 146 1 
12 1 293 1 
52 2 305 4 281 1 307 2 206 2 311 8 59 4 286 1 226 1 27 1 151 1 10 1 43 3 319 1 247 4 15 1 195 1 95 2 249 2 31 1 
231 1 
52 1 305 2 307 1 206 1 310 1 59 1 311 3 286 1 60 1 264 1 43 1 247 2 294 1 95 1 249 1 31 1 
101 1 311 10 59 4 310 2 60 2 286 2 313 1 264 2 9 2 266 2 43 1 247 6 95 1 31 2 254 1 
280 1 281 1 206 2 286 3 9 2 10 2 43 7 247 12 15 2 95 5 135 1 249 2 254 1 52 2 305 4 307 2 310 2 59 9 311 21 60 2 313 1 264 2 226 1 266 2 27 2 151 1 319 1 195 2 31 3 
247 1 311 1 9 1 
311 1 59 1 266 1 
52 1 305 2 307 1 206 1 311 5 310 1 59 2 60 1 286 1 264 1 43 2 247 3 294 1 95 2 249 1 31 1 181 1 
206 1 84 1 286 2 9 1 43 1 247 6 130 1 248 1 95 1 132 1 175 1 249 1 52 1 305 2 101 1 307 1 311 10 59 4 310 2 60 2 264 2 266 1 26 1 31 2 
281 1 59 3 311 6 286 1 27 1 10 1 43 2 247 3 15 1 95 1 31 1 
280 1 52 1 305 2 307 1 206 1 59 1 311 3 226 1 27 1 10 1 43 2 319 1 247 2 15 1 195 1 95 1 249 1 
52 1 305 2 307 1 281 1 206 1 59 5 311 10 6 1 286 2 27 2 10 2 43 5 247 5 15 2 95 3 175 1 249 1 31 2 
52 1 305 2 307 1 206 1 59 1 311 1 264 1 175 1 249 1 31 1 
52 1 305 2 307 1 206 1 310 1 59 1 311 3 286 1 60 1 264 1 43 1 247 2 95 1 175 1 249 1 31 1 
280 1 52 3 305 6 307 3 283 1 206 3 311 3 59 1 27 1 10 1 43 2 247 2 195 1 15 1 95 1 175 1 249 3 
280 1 281 2 283 1 206 5 286 6 9 4 10 3 43 8 129 1 247 21 294 1 15 3 95 5 175 1 249 5 254 1 52 5 305 10 101 1 307 5 311 37 59 16 310 4 60 4 222 1 313 1 264 4 226 1 266 4 27 3 151 1 319 1 195 2 75 1 31 6 
281 1 206 1 84 1 286 3 9 2 10 1 43 3 247 9 95 3 175 1 249 1 254 1 52 1 305 2 101 1 307 1 311 16 59 7 310 2 60 2 313 1 264 2 226 1 266 2 27 1 151 1 319 1 31 3 
281 1 206 2 84 1 286 1 9 1 10 1 43 2 247 4 294 1 95 2 175 1 249 2 52 2 305 4 101 1 307 2 311 8 59 4 266 1 226 1 27 1 151 1 319 1 31 1 
206 3 84 1 286 2 9 1 43 1 247 7 294 1 130 1 248 1 95 1 132 1 175 1 249 3 52 3 305 6 101 1 307 3 311 11 59 4 310 2 60 2 264 2 266 1 26 1 195 1 31 2 
281 1 206 2 84 1 6 1 286 4 9 1 10 1 43 5 247 10 294 1 15 2 130 1 248 1 95 3 132 1 175 1 249 2 52 2 305 4 101 1 307 2 311 18 59 8 310 2 60 2 264 2 226 1 266 1 27 1 26 1 319 1 31 4 
281 1 206 1 84 1 286 3 9 2 10 1 43 3 247 9 95 3 175 1 249 1 254 1 52 1 305 2 101 1 307 1 311 16 59 7 310 2 60 2 313 1 264 2 226 1 266 2 27 1 151 1 319 1 31 3 
206 1 84 1 286 2 9 1 43 1 247 6 130 1 248 1 95 1 132 1 175 1 249 1 52 1 305 2 101 1 307 1 311 10 59 4 310 2 60 2 264 2 266 1 26 1 31 2 
281 2 206 3 84 1 6 1 286 5 9 1 10 2 43 7 247 14 294 1 15 2 130 1 248 1 132 1 95 5 175 1 249 3 52 3 305 6 101 1 307 3 311 25 59 11 310 2 60 2 264 2 226 1 266 1 27 2 26 1 151 1 319 1 195 1 31 5 
206 3 283 1 84 1 286 3 9 1 43 3 247 9 130 1 248 1 132 1 95 3 175 1 249 3 52 3 305 6 101 1 307 3 311 14 59 5 310 3 60 3 264 3 266 1 26 1 195 1 31 3 
281 1 311 7 59 3 286 1 226 2 27 3 10 3 319 1 43 6 247 4 15 3 95 3 31 1 
281 2 206 3 283 1 84 1 6 1 286 5 9 1 10 2 43 6 247 14 15 1 130 1 248 1 132 1 95 5 175 1 249 3 52 3 305 6 101 1 307 3 311 25 59 11 310 2 60 2 264 2 226 1 266 1 27 2 26 1 151 1 319 1 195 1 31 5 
233 1 109 1 229 1 111 1 265 1 138 1 180 1 
233 1 33 1 109 1 141 1 91 1 229 1 111 1 144 1 38 1 265 1 138 1 180 1 
169 1 2 1 5 1 231 1 213 1 
217 1 263 1 
217 1 263 1 
217 1 263 1 
204 1 2 3 5 3 126 1 41 1 213 3 169 1 243 1 11 1 92 1 47 1 218 2 299 2 182 1 309 1 186 1 149 1 25 1 191 1 269 1 117 4 323 1 278 1 
204 1 309 1 2 3 186 1 5 3 41 1 25 1 213 3 149 1 169 1 191 1 11 1 269 1 92 1 273 1 47 1 117 4 218 2 323 1 299 2 182 1 278 1 
11 1 2 1 5 1 209 1 213 1 278 1 
19 1 21 1 57 1 205 1 2 6 209 1 5 7 240 1 166 1 213 7 315 1 169 2 110 1 11 3 113 1 276 1 47 2 117 3 98 1 182 1 278 2 
217 1 263 1 
281 1 204 1 34 2 2 1 286 2 5 1 6 1 7 1 213 1 169 1 10 1 133 1 174 4 217 1 136 1 218 1 253 1 299 1 257 1 143 1 188 1 104 1 64 2 25 1 227 1 27 1 72 1 192 1 193 1 274 1 320 1 31 1 
170 1 19 1 11 2 2 2 5 2 209 1 276 1 117 2 47 1 41 1 213 2 278 1 182 1 
19 1 2 4 5 4 224 1 213 4 242 1 169 1 191 1 11 1 47 1 117 1 178 1 278 1 
301 1 304 1 158 1 2 2 5 2 166 1 213 2 315 1 11 2 47 1 117 1 323 1 182 1 278 1 
169 1 11 1 236 1 160 1 2 1 220 1 5 1 63 1 213 1 278 1 
19 1 11 1 110 1 205 1 2 2 5 2 117 1 47 1 48 1 213 2 278 1 
19 1 21 1 2 4 5 5 240 1 224 1 213 5 242 1 169 1 110 1 11 2 47 2 117 3 178 1 323 1 278 2 
19 1 21 1 2 4 5 5 224 1 213 5 242 1 169 1 110 1 11 2 78 1 47 2 117 3 178 1 323 1 278 2 
217 1 263 1 
2 1 5 1 166 1 213 1 315 1 11 2 113 1 276 1 47 1 117 1 323 1 182 1 278 1 
231 1 
303 1 157 1 271 1 185 1 8 1 49 1 
62 1 49 1 325 1 
200 1 157 1 303 3 121 1 185 1 8 1 65 1 271 1 134 1 216 2 49 3 
303 2 157 1 271 1 185 1 8 1 49 2 252 1 168 1 
200 1 219 1 303 1 157 1 35 1 220 1 212 1 8 1 63 1 105 1 49 1 
200 1 303 1 157 1 271 1 8 1 49 1 
200 1 303 1 157 1 271 1 35 1 185 1 8 1 49 1 
200 1 157 2 303 2 256 1 207 1 24 1 8 2 271 1 49 2 
200 1 51 1 157 1 303 3 185 1 35 1 8 1 189 1 105 1 168 2 271 1 49 3 50 1 
200 1 157 1 303 2 219 1 185 1 160 1 220 2 8 1 63 1 168 1 214 1 271 1 171 1 49 2 
200 1 157 2 303 4 140 1 185 1 35 1 8 2 189 1 105 1 168 2 271 1 49 4 252 1 
200 1 303 1 157 1 271 1 185 1 8 1 49 1 
303 4 157 1 121 1 185 2 35 1 8 1 189 1 105 1 65 1 168 2 271 2 216 1 197 1 49 4 
200 1 157 1 303 1 35 1 185 1 211 1 8 1 271 1 76 1 49 1 297 1 
200 1 139 1 303 3 157 1 121 1 271 1 185 1 216 2 8 1 49 3 65 2 
53 1 306 2 35 2 289 1 
200 1 90 1 303 1 157 1 8 1 49 1 
200 1 303 2 157 1 271 1 185 1 8 1 49 2 168 1 50 1 
324 1 
200 1 303 1 157 1 271 1 185 1 8 1 49 1 
200 1 303 3 157 1 271 1 185 1 216 1 8 1 49 3 168 1 50 1 
35 1 189 1 197 1 105 1 
271 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 269 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (82,325) (82,325) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 6 135 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 284 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 225 227 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 30 25 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 197 172 306 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 197 172 306 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 197 172 299 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 30 25 201 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 30 25 201 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 64 167 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (82,325) (82,325) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (82,325) (82,325) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (82,325) (82,325) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 226 211 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (109,309) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V ERROR java.lang.NullPointerException 64 167 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 301 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 130 236 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (193,194) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (11,52) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 3 209 2 262 1 241 1 265 1 47 1 313 2 175 1 180 2 294 1 168 1 295 1 19 3 
255 9 209 2 210 2 173 1 258 1 262 3 265 1 218 1 47 1 175 2 313 2 133 1 17 1 180 5 143 2 145 1 19 9 149 2 281 1 23 1 235 1 241 4 292 2 248 1 123 1 294 1 168 1 295 6 
255 9 209 2 210 2 173 1 258 1 262 3 265 1 218 1 47 1 175 2 313 2 133 1 17 1 180 5 143 2 145 1 19 9 149 2 281 1 23 1 235 1 241 4 292 2 248 1 123 1 294 1 168 1 295 6 
255 10 209 2 210 2 173 1 258 1 262 4 265 1 218 1 47 1 175 2 313 2 133 1 17 1 180 6 143 2 145 1 19 10 149 2 281 1 23 1 235 1 241 5 292 2 248 1 123 1 294 1 168 1 295 7 
255 7 209 2 210 1 173 1 258 1 262 2 265 1 218 1 47 1 175 2 313 2 133 1 17 1 180 4 143 2 145 1 19 7 149 2 281 1 23 1 235 1 241 3 292 2 248 1 294 1 168 1 295 4 
255 4 209 1 210 2 173 1 262 1 241 2 47 1 313 1 292 1 17 1 180 3 123 1 294 1 143 1 168 1 295 3 19 4 149 1 
255 2 254 1 209 1 83 1 258 1 47 1 313 1 288 1 175 1 133 1 180 1 294 1 168 1 143 1 19 2 149 1 
255 9 209 2 210 2 173 1 262 3 265 1 47 1 175 1 313 2 180 5 17 1 143 1 19 9 149 1 23 1 240 1 241 4 69 1 248 1 292 1 123 1 294 1 295 7 168 1 
255 9 209 2 210 2 173 1 262 3 265 1 47 1 175 1 313 2 180 5 17 1 143 1 19 9 149 1 23 1 240 1 241 4 69 1 248 1 292 1 123 1 294 1 295 7 168 1 
65 1 122 1 112 1 
65 1 122 1 112 1 
65 2 329 1 122 2 112 1 113 1 230 1 279 1 
176 1 
24 1 3 1 45 1 91 1 287 1 63 1 65 1 116 1 219 1 198 1 289 1 122 1 
24 1 45 1 91 1 63 1 65 2 116 1 219 1 198 1 289 1 178 1 35 1 122 2 169 1 
65 1 122 1 112 1 
65 1 122 1 112 1 
65 1 122 1 
116 2 219 2 178 1 239 2 35 1 45 2 31 1 206 1 169 1 
51 1 316 1 304 1 
81 1 126 1 239 1 268 2 116 1 219 1 11 1 271 1 12 1 243 2 244 1 14 1 165 1 315 1 53 1 208 1 56 1 148 1 297 2 
176 1 239 1 
81 1 152 1 126 1 45 1 268 1 116 2 219 2 11 1 243 1 244 1 51 1 14 1 165 1 204 1 35 1 53 1 208 1 56 1 169 1 297 1 
116 3 219 3 178 1 239 1 204 1 35 3 45 3 169 3 
116 1 219 1 198 1 60 1 35 1 45 1 169 1 
116 1 219 1 198 1 178 1 35 1 31 1 45 1 206 1 169 1 
152 1 24 1 91 1 45 2 63 1 95 1 65 1 269 1 116 2 219 2 198 1 289 1 178 1 204 1 122 1 35 2 206 1 169 2 
116 2 219 2 3 1 239 1 204 1 35 1 45 2 196 1 169 1 
152 1 24 1 234 1 91 1 45 1 95 1 63 1 65 1 116 1 219 1 198 1 289 1 204 1 122 1 35 1 169 1 
45 2 116 2 219 2 51 1 178 1 204 1 35 2 316 1 206 1 169 2 
81 1 126 1 239 1 268 1 116 1 219 1 243 1 11 1 244 1 14 1 165 1 53 1 208 1 56 1 297 1 
81 1 126 1 239 1 193 1 268 1 116 1 219 1 243 1 244 1 14 1 99 1 165 1 208 1 56 1 297 1 
256 1 1 2 257 1 128 1 46 3 304 1 51 1 316 1 276 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 70 1 290 1 246 1 164 1 291 1 73 1 249 1 75 1 
116 1 219 1 198 1 44 1 35 1 45 1 169 1 63 1 
152 1 233 1 239 1 45 4 32 1 116 4 219 4 198 1 178 1 204 2 35 4 141 1 206 1 169 4 
116 2 219 2 198 1 44 1 60 1 35 2 45 2 169 2 
57 1 77 1 20 1 
237 1 275 1 266 1 77 2 228 1 20 2 
77 1 20 1 
77 1 20 1 
266 1 228 1 
266 1 228 1 
266 1 228 1 
2 1 77 1 20 1 
2 1 77 1 20 1 
2 1 77 1 20 1 
5 1 77 1 20 1 
5 1 77 1 20 1 
5 1 77 1 20 1 
82 1 28 2 238 2 129 2 325 1 65 2 311 2 202 1 136 1 293 2 122 2 77 2 317 1 20 2 
28 1 238 1 45 1 129 1 65 1 116 1 219 1 311 1 202 1 293 1 122 1 35 1 226 1 77 1 169 1 20 1 
254 1 292 1 55 2 335 1 149 2 
292 1 143 1 149 1 
254 1 143 1 149 1 
254 1 292 2 139 1 55 1 335 1 149 3 
254 1 292 1 137 1 55 1 335 1 149 2 
65 1 122 1 112 1 9 1 
65 2 41 1 187 1 122 2 18 1 112 2 
6 1 112 1 195 1 113 1 8 1 65 2 329 1 220 1 122 2 279 1 230 1 171 1 
6 1 195 1 113 1 8 1 65 1 329 1 220 1 135 1 122 1 171 1 279 1 230 1 
200 1 
176 1 285 1 56 1 
303 1 56 1 
14 1 56 1 
284 1 
81 1 14 1 56 1 
232 1 56 1 
124 1 256 1 282 2 186 3 154 1 59 1 286 3 155 1 61 2 156 1 62 1 46 4 7 1 13 1 118 1 142 1 252 1 
124 2 1 2 256 5 257 4 300 4 259 4 260 1 46 29 7 1 130 1 13 2 131 1 100 1 142 1 181 1 186 14 282 3 154 2 59 1 286 6 155 2 156 1 61 4 62 15 64 4 327 1 70 1 199 1 290 1 164 4 34 1 291 1 73 1 167 4 252 2 
124 1 256 1 1 4 46 6 7 1 13 1 131 1 274 1 320 1 186 4 282 2 154 1 59 1 286 4 155 1 61 3 156 1 62 2 70 2 290 2 291 2 73 2 252 1 
124 1 256 1 282 2 186 3 154 1 59 1 286 3 155 1 61 2 156 1 62 1 46 4 7 1 13 1 142 1 252 1 
124 1 256 1 282 2 186 3 154 1 59 1 286 3 155 1 61 2 156 1 62 1 46 4 7 1 13 1 142 1 252 1 
255 1 209 1 43 2 302 1 93 1 268 1 313 1 175 2 222 2 50 1 14 1 19 1 56 1 157 1 114 1 160 2 243 1 244 1 333 1 165 1 121 1 208 1 297 1 
255 1 254 1 209 1 43 1 125 1 88 1 268 1 310 1 313 1 175 1 222 1 139 1 143 1 277 1 19 1 105 1 149 2 153 1 189 1 160 1 243 1 244 1 292 1 165 1 168 1 297 1 
255 2 254 1 209 1 43 1 125 1 88 1 47 1 268 1 310 1 313 1 175 1 222 1 180 1 140 1 139 1 143 1 277 1 19 2 105 1 149 2 189 1 160 1 243 1 244 1 292 1 165 1 294 1 295 1 168 1 297 1 
255 3 254 1 209 1 43 1 125 1 88 1 47 1 268 1 310 1 313 1 175 1 222 1 180 1 139 1 143 1 19 3 105 1 149 2 231 1 153 1 189 1 157 1 160 1 243 1 244 1 292 1 165 1 294 1 295 2 297 1 
255 2 254 1 43 1 88 1 47 1 268 1 310 1 175 1 222 1 180 1 139 1 143 1 19 2 105 1 149 2 231 1 153 1 160 1 243 1 244 1 165 1 292 1 294 1 295 2 297 1 
26 1 
195 1 113 1 268 1 65 1 329 1 220 1 243 1 122 1 225 1 208 1 227 1 147 1 230 1 297 1 
65 1 68 1 213 1 119 1 30 1 89 1 122 1 324 1 
65 1 68 1 213 1 119 1 89 1 122 1 324 1 146 1 
65 1 68 1 25 1 213 1 119 1 30 1 89 1 122 1 324 1 
65 1 122 1 
298 1 213 1 87 1 89 1 324 1 113 1 65 1 329 1 197 1 68 1 220 1 119 1 16 1 122 1 37 1 39 1 147 1 230 1 
172 1 298 1 213 1 87 1 89 1 306 1 220 1 16 1 230 1 147 1 324 1 113 1 65 1 329 1 68 1 197 1 119 1 122 1 37 1 207 1 39 1 
172 1 298 1 213 1 87 1 89 1 306 1 220 1 16 1 230 1 147 1 324 1 113 1 65 1 329 1 68 1 197 1 119 1 122 1 37 1 207 1 39 1 
298 1 172 1 299 1 42 1 213 1 29 1 89 1 324 1 113 1 65 1 329 1 197 1 68 1 220 1 119 1 16 1 122 1 182 1 39 1 147 1 230 1 
65 1 68 1 25 1 201 1 213 1 119 1 30 1 89 1 122 1 324 1 
65 1 68 1 25 1 201 1 213 1 119 1 30 1 89 1 122 1 324 1 
298 1 213 1 29 1 89 1 324 1 113 1 65 1 329 1 197 1 68 1 220 1 119 1 16 1 122 1 182 1 39 1 147 1 230 1 
0 1 1 4 263 1 45 1 46 2 268 8 219 1 270 1 50 1 14 2 140 1 103 1 56 3 148 2 21 1 151 2 153 1 186 1 27 1 188 2 62 1 114 1 328 1 116 1 161 1 243 8 162 1 244 2 70 2 290 2 165 2 291 2 73 2 204 1 35 1 75 1 208 2 169 1 297 7 
80 1 151 1 186 2 256 1 1 2 188 1 45 1 46 2 64 1 116 1 219 1 70 1 290 1 223 1 178 1 73 1 291 1 35 1 167 1 206 1 169 1 
151 1 282 1 186 2 256 1 1 2 188 1 59 1 239 1 286 2 155 1 61 2 156 1 62 1 46 3 304 1 7 1 70 1 51 1 290 1 176 1 73 1 291 1 75 1 316 1 252 1 
80 1 212 1 1 4 256 4 85 1 257 4 259 4 300 4 260 2 46 22 304 14 130 1 51 14 316 4 151 2 186 9 27 1 188 1 239 1 286 2 110 1 61 2 62 13 64 4 327 2 162 1 70 2 290 2 164 4 291 2 73 2 167 4 
81 1 80 1 1 2 126 1 261 1 45 1 46 2 216 1 268 1 219 2 11 1 14 1 273 1 315 1 53 1 316 1 56 1 151 1 152 1 186 1 27 1 188 1 239 1 62 1 116 2 243 1 162 1 244 1 70 1 290 1 165 1 291 1 73 1 204 1 35 1 208 1 169 1 297 1 
80 1 81 2 1 6 256 3 257 2 86 2 7 1 268 1 11 2 14 2 278 1 280 2 22 2 282 1 186 7 27 1 188 3 286 4 111 2 116 3 290 3 291 3 204 1 35 1 208 1 38 2 297 1 126 2 45 1 46 15 304 5 219 3 51 5 53 2 316 5 229 1 56 2 151 3 152 1 59 1 239 1 155 1 156 1 61 4 62 8 64 2 162 1 243 1 70 3 244 2 164 2 73 3 165 2 167 2 252 1 169 1 
151 1 1 2 256 1 186 1 188 1 46 1 64 1 70 1 290 1 246 1 73 1 291 1 75 1 
151 1 1 2 188 1 257 1 286 1 61 1 62 2 46 2 304 1 70 1 51 1 290 1 164 1 73 1 291 1 75 1 316 1 276 1 
256 1 1 2 257 1 46 3 304 1 51 1 316 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 70 1 290 1 164 1 291 1 73 1 75 1 167 1 
151 1 1 2 256 1 186 1 188 1 46 1 64 1 270 1 70 1 290 1 246 1 73 1 291 1 
151 1 1 2 188 1 257 1 286 1 61 1 62 2 46 2 304 1 270 1 70 1 51 1 290 1 164 1 73 1 291 1 316 1 276 1 
256 1 1 2 257 1 46 3 304 1 270 1 51 1 316 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 70 1 290 1 164 1 291 1 73 1 167 1 
256 1 1 2 257 1 46 3 304 1 51 1 316 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 70 1 290 1 164 1 291 1 73 1 167 1 
81 1 1 2 126 1 86 1 46 2 268 1 219 1 11 1 14 1 53 1 56 1 151 1 186 1 27 1 188 1 239 1 62 1 116 1 243 1 162 1 244 1 70 1 290 1 165 1 73 1 291 1 208 1 297 1 
81 1 1 2 126 1 46 2 267 1 268 1 219 1 14 1 99 1 56 1 151 1 186 1 27 1 188 1 239 1 62 1 193 1 116 1 243 1 162 1 244 1 70 1 290 1 165 1 73 1 291 1 208 1 297 1 
80 1 256 1 1 2 257 1 46 3 304 1 51 1 316 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 70 1 290 1 164 1 291 1 73 1 167 1 
81 1 256 1 1 2 257 1 126 1 86 1 46 3 304 1 268 1 219 1 11 1 51 1 14 1 53 1 140 1 316 1 56 1 22 1 151 1 186 1 188 1 286 1 61 1 62 2 64 1 116 1 243 1 244 1 70 1 290 1 164 1 165 1 73 1 291 1 167 1 297 1 
80 1 1 2 256 1 257 1 45 1 46 2 219 1 178 1 151 1 186 1 188 1 62 1 64 1 116 1 70 1 290 1 164 1 291 1 73 1 35 1 206 1 167 1 169 1 253 1 
1 4 256 3 257 3 214 1 259 2 300 2 260 1 46 15 130 1 221 1 179 1 320 1 186 6 322 1 286 2 61 2 323 1 242 1 62 9 64 3 327 1 70 2 290 2 164 3 291 2 73 2 203 1 36 1 167 3 
1 4 256 3 257 3 214 4 259 2 300 2 90 1 46 24 130 2 131 1 221 2 179 1 107 1 185 1 320 1 186 10 236 1 286 1 191 1 61 1 62 14 323 1 242 1 64 3 70 2 290 2 247 1 164 3 291 2 73 2 203 2 167 3 79 1 
1 4 256 3 257 3 214 2 259 2 300 2 260 1 46 17 130 1 221 1 179 1 185 1 320 1 186 7 286 1 61 1 323 1 242 1 62 10 64 3 327 1 70 2 290 2 164 3 291 2 73 2 203 1 36 1 167 3 
1 4 256 3 257 3 214 2 259 2 300 2 260 1 46 17 130 1 221 1 179 1 185 1 320 1 186 7 286 1 61 1 323 1 242 1 62 10 64 3 327 1 70 2 290 2 164 3 291 2 73 2 203 1 36 1 167 3 
1 2 256 8 257 7 214 3 259 4 300 4 260 2 90 1 46 39 7 1 130 2 221 1 179 1 107 1 185 1 320 1 282 1 186 17 59 1 236 1 286 6 155 1 191 1 156 1 61 6 323 1 242 1 62 22 64 7 327 2 70 1 290 1 247 1 164 7 291 1 73 1 203 1 167 7 252 1 79 1 
150 1 66 1 311 1 238 1 293 1 275 1 129 1 77 1 326 1 20 1 
57 1 108 1 
311 1 72 1 238 1 293 1 174 1 264 1 129 1 77 1 20 1 
82 1 28 2 238 1 129 1 325 1 65 1 311 1 202 1 136 1 293 1 122 1 77 1 317 1 20 1 
82 1 28 2 238 1 129 1 325 1 65 1 311 1 202 1 136 1 293 1 122 1 77 1 317 1 20 1 
82 1 28 2 238 1 129 1 325 1 65 1 311 1 202 1 136 1 293 1 122 1 77 1 317 1 20 1 
307 1 2 1 237 1 
307 1 2 1 237 1 
132 1 5 1 
132 1 237 1 5 1 
117 1 104 1 
211 1 28 1 238 1 129 1 112 1 65 1 311 1 136 1 293 1 122 1 226 1 77 1 317 1 20 1 
307 1 2 1 
132 1 237 1 5 1 
116 1 219 1 330 1 120 1 45 1 92 1 
183 1 114 1 268 1 160 1 243 1 244 1 333 1 14 1 50 1 165 1 74 1 208 1 56 1 297 1 
254 1 183 1 153 1 125 1 88 1 94 1 268 1 160 1 243 1 244 1 49 1 292 1 165 1 139 1 143 1 105 1 149 2 297 1 
254 1 183 1 153 1 125 1 88 1 94 1 268 2 160 1 243 2 244 1 49 1 292 1 165 1 139 1 140 1 143 1 105 1 149 2 297 2 
254 1 153 1 125 1 88 1 268 1 10 1 160 1 243 1 49 1 244 1 292 1 165 1 139 1 143 1 105 1 149 2 297 1 
217 1 
329 1 109 1 113 1 39 1 230 1 147 1 
256 1 167 1 39 2 64 1 
243 1 208 1 268 1 297 1 
309 1 109 1 176 1 39 1 
329 1 220 1 87 1 37 1 113 1 39 1 230 1 147 1 
81 1 301 1 303 1 113 1 268 1 329 1 243 1 244 2 14 1 177 1 165 1 166 1 208 1 56 2 147 1 230 1 297 1 
130 1 329 1 220 1 236 1 300 1 259 1 113 1 39 1 230 1 147 1 
256 2 59 1 155 1 113 1 65 1 329 1 96 2 220 2 164 2 122 1 250 1 207 1 252 1 39 3 147 1 230 1 
329 1 220 1 78 1 195 1 113 1 39 1 230 1 147 1 
150 1 138 1 238 1 293 1 104 1 
238 1 293 1 319 1 
238 1 293 1 319 1 
238 1 293 1 319 1 
101 1 238 1 293 1 
101 1 238 1 293 1 
101 1 238 1 293 1 
238 1 293 1 
77 1 20 1 
256 2 186 2 154 1 59 1 286 3 155 1 61 2 62 2 46 4 164 1 250 1 252 1 
320 1 1 2 256 1 186 1 46 1 64 1 70 1 290 1 73 1 291 1 
320 1 1 2 256 1 186 1 257 1 286 1 61 1 62 2 46 3 64 1 70 1 290 1 164 1 73 1 291 1 167 1 
320 1 1 6 186 1 154 1 286 2 155 1 61 1 62 2 46 3 131 1 70 3 245 1 290 3 73 3 291 3 36 1 252 1 
1 10 256 6 257 4 259 4 300 4 260 1 46 29 7 1 130 1 131 2 181 1 320 1 282 1 186 13 154 2 58 1 59 2 286 6 155 2 156 1 61 4 62 16 64 4 327 1 199 1 70 5 245 1 290 5 34 1 164 4 291 5 73 5 36 1 167 4 252 2 
282 1 256 1 186 3 1 4 154 1 59 1 286 3 155 1 61 2 156 1 62 2 46 5 7 1 131 1 70 2 290 2 73 2 291 2 252 1 
282 1 186 2 256 1 176 1 59 1 286 2 155 1 61 2 156 1 62 1 46 3 252 1 7 1 
1 2 256 1 186 1 58 1 257 1 286 1 61 1 62 2 46 3 64 1 70 1 290 1 164 1 73 1 291 1 167 1 
186 4 256 2 257 2 286 1 259 2 300 2 260 1 61 1 62 6 46 10 64 2 327 1 130 1 164 2 167 2 
212 1 256 3 1 4 257 2 300 2 259 2 260 1 46 18 7 1 131 2 282 1 186 8 154 2 59 1 286 7 155 2 156 1 61 5 62 10 64 2 327 1 70 2 290 2 245 1 164 2 73 2 291 2 167 2 252 2 
259 1 62 1 46 1 
186 1 300 1 46 1 
1 2 256 1 186 2 58 1 257 1 286 2 61 2 111 1 62 3 46 5 64 1 70 1 290 1 164 1 291 1 73 1 167 1 
1 2 256 2 257 2 300 1 259 1 90 1 46 10 130 1 107 1 320 1 186 4 236 1 286 1 61 1 62 6 64 2 70 1 290 1 164 2 247 1 291 1 73 1 167 2 79 1 
186 1 256 1 59 1 46 1 
186 1 1 2 154 1 286 2 155 1 61 1 156 1 62 2 46 3 7 1 131 1 70 1 245 1 290 1 73 1 291 1 252 1 
1 2 256 3 257 2 300 2 259 2 260 1 46 13 7 1 130 1 320 1 282 1 186 6 59 1 236 1 286 3 155 1 156 1 61 3 62 7 64 2 327 1 70 1 290 1 164 2 291 1 73 1 167 2 252 1 
1 4 256 4 257 4 259 2 300 2 260 1 90 1 46 18 130 1 107 1 320 1 186 7 58 1 236 1 286 2 61 2 62 11 64 4 327 1 70 2 290 2 247 1 164 4 291 2 73 2 167 4 79 1 
1 6 256 3 257 2 300 1 259 1 90 1 46 14 7 1 130 1 131 1 107 1 320 1 282 1 186 6 58 1 59 1 236 1 286 3 155 1 156 1 61 3 62 8 64 2 70 3 290 3 247 1 164 2 291 3 73 3 167 2 252 1 79 1 
1 4 256 2 257 2 300 1 259 1 90 1 46 10 130 1 107 1 320 1 186 4 58 1 236 1 62 6 64 2 70 2 290 2 164 2 247 1 291 2 73 2 167 2 79 1 
1 2 256 3 257 2 300 2 259 2 260 1 46 13 7 1 130 1 320 1 282 1 186 6 59 1 236 1 286 3 155 1 156 1 61 3 62 7 64 2 327 1 70 1 290 1 164 2 291 1 73 1 167 2 252 1 
107 1 320 1 256 2 186 4 1 2 257 2 236 1 259 1 300 1 90 1 62 6 46 10 64 2 130 1 70 1 290 1 247 1 164 2 73 1 291 1 167 2 79 1 
1 6 256 2 257 2 259 1 300 1 90 1 46 11 130 1 131 1 107 1 320 1 186 4 58 1 236 1 286 1 61 1 62 7 64 2 70 3 290 3 247 1 164 2 291 3 73 3 167 2 79 1 
1 6 256 2 257 2 259 1 300 1 90 1 46 11 130 1 131 1 107 1 320 1 186 4 236 1 286 2 61 2 62 7 64 2 70 3 290 3 247 1 164 2 291 3 73 3 36 1 167 2 79 1 
282 1 256 3 186 4 154 3 59 2 286 7 155 2 156 1 61 4 62 2 46 6 7 1 164 1 250 1 252 2 
1 6 256 2 257 2 259 1 300 1 90 1 46 11 130 1 131 1 107 1 320 1 186 4 236 1 286 1 61 1 62 7 64 2 70 3 290 3 247 1 164 2 291 3 73 3 36 1 167 2 79 1 
116 1 219 1 184 1 3 1 239 1 45 1 196 1 
184 1 3 1 239 1 192 1 45 1 196 1 33 1 116 1 219 1 272 1 134 1 224 1 
321 1 114 1 268 4 243 4 244 1 50 1 14 1 165 1 102 1 140 1 208 1 56 1 297 4 
40 1 81 1 268 2 48 1 243 2 331 1 244 2 98 1 14 1 165 1 54 1 318 1 56 1 297 2 
254 1 243 1 244 1 165 1 88 1 143 1 208 1 149 1 268 1 297 1 
0 1 153 1 268 2 308 1 243 2 244 1 14 1 165 1 140 1 56 1 297 2 
21 1 0 1 321 1 114 1 268 5 161 1 243 5 244 2 50 1 14 2 165 2 54 1 140 1 208 1 56 3 297 4 
0 1 321 1 190 1 114 1 268 5 161 1 243 5 244 2 50 1 14 2 165 2 54 1 140 1 208 1 56 3 297 4 
243 1 244 1 14 1 50 1 176 1 165 1 208 1 56 1 114 1 268 1 297 1 
81 1 126 1 239 1 45 1 268 1 116 2 219 2 243 1 11 1 244 1 14 1 165 1 204 1 35 1 208 1 56 1 169 1 297 1 
81 2 232 1 126 1 239 1 45 2 63 1 268 1 116 2 219 2 198 1 243 1 11 1 244 1 289 1 14 2 165 1 204 1 35 2 205 1 54 1 56 3 169 1 297 1 
81 2 126 1 45 2 268 2 219 2 14 2 102 1 54 1 56 3 232 1 239 1 193 1 63 1 116 2 243 2 198 1 244 1 289 1 165 1 204 1 35 2 205 1 169 1 297 2 
65 1 243 1 122 1 303 1 54 1 56 1 194 1 268 1 297 1 
65 1 243 1 52 1 122 1 303 1 54 1 56 1 268 1 297 1 
243 1 244 1 165 1 103 1 268 1 297 1 
21 1 40 1 0 1 81 1 153 1 263 1 268 7 161 1 243 7 331 1 244 3 14 2 165 2 166 1 140 1 103 1 208 2 170 1 56 3 148 1 297 6 
81 1 80 1 256 1 1 4 126 1 86 1 45 1 46 3 304 1 7 1 268 1 219 2 11 1 51 1 14 1 53 1 140 1 316 1 56 1 151 2 22 1 282 1 186 2 188 2 59 1 239 1 286 2 155 1 61 2 156 1 62 1 116 2 243 1 244 1 70 2 290 2 165 1 291 2 73 2 204 1 35 1 251 1 252 1 169 1 38 1 297 1 
65 1 122 1 112 1 
81 1 285 1 268 2 243 2 244 2 14 1 177 1 165 1 166 1 140 1 103 1 56 2 297 2 
81 1 126 1 239 1 45 1 193 1 268 1 116 2 219 2 243 1 244 1 14 1 165 1 204 1 35 1 208 1 56 1 169 1 297 1 
40 1 81 1 268 1 243 1 331 1 244 2 14 1 165 1 166 1 54 1 170 1 56 1 297 1 
312 1 330 1 314 1 120 1 4 1 92 1 
159 1 163 1 4 1 
312 1 332 1 314 1 4 1 239 1 
24 1 4 1 239 1 91 1 112 1 63 1 95 1 65 2 159 1 67 1 312 2 198 1 332 2 289 1 163 1 314 2 122 2 
255 1 209 1 313 1 180 1 294 1 168 1 19 1 47 1 
255 4 209 1 215 1 262 1 241 1 47 2 97 1 313 1 133 1 180 3 76 1 294 2 295 2 19 4 
106 1 255 2 209 1 313 1 71 1 180 1 240 1 294 1 295 1 168 1 19 2 47 1 
255 3 209 1 47 1 97 2 313 1 133 2 180 1 334 1 76 1 168 1 294 1 19 3 
305 1 180 1 296 1 
115 1 255 1 209 1 313 1 168 1 19 1 
255 2 209 1 313 1 248 1 180 1 294 1 295 1 168 1 19 2 47 1 
84 1 
255 1 209 1 313 1 180 1 294 1 168 1 19 1 47 1 
176 1 180 1 294 1 47 1 
255 1 209 1 313 1 180 1 294 1 19 1 47 1 
175 1 43 1 19 1 
255 3 209 1 97 1 313 1 133 2 180 1 76 1 294 1 168 1 144 1 19 3 47 1 
255 2 209 1 210 1 313 1 180 1 294 1 295 1 19 2 47 1 
255 1 209 1 241 1 313 1 292 1 17 1 180 1 168 1 143 1 19 1 149 1 
255 1 209 1 313 1 180 1 168 1 19 1 47 1 
255 1 209 1 313 1 294 1 168 1 19 1 47 2 
255 2 209 2 313 2 283 1 15 1 180 1 168 1 158 1 19 2 47 1 
255 3 209 1 23 1 262 1 241 1 47 1 313 1 248 1 180 2 294 1 168 1 295 2 19 3 
254 1 255 2 209 1 127 1 47 1 313 1 292 1 180 1 139 1 294 1 168 1 143 1 295 1 19 2 149 2 
255 4 209 2 210 1 262 1 241 1 47 1 313 2 180 2 123 1 294 1 168 1 295 2 19 4 
255 3 209 1 47 1 313 1 133 1 248 1 180 1 295 1 168 1 294 1 19 3 
180 1 215 1 262 1 241 1 
180 1 47 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 236 322 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 236 182 320 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 236 182 246 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 236 150 214 204 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 51 (99,168,347) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 236 182 137 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 236 322 46 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 175 169 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 175 169 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 175 169 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 175 169 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 175 169 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 236 280 343 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 236 65 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 236 65 54 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 236 182 246 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 236 182 136 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 236 182 136 318 78 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 182 136 318 78 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 329 136 318 259 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 236 65 54 243 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 236 65 54 243 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 236 182 136 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 256 21 359 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 256 21 359 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 359 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 236 182 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 236 (294,358) 195 291 (151,208) 101 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 236 182 3 127 19 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 236 182 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 236 280 343 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 203 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 203 143 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 236 (294,358) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 175 (62,241) (62,241) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 236 (294,358) 195 291 (151,208) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 4 292 1 194 2 131 9 271 1 132 1 351 1 176 1 251 1 31 9 317 1 205 3 109 2 36 6 299 2 12 2 356 1 254 1 257 5 116 1 60 2 209 1 211 1 96 1 66 1 215 2 288 1 330 2 
25 4 292 1 194 2 131 9 271 1 132 1 351 1 176 1 251 1 31 9 317 1 205 3 109 2 36 6 299 2 12 2 356 1 254 1 257 5 116 1 60 2 209 1 211 1 96 1 66 1 215 2 288 1 330 2 
25 5 292 1 194 2 131 10 271 1 132 1 351 1 176 1 251 1 31 10 317 1 205 4 109 2 36 7 299 2 12 2 356 1 254 1 257 6 116 1 60 2 209 1 211 1 96 1 66 1 215 2 288 1 330 2 
25 3 292 1 194 2 131 7 271 1 132 1 176 1 251 1 31 7 317 1 205 2 109 2 36 4 299 2 12 1 356 1 254 1 257 4 116 1 60 2 209 1 211 1 96 1 66 1 215 2 288 1 330 2 
254 1 25 2 292 1 257 3 60 1 131 4 351 1 176 1 251 1 66 1 215 1 31 4 205 1 109 1 36 3 299 1 12 2 330 1 
292 1 257 1 60 1 209 1 194 1 131 2 227 1 177 1 251 1 66 1 31 2 215 1 317 1 109 1 220 1 330 1 
25 1 292 1 257 2 194 1 131 3 251 1 66 1 31 3 205 1 109 2 288 1 36 1 330 2 
25 4 292 1 224 1 194 1 82 1 131 9 271 1 351 1 176 1 251 1 31 9 205 3 109 2 36 7 299 1 12 2 254 1 257 5 60 1 96 1 66 1 215 1 288 1 330 2 
25 4 292 1 224 1 194 1 82 1 131 9 271 1 351 1 176 1 251 1 31 9 205 3 109 2 36 7 299 1 12 2 254 1 257 5 60 1 96 1 66 1 215 1 288 1 330 2 
44 1 179 1 144 1 
329 2 144 1 261 1 
278 2 252 2 191 1 153 2 110 1 210 2 272 2 83 2 
26 1 332 1 294 1 128 1 153 3 47 2 272 2 250 1 83 2 297 2 85 1 253 1 252 2 34 1 110 1 37 1 90 1 140 1 162 1 360 1 278 2 59 2 166 1 210 3 186 1 341 1 263 1 262 1 67 1 146 1 191 1 147 2 41 1 346 2 148 1 289 1 126 1 
278 1 252 1 163 1 191 1 153 1 210 1 272 1 273 1 83 1 352 1 
44 1 163 1 61 1 153 1 210 1 248 1 144 1 64 1 95 1 228 1 342 1 252 1 138 1 170 1 
278 1 44 1 163 1 61 1 153 1 272 1 210 1 248 1 144 1 64 1 228 2 83 1 252 1 138 1 170 2 
236 1 265 1 170 1 228 1 322 1 
236 1 182 1 265 1 170 1 228 1 320 1 
236 1 170 1 228 1 
278 1 163 1 193 1 153 1 272 1 210 1 273 1 228 1 352 1 83 1 252 1 191 1 265 1 170 1 
144 1 
236 1 182 1 246 1 265 1 170 1 228 1 
233 1 236 1 150 1 214 1 204 1 32 1 265 2 170 3 184 1 228 3 134 1 
360 1 332 1 294 1 81 1 295 1 105 1 153 2 47 1 272 1 210 2 250 1 83 1 297 1 85 1 67 1 252 1 146 1 147 1 289 1 126 1 
110 1 179 1 
278 1 225 1 153 2 210 2 272 1 83 1 252 2 206 1 110 2 
295 1 29 1 283 1 
360 1 294 1 332 1 153 1 47 1 210 1 250 1 297 1 85 1 67 1 146 1 147 1 110 1 289 1 126 1 267 1 
278 1 181 1 77 1 225 1 81 2 105 1 153 5 272 4 210 5 83 4 342 1 252 5 110 1 222 1 
252 2 163 1 153 2 94 1 210 2 272 2 273 1 83 2 
278 1 252 3 81 1 153 3 110 1 210 3 272 3 83 3 
252 1 163 1 153 1 210 1 272 1 273 1 83 1 
278 1 252 1 163 1 225 1 206 1 153 1 210 1 272 1 83 1 
332 1 294 1 128 1 79 1 225 1 81 1 105 1 153 4 47 1 272 3 248 1 250 1 83 3 228 1 297 1 85 1 252 3 34 1 138 1 110 1 37 1 140 1 162 1 360 1 278 2 163 1 59 2 61 1 166 1 210 4 64 1 186 1 341 1 67 1 146 1 191 1 147 1 41 1 24 1 346 1 170 1 148 1 289 1 126 1 
342 1 77 1 252 2 81 1 153 2 110 1 210 2 272 1 83 1 
278 1 225 1 163 1 79 1 81 2 61 1 105 1 153 3 272 3 210 3 248 1 144 1 64 1 228 1 83 3 252 3 138 1 170 1 141 1 
278 1 225 1 81 1 295 1 29 1 153 2 272 2 210 2 83 2 252 2 
360 1 294 1 332 1 153 1 47 1 210 1 250 1 297 1 85 1 67 1 146 1 147 1 110 1 126 1 289 1 
360 1 332 1 335 1 174 1 153 1 47 1 210 1 250 1 297 1 67 1 146 1 147 1 110 1 126 1 289 1 
27 1 128 1 295 2 29 2 48 1 155 1 84 1 34 2 275 1 37 1 90 2 140 1 276 1 91 1 162 1 58 1 337 1 59 2 283 2 260 1 186 1 284 1 346 4 148 1 
252 1 163 1 61 1 153 1 210 1 272 1 94 1 83 1 
133 1 347 1 
133 1 347 1 
51 1 168 1 
51 1 168 1 
51 1 168 1 
287 1 133 1 347 1 
51 1 133 1 347 1 168 1 
99 1 133 1 347 1 
287 1 133 1 347 1 
287 1 133 1 347 1 
102 1 133 1 347 1 
102 1 133 1 347 1 
102 1 133 1 347 1 
103 1 104 1 153 2 272 2 133 1 83 2 228 1 7 1 252 2 230 1 52 1 110 1 112 1 115 1 302 1 210 2 120 1 39 1 264 1 170 1 99 1 72 1 347 1 73 1 
268 1 103 2 115 2 104 2 338 1 133 2 144 1 198 1 228 2 20 2 39 3 123 1 238 1 217 1 264 2 328 1 170 2 347 2 73 1 
215 1 60 1 299 1 
215 1 60 1 177 1 
14 1 215 3 190 1 218 1 299 2 177 1 
215 2 38 1 190 1 218 1 299 1 177 1 
215 2 190 2 218 1 299 1 177 1 
236 1 182 1 137 1 265 1 170 1 228 1 
236 1 277 1 46 1 265 2 63 1 170 2 228 2 322 1 
242 1 44 1 4 3 228 3 134 1 135 1 30 2 201 1 32 1 275 1 276 1 233 1 91 1 279 2 337 1 92 1 302 1 144 3 184 1 261 2 213 2 265 2 170 3 71 1 329 4 125 1 
242 2 44 1 4 5 228 4 134 1 30 4 135 1 201 2 32 1 275 2 276 2 142 1 233 1 91 2 279 4 337 2 92 1 302 2 15 1 144 4 184 1 261 3 213 4 265 3 98 1 329 7 170 4 71 1 125 1 
296 1 179 1 289 1 
289 1 325 1 
306 1 
360 1 332 1 289 1 
326 1 289 1 
332 1 289 1 
360 1 122 1 332 1 296 2 303 1 289 3 
169 1 173 1 346 1 175 1 90 1 
169 1 173 1 346 1 175 1 90 1 
169 1 173 1 56 1 346 1 175 1 90 1 
169 1 173 1 346 1 175 1 90 1 
169 1 173 1 346 1 175 1 90 1 
223 1 292 1 311 1 194 1 47 1 131 2 297 1 177 1 251 1 31 2 109 1 36 1 299 1 355 1 14 1 257 1 60 1 167 1 364 1 339 1 365 1 66 1 67 1 215 2 68 1 147 1 97 1 42 1 126 1 330 1 
223 1 292 1 311 1 194 1 47 1 131 3 297 1 177 1 31 3 315 1 109 1 158 1 36 2 299 1 355 1 14 1 257 1 60 1 167 1 364 1 339 1 340 1 66 1 67 1 215 2 68 1 147 1 97 1 126 1 330 1 
14 1 223 1 292 1 257 1 60 1 311 1 167 1 194 1 47 1 131 2 297 1 339 1 177 1 66 1 215 2 67 1 315 1 31 2 147 1 68 1 97 1 158 1 36 2 299 1 126 1 
349 1 311 2 194 2 47 1 131 1 250 1 339 2 297 1 340 1 31 1 53 1 109 1 147 1 68 2 219 1 180 1 330 1 
223 1 311 1 194 1 47 1 131 1 297 1 177 1 251 1 31 1 109 1 158 1 299 1 355 1 14 1 60 1 167 1 364 1 339 1 67 1 215 2 68 1 147 1 97 1 42 1 126 1 330 1 
121 1 
233 1 280 1 92 1 4 1 47 1 6 1 184 1 250 1 228 1 297 1 134 1 236 1 343 1 147 1 170 1 
236 1 86 1 80 1 362 1 170 1 228 1 65 1 
86 1 80 1 88 1 362 1 170 1 228 1 185 1 
236 1 86 1 80 1 54 1 362 1 170 1 228 1 65 1 
236 1 182 1 246 1 170 1 228 1 
149 1 74 1 4 1 80 1 6 1 228 1 134 1 86 1 50 1 136 1 139 1 233 1 279 1 182 1 282 1 362 1 184 1 261 1 236 1 170 1 329 1 
149 1 74 1 78 1 80 1 4 1 6 1 228 1 134 1 314 1 86 1 50 1 136 1 318 1 139 1 233 1 279 1 182 1 282 1 362 1 184 1 261 1 236 1 170 1 
149 1 74 1 78 1 80 1 4 1 6 1 228 1 134 1 314 1 86 1 50 1 136 1 318 1 139 1 233 1 279 1 182 1 282 1 362 1 184 1 261 1 236 1 170 1 
233 1 74 1 149 1 279 1 4 1 80 1 259 1 6 1 362 1 184 1 228 1 18 1 134 1 86 1 136 1 274 1 329 1 170 1 318 1 321 1 
236 1 86 1 243 1 80 1 54 1 362 1 170 1 228 1 65 1 
236 1 86 1 243 1 80 1 54 1 362 1 170 1 228 1 65 1 
233 1 74 1 149 1 293 1 279 1 182 1 4 1 80 1 6 1 362 1 184 1 228 1 134 1 18 1 236 1 86 1 136 1 274 1 329 1 170 1 
241 1 91 1 162 1 0 1 128 1 59 2 48 1 62 1 175 1 260 1 284 1 186 1 34 2 275 1 110 1 307 1 346 5 37 1 179 1 266 1 148 1 90 3 140 1 
242 2 128 2 1 1 2 3 295 11 29 4 48 2 249 1 154 3 253 1 34 6 275 2 110 1 89 1 37 2 140 2 90 8 276 2 162 1 91 1 337 1 59 4 258 1 283 11 234 1 16 1 284 1 186 2 341 1 240 1 346 14 148 2 290 1 
332 1 294 1 128 1 1 1 81 1 29 1 105 1 47 1 153 2 272 1 250 1 297 1 83 1 85 1 252 1 253 1 34 1 110 1 37 1 11 1 140 1 90 1 360 1 162 1 59 2 323 1 210 2 186 1 341 1 67 1 285 1 146 1 147 1 346 2 148 1 289 1 126 1 267 1 
241 1 242 2 0 1 294 2 332 2 1 1 151 2 295 6 105 1 48 3 47 1 153 3 250 1 297 1 199 1 253 1 252 1 110 1 162 3 337 2 59 6 62 1 210 3 118 1 304 2 341 1 67 2 22 2 307 1 346 19 266 1 126 2 128 3 81 1 29 6 175 1 272 1 83 1 85 2 34 9 275 3 37 3 140 3 276 2 90 10 360 2 91 3 283 6 186 3 284 3 145 2 146 2 147 1 41 2 148 3 289 2 
43 1 348 1 244 1 332 2 128 2 81 1 153 1 47 8 272 1 250 2 83 1 297 7 202 1 252 1 253 1 34 1 158 1 37 2 140 2 90 1 357 1 162 2 301 1 59 4 117 1 210 1 260 1 365 1 186 2 341 1 216 1 67 2 263 2 147 8 239 1 346 2 148 2 126 2 289 3 
242 1 225 1 128 1 1 1 226 1 295 1 29 1 48 1 153 1 272 1 83 1 252 1 34 2 275 1 37 1 140 1 276 1 90 1 278 1 162 1 91 1 337 1 59 2 283 1 210 1 284 1 186 1 346 3 148 1 
162 1 58 1 128 1 59 2 295 1 29 1 283 1 48 1 260 1 186 1 275 1 240 1 346 2 37 1 148 1 140 1 276 1 90 2 
162 1 91 1 128 1 337 1 59 2 295 1 29 1 283 1 48 1 260 1 155 1 284 1 186 1 34 2 346 2 37 1 148 1 140 1 
242 1 128 1 295 2 29 2 48 2 34 2 275 1 37 1 90 2 276 1 140 1 162 1 91 1 337 1 59 2 283 2 260 1 186 1 284 1 240 1 346 4 148 1 
43 1 162 1 58 1 128 1 59 2 295 1 29 1 283 1 48 1 186 1 275 1 240 1 346 2 37 1 148 1 140 1 276 1 90 2 
43 1 162 1 91 1 128 1 337 1 59 2 295 1 29 1 283 1 48 1 155 1 284 1 186 1 34 2 346 2 37 1 148 1 140 1 
242 1 43 1 128 1 295 2 29 2 48 2 34 2 275 1 37 1 90 2 276 1 140 1 162 1 91 1 337 1 59 2 283 2 186 1 284 1 240 1 346 4 148 1 
91 1 162 1 242 1 337 1 128 1 59 2 295 2 29 2 283 2 48 2 284 1 186 1 34 2 275 1 240 1 37 1 346 4 148 1 140 1 276 1 90 2 
332 1 294 1 128 1 47 1 153 1 250 1 297 1 85 1 253 1 34 1 110 1 37 1 90 1 140 1 360 1 162 1 59 2 210 1 186 1 341 1 67 1 146 1 147 1 41 1 346 2 148 1 126 1 289 1 
332 1 128 1 334 1 335 1 174 1 47 1 153 1 250 1 297 1 253 1 34 1 110 1 37 1 90 1 140 1 360 1 162 1 59 2 210 1 186 1 341 1 67 1 146 1 147 1 346 2 148 1 126 1 289 1 
242 1 128 1 1 1 295 2 29 2 48 2 34 2 275 1 37 1 90 2 276 1 140 1 162 1 91 1 337 1 59 2 283 2 186 1 284 1 240 1 346 4 148 1 
242 1 294 1 332 1 128 1 295 2 29 2 48 2 47 1 153 1 297 1 85 1 34 2 275 1 37 1 90 2 276 1 140 1 91 1 360 1 162 1 337 1 59 2 283 2 210 1 365 1 284 1 186 1 67 1 146 1 22 1 147 1 240 1 41 1 346 4 148 1 126 1 289 1 
242 1 225 1 128 1 1 1 295 1 29 1 48 1 153 1 272 1 83 1 252 1 316 1 34 1 275 1 37 1 140 1 276 1 90 2 91 1 278 1 162 1 337 1 59 2 283 1 210 1 186 1 240 1 346 3 148 1 
241 1 242 4 0 1 128 3 2 4 247 1 48 7 175 1 197 1 154 3 229 1 34 21 275 5 55 1 336 1 89 3 319 1 140 3 90 20 276 4 359 1 91 5 114 1 256 1 337 4 59 6 258 1 62 1 235 1 119 1 19 1 284 3 186 3 327 2 21 1 344 1 70 4 240 4 307 1 346 41 266 1 148 3 127 1 
241 1 242 4 0 1 128 4 2 4 247 2 48 7 175 1 197 1 154 3 229 1 34 18 275 5 55 1 336 1 89 3 319 1 140 4 90 20 276 4 359 1 91 4 114 1 256 1 337 3 59 8 258 1 62 1 235 1 119 1 19 1 284 4 186 4 327 2 21 1 344 1 70 4 240 3 307 1 346 38 266 1 148 4 127 1 
241 1 0 1 128 1 2 1 48 1 175 1 154 1 229 1 34 4 275 1 55 1 89 1 140 1 90 5 91 1 359 1 59 2 62 1 186 1 284 1 327 1 21 1 70 1 307 1 346 9 148 1 266 1 
242 3 128 2 2 2 48 6 154 1 229 1 34 10 275 3 55 1 89 1 319 2 140 2 90 9 276 3 359 1 91 3 337 3 59 4 258 1 235 1 119 1 284 3 186 2 327 1 21 1 345 1 70 2 240 3 346 19 148 2 
242 3 128 3 2 2 247 2 48 4 154 2 197 1 229 1 34 12 275 3 55 1 336 1 89 2 319 1 140 3 90 14 276 3 91 2 359 1 256 1 337 2 59 6 119 1 19 1 284 2 186 3 327 2 21 2 344 1 70 4 240 2 346 26 148 3 127 1 
255 1 103 1 115 1 104 1 309 1 133 1 8 1 286 1 264 1 347 1 
99 1 112 1 
178 1 103 1 104 1 115 1 10 1 264 1 133 1 221 1 347 1 
9 1 287 1 
102 1 231 1 106 1 
268 1 103 1 115 1 104 1 338 1 133 1 144 1 198 1 228 1 20 1 39 2 123 1 238 1 264 1 328 1 170 1 347 1 73 1 
268 1 103 1 115 1 104 1 338 1 133 1 144 1 198 1 228 1 20 1 39 2 123 1 238 1 264 1 328 1 170 1 347 1 73 1 
268 1 103 1 115 1 104 1 338 1 133 1 144 1 198 1 228 1 20 1 39 2 123 1 238 1 264 1 328 1 170 1 347 1 73 1 
9 1 287 1 231 1 
9 1 287 1 231 1 
102 1 106 1 
102 1 231 1 106 1 
230 1 52 1 
268 1 103 1 104 1 153 2 133 1 272 2 228 1 7 1 83 2 230 1 252 2 52 1 110 1 112 1 115 1 302 1 210 2 20 1 120 1 39 1 40 1 264 1 265 1 170 1 99 1 72 1 347 1 
332 1 1 1 128 1 47 2 153 2 297 2 156 1 252 2 253 1 298 1 33 1 34 1 37 1 140 1 90 1 162 1 59 2 117 1 210 2 186 1 341 1 67 1 216 1 263 2 147 2 124 1 346 2 148 1 126 1 289 1 368 1 
14 1 223 1 45 1 60 1 47 2 297 2 339 1 365 1 177 1 215 2 67 1 147 2 97 1 69 1 158 1 23 1 299 1 126 1 355 1 
14 1 223 1 45 1 60 1 47 1 297 1 17 1 339 1 177 1 215 2 67 1 147 1 97 1 158 1 299 1 126 1 355 1 
87 1 53 1 147 1 69 1 47 1 250 1 339 1 297 1 
14 1 223 1 45 1 60 1 47 1 297 1 339 1 177 1 215 2 67 1 147 1 97 1 69 1 158 1 23 1 299 1 126 1 355 1 
269 1 
279 1 44 1 157 1 4 1 232 1 179 1 144 1 
233 1 279 1 182 1 4 1 282 1 6 1 184 1 134 1 261 1 236 1 50 1 329 1 139 1 
332 1 4 1 195 1 47 1 6 1 250 1 297 1 134 1 354 1 233 1 358 1 360 1 92 1 208 1 303 1 184 1 325 2 236 1 67 1 147 1 289 3 126 2 101 1 291 1 
242 1 44 1 3 1 2 1 4 5 6 1 154 1 197 1 134 1 30 4 275 1 89 1 276 1 233 1 161 1 91 1 279 2 337 1 182 1 184 1 144 4 19 1 261 3 236 1 213 4 329 6 127 1 
0 1 4 2 193 1 153 1 6 1 49 1 272 1 273 1 228 1 352 1 83 1 134 1 314 1 252 1 275 2 233 1 161 2 91 1 278 1 279 2 163 1 207 1 210 1 184 1 191 1 307 1 170 1 266 1 
233 1 279 1 44 1 4 1 6 1 184 1 144 1 134 1 157 1 232 1 
161 2 242 2 91 2 279 5 337 2 4 5 49 1 144 5 261 5 30 5 145 1 213 5 275 2 329 10 276 2 
236 1 182 1 
233 1 280 1 92 1 4 1 47 1 6 1 196 1 250 1 184 1 297 1 134 1 236 1 343 1 147 1 
294 1 332 1 128 1 47 1 153 3 272 2 250 1 297 1 83 2 85 1 252 2 34 1 110 1 37 1 140 1 278 2 360 1 162 1 59 2 166 1 210 3 186 1 341 1 67 1 146 1 147 1 191 1 41 1 346 1 148 1 126 1 289 1 
233 1 279 2 92 1 44 1 28 1 4 1 6 1 175 1 184 1 144 2 134 1 261 1 30 1 213 1 329 2 
103 1 104 1 183 1 
333 1 230 1 103 1 104 1 328 1 
103 1 104 1 183 1 
103 1 104 1 183 1 
103 1 104 1 160 1 
103 1 104 1 160 1 
103 1 104 1 160 1 
103 1 104 1 
133 1 347 1 
241 1 91 1 0 1 128 1 59 2 2 1 48 1 62 1 175 1 154 1 19 1 284 1 186 1 34 3 275 1 55 1 307 1 89 1 346 7 266 1 148 1 90 4 140 1 
241 1 242 1 0 1 128 2 2 2 48 2 175 1 154 1 34 4 275 2 55 1 89 1 140 2 90 6 276 1 91 1 59 4 258 1 165 1 62 1 19 1 284 1 186 2 240 1 307 1 346 10 266 1 148 2 
241 1 242 2 0 1 128 3 2 1 247 1 48 3 175 1 154 1 197 1 34 9 275 3 55 1 336 1 89 1 140 3 90 9 276 2 91 3 337 2 59 6 165 1 62 1 19 1 186 3 284 2 344 1 240 1 307 1 346 18 266 1 148 3 127 1 
241 1 242 2 0 1 128 3 2 1 247 1 48 4 175 1 154 1 197 1 34 6 275 3 55 1 336 1 89 1 140 3 90 10 276 2 91 2 337 1 59 6 165 1 62 1 19 1 186 3 284 2 344 1 240 2 307 1 346 16 266 1 148 3 127 1 
241 1 91 1 0 1 128 1 59 2 2 1 48 1 62 1 175 1 154 1 19 1 284 1 186 1 34 3 275 1 55 1 307 1 89 1 346 7 266 1 148 1 90 4 140 1 
242 2 128 1 2 1 48 2 154 1 197 1 34 6 275 2 55 1 336 1 89 1 140 1 90 6 276 2 91 2 337 2 59 2 19 1 186 1 284 1 344 1 240 1 346 12 148 1 127 1 
241 1 242 2 0 1 128 4 2 1 247 2 48 3 175 1 154 1 197 1 34 7 275 3 55 1 336 1 89 1 140 4 90 10 276 2 91 2 337 1 59 8 165 1 62 1 19 1 186 4 284 2 344 1 240 1 307 1 346 17 266 1 148 4 127 1 
242 3 128 4 2 1 247 2 48 6 154 1 197 1 34 7 275 3 55 1 336 1 89 1 140 4 90 9 276 3 91 2 337 2 59 8 235 1 19 1 186 4 284 3 344 1 240 3 346 16 148 4 127 1 
241 2 91 1 0 3 62 1 48 6 284 3 34 4 275 1 240 3 307 1 346 7 266 3 90 3 
241 1 242 2 0 1 128 4 2 1 247 2 48 3 175 1 154 1 197 1 34 7 275 3 55 1 336 1 89 1 140 4 90 10 276 2 91 2 337 1 59 8 62 1 235 1 19 1 186 4 284 2 344 1 240 1 307 1 346 17 266 1 148 4 127 1 
241 1 91 1 0 1 128 2 59 4 247 1 48 2 62 1 175 1 284 1 186 2 34 3 275 1 240 1 307 1 346 7 148 2 266 1 90 4 140 2 
241 1 91 1 0 1 62 1 48 1 175 1 284 1 34 2 275 1 307 1 179 1 346 5 266 1 90 3 
91 1 242 1 337 1 128 1 59 2 165 1 48 2 284 1 186 1 34 2 275 1 240 1 346 4 148 1 140 1 276 1 90 2 
91 1 242 1 337 1 2 2 258 1 48 2 154 1 284 1 34 4 275 1 240 1 89 1 346 7 90 3 276 1 
241 1 242 2 0 1 128 1 2 2 247 1 48 3 175 1 154 2 34 8 275 3 276 2 90 9 140 1 91 3 337 2 258 1 59 2 62 1 234 1 284 2 186 1 240 1 307 1 346 17 266 1 148 1 290 1 
2 1 34 1 346 1 
346 1 154 1 90 1 
242 1 91 1 128 1 337 1 59 2 165 1 48 3 186 1 284 2 145 1 34 3 275 1 240 1 346 6 148 1 140 1 276 1 90 3 
242 2 128 1 2 1 48 2 154 1 197 1 34 6 275 2 55 1 336 1 89 1 140 1 90 6 276 2 91 2 337 2 59 2 19 1 186 1 284 1 344 1 240 1 346 12 148 1 127 1 
91 1 0 1 48 2 284 1 34 3 275 1 240 1 307 1 346 6 266 1 90 3 
241 1 0 1 128 1 59 2 247 1 48 2 62 1 284 1 186 1 34 2 240 1 346 3 266 1 148 1 90 1 140 1 192 1 
91 2 0 2 128 1 207 1 59 2 48 5 186 1 284 3 34 5 275 2 55 1 240 2 307 1 346 10 148 1 266 2 140 1 90 5 
128 1 59 2 48 1 186 1 275 1 55 1 240 1 346 2 148 1 140 1 276 1 90 2 
91 1 242 1 337 1 128 1 59 2 48 2 284 1 186 1 34 2 275 1 55 1 240 1 346 4 148 1 140 1 276 1 90 2 
0 1 128 3 59 6 247 1 48 2 235 1 186 3 284 1 34 2 55 1 240 1 346 3 148 3 266 1 140 3 90 1 192 1 
241 1 242 2 0 1 128 4 2 3 270 1 247 1 48 4 175 1 154 3 34 10 275 3 55 1 89 1 140 4 90 11 276 2 91 3 337 2 59 8 361 1 165 1 62 1 235 1 284 2 186 4 237 1 240 2 307 1 346 21 266 1 148 4 
203 1 
172 1 107 1 143 1 203 1 308 1 350 1 
348 1 67 1 332 1 244 1 147 1 47 1 179 1 250 1 126 1 289 1 297 1 
360 1 332 1 294 1 81 1 153 2 47 1 272 1 210 2 250 1 83 1 297 1 252 1 67 1 146 1 147 1 110 1 289 1 126 1 
360 2 332 2 294 1 163 1 61 1 81 1 153 2 47 1 248 1 272 1 210 2 83 2 297 1 313 1 326 1 252 2 67 1 146 1 147 1 110 1 100 1 289 3 126 1 
360 2 332 2 163 1 61 1 81 1 174 1 153 2 47 2 248 1 272 1 210 2 83 2 297 2 313 1 326 1 252 2 67 1 146 1 147 2 35 1 110 1 100 1 289 3 126 1 
44 1 310 1 193 1 47 1 153 1 272 1 273 1 297 1 228 1 352 1 83 1 313 1 252 1 278 1 163 1 210 1 144 1 325 1 147 1 191 1 170 1 289 1 
236 1 358 1 147 1 47 1 170 1 289 1 325 1 297 1 228 1 313 1 
357 1 67 1 147 1 47 1 126 1 297 1 
331 1 360 1 332 1 93 1 47 1 303 1 250 1 297 1 67 1 147 1 57 1 289 1 126 2 
241 1 0 1 332 1 294 1 128 2 1 1 151 1 81 1 48 1 153 2 47 1 175 1 272 1 83 1 297 1 85 1 252 1 34 2 33 1 275 1 110 1 37 2 90 3 140 2 91 1 360 1 162 2 59 4 62 1 210 2 365 1 284 1 186 2 67 1 146 1 147 1 22 1 41 1 307 1 346 5 266 1 148 2 289 1 126 1 
233 1 358 1 208 1 195 1 47 1 6 1 196 1 184 1 250 1 325 1 228 1 297 1 134 1 236 1 147 1 265 1 170 1 289 1 291 1 
357 1 360 1 332 1 47 2 296 1 303 1 297 2 365 1 354 1 67 1 147 2 289 2 126 2 
348 1 244 1 332 1 47 4 250 1 297 4 365 1 67 1 189 1 147 4 35 1 126 1 289 1 
360 1 332 1 281 1 93 1 47 1 363 1 297 1 67 1 147 1 57 1 367 1 289 1 126 2 
215 1 67 1 60 1 147 1 97 1 47 1 250 1 126 1 297 1 177 1 
332 1 47 2 297 2 365 1 216 1 67 1 147 2 158 1 124 1 289 1 126 1 
348 1 244 1 332 2 301 1 47 5 250 1 297 4 313 1 365 1 216 1 67 2 189 1 147 5 239 1 289 3 126 2 
348 1 244 1 300 1 332 2 301 1 47 5 250 1 297 4 313 1 365 1 216 1 67 2 189 1 147 5 289 3 126 2 
360 1 332 1 81 1 174 1 153 2 47 1 272 1 210 2 250 1 83 1 297 1 252 1 67 1 146 1 147 1 110 1 289 1 126 1 
331 1 360 1 332 1 93 1 47 1 303 1 297 1 313 1 67 1 147 1 57 1 289 1 126 2 
113 1 110 1 159 1 324 1 187 1 
113 2 44 1 163 1 79 1 61 1 152 1 324 2 248 1 144 1 64 1 228 2 187 1 353 1 212 1 138 1 265 1 110 1 159 2 170 2 
252 1 156 1 298 1 153 1 159 1 324 1 210 1 368 1 187 1 
212 1 152 1 187 1 
66 1 292 1 257 1 179 1 
66 1 292 1 31 1 257 1 109 1 131 1 330 1 
311 1 194 1 131 1 
76 1 292 1 257 1 164 1 131 3 251 1 108 1 66 1 31 3 317 2 109 1 330 1 
66 1 292 1 31 2 257 1 109 1 36 1 131 2 12 1 330 1 
25 1 257 1 60 1 131 1 176 1 251 1 31 1 215 1 109 1 299 1 330 1 
251 1 66 1 31 1 257 1 109 1 131 1 330 1 
251 1 66 2 292 1 31 1 109 1 131 1 330 1 
257 1 245 1 131 2 251 1 366 1 66 1 31 2 109 2 13 1 330 2 
25 1 292 1 257 2 131 3 271 1 96 1 251 1 66 1 31 3 205 1 109 1 36 2 330 1 
14 1 292 1 129 1 257 1 60 1 131 2 177 1 251 1 66 1 215 2 31 2 109 1 36 1 299 1 330 1 
25 1 292 1 257 2 131 4 351 1 251 1 66 1 31 4 205 1 109 2 36 2 12 1 330 2 
251 1 66 1 292 1 31 1 257 1 109 1 131 1 330 1 
25 1 292 2 164 1 257 3 131 4 188 1 108 1 66 2 31 4 317 1 205 1 109 1 36 2 330 1 
75 1 224 1 292 1 257 1 131 2 5 1 251 1 66 1 31 2 109 1 36 1 330 1 
292 1 164 1 257 1 131 3 251 1 108 2 66 1 31 3 317 2 109 1 171 1 330 1 
200 2 257 2 312 1 111 1 
251 1 31 1 109 1 130 1 131 1 330 1 
251 1 66 1 292 1 31 2 257 1 109 1 36 1 271 1 131 2 330 1 
305 1 
251 1 66 1 292 1 31 1 257 1 109 1 131 1 330 1 
292 1 257 1 131 3 271 1 251 1 66 1 31 3 317 1 109 1 36 1 330 1 
25 1 257 1 205 1 188 1 
66 1 257 1 

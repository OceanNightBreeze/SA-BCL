#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 239 72 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 239 72 349 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 74 13 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 352 22 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 239 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 352 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 315 1 208 2 23 2 129 2 108 9 177 4 131 1 113 1 90 1 132 2 259 2 61 5 68 1 245 2 309 6 17 1 246 1 336 1 73 3 164 1 139 1 247 1 185 1 46 1 337 2 293 1 142 9 
295 1 315 1 208 2 23 2 129 2 108 9 177 4 131 1 113 1 90 1 132 2 259 2 61 5 68 1 245 2 309 6 17 1 246 1 336 1 73 3 164 1 139 1 247 1 185 1 46 1 337 2 293 1 142 9 
295 1 315 1 208 2 23 2 129 2 108 10 177 5 131 1 113 1 90 1 132 2 259 2 61 6 68 1 245 2 309 7 17 1 246 1 336 1 73 4 164 1 139 1 247 1 185 1 46 1 337 2 293 1 142 10 
295 1 315 1 208 2 23 2 129 2 108 7 177 3 131 1 113 1 90 1 132 1 259 2 61 4 68 1 245 2 309 4 17 1 246 1 336 1 73 2 164 1 139 1 247 1 185 1 46 1 337 2 142 7 
295 1 208 1 129 1 245 1 108 4 309 3 177 2 336 1 73 1 131 1 46 1 337 1 90 1 293 1 142 4 132 2 259 1 61 3 
327 1 295 1 208 1 23 1 129 1 285 1 245 1 108 2 139 1 131 1 86 1 113 1 46 1 142 2 61 1 259 1 
295 1 315 1 23 1 129 2 245 2 108 3 309 1 177 1 73 1 131 1 46 1 142 3 61 2 
295 1 315 1 208 1 102 1 23 1 129 2 108 9 177 4 131 1 90 1 132 2 61 5 259 1 133 1 68 1 245 2 309 7 336 1 73 3 247 1 46 1 337 1 142 9 293 1 
295 1 315 1 208 1 102 1 23 1 129 2 108 9 177 4 131 1 90 1 132 2 61 5 259 1 133 1 68 1 245 2 309 7 336 1 73 3 247 1 46 1 337 1 142 9 293 1 
48 1 
168 1 
350 2 35 2 277 2 54 2 228 1 280 1 173 2 186 2 
0 1 51 1 319 1 274 1 275 1 26 1 173 3 276 1 175 1 343 1 7 1 277 2 8 1 54 2 278 1 29 1 88 1 31 1 347 2 280 1 303 1 197 1 304 1 35 2 12 1 328 2 243 2 92 1 163 2 350 3 122 2 262 1 42 1 19 1 228 1 186 2 187 1 
261 1 350 1 35 1 277 1 54 1 101 1 192 1 228 1 173 1 186 1 
313 1 219 1 331 1 233 1 173 1 261 1 333 1 350 1 54 1 264 1 254 1 289 1 123 1 165 1 
35 1 219 1 331 2 233 1 173 1 333 2 261 1 277 1 350 1 54 1 264 1 254 1 123 1 165 1 186 1 
333 1 74 1 331 1 82 1 
333 2 16 1 264 1 254 1 179 1 331 2 96 1 82 1 
333 1 179 1 331 1 
35 1 101 1 331 1 82 1 173 1 261 1 333 1 277 1 350 1 54 1 192 1 228 1 326 1 186 1 
264 1 
333 2 16 1 264 1 254 1 179 1 331 2 210 1 82 1 
339 1 199 1 330 1 331 5 273 2 172 1 200 1 82 2 38 2 39 1 333 5 16 1 264 1 254 1 9 1 43 2 179 2 205 1 355 1 
48 1 
234 1 62 1 35 1 277 1 350 2 54 2 280 2 186 1 173 2 
147 1 230 1 11 1 
0 1 12 1 328 1 243 1 92 1 173 1 26 1 175 1 276 1 343 1 350 1 262 1 216 1 347 1 280 1 304 1 
0 1 144 1 35 1 12 1 328 1 243 1 147 1 92 1 26 1 173 2 276 1 175 1 343 1 277 1 350 2 262 1 54 1 347 1 141 1 304 1 
350 3 35 3 277 3 54 3 141 1 186 1 280 1 173 3 
261 1 350 1 35 1 277 1 54 1 101 1 173 1 
261 1 62 1 234 1 350 1 35 1 277 1 54 1 173 1 186 1 
0 1 144 1 233 1 274 1 275 1 26 1 151 1 173 4 276 1 175 1 343 1 234 1 7 1 277 3 8 1 54 3 325 1 278 1 29 1 88 1 347 1 280 1 303 1 197 1 304 1 35 3 12 1 219 1 328 1 243 1 92 1 331 1 261 1 333 1 163 2 350 4 122 1 262 1 228 1 123 1 141 1 165 1 186 2 187 1 
350 2 35 1 277 1 54 2 289 1 15 1 141 1 280 1 173 2 
144 1 35 3 219 1 331 1 233 1 173 3 234 1 333 1 261 1 277 3 350 3 54 3 325 1 264 1 238 1 123 1 141 2 165 1 186 1 
234 1 350 1 35 1 277 1 54 1 147 1 173 1 186 1 
0 1 12 1 328 1 243 1 92 1 173 1 26 1 175 1 276 1 343 1 350 1 262 1 347 1 280 1 304 1 
0 1 12 1 328 1 243 1 92 1 317 1 173 1 26 1 175 1 276 1 261 1 343 1 350 1 30 1 206 1 347 1 280 1 
116 1 36 1 147 1 230 1 282 1 275 1 274 1 214 1 7 1 163 2 122 2 8 1 57 1 88 1 89 1 60 1 303 2 197 1 
261 1 350 1 35 1 277 1 54 1 165 1 173 1 253 1 
144 1 35 4 15 1 173 5 234 1 277 4 350 5 54 5 351 1 289 1 75 1 141 2 186 1 280 1 
261 1 350 2 35 2 277 2 54 2 101 1 173 2 253 1 
41 1 221 1 
41 1 221 1 
183 1 1 1 
183 1 1 1 
183 1 1 1 
41 1 221 1 66 1 
41 1 221 1 52 1 
183 1 1 1 41 2 221 2 3 1 69 1 
41 1 221 1 66 1 
41 1 221 1 66 1 
41 1 221 1 244 1 
41 1 221 1 244 1 
41 1 221 1 244 1 
314 1 324 1 41 1 221 1 239 1 72 1 
314 1 333 1 324 1 41 1 349 1 221 1 331 1 239 1 72 1 
208 1 337 1 259 1 
327 1 208 1 259 1 
294 1 327 1 170 1 149 1 337 2 259 3 
294 1 327 1 235 1 149 1 337 1 259 2 
294 1 327 1 149 2 337 1 259 2 
126 2 49 1 296 1 252 1 273 1 6 1 212 1 213 1 82 4 174 1 323 2 153 2 254 1 179 1 60 1 305 1 282 1 330 1 331 5 260 1 38 1 333 5 39 3 16 1 264 2 43 1 98 1 310 1 45 1 205 2 168 3 292 1 
333 2 13 1 344 1 204 1 74 1 331 2 82 2 
126 1 49 1 296 1 273 1 212 1 6 1 213 1 82 2 174 2 323 2 153 2 254 1 60 1 282 1 331 3 200 1 38 1 333 3 39 3 264 3 98 1 43 1 45 1 205 2 292 1 168 4 
126 2 49 1 296 2 273 1 106 1 212 1 6 2 213 1 82 3 174 3 323 4 153 4 254 1 258 1 60 2 157 1 282 2 331 4 200 1 38 1 333 4 39 5 264 4 43 1 98 1 45 2 205 4 168 7 292 2 
48 1 
343 1 47 1 
93 1 
343 1 26 1 
343 3 110 1 299 1 227 2 26 1 276 1 
343 1 26 1 276 1 
343 1 288 1 
116 4 242 1 296 3 297 1 14 1 150 1 130 1 214 3 27 1 334 1 122 13 42 7 346 2 353 2 59 2 60 3 303 6 34 1 
116 6 242 1 296 3 297 1 14 1 150 3 130 1 214 3 27 1 334 1 122 13 42 7 346 2 353 2 59 2 60 3 303 6 34 1 
116 4 242 1 296 3 297 1 14 1 150 1 130 1 214 3 27 1 334 1 122 13 42 7 346 2 111 1 353 2 59 2 60 3 303 6 34 1 
2 1 296 5 297 2 342 1 274 1 275 1 6 2 150 6 130 1 322 1 53 1 27 1 214 5 7 1 8 1 55 3 346 3 59 3 60 5 34 1 303 16 242 1 116 11 282 2 14 2 161 1 332 3 163 2 122 34 334 2 42 18 45 2 99 1 353 2 
2 1 296 3 297 1 274 2 275 2 150 4 130 1 7 2 214 4 27 1 8 2 346 2 59 2 60 3 303 7 34 1 116 8 329 1 14 1 136 1 163 4 122 15 334 1 42 8 353 2 
0 1 295 1 170 1 208 1 251 1 50 1 23 1 129 1 191 1 108 2 131 1 347 1 196 1 61 1 348 1 259 2 327 1 328 1 243 1 67 1 92 1 245 1 224 1 309 1 225 1 203 1 354 1 46 1 337 1 142 2 
0 1 295 1 170 1 208 1 251 1 50 1 23 1 129 1 320 1 191 1 108 3 255 1 347 1 196 1 61 1 156 1 348 1 259 2 327 1 328 1 243 1 67 1 92 1 245 1 224 1 309 2 225 1 46 1 337 1 142 3 
0 1 295 1 170 1 208 1 50 1 23 1 320 1 191 1 108 2 255 1 347 1 196 1 61 1 348 1 259 2 327 1 328 1 243 1 67 1 92 1 309 2 225 1 46 1 337 1 142 2 
0 1 23 2 129 1 191 2 26 1 108 1 343 1 194 1 347 1 301 1 156 1 12 1 328 1 243 1 92 1 67 2 306 1 245 1 225 2 97 1 207 1 142 1 77 1 
0 1 170 1 208 1 251 1 50 1 23 1 129 1 191 1 108 1 255 1 131 1 347 1 196 1 348 1 259 2 327 1 328 1 243 1 67 1 92 1 245 1 224 1 225 1 354 1 337 1 142 1 
65 1 
0 1 313 1 271 2 272 1 104 1 273 1 233 1 56 2 54 1 194 1 12 2 198 2 328 2 243 2 118 1 331 5 330 1 70 1 71 1 120 1 333 5 162 4 16 3 202 2 205 2 289 1 123 1 165 1 168 2 249 1 77 1 211 2 212 1 26 1 173 1 174 2 343 1 178 1 254 1 179 6 257 1 347 2 219 1 220 1 92 1 94 1 307 2 38 1 39 2 261 1 350 1 264 2 43 1 44 1 143 2 
313 1 272 1 271 1 104 1 233 1 210 1 173 1 54 1 179 2 219 1 94 1 118 1 331 3 333 3 261 1 162 2 350 1 16 1 289 1 123 1 165 1 249 1 
313 1 272 1 104 1 233 1 211 1 210 1 173 1 54 1 254 1 179 1 219 1 94 1 118 1 331 3 333 3 261 1 162 3 350 1 16 1 264 1 289 1 123 1 165 1 249 1 
313 1 272 1 271 1 104 1 233 1 210 1 211 1 173 1 54 1 254 1 179 2 219 1 94 1 118 1 331 3 333 3 261 1 162 3 16 1 350 1 264 1 289 1 123 1 165 1 249 1 143 1 
313 1 101 1 271 4 272 1 104 1 233 1 273 1 277 1 54 2 56 2 192 1 114 1 326 1 155 1 281 1 198 2 118 1 331 5 330 1 162 4 333 5 16 3 202 2 205 1 289 1 123 1 165 1 249 1 210 1 211 2 173 2 174 2 178 1 254 1 179 7 300 1 35 1 219 1 94 1 307 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 140 1 186 1 143 4 
313 1 272 1 271 2 104 1 233 1 273 1 54 1 56 2 198 2 118 1 331 4 330 1 71 1 162 4 333 4 16 2 202 2 205 1 289 1 123 1 165 1 249 1 168 2 211 2 173 1 174 2 178 1 254 1 179 4 219 1 94 1 307 2 38 1 261 1 39 1 350 1 264 2 43 1 44 1 143 2 
313 1 101 1 272 1 271 2 104 1 273 1 233 1 277 1 54 2 56 2 192 1 114 1 326 1 155 1 198 2 118 1 330 1 331 4 162 4 333 4 16 2 202 2 205 1 289 1 123 1 165 1 249 1 211 2 173 2 174 2 178 1 254 1 179 4 300 1 35 1 219 1 94 1 307 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 186 1 143 2 
313 1 101 1 272 1 271 2 104 1 273 1 233 1 277 1 54 2 56 2 192 1 114 1 326 1 155 1 198 2 118 1 330 1 331 4 162 4 333 4 16 2 202 2 205 1 289 1 123 1 165 1 249 1 211 2 173 2 174 2 178 1 254 1 179 4 300 1 35 1 219 1 94 1 307 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 186 1 143 2 
313 1 101 1 272 1 271 2 104 1 273 1 233 1 5 1 277 1 54 2 56 2 192 1 114 1 326 1 118 1 330 1 331 4 162 4 333 4 16 2 335 1 205 1 289 1 123 1 165 1 249 1 168 2 211 2 173 2 254 1 179 4 35 1 219 1 94 1 134 1 307 2 95 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 186 1 312 2 143 2 
313 1 101 1 271 3 272 1 104 1 233 1 273 1 277 1 54 2 56 2 192 1 114 1 326 1 155 1 281 1 198 2 118 1 331 4 330 1 162 5 333 4 16 2 202 2 205 1 289 1 123 1 165 1 249 1 211 3 173 2 174 2 178 1 254 1 179 5 300 1 35 1 219 1 94 1 307 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 186 1 143 3 
313 1 101 1 271 3 272 1 104 1 233 1 273 1 277 1 54 2 56 2 192 1 114 1 326 1 155 1 281 1 198 2 118 1 331 4 330 1 162 5 333 4 16 2 202 2 205 1 289 1 123 1 165 1 249 1 211 3 173 2 174 2 178 1 254 1 179 5 300 1 35 1 219 1 94 1 307 2 38 1 261 2 39 1 350 2 264 1 43 1 44 1 228 1 186 1 143 3 
313 1 272 1 271 2 104 1 233 1 273 1 54 1 56 2 118 1 331 4 330 1 71 1 162 4 333 4 16 2 335 1 205 1 289 1 123 1 165 1 249 1 168 2 211 2 173 1 254 1 179 4 219 1 94 1 307 2 95 2 38 1 261 1 39 1 350 1 264 1 43 1 44 1 312 2 143 2 
48 1 163 2 7 1 8 1 57 1 88 1 274 1 275 1 197 1 
341 1 230 7 147 7 296 2 274 2 275 2 6 2 150 2 7 2 8 2 55 2 278 1 88 1 280 1 303 3 11 6 197 2 64 1 116 2 332 2 261 1 286 1 163 4 122 9 42 6 20 1 45 2 206 1 21 1 100 1 
0 1 144 1 341 1 275 1 274 1 26 1 173 2 276 1 175 1 343 1 7 1 277 1 54 1 8 1 278 1 216 1 58 1 88 1 347 1 280 1 11 1 303 1 304 1 197 1 12 1 35 1 328 1 243 1 92 1 159 1 350 2 163 2 262 1 122 2 42 1 138 1 19 1 141 1 
144 1 0 1 146 1 188 1 230 2 147 2 274 2 275 2 6 1 150 2 276 1 277 1 7 2 8 2 54 1 278 1 11 1 197 2 12 1 116 3 328 1 243 1 160 1 163 4 122 5 341 1 296 1 173 2 26 1 175 1 343 1 214 1 215 1 88 2 347 1 303 2 304 1 35 1 92 1 135 1 350 2 262 1 42 3 45 1 141 1 187 1 
0 2 189 1 269 1 51 2 274 2 275 2 173 1 26 2 343 3 277 1 7 2 54 1 8 2 237 1 84 1 28 1 278 1 255 1 57 1 194 1 88 2 347 7 182 1 303 1 197 2 35 1 12 2 328 8 243 8 92 2 350 1 163 4 263 1 122 2 203 1 42 1 19 1 141 1 77 1 
125 1 341 1 147 1 230 1 296 1 274 1 275 1 6 1 173 1 234 1 214 1 277 1 7 1 8 1 54 1 88 1 60 1 11 1 303 2 197 1 35 1 116 1 282 1 163 2 350 1 122 3 42 1 45 1 186 1 
267 1 116 1 147 1 230 1 296 1 275 1 274 1 150 1 7 1 163 2 122 2 8 1 42 2 57 1 45 1 88 1 11 1 197 1 
116 1 147 1 230 1 282 1 275 1 274 1 214 1 7 1 163 2 122 2 8 1 57 1 88 1 89 1 60 1 303 2 197 1 
296 1 230 2 147 2 274 1 275 1 6 1 150 1 7 1 214 1 8 1 57 1 88 1 60 1 303 2 197 1 116 2 282 1 163 2 122 4 42 2 45 1 
267 1 116 1 189 1 147 1 230 1 296 1 275 1 274 1 150 1 7 1 163 2 122 2 8 1 42 2 45 1 88 1 197 1 
116 1 189 1 147 1 230 1 282 1 275 1 274 1 214 1 7 1 163 2 122 2 8 1 88 1 89 1 60 1 11 1 303 2 197 1 
116 1 189 1 147 1 230 1 296 1 275 1 274 1 150 1 6 1 7 1 163 2 122 2 8 1 42 2 45 1 88 1 197 1 
116 1 147 1 230 1 296 1 275 1 274 1 150 1 6 1 7 1 163 2 8 1 122 2 42 2 45 1 88 1 197 1 
0 1 275 1 274 1 26 1 173 1 276 1 175 1 343 1 7 1 8 1 278 1 88 1 347 1 280 1 303 1 304 1 197 1 12 1 328 1 243 1 92 1 350 1 163 2 122 2 262 1 42 1 19 1 187 1 
0 1 250 1 317 1 275 1 274 1 26 1 173 1 276 1 175 1 343 1 7 1 8 1 278 1 30 1 88 1 347 1 280 1 303 1 197 1 12 1 328 1 243 1 92 1 261 1 350 1 163 2 122 1 206 1 
116 1 341 1 147 1 230 1 296 1 275 1 274 1 150 1 6 1 7 1 163 2 122 2 8 1 42 2 45 1 88 1 197 1 
0 1 147 1 230 1 296 1 275 1 274 1 150 1 6 1 26 1 173 1 276 1 175 1 343 1 7 1 8 1 215 1 88 1 347 1 304 1 197 1 116 1 328 1 243 1 92 1 350 1 163 2 122 2 262 1 42 2 203 1 45 1 187 1 
145 1 341 1 296 1 230 1 147 1 274 1 275 1 150 1 6 1 173 1 234 1 277 1 7 1 8 1 54 1 88 1 11 1 197 1 35 1 116 1 163 2 350 1 122 2 42 2 45 1 186 1 
78 1 229 1 2 2 296 4 4 1 232 1 105 1 274 4 275 4 321 1 190 1 150 3 6 3 53 2 27 1 214 3 7 4 8 4 55 2 346 1 109 1 85 1 112 1 279 1 59 1 60 4 34 1 303 16 63 1 116 6 282 3 136 1 332 2 119 1 163 8 122 32 42 16 45 3 353 1 248 3 
78 1 229 1 2 2 270 1 296 7 232 1 321 1 105 1 274 3 275 3 150 4 6 7 53 2 7 3 214 4 8 3 55 4 109 2 85 1 112 2 279 1 60 6 303 22 63 1 116 8 282 6 136 1 332 4 119 1 163 6 122 46 42 24 20 2 45 7 21 2 248 4 
229 1 2 2 270 1 232 1 103 1 275 4 274 4 105 1 321 1 6 7 150 7 190 1 53 3 7 4 55 5 8 4 109 1 112 2 279 1 59 2 60 7 63 1 116 13 282 5 332 5 119 1 163 8 122 58 20 2 21 2 248 4 78 1 296 9 214 6 27 2 85 1 346 2 303 27 34 2 136 1 42 31 45 7 353 2 
78 1 229 1 2 2 270 1 296 4 232 1 105 1 274 4 275 4 321 1 190 1 150 3 6 3 53 2 27 1 214 2 7 4 8 4 55 2 346 1 109 1 85 1 112 1 279 1 59 1 60 4 34 1 303 17 63 1 116 5 282 3 136 1 332 2 119 1 163 8 122 34 42 17 45 3 353 1 248 4 
78 1 229 1 2 2 270 1 296 6 232 1 321 1 105 1 274 3 275 3 150 3 6 5 53 2 27 1 7 3 214 4 8 3 55 3 346 1 109 1 85 1 112 1 279 1 59 1 60 5 34 1 303 19 63 1 116 7 282 4 136 1 332 3 119 1 163 6 122 40 42 21 20 1 45 5 353 1 21 1 248 4 
0 1 341 1 51 2 275 1 274 1 26 1 173 2 343 1 7 1 54 2 8 1 84 1 28 1 278 1 180 1 87 1 88 1 217 1 347 2 303 1 197 1 241 1 328 2 243 2 92 1 350 2 163 2 122 2 42 1 184 1 19 1 
327 1 0 1 170 1 208 1 328 2 117 1 243 2 251 1 50 1 92 1 225 1 203 1 255 1 311 1 195 1 337 1 347 2 196 1 259 2 
327 1 0 1 170 1 208 1 328 1 243 1 251 1 50 1 92 1 225 1 255 1 311 1 337 1 347 1 196 1 167 1 259 2 
0 1 12 1 328 1 117 1 243 1 92 1 26 1 343 1 225 1 194 1 347 1 301 1 33 1 77 1 
327 1 0 1 170 1 208 1 328 1 117 1 243 1 251 1 50 1 92 1 225 1 255 1 311 1 195 1 337 1 347 1 196 1 259 2 
287 1 
48 1 
273 1 174 1 178 1 254 1 179 1 198 1 330 1 331 1 38 1 39 1 333 1 16 1 202 1 264 2 43 1 205 1 168 1 
0 1 12 1 328 1 22 1 243 1 92 1 330 1 273 1 38 1 43 1 352 1 347 1 
229 1 296 4 316 3 273 2 24 1 321 1 212 1 6 4 174 5 53 1 323 8 153 8 55 2 254 2 154 1 179 1 279 1 257 1 60 4 63 1 282 4 331 1 330 2 332 2 119 1 38 2 333 1 39 13 16 1 264 7 43 2 45 4 20 1 205 8 21 1 168 10 124 1 
101 1 296 2 316 2 273 1 173 1 130 1 277 1 54 1 192 1 346 1 154 1 59 1 60 1 155 1 326 1 35 1 330 1 331 1 38 1 261 1 333 1 39 2 350 1 43 1 228 1 353 1 205 2 186 1 
199 1 330 1 273 1 38 1 39 1 254 1 264 1 43 1 355 1 205 1 
296 2 316 2 282 2 160 1 6 2 174 5 39 5 323 5 153 5 264 5 154 1 45 2 205 5 60 2 168 10 
333 1 16 1 264 1 254 1 179 1 331 1 
268 1 0 2 273 2 212 2 81 1 26 2 276 1 343 2 194 1 179 4 257 2 347 4 302 1 12 2 328 4 243 4 92 3 330 1 331 3 283 1 70 1 200 1 38 2 308 1 120 1 39 2 333 3 201 2 16 2 43 2 205 2 266 1 169 1 77 1 
0 1 274 1 275 1 173 3 26 1 175 1 276 1 343 1 277 2 7 1 8 1 54 2 278 1 29 1 88 1 347 1 280 1 303 1 304 1 197 1 12 1 35 2 328 1 243 1 92 1 163 2 350 3 122 1 262 1 228 1 186 2 187 1 
297 1 330 1 273 1 212 1 38 1 174 2 39 1 323 2 153 2 254 2 264 4 43 1 205 2 257 1 168 4 
324 1 239 1 
324 1 239 1 
324 1 239 1 
324 1 239 1 
324 1 239 1 
324 1 239 1 
324 1 239 1 
324 1 239 1 
41 1 221 1 
116 6 2 1 296 3 275 2 274 2 150 3 130 1 214 3 7 2 163 4 27 1 122 16 8 2 42 8 346 2 353 2 59 2 60 3 303 8 34 1 
48 1 
116 2 296 1 282 1 275 1 274 1 6 1 150 1 214 1 7 1 163 2 18 1 8 1 122 4 42 2 45 1 60 1 303 2 
116 2 296 2 282 2 332 2 150 1 6 2 53 1 214 1 122 12 55 2 42 6 20 1 45 2 21 1 60 2 303 6 
2 1 296 5 275 1 274 1 6 2 150 2 130 1 27 1 214 4 7 1 55 2 8 1 346 2 59 2 60 5 34 1 303 12 64 1 116 6 282 2 332 2 163 2 122 24 42 12 45 2 20 1 353 2 21 1 
122 1 332 1 303 1 
122 1 55 1 42 1 
116 3 296 1 282 1 160 1 274 1 275 1 6 1 150 1 163 2 7 1 214 2 8 1 18 1 122 6 42 3 45 1 60 1 303 3 
229 1 296 4 274 1 275 1 321 1 6 4 150 2 53 1 7 1 214 2 55 2 8 1 279 1 60 4 303 11 63 1 116 4 282 4 136 1 332 2 119 1 163 2 122 22 42 11 45 4 20 1 21 1 
116 2 296 1 150 1 214 1 122 6 42 3 346 1 353 1 59 1 60 1 303 3 
218 1 116 2 2 1 275 1 274 1 150 1 214 1 27 1 7 1 163 2 122 3 8 1 42 1 346 1 59 1 303 2 34 1 
116 5 296 2 136 1 274 1 275 1 150 2 130 1 163 2 7 1 214 3 8 1 122 10 42 5 346 2 353 1 59 2 60 2 303 5 
163 2 7 1 116 1 122 2 8 1 42 2 296 1 45 1 136 1 274 1 275 1 150 1 
116 2 296 1 282 1 136 1 275 1 274 1 6 1 150 1 214 1 7 1 163 2 8 1 122 4 42 2 45 1 60 1 303 2 
218 1 116 2 2 1 136 1 275 3 274 3 190 1 150 1 7 3 163 6 214 1 122 3 8 3 42 1 346 1 59 1 303 2 
2 1 296 5 274 4 275 4 190 1 6 2 150 4 130 1 53 1 322 1 27 1 214 4 7 4 8 4 55 3 346 2 59 2 60 5 34 1 303 15 116 8 282 2 161 1 136 1 332 3 163 8 18 1 122 30 42 15 45 2 99 1 353 2 
229 1 2 1 296 5 274 2 275 2 321 1 150 4 6 2 130 1 53 1 27 1 7 2 214 4 55 1 8 2 346 2 279 1 59 2 60 4 34 1 303 10 63 1 116 8 282 1 136 1 332 1 119 1 163 4 122 23 42 13 45 2 353 2 
229 1 2 1 296 5 274 3 275 3 321 1 150 2 6 2 130 1 53 1 27 1 7 3 214 4 8 3 55 1 346 2 279 1 59 2 60 4 34 1 303 10 63 1 116 6 282 1 136 1 332 1 119 1 163 6 122 23 18 1 42 13 45 2 353 2 
229 1 2 1 296 7 274 3 275 3 321 1 6 4 150 3 130 1 53 1 27 1 7 3 214 5 55 2 8 3 346 2 279 1 59 2 60 7 34 1 303 18 63 1 116 8 282 4 136 1 332 2 119 1 163 6 18 1 122 35 42 17 45 4 20 1 353 2 21 1 
229 1 2 1 296 7 274 3 275 3 321 1 6 4 150 5 130 1 53 1 27 1 7 3 214 5 55 2 8 3 346 2 279 1 59 2 60 6 34 1 303 15 63 1 116 10 282 3 136 1 332 2 119 1 163 6 18 1 122 33 42 18 45 4 20 1 353 2 21 1 
229 1 2 1 296 5 274 2 275 2 321 1 150 4 6 2 130 1 53 1 27 1 7 2 214 4 55 1 8 2 346 2 279 1 59 2 60 4 34 1 303 10 63 1 116 8 282 1 136 1 332 1 119 1 163 4 122 23 42 13 45 2 353 2 
229 1 296 4 274 1 275 1 321 1 6 4 150 2 53 1 7 1 214 2 55 2 8 1 279 1 60 4 303 11 63 1 116 4 282 4 136 1 332 2 119 1 163 2 122 22 42 11 45 4 20 1 21 1 
229 1 2 2 296 7 321 1 274 4 275 4 6 4 150 3 130 1 53 1 27 1 7 4 214 5 8 4 55 2 346 2 279 1 59 2 60 6 34 1 303 16 63 1 116 8 282 3 136 1 332 2 119 1 163 8 122 34 18 1 42 18 45 4 20 1 353 2 21 1 
229 1 296 1 274 2 275 2 190 1 6 1 53 1 7 2 214 1 8 2 55 1 60 1 303 4 116 1 282 1 136 1 332 2 163 4 122 7 42 3 45 1 21 1 
116 6 296 1 150 3 27 2 214 3 122 7 42 3 346 3 353 1 59 3 60 1 303 4 34 1 
229 1 296 1 274 2 275 2 190 1 6 1 53 1 7 2 214 1 8 2 55 1 60 1 303 4 116 1 282 1 136 1 332 2 163 4 122 7 42 3 45 1 21 1 
350 1 54 1 10 1 289 1 15 1 280 1 173 1 
231 1 223 1 15 1 173 1 152 1 350 1 40 1 54 1 226 1 10 1 289 1 280 1 
48 1 12 1 328 1 243 1 347 1 
0 1 35 1 12 1 328 1 243 1 92 1 26 1 173 2 276 1 175 1 343 1 277 1 350 2 54 1 262 1 347 1 141 1 280 1 
0 1 35 2 219 1 328 1 243 1 92 1 284 1 26 2 173 2 276 2 175 1 261 1 343 3 277 1 350 2 201 1 54 2 262 1 288 1 347 1 165 1 141 1 280 1 
0 1 173 2 26 2 175 1 276 2 343 3 277 1 54 2 30 1 347 1 280 1 35 2 219 1 328 1 243 1 92 1 284 1 261 2 201 1 350 2 288 1 206 1 141 1 165 1 
0 1 171 1 26 1 276 1 343 4 83 1 254 1 179 1 347 3 12 1 91 1 328 3 243 3 92 1 331 2 284 1 333 2 201 1 288 1 264 1 227 1 123 1 47 1 
0 1 12 1 328 3 243 3 128 1 92 1 331 2 284 1 26 1 276 1 333 2 343 4 201 1 83 1 288 1 264 1 254 1 227 1 179 1 123 1 347 3 47 1 
0 1 328 1 243 1 92 1 347 1 182 1 
268 1 0 2 12 2 328 7 51 1 269 1 243 7 92 3 25 1 26 2 276 1 308 1 343 3 263 1 237 1 203 1 28 1 110 1 255 1 347 6 182 1 
0 1 274 2 275 2 150 1 276 1 277 1 7 2 8 2 54 1 59 2 60 3 280 2 197 2 116 4 328 1 243 1 163 4 122 12 203 1 206 1 341 1 296 3 173 2 26 1 175 1 130 1 343 1 27 1 214 3 346 2 215 1 88 2 217 1 347 1 34 1 303 6 304 1 35 1 92 1 135 1 261 1 350 2 262 1 42 6 353 2 141 1 187 1 
209 1 128 1 273 2 81 1 82 1 343 2 254 1 179 2 347 1 12 1 199 1 328 1 37 1 243 1 330 2 331 3 38 2 39 1 333 3 16 1 264 1 43 2 227 1 205 1 355 1 123 1 47 1 166 1 
0 1 328 1 243 1 92 1 352 1 347 1 182 1 
0 1 12 1 328 4 243 4 92 1 148 1 26 1 343 1 83 1 203 1 194 1 347 4 77 1 
268 1 0 1 328 2 243 2 92 2 26 1 276 1 308 1 343 1 201 1 193 1 347 2 302 1 169 1 
327 1 0 1 12 1 208 1 328 1 243 1 92 1 347 1 196 1 259 1 
0 1 328 2 243 2 92 1 26 1 343 1 203 1 28 1 255 1 87 1 347 2 
0 2 12 1 328 5 243 5 92 2 148 1 26 2 343 3 201 1 263 1 203 1 237 1 28 1 194 1 347 4 77 1 
0 2 12 1 328 5 243 5 92 2 148 1 26 2 343 3 201 1 263 1 203 1 28 1 194 1 347 4 240 1 77 1 
0 1 173 2 26 1 175 1 276 1 343 1 277 1 54 1 30 1 347 1 280 1 12 1 35 1 328 1 243 1 92 1 261 1 350 2 206 1 141 1 
268 1 0 1 328 1 243 1 92 2 25 1 26 1 276 1 308 1 343 1 201 1 110 1 347 1 
265 1 158 1 222 1 290 1 280 1 
219 1 158 1 222 2 298 1 331 2 233 1 82 1 261 1 333 2 325 1 264 1 254 1 265 2 123 1 181 1 165 1 290 2 280 1 115 1 
241 1 158 1 222 1 173 1 350 1 54 1 184 1 180 1 290 1 
158 1 181 1 115 1 
48 1 
295 1 129 1 46 1 245 1 142 1 61 1 108 1 
23 1 191 1 142 1 
295 1 129 1 245 1 108 3 176 1 131 1 139 2 46 1 291 1 142 3 61 1 338 1 
309 1 295 1 129 1 46 1 245 1 132 1 142 2 61 1 108 2 
208 1 129 1 245 1 108 1 177 1 131 1 337 1 90 1 142 1 61 1 259 1 
131 1 129 1 46 1 245 1 142 1 61 1 108 1 
295 1 131 1 129 1 46 2 245 1 142 1 108 1 
318 1 129 2 245 2 108 2 137 1 131 1 46 1 76 1 142 2 61 1 
295 1 68 1 129 1 245 1 108 3 309 2 177 1 73 1 131 1 247 1 46 1 142 3 61 2 
327 1 295 1 170 1 208 1 129 1 245 1 108 2 309 1 131 1 46 1 32 1 337 1 142 2 61 1 259 2 
295 1 129 2 245 2 108 4 309 2 177 1 73 1 131 1 46 1 142 4 293 1 132 1 61 2 
295 1 131 1 129 1 46 1 245 1 142 1 61 1 108 1 
295 2 129 1 245 1 107 1 108 4 309 2 177 1 73 1 139 1 46 2 291 1 142 4 338 1 61 3 
295 1 102 1 80 1 129 1 245 1 108 2 309 1 131 1 256 1 46 1 142 2 61 1 
295 1 127 1 129 1 245 1 108 3 131 1 139 2 46 1 291 2 142 3 338 1 61 1 
121 1 236 2 79 1 61 2 
340 1 131 1 129 1 245 1 142 1 108 1 
309 1 295 1 131 1 68 1 129 1 46 1 245 1 142 2 61 1 108 2 
345 1 
295 1 131 1 129 1 46 1 245 1 142 1 61 1 108 1 
309 1 295 1 139 1 131 1 68 1 129 1 46 1 245 1 142 3 61 1 108 3 
177 1 73 1 107 1 61 1 
46 1 61 1 

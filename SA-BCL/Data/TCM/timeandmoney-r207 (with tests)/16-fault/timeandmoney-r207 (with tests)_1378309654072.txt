#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 51 (80,120,313) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) (91,128) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (91,128) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) (91,128) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,29,113,236) (16,29,113,236) (16,29,113,236) 254 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 159 326 141 41 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 159 326 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 159 326 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 159 153 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 159 326 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 159 326 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 166 291 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 166 291 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (196,320) 172 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (196,320) 172 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (196,320) 45 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (196,320) 45 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 251 142 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
193 1 70 1 168 1 
193 1 303 1 140 2 
119 2 132 2 278 2 304 1 17 1 248 2 310 2 298 2 
0 1 216 2 131 1 132 2 263 1 47 1 49 1 298 2 96 1 304 1 17 1 232 1 187 2 104 1 103 1 310 2 273 1 21 1 240 1 69 1 278 3 155 1 156 2 314 1 248 3 30 1 74 1 204 1 119 2 252 1 323 2 124 1 125 2 210 1 40 1 85 1 169 1 
119 1 132 1 194 1 278 1 304 1 248 1 83 1 310 1 298 1 191 1 
311 1 193 1 2 1 260 1 5 1 278 1 248 1 198 1 76 1 121 1 56 1 168 1 83 1 310 1 
311 1 193 1 132 1 2 2 278 1 248 1 198 1 298 1 119 1 76 1 121 2 56 1 168 1 83 1 310 1 
2 1 110 1 121 1 255 1 315 1 
193 1 2 2 110 1 121 2 255 1 168 1 178 1 60 1 
2 1 121 1 255 1 
110 1 2 1 132 1 194 1 278 1 248 1 296 1 298 1 119 1 121 1 304 1 83 1 310 1 191 1 
193 1 
193 1 2 2 110 1 121 2 255 1 247 1 168 1 178 1 
193 1 110 2 2 5 218 2 4 1 293 1 178 1 161 1 52 1 121 5 183 2 163 1 164 2 101 1 255 2 168 1 59 1 212 1 62 1 
131 1 69 1 155 1 278 2 248 2 9 1 49 1 297 1 298 1 119 1 252 1 323 1 125 1 187 1 233 1 40 1 273 1 310 1 21 1 169 1 
70 1 17 1 
132 1 133 1 278 2 248 2 298 1 119 1 270 1 186 1 17 1 83 1 310 2 
81 1 233 1 117 1 
131 1 69 1 278 1 155 1 248 1 49 1 252 1 323 1 125 1 17 1 187 1 57 1 40 1 273 1 169 1 21 1 
119 3 132 1 278 3 17 1 248 3 9 1 310 3 298 3 
119 1 278 1 248 1 83 1 310 1 298 1 191 1 
132 1 133 1 278 1 248 1 298 1 119 1 270 1 83 1 310 1 
0 1 216 2 131 1 132 2 2 1 90 1 9 1 47 1 49 1 297 1 298 3 53 1 304 1 270 1 17 1 56 1 232 1 187 1 103 1 273 1 310 3 21 1 311 1 240 1 69 1 155 1 278 4 156 1 314 1 248 4 198 1 74 1 204 1 119 3 252 1 76 1 121 1 323 1 124 1 125 1 83 1 40 1 85 1 169 1 
119 1 5 1 278 2 17 1 248 2 58 1 9 1 310 2 298 1 
311 1 193 1 132 1 2 1 278 3 248 3 198 1 9 2 297 1 201 1 298 3 119 3 76 1 121 1 53 1 270 1 56 1 83 1 310 3 
132 1 278 2 248 2 9 1 298 2 119 2 270 1 81 1 233 1 310 2 
131 1 69 1 278 1 155 1 248 1 49 1 252 1 323 1 125 1 17 1 187 1 40 1 273 1 169 1 21 1 
64 1 131 1 278 1 155 1 248 1 49 1 94 1 323 1 125 1 17 1 187 1 40 1 273 1 169 1 21 1 
0 1 216 2 87 1 292 1 222 1 47 1 95 1 96 2 144 1 232 1 105 1 233 2 190 1 240 1 156 4 115 1 199 1 117 2 284 1 74 1 204 2 122 1 81 2 85 1 
119 1 206 1 278 1 56 1 248 1 83 1 310 1 298 1 
132 1 27 1 278 4 248 4 295 1 9 2 297 1 298 4 119 4 270 1 186 1 17 1 83 1 310 4 
119 2 206 1 278 2 248 2 83 1 310 2 298 2 191 1 
80 1 63 1 
80 1 63 1 
51 1 120 1 
51 1 120 1 
51 1 120 1 
147 1 80 1 63 1 
51 1 120 1 80 1 63 1 
313 1 80 1 63 1 
147 1 80 1 63 1 
147 1 80 1 63 1 
80 1 235 1 63 1 
80 1 235 1 63 1 
80 1 235 1 63 1 
193 1 109 2 2 2 111 2 154 2 174 1 44 1 160 1 320 1 285 1 300 1 121 2 229 2 253 2 324 3 126 1 127 1 80 2 63 2 
214 1 289 1 2 1 261 1 44 1 298 2 229 1 17 1 310 2 63 1 237 1 109 1 111 1 154 1 278 2 245 1 313 1 248 2 119 2 121 1 205 1 324 1 208 1 80 1 
239 1 279 1 102 1 
239 1 102 1 116 1 
279 2 271 1 102 3 264 1 116 1 234 1 
181 1 279 1 271 1 102 2 264 1 116 1 
279 1 271 1 102 2 264 2 116 1 
218 1 2 5 261 1 292 1 4 3 293 2 175 1 222 1 178 1 46 1 92 2 50 1 140 3 303 1 231 2 183 1 101 1 61 1 193 2 110 4 276 1 115 1 281 2 199 1 317 1 121 5 205 1 164 1 208 1 255 1 168 1 257 1 
2 1 110 1 121 1 157 1 
218 1 2 3 292 1 4 3 175 1 293 2 222 1 46 1 92 1 140 4 303 2 183 1 231 2 61 1 193 3 110 2 115 1 281 2 199 1 317 1 121 3 205 1 164 1 168 1 257 1 212 1 
2 3 4 5 175 1 92 1 183 1 107 1 191 1 193 4 110 2 194 1 278 1 281 4 115 2 199 2 119 1 121 3 205 2 212 1 218 1 132 1 292 2 293 4 222 2 296 1 46 2 298 1 140 7 303 3 231 4 304 1 61 1 310 1 67 1 248 1 317 1 322 1 164 1 257 1 168 1 83 1 
228 1 70 1 49 1 
49 1 251 1 
267 1 
49 1 21 1 
228 2 131 1 162 1 23 1 49 3 21 1 
131 1 49 1 21 1 
15 1 49 1 
238 1 22 1 68 1 156 7 115 1 199 1 203 1 204 3 226 1 96 4 122 2 55 2 100 1 256 1 38 1 190 3 130 1 
238 1 22 1 68 1 156 7 115 1 199 1 203 1 204 3 226 1 96 4 122 2 55 2 100 1 256 1 38 1 190 3 130 1 
238 1 22 1 68 1 156 7 115 1 199 1 203 1 204 3 226 1 96 4 122 2 165 1 55 2 100 1 256 1 38 1 190 3 130 1 
216 4 1 1 292 3 222 3 46 3 47 2 93 3 226 1 301 1 96 11 55 1 305 1 306 2 190 6 19 1 22 2 240 2 68 1 243 4 156 23 28 1 158 1 115 3 199 3 203 1 74 2 204 12 122 2 286 1 256 4 38 1 85 2 
216 4 88 1 47 2 10 1 226 1 96 5 55 2 100 1 306 1 190 4 238 1 240 2 22 1 156 9 115 1 199 1 203 1 74 2 204 4 122 3 256 1 38 1 85 2 130 1 
254 1 113 1 29 1 211 1 236 1 
113 1 29 1 128 1 211 1 236 1 
16 1 113 1 211 1 91 1 
113 1 29 1 128 1 211 1 236 1 
254 1 113 1 29 1 211 1 236 1 
288 1 
170 1 2 5 260 1 4 2 5 1 176 1 8 1 178 3 268 1 183 1 99 1 98 1 101 1 187 2 189 1 21 1 193 2 195 2 278 1 198 1 200 2 32 4 121 5 125 2 209 2 37 2 129 2 287 1 40 1 42 1 218 1 293 2 49 1 140 2 303 2 54 1 230 1 56 1 148 2 310 1 311 1 155 1 248 1 316 2 73 1 317 1 76 1 323 2 164 1 255 6 168 1 258 1 83 1 259 1 169 2 
170 1 2 3 260 1 5 1 8 1 178 1 98 1 56 1 189 1 310 1 311 1 278 1 248 1 247 1 73 1 198 1 32 2 76 1 121 3 255 2 209 1 83 1 
170 1 2 3 260 1 5 1 8 1 178 1 98 1 56 1 189 1 310 1 311 1 193 1 278 1 195 1 248 1 247 1 73 1 198 1 32 3 76 1 121 3 255 1 168 1 83 1 
170 1 2 3 260 1 5 1 8 1 178 1 98 1 56 1 189 1 310 1 311 1 193 1 278 1 195 1 247 1 248 1 73 1 316 1 198 1 32 3 76 1 121 3 255 2 209 1 168 1 83 1 
170 1 218 1 2 3 260 1 4 1 5 1 293 1 176 1 8 1 178 1 138 1 141 1 183 1 98 1 101 1 56 1 189 1 310 1 311 1 278 1 247 1 248 1 73 1 316 2 198 1 32 2 159 1 76 1 121 3 164 1 255 3 209 2 326 1 83 1 41 1 
170 1 2 4 260 1 5 1 4 1 176 1 8 1 178 2 183 1 98 1 101 1 189 1 193 2 278 1 195 2 198 1 200 2 32 4 121 4 209 2 37 2 287 1 129 2 218 1 293 1 140 2 303 2 54 1 56 1 148 2 310 1 311 1 248 1 73 1 316 2 76 1 164 1 255 4 168 1 83 1 
170 1 2 2 218 1 260 1 4 1 5 1 293 1 176 1 8 1 138 1 183 1 98 1 56 1 101 1 189 1 310 1 311 1 278 1 248 1 73 1 198 1 32 2 159 1 76 1 121 2 164 1 83 1 326 1 
170 1 2 2 218 1 260 1 4 1 5 1 293 1 176 1 8 1 138 1 183 1 98 1 56 1 101 1 189 1 310 1 311 1 278 1 248 1 73 1 198 1 32 2 159 1 76 1 121 2 164 1 83 1 326 1 
311 1 170 1 2 2 260 1 153 1 5 1 278 1 8 1 248 1 73 1 198 1 32 2 159 1 76 1 121 2 98 1 56 1 83 1 189 1 310 1 
170 1 218 1 2 2 260 1 4 1 5 1 293 1 176 1 8 1 138 1 141 1 183 1 98 1 101 1 56 1 189 1 310 1 311 1 278 1 195 1 248 1 73 1 316 1 198 1 32 3 159 1 76 1 121 2 164 1 255 1 209 1 83 1 326 1 
170 1 218 1 2 2 260 1 4 1 5 1 293 1 176 1 8 1 138 1 141 1 183 1 98 1 101 1 56 1 189 1 310 1 311 1 278 1 195 1 248 1 73 1 316 1 198 1 32 3 159 1 76 1 121 2 164 1 255 1 209 1 83 1 326 1 
170 1 2 4 260 1 5 1 4 1 8 1 177 2 178 2 183 1 98 1 101 1 189 1 193 1 278 1 195 2 198 1 200 2 32 4 121 4 209 2 37 2 287 1 218 1 293 1 137 1 140 2 54 1 56 1 310 1 311 1 248 1 73 1 316 2 76 1 164 1 255 4 167 2 168 1 83 1 
0 1 216 2 47 1 95 1 226 1 96 3 55 1 100 1 17 2 232 1 233 1 190 2 238 1 240 1 70 1 156 6 115 1 199 1 117 1 74 1 204 3 122 2 81 1 38 1 85 1 130 1 
0 1 216 4 292 4 222 2 46 4 47 2 93 4 96 13 13 2 184 1 17 1 232 2 305 2 104 1 272 1 233 16 190 4 19 1 24 1 240 2 243 4 156 22 314 1 115 2 199 4 117 16 74 2 204 9 122 2 123 1 256 2 81 6 85 2 
0 1 216 2 131 1 9 1 49 1 47 1 297 1 298 1 96 1 17 1 187 1 232 1 57 1 104 1 272 1 273 1 310 1 21 1 151 1 240 1 69 1 277 1 155 1 278 2 156 2 314 1 248 2 74 1 119 1 204 1 252 1 321 1 323 1 125 1 81 1 40 1 85 1 169 1 
0 3 9 1 96 10 17 2 100 1 187 3 188 1 104 1 103 2 272 1 190 8 273 2 21 2 278 3 115 3 114 2 199 3 117 7 204 10 119 1 122 4 125 3 38 1 40 2 130 1 216 6 131 2 135 1 292 2 222 2 223 2 46 2 297 1 47 3 49 2 298 1 226 1 143 1 55 1 232 3 307 2 233 7 310 1 238 1 240 3 241 2 69 2 155 2 156 20 314 1 248 3 74 3 252 2 323 3 78 1 256 4 81 7 85 3 169 1 
0 2 216 4 42 1 6 1 294 1 9 1 48 1 49 3 47 2 298 1 95 1 96 1 302 1 146 1 99 1 187 8 232 2 188 1 104 1 106 1 310 1 274 1 21 2 240 2 278 1 155 2 280 1 156 2 314 1 248 1 74 2 119 1 204 1 323 8 125 7 210 2 40 2 85 2 169 2 
0 1 216 2 132 1 292 1 222 1 46 1 47 1 298 1 96 1 270 1 232 1 233 1 272 1 190 1 310 1 240 1 278 1 156 3 115 1 248 1 31 1 199 1 117 1 74 1 119 1 204 2 122 1 81 1 85 1 
0 1 216 2 240 1 87 1 292 1 156 2 199 1 47 1 117 1 95 1 74 1 96 2 232 1 256 1 81 1 233 1 190 1 85 1 
0 1 216 2 240 1 156 2 222 1 115 1 47 1 117 1 95 1 74 1 204 2 122 1 232 1 105 1 81 1 233 1 190 1 85 1 
0 1 216 2 292 1 222 1 46 1 47 1 95 1 96 2 232 1 233 2 190 2 240 1 156 4 115 1 199 1 117 2 74 1 204 2 122 1 256 1 81 2 85 1 
0 1 216 2 240 1 87 1 292 1 156 2 199 1 47 1 117 1 74 1 96 2 302 1 232 1 256 1 81 1 233 1 190 1 85 1 
0 1 216 2 240 1 156 2 222 1 115 1 47 1 117 1 74 1 204 2 302 1 122 1 232 1 105 1 81 1 233 1 190 1 85 1 
0 1 216 2 292 1 222 1 46 1 47 1 96 2 302 1 232 1 233 2 190 2 240 1 156 4 115 1 199 1 117 2 74 1 204 2 122 1 256 1 81 2 85 1 
0 1 216 2 240 1 292 1 156 4 115 1 222 1 46 1 199 1 47 1 117 2 74 1 204 2 96 2 122 1 232 1 256 1 81 2 233 2 190 2 85 1 
0 1 216 2 131 1 49 1 47 1 96 1 17 1 187 1 232 1 104 1 103 1 273 1 21 1 240 1 69 1 155 1 278 1 156 2 314 1 248 1 74 1 204 1 252 1 323 1 125 1 40 1 85 1 169 1 
0 1 216 2 131 1 49 1 47 1 94 1 96 1 17 1 187 1 232 1 104 1 273 1 21 1 64 1 65 1 240 1 155 1 278 1 156 2 314 1 248 1 74 1 204 1 323 1 125 1 40 1 85 1 169 1 
0 1 216 2 292 1 222 1 46 1 47 1 96 2 232 1 272 1 233 2 190 2 240 1 156 4 115 1 199 1 117 2 74 1 204 2 122 1 256 1 81 2 85 1 
0 1 216 2 131 1 292 1 222 1 46 1 48 1 49 1 47 1 96 2 187 1 232 1 103 1 233 2 307 1 190 2 273 1 21 1 240 1 69 1 155 1 278 1 156 4 115 1 248 1 199 1 117 2 74 1 204 2 252 1 122 1 323 1 125 1 256 1 81 2 40 1 85 1 
0 1 216 2 132 1 292 1 222 1 46 1 47 1 298 1 96 2 270 1 232 1 272 1 233 1 190 1 310 1 240 1 278 1 244 1 156 3 115 1 248 1 199 1 117 1 74 1 204 1 119 1 256 1 81 1 85 1 
86 1 215 1 171 1 216 6 3 1 292 4 221 1 88 1 222 4 46 4 47 3 93 2 11 1 299 1 96 13 18 1 305 1 306 1 190 4 19 2 240 3 25 1 243 3 156 28 115 4 249 2 199 4 202 1 74 3 75 1 204 15 122 2 166 1 256 2 85 3 328 1 
86 1 215 2 171 2 216 6 291 1 292 7 221 1 88 1 222 6 46 7 47 3 93 4 11 1 299 1 96 23 13 2 18 1 305 2 306 2 190 6 19 2 240 3 25 1 156 44 243 4 115 6 249 3 199 7 74 3 204 21 75 1 122 3 166 1 256 3 85 3 328 1 
86 1 215 2 171 1 216 6 291 1 292 7 221 1 88 1 222 5 46 7 47 3 93 5 11 1 299 1 96 23 13 2 185 1 18 1 305 2 306 1 190 8 19 3 240 3 25 1 243 5 156 43 115 5 249 3 199 7 202 1 74 3 75 1 204 20 122 3 166 1 256 5 85 3 328 1 
86 1 215 2 171 1 216 8 291 1 292 9 221 1 88 1 222 9 46 9 47 4 93 6 11 1 299 1 96 30 13 3 185 1 18 1 305 3 306 2 190 13 19 3 240 4 25 1 243 6 156 60 115 9 249 4 199 9 202 1 74 4 75 1 204 30 122 6 166 1 256 7 85 4 328 1 
86 1 215 1 171 1 216 6 291 1 292 6 221 1 88 1 222 6 46 6 47 3 93 4 11 1 299 1 96 21 13 2 18 1 305 2 306 2 190 12 19 2 240 3 25 1 243 4 156 42 115 6 249 3 199 6 74 3 75 1 204 21 122 6 166 1 256 6 85 3 328 1 
160 1 320 1 109 1 111 1 229 1 154 1 127 1 80 1 180 1 63 1 
214 1 313 1 
109 1 111 1 229 1 154 1 145 1 283 1 80 1 266 1 63 1 
193 1 109 1 2 1 111 1 154 1 174 1 44 1 160 1 320 1 285 1 121 1 229 1 253 1 324 2 126 1 127 1 80 1 63 1 
193 1 109 1 2 1 111 1 154 1 174 1 44 1 160 1 320 1 285 1 121 1 229 1 253 1 324 2 126 1 127 1 80 1 63 1 
193 1 109 1 2 1 111 1 154 1 174 1 44 1 160 1 320 1 285 1 121 1 229 1 253 1 324 2 126 1 127 1 80 1 63 1 
172 1 196 1 147 1 
172 1 196 1 147 1 
45 1 235 1 
196 1 45 1 235 1 
289 1 237 1 
214 1 289 1 2 1 261 1 179 1 298 2 229 1 17 1 310 2 63 1 237 1 109 1 110 1 111 1 154 1 278 2 245 1 313 1 248 2 119 2 285 1 121 1 253 1 205 1 324 1 208 1 80 1 
172 1 147 1 
196 1 45 1 235 1 
0 1 216 2 6 1 49 1 47 1 12 1 96 1 269 1 146 1 187 2 232 1 104 1 272 1 20 1 310 2 21 1 240 1 155 1 278 2 156 2 314 1 248 2 197 1 74 1 204 1 323 2 125 2 39 1 210 2 40 1 85 1 
239 1 155 1 279 1 224 1 116 1 48 1 318 1 35 1 323 2 125 2 102 2 187 2 188 1 309 1 40 1 234 1 149 1 108 1 150 1 
312 1 239 1 155 1 279 1 224 1 116 1 318 1 323 1 125 1 102 2 187 1 188 1 309 1 40 1 234 1 108 1 150 1 
42 1 155 1 224 1 49 1 35 1 323 1 125 1 99 1 187 1 82 1 40 1 21 1 169 1 213 1 
239 1 155 1 279 1 224 1 116 1 318 1 35 1 323 1 125 1 102 2 187 1 188 1 309 1 40 1 234 1 149 1 108 1 150 1 
217 1 
193 1 161 1 4 1 293 1 70 1 168 1 59 1 
218 1 2 1 4 1 293 1 176 1 178 1 140 1 303 1 183 1 101 1 148 1 193 2 121 1 164 1 255 1 168 1 129 1 
131 1 218 1 155 2 112 1 49 1 251 1 142 1 162 1 323 1 183 1 164 1 125 1 101 1 187 1 40 1 21 1 169 1 
86 1 2 1 218 2 292 4 4 12 221 1 293 7 222 4 178 1 46 4 93 2 140 10 13 1 303 5 231 8 183 2 18 1 101 2 305 1 19 1 275 1 193 6 25 1 243 2 281 8 115 4 199 4 121 1 164 2 255 1 168 1 84 2 328 1 
218 1 2 1 132 1 4 2 293 2 296 1 138 1 298 1 226 1 97 1 183 1 304 1 101 1 310 1 191 1 194 1 278 1 115 1 248 1 199 2 250 1 119 1 121 1 164 1 38 1 83 1 84 2 130 1 
193 1 218 1 4 1 293 1 161 1 183 1 164 1 101 1 168 1 59 1 
193 5 292 2 4 5 293 5 281 5 222 2 115 2 223 1 46 2 199 2 140 10 303 5 97 1 231 5 84 2 
193 1 2 1 121 1 255 1 168 1 178 1 
218 2 43 1 2 3 42 1 173 1 4 2 293 2 178 2 49 1 268 2 230 1 183 2 99 1 101 1 187 4 21 1 152 2 155 1 317 2 319 1 121 3 323 4 164 2 125 4 255 4 258 1 40 1 212 1 169 2 
0 1 216 2 132 2 131 1 47 1 49 1 298 2 304 1 17 1 187 1 232 1 103 1 310 2 273 1 21 1 240 1 69 1 278 3 155 1 156 1 314 1 248 3 74 1 204 1 119 2 252 1 323 1 124 1 125 1 40 1 85 1 169 1 
193 4 218 1 4 1 293 2 281 2 317 1 140 4 268 1 303 2 231 2 183 1 55 1 164 1 101 1 168 2 
109 1 134 1 229 1 
160 1 289 1 109 1 229 1 308 1 
109 1 134 1 229 1 
109 1 134 1 229 1 
182 1 109 1 229 1 
182 1 109 1 229 1 
182 1 109 1 229 1 
109 1 229 1 
80 1 63 1 
216 4 238 1 240 2 156 8 115 1 199 1 47 2 74 2 204 4 226 1 96 4 122 2 55 1 100 1 256 1 306 1 38 1 190 3 130 1 85 2 
238 1 70 1 156 6 115 1 199 1 204 3 226 1 96 3 122 2 55 1 100 1 38 1 190 2 130 1 
216 2 240 1 292 1 156 4 115 1 222 1 46 1 199 1 47 1 74 1 204 2 96 2 122 1 256 1 190 2 327 1 85 1 
292 2 243 2 156 12 222 2 115 2 46 2 199 2 93 2 204 6 96 6 13 1 122 1 305 1 256 1 190 2 19 1 
216 4 292 2 222 2 46 2 47 2 93 2 226 2 96 11 301 1 13 1 55 1 100 1 305 1 306 2 190 9 238 1 24 1 240 2 156 23 243 2 115 3 199 3 74 2 204 12 122 5 256 4 38 2 130 1 85 2 
204 1 156 1 243 1 
96 1 156 1 93 1 
216 2 240 1 292 1 156 6 222 1 115 1 223 1 46 1 199 1 47 1 74 1 204 3 96 3 122 2 256 1 327 1 190 3 85 1 
86 1 216 2 292 4 221 1 88 1 222 4 46 4 47 1 93 2 96 11 13 1 18 1 305 1 190 4 19 1 240 1 25 1 156 22 243 2 115 4 199 4 74 1 204 11 122 2 256 2 85 1 328 1 
156 6 115 1 199 1 204 3 226 1 96 3 122 1 256 1 38 1 190 2 130 1 
216 2 238 1 240 1 156 3 47 1 74 1 204 2 226 1 96 1 301 1 122 1 100 1 256 1 306 1 38 1 190 2 85 1 
216 2 240 1 156 10 88 1 115 2 199 2 47 1 250 1 74 1 204 5 226 2 96 5 122 3 256 2 38 2 190 5 85 1 130 1 
216 2 240 1 292 1 156 2 88 1 199 1 47 1 74 1 96 2 256 1 190 1 85 1 
216 2 240 1 292 1 156 4 115 1 222 1 88 1 46 1 199 1 47 1 74 1 204 2 96 2 122 1 256 1 190 2 85 1 
216 6 240 3 156 3 88 1 47 3 202 1 74 3 204 2 226 1 301 1 96 1 122 1 306 1 256 1 38 1 190 2 85 3 
216 8 88 1 47 4 93 1 226 2 96 7 301 1 100 1 306 1 190 6 19 1 238 1 240 4 243 1 156 15 115 2 28 1 199 2 250 1 202 1 74 4 204 8 122 3 256 3 38 2 327 1 130 1 85 4 
86 1 216 4 292 2 221 1 88 1 222 1 46 2 47 2 93 1 96 7 18 1 306 1 190 2 19 1 240 2 25 1 156 11 243 1 115 1 199 2 74 2 204 4 122 1 256 1 85 2 328 1 
86 1 216 4 292 1 88 1 46 1 47 2 93 1 226 1 96 6 55 1 100 1 305 1 190 3 19 1 238 1 240 2 156 11 243 2 115 1 199 2 74 2 204 5 122 2 256 1 38 1 327 1 130 1 85 2 
86 1 216 6 292 4 221 1 88 1 222 4 46 4 47 3 93 2 96 11 13 1 18 1 305 1 306 1 190 4 19 1 240 3 25 1 156 23 243 2 115 4 199 4 74 3 204 12 122 2 256 2 327 1 85 3 328 1 
86 1 216 6 292 4 221 1 88 1 222 3 46 4 47 3 93 2 96 12 13 1 18 1 305 1 306 1 190 4 19 1 240 3 25 1 156 21 243 2 115 3 199 4 74 3 204 9 122 2 256 2 327 1 85 3 328 1 
86 1 216 4 292 2 221 1 88 1 222 1 46 2 47 2 93 1 96 7 18 1 306 1 190 2 19 1 240 2 25 1 156 11 243 1 115 1 199 2 74 2 204 4 122 1 256 1 85 2 328 1 
86 1 216 2 292 4 221 1 88 1 222 4 46 4 47 1 93 2 96 11 13 1 18 1 305 1 190 4 19 1 240 1 25 1 156 22 243 2 115 4 199 4 74 1 204 11 122 2 256 2 85 1 328 1 
86 1 216 8 292 4 221 1 88 1 222 3 46 4 47 4 93 2 96 12 13 1 18 1 305 1 306 2 190 4 19 1 240 4 25 1 156 22 243 2 115 3 199 4 74 4 204 10 122 2 256 2 327 1 85 4 328 1 
86 1 216 4 292 1 88 1 222 1 46 1 47 2 93 1 96 3 305 1 190 1 19 1 240 2 156 7 243 2 115 1 199 1 202 1 74 2 204 4 122 1 85 2 
238 1 156 7 115 1 199 1 204 4 226 3 96 3 122 3 100 2 256 3 38 3 190 6 130 1 
86 1 216 4 292 1 88 1 222 1 46 1 47 2 93 1 96 3 305 1 190 1 19 1 240 2 156 7 243 2 115 1 199 1 202 1 74 2 204 4 122 1 85 2 
278 1 5 1 17 1 248 1 58 1 310 1 225 1 
192 1 5 1 278 1 246 1 248 1 225 1 139 1 227 1 34 1 17 1 58 1 310 1 
42 1 323 1 155 1 99 1 70 1 125 1 187 1 40 1 49 1 21 1 169 1 
131 1 155 1 278 2 248 2 9 1 49 1 298 1 119 1 252 1 323 1 125 1 17 1 187 1 40 1 273 1 310 1 21 1 169 1 
131 2 9 1 49 3 298 1 15 1 17 1 56 1 187 1 310 2 273 1 21 2 311 1 152 1 278 2 155 1 248 2 119 2 252 1 323 1 125 1 207 1 83 1 40 1 
131 2 262 1 9 1 49 3 298 1 15 1 17 1 56 1 187 2 310 2 273 1 21 2 311 1 64 1 152 1 278 2 155 1 248 2 119 2 323 2 125 2 207 1 83 1 40 1 
2 2 131 1 262 1 136 1 49 4 228 1 15 1 187 3 21 1 152 1 193 1 242 1 155 1 251 1 76 1 121 2 323 3 125 3 255 1 207 1 168 1 40 1 169 1 
2 2 132 1 296 1 49 2 298 1 228 1 304 1 187 1 310 1 191 1 152 1 193 1 194 1 278 1 248 1 251 1 119 1 76 1 121 2 36 1 323 1 125 1 255 1 168 1 83 1 
323 1 155 1 125 1 187 1 294 1 40 1 
131 1 155 3 280 1 71 1 294 1 48 1 49 3 265 1 162 1 77 1 323 7 146 1 125 6 187 7 188 1 210 1 106 1 40 2 274 1 169 2 21 2 
0 2 9 1 96 3 100 1 17 2 187 1 103 1 272 1 190 2 273 1 21 1 278 2 115 1 199 1 117 1 119 1 204 3 122 2 125 1 38 1 39 1 40 1 130 1 216 4 131 1 48 1 47 2 49 1 298 1 226 1 55 1 232 2 307 1 233 1 310 1 238 1 240 2 241 1 69 1 155 1 156 6 248 2 74 2 252 1 323 1 81 1 85 2 
218 2 43 1 2 3 4 1 293 1 7 1 89 1 178 1 49 2 228 1 183 2 101 2 187 1 59 1 193 1 110 1 251 1 118 1 161 1 76 1 121 3 323 1 36 1 125 1 164 2 255 2 168 1 169 1 
131 1 112 1 155 2 294 1 49 1 267 1 228 1 162 1 323 1 125 1 187 1 40 1 21 1 
42 1 155 1 262 1 48 1 49 1 323 4 125 4 99 1 187 4 79 1 40 1 169 1 21 1 
152 1 66 1 131 1 135 1 26 1 155 2 71 1 49 1 265 1 323 2 125 2 187 2 40 1 21 1 
239 1 323 1 155 1 125 1 102 1 187 1 116 1 40 1 318 1 169 1 
155 1 48 1 49 1 323 2 146 1 125 2 187 2 188 1 40 1 20 1 21 1 
152 1 42 1 155 2 280 1 48 1 49 3 323 5 146 1 99 1 125 4 187 5 79 1 40 2 106 1 169 1 21 2 
152 1 42 1 220 1 155 2 48 1 49 3 323 5 146 1 99 1 125 4 187 5 79 1 40 2 106 1 169 1 21 2 
64 1 131 1 155 1 278 2 248 2 9 1 49 1 298 1 119 1 323 1 125 1 17 1 187 1 40 1 273 1 310 1 21 1 169 1 
152 1 131 1 155 2 71 1 49 1 265 1 162 1 77 1 323 1 125 1 187 1 40 1 21 1 
219 1 290 1 278 1 248 1 197 1 12 1 269 1 325 1 310 1 
290 1 72 1 282 1 
219 1 14 1 290 1 17 1 325 1 
311 1 193 1 110 1 2 2 219 2 290 1 72 1 282 1 198 1 33 1 76 1 14 2 121 2 53 1 17 1 56 1 325 2 168 1 83 1 

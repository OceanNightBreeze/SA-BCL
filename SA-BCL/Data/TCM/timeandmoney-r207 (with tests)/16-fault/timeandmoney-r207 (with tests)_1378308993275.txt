#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (28,60,187,195,305) (40,80) (40,80) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (28,60,187,195,305) (40,80) (40,80) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (28,60,187,195,305) (40,80) (40,80) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (28,60,187,195,305) (40,80) (40,80) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (130,202) (130,202) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 46 52 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 76 322 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 189 293 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 160 23 33 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 160 23 33 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 160 23 105 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 189 293 172 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 189 293 172 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (130,202) (130,202) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (130,202) (130,202) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (130,202) (130,202) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 326 64 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 38 (91,112) 139 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 255 295 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (15,63) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (44,222) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (149,213) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 268 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 237 1 101 1 216 1 12 1 40 1 194 1 195 1 111 1 321 1 292 1 18 1 221 1 80 1 
69 1 237 1 101 1 216 1 12 1 40 1 194 1 195 1 111 1 321 1 292 1 18 1 221 1 80 1 
69 1 237 1 101 1 216 1 12 1 40 1 194 1 195 1 111 1 321 1 292 1 18 1 221 1 80 1 
69 1 237 1 101 1 216 1 12 1 40 1 194 1 195 1 111 1 321 1 292 1 18 1 221 1 80 1 
147 1 101 1 216 4 318 3 87 2 111 4 321 1 154 1 221 1 94 1 201 3 136 1 12 1 290 1 265 2 185 1 164 1 292 1 
101 1 216 2 194 1 195 1 111 2 321 1 221 1 8 1 201 1 136 1 71 1 290 1 185 1 292 1 335 1 18 1 
101 2 147 1 216 3 318 1 194 1 111 3 321 1 221 2 201 2 136 1 265 1 185 1 166 1 
216 9 87 2 303 1 221 2 94 1 136 1 12 1 265 4 99 1 185 1 147 3 101 2 103 1 318 7 193 1 194 1 111 9 321 1 154 1 201 5 290 1 164 1 292 1 166 1 
216 9 87 2 303 1 221 2 94 1 136 1 12 1 265 4 99 1 185 1 147 3 101 2 103 1 318 7 193 1 194 1 111 9 321 1 154 1 201 5 290 1 164 1 292 1 166 1 
268 1 
2 1 301 1 258 1 133 1 235 1 260 1 141 1 334 1 314 1 188 1 37 1 
2 1 258 1 133 1 235 1 260 1 72 1 141 1 334 1 188 2 246 1 191 1 37 1 
98 1 188 1 
98 1 188 1 
188 1 
98 1 188 1 
98 1 188 1 
179 1 215 1 21 1 98 1 90 1 188 2 
268 1 17 1 
65 1 280 1 260 1 72 1 141 2 334 2 246 1 17 1 272 1 37 2 191 1 
250 1 26 1 242 1 
213 1 228 1 123 2 86 1 108 1 319 2 302 1 7 1 156 2 10 1 183 1 287 1 74 1 141 1 291 1 17 1 167 1 37 1 146 1 
230 1 65 1 260 1 72 3 141 3 334 3 246 1 17 1 191 3 37 3 
260 1 72 1 141 1 110 1 334 1 37 1 191 1 
280 1 260 1 72 1 141 1 334 1 246 1 191 1 37 1 272 1 
230 1 232 1 2 1 258 1 235 1 133 1 280 1 135 1 260 1 72 2 141 2 334 2 188 1 16 1 246 1 191 2 37 2 
230 1 286 1 72 1 141 2 301 1 334 2 17 1 37 2 191 1 
230 1 2 1 258 1 133 1 235 1 135 1 260 1 72 1 141 1 334 1 188 1 16 1 245 1 191 1 37 1 
250 1 230 1 72 2 141 2 334 2 242 1 246 1 37 2 191 2 280 1 
213 1 123 1 228 1 319 1 108 1 86 1 302 1 156 1 10 1 74 1 141 1 291 1 17 1 167 1 37 1 
123 1 319 1 85 1 65 1 156 1 260 1 167 1 17 1 
82 1 250 2 124 1 304 1 95 1 11 1 96 1 50 2 263 1 262 1 140 1 145 1 61 1 106 1 26 2 153 1 198 1 323 1 333 4 332 1 242 2 207 1 243 2 79 2 
260 1 72 1 141 1 334 1 56 1 235 1 37 1 191 1 
213 1 250 1 228 1 123 1 230 1 86 1 108 1 319 1 302 1 156 1 10 1 72 1 74 1 141 2 291 1 334 1 16 1 167 1 191 1 37 2 
230 1 65 1 280 1 260 1 72 2 141 2 334 2 246 1 17 1 191 2 37 2 
260 1 72 2 141 2 110 1 334 2 56 1 37 2 191 2 
42 1 132 1 
42 1 132 1 
308 1 162 1 
308 1 162 1 
308 1 162 1 
42 1 132 1 199 1 
42 1 132 1 199 1 
42 1 132 1 168 1 
308 1 42 2 162 1 55 1 278 1 132 2 
42 1 132 1 199 1 
102 1 42 1 132 1 
102 1 42 1 132 1 
102 1 42 1 132 1 
42 2 300 1 254 2 127 2 130 1 132 2 92 2 202 1 283 1 309 1 188 2 208 2 169 2 
42 1 254 1 127 1 132 1 326 1 92 1 309 1 72 1 141 1 334 1 188 1 208 1 37 1 169 1 191 1 
12 1 290 1 292 1 
290 1 292 1 8 1 
12 2 240 1 311 1 292 3 8 1 155 1 
12 1 240 1 253 1 292 2 8 1 155 1 
12 1 240 1 292 2 8 1 155 2 
98 1 152 1 188 1 
182 1 150 1 98 2 217 1 188 2 
215 1 21 1 90 1 46 1 179 1 328 1 97 1 142 1 98 1 188 2 336 1 
215 1 21 1 90 1 46 1 179 1 328 1 97 1 142 1 52 1 336 1 188 1 
268 1 200 1 
86 1 35 1 
225 1 
86 1 74 1 
32 1 86 3 74 1 302 1 186 1 200 2 
86 1 74 1 302 1 
86 1 176 1 
104 2 1 1 275 1 153 1 29 1 306 1 11 1 157 1 331 1 140 2 332 3 77 1 333 7 205 1 243 3 79 4 59 1 
104 2 1 1 275 1 153 1 29 1 306 1 11 1 157 1 331 1 140 2 332 3 77 1 333 7 205 1 243 3 79 4 59 1 
104 2 1 1 88 1 275 1 153 1 29 1 306 1 11 1 157 1 331 1 140 2 332 3 77 1 333 7 205 1 243 3 79 4 59 1 
82 1 124 3 171 1 1 4 255 1 257 1 304 1 177 1 11 3 181 1 96 3 50 2 140 3 54 3 100 1 104 1 106 1 317 4 274 1 153 3 198 1 29 1 157 1 331 1 77 1 333 22 332 7 243 11 79 11 212 3 
82 2 1 1 257 1 304 2 306 1 11 1 48 1 50 4 140 3 104 2 106 2 109 1 275 1 153 1 198 2 29 1 157 1 331 1 333 9 332 4 77 1 205 1 243 4 79 5 
122 1 123 1 216 2 221 1 8 1 136 1 12 1 311 1 266 1 185 1 19 1 101 1 148 1 228 1 107 1 318 1 62 1 319 1 25 1 194 1 67 1 111 2 321 1 201 1 156 1 238 1 290 1 291 1 117 1 292 2 
122 1 123 1 216 3 126 1 221 1 8 1 136 1 12 1 311 1 266 1 185 1 270 1 19 1 101 1 148 1 228 1 107 1 318 2 62 1 319 1 194 1 67 1 111 3 201 1 156 1 238 1 203 1 290 1 291 1 292 2 
122 1 123 1 216 2 8 1 136 1 12 1 311 1 185 1 270 1 148 1 228 1 107 1 318 2 62 1 319 1 194 1 67 1 111 2 201 1 156 1 238 1 203 1 290 1 291 1 292 2 
101 1 122 2 228 1 148 2 123 1 216 1 86 1 319 1 24 1 151 1 194 2 126 1 320 1 111 1 67 2 256 1 221 1 156 1 134 1 74 1 291 1 167 1 211 1 
122 1 123 1 216 1 221 1 8 1 12 1 311 1 266 1 270 1 19 1 101 1 148 1 228 1 107 1 62 1 319 1 194 1 67 1 111 1 321 1 156 1 238 1 290 1 291 1 117 1 292 2 
312 1 
123 1 215 1 21 1 319 1 90 1 322 1 156 1 328 1 31 1 142 1 76 1 188 1 167 1 
83 1 231 1 2 1 301 1 277 1 258 1 235 1 133 1 260 1 141 1 334 1 188 2 314 1 189 1 121 1 247 1 37 1 
83 1 231 1 2 1 301 1 277 1 258 1 235 1 133 1 260 1 284 1 141 1 334 1 188 2 314 1 121 1 247 1 37 1 
83 1 231 1 2 1 301 1 277 1 258 1 235 1 133 1 260 1 141 1 334 1 293 1 188 2 314 1 189 1 121 1 247 1 37 1 
188 1 
215 1 83 1 251 1 125 1 2 1 301 1 90 1 258 1 133 1 260 1 141 1 184 1 314 1 188 2 20 1 231 1 21 1 277 1 235 1 328 1 31 1 160 1 334 1 119 1 247 1 121 1 37 1 
83 1 215 1 251 1 125 1 2 1 301 1 90 1 258 1 133 1 260 1 141 1 184 1 314 1 188 2 20 1 231 1 21 1 23 1 277 1 235 1 328 1 282 1 31 1 33 1 160 1 334 1 119 1 247 1 121 1 37 1 
83 1 215 1 251 1 125 1 2 1 301 1 90 1 258 1 133 1 260 1 141 1 184 1 314 1 188 2 20 1 231 1 21 1 23 1 277 1 235 1 328 1 282 1 31 1 33 1 160 1 334 1 119 1 247 1 121 1 37 1 
0 1 83 1 296 1 215 1 251 1 2 1 301 1 90 1 258 1 133 1 49 1 260 1 141 1 184 1 314 1 188 2 105 1 231 1 21 1 23 1 277 1 235 1 328 1 31 1 160 1 334 1 119 1 247 1 121 1 37 1 
83 1 231 1 172 1 2 1 301 1 277 1 258 1 235 1 133 1 260 1 141 1 334 1 293 1 188 2 314 1 189 1 121 1 247 1 37 1 
83 1 231 1 172 1 2 1 301 1 277 1 258 1 235 1 133 1 260 1 141 1 334 1 293 1 188 2 314 1 189 1 121 1 247 1 37 1 
0 1 215 1 83 1 251 1 2 1 301 1 90 1 258 1 133 1 49 1 260 1 141 1 184 1 314 1 188 2 231 1 21 1 277 1 235 1 328 1 31 1 160 1 334 1 119 1 247 1 121 1 37 1 
82 1 106 1 50 2 263 1 205 1 198 1 268 1 304 1 145 1 306 1 95 1 
82 2 250 11 124 2 1 1 4 1 255 1 304 2 11 1 96 1 50 4 263 2 140 1 54 3 100 1 17 1 145 1 229 1 317 3 106 2 66 1 26 11 153 2 198 2 325 1 327 1 330 1 332 2 333 14 118 1 242 4 243 6 79 8 212 2 
213 1 123 1 82 1 297 1 86 1 302 1 304 1 10 1 50 2 263 1 141 2 227 1 16 1 17 1 145 1 191 1 58 1 228 1 229 1 230 1 106 1 108 1 319 1 66 1 198 1 156 1 287 1 72 1 74 1 291 1 334 1 333 2 242 1 118 1 243 1 167 1 37 2 79 1 
81 1 82 3 250 7 86 2 1 4 91 2 10 2 11 3 96 2 263 3 13 1 16 1 270 1 17 2 191 1 104 1 106 3 108 2 275 1 26 7 198 3 29 1 281 2 285 2 291 2 118 1 205 1 209 2 37 3 212 2 213 2 123 3 124 2 302 2 45 1 304 3 306 1 50 6 140 4 141 3 145 3 316 2 229 1 228 2 230 1 319 3 66 1 153 3 156 3 72 1 74 2 77 1 334 1 333 20 332 8 242 7 243 10 167 1 79 10 
123 7 82 2 86 3 41 1 173 1 175 1 256 1 304 2 7 2 47 1 95 1 50 4 263 2 141 1 270 1 271 1 145 2 191 1 228 2 229 1 230 1 106 2 319 8 25 1 198 2 27 1 156 8 72 1 74 2 75 1 334 1 291 2 333 2 118 1 243 1 167 2 37 1 79 1 211 1 
250 1 82 1 124 1 304 1 11 1 96 1 50 2 263 1 140 1 141 1 145 1 191 1 106 1 66 1 26 1 153 1 198 1 324 1 280 1 72 1 332 1 334 1 333 3 242 1 243 2 246 1 37 1 212 1 79 1 
250 1 82 1 106 1 124 1 1 1 26 1 153 1 198 1 304 1 323 1 95 1 50 2 263 1 332 1 333 2 242 1 145 1 79 2 
250 1 82 1 106 1 26 1 198 1 304 1 95 1 11 1 96 1 50 2 263 1 140 1 332 1 333 2 242 1 207 1 243 2 145 1 
82 1 250 2 124 1 1 1 304 1 95 1 11 1 96 1 50 2 263 1 140 1 145 1 106 1 26 2 153 1 198 1 333 4 332 2 242 2 243 2 79 2 212 1 
250 1 82 1 106 1 124 1 1 1 26 1 153 1 175 1 198 1 304 1 323 1 50 2 263 1 332 1 333 2 242 1 145 1 79 2 
250 1 82 1 106 1 26 1 175 1 198 1 304 1 11 1 96 1 50 2 263 1 140 1 332 1 333 2 242 1 207 1 243 2 145 1 
82 1 250 2 124 1 1 1 175 1 304 1 11 1 96 1 50 2 263 1 140 1 145 1 106 1 26 2 153 1 198 1 333 4 332 2 242 2 243 2 79 2 212 1 
250 2 82 1 106 1 124 1 1 1 26 2 153 1 198 1 304 1 11 1 96 1 50 2 263 1 140 1 332 2 333 4 242 2 243 2 145 1 212 1 79 2 
213 1 123 1 82 1 86 1 302 1 304 1 10 1 50 2 263 1 141 1 17 1 145 1 228 1 229 1 106 1 108 1 319 1 198 1 156 1 281 1 74 1 333 2 291 1 118 1 243 1 167 1 79 1 37 1 
229 1 123 1 82 1 106 1 319 1 85 1 65 1 198 1 304 1 156 1 260 1 50 2 263 1 333 1 204 1 243 1 17 1 167 1 145 1 
82 1 250 2 124 1 1 1 304 1 11 1 96 1 50 2 263 1 140 1 145 1 106 1 66 1 26 2 153 1 198 1 333 4 332 2 242 2 243 2 79 2 212 1 
213 1 250 2 123 1 82 1 124 1 1 1 86 1 302 1 304 1 10 1 11 1 96 1 50 2 263 1 140 1 141 1 145 1 228 1 106 1 108 1 319 1 25 1 26 2 153 1 198 1 156 1 281 1 74 1 332 2 333 4 291 1 242 2 243 2 209 1 79 2 37 1 212 1 
82 1 250 1 124 1 1 1 304 1 11 1 96 1 50 2 263 1 264 1 141 1 145 1 191 1 106 1 66 1 26 1 153 1 198 1 280 1 72 1 332 1 334 1 333 3 242 1 243 1 246 1 37 1 212 1 79 2 
82 2 84 1 170 1 124 3 1 3 255 1 304 2 307 1 11 3 223 2 261 1 96 3 50 4 140 3 54 1 100 1 317 2 106 2 22 1 109 1 153 3 197 1 198 2 329 1 333 19 332 6 36 2 243 10 79 9 212 3 
82 3 84 1 124 3 1 2 252 1 255 2 257 2 304 3 11 2 307 1 223 4 261 1 96 2 50 6 140 2 54 2 57 1 106 3 317 2 22 2 109 1 276 1 153 3 197 2 198 3 332 4 333 26 34 1 36 1 206 1 243 12 79 14 295 1 212 3 
82 3 170 1 84 1 1 4 252 1 255 3 257 1 11 5 96 4 261 1 100 1 104 1 106 3 22 2 109 1 275 1 276 1 198 3 197 1 29 1 289 1 34 1 205 1 206 1 36 1 212 4 295 1 124 4 304 3 306 1 307 1 223 4 50 6 140 4 54 3 57 1 317 4 153 5 332 8 333 41 77 1 243 21 79 20 
82 4 84 1 170 1 124 4 1 3 252 1 255 3 257 2 304 4 306 1 307 1 11 4 223 4 261 1 96 3 50 8 140 4 54 3 100 1 57 1 104 1 317 4 106 4 22 2 275 1 109 1 276 1 153 5 197 1 198 4 29 1 289 1 77 1 333 38 332 7 205 1 34 1 36 1 206 1 243 18 295 1 79 20 212 4 
82 2 84 1 124 7 1 7 252 1 255 2 257 1 304 2 306 1 307 1 11 8 223 4 261 1 96 7 50 4 140 7 54 4 100 2 57 1 104 1 317 4 106 2 22 1 275 1 109 1 276 1 153 8 197 1 198 2 29 1 330 2 77 1 333 52 332 14 205 1 34 1 36 1 206 1 243 25 295 1 79 27 212 7 
42 1 53 1 55 1 127 1 254 1 234 1 208 1 132 1 30 1 169 1 
43 1 168 1 
192 1 42 1 313 1 226 1 127 1 254 1 208 1 132 1 169 1 
42 1 300 1 254 1 127 1 130 1 132 1 92 2 202 1 283 1 309 1 188 1 208 1 169 1 
42 1 300 1 254 1 127 1 130 1 132 1 92 2 202 1 283 1 309 1 188 1 208 1 169 1 
42 1 300 1 254 1 127 1 130 1 132 1 92 2 202 1 283 1 309 1 188 1 208 1 169 1 
278 1 236 1 199 1 
278 1 236 1 199 1 
102 1 144 1 278 1 
102 1 144 1 
218 1 78 1 
64 1 42 1 300 1 254 1 127 1 132 1 326 1 92 1 283 1 98 1 188 1 208 1 169 1 
236 1 199 1 
102 1 144 1 
82 1 123 2 86 1 5 1 304 1 7 2 47 1 9 1 50 2 263 1 141 2 145 1 228 1 229 1 106 1 273 1 319 2 66 1 198 1 27 1 156 2 158 1 74 1 291 1 334 2 333 2 118 1 243 1 210 1 37 2 79 1 
228 1 123 2 148 1 107 1 62 1 319 2 25 1 196 1 8 1 156 2 159 1 12 1 311 1 290 1 241 1 266 1 291 1 292 2 270 1 
123 1 148 1 228 1 107 1 62 1 319 1 196 1 8 1 156 1 12 1 239 1 311 1 290 1 266 1 291 1 292 2 270 1 
228 1 123 1 148 1 86 1 319 1 24 1 3 1 256 1 156 1 159 1 74 1 291 1 167 1 211 1 
123 1 148 1 228 1 107 1 62 1 319 1 196 1 8 1 156 1 159 1 12 1 311 1 290 1 241 1 266 1 291 1 292 2 270 1 
220 1 
63 1 15 1 268 1 
20 1 328 1 215 1 31 1 251 1 21 1 125 1 90 1 
38 1 228 1 123 1 215 1 21 1 86 2 319 1 112 1 90 1 302 1 156 1 178 1 328 1 31 1 74 1 139 1 142 1 291 2 186 1 35 1 167 1 
328 1 317 1 215 1 31 1 251 1 21 1 54 1 90 1 255 1 295 1 
215 1 251 2 21 1 275 1 153 2 90 1 29 1 11 1 328 1 282 1 31 1 288 1 77 1 163 2 188 1 249 1 
215 1 31 1 251 1 21 1 90 1 15 1 
11 1 328 1 96 1 251 1 124 1 153 1 212 1 
123 1 319 1 167 1 156 1 
328 1 215 1 31 1 251 1 21 1 142 1 90 1 279 1 
127 1 190 1 169 1 
127 1 190 1 169 1 
218 1 127 1 219 1 234 1 169 1 
127 1 190 1 169 1 
39 1 127 1 169 1 
39 1 127 1 169 1 
39 1 127 1 169 1 
127 1 169 1 
42 1 132 1 
104 1 82 2 106 2 1 1 275 1 153 1 198 2 257 1 304 2 29 1 306 1 11 1 50 4 140 2 333 8 332 3 77 1 205 1 243 4 79 4 
205 1 268 1 306 1 
82 1 106 1 124 1 1 1 153 1 198 1 304 1 11 1 137 1 96 1 50 2 140 1 332 2 333 4 243 2 212 1 79 2 
317 2 124 1 1 1 153 1 255 1 11 1 96 1 140 1 333 7 332 2 54 1 243 4 100 1 79 3 212 1 
214 1 82 2 124 2 1 4 257 2 304 2 306 1 11 3 96 2 50 4 140 5 54 2 100 1 104 1 317 2 106 2 275 1 153 3 198 2 29 2 325 1 330 1 77 2 332 9 333 23 205 1 243 12 212 2 79 11 
317 1 333 1 243 1 
333 1 54 1 79 1 
82 1 106 1 124 1 1 1 153 1 198 1 304 1 11 1 137 1 96 1 50 2 285 1 140 2 333 6 332 3 243 3 212 1 79 3 
82 1 124 2 1 1 252 1 255 1 304 1 11 2 96 2 50 2 140 1 54 1 57 1 317 1 106 1 109 1 153 2 276 1 198 1 333 12 332 2 34 1 243 6 295 1 79 6 212 2 
1 1 275 1 153 1 29 1 11 1 140 1 333 6 77 1 332 2 243 3 79 3 
214 1 82 1 106 1 1 1 198 1 257 1 29 1 304 1 306 1 50 2 140 1 332 2 77 1 333 3 205 1 243 2 79 1 
82 1 106 1 1 2 109 1 275 1 153 2 198 1 304 1 29 2 11 2 50 2 140 3 77 2 332 5 333 10 243 5 249 1 79 5 
82 1 106 1 124 1 1 1 109 1 153 1 198 1 304 1 50 2 333 2 332 1 79 2 
82 1 106 1 124 1 1 1 109 1 153 1 198 1 304 1 11 1 96 1 50 2 140 1 332 2 333 4 243 2 212 1 79 2 
214 1 82 3 170 1 106 3 1 1 109 1 198 3 257 1 304 3 29 1 50 6 140 1 333 3 77 1 332 2 243 2 79 1 
214 1 82 5 170 1 124 3 171 1 1 5 255 1 257 2 304 5 306 1 177 1 11 5 137 1 96 3 50 10 140 7 54 3 100 1 104 1 317 4 106 5 274 1 275 2 109 1 153 5 198 5 29 3 77 3 333 34 332 12 205 1 243 18 79 16 212 3 
82 1 255 1 304 1 306 1 11 1 50 2 140 2 54 1 104 1 317 1 106 1 109 1 275 1 153 1 198 1 29 1 333 8 77 1 332 2 205 1 243 4 295 1 79 4 
82 2 124 1 1 1 255 1 304 2 306 1 11 1 137 1 50 4 140 2 54 1 100 1 104 1 317 2 106 2 275 1 109 1 153 2 198 2 29 1 77 1 333 11 332 3 205 1 243 5 295 1 79 6 212 1 
82 3 124 2 1 1 252 1 255 1 257 1 304 3 306 1 11 3 137 1 96 2 50 6 140 3 54 1 57 1 104 1 317 1 106 3 275 1 109 1 153 3 276 1 198 3 29 1 77 1 333 19 332 4 205 1 34 1 243 10 295 1 79 9 212 2 
82 3 124 2 1 2 252 1 255 1 257 1 304 3 306 1 11 2 137 1 96 1 50 6 140 3 54 1 57 1 104 1 317 1 106 3 275 1 109 1 153 3 276 1 198 3 29 1 77 1 333 17 332 5 205 1 34 1 243 7 295 1 79 10 212 2 
82 1 255 1 304 1 306 1 11 1 50 2 140 2 54 1 104 1 317 1 106 1 109 1 275 1 153 1 198 1 29 1 333 8 77 1 332 2 205 1 243 4 295 1 79 4 
82 1 124 2 1 1 252 1 255 1 304 1 11 2 96 2 50 2 140 1 54 1 57 1 317 1 106 1 109 1 153 2 276 1 198 1 333 12 332 2 34 1 243 6 295 1 79 6 212 2 
82 4 124 2 1 2 252 1 255 1 257 2 304 4 306 1 11 2 137 1 96 1 50 8 140 3 54 1 57 1 104 1 317 1 106 4 275 1 109 1 276 1 153 3 198 4 29 1 77 1 333 18 332 5 205 1 34 1 243 8 295 1 79 10 212 2 
82 4 170 1 124 3 1 3 252 1 255 1 257 2 304 4 11 2 96 2 50 8 140 3 54 1 57 1 317 1 106 4 109 1 276 1 153 3 198 4 333 16 332 6 34 1 243 7 295 1 79 9 212 3 
1 3 275 1 153 1 29 3 306 1 11 1 140 3 333 7 77 3 332 6 205 2 243 4 79 3 
82 4 170 1 124 2 1 1 252 1 255 1 257 2 304 4 306 1 11 2 96 1 50 8 140 3 54 1 57 1 104 1 317 1 106 4 275 1 109 1 276 1 153 3 198 4 29 1 77 1 333 18 332 4 205 1 34 1 243 8 295 1 79 10 212 2 
286 1 141 1 116 1 334 1 301 1 17 1 37 1 
301 1 129 1 93 1 70 1 286 1 73 1 141 1 116 1 334 1 244 1 17 1 37 1 
123 1 319 1 256 1 268 1 167 1 156 1 
213 1 123 1 228 1 230 1 86 1 108 1 319 1 302 1 156 1 72 1 74 1 141 2 291 1 334 1 17 1 167 1 191 1 37 2 
213 1 123 1 86 3 128 1 302 2 176 1 133 1 260 1 141 2 17 1 191 1 228 1 230 1 319 1 108 1 235 1 156 1 72 2 74 2 334 2 291 1 248 1 37 2 
123 2 86 3 128 1 302 2 176 1 133 1 222 1 260 1 141 2 17 1 191 1 228 1 230 1 319 2 108 1 235 1 156 2 72 2 74 2 334 2 291 1 165 1 248 1 37 2 
123 1 86 1 319 1 44 1 128 1 188 1 35 1 156 1 
123 1 86 1 149 1 319 1 128 1 188 1 35 1 156 1 
228 1 123 1 319 1 41 1 291 1 156 1 
123 6 228 2 319 7 86 3 41 1 173 1 25 1 302 1 131 1 7 1 47 1 156 7 51 1 74 2 75 1 291 3 143 1 186 1 270 1 271 1 167 2 
213 1 250 1 82 2 123 1 86 1 302 1 91 1 304 2 306 1 9 1 10 1 11 1 50 4 263 2 140 2 141 2 17 2 145 2 191 1 104 1 228 1 230 1 106 2 108 1 319 1 66 1 25 1 26 1 275 1 153 1 198 2 29 1 156 1 281 1 72 1 74 1 333 6 332 2 77 1 291 1 334 1 242 1 205 1 243 3 209 1 79 3 37 2 
98 1 188 1 
123 2 228 1 319 2 86 2 25 1 41 1 302 1 200 1 156 2 178 1 74 1 291 2 186 1 
123 4 228 1 319 4 86 1 25 1 256 1 156 4 310 1 74 1 291 1 165 1 167 1 211 1 
123 2 228 1 319 2 298 1 86 1 128 1 302 1 68 1 156 2 51 1 13 1 74 1 291 2 143 1 
228 1 123 1 107 1 319 1 290 1 291 1 292 1 8 1 167 1 156 1 
123 2 228 1 273 1 319 2 86 1 25 1 47 1 156 2 74 1 291 1 270 1 
123 4 228 2 319 5 86 3 25 1 173 1 128 1 256 1 47 1 156 5 310 1 74 2 291 2 167 1 271 1 211 1 
123 4 228 2 319 5 86 3 25 1 174 1 173 1 128 1 256 1 47 1 156 5 310 1 74 2 291 2 167 1 211 1 
123 1 228 1 230 1 86 1 108 1 319 1 302 1 156 1 222 1 72 1 74 1 141 2 291 1 334 1 17 1 167 1 191 1 37 2 
123 1 228 1 319 1 86 1 128 1 302 1 131 1 156 1 51 1 74 1 291 2 143 1 186 1 
5 1 158 1 141 1 115 1 267 1 334 1 315 1 210 1 37 1 
259 1 114 1 267 1 
138 1 115 1 267 1 315 1 17 1 
2 1 233 1 258 1 235 1 133 1 135 1 259 1 114 1 260 1 138 2 98 1 115 2 267 1 188 2 315 2 17 1 
136 1 185 1 268 1 
101 1 136 1 216 1 111 1 185 1 221 1 201 1 
122 1 216 1 194 1 
101 1 136 1 60 1 216 3 195 2 111 3 185 1 321 1 187 1 28 1 221 1 201 1 
101 1 136 1 216 2 318 1 87 1 111 2 185 1 221 1 201 1 
101 1 216 1 12 1 290 1 265 1 111 1 321 1 292 1 221 1 201 1 94 1 
101 1 216 1 111 1 185 1 321 1 221 1 201 1 
101 1 136 1 216 1 111 1 185 2 321 1 221 1 
101 2 216 2 89 1 111 2 321 1 221 2 201 1 224 1 185 1 337 1 
101 1 147 1 216 3 193 1 318 2 111 3 321 1 303 1 221 1 201 2 136 1 265 1 185 1 
101 1 216 2 318 1 111 2 321 1 8 1 221 1 201 1 136 1 12 1 161 1 311 1 290 1 185 1 292 2 
101 2 147 1 216 4 318 2 87 1 111 4 321 1 221 2 201 2 136 1 265 1 185 1 164 1 
101 1 136 1 216 1 111 1 185 1 321 1 221 1 201 1 
101 1 147 1 60 1 216 4 318 2 195 1 111 4 28 1 221 1 201 3 136 2 265 1 14 1 185 2 
101 1 216 2 318 1 111 2 321 1 221 1 201 1 113 1 180 1 136 1 99 1 185 1 
101 1 60 1 216 3 195 2 111 3 321 1 28 2 305 1 221 1 201 1 136 1 185 1 
294 2 6 1 269 1 201 2 
101 1 216 1 111 1 321 1 120 1 221 1 
101 1 136 1 216 2 318 1 193 1 111 2 185 1 321 1 221 1 201 1 
299 1 
101 1 136 1 216 1 111 1 185 1 321 1 221 1 201 1 
101 1 216 3 318 1 193 1 195 1 111 3 321 1 221 1 201 1 136 1 185 1 
147 1 265 1 14 1 201 1 
185 1 201 1 

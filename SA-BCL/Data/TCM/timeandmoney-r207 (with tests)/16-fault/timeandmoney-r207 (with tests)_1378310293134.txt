#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (73,347) (73,347) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (73,347) (73,347) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (73,347) (73,347) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (73,347) (73,347) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 203 349 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 113 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (77,336) 176 343 (9,308) 148 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 200 273 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 113 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 25 (77,336) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (77,336) 176 343 (9,308) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 1 347 1 114 1 42 1 293 1 66 1 18 1 73 1 159 1 112 1 351 1 
264 1 347 1 114 1 42 1 293 1 66 1 18 1 73 1 159 1 112 1 351 1 
264 1 347 1 114 1 42 1 293 1 66 1 18 1 73 1 159 1 112 1 351 1 
264 1 347 1 114 1 42 1 293 1 66 1 18 1 73 1 159 1 112 1 351 1 
69 2 42 1 303 1 44 1 38 1 317 2 112 4 159 4 318 1 15 1 114 1 150 1 91 1 18 1 225 1 80 3 268 1 358 3 
42 1 44 1 38 1 112 2 159 2 246 1 351 1 264 1 88 1 114 1 196 1 18 1 91 1 225 1 358 1 346 1 
69 1 42 1 44 1 38 1 112 3 159 3 264 1 15 1 114 2 18 2 80 1 68 1 358 2 
69 4 42 1 44 1 294 1 121 1 317 2 318 1 150 1 80 7 303 1 132 1 38 1 183 1 159 9 112 9 264 1 15 3 114 2 18 2 91 1 225 1 68 1 268 1 358 5 
69 4 42 1 44 1 294 1 121 1 317 2 318 1 150 1 80 7 303 1 132 1 38 1 183 1 159 9 112 9 264 1 15 3 114 2 18 2 91 1 225 1 68 1 268 1 358 5 
265 1 216 1 113 1 
265 1 72 1 151 2 
20 2 353 2 175 2 116 1 22 2 262 1 11 2 81 2 
20 2 269 1 189 2 190 1 292 1 22 3 170 1 174 2 175 2 100 1 32 2 344 1 58 1 10 1 60 1 81 3 62 1 106 1 202 2 180 1 219 1 262 1 110 1 11 2 156 1 40 1 41 1 330 2 353 2 14 1 116 1 117 1 118 1 226 1 333 1 335 1 336 1 
20 1 353 1 291 1 175 1 30 1 22 1 262 1 11 1 81 1 275 1 
20 2 291 2 271 1 22 2 24 1 275 1 175 1 30 1 256 1 81 2 61 1 300 1 216 1 262 1 11 1 182 1 353 1 265 1 224 1 65 1 332 1 
300 2 20 1 216 1 291 1 22 1 271 1 24 1 11 1 182 2 353 1 265 1 175 1 224 1 256 1 81 1 
300 1 26 1 182 1 314 1 228 1 
300 2 265 1 216 1 45 1 53 1 182 2 314 1 228 1 
300 1 182 1 314 1 
300 1 20 1 291 1 22 1 262 1 11 1 182 1 275 1 353 1 175 1 30 1 65 1 81 1 228 1 
265 1 
300 2 265 1 216 1 45 1 182 2 298 1 314 1 228 1 
300 5 177 1 216 1 155 1 234 1 23 1 45 1 111 2 182 5 147 1 265 1 277 2 204 1 251 1 342 2 92 1 166 1 228 2 314 2 
116 1 113 1 
20 2 241 1 22 2 326 1 11 1 353 1 175 1 116 2 81 2 
290 1 94 1 272 1 
189 1 292 1 22 1 180 1 110 1 156 1 170 1 330 1 174 1 116 1 76 1 117 1 100 1 118 1 81 1 336 1 
20 1 189 1 292 1 94 1 180 1 22 2 110 1 170 1 156 1 11 1 158 1 193 1 330 1 174 1 175 1 100 1 117 1 118 1 81 2 336 1 
20 5 291 1 144 1 22 5 326 1 11 4 158 2 193 1 56 1 353 1 175 4 331 1 116 1 332 1 334 1 81 5 
20 2 291 1 175 2 22 2 304 1 11 2 81 2 275 1 
353 1 20 3 175 3 116 1 22 3 11 3 158 1 81 3 
20 1 291 1 175 1 22 1 11 1 81 1 275 1 
20 1 353 1 291 1 241 1 175 1 22 1 326 1 11 1 81 1 
20 3 269 1 189 1 291 1 292 1 271 1 22 4 24 1 46 1 170 1 193 1 174 1 175 3 100 1 32 2 344 1 256 1 10 1 60 1 81 4 106 1 300 1 202 1 180 1 326 1 110 1 262 1 156 1 11 3 158 1 182 1 40 1 41 1 330 1 353 2 116 1 224 1 117 1 312 1 118 1 226 1 333 1 335 1 336 1 
20 2 291 1 22 2 11 1 158 1 56 1 175 1 331 1 116 1 332 1 81 2 
300 1 20 3 291 1 22 3 271 1 24 1 326 1 11 3 182 1 158 2 193 1 353 1 265 1 175 3 224 1 99 1 312 1 256 1 81 3 
20 2 22 2 94 1 272 1 326 1 11 2 158 1 353 1 175 2 81 2 
189 1 292 1 22 1 180 1 110 1 156 1 170 1 330 1 174 1 116 1 117 1 100 1 118 1 81 1 336 1 
189 1 292 1 22 1 180 1 3 1 156 1 170 1 330 1 174 1 116 1 117 1 100 1 118 1 128 1 81 1 
290 2 94 2 272 2 96 1 74 1 32 2 7 1 344 1 10 1 60 1 106 1 202 4 219 2 134 1 87 1 40 1 236 1 41 2 354 1 355 1 286 1 333 1 
20 1 291 1 175 1 224 1 22 1 304 1 11 1 81 1 
37 1 296 1 
37 1 296 1 
43 1 157 1 
43 1 157 1 
43 1 157 1 
217 1 37 1 296 1 
218 1 43 1 187 1 37 2 296 2 157 1 
84 1 37 1 296 1 
217 1 37 1 296 1 
217 1 37 1 296 1 
213 1 37 1 296 1 
213 1 37 1 296 1 
213 1 37 1 296 1 
20 2 300 1 231 1 191 1 22 2 181 1 145 1 84 1 85 1 48 1 37 1 133 1 232 1 11 2 135 1 182 1 172 1 175 2 163 1 116 1 90 1 296 1 297 1 81 2 
300 2 218 1 191 2 145 3 48 2 37 2 85 1 305 1 86 1 133 2 182 2 136 1 137 1 265 1 197 1 296 2 297 2 227 2 143 1 
303 1 91 1 225 1 
196 1 91 1 225 1 
196 1 303 2 285 1 91 3 356 1 208 1 
196 1 303 1 285 1 210 1 91 2 356 1 
196 1 303 1 285 1 91 2 356 2 
167 1 231 1 72 1 45 1 47 1 232 1 50 1 4 1 74 1 247 1 277 1 342 1 101 1 7 1 151 3 300 5 177 3 216 1 234 1 134 1 111 1 182 5 352 2 265 2 223 1 354 1 90 1 310 2 288 2 166 2 314 1 228 4 
70 1 231 4 72 3 26 5 45 1 47 2 50 1 4 2 74 3 211 5 277 2 342 2 7 3 78 1 151 9 300 9 259 1 177 8 216 1 234 1 134 3 111 2 182 9 352 6 265 5 223 3 204 1 354 3 164 1 138 1 188 1 288 6 166 6 314 6 228 7 
167 1 231 1 72 2 47 1 4 1 74 1 247 1 277 1 342 1 7 1 151 4 300 3 177 3 216 1 134 1 111 1 182 3 352 2 265 3 223 1 204 1 354 1 310 1 228 2 166 2 288 2 
70 1 167 1 231 2 72 3 47 1 4 1 74 2 277 1 247 1 342 1 7 2 151 7 300 4 259 1 177 5 216 1 134 2 111 1 182 4 352 4 265 4 223 2 204 1 354 2 310 2 188 1 288 4 228 3 166 4 
118 1 140 1 113 1 
118 1 299 1 
83 1 
100 1 118 1 170 1 
118 1 51 1 
100 1 118 1 
100 1 214 1 118 3 140 2 170 1 173 1 
201 2 202 6 219 3 261 1 97 1 327 2 54 1 52 1 74 1 192 2 171 1 55 1 41 3 341 1 7 1 17 2 33 1 
97 1 52 1 54 1 55 1 171 1 192 2 74 1 341 1 7 1 33 1 202 6 201 2 219 3 261 1 327 4 41 3 17 2 267 2 
337 1 97 1 52 1 54 1 171 1 55 1 192 2 74 1 341 1 7 1 33 1 202 6 201 2 219 3 261 1 327 2 41 3 17 2 
120 1 242 1 97 1 52 1 192 1 74 2 274 3 341 1 29 3 7 2 32 2 344 1 10 1 106 1 201 1 202 17 219 9 261 2 327 4 134 2 39 1 41 8 223 2 354 2 115 1 17 1 207 1 267 3 333 1 142 1 
242 1 52 1 54 1 74 1 192 3 171 1 55 1 341 1 7 1 32 4 33 1 344 2 10 2 106 2 201 2 202 8 282 1 219 4 261 1 327 4 263 1 41 4 17 2 267 1 333 2 
189 1 42 1 44 1 168 1 339 1 295 1 95 1 174 1 276 1 319 1 250 1 196 1 80 1 258 1 303 1 180 1 38 1 156 1 159 2 112 2 237 1 330 1 264 1 238 1 114 1 18 1 91 2 225 1 208 1 358 1 
189 1 44 1 168 1 339 1 295 1 174 1 149 1 276 1 319 1 250 1 196 1 253 1 80 2 258 1 303 1 180 1 38 1 156 1 159 3 112 3 330 1 264 1 238 1 114 1 16 1 18 1 91 2 225 1 208 1 358 1 
189 1 44 1 168 1 295 1 174 1 149 1 319 1 250 1 196 1 80 2 258 1 180 1 303 1 38 1 156 1 159 2 112 2 330 1 264 1 238 1 16 1 91 2 225 1 208 1 358 1 
189 1 292 1 180 1 107 1 295 2 156 1 12 1 112 1 159 1 329 1 330 1 174 1 264 2 238 2 114 1 319 2 100 1 185 1 89 1 253 1 118 1 18 1 104 1 
189 1 42 1 168 1 339 1 295 1 174 1 149 1 276 1 319 1 250 1 196 1 258 1 303 1 180 1 156 1 159 1 112 1 237 1 330 1 264 1 238 1 114 1 18 1 91 2 225 1 208 1 
59 1 
20 1 189 2 291 1 292 2 271 1 22 1 24 1 45 1 4 1 174 2 277 1 212 1 342 1 100 1 320 1 256 1 81 1 61 1 300 3 130 1 177 1 178 1 234 1 180 1 203 1 349 1 156 1 111 1 182 3 329 1 330 2 224 1 185 1 118 1 332 1 240 1 314 2 166 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 3 20 1 291 1 178 1 271 1 22 1 24 1 45 1 349 1 203 1 182 3 224 1 256 1 332 1 298 1 81 1 240 1 61 1 314 1 
20 1 300 2 291 1 178 1 234 1 271 1 22 1 24 1 349 1 203 1 111 1 182 2 277 1 224 1 342 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
300 2 20 1 291 1 178 1 22 1 271 1 24 1 349 1 203 1 182 2 224 1 256 1 332 1 81 1 240 1 61 1 
20 1 300 2 291 1 178 1 234 1 271 1 22 1 24 1 349 1 203 1 111 1 182 2 277 1 224 1 342 1 256 1 332 1 81 1 240 1 61 1 
106 1 32 2 344 1 286 1 333 1 55 1 171 1 40 1 10 1 60 1 113 1 
290 11 209 1 94 11 272 4 74 1 274 3 29 3 32 4 7 2 344 2 10 2 60 1 62 1 106 2 202 14 219 8 109 1 327 1 134 1 40 2 41 6 223 2 266 1 354 2 116 1 184 1 206 1 207 1 267 1 226 1 333 2 141 1 
189 1 20 1 292 1 22 2 272 1 49 1 170 1 5 1 193 1 174 1 175 1 100 1 76 1 32 2 344 1 60 1 81 2 10 1 62 1 106 1 325 1 202 2 180 1 219 1 110 1 156 1 11 1 158 1 40 1 330 1 41 1 116 1 117 1 206 1 118 1 333 1 226 1 336 1 
189 1 94 3 272 3 193 1 192 1 100 1 7 1 9 1 10 2 60 2 106 2 202 7 110 1 327 1 11 1 156 1 158 1 330 1 117 1 206 1 118 1 333 2 335 1 336 1 20 1 290 3 292 1 22 2 170 1 74 1 174 1 175 1 32 4 344 2 81 2 180 1 219 3 134 1 307 1 40 2 221 1 41 4 223 1 354 1 311 1 226 1 357 1 
20 1 189 8 190 2 270 1 292 2 22 1 95 1 149 1 174 8 194 1 175 1 57 1 100 2 32 4 344 2 81 1 10 2 60 2 62 1 106 2 179 1 202 2 180 2 219 1 108 1 11 1 156 2 158 1 40 2 160 1 329 1 330 7 41 1 185 1 186 1 118 3 286 1 333 2 226 1 
290 1 20 1 94 1 22 1 272 1 243 1 74 1 175 1 32 2 7 1 344 1 10 1 60 1 81 1 106 1 202 3 219 1 326 1 134 1 11 1 40 1 41 2 353 1 223 1 354 1 206 1 333 1 
290 1 106 1 202 2 94 1 219 2 272 1 327 1 40 1 236 1 354 1 32 2 7 1 344 1 267 1 286 1 333 1 60 1 10 1 
290 1 106 1 202 2 94 1 272 1 96 1 134 1 40 1 74 1 41 2 32 2 344 1 286 1 333 1 60 1 10 1 
290 2 106 1 202 4 94 2 219 2 272 2 134 1 74 1 40 1 41 2 223 1 354 1 32 2 7 1 344 1 286 1 333 1 60 1 10 1 
290 1 106 1 202 2 94 1 219 2 272 1 327 1 40 1 236 1 57 1 354 1 32 2 7 1 344 1 267 1 333 1 60 1 10 1 
290 1 106 1 202 2 94 1 272 1 96 1 134 1 40 1 74 1 41 2 57 1 32 2 344 1 333 1 60 1 10 1 
290 2 94 2 272 2 74 1 57 1 7 1 32 2 344 1 10 1 60 1 106 1 202 4 219 2 327 1 134 1 40 1 41 2 223 1 354 1 267 1 333 1 
290 2 106 1 202 4 94 2 219 2 272 2 134 1 74 1 40 1 41 2 223 1 354 1 32 2 7 1 344 1 333 1 60 1 10 1 
189 1 292 1 22 1 170 1 174 1 100 1 32 2 344 1 81 1 60 1 10 1 62 1 106 1 202 2 180 1 219 1 110 1 156 1 40 1 330 1 41 1 116 1 117 1 118 1 333 1 226 1 335 1 336 1 
189 1 106 1 291 1 292 1 202 1 40 1 41 1 330 1 174 1 284 1 331 1 116 1 32 2 344 1 226 1 333 1 60 1 10 1 
290 2 106 1 202 4 94 2 219 2 272 2 134 1 74 1 40 1 41 2 223 1 354 1 32 2 7 1 206 1 344 1 333 1 60 1 10 1 
290 2 189 1 94 2 22 1 272 2 95 1 170 1 74 1 174 1 100 1 7 1 32 2 344 1 81 1 60 1 10 1 106 1 202 4 180 1 219 2 110 1 134 1 156 1 40 1 41 2 330 1 223 1 354 1 117 1 311 1 118 1 333 1 335 1 336 1 
20 1 290 1 22 1 94 1 272 1 74 1 175 1 32 2 7 1 344 1 10 1 60 1 81 1 106 1 154 1 202 3 219 2 326 1 134 1 327 1 11 1 40 1 41 1 353 1 223 1 354 1 206 1 267 1 333 1 
74 1 274 1 75 1 124 1 29 1 28 1 32 4 7 1 344 2 8 1 198 1 10 2 153 1 106 2 302 1 202 8 219 4 134 1 263 1 41 4 223 1 354 1 207 1 333 2 165 1 
242 2 146 1 192 1 74 1 274 2 123 1 75 1 29 2 278 1 32 6 7 2 102 1 8 3 344 3 198 2 10 3 153 2 106 3 35 1 302 1 348 1 202 20 219 11 260 1 327 2 134 1 263 1 41 9 223 2 354 2 207 2 267 1 333 3 
274 1 75 1 29 1 28 1 32 4 344 2 8 1 198 1 10 2 153 1 106 2 302 1 202 4 348 1 219 2 263 1 41 2 207 1 333 2 
274 1 75 1 29 1 28 1 32 4 344 2 8 1 198 1 10 2 153 1 106 2 302 1 202 4 348 1 219 2 263 1 41 2 207 1 333 2 
242 1 146 1 55 1 171 1 192 1 74 2 274 2 123 1 75 1 29 2 278 1 32 4 7 2 102 1 344 2 8 3 198 1 10 2 153 1 106 2 35 1 302 1 348 1 202 21 219 10 260 1 327 2 134 2 263 1 41 11 223 2 354 2 207 2 267 1 333 2 
137 1 218 1 249 1 197 1 191 1 37 1 48 1 133 1 296 1 297 1 
163 1 84 1 
191 1 37 1 48 1 133 1 296 1 297 1 257 1 27 1 345 1 
217 1 13 1 
213 1 187 1 322 1 
300 1 218 1 191 1 145 2 85 1 48 1 37 1 305 1 133 1 182 1 136 1 137 1 265 1 197 1 296 1 297 1 227 1 143 1 
300 1 218 1 191 1 145 2 85 1 48 1 37 1 305 1 133 1 182 1 136 1 137 1 265 1 197 1 296 1 297 1 227 1 143 1 
300 1 218 1 191 1 145 2 85 1 48 1 37 1 305 1 133 1 182 1 136 1 137 1 265 1 197 1 296 1 297 1 227 1 143 1 
217 1 187 1 13 1 
217 1 187 1 13 1 
213 1 322 1 
213 1 187 1 322 1 
181 1 172 1 
20 2 191 1 231 1 22 2 145 1 48 1 232 1 172 1 175 2 296 1 297 1 81 2 215 1 300 1 181 1 305 1 37 1 84 1 133 1 11 2 182 1 135 1 163 1 116 1 90 1 227 1 228 1 
189 2 20 2 190 2 93 1 22 2 2 1 174 2 194 1 248 1 100 1 126 1 32 2 344 1 60 1 81 2 10 1 62 1 106 1 202 2 180 1 219 1 156 1 40 1 160 1 41 1 330 2 206 1 118 1 67 1 333 1 226 1 
189 2 303 1 180 1 339 1 95 1 156 1 149 1 330 2 174 2 238 1 196 1 250 1 139 1 103 1 91 2 225 1 119 1 208 1 258 1 
189 1 233 1 303 1 180 1 339 1 156 1 149 1 330 1 174 1 238 1 196 1 250 1 103 1 91 2 225 1 208 1 258 1 
189 1 292 1 180 1 156 1 329 1 330 1 174 1 6 1 238 1 100 1 185 1 118 1 119 1 104 1 
189 1 303 1 180 1 339 1 156 1 149 1 330 1 174 1 238 1 196 1 250 1 139 1 103 1 91 2 225 1 119 1 208 1 258 1 
280 1 
177 1 265 1 216 1 251 1 155 1 166 1 113 1 
72 1 45 1 277 1 342 1 151 1 281 1 300 1 177 1 216 1 234 1 131 1 111 1 182 1 328 1 265 2 166 1 314 1 
189 1 292 1 170 1 4 1 148 1 174 1 277 1 214 1 342 1 100 1 77 1 343 1 176 1 299 2 63 1 177 1 234 1 180 1 111 1 156 2 330 1 308 1 118 4 140 1 
72 3 45 1 340 1 146 1 74 2 274 1 123 1 29 1 277 1 342 1 7 2 102 1 129 1 151 6 300 1 35 1 177 7 216 1 234 1 260 1 134 2 111 1 182 1 352 5 265 4 223 2 354 2 207 1 314 1 288 5 166 4 
20 1 291 1 21 1 22 1 340 2 54 1 74 1 275 1 277 1 175 1 30 1 342 1 7 2 33 1 81 1 300 1 177 2 201 1 234 1 262 1 111 1 11 1 182 1 353 1 17 1 65 1 313 1 166 2 
177 1 216 1 155 1 234 1 111 1 265 1 277 1 251 1 342 1 166 1 
177 2 72 2 134 1 74 1 352 2 265 2 223 1 354 1 7 1 151 4 166 2 288 2 
300 1 265 1 216 1 45 1 182 1 314 1 
189 3 292 2 1 1 273 1 45 2 98 1 4 1 174 3 277 2 212 2 100 1 342 2 320 1 200 1 300 3 130 1 177 1 234 1 180 1 156 1 111 2 182 3 329 1 330 3 204 1 185 1 118 1 314 4 166 2 
189 1 20 2 269 1 292 1 22 3 170 1 174 1 175 2 100 1 32 2 344 1 10 1 81 3 60 1 106 1 202 1 180 1 262 1 110 1 11 2 156 1 40 1 41 1 330 1 353 2 116 1 117 1 118 1 226 1 333 1 335 1 336 1 
177 1 216 2 234 1 72 2 111 1 4 1 341 1 352 2 265 4 277 1 212 1 342 1 151 4 288 2 166 2 
133 1 297 1 122 1 
229 1 197 1 181 1 133 1 297 1 
133 1 297 1 122 1 
133 1 297 1 122 1 
133 1 297 1 245 1 
133 1 297 1 245 1 
133 1 297 1 245 1 
133 1 297 1 
37 1 296 1 
242 1 54 1 55 1 171 1 192 2 74 1 32 4 7 1 33 1 344 2 10 2 106 2 201 2 202 9 219 4 327 4 41 5 17 2 267 2 333 2 
55 1 171 1 113 1 
106 1 202 4 219 2 169 1 134 1 327 1 74 1 41 2 223 1 354 1 32 2 7 1 344 1 267 1 333 1 10 1 
29 1 202 2 219 1 207 1 274 1 41 1 
209 1 242 1 54 1 192 2 55 1 74 3 171 1 274 2 29 2 7 3 32 2 33 1 344 1 10 1 106 1 201 2 202 17 219 8 109 1 134 2 327 5 41 9 223 2 354 2 17 2 267 3 333 1 141 1 
29 1 202 1 41 1 
202 1 219 1 274 1 
202 6 219 3 327 2 134 1 74 1 192 1 221 1 41 3 223 1 354 1 7 1 267 1 
242 1 146 1 74 2 192 1 274 1 123 1 29 1 32 4 7 2 102 1 344 2 10 2 35 1 106 2 202 13 219 6 260 1 134 2 327 2 263 1 41 7 223 2 354 2 207 1 267 1 333 2 
202 4 201 1 219 2 327 1 74 1 192 1 41 2 7 1 17 1 33 1 
106 1 242 1 201 1 202 3 219 1 327 2 54 1 192 1 55 1 171 1 41 2 17 1 32 2 344 1 267 1 333 1 105 1 10 1 
201 2 202 5 219 2 327 2 54 1 192 2 74 1 41 3 17 2 7 1 33 1 
106 1 202 2 219 2 327 1 263 1 354 1 32 2 7 1 344 1 267 1 333 1 10 1 
106 1 202 4 219 2 134 1 263 1 74 1 41 2 223 1 354 1 32 2 7 1 344 1 333 1 10 1 
106 3 242 1 202 3 201 1 219 1 327 2 263 1 192 1 41 2 28 1 32 6 17 1 344 3 267 1 333 3 105 1 10 3 
120 1 242 1 169 1 54 1 192 2 55 1 171 1 74 3 274 3 29 3 28 1 32 8 7 3 33 1 344 4 10 4 106 4 201 2 202 23 219 11 327 5 134 2 263 1 41 12 223 2 354 2 115 1 17 2 207 1 267 3 333 4 142 1 
54 1 74 1 192 2 171 1 55 1 274 1 29 1 7 1 32 2 33 1 344 1 10 1 35 1 106 1 202 7 201 2 219 3 327 2 263 1 41 4 17 2 207 1 333 1 
169 1 54 1 74 1 192 2 171 1 55 1 274 1 29 1 7 1 32 4 33 1 344 2 10 2 35 1 106 2 201 2 202 7 219 3 327 2 263 1 41 4 17 2 207 1 333 2 
242 1 169 1 146 1 54 1 55 1 171 1 74 3 192 3 274 1 123 1 29 1 32 6 7 3 102 1 33 1 344 3 10 3 35 1 106 3 201 2 202 18 219 8 260 1 134 2 327 4 263 1 41 10 223 2 354 2 17 2 207 1 267 1 333 3 
242 2 169 1 146 1 74 1 192 1 274 1 123 1 29 1 32 8 7 2 102 1 344 4 10 4 35 1 106 4 202 12 219 7 260 1 134 1 327 2 263 1 41 5 223 2 354 2 207 1 267 1 333 4 
54 1 74 1 192 2 171 1 55 1 274 1 29 1 7 1 32 2 33 1 344 1 10 1 35 1 106 1 202 7 201 2 219 3 327 2 263 1 41 4 17 2 207 1 333 1 
242 1 146 1 74 2 192 1 274 1 123 1 29 1 32 4 7 2 102 1 344 2 10 2 35 1 106 2 202 13 219 6 260 1 134 2 327 2 263 1 41 7 223 2 354 2 207 1 267 1 333 2 
242 2 169 1 146 1 54 1 55 1 171 1 74 2 192 3 274 1 123 1 29 1 32 8 7 3 102 1 33 1 344 4 10 4 35 1 106 4 201 2 202 17 219 9 260 1 134 1 327 4 263 1 41 8 223 2 354 2 17 2 207 1 267 1 333 4 
242 2 146 1 74 2 192 1 274 1 123 1 29 1 28 1 32 8 7 3 102 1 344 4 10 4 35 1 106 4 202 16 219 9 260 1 134 2 327 4 263 1 41 7 223 3 354 3 207 1 267 3 333 4 
202 5 201 1 219 2 327 2 54 1 74 1 171 1 55 1 192 1 41 3 7 1 17 1 33 1 267 1 
242 2 146 1 54 1 55 1 171 1 74 2 192 3 274 1 123 1 29 1 28 1 32 8 7 3 102 1 33 1 344 4 10 4 35 1 106 4 201 2 202 17 219 9 260 1 134 1 327 4 263 1 41 8 223 2 354 2 17 2 207 1 267 1 333 4 
20 1 291 1 22 1 56 1 116 1 331 1 287 1 332 1 81 1 
20 1 291 1 230 1 82 1 22 1 283 1 220 1 56 1 331 1 116 1 287 1 332 1 81 1 34 1 
189 1 292 1 180 1 100 1 185 1 118 1 156 1 329 1 113 1 174 1 330 1 
20 1 189 1 292 1 22 2 180 1 170 1 156 1 11 1 158 1 330 1 174 1 175 1 116 1 100 1 117 1 118 1 81 2 336 1 
189 1 20 2 291 1 22 2 24 1 25 1 98 1 170 2 51 1 174 1 175 1 100 2 81 2 180 1 11 2 156 1 158 1 330 1 116 1 224 1 117 1 118 3 336 1 
189 2 20 2 291 1 22 2 24 1 25 1 3 1 98 1 170 2 51 1 174 2 175 1 100 2 252 1 81 2 180 1 11 2 156 1 158 1 330 2 116 1 224 1 117 1 118 3 
300 2 189 3 216 1 292 1 180 1 25 1 51 1 170 1 156 1 98 1 182 2 330 3 174 3 265 1 31 1 100 1 252 1 118 4 140 1 256 1 299 1 289 1 314 1 
300 1 189 1 180 1 25 1 51 1 170 1 98 1 156 1 182 1 330 1 174 1 100 1 77 1 118 4 140 1 299 1 
189 1 179 1 180 1 156 1 174 1 330 1 
189 7 190 1 315 1 270 1 292 2 95 1 170 1 174 7 149 1 100 2 214 1 152 1 179 1 180 2 108 1 156 3 160 1 162 1 330 6 186 1 118 3 
189 1 2 1 95 1 54 1 55 1 192 2 100 1 7 1 9 1 10 2 60 2 106 2 201 2 202 5 110 1 327 2 11 1 156 1 158 1 330 1 331 1 116 1 117 1 17 2 206 1 118 1 333 2 335 1 336 1 20 1 291 1 22 2 170 1 171 1 74 1 174 1 175 1 32 4 33 1 344 2 81 2 180 1 219 2 40 2 41 3 311 1 
300 1 189 1 292 1 234 1 1 1 111 1 182 1 174 1 330 1 308 1 277 1 342 1 77 1 343 1 118 2 140 1 176 1 299 1 228 1 
189 2 179 1 180 1 95 1 170 1 156 2 330 2 174 2 214 1 100 1 118 2 140 1 63 1 
189 4 292 1 180 1 95 1 156 1 329 1 244 1 330 4 174 4 100 1 185 1 252 1 118 1 
189 2 315 1 180 1 98 1 170 1 156 2 330 2 174 2 222 1 205 1 100 1 309 1 118 1 152 1 
189 1 292 1 196 1 180 1 91 1 225 1 156 1 258 1 174 1 330 1 
189 2 248 1 180 1 100 1 95 1 118 1 156 1 160 1 149 1 174 2 330 2 
189 5 292 1 180 2 95 1 108 1 98 1 156 2 329 1 160 1 244 1 330 4 174 5 100 2 185 1 186 1 118 3 
189 5 292 1 180 2 95 1 108 1 98 1 156 2 329 1 161 1 160 1 244 1 330 4 174 5 100 2 185 1 118 3 
20 1 189 1 292 1 22 2 180 1 3 1 170 1 156 1 11 1 158 1 330 1 174 1 175 1 116 1 100 1 117 1 118 1 81 2 
189 1 315 1 180 1 98 1 170 1 156 2 330 1 174 1 162 1 214 1 100 1 118 1 152 1 
195 1 125 1 239 1 116 1 338 1 
300 2 216 1 291 1 324 1 235 1 0 1 271 1 24 1 338 1 182 2 265 1 239 2 125 2 195 2 116 1 224 1 312 1 256 1 228 1 
20 1 125 1 239 1 93 1 22 1 126 1 338 1 67 1 81 1 
324 1 0 1 338 1 
44 1 38 1 358 1 113 1 
114 1 44 1 18 1 38 1 159 1 112 1 358 1 
264 1 319 1 159 1 
42 1 316 1 36 1 44 1 38 1 112 3 159 3 88 2 114 1 79 1 18 1 358 1 
114 1 44 1 18 1 38 1 80 1 317 1 159 2 112 2 358 1 
69 1 318 1 114 1 42 1 303 1 91 1 18 1 225 1 159 1 112 1 358 1 
114 1 42 1 18 1 38 1 159 1 112 1 358 1 
114 1 42 1 44 1 18 1 38 2 159 1 112 1 
42 1 38 1 306 1 112 2 159 2 64 1 114 2 321 1 18 2 358 1 
69 1 42 1 44 1 294 1 38 1 121 1 112 3 159 3 15 1 114 1 18 1 80 2 358 2 
42 1 303 1 44 1 38 1 112 2 159 2 114 1 196 1 91 2 18 1 225 1 80 1 208 1 358 1 199 1 
69 1 42 1 44 1 38 1 317 1 112 4 159 4 15 1 114 2 150 1 18 2 80 2 358 2 
114 1 42 1 44 1 18 1 38 1 159 1 112 1 358 1 
69 1 316 1 44 2 38 2 350 1 112 4 159 4 88 1 15 1 114 1 79 1 18 1 80 2 358 3 
301 1 42 1 44 1 38 1 112 2 159 2 183 1 114 1 18 1 254 1 80 1 358 1 
88 2 316 2 114 1 42 1 44 1 279 1 79 1 18 1 38 1 159 3 112 3 358 1 
71 2 255 1 19 1 358 2 
114 1 42 1 127 1 18 1 159 1 112 1 
114 1 42 1 44 1 18 1 38 1 80 1 121 1 159 2 112 2 358 1 
323 1 
114 1 42 1 44 1 18 1 38 1 159 1 112 1 358 1 
42 1 44 1 38 1 121 1 112 3 159 3 88 1 114 1 18 1 80 1 358 1 
69 1 15 1 350 1 358 1 
38 1 358 1 

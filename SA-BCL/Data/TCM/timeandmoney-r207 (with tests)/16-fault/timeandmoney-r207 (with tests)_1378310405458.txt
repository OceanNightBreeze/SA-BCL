#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 258 4 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 258 4 86 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 265 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 51 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 188 138 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 47 55 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 47 55 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 47 55 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 47 55 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 47 55 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 19 108 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 193 146 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 200 266 8 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 200 266 8 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 200 266 211 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 193 146 210 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 193 146 210 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (245,251) (245,251) (64,168) 65 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 215 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 215 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 5 (64,168) 233 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 21 2 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (38,228) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (150,174) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (70,182) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 47 (275,283) (275,283) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
88 2 89 2 116 1 155 1 192 1 273 1 54 2 235 3 236 2 15 9 24 1 281 5 61 1 128 2 28 1 67 6 29 2 68 1 137 1 72 2 74 1 296 1 295 1 297 4 81 9 261 1 112 1 181 1 
88 2 89 2 116 1 155 1 192 1 273 1 54 2 235 3 236 2 15 9 24 1 281 5 61 1 128 2 28 1 67 6 29 2 68 1 137 1 72 2 74 1 296 1 295 1 297 4 81 9 261 1 112 1 181 1 
88 2 89 2 116 1 155 1 192 1 273 1 54 2 235 4 236 2 15 10 24 1 281 6 61 1 128 2 28 1 67 7 29 2 68 1 137 1 72 2 74 1 296 1 295 1 297 5 81 10 261 1 112 1 181 1 
88 1 89 2 116 1 155 1 192 1 273 1 54 2 235 2 236 2 15 7 24 1 281 4 61 1 128 2 67 4 29 2 68 1 137 1 72 2 74 1 296 1 295 1 297 3 81 7 261 1 112 1 181 1 
88 2 28 1 89 1 67 3 29 1 137 1 235 1 54 1 236 1 15 4 296 1 297 2 81 4 261 1 181 1 281 3 61 1 128 1 
89 1 29 1 72 1 74 1 54 1 176 1 15 2 238 1 81 2 261 1 163 1 24 1 181 1 281 1 61 1 128 1 
67 1 29 2 155 1 72 1 54 2 235 1 15 3 297 1 81 3 261 1 181 1 281 2 61 1 
88 2 28 1 89 1 116 1 67 7 29 2 153 1 155 1 137 1 192 1 72 1 214 1 54 2 235 3 236 1 296 1 15 9 297 4 81 9 261 1 181 1 281 5 61 1 128 1 
88 2 28 1 89 1 116 1 67 7 29 2 153 1 155 1 137 1 192 1 72 1 214 1 54 2 235 3 236 1 296 1 15 9 297 4 81 9 261 1 181 1 281 5 61 1 128 1 
241 1 
87 1 205 1 285 1 186 1 226 1 33 1 76 1 12 1 16 1 26 1 101 1 223 1 
205 1 285 1 186 1 1 1 207 1 226 2 33 1 76 1 12 2 16 1 25 1 101 1 223 1 
12 1 226 1 239 1 
12 1 226 1 239 1 
12 1 226 1 
12 1 226 1 239 1 
12 1 226 1 239 1 
12 2 226 2 97 1 118 1 156 1 239 1 35 1 
241 1 99 1 
205 2 186 2 1 1 207 1 9 1 292 1 76 1 56 1 25 1 99 1 101 2 
248 1 117 1 303 1 
147 1 205 1 169 1 132 2 170 1 272 1 290 1 122 1 73 1 237 1 40 1 14 1 260 2 216 2 20 1 182 1 99 1 101 1 242 1 
132 1 170 1 48 1 216 1 260 1 
183 1 205 3 186 3 1 1 207 3 25 3 99 1 101 3 
76 1 205 1 186 1 207 1 25 1 243 1 101 1 
76 1 56 1 205 1 186 1 207 1 1 1 25 1 9 1 101 1 
205 1 186 1 207 1 1 1 48 1 25 1 9 1 101 1 
183 1 205 2 186 2 207 1 25 1 26 1 93 1 99 1 101 2 
48 1 
183 1 205 2 186 2 248 1 1 1 207 2 9 1 25 2 101 2 303 1 
147 1 205 1 132 1 170 1 272 1 73 1 122 1 237 1 40 1 260 1 216 1 20 1 182 1 99 1 101 1 
147 1 205 1 132 1 170 1 91 1 73 1 122 1 174 1 237 1 40 1 260 1 216 1 20 1 99 1 101 1 
115 1 117 2 267 2 191 4 159 2 95 1 11 2 96 1 161 1 277 1 240 1 166 1 246 1 248 2 286 1 107 1 253 1 139 1 37 1 294 1 218 1 222 1 85 1 303 2 
76 1 205 1 186 1 207 1 33 1 23 1 25 1 101 1 
183 1 205 2 186 2 207 2 1 1 48 1 9 1 292 1 76 1 25 2 99 1 101 2 
76 1 205 2 186 2 207 2 23 1 25 2 243 1 101 2 
39 1 154 1 
39 1 154 1 
299 1 173 1 
299 1 173 1 
299 1 173 1 
39 1 154 1 133 1 
185 1 39 1 154 1 
39 2 154 2 299 1 157 1 172 1 173 1 
39 1 154 1 133 1 
39 1 154 1 133 1 
39 1 111 1 154 1 
39 1 111 1 154 1 
39 1 111 1 154 1 
104 1 258 1 39 1 154 1 4 1 280 1 
104 1 258 1 39 1 12 1 226 1 154 1 4 1 280 1 86 1 
89 1 236 1 128 1 
89 1 176 1 128 1 
236 2 176 1 276 1 209 1 10 1 128 3 
236 1 176 1 276 1 209 1 59 1 128 2 
236 1 176 1 276 2 209 1 128 2 
265 1 12 1 226 1 239 1 
247 1 12 2 226 2 239 2 51 1 102 1 
226 2 156 1 118 1 188 1 35 1 12 2 97 1 198 1 239 1 83 1 62 1 127 1 
226 1 156 1 118 1 188 1 138 1 35 1 12 1 198 1 97 1 83 1 62 1 127 1 
241 1 282 1 122 1 
288 1 122 1 
255 1 
122 1 73 1 
147 1 149 1 80 1 282 2 122 3 73 1 
147 1 122 1 73 1 
249 1 122 1 
55 1 47 1 227 1 267 1 191 1 
55 1 47 1 227 1 267 1 191 1 
55 1 47 1 227 1 267 1 191 1 252 1 
55 1 47 1 227 1 267 1 191 1 
55 1 47 1 227 1 267 1 191 1 
89 1 151 1 230 1 231 1 10 1 54 1 236 1 15 2 13 1 20 1 281 1 61 1 27 1 128 2 67 1 29 1 132 1 32 1 105 1 72 1 75 1 77 1 176 1 40 1 216 1 260 1 81 2 261 1 44 1 181 1 
89 1 151 1 230 1 231 1 120 1 10 1 54 1 236 1 15 3 13 1 20 1 281 1 61 1 27 1 128 2 67 2 29 1 132 1 105 1 72 1 75 1 176 1 40 1 216 1 260 1 81 3 44 1 181 1 145 1 220 1 
89 1 151 1 231 1 120 1 10 1 236 1 15 2 20 1 281 1 61 1 27 1 128 2 67 2 132 1 105 1 72 1 75 1 176 1 40 1 216 1 260 1 81 2 44 1 181 1 145 1 
131 1 29 1 151 2 132 1 170 1 287 1 72 2 122 1 73 1 54 1 75 2 40 1 15 1 298 1 260 1 216 1 81 1 20 1 22 1 278 1 45 1 220 1 27 2 
89 1 151 1 230 1 231 1 10 1 54 1 236 1 15 1 13 1 20 1 27 1 128 2 29 1 132 1 32 1 105 1 72 1 75 1 176 1 40 1 216 1 260 1 81 1 261 1 44 1 145 1 
129 1 
12 1 226 1 132 1 31 1 170 1 118 1 156 1 216 1 260 1 19 1 108 1 35 1 83 1 127 1 
167 1 87 1 285 1 205 1 186 1 226 2 33 1 158 1 193 1 76 1 12 2 160 1 16 1 98 1 262 1 26 1 223 1 101 1 
167 1 87 1 205 1 285 1 186 1 225 1 226 2 33 1 158 1 76 1 12 2 160 1 16 1 98 1 262 1 26 1 223 1 101 1 
167 1 87 1 205 1 285 1 186 1 226 2 33 1 158 1 193 1 76 1 12 2 160 1 16 1 98 1 262 1 26 1 146 1 223 1 101 1 
12 1 226 1 
87 1 148 1 186 1 226 2 118 1 156 1 189 1 6 1 158 1 12 2 160 1 16 1 98 1 200 1 279 1 26 1 101 1 167 1 205 1 285 1 31 1 33 1 35 1 76 1 262 1 46 1 83 1 223 1 
87 1 148 1 266 1 186 1 226 2 156 1 118 1 189 1 6 1 158 1 8 1 12 2 160 1 16 1 98 1 200 1 279 1 26 1 101 1 167 1 285 1 205 1 31 1 134 1 33 1 35 1 76 1 262 1 46 1 83 1 223 1 
87 1 148 1 266 1 186 1 226 2 156 1 118 1 189 1 6 1 158 1 8 1 12 2 160 1 16 1 98 1 200 1 279 1 26 1 101 1 167 1 285 1 205 1 31 1 134 1 33 1 35 1 76 1 262 1 46 1 83 1 223 1 
87 1 148 1 266 1 186 1 226 2 156 1 118 1 189 1 158 1 12 2 160 1 16 1 98 1 200 1 202 1 26 1 101 1 167 1 285 1 205 1 31 1 33 1 211 1 35 1 76 1 259 1 143 1 262 1 46 1 83 1 223 1 
167 1 87 1 205 1 285 1 186 1 226 2 33 1 158 1 210 1 193 1 76 1 12 2 160 1 16 1 98 1 262 1 26 1 146 1 223 1 101 1 
167 1 87 1 205 1 285 1 186 1 226 2 33 1 158 1 210 1 193 1 76 1 12 2 160 1 16 1 98 1 262 1 26 1 146 1 223 1 101 1 
87 1 148 1 186 1 226 2 118 1 156 1 189 1 158 1 12 2 160 1 16 1 98 1 200 1 202 1 26 1 101 1 167 1 205 1 285 1 31 1 33 1 35 1 76 1 143 1 262 1 46 1 83 1 223 1 
115 1 47 1 3 1 267 3 191 5 159 2 95 1 275 1 11 2 96 1 277 1 241 1 99 1 283 1 246 1 286 1 107 1 253 1 37 1 294 1 42 1 264 1 85 1 
115 4 117 16 267 13 270 1 191 22 50 1 92 4 159 4 234 4 194 1 11 9 96 2 277 1 21 1 240 4 99 1 203 1 284 2 246 2 248 6 286 2 107 2 253 2 256 4 139 2 36 1 293 2 37 2 294 4 79 2 263 1 303 16 85 2 
246 1 224 1 286 1 48 1 267 1 119 1 107 1 191 2 253 1 36 1 159 2 11 1 96 1 277 1 263 1 203 1 
64 1 245 1 246 1 65 1 286 1 132 1 251 1 48 1 170 1 107 1 191 1 253 1 36 1 159 2 11 1 96 1 216 1 277 1 260 1 203 1 
183 1 186 1 267 1 269 1 191 2 95 1 159 4 122 3 11 1 96 2 196 1 277 2 20 2 201 1 25 1 101 1 242 2 205 1 246 2 207 1 132 8 286 2 170 2 287 1 107 2 71 1 253 2 36 1 73 2 175 1 77 1 40 2 298 1 216 8 260 7 179 1 43 1 145 1 263 1 
115 1 186 1 1 1 117 1 267 1 191 3 9 1 159 2 274 1 11 2 96 1 277 1 25 1 240 1 203 1 101 1 246 1 205 1 248 1 207 1 286 1 107 1 253 1 256 1 139 1 37 1 294 1 303 1 85 1 
284 1 246 1 115 1 248 1 117 1 286 1 267 2 107 1 191 2 253 1 95 1 159 2 294 1 96 1 277 1 240 1 166 1 303 1 
246 1 248 1 117 1 286 1 107 1 191 2 253 1 139 1 95 1 159 2 37 1 294 1 11 2 96 1 161 1 277 1 303 1 85 1 
115 1 117 2 267 2 191 4 159 2 95 1 11 2 96 1 277 1 240 1 246 1 284 1 248 2 286 1 107 1 253 1 256 1 139 1 37 1 294 2 303 2 85 1 
284 1 246 1 115 1 248 1 117 1 286 1 267 2 71 1 107 1 191 2 253 1 159 2 294 1 96 1 277 1 240 1 166 1 303 1 
246 1 248 1 117 1 286 1 71 1 107 1 191 2 253 1 139 1 159 2 37 1 294 1 11 2 96 1 161 1 277 1 303 1 85 1 
115 1 117 2 267 2 191 4 159 2 11 2 96 1 277 1 240 1 246 1 284 1 248 2 286 1 107 1 71 1 253 1 256 1 139 1 37 1 294 2 303 2 85 1 
115 1 117 2 267 2 191 4 159 2 11 2 96 1 277 1 240 1 246 1 284 1 248 2 286 1 107 1 253 1 256 1 139 1 37 1 294 2 303 2 85 1 
147 1 267 1 191 2 272 1 159 2 122 1 11 1 96 1 237 1 277 1 20 1 99 1 101 1 205 1 246 1 132 1 286 1 251 1 170 1 107 1 253 1 36 1 73 1 40 1 216 1 260 1 263 1 182 1 
147 1 267 1 91 1 191 2 159 2 122 1 11 1 96 1 237 1 277 1 20 1 164 1 99 1 101 1 205 1 246 1 132 1 286 1 170 1 107 1 253 1 36 1 73 1 174 1 40 1 216 1 260 1 263 1 
115 1 117 2 267 2 191 4 159 2 11 2 96 1 277 1 240 1 203 1 246 1 284 1 248 2 286 1 107 1 253 1 256 1 139 1 37 1 294 2 303 2 85 1 
147 1 115 1 117 2 267 2 191 4 272 1 159 2 122 1 11 2 96 1 237 1 277 1 20 1 240 1 101 1 284 1 245 1 205 1 246 1 248 2 132 1 286 1 251 1 107 1 253 1 139 1 256 1 73 1 37 1 294 2 77 1 40 1 216 1 260 1 182 1 85 1 303 2 
115 1 186 1 1 1 117 1 267 2 191 3 9 1 159 2 11 1 96 1 277 1 25 1 240 1 203 1 100 1 101 1 284 1 246 1 205 1 207 1 248 1 286 1 107 1 253 1 139 1 256 1 294 1 85 1 303 1 
184 1 115 3 47 1 3 1 2 1 267 15 191 29 92 2 159 8 53 1 234 2 275 1 11 14 17 1 58 1 162 1 21 2 240 2 283 1 284 3 246 4 286 4 135 1 107 4 253 4 254 1 256 2 139 2 34 1 291 2 37 2 294 5 78 1 141 3 215 1 42 1 180 1 264 1 85 3 
184 1 115 6 2 1 267 21 191 40 92 4 159 6 53 1 234 4 11 19 57 1 58 1 162 2 21 2 240 6 284 3 246 3 286 3 135 1 107 3 253 3 254 2 256 6 139 5 34 1 291 2 293 2 37 3 294 6 78 1 141 3 215 1 79 2 180 1 85 5 
184 1 115 3 47 1 3 1 2 1 267 15 191 29 92 2 159 8 53 1 234 2 275 1 11 14 17 1 58 1 162 1 21 2 240 2 283 1 284 3 246 4 286 4 135 1 107 4 253 4 254 1 256 2 139 2 34 1 291 2 37 2 294 5 78 1 141 3 215 1 42 1 180 1 264 1 85 3 
184 1 115 3 47 1 3 1 2 1 267 15 191 29 92 2 159 8 53 1 234 2 275 1 11 14 17 1 58 1 162 1 21 2 240 2 283 1 284 3 246 4 286 4 135 1 107 4 253 4 254 1 256 2 139 2 34 1 291 2 37 2 294 5 78 1 141 3 215 1 42 1 180 1 264 1 85 3 
184 1 115 5 47 1 3 1 2 1 267 19 191 35 92 3 159 6 53 1 234 3 275 1 11 16 58 1 162 1 21 2 240 4 283 1 284 3 246 3 286 3 135 1 107 3 253 3 254 1 256 4 139 3 34 1 291 2 293 1 37 4 294 7 78 1 141 3 215 1 42 1 79 1 180 1 264 1 85 4 
186 2 267 1 269 1 191 2 7 1 159 2 122 1 11 1 96 1 277 1 20 1 201 1 203 1 101 2 242 2 205 2 246 1 132 2 286 1 107 1 253 1 36 1 73 1 257 1 110 1 40 1 142 1 41 1 216 2 260 2 263 1 
89 1 132 2 230 1 271 1 231 1 10 1 232 1 77 1 236 1 176 1 40 1 260 2 216 2 20 1 125 1 44 1 145 1 27 1 128 2 
89 1 132 1 230 1 231 1 10 1 121 1 236 1 176 1 40 1 260 1 216 1 125 1 20 1 44 1 145 1 27 1 128 2 
0 1 132 1 170 1 287 1 232 1 122 1 73 1 40 1 298 1 260 1 216 1 20 1 45 1 27 1 
89 1 132 1 230 1 271 1 231 1 10 1 232 1 236 1 176 1 40 1 260 1 216 1 20 1 125 1 44 1 145 1 27 1 128 2 
140 1 
148 1 38 1 228 1 241 1 
148 1 31 1 118 1 156 1 6 1 279 1 35 1 83 1 
147 1 149 1 168 1 31 1 132 1 170 1 5 1 156 1 118 1 268 1 288 1 35 1 233 1 122 2 73 1 40 1 260 1 216 1 20 2 83 1 127 1 
234 1 148 1 2 1 31 1 118 1 156 1 21 1 92 1 35 1 83 1 
148 2 115 2 226 1 31 1 3 1 134 1 156 1 118 1 190 2 35 1 12 1 197 1 199 1 42 1 83 1 85 1 264 1 
148 1 31 1 118 1 156 1 228 1 35 1 
148 1 115 1 139 1 240 1 256 1 83 1 85 1 
132 1 170 1 216 1 260 1 
148 1 31 1 118 1 156 1 35 1 83 1 212 1 127 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
104 1 258 1 
39 1 154 1 
283 1 115 1 284 1 246 2 47 1 286 2 3 1 267 4 107 2 191 7 253 2 291 1 159 4 37 1 11 3 294 2 275 1 42 1 85 1 264 1 
283 1 115 1 47 1 3 1 267 3 191 5 37 1 11 2 275 1 294 1 42 1 241 1 264 1 85 1 
246 1 115 1 284 1 286 1 267 2 107 1 253 1 191 4 139 1 256 1 159 2 37 1 11 2 294 2 240 1 84 1 85 1 
284 1 115 2 267 6 191 12 92 2 256 2 139 2 293 1 37 1 234 2 294 2 11 6 79 1 21 1 240 2 85 2 
115 3 47 1 3 1 267 9 191 17 92 2 50 1 159 2 234 2 275 1 11 8 240 2 283 1 284 1 246 1 286 1 107 1 253 1 139 2 256 2 291 1 293 1 37 2 294 3 42 1 79 1 264 1 85 3 
234 1 11 1 191 1 
267 1 191 1 92 1 
246 1 115 1 284 1 286 1 267 3 107 1 253 1 191 6 256 1 139 1 159 2 195 1 37 2 11 3 294 3 240 1 84 1 85 1 
184 1 115 4 2 1 267 11 191 22 92 2 159 2 53 1 234 2 11 11 58 1 21 1 240 4 246 1 284 2 286 1 107 1 253 1 256 4 139 4 34 1 293 1 37 2 294 4 78 1 79 1 85 4 
115 1 284 1 3 1 267 3 191 6 37 1 11 3 294 2 42 1 264 1 85 1 
283 1 284 1 246 1 3 1 286 1 267 1 107 1 191 3 253 1 291 1 159 2 37 1 294 2 275 1 11 2 42 1 300 1 
246 1 284 2 115 2 286 1 3 2 267 5 107 1 253 1 191 10 159 2 53 1 37 3 294 5 11 5 199 1 42 2 264 1 85 2 
246 1 115 1 284 1 286 1 267 2 107 1 253 1 191 2 159 2 53 1 294 1 240 1 
246 1 115 1 284 1 286 1 267 2 107 1 253 1 191 4 139 1 256 1 159 2 53 1 37 1 11 2 294 2 240 1 85 1 
246 3 284 1 286 3 3 1 267 1 107 3 191 3 253 3 291 1 159 6 53 1 37 1 11 2 294 2 17 1 42 1 300 1 
115 2 3 2 267 7 191 15 92 1 159 8 53 1 234 1 11 8 275 1 199 1 17 1 21 1 283 1 284 3 103 1 246 4 286 4 107 4 253 4 291 1 37 3 294 6 42 2 300 1 84 1 85 2 264 1 
184 1 115 3 47 1 3 1 2 1 267 10 191 16 92 1 159 4 53 1 234 1 275 1 11 6 58 1 21 1 240 2 283 1 284 2 246 2 286 2 107 2 253 2 256 2 139 1 34 1 291 1 37 2 294 4 78 1 42 1 264 1 85 2 
184 1 115 3 47 1 3 1 2 1 267 10 191 16 92 1 159 6 53 1 234 1 275 1 11 6 58 1 21 1 240 2 283 1 284 1 246 3 286 3 107 3 253 3 256 2 139 1 34 1 291 1 37 2 294 3 78 1 42 1 84 1 264 1 85 2 
184 1 115 5 47 1 3 1 2 1 267 14 191 28 92 2 159 6 53 1 234 2 275 1 11 14 58 1 21 1 240 4 283 1 246 3 284 2 286 3 107 3 253 3 256 4 139 4 34 1 291 1 293 1 37 3 294 5 78 1 42 1 79 1 84 1 264 1 85 5 
184 1 115 5 47 1 3 1 2 1 267 15 191 26 92 2 159 6 53 1 234 2 275 1 11 11 58 1 21 1 240 4 283 1 246 3 284 3 286 3 107 3 253 3 256 4 139 3 34 1 291 1 293 1 37 3 294 6 78 1 42 1 79 1 84 1 264 1 85 4 
184 1 115 3 47 1 3 1 2 1 267 10 191 16 92 1 159 4 53 1 234 1 275 1 11 6 58 1 21 1 240 2 283 1 284 2 246 2 286 2 107 2 253 2 256 2 139 1 34 1 291 1 37 2 294 4 78 1 42 1 264 1 85 2 
184 1 115 4 2 1 267 11 191 22 92 2 159 2 53 1 234 2 11 11 58 1 21 1 240 4 246 1 284 2 286 1 107 1 253 1 256 4 139 4 34 1 293 1 37 2 294 4 78 1 79 1 85 4 
184 1 115 5 47 1 3 1 2 1 267 15 191 27 92 2 159 8 53 1 234 2 275 1 11 12 58 1 21 1 240 4 283 1 246 4 284 2 286 4 107 4 253 4 256 4 139 3 34 1 291 2 293 1 37 3 294 5 78 1 42 1 79 1 84 1 264 1 85 4 
115 1 2 1 267 3 191 7 92 1 159 4 53 1 234 2 11 4 17 1 21 1 240 1 246 2 286 2 107 2 253 2 256 1 139 1 293 1 37 1 294 1 85 1 
283 1 284 3 115 1 3 3 267 3 191 7 37 3 11 4 275 2 294 6 42 3 85 1 264 1 
115 1 2 1 267 3 191 7 92 1 159 4 53 1 234 2 11 4 17 1 21 1 240 1 246 2 286 2 107 2 253 2 256 1 139 1 293 1 37 1 294 1 85 1 
205 1 186 1 289 1 26 1 93 1 99 1 101 1 
130 1 106 1 144 1 52 1 213 1 
40 1 132 1 170 1 298 1 287 1 216 1 260 1 20 1 241 1 122 1 73 1 
147 1 183 1 205 2 186 1 207 1 132 1 170 1 122 1 73 1 237 1 40 1 260 1 216 1 20 1 25 1 182 1 99 1 101 2 
147 2 183 1 205 2 186 2 207 1 249 1 132 1 33 1 49 1 122 3 73 2 76 1 237 1 40 1 260 1 216 1 20 1 25 2 221 1 182 1 99 1 223 1 101 2 
183 1 147 2 186 2 49 1 122 3 237 1 20 1 25 2 99 1 101 2 205 2 207 1 132 2 249 1 33 1 73 2 174 1 76 1 40 1 216 2 260 2 113 1 221 1 223 1 
150 1 12 1 226 1 132 1 216 1 260 1 49 1 288 1 122 1 
12 1 226 1 132 1 70 1 216 1 260 1 49 1 288 1 122 1 
40 1 132 1 216 1 260 1 179 1 20 1 
147 1 206 1 149 1 132 7 170 2 269 1 73 2 122 3 175 1 123 1 77 1 196 1 177 1 40 2 260 6 216 7 179 1 43 1 20 3 145 1 242 1 
147 1 183 1 115 1 47 1 186 1 3 1 267 3 191 5 7 1 272 1 159 4 122 1 11 2 275 1 96 2 237 1 277 2 20 1 25 1 99 1 203 1 101 2 283 1 64 1 205 2 246 2 245 1 207 1 286 2 132 1 251 1 107 2 253 2 73 1 37 1 294 1 77 1 40 1 42 1 260 1 216 1 182 1 85 1 264 1 
12 1 226 1 239 1 
147 1 149 1 132 2 268 1 73 1 122 2 77 1 40 1 260 2 216 2 179 1 20 2 282 1 
114 1 132 4 170 1 287 1 73 1 122 1 77 1 40 1 298 1 260 4 216 4 20 1 113 1 
147 1 132 2 49 1 73 1 122 1 123 1 177 1 40 1 260 2 216 2 20 2 165 1 60 1 82 1 
89 1 176 1 40 1 132 1 170 1 216 1 260 1 20 1 44 1 128 1 
132 2 269 1 73 1 122 1 77 1 110 1 40 1 260 2 216 2 20 1 145 1 
114 1 132 5 170 1 287 1 269 1 49 1 73 2 122 3 175 1 77 1 196 1 40 2 298 1 260 4 216 5 20 2 
114 1 132 5 250 1 170 1 287 1 269 1 49 1 73 2 122 3 175 1 77 1 40 2 298 1 260 4 216 5 20 2 
147 1 183 1 205 2 186 1 207 1 132 1 170 1 122 1 73 1 174 1 237 1 40 1 260 1 216 1 20 1 25 1 99 1 101 2 
147 1 206 1 149 1 132 1 49 1 73 1 122 1 123 1 177 1 40 1 260 1 216 1 20 2 
205 1 257 1 186 1 142 1 41 1 208 1 219 1 301 1 101 1 
244 1 30 1 219 1 
208 1 301 1 219 1 204 1 
244 1 12 1 226 1 152 1 30 1 208 1 301 1 239 1 219 1 204 1 
181 1 281 1 241 1 61 1 
54 1 29 1 15 1 81 1 181 1 281 1 61 1 
75 1 15 1 72 1 
109 1 54 1 66 1 29 1 15 3 90 1 81 3 261 1 24 2 181 1 281 1 61 1 
54 1 88 1 67 1 29 1 15 2 81 2 181 1 281 1 61 1 
89 1 29 1 54 1 236 1 15 1 296 1 297 1 81 1 261 1 281 1 128 1 
54 1 29 1 15 1 81 1 261 1 281 1 61 1 
54 1 29 1 15 1 81 1 261 1 181 1 61 2 
29 2 69 1 229 1 54 2 15 2 81 2 261 1 217 1 281 1 61 1 
116 1 67 2 29 1 192 1 54 1 235 1 15 3 297 1 81 3 261 1 181 1 281 2 61 1 
89 1 67 1 29 1 136 1 10 1 54 1 176 1 236 1 15 2 81 2 261 1 181 1 281 1 61 1 128 2 
88 1 28 1 67 2 29 2 54 2 235 1 15 4 297 1 81 4 261 1 181 1 281 2 61 1 
54 1 29 1 15 1 81 1 261 1 181 1 281 1 61 1 
67 2 29 1 90 1 94 1 109 1 54 1 235 1 15 4 297 1 81 4 24 1 181 2 281 3 61 2 
67 1 29 1 153 1 54 1 15 2 81 2 261 1 181 1 281 1 126 1 302 1 61 1 
29 1 90 2 109 1 54 1 15 3 124 1 81 3 261 1 24 2 181 1 281 1 61 1 
187 1 18 2 281 2 63 1 
54 1 29 1 15 1 171 1 81 1 261 1 
54 1 67 1 29 1 15 2 81 2 261 1 181 1 192 1 281 1 61 1 
178 1 
54 1 29 1 15 1 81 1 261 1 181 1 281 1 61 1 
54 1 67 1 29 1 15 3 81 3 261 1 24 1 192 1 181 1 281 1 61 1 
235 1 297 1 94 1 281 1 
281 1 61 1 

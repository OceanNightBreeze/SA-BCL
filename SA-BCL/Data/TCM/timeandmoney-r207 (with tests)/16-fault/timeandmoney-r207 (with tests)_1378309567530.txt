#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (14,234) (14,234) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (14,234) (14,234) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (14,234) (14,234) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (14,234) (14,234) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (16,329) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (16,329) 340 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (16,329) 340 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (235,291,323) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (235,291,323) 148 356 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (235,291,323) 148 12 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (235,291,323) (235,291,323) 103 330 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (136,150) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 47 183 (55,223) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 47 183 (128,217) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (235,291,323) 148 132 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 1 87 1 329 1 212 1 234 1 125 1 240 1 7 1 160 1 41 1 14 1 176 1 46 1 
143 1 87 1 329 1 212 1 234 1 125 1 240 1 7 1 160 1 41 1 14 1 176 1 46 1 
143 1 87 1 329 1 212 1 234 1 125 1 240 1 7 1 160 1 41 1 14 1 176 1 46 1 
143 1 87 1 329 1 212 1 234 1 125 1 240 1 7 1 160 1 41 1 14 1 176 1 46 1 
160 4 46 1 143 1 87 1 212 4 34 1 290 2 61 1 179 1 319 2 265 3 38 1 240 1 18 1 97 3 7 1 232 1 283 1 
52 1 160 2 46 1 176 1 3 1 143 1 212 2 153 1 38 1 154 1 240 1 18 1 97 1 7 1 283 1 41 1 
143 1 212 1 16 1 7 1 160 1 46 1 
143 1 212 2 16 1 265 1 158 1 7 1 160 2 340 1 46 1 
143 1 212 2 16 1 265 1 158 1 7 1 160 2 340 1 46 1 
104 1 268 1 222 1 
107 1 268 1 299 2 
96 2 211 2 167 2 36 1 139 2 84 2 101 2 352 1 
63 1 343 1 21 1 312 2 167 2 116 1 245 1 223 1 352 1 351 2 191 1 192 1 249 1 96 3 302 2 139 2 229 1 100 1 101 2 126 1 53 1 129 1 84 3 175 2 15 1 261 1 263 1 211 2 109 1 307 1 36 1 35 1 111 1 295 2 183 1 341 1 184 1 
96 1 211 1 167 1 139 1 159 1 84 1 221 1 101 1 352 1 275 1 
96 1 297 1 235 1 167 1 291 1 83 1 190 1 84 1 221 1 
96 1 297 1 211 1 235 1 167 1 139 1 83 1 84 1 221 1 101 1 
323 1 271 1 165 1 117 1 79 1 
202 1 268 1 323 2 165 1 222 1 335 1 117 2 79 1 
323 1 165 1 117 1 
167 1 159 1 84 1 117 1 275 1 352 1 96 1 211 1 323 1 139 1 339 1 221 1 79 1 101 1 
268 1 
202 1 267 1 268 1 323 2 165 1 222 1 117 2 79 1 
202 1 0 1 187 1 268 1 54 2 346 1 256 1 188 1 45 1 117 5 170 2 227 1 250 1 280 1 323 5 165 2 222 1 79 2 51 2 
36 1 104 1 
167 1 53 1 129 1 116 1 223 1 245 1 84 2 175 1 289 1 351 1 96 2 263 1 211 1 307 1 308 1 139 1 295 1 183 1 184 1 201 1 
167 2 305 1 84 2 96 2 211 1 36 2 292 1 139 1 101 1 
123 1 150 1 201 1 
53 1 129 1 116 1 245 1 223 1 84 1 175 1 351 1 96 1 263 1 307 1 36 1 164 1 295 1 183 1 184 1 
167 5 190 1 305 1 207 1 84 5 289 1 96 5 211 4 172 1 36 1 308 2 139 4 251 1 101 1 
96 2 211 2 167 2 285 1 139 2 159 1 84 2 221 1 
96 3 211 3 167 3 36 1 308 1 139 3 84 3 101 1 
96 1 211 1 167 1 139 1 159 1 84 1 221 1 
96 1 211 1 167 1 292 1 139 1 305 1 84 1 221 1 101 1 
297 1 356 1 235 1 167 2 148 1 83 1 305 1 84 2 289 1 96 2 211 2 308 1 139 2 221 1 101 1 
96 2 211 1 167 2 36 1 172 1 308 1 139 1 190 1 84 2 
297 1 235 1 167 1 148 1 12 1 83 1 84 1 289 1 96 1 211 1 308 1 139 1 221 1 
167 2 305 1 150 1 84 2 96 2 211 2 308 1 139 2 101 1 201 1 
53 1 116 1 129 1 245 1 223 1 84 1 175 1 351 1 96 1 263 1 307 1 36 1 295 1 183 1 184 1 
53 1 128 1 129 1 245 1 84 1 175 1 351 1 96 1 263 1 119 1 307 1 36 1 295 1 183 1 184 1 
21 1 312 2 136 1 150 2 273 1 191 1 192 1 4 1 249 2 195 1 302 4 326 1 99 1 100 1 199 1 201 2 123 2 85 1 15 1 109 1 180 1 341 2 
96 1 297 1 211 1 167 1 285 1 139 1 84 1 221 1 
257 1 33 1 
257 1 33 1 
284 1 338 1 
284 1 338 1 
284 1 338 1 
257 1 259 1 33 1 
328 1 257 1 33 1 
26 1 11 1 284 1 257 2 338 1 33 2 
257 1 259 1 33 1 
257 1 259 1 33 1 
257 1 155 1 33 1 
257 1 155 1 33 1 
257 1 155 1 33 1 
296 1 135 1 167 2 189 1 270 1 117 1 96 2 48 1 120 1 320 1 323 1 139 2 281 1 328 1 10 1 257 1 84 2 288 1 33 1 177 1 211 2 110 1 36 1 213 1 
296 3 94 1 135 2 114 2 268 1 257 2 189 2 270 1 33 2 117 2 26 1 316 1 306 1 110 2 120 2 323 2 163 1 253 1 198 1 
87 1 240 1 283 1 
240 1 154 1 283 1 
87 2 22 1 240 3 154 1 350 1 42 1 
87 1 240 2 154 1 350 1 42 1 248 1 
87 1 240 2 154 1 350 2 42 1 
133 1 115 2 268 1 299 1 117 4 170 1 4 1 227 1 48 1 195 1 280 1 250 3 323 4 50 1 28 1 353 1 303 1 233 1 51 1 79 4 199 1 254 1 10 1 54 1 85 1 288 1 214 1 222 1 185 1 
187 1 268 5 349 1 271 5 299 9 117 8 170 2 4 3 227 6 195 3 280 1 250 8 323 8 50 6 28 1 303 3 79 7 51 2 199 3 122 1 157 1 254 2 54 2 106 1 85 3 238 1 288 4 107 3 214 2 131 1 216 5 165 5 222 1 185 6 
133 1 187 1 268 3 115 1 117 3 299 4 170 1 4 1 227 2 195 1 250 3 323 3 50 2 353 1 303 1 79 2 51 1 199 1 254 1 54 1 288 1 85 1 107 2 214 1 222 1 185 2 
133 1 187 1 268 4 115 2 349 1 299 7 117 4 170 1 4 2 227 4 195 2 250 5 323 4 50 4 353 1 303 2 51 1 79 3 199 2 254 1 54 1 106 1 288 2 85 2 107 3 214 1 131 1 222 1 185 4 
104 1 129 1 92 1 
13 1 129 1 
70 1 
263 1 53 1 129 1 
137 1 129 1 
53 1 129 1 
263 1 59 1 88 1 53 1 129 3 92 2 
345 1 68 2 287 1 85 1 151 3 130 1 249 2 171 1 195 1 173 1 302 6 78 1 6 1 182 2 360 1 355 1 341 4 
345 1 68 2 287 1 85 1 151 3 130 1 249 3 171 1 195 1 173 1 302 7 78 1 6 1 182 2 360 1 355 1 341 4 
345 1 358 1 68 2 287 1 85 1 151 3 130 1 249 2 171 1 195 1 173 1 302 6 78 1 6 1 182 2 360 1 355 1 341 4 
21 2 312 4 345 1 68 4 25 2 246 1 151 7 191 2 4 3 249 15 171 1 317 3 195 3 173 2 302 31 78 2 6 3 29 1 303 3 252 1 355 1 100 2 199 2 8 4 236 1 57 1 287 2 206 1 85 4 130 1 109 2 182 3 360 2 147 1 341 16 
312 4 21 2 345 1 24 1 68 4 25 1 191 2 151 5 249 5 171 1 195 1 76 1 173 1 302 10 78 1 6 1 100 2 355 1 287 1 85 1 109 2 182 2 341 5 360 1 
166 1 22 1 351 1 46 1 193 1 154 1 97 1 7 1 230 1 283 1 304 1 81 1 175 1 160 2 209 1 58 1 176 1 262 1 143 1 87 1 212 2 307 1 265 1 38 1 240 2 18 1 294 1 295 1 184 1 113 1 
166 1 22 1 272 1 351 1 46 1 193 1 154 1 97 1 230 1 283 1 327 1 304 1 9 1 81 1 175 1 160 3 58 1 176 1 143 1 87 1 212 3 307 1 265 2 38 1 240 2 18 1 294 1 295 1 184 1 113 1 
166 1 22 1 351 1 193 1 154 1 97 1 283 1 327 1 9 1 81 1 175 1 160 2 58 1 176 1 87 1 212 2 307 1 265 2 38 1 240 2 18 1 294 1 295 1 184 1 113 1 
166 2 53 1 344 1 81 2 129 1 245 1 160 1 175 1 272 1 176 2 46 1 351 1 225 1 226 1 143 1 193 2 212 1 307 1 152 1 17 1 140 1 295 1 184 1 
166 1 22 1 351 1 46 1 193 1 154 1 7 1 230 1 283 1 327 1 304 1 81 1 175 1 160 1 209 1 58 1 176 1 143 1 87 1 212 1 307 1 240 2 294 1 295 1 184 1 113 1 
242 1 
297 1 167 1 190 1 245 2 169 1 351 2 117 2 170 1 96 1 227 1 280 1 250 1 323 2 121 1 140 1 51 1 202 1 254 1 102 1 235 1 330 1 103 1 53 1 54 1 255 1 83 1 129 1 84 1 175 2 333 1 307 1 291 1 17 1 295 2 165 2 221 1 184 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
202 1 297 1 235 1 267 1 330 1 167 1 103 1 83 1 190 1 84 1 333 1 117 2 169 1 96 1 291 1 323 2 165 1 221 1 
297 1 235 1 330 1 167 1 103 1 54 1 83 1 190 1 84 1 333 1 117 1 169 1 170 1 96 1 291 1 280 1 323 1 221 1 51 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 330 1 235 1 167 1 103 1 83 1 190 1 84 1 333 1 117 1 169 1 96 1 291 1 323 1 221 1 
297 1 235 1 330 1 167 1 103 1 54 1 83 1 190 1 84 1 333 1 117 1 169 1 170 1 96 1 291 1 280 1 323 1 221 1 51 1 
21 1 312 2 345 1 68 1 150 1 191 1 151 1 192 1 249 2 171 1 195 1 302 5 355 1 100 1 201 1 123 1 104 1 287 1 85 1 15 1 109 1 180 1 36 2 182 1 360 1 341 3 
343 1 21 2 312 4 150 4 151 1 191 2 192 1 4 3 249 7 317 3 228 1 195 1 302 17 6 1 29 1 303 3 252 2 100 2 201 9 199 1 8 4 123 9 126 1 85 3 15 2 178 1 86 1 60 1 109 2 36 1 19 1 341 10 
343 1 21 1 312 2 167 1 237 1 150 1 84 1 289 1 15 1 178 1 191 1 192 1 96 1 211 1 109 1 279 1 308 1 302 1 139 1 341 1 100 1 
312 6 167 1 44 2 223 2 95 1 4 2 96 3 171 1 139 1 6 4 327 1 100 3 53 2 287 1 175 3 289 1 15 3 178 1 109 3 182 1 295 3 183 2 184 2 341 10 343 1 21 3 345 1 68 1 116 2 245 1 150 7 351 3 191 3 151 5 192 3 249 9 195 3 302 19 303 2 355 1 156 1 201 7 199 2 123 7 126 1 127 2 82 1 129 2 84 3 85 3 261 2 211 1 263 2 307 2 36 2 89 2 37 2 308 1 360 1 
21 2 312 4 343 1 167 1 149 1 245 2 351 8 191 2 73 1 192 2 96 1 249 1 139 1 302 2 196 1 140 1 327 1 100 2 124 1 126 1 53 2 105 1 129 3 84 1 175 8 15 2 262 1 211 1 108 1 109 2 307 2 180 1 35 2 308 1 17 1 144 1 295 7 184 2 341 1 
21 1 312 2 167 1 150 1 191 1 192 1 4 1 96 1 249 2 195 1 139 1 302 3 303 1 101 1 100 1 201 1 199 1 123 1 305 1 84 1 85 1 15 1 178 1 211 1 109 1 90 1 341 1 
312 2 21 1 123 1 150 1 85 1 15 1 151 1 191 1 192 1 4 1 109 1 180 1 302 2 6 1 99 1 100 1 341 2 201 1 
312 2 21 1 123 1 150 1 15 1 273 1 191 1 192 1 249 2 109 1 180 1 195 1 302 2 100 1 201 1 199 1 
312 2 21 1 123 2 150 2 85 1 15 1 151 1 191 1 192 1 4 1 249 2 109 1 180 1 195 1 302 4 6 1 303 1 100 1 341 2 199 1 201 2 
312 2 21 1 123 1 150 1 85 1 15 1 151 1 191 1 192 1 4 1 108 1 109 1 302 2 6 1 99 1 100 1 341 2 201 1 
312 2 21 1 123 1 150 1 15 1 273 1 191 1 192 1 249 2 108 1 109 1 195 1 302 2 100 1 201 1 199 1 
312 2 21 1 123 2 150 2 85 1 15 1 191 1 192 1 4 1 249 2 108 1 109 1 195 1 302 4 303 1 100 1 341 2 199 1 201 2 
312 2 21 1 123 2 150 2 85 1 15 1 151 1 191 1 192 1 4 1 249 2 109 1 195 1 302 4 6 1 303 1 100 1 341 2 199 1 201 2 
343 1 312 2 21 1 116 1 223 1 245 1 351 1 191 1 192 1 96 1 249 1 302 2 100 1 53 1 126 1 129 1 175 1 84 1 261 1 15 1 263 1 109 1 307 1 36 1 295 1 183 1 341 1 184 1 
343 1 312 2 21 1 245 1 351 1 191 1 192 1 96 1 249 1 119 1 302 2 27 1 100 1 53 1 126 1 128 1 129 1 175 1 84 1 15 1 263 1 109 1 307 1 36 1 295 1 183 1 341 1 184 1 
312 2 21 1 123 2 150 2 85 1 15 1 151 1 178 1 191 1 192 1 4 1 249 2 109 1 195 1 302 4 6 1 303 1 100 1 341 2 199 1 201 2 
312 2 21 1 116 1 223 1 150 2 351 1 151 1 191 1 4 1 192 1 249 2 96 1 195 1 302 4 6 1 303 1 100 1 199 1 201 2 123 2 53 1 127 1 129 1 85 1 175 1 84 1 261 1 15 1 262 1 263 1 109 1 307 1 295 1 183 1 341 2 184 1 
186 1 21 1 312 2 167 1 150 1 151 1 191 1 192 1 4 1 249 1 96 1 195 1 139 1 302 3 6 1 303 1 101 1 100 1 199 1 201 1 123 1 305 1 84 1 85 1 15 1 178 1 211 1 109 1 341 2 
21 4 312 8 266 1 243 1 23 1 345 2 168 4 68 5 25 2 224 1 191 4 151 12 4 6 74 1 249 27 75 1 171 2 317 4 76 1 195 7 302 57 6 7 354 1 29 3 303 6 252 2 355 2 100 4 200 2 199 5 8 5 286 1 287 2 85 8 109 4 337 1 310 1 182 2 19 1 43 1 360 2 20 1 342 1 341 30 
312 8 266 1 168 4 224 1 4 5 317 3 171 1 6 5 100 4 8 3 286 1 287 1 109 4 337 1 19 1 182 1 341 23 342 1 20 1 21 4 243 1 345 1 23 1 68 3 25 2 151 8 191 4 249 20 74 1 75 1 195 5 76 1 302 43 303 5 29 2 354 1 252 1 355 1 199 4 200 1 85 6 310 1 360 1 
21 2 312 4 266 1 243 1 345 1 168 4 68 2 25 1 224 1 191 2 151 7 4 6 74 1 249 22 75 1 171 1 317 3 195 6 76 1 302 46 6 5 354 1 29 2 303 6 252 2 355 1 100 2 199 5 200 1 8 4 286 1 287 1 85 7 109 2 337 1 310 1 182 1 19 1 360 1 20 1 342 1 341 24 
312 8 266 1 168 4 224 1 4 6 317 3 171 1 138 1 6 7 100 4 8 3 286 1 287 1 109 4 337 1 19 1 182 1 341 25 342 1 20 1 21 4 243 1 345 1 23 1 68 3 25 2 151 10 191 4 249 22 74 1 75 2 195 6 76 1 302 47 303 6 29 2 354 1 252 1 355 1 199 5 200 1 85 7 310 1 360 1 
21 3 312 6 266 1 243 1 168 4 68 1 25 2 224 1 151 3 191 3 4 3 74 1 249 12 75 1 317 2 195 2 76 1 302 26 6 2 354 1 29 2 303 3 100 3 200 2 199 2 8 2 286 1 85 3 109 3 337 1 310 2 20 1 342 1 341 14 
26 1 135 1 110 1 120 1 257 1 189 1 253 1 33 1 198 1 276 1 
328 1 177 1 
135 1 110 1 120 1 91 1 257 1 218 1 189 1 33 1 210 1 
49 1 259 1 
11 1 155 1 71 1 
296 2 94 1 135 1 114 1 268 1 257 1 270 1 189 1 33 1 117 1 26 1 316 1 110 1 120 1 323 1 163 1 253 1 198 1 
296 2 94 1 135 1 114 1 268 1 257 1 270 1 189 1 33 1 117 1 26 1 316 1 110 1 120 1 323 1 163 1 253 1 198 1 
296 2 94 1 135 1 114 1 268 1 257 1 270 1 189 1 33 1 117 1 26 1 316 1 110 1 120 1 323 1 163 1 253 1 198 1 
49 1 11 1 259 1 
49 1 11 1 259 1 
155 1 71 1 
11 1 155 1 71 1 
320 1 281 1 
296 1 114 1 135 1 167 2 189 1 117 1 96 2 48 1 120 1 320 1 323 1 281 1 139 2 79 1 328 1 10 1 56 1 257 1 84 2 288 1 33 1 177 1 211 2 110 1 36 1 213 1 163 1 
312 2 21 1 343 1 167 2 244 1 351 2 191 1 192 1 96 2 249 1 302 2 196 1 100 1 30 1 53 1 124 1 126 1 129 1 175 2 84 2 334 1 15 1 178 1 109 1 307 1 162 1 35 2 145 1 295 2 184 1 341 1 
22 1 175 2 351 2 142 1 262 1 87 1 193 1 278 1 307 1 240 2 154 1 62 1 294 1 283 1 295 2 327 1 184 1 304 1 113 1 
22 1 298 1 175 1 351 1 87 1 193 1 307 1 240 2 154 1 62 1 294 1 283 1 295 1 327 1 184 1 304 1 113 1 
53 1 129 1 245 1 332 1 175 1 351 1 142 1 225 1 193 1 307 1 17 1 295 1 140 1 184 1 
22 1 175 1 351 1 142 1 87 1 193 1 278 1 307 1 240 2 154 1 62 1 294 1 283 1 295 1 327 1 184 1 304 1 113 1 
219 1 
227 1 0 1 104 1 250 1 268 1 256 1 222 1 
65 1 268 2 299 1 117 1 170 1 227 1 250 1 280 1 323 1 77 1 51 1 202 1 54 1 107 1 336 1 165 1 222 1 
268 3 44 1 170 2 4 1 227 3 280 2 323 2 50 3 231 1 174 1 51 2 53 1 54 2 55 1 13 2 175 1 107 3 239 1 295 1 241 1 184 2 185 3 348 1 245 1 247 1 351 1 117 2 299 6 250 4 195 1 303 1 199 1 202 1 254 1 129 4 208 1 85 1 263 1 307 1 88 1 92 1 165 2 
93 1 266 1 243 1 268 4 117 1 299 4 170 2 118 1 4 2 227 5 317 1 250 8 280 2 195 2 323 1 322 2 50 4 354 1 29 1 303 2 51 2 199 2 202 1 254 1 8 1 102 1 54 2 286 1 85 2 107 2 146 1 165 1 20 1 222 2 185 4 
167 1 274 1 117 1 275 1 352 1 170 1 96 1 227 2 171 1 280 1 195 1 250 2 322 2 323 1 139 1 51 1 101 1 54 1 159 1 287 1 84 1 85 2 260 1 211 1 146 1 339 1 221 1 360 1 
0 1 54 1 268 1 256 1 170 1 227 1 280 1 250 1 51 1 222 1 
268 5 44 1 85 2 299 10 4 2 227 5 107 5 195 2 250 5 50 5 146 1 303 2 185 5 199 2 
202 1 268 1 323 1 165 1 222 1 117 1 
187 1 66 1 1 2 245 2 2 1 351 4 117 3 170 2 227 2 280 1 250 2 323 3 121 1 140 1 197 1 51 2 202 2 254 2 102 2 53 2 54 2 255 1 129 2 175 4 263 1 161 1 307 2 359 1 215 1 17 1 295 4 165 4 184 3 112 1 
21 1 312 2 167 2 116 1 245 1 223 1 351 1 352 1 191 1 192 1 249 1 96 3 302 1 139 2 229 1 100 1 101 2 126 1 53 1 129 1 175 1 84 3 261 1 15 1 211 2 263 1 109 1 307 1 36 1 295 1 183 1 184 1 
254 1 102 1 54 1 268 4 299 4 170 1 107 2 227 2 280 1 250 2 322 1 50 2 182 1 51 1 222 2 185 2 
313 1 135 1 189 1 
277 1 135 1 320 1 189 1 198 1 
313 1 135 1 189 1 
313 1 135 1 189 1 
301 1 135 1 189 1 
301 1 135 1 189 1 
301 1 135 1 189 1 
135 1 189 1 
257 1 33 1 
21 2 312 4 266 1 243 1 25 1 151 1 191 2 4 3 249 5 317 1 76 1 195 1 302 14 6 1 29 1 303 3 354 1 252 1 100 2 199 1 8 2 286 1 85 3 109 2 341 9 20 1 
21 3 312 6 266 1 243 1 25 1 191 3 151 2 4 3 249 5 317 1 76 1 195 1 302 14 6 2 354 1 29 1 303 3 252 1 100 3 141 1 199 1 8 2 286 1 85 3 109 3 20 1 341 9 
21 3 312 6 266 1 243 1 345 1 68 2 25 1 191 3 151 3 4 2 249 9 171 1 317 1 76 1 195 3 302 18 6 1 29 1 303 2 354 1 355 1 100 3 141 1 199 2 8 1 286 1 287 1 85 3 109 3 182 1 360 1 20 1 341 9 
21 3 312 6 266 1 243 1 345 1 68 1 25 1 191 3 151 3 4 2 249 6 171 1 317 1 76 1 195 2 302 16 6 2 29 1 303 2 354 1 355 1 100 3 141 1 199 1 8 1 286 1 287 1 85 3 109 3 182 1 360 1 341 10 20 1 
21 2 312 4 266 1 243 1 25 1 151 1 191 2 4 3 249 5 317 1 76 1 195 1 302 14 6 1 29 1 303 3 354 1 252 1 100 2 199 1 8 2 286 1 85 3 109 2 341 9 20 1 
21 1 312 2 266 1 243 1 191 1 151 1 4 2 249 6 317 1 76 1 195 2 302 12 6 1 29 1 303 2 354 1 100 1 199 2 8 1 286 1 85 2 109 1 341 6 20 1 
21 4 312 8 266 1 243 1 345 1 68 2 25 2 191 4 151 4 4 2 249 7 171 1 317 1 76 1 195 2 302 17 6 2 354 1 29 1 303 2 355 1 100 4 141 1 199 1 8 1 286 1 287 1 85 3 109 4 182 1 360 1 20 1 341 10 
21 3 312 6 266 1 243 1 23 1 25 1 151 2 191 3 4 2 249 4 317 1 76 1 195 1 302 11 6 2 29 1 303 2 354 1 100 3 199 1 8 1 286 1 85 2 109 3 341 7 20 1 
345 2 68 3 287 3 85 1 151 6 249 4 171 1 195 1 302 7 6 3 355 1 360 3 341 3 
21 4 312 8 266 1 243 1 345 1 23 1 68 2 25 2 191 4 151 3 4 2 249 7 171 1 317 1 76 1 195 2 302 17 6 1 354 1 29 1 303 2 355 1 100 4 199 1 8 1 286 1 287 1 85 3 109 4 182 1 360 1 20 1 341 10 
312 4 21 2 345 1 68 1 25 1 287 1 85 1 151 2 191 2 249 3 109 2 171 1 195 1 302 7 182 1 6 1 341 4 100 2 355 1 360 1 
104 1 345 1 68 1 287 1 85 1 151 1 249 2 171 1 195 1 302 5 182 1 355 1 360 1 341 3 
312 2 21 1 85 1 191 1 4 1 249 2 109 1 195 1 302 4 303 1 100 1 341 2 141 1 199 1 
8 2 85 1 4 1 249 2 317 1 302 5 29 1 303 1 252 1 341 3 
312 4 21 2 345 1 68 4 25 2 151 9 191 2 4 2 249 16 171 2 317 2 195 5 302 32 6 5 303 2 252 1 355 1 100 2 199 2 8 2 287 3 206 1 85 5 260 1 60 1 109 2 182 1 19 1 360 3 341 16 
249 1 8 1 302 1 
317 1 302 1 341 1 
21 1 312 2 44 1 85 1 191 1 151 1 4 1 249 3 109 1 195 1 302 6 6 1 303 1 100 1 341 3 141 1 199 1 
21 1 312 2 266 1 243 1 191 1 151 1 4 2 249 6 317 1 76 1 195 2 302 12 6 1 29 1 303 2 354 1 100 1 199 2 8 1 286 1 85 2 109 1 341 6 20 1 
68 1 287 1 85 1 151 2 249 3 171 1 195 1 302 6 6 1 341 3 360 1 
312 2 21 1 345 1 68 1 25 1 287 1 206 1 151 2 191 1 249 2 109 1 302 3 6 1 341 1 360 1 100 1 355 1 
21 1 312 2 68 3 287 2 85 2 260 1 191 1 151 5 249 5 109 1 171 1 76 1 195 2 302 10 6 2 100 1 360 2 341 5 
312 2 21 1 85 1 191 1 151 1 4 1 109 1 76 1 302 2 6 1 100 1 341 2 
312 2 21 1 85 1 151 1 191 1 4 1 249 2 109 1 195 1 76 1 302 4 6 1 303 1 100 1 341 2 199 1 
312 6 21 3 23 1 68 1 25 1 206 1 287 1 191 3 151 2 249 2 109 3 76 1 302 3 6 1 100 3 360 1 341 1 
21 5 312 10 345 1 23 1 68 3 25 2 246 1 191 5 151 10 4 4 249 20 171 2 317 4 76 1 195 6 302 40 6 7 29 1 303 4 252 1 355 1 100 5 141 1 199 4 8 4 57 1 287 3 206 1 85 6 109 5 182 1 19 1 360 3 147 1 341 20 
96 1 167 1 36 1 172 1 282 1 190 1 84 1 
134 1 167 1 347 1 190 1 32 1 84 1 72 1 96 1 36 1 172 1 282 1 40 1 
307 1 53 1 104 1 17 1 129 1 245 1 140 1 175 1 295 1 184 1 351 1 
167 1 53 1 129 1 245 1 223 1 84 2 175 1 351 1 96 2 263 1 211 1 307 1 36 1 308 1 139 1 295 1 183 1 184 1 
297 1 167 1 53 2 1 1 83 1 129 3 223 1 84 1 175 1 351 1 47 1 137 1 96 1 263 2 211 1 307 1 308 1 139 1 295 1 183 1 221 1 184 1 
297 1 167 1 53 2 1 1 128 1 83 1 129 3 84 1 175 1 351 1 47 1 137 1 96 1 263 2 211 1 307 1 308 1 139 1 295 1 183 1 221 1 184 1 
167 1 1 1 268 1 314 1 352 1 275 1 351 1 117 2 47 1 96 1 137 1 323 2 139 1 174 1 101 1 53 1 13 1 129 4 159 1 84 1 175 1 211 1 263 1 307 1 217 1 92 1 295 1 339 1 165 1 221 1 184 1 222 1 
167 1 1 1 268 1 352 1 275 1 351 1 117 2 47 1 96 1 137 1 323 2 139 1 174 1 101 1 53 1 55 1 13 1 129 4 159 1 84 1 175 1 211 1 263 1 307 1 92 1 295 1 339 1 165 1 221 1 184 1 222 1 
307 1 105 1 175 1 295 1 184 1 351 1 
149 1 53 2 105 1 129 3 245 2 205 1 175 7 351 7 262 1 73 1 263 1 88 1 307 2 35 1 359 1 196 1 144 1 295 6 327 1 197 1 184 3 
312 4 21 2 167 1 345 1 68 1 116 1 223 1 150 1 351 1 151 1 191 2 192 2 249 2 96 2 171 1 195 1 302 5 139 1 355 1 100 2 201 1 30 1 123 1 53 1 127 1 129 1 287 1 85 1 84 2 175 1 15 2 261 1 178 1 262 1 263 1 211 1 109 2 307 1 36 2 89 1 308 1 182 1 295 1 183 1 341 3 360 1 184 1 
0 1 167 1 268 2 275 1 170 2 227 5 96 1 171 1 280 2 323 3 322 2 139 1 231 1 174 1 51 2 101 1 55 1 54 2 13 1 287 1 175 1 146 1 295 1 339 1 112 1 245 1 247 1 351 1 117 3 352 1 195 2 250 4 79 1 202 1 256 1 129 2 159 1 84 1 208 1 85 2 260 1 211 1 92 1 165 2 221 1 222 2 360 1 
53 1 105 1 129 2 175 2 351 2 262 1 239 1 263 1 88 1 307 1 92 1 295 2 184 2 
67 1 53 1 129 1 245 1 175 4 351 4 262 1 307 1 17 1 324 1 295 4 140 1 184 1 
66 1 53 1 1 1 129 1 175 2 95 1 351 2 263 1 307 1 359 1 215 1 295 2 197 1 184 2 
307 1 240 1 154 1 245 1 283 1 175 1 295 1 184 1 351 1 113 1 
244 1 53 1 129 1 175 2 351 2 262 1 307 1 196 1 295 2 327 1 184 1 
67 1 53 2 1 1 129 3 245 1 175 5 351 5 262 1 73 1 307 2 17 1 196 1 144 1 140 1 295 4 184 2 
67 1 53 2 1 1 129 3 245 1 175 5 351 5 262 1 5 1 307 2 17 1 196 1 144 1 140 1 295 4 184 2 
167 1 53 1 128 1 129 1 245 1 84 2 175 1 351 1 96 2 263 1 211 1 307 1 36 1 308 1 139 1 295 1 183 1 184 1 
53 1 1 1 129 1 205 1 175 1 351 1 263 1 88 1 307 1 359 1 295 1 197 1 184 2 
36 1 39 1 258 1 311 1 220 1 
297 1 235 1 357 1 148 1 83 1 258 1 117 1 321 1 323 1 39 1 311 1 220 1 221 1 79 1 132 1 
167 1 84 1 334 1 96 1 162 1 39 1 311 1 145 1 220 1 
321 1 220 1 132 1 
104 1 38 1 18 1 97 1 
143 1 212 1 38 1 18 1 97 1 160 1 46 1 
212 1 81 1 176 1 
52 2 143 1 212 3 194 1 38 1 181 1 18 1 97 1 7 1 160 3 46 1 300 1 
143 1 212 2 290 1 265 1 38 1 18 1 97 1 160 2 46 1 
143 1 87 1 212 1 179 1 319 1 240 1 97 1 7 1 283 1 160 1 46 1 
143 1 212 1 18 1 97 1 7 1 160 1 46 1 
143 1 212 1 38 1 18 2 7 1 160 1 46 1 
80 1 331 1 160 2 46 2 315 1 143 2 212 2 18 1 97 1 7 1 
143 1 64 1 212 3 319 1 265 2 309 1 38 1 18 1 97 2 7 1 232 1 160 3 46 1 
22 1 31 1 160 2 46 1 143 1 87 1 212 2 265 1 38 1 154 1 240 2 18 1 97 1 7 1 283 1 
143 2 212 4 290 1 34 1 319 1 265 2 38 1 18 1 97 2 7 1 232 1 160 4 46 2 
143 1 212 1 38 1 18 1 97 1 7 1 160 1 46 1 
52 1 160 4 46 1 300 1 143 1 212 4 318 1 319 1 265 2 181 1 38 2 18 2 97 3 232 1 
203 1 143 1 212 2 264 1 265 1 158 1 38 1 18 1 97 1 7 1 160 2 46 1 
52 2 69 1 160 3 46 1 300 1 143 1 212 3 181 2 38 1 18 1 97 1 7 1 
269 1 325 2 293 1 97 2 
143 1 212 1 204 1 7 1 160 1 46 1 
143 1 64 1 212 2 265 1 38 1 18 1 97 1 7 1 160 2 46 1 
98 1 
143 1 212 1 38 1 18 1 97 1 7 1 160 1 46 1 
52 1 143 1 64 1 212 3 265 1 38 1 18 1 97 1 7 1 160 3 46 1 
318 1 319 1 97 1 232 1 
18 1 97 1 

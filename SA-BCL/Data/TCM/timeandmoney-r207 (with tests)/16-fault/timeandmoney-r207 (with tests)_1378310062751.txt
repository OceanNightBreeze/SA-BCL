#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) (76,156) (76,156) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) (76,156) (76,156) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) (76,156) (76,156) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) (76,156) (76,156) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 146 (6,33,192,208) 307 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) 314 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 146 293 (43,354) 314 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 266 321 271 41 327 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 36 62 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (55,361) 253 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (55,361) 5 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (55,361) 5 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (55,361) 253 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 266 321 271 41 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 215 187 250 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 215 187 250 53 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 146 293 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 146 (6,33,192,208) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 146 293 144 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 146 293 316 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 26 1 79 1 224 2 146 1 38 1 300 2 63 2 91 2 201 1 354 1 
293 1 167 1 26 1 79 1 224 2 199 1 38 1 156 1 214 1 63 3 91 2 105 1 201 2 43 1 118 1 146 1 323 1 300 3 76 1 354 1 
293 1 167 1 26 1 79 1 224 2 199 1 38 1 156 1 214 1 63 3 91 2 105 1 201 2 43 1 118 1 146 1 323 1 300 3 76 1 354 1 
293 1 167 1 26 1 79 1 224 2 199 1 38 1 156 1 214 1 63 3 91 2 105 1 201 2 43 1 118 1 146 1 323 1 300 3 76 1 354 1 
293 1 167 1 26 1 79 1 224 2 199 1 38 1 156 1 214 1 63 3 91 2 105 1 201 2 43 1 118 1 146 1 323 1 300 3 76 1 354 1 
26 1 307 1 79 1 6 1 224 1 146 1 38 1 300 2 190 1 63 2 91 1 218 1 
167 1 79 1 224 1 38 1 330 1 63 2 214 1 91 1 106 1 281 1 201 1 118 1 111 1 97 1 323 1 300 2 
293 1 26 1 314 1 79 1 224 2 38 1 63 3 91 2 192 1 201 1 146 1 300 3 218 1 354 1 
293 1 26 1 314 1 79 1 224 2 38 1 63 3 91 2 192 1 201 1 146 1 300 3 218 1 354 1 
89 1 117 1 180 1 181 1 4 1 370 1 113 1 69 1 46 1 186 1 262 1 364 1 325 1 210 1 
278 1 
113 1 122 1 155 1 261 1 186 2 235 1 180 2 278 1 
27 1 171 1 155 2 213 1 191 2 93 2 180 5 344 1 83 2 58 1 113 2 122 1 350 1 186 5 47 1 75 1 235 1 136 1 278 1 
50 1 122 1 278 1 
116 2 54 1 278 1 
89 2 46 2 364 2 117 2 181 1 345 1 4 2 210 2 
89 3 211 1 168 2 356 1 189 1 139 2 31 2 117 3 174 1 4 2 120 1 217 1 147 2 9 1 364 2 219 2 150 1 277 1 276 1 194 1 100 1 193 1 12 1 195 1 245 1 338 1 179 1 181 1 19 1 345 1 347 1 260 1 46 2 21 1 77 1 284 1 210 2 
89 1 370 1 69 1 46 1 364 1 117 1 325 1 181 1 4 1 210 1 
89 2 215 1 117 2 4 2 142 1 122 1 364 1 220 1 278 1 39 1 249 1 180 1 129 1 181 1 370 1 69 1 46 1 186 1 262 1 325 2 210 1 
89 2 117 2 4 2 142 1 122 1 364 2 220 1 278 1 39 1 249 1 180 2 181 1 370 1 69 1 46 2 186 2 262 1 325 2 210 2 
119 1 113 1 155 1 186 1 180 1 
87 1 113 1 122 1 155 1 186 2 235 1 180 2 278 1 
155 1 186 1 180 1 
89 2 117 2 320 1 4 2 345 2 231 1 46 1 364 1 210 1 
25 1 85 1 8 1 
89 1 168 1 211 1 356 1 139 1 117 1 19 1 345 1 120 1 260 1 217 1 372 1 219 1 150 1 276 1 193 1 
50 1 345 1 
89 2 211 1 168 1 356 1 139 1 117 2 182 1 173 1 19 1 4 1 120 1 260 1 8 1 46 1 217 1 219 1 150 1 276 1 210 1 193 1 
89 5 215 1 248 1 117 5 320 1 173 2 182 1 4 5 345 1 46 4 364 1 263 1 187 1 210 4 
89 2 370 1 46 2 48 1 117 2 325 1 4 2 210 2 
89 3 46 3 364 1 117 3 173 1 345 1 4 3 210 3 
89 1 370 1 46 1 117 1 325 1 4 1 210 1 
89 1 231 1 46 1 364 1 117 1 320 1 325 1 4 1 210 1 
89 4 188 1 90 1 189 1 139 1 4 3 142 1 9 1 147 2 150 1 193 1 195 1 12 1 245 1 249 1 19 1 345 1 347 1 260 1 114 1 77 1 210 3 168 1 211 1 356 1 31 1 117 4 173 1 120 1 217 1 364 2 219 1 220 1 276 1 277 1 39 1 320 1 181 1 180 1 179 1 182 1 46 3 186 1 284 1 325 2 
89 2 46 1 215 1 117 2 173 1 345 1 187 1 4 2 210 1 
89 3 188 1 212 1 39 1 320 1 117 3 249 1 180 1 182 1 173 2 4 3 142 1 46 3 186 1 364 1 325 1 220 1 278 1 210 3 
89 2 85 1 8 1 46 2 364 1 117 2 320 1 173 1 4 2 210 2 
89 1 168 1 211 1 356 1 139 1 117 1 19 1 345 1 120 1 260 1 217 1 219 1 150 1 276 1 193 1 
89 1 168 1 211 1 356 1 139 1 117 1 161 1 19 1 345 1 120 1 260 1 121 1 219 1 150 1 276 1 
25 2 137 1 31 4 216 1 85 2 8 2 147 2 12 1 195 1 103 1 154 1 245 1 225 1 280 1 338 2 179 1 203 1 347 1 232 1 283 1 284 1 77 2 326 1 266 1 
89 1 46 1 39 1 117 1 48 1 325 1 4 1 210 1 
282 2 361 1 298 1 70 1 200 2 55 1 
282 1 200 1 162 1 
282 1 200 1 
282 1 200 1 
298 1 70 1 
298 1 70 1 
298 1 70 1 
282 1 200 1 295 1 
282 1 200 1 295 1 
282 1 200 1 295 1 
230 1 282 1 200 1 
230 1 282 1 200 1 
230 1 282 1 200 1 
89 2 51 1 117 2 306 1 4 2 290 1 242 1 10 1 200 1 180 1 342 1 162 1 345 1 255 1 282 1 112 1 132 1 88 1 371 1 46 2 186 1 207 1 74 1 210 2 
126 1 1 1 200 2 55 1 92 1 82 1 180 2 306 2 342 3 282 2 204 2 112 2 132 2 311 1 242 1 186 2 10 2 124 1 278 1 
97 1 309 2 214 2 105 1 166 1 
323 1 214 1 105 1 
97 1 323 1 214 1 
95 1 97 1 309 1 214 3 166 1 105 2 
66 1 97 1 309 1 214 2 166 1 105 1 
51 1 27 1 116 1 191 1 93 1 56 1 83 1 240 1 122 1 292 1 278 1 336 1 15 1 154 1 337 1 280 1 321 1 180 4 65 2 255 1 296 1 88 1 113 4 186 4 350 3 75 1 326 1 266 1 78 1 
89 1 117 1 4 1 119 1 122 1 364 1 365 1 278 1 155 1 180 2 181 1 184 1 370 1 113 2 165 1 69 1 46 1 186 2 262 1 325 1 210 1 
116 4 54 2 191 1 93 1 83 1 56 2 240 1 122 1 278 3 336 1 154 1 15 2 337 1 280 1 321 1 180 3 65 1 255 1 113 2 186 3 350 3 75 2 326 1 136 1 266 1 78 1 
287 1 270 1 116 8 54 4 191 1 93 1 56 4 83 1 240 1 122 1 278 5 336 1 154 2 15 4 337 1 280 2 321 2 180 4 254 1 65 2 255 2 113 3 186 4 350 5 75 4 326 2 136 1 266 2 78 1 
73 1 
50 1 150 1 333 1 
286 1 150 1 
211 1 260 1 150 1 
313 1 150 1 
211 1 150 1 
211 1 260 1 150 3 35 1 303 1 333 2 
178 1 13 1 238 1 198 1 223 1 137 3 280 1 138 2 338 4 288 1 31 7 319 1 297 1 232 2 175 1 77 3 326 1 24 1 
137 2 154 1 280 2 138 1 338 7 288 1 31 11 40 1 321 2 41 1 257 2 271 1 297 1 232 1 34 1 351 2 77 4 326 1 266 2 24 2 327 1 
238 1 137 4 138 2 81 1 331 1 31 9 288 1 147 4 175 1 12 2 195 2 178 1 13 1 14 1 223 1 245 2 280 1 338 5 347 2 297 1 232 3 77 4 326 1 24 1 
178 1 13 1 238 1 223 1 137 3 280 1 138 2 338 4 288 1 31 7 319 1 297 1 232 2 175 1 77 3 326 1 24 1 
178 1 13 1 238 1 223 1 137 3 280 1 138 2 338 4 288 1 31 7 319 1 297 1 232 2 175 1 77 3 326 1 24 1 
168 1 211 1 356 1 29 1 139 1 91 1 32 1 120 1 272 1 7 2 243 2 219 1 150 1 152 1 276 1 37 2 224 1 63 1 64 1 201 2 300 1 352 1 234 1 
168 1 268 1 356 1 139 1 214 2 91 1 304 1 95 1 97 1 7 1 334 1 243 1 219 1 276 1 221 1 37 1 224 1 38 1 63 1 105 1 201 1 205 1 67 1 323 1 300 1 71 1 
168 1 79 1 356 1 330 1 139 1 214 2 91 1 304 1 95 1 97 1 7 1 334 1 243 1 218 1 219 1 276 1 221 1 37 1 224 1 38 1 63 2 105 1 281 1 201 1 205 1 67 1 323 1 300 2 71 1 115 1 
168 1 79 1 268 1 356 1 330 1 139 1 214 2 91 1 304 1 95 1 97 1 7 1 334 1 243 1 219 1 218 2 276 1 221 1 37 1 224 1 63 3 105 1 281 1 201 1 205 1 67 1 323 1 300 3 352 1 373 1 
168 1 79 1 268 1 356 1 330 1 139 1 214 2 95 1 97 1 7 1 243 1 219 1 218 2 276 1 221 1 37 1 63 2 105 1 281 1 201 1 205 1 67 1 323 1 300 2 373 1 
183 1 
168 2 27 1 211 2 356 3 29 1 140 1 139 2 191 1 93 1 83 1 94 1 240 1 120 2 219 2 150 2 335 1 276 2 11 1 155 2 180 2 229 1 299 1 260 1 186 2 350 1 75 1 234 1 264 1 235 1 
329 1 155 2 269 1 180 2 228 1 20 1 206 1 261 1 186 2 275 1 235 1 
329 1 20 1 275 1 186 1 269 1 107 1 180 1 322 1 228 1 
329 1 155 2 269 1 107 1 180 2 322 1 228 1 20 1 348 1 206 1 261 1 186 2 275 1 235 1 
89 1 329 1 191 1 54 2 93 1 3 1 4 1 155 7 294 1 107 3 108 1 202 2 109 1 20 1 206 4 348 4 69 1 261 1 350 1 262 1 72 1 75 1 209 2 267 2 210 1 27 1 269 1 117 1 83 1 122 1 275 1 364 1 278 1 180 4 181 1 322 3 228 1 370 1 324 1 133 2 46 1 186 4 235 3 325 1 49 1 
329 1 27 1 269 1 116 2 191 1 54 2 93 1 83 1 122 1 275 1 278 2 155 4 294 1 158 1 107 2 180 3 322 2 202 2 228 1 20 1 206 2 348 2 133 2 186 3 350 1 72 1 75 1 235 2 209 2 267 2 
27 1 329 1 269 1 54 2 191 1 93 1 3 1 83 1 122 1 275 1 278 1 155 4 294 1 107 2 180 3 322 2 202 2 228 1 109 1 20 1 206 2 348 2 324 1 133 2 186 3 350 1 72 1 75 1 235 2 209 2 267 2 
27 1 329 1 269 1 54 2 191 1 93 1 3 1 83 1 122 1 275 1 278 1 155 4 294 1 107 2 180 3 322 2 202 2 228 1 109 1 20 1 206 2 348 2 324 1 133 2 186 3 350 1 72 1 75 1 235 2 209 2 267 2 
27 1 329 1 28 1 116 2 269 1 191 1 93 1 3 1 83 1 122 1 275 1 148 1 278 1 155 4 294 1 226 2 160 1 107 2 180 3 322 2 202 2 228 1 20 1 130 2 206 2 348 2 133 2 186 3 350 1 75 1 235 2 
329 1 27 1 269 1 54 2 191 1 93 1 3 1 83 1 122 1 275 1 278 1 294 1 155 5 107 3 108 1 180 3 322 3 202 2 228 1 109 1 20 1 206 3 348 3 133 2 324 1 186 3 350 1 72 1 75 1 235 2 209 2 267 2 
329 1 27 1 269 1 54 2 191 1 93 1 3 1 83 1 122 1 275 1 278 1 294 1 155 5 107 3 108 1 180 3 322 3 202 2 228 1 109 1 20 1 206 3 348 3 133 2 324 1 186 3 350 1 72 1 75 1 235 2 209 2 267 2 
329 1 27 1 269 1 116 2 191 1 93 1 83 1 122 1 275 1 148 1 278 1 155 4 294 1 158 1 226 2 107 2 180 3 322 2 202 2 228 1 20 1 130 2 206 2 348 2 133 2 186 3 350 1 75 1 235 2 
89 1 0 1 168 7 211 2 268 1 356 2 29 1 139 8 31 2 117 1 173 1 57 1 174 2 4 1 216 1 120 2 308 1 147 4 219 8 150 3 276 2 277 1 194 1 12 2 195 2 197 1 245 2 338 1 179 2 18 1 347 2 44 1 46 1 233 1 284 2 77 1 234 1 115 1 210 1 
89 1 25 1 137 1 31 3 117 1 4 1 85 1 8 1 147 2 364 1 12 1 195 1 245 1 154 1 280 1 339 1 338 1 320 1 321 1 179 1 256 1 347 1 232 1 46 1 284 1 77 2 326 1 266 1 210 1 
195 1 12 1 178 1 13 1 50 1 25 1 238 1 223 1 137 2 245 1 138 1 280 1 338 3 31 6 179 1 345 2 216 1 347 1 85 1 232 2 8 1 147 2 175 1 77 3 284 1 326 1 
25 11 137 2 31 14 85 4 8 11 34 1 147 4 176 1 151 1 277 1 194 1 12 2 195 2 245 2 154 1 280 2 339 1 338 8 40 1 247 1 321 2 179 2 345 1 347 2 257 3 297 1 232 1 351 3 77 6 284 1 353 1 326 1 266 2 
89 2 211 1 168 1 356 1 139 1 31 2 117 2 173 1 4 1 359 1 120 1 85 1 217 1 147 2 219 1 150 1 276 1 277 1 193 1 194 1 12 1 195 1 245 1 339 1 338 1 179 1 182 1 19 1 345 1 347 1 260 1 46 1 45 1 372 1 284 1 77 1 22 1 210 1 
89 3 238 1 137 5 189 2 139 1 4 1 8 6 147 6 150 2 194 1 193 2 195 3 12 3 13 1 196 1 245 3 154 2 339 1 338 11 19 2 345 1 347 3 297 1 260 2 68 2 349 2 114 1 77 11 265 2 266 2 210 1 168 1 211 2 25 6 356 2 31 22 117 3 173 1 120 1 85 6 363 2 123 1 217 2 175 1 219 1 277 1 276 2 178 1 223 1 280 4 321 2 42 1 179 3 182 1 232 4 46 1 284 3 325 1 326 4 
195 1 12 1 25 1 137 1 245 1 280 1 338 2 31 2 179 1 216 1 347 1 297 1 85 1 8 1 147 2 283 1 284 1 266 1 
195 1 12 1 25 1 137 1 245 1 154 1 31 2 179 1 203 1 216 1 347 1 85 1 232 1 8 1 147 2 284 1 77 2 326 1 
25 2 137 2 31 4 216 1 85 2 8 2 147 2 12 1 195 1 245 1 154 1 280 1 338 2 321 1 179 1 347 1 297 1 232 1 284 1 77 2 326 1 266 1 
195 1 12 1 25 1 137 1 245 1 280 1 338 2 31 2 179 1 18 1 347 1 297 1 85 1 8 1 147 2 283 1 284 1 266 1 
195 1 12 1 25 1 137 1 245 1 154 1 31 2 179 1 18 1 203 1 347 1 85 1 232 1 8 1 147 2 284 1 77 2 326 1 
25 2 137 2 31 4 85 2 8 2 147 2 12 1 195 1 245 1 154 1 280 1 338 2 321 1 179 1 18 1 347 1 297 1 232 1 284 1 77 2 326 1 266 1 
195 1 12 1 25 2 137 2 154 1 245 1 280 1 338 2 31 4 321 1 179 1 347 1 297 1 85 2 232 1 8 2 147 2 77 2 284 1 326 1 266 1 
89 1 211 1 168 1 356 1 189 1 139 1 31 2 117 1 120 1 217 1 147 2 219 1 150 1 276 1 277 1 194 1 193 1 195 1 12 1 245 1 338 1 179 1 19 1 345 1 347 1 260 1 284 1 77 1 
89 1 211 1 168 1 356 1 139 1 31 2 117 1 84 1 120 1 121 1 147 2 219 1 150 1 276 1 277 1 194 1 195 1 12 1 245 1 338 1 179 1 19 1 161 1 345 1 347 1 260 1 284 1 77 1 
25 2 137 2 31 4 85 2 8 2 147 2 12 1 195 1 245 1 154 1 280 1 338 2 339 1 321 1 179 1 347 1 297 1 232 1 284 1 77 2 326 1 266 1 
89 1 25 2 168 1 211 1 137 2 356 1 189 1 139 1 31 4 117 1 85 2 8 2 217 1 147 2 219 1 150 1 276 1 193 1 195 1 12 1 154 1 245 1 280 1 338 2 321 1 179 1 19 1 347 1 297 1 260 1 232 1 349 1 77 2 284 1 326 1 115 1 266 1 
89 1 25 1 137 1 31 3 117 1 4 1 85 1 8 1 147 2 364 1 12 1 195 1 222 1 154 1 245 1 280 1 339 1 338 2 320 1 321 1 179 1 347 1 297 1 46 1 77 1 284 1 326 1 266 1 210 1 
355 2 137 6 331 1 31 19 362 1 34 1 147 4 36 2 12 2 195 2 61 1 62 1 279 1 245 2 154 3 280 3 338 9 40 1 159 1 321 3 346 1 347 2 257 1 297 3 232 3 351 2 135 1 77 10 326 3 266 3 
237 1 355 3 137 2 331 1 31 24 332 1 145 1 147 6 36 1 12 3 195 3 101 1 62 1 14 2 279 1 245 3 154 2 280 3 338 13 246 1 40 2 159 1 321 3 346 2 347 3 257 2 297 1 232 1 351 2 301 1 77 11 135 2 326 2 266 3 
237 1 355 3 137 5 331 1 31 32 332 1 145 1 34 1 147 6 36 1 101 1 12 3 195 3 61 1 62 1 14 1 279 1 245 3 154 4 280 4 338 15 246 1 40 3 159 1 321 4 343 1 346 1 347 3 257 3 297 3 232 2 351 4 301 1 135 2 77 17 326 4 266 4 
237 1 355 4 137 6 331 1 31 33 332 1 145 1 34 1 147 8 36 1 101 1 12 4 195 4 61 1 62 1 14 2 279 1 245 4 154 3 280 4 338 17 246 1 40 3 159 1 321 4 343 1 346 1 347 4 257 3 297 3 232 3 351 4 301 1 135 2 77 16 326 3 266 4 
237 1 238 1 355 3 137 12 138 1 331 1 31 46 332 1 145 1 34 2 175 1 147 4 36 1 178 1 101 1 12 2 195 2 13 1 62 1 223 1 14 1 279 1 245 2 154 6 280 7 338 24 246 1 247 2 40 2 159 1 321 6 346 1 347 2 257 4 297 6 232 6 351 4 301 1 135 1 77 22 326 7 266 6 
126 1 282 1 112 1 132 1 200 1 10 1 55 1 82 1 305 1 306 1 
371 1 162 1 
282 1 357 1 110 1 112 1 367 1 132 1 200 1 10 1 306 1 
5 1 295 1 
230 1 361 1 253 1 
126 1 200 1 55 1 92 1 82 1 180 1 306 1 342 2 282 1 204 1 112 1 132 1 311 1 242 1 186 1 10 1 124 1 278 1 
126 1 200 1 55 1 92 1 82 1 180 1 306 1 342 2 282 1 204 1 112 1 132 1 311 1 242 1 186 1 10 1 124 1 278 1 
126 1 200 1 55 1 92 1 82 1 180 1 306 1 342 2 282 1 204 1 112 1 132 1 311 1 242 1 186 1 10 1 124 1 278 1 
361 1 5 1 295 1 
361 1 5 1 295 1 
230 1 253 1 
230 1 361 1 253 1 
290 1 74 1 
89 2 51 1 170 1 117 2 306 1 4 2 290 1 124 1 10 1 200 1 180 1 342 1 162 1 345 1 255 1 204 1 282 1 112 1 113 1 132 1 88 1 371 1 46 2 186 1 207 1 74 1 210 2 
89 2 211 1 168 2 356 1 139 2 31 2 117 2 174 2 4 2 308 1 98 1 86 1 147 2 219 2 150 1 276 1 277 1 194 1 195 1 12 1 197 1 245 1 339 1 338 1 179 1 164 1 347 1 131 1 284 1 77 1 23 1 
211 1 168 1 356 1 29 1 139 1 32 1 120 1 274 1 243 1 291 1 234 1 219 1 150 1 276 1 
168 1 356 1 268 1 317 1 214 2 139 1 105 1 95 1 67 1 97 1 323 1 274 1 334 1 243 1 219 1 366 1 276 1 221 1 
168 2 356 1 268 1 317 1 214 2 139 2 105 1 95 1 67 1 97 1 323 1 274 1 334 1 243 1 219 2 115 1 366 1 276 1 221 1 
168 1 268 1 356 1 214 2 139 1 105 1 95 1 67 1 97 1 323 1 334 1 243 1 219 1 236 1 366 1 276 1 221 1 
318 1 
27 1 213 1 191 1 93 1 83 1 344 1 122 1 350 1 75 1 278 1 
15 5 154 2 280 2 116 10 321 2 54 5 56 5 185 1 350 5 75 5 265 1 326 2 99 2 266 2 278 5 
122 1 155 1 186 1 235 1 180 1 278 1 
211 2 27 1 168 2 356 3 29 1 140 1 139 2 191 1 93 1 83 1 94 1 240 1 120 2 219 2 150 2 335 1 276 2 11 1 153 1 155 2 180 1 229 1 299 1 260 1 350 1 186 1 75 1 234 1 264 1 235 1 
50 1 122 1 350 1 213 1 75 1 344 1 278 1 
27 1 116 1 54 1 191 1 93 1 83 1 122 1 278 2 155 1 180 1 350 1 186 1 72 1 75 1 209 1 235 1 267 1 
168 1 27 2 211 1 356 2 286 2 116 6 139 1 2 1 54 3 191 2 93 2 56 3 83 2 240 1 120 1 310 1 60 1 219 1 35 1 150 3 99 1 276 1 278 3 154 1 15 3 155 1 280 1 340 1 321 1 369 1 251 1 252 1 180 1 260 1 186 1 350 4 75 3 235 1 326 1 265 1 266 1 
237 1 27 2 116 6 191 2 54 3 93 2 332 1 56 5 83 2 122 1 99 1 278 4 101 1 15 5 154 2 155 1 280 2 246 1 40 1 17 1 321 2 180 1 257 1 186 1 350 7 351 1 301 1 75 4 235 1 326 2 266 2 
89 1 27 1 117 1 191 1 93 1 83 1 4 1 123 1 364 1 99 2 178 1 13 1 223 1 280 2 180 1 181 1 109 1 370 1 185 1 69 1 46 1 186 1 350 2 262 1 75 2 325 1 326 1 210 1 
89 3 168 1 211 1 356 1 189 1 139 1 31 1 117 3 4 2 120 1 217 1 147 2 9 1 364 2 219 1 150 1 277 1 276 1 193 1 12 1 195 1 245 1 181 1 179 1 19 1 345 1 347 1 260 1 46 2 77 1 284 1 210 2 
27 1 15 2 138 1 116 4 54 2 191 1 93 1 56 2 83 1 240 1 122 2 350 1 75 2 335 1 278 4 
112 1 132 1 74 1 125 1 82 1 
112 1 132 1 227 1 
112 1 132 1 227 1 
112 1 132 1 227 1 
96 1 112 1 132 1 
96 1 112 1 132 1 
96 1 112 1 132 1 
112 1 132 1 
282 1 200 1 
12 1 195 1 178 2 13 1 223 2 137 5 245 1 280 2 331 1 338 5 31 10 347 1 297 2 232 3 123 1 147 2 77 5 326 2 
195 1 12 1 137 1 245 1 280 1 331 1 338 2 31 2 347 1 297 1 147 2 266 1 
195 1 12 1 137 2 154 1 245 1 280 1 331 1 338 2 31 4 321 1 347 1 297 1 232 1 147 2 77 2 326 1 266 1 
195 3 12 3 178 1 61 1 14 1 302 1 223 1 137 2 245 3 331 1 338 1 31 3 347 3 297 1 232 1 147 6 77 2 
195 3 12 3 61 1 245 3 280 1 338 4 331 1 80 1 31 5 40 1 321 1 41 1 257 2 347 3 271 1 351 1 147 6 77 1 266 1 
195 2 12 2 178 1 13 1 238 1 14 1 223 1 137 3 245 2 138 1 280 1 338 4 31 8 347 2 297 1 232 2 147 4 175 1 77 4 326 1 
178 1 50 1 13 1 238 1 223 1 137 2 138 1 280 1 338 3 31 6 232 2 175 1 77 3 326 1 
195 1 12 1 137 2 154 1 245 1 280 1 80 1 338 2 31 4 321 1 347 1 297 1 232 1 147 2 77 2 326 1 266 1 
137 2 154 1 280 1 338 3 40 1 31 7 321 1 257 1 297 1 232 1 34 1 351 2 77 4 326 1 266 1 
238 1 302 1 137 9 138 1 31 23 34 1 175 1 147 4 178 2 195 2 12 2 13 1 223 2 14 2 154 2 245 2 280 3 338 11 247 1 321 2 257 2 347 2 297 4 232 5 351 2 77 12 353 1 326 3 266 2 
351 1 31 1 77 1 
257 1 338 1 31 1 
12 1 195 1 137 3 245 1 154 1 280 1 80 1 338 3 31 6 321 1 347 1 297 1 232 2 147 2 77 3 265 1 326 1 266 1 
237 1 137 2 331 1 31 12 332 1 147 2 12 1 195 1 101 1 245 1 154 2 280 2 338 6 40 1 246 1 321 2 257 1 347 1 297 1 232 1 351 1 301 1 77 6 326 2 266 2 
178 1 13 1 223 1 137 2 280 1 338 3 31 6 297 1 232 1 77 3 326 1 
178 1 195 1 12 1 238 1 223 1 302 1 14 1 137 2 245 1 338 1 31 3 347 1 297 1 232 1 147 2 175 1 77 2 
237 1 238 1 137 2 138 1 331 1 31 8 147 2 175 1 12 1 195 1 178 1 13 1 223 1 245 1 280 1 338 4 40 1 257 1 347 1 232 2 351 1 77 4 326 1 
237 1 238 1 137 3 138 1 331 1 80 1 31 11 34 1 175 1 147 4 178 1 12 2 195 2 13 1 223 1 245 2 280 2 338 6 40 1 321 1 347 2 257 1 297 1 232 2 351 2 77 5 326 1 266 1 
237 1 137 2 80 1 331 1 31 13 332 1 147 6 12 3 195 3 101 1 14 1 245 3 154 2 280 2 338 6 40 1 246 1 321 2 257 1 347 3 297 1 232 1 351 1 301 1 77 7 326 2 266 2 
237 1 137 2 80 1 331 1 31 11 332 1 147 6 12 3 195 3 101 1 14 1 245 3 154 1 280 2 338 7 40 1 246 1 321 2 257 1 347 3 297 1 232 1 351 1 301 1 77 4 326 1 266 2 
237 1 238 1 137 2 138 1 331 1 31 8 147 2 175 1 12 1 195 1 178 1 13 1 223 1 245 1 280 1 338 4 40 1 257 1 347 1 232 2 351 1 77 4 326 1 
237 1 137 2 331 1 31 12 332 1 147 2 12 1 195 1 101 1 245 1 154 2 280 2 338 6 40 1 246 1 321 2 257 1 347 1 297 1 232 1 351 1 301 1 77 6 326 2 266 2 
237 1 137 2 80 1 331 1 31 12 332 1 147 8 12 4 195 4 101 1 14 2 245 4 154 1 280 2 338 7 246 1 40 1 321 2 347 4 257 1 297 1 232 1 351 1 301 1 77 5 326 1 266 2 
237 1 137 4 331 1 31 12 332 1 147 8 12 4 195 4 101 1 61 1 14 2 245 4 154 1 280 2 338 7 246 1 40 1 321 2 347 4 257 1 297 2 232 2 351 1 301 1 77 5 326 1 266 2 
178 3 13 1 238 2 223 3 137 6 280 1 338 3 31 7 297 3 232 3 175 1 77 4 326 1 
237 1 137 2 331 1 31 12 332 1 147 8 12 4 195 4 101 1 61 1 14 2 245 4 154 1 280 2 338 7 246 1 40 1 321 2 347 4 257 1 297 1 232 1 351 1 301 1 77 5 326 1 266 2 
215 1 250 1 187 1 
258 1 52 1 215 1 53 1 157 1 250 1 172 1 187 1 
168 4 211 1 356 1 29 1 139 4 360 1 120 1 134 1 234 1 219 4 115 1 150 1 276 1 
168 2 211 1 356 2 30 1 139 2 140 1 94 1 241 1 260 1 299 1 264 1 219 2 150 1 276 1 
168 1 120 1 97 1 356 1 323 1 214 1 139 1 219 1 276 1 221 1 
197 1 168 2 211 1 268 1 356 1 139 2 164 1 219 2 115 1 150 1 276 1 
197 1 168 4 211 2 29 1 356 2 30 1 139 5 57 1 360 1 120 1 234 1 233 1 219 5 115 1 150 3 276 2 
197 1 168 4 211 2 29 1 356 2 104 1 30 1 139 5 57 1 360 1 120 1 234 1 219 5 115 1 150 3 276 2 
50 1 211 1 168 1 120 1 356 1 29 1 139 1 234 1 219 1 150 1 276 1 
89 2 211 1 168 1 356 1 139 1 117 2 173 1 19 1 345 1 4 1 120 1 260 1 46 1 217 1 219 1 150 1 276 1 210 1 
89 2 285 1 168 1 211 2 356 1 30 1 139 1 117 2 173 1 4 2 217 1 219 1 313 1 150 3 276 1 39 1 249 1 19 1 345 1 260 2 46 1 325 1 210 2 
89 2 285 1 168 2 211 2 356 1 30 1 139 2 117 2 173 1 4 2 121 1 219 2 313 1 150 3 276 1 39 1 249 1 19 1 345 1 260 2 46 1 134 1 325 1 210 2 
89 1 168 1 286 1 30 1 139 1 117 1 4 1 141 1 122 1 364 1 219 1 150 1 278 1 180 1 181 1 370 1 69 1 46 1 186 1 262 1 325 1 210 1 
89 1 168 1 286 1 30 1 139 1 117 1 4 1 122 1 364 1 219 1 150 1 278 1 369 1 180 1 181 1 370 1 69 1 46 1 186 1 262 1 325 1 210 1 
0 1 168 1 356 1 139 1 219 1 276 1 
0 1 197 1 168 6 211 2 268 1 356 3 139 7 358 1 174 1 57 1 120 2 44 1 260 1 299 1 233 1 264 1 219 7 115 1 35 1 150 3 276 2 
89 2 25 1 238 1 211 1 168 1 137 2 356 1 138 1 189 1 139 1 31 6 117 2 173 1 4 1 85 1 8 1 363 1 217 1 175 1 86 1 147 4 219 1 150 1 276 1 193 1 178 1 12 2 195 2 13 1 223 1 245 2 280 1 338 3 339 1 179 2 19 1 345 2 347 2 260 1 232 2 46 1 349 1 77 3 284 2 326 1 115 1 210 1 
89 1 286 1 2 1 139 1 191 2 93 2 4 1 150 1 99 2 13 1 153 1 155 1 340 1 344 1 113 1 69 1 350 4 262 1 75 5 210 1 27 2 168 1 213 1 117 1 83 2 120 1 310 1 122 2 123 1 364 1 219 1 278 2 178 1 223 1 280 2 369 1 180 2 181 1 370 1 185 1 46 1 186 2 235 1 325 1 326 2 
0 1 168 2 211 1 356 2 139 2 251 1 333 1 260 1 219 2 115 1 35 1 150 2 276 1 
89 2 211 1 168 1 356 1 139 1 117 2 173 1 19 1 345 1 4 1 120 1 260 1 46 1 121 1 219 1 150 1 276 1 210 1 
168 1 211 1 356 2 30 1 139 1 358 1 260 1 299 1 264 1 219 1 35 1 150 1 276 1 
59 1 259 1 315 1 289 1 345 1 
89 1 188 1 169 1 117 1 289 1 4 1 142 1 59 1 143 1 122 1 364 1 220 1 278 1 315 1 128 1 39 1 249 1 181 1 180 2 370 1 259 1 113 1 69 1 46 1 186 2 262 1 325 2 210 1 
89 1 259 1 315 1 131 1 98 1 117 1 289 1 23 1 4 1 
143 1 259 1 169 1 
79 1 224 1 38 1 300 1 330 1 63 1 91 1 281 1 
293 1 26 2 79 1 224 1 146 1 300 2 63 2 91 1 218 1 
79 1 224 1 38 1 330 1 63 2 91 1 192 1 281 1 33 1 300 2 208 1 218 1 
328 1 167 2 79 1 224 1 273 1 38 1 16 2 300 3 330 1 63 3 91 1 281 1 
177 2 102 1 239 1 79 2 
224 1 38 1 312 1 300 1 63 1 91 1 
79 1 127 1 224 1 38 1 300 2 330 1 63 2 91 1 218 1 281 1 
244 1 
79 1 224 1 38 1 300 1 330 1 63 1 91 1 281 1 
50 1 79 1 330 1 281 1 
79 1 224 1 300 1 330 1 63 1 91 1 281 1 
7 1 63 1 201 1 
328 1 167 2 79 1 224 1 38 1 16 1 300 3 368 1 330 1 63 3 91 1 281 1 
79 1 224 1 300 2 190 1 330 1 63 2 91 1 218 1 281 1 
26 1 79 1 6 1 224 1 146 1 38 1 300 1 63 1 91 1 
79 1 224 1 38 1 300 1 330 1 63 1 91 1 
224 1 38 1 300 1 330 2 63 1 91 1 281 1 
224 1 38 1 63 1 341 1 91 1 300 1 149 1 
293 1 26 1 144 1 79 1 127 1 224 1 146 1 38 1 300 2 63 2 91 1 218 1 
79 1 224 1 38 1 330 1 214 2 63 2 91 1 105 1 281 1 163 1 95 1 97 1 323 1 300 2 218 1 
293 1 26 1 79 1 316 1 224 1 146 1 38 1 300 2 190 1 63 2 91 1 218 1 
167 1 79 1 127 1 224 1 38 1 63 3 330 1 91 1 281 1 300 3 218 1 
293 1 79 1 146 1 300 1 63 1 218 1 
79 1 330 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (57,205,291,300,353) (131,153) (131,153) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (76,337) 118 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (76,337) 118 249 359 (76,337) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (76,337) 118 249 295 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (76,337) 118 184 54 46 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (76,337) 118 135 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (76,337) 118 61 198 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (76,337) 118 249 359 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (76,337) 118 61 198 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (76,337) 118 249 359 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (76,337) 118 61 295 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (76,337) 118 244 (89,228) (89,228) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 1 163 1 72 1 195 3 48 2 88 2 16 3 301 1 177 1 121 1 52 2 94 1 201 1 
82 1 173 1 105 1 195 9 88 2 31 1 353 1 177 4 199 1 63 2 94 1 201 2 96 1 163 6 321 1 70 2 298 1 72 3 48 2 16 9 17 2 301 1 140 1 78 2 121 1 52 5 146 1 282 1 
82 1 173 1 105 1 195 9 88 2 31 1 353 1 177 4 199 1 63 2 94 1 201 2 96 1 163 6 321 1 70 2 298 1 72 3 48 2 16 9 17 2 301 1 140 1 78 2 121 1 52 5 146 1 282 1 
82 1 173 1 105 1 195 10 88 2 31 1 353 1 177 5 199 1 63 2 94 1 201 2 96 1 163 7 321 1 70 2 298 1 72 4 48 2 16 10 17 2 301 1 140 1 78 2 121 1 52 6 146 1 282 1 
82 1 173 1 105 1 195 7 88 2 31 1 353 1 177 3 199 1 63 1 94 1 201 2 96 1 163 4 321 1 70 2 298 1 72 2 48 2 16 7 17 2 301 1 78 2 121 1 52 4 146 1 282 1 
96 1 163 3 173 1 70 1 72 1 195 4 48 1 88 1 17 1 16 4 140 1 78 1 177 2 121 1 52 3 282 1 63 2 94 1 
17 1 16 1 353 1 153 1 131 1 199 1 132 1 121 1 201 1 195 1 88 1 48 1 
82 1 173 1 310 1 195 9 88 2 248 1 177 4 63 2 94 1 201 1 96 1 163 7 321 1 70 1 72 3 48 2 16 9 17 1 301 1 78 1 140 1 121 1 52 5 282 1 
82 1 173 1 310 1 195 9 88 2 248 1 177 4 63 2 94 1 201 1 96 1 163 7 321 1 70 1 72 3 48 2 16 9 17 1 301 1 78 1 140 1 121 1 52 5 282 1 
338 1 111 1 150 1 299 1 77 1 221 1 116 1 342 1 271 1 120 1 325 1 326 1 327 1 81 1 
258 1 
362 1 338 2 340 1 258 1 110 1 120 2 186 1 150 1 
307 2 329 1 338 5 339 1 340 2 110 1 150 2 341 2 351 1 87 1 267 1 168 2 152 1 302 1 258 1 120 5 186 1 358 1 123 1 
258 1 186 1 275 1 
355 1 
221 2 25 1 116 2 111 2 326 1 327 2 81 2 299 2 
212 1 188 2 25 1 266 1 148 1 86 1 221 2 156 1 271 1 356 1 6 1 134 1 296 1 10 1 42 1 13 1 68 1 182 1 111 3 232 1 299 2 139 1 277 1 322 2 75 1 185 2 279 1 280 2 368 2 141 2 116 3 119 1 326 1 79 1 305 1 239 1 22 2 327 3 371 1 210 2 81 3 
77 1 221 1 116 1 342 1 271 1 111 1 326 1 327 1 81 1 299 1 
338 1 111 1 218 1 277 1 258 1 271 1 120 1 37 1 186 1 239 1 252 1 327 1 23 1 81 1 
338 2 111 1 218 1 299 1 277 1 221 1 116 1 258 1 120 2 271 1 186 1 239 1 327 1 23 1 81 1 
338 1 340 1 120 1 293 1 150 1 
338 2 340 1 243 1 258 1 110 1 120 2 186 1 150 1 
338 1 340 1 120 1 
188 2 191 1 148 1 221 1 271 1 6 1 134 1 334 1 42 1 111 2 139 1 322 2 277 1 75 1 185 2 76 1 280 1 141 1 368 1 116 2 239 1 305 1 327 2 81 2 
25 2 111 2 233 1 299 1 221 1 116 1 250 1 327 2 81 2 
76 1 118 1 
188 2 25 1 42 1 148 1 111 1 139 1 277 1 322 2 75 1 49 1 185 2 280 1 368 1 141 1 116 1 271 1 305 1 239 1 6 1 134 1 327 1 81 1 
25 1 275 1 
221 3 25 1 116 3 191 1 111 3 327 3 299 1 81 3 
77 1 221 1 116 1 271 1 111 1 327 1 81 1 
221 1 116 1 271 1 250 1 111 1 327 1 233 1 81 1 299 1 
212 1 188 2 0 1 25 1 148 1 191 1 218 1 86 1 247 1 221 3 156 1 250 1 271 2 356 1 6 1 334 1 134 1 10 1 42 1 338 1 182 1 111 4 232 1 139 1 299 2 322 2 277 2 75 1 185 2 279 1 280 1 368 1 141 1 116 4 120 1 326 1 79 1 305 1 239 2 22 1 23 1 327 4 371 1 210 2 81 4 
278 1 221 1 25 1 116 1 191 1 37 1 111 2 327 2 81 2 
0 1 338 1 191 2 111 3 218 1 299 1 277 1 221 3 116 3 250 1 258 1 120 1 271 1 251 1 239 1 334 1 327 3 23 1 81 3 
191 1 111 2 193 1 299 1 76 1 221 2 116 2 250 1 327 2 81 2 
188 2 25 1 42 1 148 1 111 1 139 1 277 1 322 2 75 1 185 2 280 1 368 1 141 1 116 1 271 1 305 1 239 1 6 1 134 1 327 1 81 1 
188 2 25 1 336 1 148 1 111 1 69 1 139 1 277 1 322 2 185 2 280 1 368 1 141 1 116 1 271 1 305 1 239 1 6 1 134 1 327 1 81 1 
337 1 182 2 181 1 86 1 232 1 76 1 114 1 118 1 156 1 249 1 356 1 79 1 22 2 359 1 210 2 371 1 
221 1 116 1 162 1 271 1 111 1 239 1 327 1 81 1 
25 1 43 1 191 2 111 5 245 1 299 1 278 1 221 4 116 4 250 1 37 1 334 1 327 5 81 5 
77 1 221 2 116 2 162 1 271 1 111 2 327 2 81 2 
213 1 230 1 192 1 
20 1 265 1 230 2 192 2 133 1 112 1 
230 1 192 1 
230 1 192 1 
265 1 112 1 
265 1 112 1 
265 1 112 1 
292 1 230 1 192 1 
292 1 230 1 192 1 
292 1 230 1 192 1 
3 1 230 1 192 1 
3 1 230 1 192 1 
3 1 230 1 192 1 
53 3 360 2 318 1 338 2 230 2 192 2 30 1 255 2 167 1 99 2 144 1 143 1 34 2 20 1 258 1 223 2 120 2 224 1 211 1 
53 1 213 1 25 1 174 1 192 1 221 2 34 1 223 1 39 1 179 1 360 1 95 1 273 1 338 1 230 1 111 2 255 1 47 1 116 2 21 1 120 1 327 2 211 1 81 2 
74 2 17 2 70 1 132 1 73 1 
17 1 78 1 70 1 
17 1 78 1 132 1 
74 1 17 3 9 1 70 2 132 1 73 1 
74 1 17 2 106 1 70 1 132 1 73 1 
307 1 289 1 56 1 150 4 267 1 90 1 269 1 221 1 61 1 355 1 271 1 331 1 295 1 317 1 338 5 339 1 340 1 110 1 363 1 111 1 341 1 299 1 168 1 77 1 302 2 116 1 21 1 342 1 120 5 258 1 325 1 122 1 304 2 326 1 186 1 327 1 81 1 
307 1 125 1 2 2 289 1 56 1 150 4 267 1 90 1 269 1 221 1 61 1 355 1 271 1 293 2 295 1 317 1 338 5 45 1 339 1 340 3 110 1 363 1 111 1 341 1 168 1 299 1 77 1 302 2 116 1 21 1 342 1 120 5 258 1 325 1 186 1 326 1 327 1 81 1 
307 1 289 1 56 1 150 2 269 2 90 2 221 1 61 1 355 3 271 1 249 1 331 1 358 1 295 1 317 1 338 3 339 3 111 1 365 1 341 1 299 1 168 1 77 1 114 1 116 1 302 2 21 1 342 1 325 1 258 2 120 3 122 1 304 1 326 1 186 1 327 1 81 1 
289 1 56 2 150 3 61 2 249 2 331 1 295 2 338 4 339 5 111 1 341 1 168 1 299 1 77 1 114 2 302 4 116 1 21 2 342 1 120 4 258 3 304 2 122 1 81 1 307 1 27 1 269 4 90 4 91 1 221 1 355 6 271 1 358 1 317 1 365 2 98 1 325 1 186 1 326 1 327 1 
145 1 
188 1 12 1 275 1 
188 1 126 1 
322 1 188 1 
322 1 185 1 188 3 50 1 12 2 234 1 
322 1 185 1 188 1 
188 1 217 1 
228 1 67 1 97 2 182 3 231 1 56 1 166 1 244 2 367 3 89 1 151 1 114 1 117 1 222 1 119 4 100 1 237 1 22 7 
215 1 28 1 56 4 86 1 244 3 89 1 151 2 33 1 61 3 93 1 156 1 222 2 249 3 295 3 38 1 228 1 41 1 161 3 67 1 97 5 231 2 182 15 367 10 184 4 323 1 114 4 117 2 119 16 100 1 237 5 79 1 22 31 371 1 210 2 
228 1 44 1 55 1 97 3 231 1 28 1 182 4 56 1 244 2 86 2 367 4 89 1 151 1 114 1 117 1 156 2 222 1 119 5 100 1 237 1 79 2 22 9 210 4 371 2 
228 1 67 1 97 2 182 3 231 1 56 1 244 2 367 3 89 1 151 1 114 1 117 1 222 1 119 4 100 1 237 1 22 7 
228 1 67 1 97 2 182 3 231 1 56 1 244 2 367 3 89 1 151 1 114 1 117 1 222 1 119 4 100 1 237 1 22 7 
286 1 160 2 101 1 188 1 288 1 229 2 148 1 246 1 195 1 139 1 48 1 88 1 322 1 16 1 60 1 280 1 368 1 141 1 208 2 201 2 159 1 134 1 178 1 
306 1 148 1 195 1 88 1 200 1 132 1 201 1 65 1 160 1 9 1 229 1 70 1 48 1 139 1 16 1 17 2 280 1 256 1 78 1 141 1 368 1 208 1 171 1 51 1 121 1 238 1 
306 1 148 1 195 2 88 1 200 1 132 1 94 1 201 1 65 1 160 1 9 1 96 1 163 1 229 1 70 1 48 1 139 1 16 2 17 2 280 1 256 1 78 1 141 1 368 1 208 1 171 1 52 1 121 1 238 1 187 1 
306 1 148 1 195 3 246 1 88 1 32 1 200 1 132 1 94 1 201 1 65 1 160 1 9 1 96 1 229 1 163 2 70 1 48 1 139 1 16 3 17 2 280 1 256 1 78 1 141 1 368 1 208 1 171 1 52 1 51 1 
306 1 148 1 195 2 32 1 132 1 94 1 201 1 65 1 160 1 9 1 96 1 229 1 163 2 70 1 139 1 16 2 17 2 280 1 256 1 141 1 368 1 78 1 208 1 52 1 51 1 
346 1 
285 2 286 1 101 1 102 1 188 1 241 2 148 1 330 1 103 2 107 1 252 1 338 5 339 2 340 6 110 3 111 1 341 1 168 1 302 2 258 2 120 5 260 1 259 1 262 2 23 1 81 1 307 1 124 1 309 1 218 1 350 2 175 1 267 1 128 2 355 2 271 1 36 2 37 1 225 1 134 2 317 1 136 1 40 1 365 2 139 1 322 1 277 1 280 2 368 2 141 2 235 4 369 1 186 1 239 1 327 1 
124 1 241 1 218 1 271 1 37 1 225 1 252 1 40 1 136 1 362 1 338 3 340 2 110 1 111 1 277 1 235 2 260 1 120 3 239 1 23 1 327 1 81 1 
124 1 218 1 350 1 271 1 37 1 225 1 252 1 40 1 136 1 362 1 338 3 340 1 110 1 111 1 277 1 235 3 260 1 120 3 258 1 186 1 239 1 23 1 327 1 81 1 
124 1 241 1 218 1 350 1 271 1 37 1 225 1 252 1 40 1 136 1 362 1 338 3 340 2 110 1 111 1 277 1 235 3 260 1 120 3 258 1 186 1 239 1 23 1 327 1 262 1 81 1 
285 2 241 4 330 1 103 2 252 1 338 5 339 1 340 7 110 3 111 1 341 1 168 1 115 1 302 1 120 5 260 1 258 5 262 4 23 1 81 1 307 1 124 1 218 1 350 4 352 1 176 1 267 1 128 2 271 1 37 1 36 2 225 1 136 1 40 1 361 1 362 1 365 2 277 1 235 6 281 1 369 1 186 5 239 1 327 1 
285 2 241 2 330 1 103 2 252 1 338 4 339 1 340 4 110 2 111 1 341 1 168 1 302 1 120 4 260 1 258 1 23 1 262 2 81 1 307 1 124 1 218 1 350 2 267 1 175 1 128 2 355 2 271 1 37 1 36 2 225 1 136 1 40 1 365 2 277 1 235 4 369 1 186 1 239 1 327 1 
285 2 307 1 124 1 241 2 330 1 103 2 218 1 350 2 176 1 267 1 128 2 271 1 36 2 37 1 225 1 252 1 40 1 136 1 338 4 339 1 340 4 110 2 365 2 111 1 341 1 168 1 277 1 115 1 302 1 235 4 281 1 369 1 258 1 260 1 120 4 186 1 239 1 262 2 23 1 327 1 81 1 
285 2 307 1 124 1 241 2 330 1 103 2 218 1 350 2 176 1 267 1 128 2 271 1 36 2 37 1 225 1 252 1 40 1 136 1 338 4 339 1 340 4 110 2 365 2 111 1 341 1 168 1 277 1 115 1 302 1 235 4 281 1 369 1 258 1 260 1 120 4 186 1 239 1 262 2 23 1 327 1 81 1 
307 1 124 1 241 2 330 1 103 2 218 1 350 2 267 1 128 2 355 2 5 1 315 2 271 1 37 1 225 1 252 1 40 1 136 1 180 2 338 4 339 1 340 4 110 2 111 1 138 1 341 1 168 1 277 1 115 1 302 1 235 4 236 1 258 1 260 1 120 4 186 1 239 1 262 2 23 1 327 1 81 1 
285 2 307 1 124 1 241 3 330 1 103 2 218 1 350 3 267 1 176 1 352 1 128 2 271 1 36 2 37 1 225 1 252 1 40 1 136 1 338 4 339 1 340 5 110 2 365 2 111 1 341 1 168 1 277 1 115 1 302 1 235 5 281 1 369 1 258 1 260 1 120 4 186 1 239 1 23 1 327 1 262 3 81 1 
285 2 307 1 124 1 241 3 330 1 103 2 218 1 350 3 267 1 176 1 352 1 128 2 271 1 36 2 37 1 225 1 252 1 40 1 136 1 338 4 339 1 340 5 110 2 365 2 111 1 341 1 168 1 277 1 115 1 302 1 235 5 281 1 369 1 258 1 260 1 120 4 186 1 239 1 23 1 327 1 262 3 81 1 
307 1 124 1 330 1 103 1 218 1 175 1 267 1 128 1 355 1 271 1 37 1 225 1 252 1 40 1 136 1 180 1 338 2 339 1 111 1 341 1 168 1 277 1 302 1 235 2 236 1 260 1 120 2 239 1 327 1 23 1 81 1 
286 1 101 1 188 4 1 1 148 4 191 1 4 1 156 2 333 1 13 1 68 2 111 1 116 1 119 1 79 2 22 2 210 4 81 1 263 1 347 1 29 1 86 2 221 1 92 1 356 2 316 1 134 2 319 1 274 1 182 1 181 1 232 2 276 1 139 3 322 3 185 1 279 1 280 6 368 7 141 7 187 1 327 1 371 2 
287 1 56 1 86 1 221 1 61 1 156 1 250 1 249 1 356 1 295 1 111 1 182 2 232 1 299 1 76 1 114 1 324 1 116 1 118 1 119 1 79 1 22 3 327 1 371 1 210 2 81 1 
25 2 56 1 86 1 244 1 89 1 156 1 356 1 228 1 97 2 231 1 181 1 182 3 275 1 232 1 367 2 76 1 114 1 117 1 118 1 119 3 100 1 79 1 22 6 371 1 210 2 
287 1 54 1 182 1 46 1 86 1 232 1 184 1 76 1 118 1 156 1 356 1 79 1 22 1 210 2 371 1 
287 1 188 2 25 1 148 1 191 1 193 1 86 1 221 1 156 1 271 1 158 1 356 1 6 1 134 1 334 1 42 1 254 1 13 1 111 2 182 1 164 1 232 1 139 1 277 1 322 2 75 1 185 2 49 1 280 1 279 1 141 1 368 1 116 2 119 1 305 1 239 1 79 1 22 2 327 2 81 2 210 2 371 1 
287 1 188 2 83 1 148 1 290 1 191 1 86 2 127 1 221 1 156 2 271 1 356 2 6 1 334 1 134 1 135 1 10 1 42 1 109 1 111 2 182 2 232 2 139 1 277 1 322 2 75 1 76 1 185 2 280 1 279 1 368 1 141 1 116 2 118 1 305 1 239 1 79 2 22 2 327 2 81 2 210 4 371 2 
181 1 56 1 86 1 232 1 76 1 198 1 61 1 118 1 156 1 119 2 356 1 79 1 22 2 210 2 371 1 
181 1 182 2 86 1 232 1 76 1 114 1 118 1 156 1 249 1 356 1 79 1 22 2 359 1 210 2 371 1 
181 1 56 1 86 1 232 1 76 1 61 1 118 1 156 1 119 2 356 1 79 1 22 2 295 1 210 2 371 1 
56 1 86 1 232 1 4 1 76 1 198 1 61 1 118 1 156 1 119 2 356 1 79 1 22 2 210 2 371 1 
182 2 86 1 232 1 4 1 76 1 114 1 118 1 156 1 249 1 356 1 79 1 22 2 359 1 210 2 371 1 
56 1 86 1 232 1 4 1 76 1 61 1 118 1 156 1 119 2 356 1 79 1 22 2 295 1 210 2 371 1 
56 1 86 1 232 1 76 1 61 1 118 1 156 1 119 2 356 1 79 1 295 1 22 2 210 2 371 1 
188 2 25 1 148 1 86 1 156 1 271 1 356 1 6 1 134 1 10 1 42 1 13 1 182 1 111 1 232 1 139 1 322 2 277 1 75 1 185 2 279 1 280 1 141 1 368 1 116 1 119 1 239 1 305 1 79 1 22 2 327 1 371 1 210 2 81 1 
188 2 25 1 148 1 86 1 156 1 271 1 356 1 6 1 294 1 134 1 336 1 13 1 182 1 69 1 111 1 232 1 139 1 322 2 277 1 185 2 279 1 280 1 141 1 368 1 116 1 119 1 239 1 305 1 79 1 22 2 327 1 371 1 210 2 81 1 
287 1 56 1 86 1 232 1 76 1 61 1 118 1 156 1 119 2 356 1 79 1 22 2 295 1 210 2 371 1 
188 2 83 1 148 1 56 1 86 1 61 1 156 1 271 1 356 1 6 1 295 1 10 1 42 1 111 1 232 1 139 1 322 2 277 1 75 1 76 1 185 2 280 1 141 1 368 1 116 1 118 1 119 2 79 1 187 1 239 1 305 1 22 2 327 1 371 1 210 2 81 1 
287 1 111 1 56 1 86 1 232 1 299 1 76 1 221 1 116 1 61 1 118 1 156 1 119 2 250 1 356 1 79 1 22 2 295 1 327 1 284 1 81 1 210 2 371 1 
24 1 308 1 215 1 172 1 55 1 56 1 149 1 86 2 58 1 61 1 156 2 249 1 295 1 161 1 202 1 97 1 182 5 71 1 367 2 184 2 323 1 114 1 209 1 119 4 237 1 79 2 22 9 371 2 210 4 
24 1 172 2 55 1 28 2 56 2 149 2 86 3 58 3 354 1 61 2 156 3 270 1 35 1 249 1 295 2 226 1 320 1 161 2 202 1 97 1 182 9 366 1 367 2 184 2 113 1 323 2 114 1 209 1 119 11 237 1 79 3 22 20 371 3 210 6 
24 1 215 1 172 1 55 1 56 1 149 1 86 2 58 1 61 1 156 2 249 1 295 1 161 1 202 1 97 1 182 5 71 1 367 2 184 2 113 1 323 1 114 1 209 1 119 4 237 1 79 2 22 9 371 2 210 4 
24 1 215 1 172 1 55 1 56 1 149 1 86 2 58 1 61 1 156 2 249 1 295 1 161 1 202 1 97 1 182 5 71 1 367 2 184 2 113 1 323 1 114 1 209 1 119 4 237 1 79 2 22 9 371 2 210 4 
24 1 215 1 172 1 55 1 28 1 56 5 149 1 244 1 86 2 89 1 58 2 354 1 61 4 156 2 270 1 249 4 35 1 295 4 226 1 228 1 320 1 161 3 202 1 97 4 231 1 165 1 182 16 366 1 367 9 184 3 113 1 323 2 114 5 117 1 209 1 119 18 100 1 237 5 79 2 22 34 371 2 210 4 
360 1 143 1 34 1 20 1 223 1 230 1 192 1 224 1 255 1 8 1 
179 1 213 1 
360 1 154 1 34 1 26 1 364 1 223 1 230 1 192 1 255 1 
53 2 360 1 318 1 338 1 230 1 192 1 30 1 255 1 167 1 99 1 143 1 34 1 20 1 258 1 120 1 223 1 224 1 211 1 
53 2 360 1 318 1 338 1 230 1 192 1 30 1 255 1 167 1 99 1 143 1 34 1 20 1 258 1 120 1 223 1 224 1 211 1 
53 2 360 1 318 1 338 1 230 1 192 1 30 1 255 1 167 1 99 1 143 1 34 1 20 1 258 1 120 1 223 1 224 1 211 1 
142 1 292 1 133 1 
142 1 292 1 133 1 
3 1 314 1 
3 1 314 1 133 1 
95 1 174 1 
53 1 213 1 25 1 174 1 192 1 150 1 221 2 34 1 223 1 39 1 179 1 360 1 95 1 273 1 338 1 111 2 230 1 167 1 255 1 47 1 99 1 116 2 257 1 21 1 120 1 327 2 81 2 
142 1 292 1 
3 1 314 1 133 1 
287 1 188 1 347 1 148 1 219 1 86 1 156 1 356 1 227 1 319 1 203 1 13 1 68 2 111 2 182 1 232 1 139 1 322 1 279 1 280 2 141 2 368 2 19 1 119 1 344 1 79 1 22 2 327 2 81 2 210 2 371 1 
286 1 101 1 188 1 229 1 148 1 194 1 139 1 322 1 280 1 368 1 141 1 303 1 134 1 178 1 
9 1 229 1 148 1 70 1 104 1 139 1 17 2 280 1 256 1 78 1 368 1 141 1 170 1 303 1 132 1 51 1 200 1 65 1 
9 1 229 1 148 1 70 1 104 1 139 1 17 2 280 2 256 1 78 1 368 2 141 2 170 1 303 1 132 1 51 1 200 1 187 1 65 1 
9 1 240 1 229 1 148 1 70 1 104 1 139 1 17 2 280 1 256 1 78 1 368 1 141 1 132 1 51 1 200 1 65 1 
207 1 
307 1 339 1 341 1 267 1 168 1 152 1 302 1 258 1 186 1 123 1 
90 1 269 1 302 2 61 1 355 1 56 1 295 1 
338 1 340 1 258 1 120 1 110 1 186 1 
307 2 286 1 102 2 101 1 188 1 348 2 148 1 309 1 267 1 107 1 358 1 134 2 253 1 317 2 137 1 338 3 339 2 340 4 110 2 341 2 139 1 168 2 322 1 280 4 141 4 368 4 302 2 120 3 80 1 
152 1 302 1 339 1 258 1 186 1 275 1 123 1 
285 1 307 1 267 1 355 1 36 1 338 1 339 1 340 1 110 1 365 1 341 1 168 1 302 1 369 1 120 1 258 1 186 1 
307 1 188 2 126 1 148 2 216 1 15 1 341 1 139 1 267 1 168 1 322 1 185 1 280 1 368 1 141 1 50 1 134 1 
307 1 56 2 267 1 90 5 269 5 354 1 61 2 355 3 35 1 249 2 270 1 295 2 226 1 161 1 339 6 366 1 341 1 184 1 168 1 323 1 114 2 302 4 
307 1 214 1 56 2 267 1 176 1 312 1 221 1 271 1 62 2 338 1 339 2 111 1 231 1 341 1 168 1 299 1 77 1 114 1 302 2 116 1 117 1 342 1 120 1 325 1 100 1 326 1 327 1 81 1 
212 1 188 2 25 1 148 1 86 1 221 2 156 1 271 1 356 1 6 1 134 1 10 1 42 1 182 1 111 3 232 1 299 2 139 1 322 2 277 1 75 1 185 2 279 1 280 1 141 1 368 1 116 3 326 1 79 1 305 1 239 1 22 1 327 3 371 1 210 2 81 3 
307 1 317 1 102 1 339 1 341 1 267 1 168 1 90 1 302 1 355 1 258 1 186 1 
360 1 143 1 264 1 34 1 174 1 
360 1 34 1 335 1 
360 1 34 1 335 1 
360 1 34 1 335 1 
360 1 147 1 34 1 
360 1 147 1 34 1 
360 1 147 1 34 1 
360 1 34 1 
230 1 192 1 
214 1 55 1 97 3 231 2 182 5 56 2 86 1 367 5 114 2 117 2 156 1 119 5 237 2 100 1 79 1 22 10 371 1 210 2 
55 1 56 1 86 1 367 1 61 1 156 1 119 2 237 1 79 1 22 2 210 2 371 1 
55 1 97 1 182 2 56 1 86 1 367 2 114 1 61 1 156 1 249 1 119 2 237 1 79 1 295 1 22 4 210 2 371 1 
55 1 97 1 28 1 182 2 231 1 71 1 86 3 367 2 117 1 157 1 156 3 119 1 237 1 79 3 22 3 210 6 371 3 
215 1 55 1 28 2 56 5 244 1 86 5 89 1 33 1 93 1 61 3 157 1 156 5 249 3 295 3 38 1 66 1 228 1 161 3 97 7 231 3 182 18 71 1 367 12 184 4 323 1 114 5 117 3 119 16 100 2 237 5 79 5 22 34 371 5 210 10 
55 1 56 1 244 1 86 1 89 1 156 1 35 1 228 1 161 1 97 2 182 4 231 1 367 2 184 1 323 1 114 1 117 1 119 4 100 1 79 1 22 8 371 1 210 2 
215 1 55 1 56 2 244 1 86 2 89 1 61 1 156 2 35 1 295 1 66 1 228 1 161 1 97 2 231 1 182 5 367 3 184 2 323 1 114 1 117 1 119 6 100 1 237 1 79 2 22 11 371 2 210 4 
55 1 28 1 56 2 86 3 354 1 61 2 156 3 35 1 249 2 270 1 295 2 226 1 66 1 161 1 97 1 182 7 366 1 367 2 184 1 323 1 114 2 119 6 237 1 79 3 22 13 371 3 210 6 
55 1 28 1 56 2 86 3 354 1 61 2 156 3 35 1 249 1 270 1 295 2 226 1 66 1 161 1 182 4 366 1 367 1 184 1 323 1 114 1 119 7 237 1 79 3 22 11 371 3 210 6 
55 1 56 1 244 1 86 1 89 1 156 1 35 1 228 1 161 1 97 2 182 4 231 1 367 2 184 1 323 1 114 1 117 1 119 4 100 1 79 1 22 8 371 1 210 2 
55 1 56 2 86 1 354 1 61 2 156 1 35 1 249 2 270 1 295 2 226 1 161 1 182 6 366 1 367 1 184 1 323 1 114 2 119 6 237 1 79 1 22 12 371 1 210 2 
55 1 28 2 56 2 86 4 354 1 61 2 156 4 270 1 35 1 249 1 295 2 226 1 66 1 161 1 97 1 182 5 366 1 367 2 184 1 323 1 114 1 119 7 237 1 79 4 22 12 371 4 210 8 
55 1 28 2 56 2 86 4 354 1 61 2 156 4 270 1 35 1 249 1 295 2 226 1 161 1 97 2 182 5 71 1 366 1 367 4 184 1 323 1 114 1 119 7 237 2 79 4 22 12 371 4 210 8 
228 2 97 3 182 4 231 3 56 1 367 6 89 1 114 1 117 3 119 3 237 3 100 1 22 7 
55 1 28 2 56 2 86 4 354 1 61 2 156 4 270 1 35 1 249 1 295 2 226 1 161 1 97 1 182 5 71 1 366 1 367 2 184 1 323 1 114 1 119 7 237 1 79 4 22 12 371 4 210 8 
228 1 97 2 182 4 28 1 231 1 56 1 244 1 86 2 367 3 89 1 114 1 117 1 156 2 119 4 100 1 237 1 79 2 22 8 210 4 371 2 
228 1 97 2 182 3 231 1 56 1 244 1 275 1 367 2 89 1 114 1 117 1 119 3 100 1 22 6 
66 1 97 1 182 2 56 1 86 1 367 2 114 1 61 1 156 1 249 1 119 2 237 1 79 1 295 1 22 4 210 2 371 1 
323 1 161 1 119 1 182 1 22 2 184 1 
214 1 54 1 215 1 28 1 56 5 244 1 86 1 89 1 61 2 156 1 249 2 295 2 228 1 161 2 97 4 231 2 182 12 165 1 367 8 184 2 114 5 117 2 119 13 100 2 237 4 79 1 22 25 210 2 371 1 
182 1 22 1 184 1 
161 1 119 1 22 1 
66 1 97 2 182 3 56 1 86 1 367 3 114 1 61 1 156 1 119 3 249 1 237 1 79 1 22 6 295 1 135 1 371 1 210 2 
55 1 56 2 86 1 354 1 61 2 156 1 35 1 249 2 270 1 295 2 226 1 161 1 97 1 182 6 366 1 367 2 184 1 323 1 114 2 119 6 237 1 79 1 22 12 371 1 210 2 
97 1 182 3 231 1 56 1 367 2 114 1 117 1 119 3 100 1 237 1 22 6 
228 1 97 1 231 1 182 2 28 1 86 1 367 2 89 1 117 1 157 1 156 1 119 1 237 1 79 1 22 3 210 2 371 1 
278 1 313 1 25 1 111 1 37 1 327 1 81 1 
108 1 25 1 85 1 349 1 111 1 278 1 313 1 37 1 64 1 327 1 328 1 81 1 
286 1 101 1 188 1 148 1 139 1 322 1 197 1 59 1 280 4 368 4 141 4 187 1 134 1 
345 1 188 1 348 1 274 1 148 2 29 1 139 1 322 1 185 1 280 2 368 2 141 2 92 1 333 1 
17 1 280 1 78 1 141 1 368 1 148 1 132 1 134 1 65 1 139 1 
319 1 188 1 148 1 139 1 322 1 280 2 368 2 141 2 51 1 187 1 344 1 
286 1 101 1 319 1 188 3 1 1 348 1 148 2 139 2 322 2 197 1 280 4 368 5 141 5 316 1 187 1 134 1 
286 1 101 1 319 1 188 3 1 1 348 1 148 2 139 2 322 2 197 1 18 1 280 4 368 5 141 5 187 1 134 1 
322 1 286 1 101 1 188 1 280 1 141 1 368 1 148 1 275 1 134 1 139 1 
188 2 25 1 148 1 191 1 111 2 139 1 277 1 322 2 75 1 185 2 280 1 221 1 368 1 141 1 116 2 271 1 305 1 239 1 6 1 134 1 327 2 81 2 
188 1 25 1 348 1 191 1 148 1 221 1 271 1 6 1 111 2 14 1 139 1 322 1 75 1 185 1 280 1 141 1 368 1 116 1 327 1 81 2 
188 1 25 1 348 1 191 1 148 1 221 1 271 1 6 1 336 1 111 2 14 1 139 1 322 1 185 1 280 1 141 1 368 1 116 1 327 1 81 2 
188 4 126 1 348 1 148 1 217 1 218 1 221 1 220 1 130 1 271 1 134 1 338 2 12 1 340 1 111 1 299 1 139 1 322 1 77 1 185 1 280 2 141 2 368 2 116 1 342 1 325 1 120 2 258 1 326 1 186 1 305 1 327 1 81 1 
188 4 126 1 338 2 348 1 190 1 340 1 12 1 148 1 217 1 218 1 139 1 322 1 59 1 185 1 280 3 368 3 141 3 258 1 120 2 186 1 305 1 134 1 
280 1 141 1 368 1 148 1 139 1 276 1 
263 1 188 3 1 1 148 3 92 1 316 1 333 1 134 2 319 1 68 1 139 2 276 1 322 2 185 1 280 5 141 6 368 6 50 1 187 1 283 1 
287 1 188 2 290 1 191 1 148 1 56 1 244 1 156 2 6 1 10 1 203 1 111 2 75 1 76 1 114 1 116 2 117 1 118 1 119 3 79 2 305 1 22 6 210 4 81 2 83 1 25 2 86 2 89 1 221 1 271 1 356 2 228 1 42 1 97 2 231 1 182 3 232 2 367 2 139 1 322 2 277 1 185 2 280 1 141 1 368 1 100 1 187 1 239 1 327 2 371 2 
307 2 188 2 126 1 190 1 218 1 150 1 267 2 152 1 134 1 272 1 338 3 339 1 340 2 12 1 110 1 341 2 168 2 280 1 169 1 368 1 141 1 206 1 302 1 258 1 120 3 186 1 80 1 123 1 
188 2 12 1 148 2 15 1 276 1 139 1 322 1 185 1 280 2 368 2 141 2 50 1 187 1 
188 2 25 1 336 1 148 1 191 1 111 2 139 1 277 1 322 2 185 2 280 1 221 1 368 1 141 1 116 2 271 1 305 1 239 1 6 1 134 1 327 2 81 2 
188 1 348 1 148 2 139 1 322 1 185 1 280 1 368 1 141 1 92 1 50 1 333 1 283 1 
25 1 155 1 11 1 242 1 332 1 
0 1 25 1 338 2 11 1 242 2 218 1 150 1 277 1 129 1 155 2 258 1 271 1 120 2 186 1 357 1 332 2 239 1 7 1 23 1 
227 1 11 1 242 1 111 1 219 1 19 1 155 1 327 1 81 1 
129 1 11 1 357 1 
16 1 96 1 52 1 121 1 94 1 195 1 88 1 48 1 
96 2 163 2 72 1 195 4 48 1 88 1 311 1 16 4 300 1 205 1 353 1 177 1 52 3 94 2 
96 1 163 1 204 1 310 1 195 2 48 1 88 1 16 2 343 1 52 1 121 1 94 1 
96 1 57 1 195 3 48 1 88 1 16 3 205 1 300 2 353 2 52 1 121 1 94 1 
52 1 297 1 370 1 
16 1 261 1 121 1 195 1 88 1 48 1 
16 2 82 1 96 1 163 1 52 1 121 1 94 1 195 2 88 1 48 1 
196 1 
16 1 96 1 52 1 121 1 94 1 195 1 88 1 48 1 
96 1 52 1 94 1 275 1 
16 1 96 1 52 1 94 1 195 1 88 1 48 1 
16 1 208 1 201 1 
96 1 195 3 48 1 88 1 16 3 205 1 300 1 353 2 291 1 52 1 121 1 94 1 
16 2 96 1 163 1 52 1 63 1 94 1 195 2 88 1 48 1 
173 1 70 1 195 1 48 1 88 1 16 1 17 1 78 1 177 1 121 1 52 1 
16 1 96 1 52 1 121 1 195 1 88 1 48 1 
16 1 96 2 121 1 94 1 195 1 88 1 48 1 
96 1 84 1 183 1 195 2 48 2 88 2 268 1 16 2 52 1 121 1 
82 1 96 1 163 2 321 1 72 1 195 3 48 1 88 1 16 3 177 1 121 1 52 2 94 1 
9 1 189 1 96 1 163 1 70 1 195 2 48 1 88 1 17 2 16 2 78 1 52 1 132 1 121 1 94 1 
96 1 163 2 72 1 195 4 48 2 88 2 16 4 140 1 177 1 121 1 52 2 63 1 94 1 
82 1 163 1 96 1 195 3 48 1 88 1 16 3 353 1 121 1 52 1 94 1 
16 1 163 1 177 1 52 1 72 1 195 1 
96 1 52 1 

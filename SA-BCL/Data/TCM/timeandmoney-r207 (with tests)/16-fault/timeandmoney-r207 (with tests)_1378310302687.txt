#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (2,135) (2,135) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (2,135) (2,135) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (2,135) (2,135) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (2,135) (2,135) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 83 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 55 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (176,221) (176,221) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 280 262 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 41 136 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 138 298 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (10,114) 72 307 71 157 256 141 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 307 71 157 306 28 128 25 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 307 71 157 306 28 128 25 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 307 71 157 306 28 128 25 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 307 71 157 306 28 128 25 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 307 71 268 272 128 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (176,221) (176,221) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (176,221) (176,221) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (176,221) (176,221) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 196 59 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 83 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 185 (33,276) 253 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 306 272 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (120,166) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 307 71 157 306 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 307 71 157 306 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 307 71 157 256 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 307 71 268 272 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 307 71 157 306 35 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (8,181) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (159,175) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 2 1 127 2 148 1 53 1 108 1 193 1 290 1 74 2 61 1 238 1 173 1 135 1 155 1 39 1 
226 1 2 1 127 2 148 1 53 1 108 1 193 1 290 1 74 2 61 1 238 1 173 1 135 1 155 1 39 1 
226 1 2 1 127 2 148 1 53 1 108 1 193 1 290 1 74 2 61 1 238 1 173 1 135 1 155 1 39 1 
226 1 2 1 127 2 148 1 53 1 108 1 193 1 290 1 74 2 61 1 238 1 173 1 135 1 155 1 39 1 
225 1 226 1 301 2 26 1 127 4 302 2 130 1 53 1 290 1 12 1 74 4 173 1 291 3 155 1 312 1 314 3 39 1 40 1 
207 1 127 1 53 1 108 1 290 1 133 1 74 1 61 1 113 1 173 1 155 1 312 1 39 1 40 1 140 1 
127 3 302 1 130 1 53 2 57 1 290 2 74 3 61 1 291 1 312 1 314 2 39 1 40 1 
125 1 127 9 130 3 53 2 57 1 290 2 12 1 61 1 173 1 291 7 225 1 226 1 301 2 26 1 302 4 151 1 74 9 37 1 309 1 155 1 312 1 314 5 39 1 40 1 
125 1 127 9 130 3 53 2 57 1 290 2 12 1 61 1 173 1 291 7 225 1 226 1 301 2 26 1 302 4 151 1 74 9 37 1 309 1 155 1 312 1 314 5 39 1 40 1 
83 1 
180 1 44 1 261 1 158 1 186 1 282 1 248 1 236 1 94 1 110 1 62 1 97 1 
180 1 44 1 261 1 158 1 186 1 248 1 236 2 110 1 219 1 62 1 97 2 202 1 179 1 
70 1 97 1 236 1 
70 1 97 1 236 1 
97 1 236 1 
70 1 97 1 236 1 
70 1 97 1 236 1 
171 1 84 1 232 1 70 1 97 2 107 1 236 2 
124 1 158 1 159 1 49 1 217 1 169 2 91 1 10 1 11 1 62 2 18 1 19 1 179 1 180 2 228 1 230 1 231 1 237 1 153 2 311 2 202 1 204 1 203 1 
83 1 213 1 
180 2 158 2 213 2 283 1 172 1 219 1 62 2 202 1 179 1 
10 1 72 1 96 1 
180 1 228 1 124 1 159 1 213 1 49 1 169 1 91 1 11 1 153 1 134 1 62 1 311 1 18 1 19 1 203 1 
180 3 219 1 158 3 62 3 213 1 202 3 217 1 179 3 
180 1 158 1 86 1 62 1 248 1 202 1 179 1 
180 1 172 1 158 1 219 1 62 1 283 1 248 1 202 1 179 1 
180 2 44 1 261 1 158 2 186 1 248 1 217 1 236 1 55 1 172 1 110 1 219 1 62 2 222 1 97 1 202 2 204 1 179 2 
192 1 180 2 158 2 62 2 213 1 282 1 202 1 217 1 179 1 
180 1 44 1 261 1 158 1 186 1 248 1 303 1 217 1 236 1 110 1 62 1 222 1 97 1 202 1 204 1 179 1 
180 2 158 2 217 1 172 1 10 1 219 1 62 2 96 1 202 2 179 2 
180 1 228 1 124 1 159 1 213 1 49 1 169 1 91 1 11 1 153 1 62 1 311 1 18 1 19 1 203 1 
180 1 228 1 124 1 213 1 169 1 91 1 8 1 286 1 11 1 153 1 62 1 311 1 18 1 19 1 203 1 
126 1 245 1 3 1 162 1 4 2 7 1 285 1 164 1 252 1 10 2 218 1 137 1 96 2 98 1 263 1 271 1 72 2 307 1 75 1 200 1 114 1 80 2 277 4 316 2 
20 1 180 1 110 1 158 1 62 1 248 1 202 1 179 1 
119 1 180 5 143 1 158 5 213 1 282 1 217 2 192 1 172 1 219 1 62 5 202 4 204 1 179 4 
20 1 180 2 158 2 86 1 62 2 248 1 202 2 179 2 
50 1 215 1 
50 1 215 1 
201 1 178 1 
201 1 178 1 
201 1 178 1 
292 1 50 1 215 1 
64 1 50 1 215 1 
300 1 0 1 201 1 50 2 178 1 215 2 
292 1 50 1 215 1 
292 1 50 1 215 1 
188 1 50 1 215 1 
188 1 50 1 215 1 
188 1 50 1 215 1 
82 2 123 2 161 2 50 2 215 2 167 1 236 2 170 1 287 2 60 2 79 1 176 1 221 1 97 2 
82 1 180 1 123 1 158 1 161 1 50 1 215 1 170 1 236 1 287 1 196 1 60 1 62 1 97 1 202 1 179 1 
226 1 173 1 155 1 
173 1 155 1 140 1 
226 2 173 3 273 1 140 1 90 1 92 1 
226 1 173 2 116 1 140 1 90 1 92 1 
226 1 173 2 140 1 90 2 92 1 
45 1 70 1 97 1 236 1 
145 1 70 2 36 1 250 1 97 2 236 2 
84 1 232 1 280 1 70 1 107 1 236 2 171 1 195 1 293 1 97 2 117 1 278 1 
84 1 232 1 280 1 262 1 107 1 236 1 171 1 195 1 293 1 97 1 117 1 278 1 
83 1 11 1 24 1 
11 1 89 1 
156 1 
11 1 203 1 
228 1 11 3 243 1 24 2 308 1 203 1 
228 1 11 1 203 1 
299 1 11 1 
296 1 67 1 144 1 104 1 208 1 234 1 162 2 263 1 4 3 7 1 189 1 54 1 288 1 80 3 98 1 99 1 277 6 
296 1 67 1 144 1 104 1 208 1 234 1 162 2 263 1 4 3 7 1 189 1 54 1 288 1 80 3 98 1 99 1 277 6 
296 1 67 1 144 1 104 1 208 1 210 1 234 1 162 2 263 1 4 3 7 1 189 1 54 1 288 1 80 3 98 1 99 1 277 6 
100 1 144 1 208 1 80 1 277 1 99 1 54 2 
126 2 281 1 162 3 4 4 7 1 54 1 218 2 288 1 98 1 99 1 296 1 65 1 67 1 144 1 104 1 234 1 263 2 189 1 32 1 271 2 75 2 80 4 277 8 316 4 
48 1 127 2 163 1 169 1 91 1 53 1 56 1 290 1 220 1 61 1 173 2 291 1 140 1 18 1 295 1 226 1 105 1 190 1 304 1 153 1 74 2 199 1 273 1 155 1 311 1 314 1 312 1 39 1 40 1 240 1 
48 1 127 3 163 1 169 1 91 1 53 1 51 1 290 1 220 1 61 1 173 2 291 2 140 1 18 1 295 1 226 1 68 1 105 1 190 1 304 1 153 1 74 3 199 1 273 1 155 1 311 1 314 1 312 1 40 1 118 1 
48 1 127 2 169 1 91 1 51 1 61 1 220 1 173 2 291 2 140 1 18 1 295 1 226 1 105 1 304 1 153 1 74 2 199 1 273 1 311 1 155 1 314 1 312 1 40 1 118 1 
1 1 48 2 127 1 91 1 169 1 53 1 290 1 11 1 220 2 61 2 18 1 19 1 142 1 66 1 68 1 267 1 304 2 153 1 74 1 77 1 311 1 315 1 203 1 
48 1 127 1 163 1 169 1 91 1 53 1 56 1 290 1 220 1 61 1 173 2 140 1 18 1 295 1 226 1 105 1 190 1 304 1 153 1 74 1 199 1 273 1 155 1 311 1 39 1 118 1 
101 1 
41 1 232 1 235 1 107 1 169 1 236 1 171 1 153 1 136 1 311 1 97 1 117 1 19 1 278 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
97 1 236 1 
298 1 171 1 232 1 138 1 223 1 97 1 235 1 107 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 138 1 223 1 97 1 317 1 236 1 
298 1 171 1 232 1 138 1 223 1 97 1 235 1 107 1 317 1 236 1 
296 1 83 1 67 1 126 1 104 1 245 1 234 1 213 2 162 1 263 1 4 3 7 1 189 1 164 1 252 1 218 1 271 1 75 1 80 2 277 5 98 1 316 2 
126 1 245 1 88 1 4 1 284 1 71 1 252 1 10 4 218 1 72 4 271 1 307 1 75 1 80 3 98 1 157 1 224 1 277 4 141 1 316 2 256 1 
124 1 126 1 159 1 245 1 158 1 47 1 213 1 49 1 4 1 284 1 91 1 169 1 217 1 252 1 11 1 218 1 134 1 62 2 96 1 18 1 19 1 179 1 180 2 102 1 228 1 260 1 27 1 153 1 271 1 75 1 311 1 115 1 80 1 202 1 277 2 203 1 204 1 316 2 
158 1 245 3 159 2 162 7 4 10 7 3 169 3 91 2 251 1 252 3 10 6 11 2 96 6 18 2 19 1 98 3 179 1 102 1 180 3 260 1 104 1 263 3 187 1 189 1 271 3 33 2 197 2 274 1 202 1 277 19 118 1 204 1 203 2 124 2 126 3 211 2 213 2 49 2 284 1 129 2 217 1 218 3 288 4 62 3 137 2 296 1 67 1 228 2 234 1 150 2 71 2 153 3 72 6 307 2 75 3 311 3 80 9 316 6 
242 1 245 2 158 1 4 1 164 1 169 7 91 4 252 2 93 1 11 4 16 1 255 1 18 3 19 2 179 1 102 1 180 1 260 1 182 1 30 1 31 1 271 2 275 1 202 1 277 2 118 1 203 3 126 2 217 1 218 2 62 1 142 1 297 1 228 1 237 2 153 6 75 2 311 7 80 1 315 1 316 4 241 1 240 1 
126 1 245 1 158 1 162 1 4 2 284 1 7 1 252 1 10 1 172 1 218 1 219 1 62 1 137 1 96 1 98 1 179 1 21 1 180 1 263 1 71 1 72 1 271 1 307 1 75 1 80 1 202 1 277 3 316 2 
126 1 245 1 162 1 164 1 252 1 10 1 288 1 218 1 72 1 271 1 307 1 75 1 200 1 96 1 80 2 277 2 98 1 316 2 
126 1 245 1 3 1 162 1 263 1 4 2 7 1 164 1 252 1 10 1 218 1 72 1 271 1 75 1 137 1 96 1 277 2 316 2 
126 1 245 1 162 2 4 2 7 1 164 1 252 1 10 2 218 1 288 1 137 1 96 2 98 1 263 1 71 1 271 1 72 2 307 1 75 1 80 2 277 4 316 2 
242 1 126 1 245 1 162 1 252 1 10 1 288 1 218 1 72 1 271 1 307 1 75 1 200 1 96 1 80 2 277 2 98 1 316 2 
242 1 126 1 245 1 3 1 162 1 263 1 4 2 7 1 252 1 10 1 218 1 72 1 271 1 75 1 137 1 96 1 277 2 316 2 
242 1 126 1 245 1 162 2 4 2 7 1 252 1 10 2 218 1 288 1 137 1 96 2 98 1 263 1 71 1 271 1 72 2 307 1 75 1 80 2 277 4 316 2 
126 1 245 1 162 2 4 2 7 1 252 1 10 2 218 1 288 1 137 1 96 2 98 1 263 1 71 1 271 1 72 2 307 1 75 1 80 2 277 4 316 2 
124 1 126 1 159 1 245 1 213 1 49 1 4 1 91 1 169 1 252 1 11 1 218 1 62 1 18 1 19 1 102 1 180 1 228 1 260 1 150 1 153 1 271 1 75 1 311 1 80 1 277 2 203 1 316 2 
124 1 126 1 245 1 213 1 4 1 91 1 169 1 8 1 286 1 252 1 289 1 11 1 218 1 62 1 18 1 19 1 102 1 180 1 228 1 260 1 153 1 271 1 75 1 311 1 80 1 277 2 203 1 316 2 
126 1 245 1 162 2 4 2 284 1 7 1 252 1 10 2 218 1 288 1 137 1 96 2 98 1 263 1 71 1 271 1 72 2 307 1 75 1 80 2 277 4 316 2 
124 1 126 1 159 1 245 1 162 2 4 2 49 1 7 1 91 1 169 1 252 1 10 2 288 1 11 1 218 1 62 1 137 1 96 2 18 1 98 1 180 1 228 1 263 1 150 1 71 1 72 2 153 1 271 1 307 1 197 1 75 1 311 1 80 2 277 4 240 1 203 1 316 2 
126 1 245 1 158 1 162 1 4 1 7 1 284 1 252 1 172 1 10 1 288 1 218 1 219 1 62 1 137 1 96 1 98 1 179 1 180 1 71 1 271 1 72 1 198 1 307 1 75 1 80 2 202 1 277 3 316 2 
257 1 65 1 126 2 25 1 88 1 128 1 28 1 4 2 71 1 218 2 271 2 306 1 307 1 75 2 254 1 80 4 294 1 98 1 157 1 224 1 277 6 316 4 
257 1 65 1 126 2 25 1 88 1 128 1 28 1 4 2 71 1 218 2 271 2 306 1 307 1 75 2 254 1 80 4 294 1 98 1 157 1 224 1 277 6 316 4 
126 1 88 1 162 1 128 1 4 5 7 1 218 1 254 1 294 1 224 1 98 2 296 1 65 1 67 1 104 1 25 1 234 1 263 1 28 1 189 1 71 1 306 1 271 1 307 1 75 1 80 6 277 11 157 1 316 2 
257 1 65 1 126 2 25 1 88 1 128 1 28 1 4 2 71 1 218 2 271 2 306 1 307 1 75 2 254 1 80 4 294 1 98 1 157 1 224 1 277 6 316 4 
126 2 281 1 88 2 162 1 128 2 4 8 7 1 218 2 132 1 137 1 254 2 294 1 224 2 98 2 65 1 25 1 263 1 28 2 268 1 71 2 271 2 306 2 73 1 307 2 75 2 272 1 76 1 80 9 277 17 316 4 
82 1 259 1 300 1 123 1 279 1 60 1 17 1 161 1 50 1 215 1 
64 1 168 1 
82 1 123 1 60 1 13 1 209 1 161 1 50 1 215 1 131 1 
82 1 123 1 161 1 50 1 215 1 167 1 170 1 236 1 287 2 60 1 79 1 176 1 221 1 97 1 
82 1 123 1 161 1 50 1 215 1 167 1 170 1 236 1 287 2 60 1 79 1 176 1 221 1 97 1 
82 1 123 1 161 1 50 1 215 1 167 1 170 1 236 1 287 2 60 1 79 1 176 1 221 1 97 1 
152 1 0 1 292 1 
152 1 0 1 292 1 
188 1 191 1 
0 1 188 1 191 1 
15 1 6 1 
82 1 123 1 70 1 161 1 50 1 215 1 167 1 236 1 287 1 196 1 60 1 59 1 79 1 97 1 
152 1 292 1 
0 1 188 1 191 1 
121 1 126 1 245 1 158 2 4 1 284 1 91 1 169 2 252 1 11 1 218 1 62 2 16 1 18 1 255 1 180 2 102 1 22 1 260 1 184 1 237 2 271 1 153 2 34 1 75 1 311 2 310 1 80 1 277 2 203 1 316 2 
226 1 105 1 106 1 266 1 163 1 91 1 169 2 305 1 153 2 220 1 173 2 273 1 155 1 311 2 140 1 18 1 118 1 240 1 295 1 
226 1 105 1 266 1 163 1 169 1 91 1 270 1 153 1 220 1 173 2 273 1 155 1 311 1 140 1 18 1 118 1 295 1 
142 1 66 1 249 1 106 1 91 1 169 1 11 1 153 1 220 1 311 1 18 1 19 1 315 1 203 1 
226 1 105 1 106 1 266 1 163 1 91 1 169 1 305 1 153 1 220 1 173 2 273 1 155 1 311 1 140 1 18 1 118 1 295 1 
214 1 
83 1 120 1 246 1 166 1 
122 1 171 1 43 1 232 1 246 1 117 1 235 1 107 1 
228 1 243 1 232 1 46 1 185 1 89 1 235 1 91 2 107 1 169 1 171 1 11 2 253 1 153 1 311 1 276 1 18 1 117 1 19 1 278 1 203 1 
171 1 306 1 232 1 272 1 246 1 88 1 224 1 117 1 235 1 107 1 
296 1 232 1 104 1 246 2 69 1 7 1 189 1 235 1 107 1 29 2 236 1 171 1 239 1 14 1 97 1 117 1 98 2 
171 1 232 1 246 1 235 1 166 1 107 1 
71 1 307 1 137 1 246 1 7 1 117 1 98 1 
153 1 311 1 19 1 169 1 
171 1 232 1 246 1 117 1 235 1 278 1 107 1 205 1 
123 1 60 1 149 1 
123 1 279 1 60 1 147 1 6 1 
123 1 60 1 149 1 
123 1 60 1 149 1 
123 1 60 1 146 1 
123 1 60 1 146 1 
123 1 60 1 146 1 
123 1 60 1 
50 1 215 1 
126 1 88 1 162 1 4 4 7 1 218 1 98 1 224 1 296 1 65 1 67 1 104 1 234 1 263 1 189 1 306 1 271 1 272 1 75 1 80 3 277 7 316 2 
65 1 229 1 126 2 88 1 4 1 71 1 218 2 271 2 306 1 307 1 75 2 272 1 80 3 98 1 157 1 224 1 277 4 316 4 
126 2 281 1 88 1 162 1 4 5 7 1 218 2 132 1 137 1 224 1 98 2 65 1 263 1 268 1 71 2 306 1 271 2 73 1 307 2 272 1 75 2 76 1 80 6 277 11 316 4 
65 1 126 1 88 1 162 1 263 1 4 4 7 1 268 1 71 2 218 1 132 1 271 1 306 1 73 1 307 2 76 1 75 1 272 1 137 1 80 6 98 2 277 10 224 1 316 2 
126 1 88 1 162 1 4 4 7 1 218 1 98 1 224 1 296 1 65 1 67 1 104 1 234 1 263 1 189 1 306 1 271 1 272 1 75 1 80 3 277 7 316 2 
65 1 126 1 88 1 162 1 263 1 4 4 7 1 268 1 71 2 218 1 132 1 271 1 306 1 73 1 307 2 76 1 75 1 272 1 137 1 80 6 98 2 277 10 224 1 316 2 
126 3 281 1 88 1 162 1 4 5 7 1 218 3 132 1 137 1 224 1 98 2 65 1 229 1 263 1 268 1 71 2 306 1 271 3 73 1 307 2 272 1 75 3 76 1 80 6 277 11 316 6 
126 3 281 1 88 1 162 2 4 5 7 1 218 3 132 1 137 1 224 1 98 2 257 1 65 1 263 2 268 1 71 2 306 1 271 3 73 1 307 2 272 1 75 3 76 1 80 6 277 11 316 6 
296 2 67 1 104 4 234 1 263 5 162 9 4 5 7 2 189 4 288 4 239 1 80 5 99 1 277 10 98 2 
126 3 281 1 88 1 162 1 4 5 7 1 218 3 132 1 137 1 224 1 98 2 257 1 65 1 263 1 268 1 71 2 306 1 271 3 73 1 307 2 272 1 75 3 76 1 80 6 277 11 316 6 
296 1 67 1 126 2 104 1 281 1 234 1 162 2 263 1 4 4 7 1 189 1 288 1 218 2 271 2 75 2 80 3 98 1 277 7 316 4 
296 1 83 1 67 1 104 1 234 1 162 1 263 1 80 2 4 3 7 1 189 1 277 5 98 1 
229 1 126 1 263 1 162 2 4 2 7 1 71 1 218 1 288 1 271 1 307 1 75 1 137 1 80 2 98 1 277 4 316 2 
71 1 306 1 307 1 88 1 80 3 4 1 98 1 157 1 224 1 277 4 
71 1 307 1 88 1 80 3 4 1 98 1 157 1 224 1 277 4 256 1 
88 1 4 1 277 1 
80 1 277 1 224 1 
229 1 126 1 211 1 162 3 263 2 4 3 7 1 71 1 218 1 288 1 271 1 307 1 75 1 137 1 80 3 277 6 98 1 316 2 
65 1 126 1 88 1 162 1 263 1 4 4 7 1 268 1 71 2 218 1 132 1 271 1 306 1 73 1 307 2 76 1 75 1 272 1 137 1 80 6 98 2 277 10 224 1 316 2 
296 1 104 1 263 1 162 2 4 3 7 1 189 1 288 1 80 3 98 1 277 6 
67 1 104 1 126 1 281 1 234 1 162 2 263 1 4 2 189 1 288 1 218 1 271 1 75 1 80 1 177 1 277 3 316 2 
296 1 65 1 126 1 104 2 263 3 162 5 4 5 189 2 7 2 218 1 288 2 271 1 75 1 239 1 80 5 277 10 98 2 316 2 
65 1 126 1 162 1 218 1 288 1 271 1 307 1 75 1 80 2 98 1 277 2 316 2 
65 1 126 1 263 1 162 2 4 2 7 1 71 1 218 1 288 1 271 1 307 1 75 1 137 1 80 2 98 1 277 4 316 2 
257 1 65 1 126 3 104 1 281 1 263 1 162 2 4 2 189 1 218 3 288 1 271 3 75 3 80 1 177 1 277 3 316 6 
126 4 281 1 88 3 162 4 247 1 4 11 7 3 216 1 218 4 288 2 137 2 224 3 98 4 296 1 257 1 65 1 67 1 229 1 104 1 234 1 263 2 189 1 71 3 306 1 271 4 307 3 75 4 35 1 80 12 277 23 157 1 316 8 
192 1 180 1 42 1 158 1 62 1 213 1 282 1 
81 1 42 1 180 1 206 1 158 1 213 1 282 1 265 1 192 1 111 1 154 1 62 1 
142 1 83 1 11 1 153 1 311 1 18 1 315 1 19 1 91 1 203 1 169 1 
180 2 228 1 124 1 158 1 159 1 213 1 91 1 217 1 169 1 11 1 153 1 62 2 311 1 202 1 18 1 19 1 203 1 179 1 
299 1 180 2 228 2 44 1 124 1 158 2 233 1 159 1 213 1 248 1 91 1 217 1 169 1 11 3 110 1 153 1 62 2 311 1 38 1 202 2 18 1 203 2 179 1 
124 1 44 1 158 2 213 1 248 1 169 2 217 1 91 1 52 1 8 1 11 3 62 2 18 1 179 1 180 2 299 1 228 2 233 1 153 2 110 1 311 2 38 1 202 2 203 2 
11 1 181 1 153 1 233 1 311 1 89 1 97 1 169 1 236 1 
11 1 153 1 233 1 175 1 311 1 89 1 97 1 169 1 236 1 
23 1 153 1 311 1 18 1 91 1 169 1 
243 1 91 3 169 6 93 1 11 3 16 1 18 2 19 2 227 1 228 1 182 1 30 1 237 1 153 5 311 6 275 1 203 2 241 1 240 1 118 1 
124 1 126 2 245 2 158 1 159 1 213 2 162 1 4 3 49 1 7 1 284 1 91 1 217 1 169 1 252 2 11 1 218 2 62 2 18 1 98 1 179 1 296 1 180 2 67 1 228 1 22 1 104 1 234 1 263 1 189 1 150 1 271 2 153 1 33 1 197 1 75 2 311 1 80 2 202 1 277 5 203 1 316 4 240 1 
70 1 97 1 236 1 
228 1 23 1 243 1 24 1 46 1 169 2 91 2 11 2 153 2 311 2 18 1 240 1 203 1 
142 1 91 1 169 4 52 1 11 1 153 4 311 4 313 1 18 1 19 1 315 1 240 1 203 1 
297 1 228 1 233 1 182 1 169 2 91 2 251 1 31 1 11 1 153 2 311 2 18 1 241 1 203 1 
153 1 173 1 155 1 311 1 140 1 18 1 19 1 91 1 295 1 169 1 
169 2 91 1 11 1 153 2 34 1 311 2 16 1 18 1 240 1 118 1 203 1 
142 1 233 1 169 5 91 2 30 1 11 3 153 4 311 5 16 1 313 1 275 1 18 2 315 1 19 1 240 1 203 2 
142 1 233 1 169 5 91 2 30 1 9 1 11 3 153 4 311 5 16 1 313 1 18 2 315 1 19 1 240 1 203 2 
180 2 228 1 124 1 158 1 213 1 91 1 217 1 169 1 8 1 11 1 153 1 62 2 311 1 202 1 18 1 19 1 203 1 179 1 
227 1 228 1 243 1 233 1 182 1 169 1 91 2 11 1 153 1 311 1 18 1 241 1 203 1 
58 1 112 1 212 1 213 1 87 1 
103 1 44 1 261 1 70 1 212 2 213 1 87 2 186 1 248 1 236 2 58 1 110 1 112 2 174 1 222 1 97 2 63 1 
121 1 180 1 158 1 212 1 184 1 58 1 112 1 62 1 310 1 
103 1 58 1 63 1 
83 1 314 1 312 1 40 1 
290 1 74 1 127 1 314 1 312 1 40 1 53 1 
61 1 48 1 127 1 
258 1 127 3 264 1 148 2 53 1 290 1 74 3 95 1 314 1 312 1 39 1 40 1 
290 1 301 1 74 2 291 1 127 2 314 1 312 1 40 1 53 1 
226 1 127 1 302 1 53 1 290 1 12 1 74 1 173 1 155 1 314 1 39 1 
290 1 74 1 127 1 314 1 312 1 39 1 53 1 
290 1 74 1 127 1 312 2 39 1 40 1 53 1 
290 1 74 1 160 1 127 1 139 1 39 1 53 1 
127 3 302 1 151 1 130 1 53 1 290 1 74 3 291 2 309 1 312 1 314 2 39 1 40 1 
226 1 85 1 127 2 53 1 290 1 74 2 173 2 273 1 291 1 155 1 314 1 312 1 39 1 40 1 140 1 
225 1 301 1 127 4 302 1 130 1 53 2 290 2 74 4 291 2 312 1 314 2 39 1 40 1 
290 1 74 1 127 1 314 1 312 1 39 1 40 1 53 1 
258 1 127 4 148 1 302 1 130 1 53 1 290 1 74 4 113 1 95 1 291 2 312 2 314 3 40 2 
125 1 127 2 165 1 53 1 290 1 74 2 291 1 78 1 314 1 312 1 39 1 40 1 
258 2 127 3 148 2 5 1 53 1 290 1 74 3 95 1 314 1 312 1 39 1 40 1 
269 1 194 2 183 1 314 2 
109 1 290 1 74 1 127 1 39 1 53 1 
290 1 74 2 291 1 309 1 127 2 314 1 312 1 39 1 40 1 53 1 
244 1 
290 1 74 1 127 1 314 1 312 1 39 1 40 1 53 1 
290 1 74 3 291 1 309 1 127 3 314 1 312 1 39 1 40 1 148 1 53 1 
113 1 314 1 302 1 130 1 
314 1 312 1 

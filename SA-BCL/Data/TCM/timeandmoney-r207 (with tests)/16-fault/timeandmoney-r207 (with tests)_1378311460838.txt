#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (23,197,243) 202 (4,18,120) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (23,197,243) 202 192 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (23,197,243) 202 192 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 325 242 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 325 242 75 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 293 259 273 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 167 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (104,110) 30 213 132 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 45 91 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 293 331 206 207 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 293 168 206 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 293 331 206 207 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 293 331 206 207 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 293 331 206 207 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 167 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 293 259 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 293 168 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (23,197,243) 202 192 16 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (23,197,243) 202 192 16 269 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 193 128 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 1 244 1 72 1 177 1 283 1 180 2 157 1 160 9 161 1 252 5 56 1 78 2 27 1 186 3 162 6 42 4 60 1 79 1 211 9 274 2 65 2 237 1 276 1 257 2 88 2 295 1 219 2 67 1 
324 1 244 1 72 1 177 1 283 1 180 2 157 1 160 9 161 1 252 5 56 1 78 2 27 1 186 3 162 6 42 4 60 1 79 1 211 9 274 2 65 2 237 1 276 1 257 2 88 2 295 1 219 2 67 1 
324 1 244 1 72 1 177 1 283 1 180 2 157 1 160 10 161 1 252 6 56 1 78 2 27 1 186 4 162 7 42 5 60 1 79 1 211 10 274 2 65 2 237 1 276 1 257 2 88 2 295 1 219 2 67 1 
324 1 244 1 72 1 177 1 283 1 180 2 160 7 161 1 252 4 56 1 78 2 27 1 186 2 162 4 42 3 60 1 79 1 211 7 274 1 65 2 237 1 276 1 257 2 88 2 295 1 219 2 67 1 
160 4 252 3 78 1 186 1 162 3 42 2 60 1 79 1 244 1 211 4 274 2 72 1 237 1 65 1 88 1 180 1 219 1 157 1 
252 1 161 1 160 2 78 1 60 1 79 1 211 2 342 1 5 1 177 1 237 1 65 1 266 1 257 1 88 1 219 1 
324 1 160 3 252 2 78 2 186 1 162 1 42 1 60 1 79 1 211 3 237 1 65 2 257 1 
324 1 252 5 160 9 78 2 162 7 186 3 34 1 42 4 60 1 79 1 280 1 244 1 211 9 274 2 72 1 276 1 237 1 65 2 283 1 88 1 257 1 180 1 219 1 157 1 
324 1 252 5 160 9 78 2 162 7 186 3 34 1 42 4 60 1 79 1 280 1 244 1 211 9 274 2 72 1 276 1 237 1 65 2 283 1 88 1 257 1 180 1 219 1 157 1 
125 1 217 1 167 1 
178 1 340 2 217 1 
33 1 197 2 84 2 299 1 163 2 23 2 243 2 154 2 
33 1 197 2 299 1 94 1 300 1 243 2 20 1 21 2 147 1 305 2 149 1 265 1 200 1 23 3 179 1 154 2 101 1 335 1 9 1 184 2 134 1 39 1 315 1 31 1 338 1 163 3 135 1 255 1 62 1 290 2 317 1 214 1 84 2 12 2 112 1 139 1 218 1 
197 1 84 1 299 1 97 1 163 1 23 1 243 1 154 1 
243 1 18 1 202 1 
229 1 197 1 203 1 243 1 163 1 164 1 120 2 4 1 84 1 275 1 125 1 126 2 23 1 217 1 154 1 
151 1 126 1 228 1 120 1 55 1 
117 1 125 1 151 1 126 2 228 1 254 1 120 2 217 1 
126 1 228 1 120 1 
197 1 299 1 243 1 163 1 120 1 84 1 151 1 126 1 97 1 23 1 7 1 154 1 
217 1 
124 1 125 1 151 1 126 2 228 1 254 1 120 2 217 1 
159 1 220 1 102 1 297 1 312 2 271 2 221 1 254 1 120 5 125 1 151 2 126 5 99 1 334 1 153 2 228 2 217 1 310 1 44 1 
33 1 167 1 
33 2 185 1 197 1 253 1 243 2 163 2 84 1 23 2 154 1 
104 1 30 1 198 1 
33 1 9 1 184 1 134 1 94 1 300 1 338 1 163 1 290 1 317 1 214 1 12 1 23 1 140 1 179 1 218 1 
33 1 84 1 133 1 197 3 163 3 23 3 243 3 154 3 
137 1 197 1 275 1 163 1 23 1 243 1 154 1 
185 1 197 1 84 1 275 1 253 1 163 1 23 1 243 1 154 1 
33 1 197 3 94 1 299 1 300 1 243 3 120 1 19 1 20 1 4 1 21 2 147 1 305 1 265 1 200 1 126 1 23 4 179 1 154 3 335 1 158 1 9 1 229 1 184 1 233 1 133 1 134 1 315 1 253 1 203 1 338 1 135 1 163 4 255 1 164 1 62 1 290 1 317 1 214 1 84 2 12 1 275 1 139 1 218 1 
192 1 197 1 133 1 163 1 23 1 243 2 154 1 202 1 
158 1 229 1 133 2 197 3 253 1 203 1 243 3 163 3 120 1 164 1 19 1 4 1 84 1 275 1 126 1 170 1 23 3 217 1 154 3 
104 1 133 1 197 2 253 1 243 2 163 2 198 1 84 1 23 2 154 2 
33 1 9 1 184 1 134 1 94 1 300 1 338 1 163 1 290 1 317 1 214 1 12 1 23 1 179 1 218 1 
33 1 9 1 184 1 0 1 134 1 94 1 300 1 163 1 290 1 317 1 329 1 12 1 23 1 179 1 218 1 
335 1 45 1 255 1 110 1 62 1 20 1 21 2 303 1 147 1 305 1 318 1 200 1 53 1 139 1 
197 1 144 1 275 1 203 1 163 1 23 1 243 1 154 1 
9 1 104 1 184 1 133 1 197 1 134 1 94 1 300 1 338 1 243 1 163 2 19 1 290 1 317 1 214 1 12 1 23 2 179 1 218 1 154 1 
33 1 133 2 197 4 253 1 243 5 163 4 19 1 192 1 84 1 23 4 89 1 154 4 202 1 346 1 
144 1 137 1 197 2 275 1 163 2 23 2 243 2 154 2 
86 1 1 1 
86 1 1 1 
278 1 172 1 
278 1 172 1 
278 1 172 1 
6 1 86 1 1 1 
337 1 86 2 1 2 61 1 278 1 172 1 296 1 
86 1 145 1 1 1 
6 1 86 1 1 1 
6 1 86 1 1 1 
123 1 86 1 1 1 
123 1 86 1 1 1 
123 1 86 1 1 1 
325 1 270 1 86 1 242 1 1 1 223 1 
325 1 270 1 86 1 242 1 126 1 1 1 120 1 75 1 223 1 
88 1 180 1 219 1 
88 1 219 1 342 1 
212 1 308 1 116 1 180 2 219 3 342 1 
308 1 116 1 109 1 180 1 219 2 342 1 
308 2 116 1 180 1 219 2 342 1 
17 1 220 1 297 2 143 1 45 1 91 1 261 1 48 1 121 1 120 5 22 1 224 1 151 4 125 1 178 1 126 5 98 1 153 1 228 1 333 2 310 2 312 1 271 1 205 1 59 1 340 2 254 1 318 1 114 1 344 1 240 1 217 2 
17 3 220 1 297 6 143 2 45 3 91 3 261 4 48 3 119 1 121 3 120 9 199 1 151 7 125 1 178 3 126 9 99 1 98 2 228 6 153 2 310 5 55 5 312 2 271 2 40 1 11 1 59 1 340 6 254 1 208 5 318 3 114 3 43 1 294 1 217 5 
17 1 297 2 143 1 197 1 45 1 91 1 299 1 261 1 48 1 243 1 120 3 121 1 125 1 151 2 178 1 126 3 97 1 99 1 98 1 23 1 7 1 153 1 333 1 154 1 310 2 312 1 271 1 205 1 163 1 340 2 84 1 318 1 114 1 217 2 240 1 
297 4 299 1 261 2 121 2 120 4 125 1 126 4 178 2 7 1 310 3 312 1 271 1 11 1 318 2 84 1 240 1 17 2 143 1 45 2 197 1 91 2 48 2 243 1 199 1 151 3 97 1 98 1 99 1 23 1 333 2 153 1 154 1 205 1 163 1 340 4 114 2 294 1 217 3 
68 1 134 1 167 1 
134 1 146 1 
3 1 
134 1 317 1 
230 1 68 2 134 3 300 1 345 1 317 1 
134 1 300 1 317 1 
134 1 74 1 
182 1 311 1 287 3 106 1 41 1 48 1 147 2 305 5 318 1 307 2 13 1 169 1 112 3 63 1 155 1 24 1 321 1 
182 1 311 1 287 4 106 1 41 1 48 1 147 2 305 5 318 1 307 2 13 1 169 2 112 3 63 1 155 1 24 1 321 1 
48 1 147 2 305 5 307 2 24 1 155 1 311 1 182 1 287 3 106 1 41 1 189 1 13 1 318 1 112 3 169 1 63 1 321 1 
147 1 305 3 293 1 112 2 259 1 281 1 63 1 321 1 24 2 273 1 90 1 
48 1 20 2 21 4 147 3 305 7 307 3 200 2 225 1 226 1 309 1 155 1 24 1 182 1 287 5 106 1 41 1 62 2 318 1 13 1 112 4 169 2 63 1 139 2 321 1 
47 1 36 1 201 1 179 1 180 1 250 1 252 1 184 1 160 2 130 1 234 1 78 1 162 1 60 1 79 1 290 1 211 2 342 1 212 1 256 1 12 1 65 1 237 1 88 1 257 1 258 1 320 1 218 1 219 2 196 1 
47 1 201 1 179 1 180 1 181 1 38 1 250 1 252 1 184 1 160 3 234 1 78 1 57 1 162 2 60 1 79 1 290 1 211 3 342 1 212 1 256 1 12 1 65 1 88 1 257 1 258 1 320 1 218 1 219 2 196 1 
47 1 179 1 180 1 38 1 250 1 252 1 184 1 160 2 57 1 162 2 60 1 79 1 290 1 211 2 342 1 212 1 256 1 12 1 257 1 88 1 258 1 320 1 218 1 219 2 196 1 
9 1 313 1 160 1 184 1 134 1 78 1 118 1 47 2 50 1 174 1 290 1 317 1 211 1 96 1 12 1 256 2 249 1 65 1 257 2 179 1 218 1 258 2 181 1 
47 1 36 1 201 1 179 1 180 1 38 1 250 1 184 1 160 1 234 1 78 1 290 1 211 1 342 1 212 1 256 1 12 1 65 1 237 1 88 1 257 1 258 1 320 1 218 1 219 2 196 1 
176 1 
220 1 297 2 222 1 298 1 260 2 174 1 120 4 263 1 306 1 126 4 178 2 37 1 227 2 228 6 179 1 267 2 310 2 9 2 10 1 312 1 184 2 231 1 268 1 271 1 134 1 317 1 12 2 194 1 142 1 143 1 50 1 153 1 107 2 28 2 254 3 340 2 290 2 291 2 210 2 343 2 115 1 171 1 217 1 218 1 
231 1 268 1 298 1 254 1 120 2 124 1 126 2 227 1 171 1 228 2 142 1 
268 1 231 1 298 1 126 1 171 1 120 1 142 1 291 1 210 1 
231 1 268 1 28 1 298 1 254 1 120 2 291 1 210 1 124 1 126 2 227 1 171 1 228 2 142 1 
220 1 173 1 297 1 298 1 299 1 260 2 2 1 120 4 124 1 125 2 126 4 178 2 37 1 227 4 228 7 7 1 267 2 310 1 10 1 312 1 231 1 268 1 131 1 271 1 84 1 319 1 142 1 197 1 243 1 97 1 23 1 153 1 154 1 251 1 28 4 107 2 163 1 254 3 291 3 210 3 343 2 171 1 217 2 
220 1 297 1 298 1 260 2 120 3 306 1 125 1 126 3 178 2 37 1 227 2 228 4 153 1 267 2 310 1 10 1 312 1 268 1 231 1 271 1 28 2 107 2 254 2 340 2 291 2 210 2 343 2 171 1 217 2 142 1 
220 1 297 1 298 1 260 2 120 3 125 1 178 2 126 3 37 1 227 2 228 4 153 1 267 2 310 1 251 1 10 1 312 1 268 1 231 1 131 1 271 1 28 2 107 2 254 2 291 2 210 2 343 2 319 1 171 1 217 1 142 1 
220 1 297 1 298 1 260 2 120 3 125 1 178 2 126 3 37 1 227 2 228 4 153 1 267 2 310 1 251 1 10 1 312 1 268 1 231 1 131 1 271 1 28 2 107 2 254 2 291 2 210 2 343 2 319 1 171 1 217 1 142 1 
220 1 297 1 298 1 260 2 120 3 71 1 125 1 126 3 37 1 227 2 228 4 153 1 267 2 310 1 312 1 103 1 336 2 268 1 231 1 271 1 28 2 108 2 254 2 340 2 291 2 210 2 319 1 239 1 171 1 217 1 142 1 
220 1 173 1 297 1 298 1 260 2 120 3 125 1 178 2 126 3 37 1 227 3 228 5 153 1 267 2 310 1 251 1 10 1 312 1 268 1 231 1 131 1 271 1 107 2 28 3 254 2 291 3 210 3 343 2 319 1 171 1 217 1 142 1 
220 1 173 1 297 1 298 1 260 2 120 3 125 1 178 2 126 3 37 1 227 3 228 5 153 1 267 2 310 1 251 1 10 1 312 1 268 1 231 1 131 1 271 1 107 2 28 3 254 2 291 3 210 3 343 2 319 1 171 1 217 1 142 1 
220 1 297 1 298 1 260 2 120 3 71 1 306 1 125 1 126 3 37 1 227 2 228 4 153 1 267 2 310 1 312 1 268 1 231 1 336 2 271 1 28 2 108 2 254 2 340 2 291 2 210 2 171 1 217 1 142 1 
335 1 13 1 200 1 41 1 53 1 139 1 255 1 167 1 62 1 20 1 21 2 
335 1 104 3 132 1 30 3 255 1 62 1 20 1 21 2 147 1 305 2 213 1 112 1 200 1 281 1 139 1 156 1 90 1 
33 1 197 1 94 1 300 1 243 1 198 1 19 1 20 1 21 2 147 1 305 2 200 1 284 1 23 2 179 1 154 1 156 1 9 1 335 1 184 1 232 1 133 1 134 1 29 1 315 1 39 1 338 1 163 2 255 1 290 1 62 1 317 1 214 1 12 1 112 1 139 1 140 1 218 1 
300 2 121 2 305 16 307 2 179 2 182 1 9 1 184 1 314 1 133 1 134 2 39 1 315 1 41 1 135 2 317 2 13 1 12 1 318 3 275 1 139 3 197 1 45 2 91 2 94 2 48 3 243 1 19 1 198 4 20 3 21 6 147 7 247 1 150 2 200 3 23 3 155 1 154 1 285 2 156 1 335 3 287 3 104 4 106 1 30 4 338 2 163 3 255 3 290 1 62 3 209 2 214 2 169 1 112 9 66 1 216 2 218 2 
197 1 243 1 174 1 50 1 279 1 20 2 21 4 304 1 147 1 305 2 328 1 149 2 200 2 53 1 23 1 179 2 154 1 38 1 8 1 9 2 335 2 184 7 130 1 133 1 134 3 39 1 315 1 163 1 255 2 236 1 290 8 62 2 317 2 190 1 12 8 112 1 139 2 218 2 322 1 
197 1 45 1 91 1 48 1 243 1 121 1 20 1 21 2 147 1 305 2 330 1 200 1 23 1 154 1 156 1 335 1 253 1 163 1 255 1 62 1 84 1 318 1 112 1 139 1 
335 1 287 1 104 1 30 1 48 1 255 1 121 1 198 1 62 1 20 1 70 1 21 2 305 2 169 1 200 1 112 2 53 1 139 1 
335 1 45 1 255 1 62 1 20 1 21 2 303 1 147 1 305 1 318 1 200 1 53 1 139 1 
335 1 104 1 45 1 91 1 30 1 48 1 255 1 121 1 198 1 62 1 20 1 21 2 147 1 305 3 318 1 200 1 112 2 53 1 139 1 
335 1 287 1 104 1 30 1 48 1 255 1 121 1 279 1 198 1 62 1 20 1 70 1 21 2 305 2 169 1 200 1 112 2 139 1 
335 1 45 1 255 1 279 1 62 1 20 1 21 2 303 1 147 1 305 1 318 1 200 1 139 1 
335 1 104 1 45 1 91 1 30 1 48 1 255 1 121 1 279 1 198 1 62 1 20 1 21 2 147 1 305 3 318 1 200 1 112 2 139 1 
335 1 104 1 45 1 91 1 30 1 48 1 255 1 121 1 198 1 62 1 20 1 21 2 147 1 305 3 318 1 200 1 112 2 139 1 
33 1 94 1 300 1 20 1 21 2 147 1 305 2 200 1 23 1 179 1 9 1 335 1 184 1 134 1 39 1 315 1 338 1 135 1 163 1 255 1 290 1 62 1 317 1 214 1 12 1 112 1 139 1 218 1 
33 1 0 1 94 1 69 1 300 1 20 1 21 2 147 1 305 2 329 1 200 1 23 1 179 1 9 1 335 1 184 1 134 1 39 1 315 1 163 1 255 1 290 1 62 1 317 1 12 1 112 1 139 1 218 1 
335 1 104 1 45 1 91 1 30 1 48 1 255 1 121 1 198 1 62 1 20 1 21 2 147 1 305 3 318 1 200 1 112 2 139 1 156 1 
45 1 91 1 94 1 300 1 48 1 121 1 198 1 20 1 21 2 147 1 305 3 150 1 200 1 23 1 179 1 335 1 104 1 184 1 130 1 134 1 30 1 338 1 135 1 163 1 255 1 290 1 62 1 317 1 214 1 318 1 12 1 112 2 139 1 218 1 
45 1 197 1 91 1 48 1 243 1 121 1 198 1 20 1 21 2 147 2 305 4 200 1 23 1 154 1 156 1 335 1 104 1 253 1 30 1 163 1 255 1 62 1 318 1 84 1 85 1 112 2 139 1 
206 1 207 1 62 1 20 1 21 2 147 2 305 4 112 2 200 1 293 1 331 1 281 1 139 1 127 1 309 1 286 1 90 1 
206 2 207 1 62 1 20 1 21 2 168 1 147 4 305 8 293 2 112 4 200 1 281 2 331 2 139 1 127 1 309 1 90 2 286 2 
206 1 207 1 62 1 20 1 21 2 147 2 305 4 112 2 200 1 293 1 331 1 281 1 139 1 127 1 309 1 286 1 90 1 
206 1 207 1 62 1 20 1 21 2 147 2 305 4 112 2 200 1 293 1 331 1 281 1 139 1 127 1 309 1 286 1 90 1 
206 1 207 1 62 1 20 1 21 2 147 2 305 4 112 2 200 1 293 1 331 1 281 1 139 1 127 1 309 1 286 1 90 1 
301 1 243 2 302 1 20 1 21 2 304 1 147 1 305 2 52 1 149 2 200 1 23 2 179 1 156 1 335 1 184 2 134 1 39 1 315 1 163 2 255 1 111 1 290 2 62 1 317 1 190 1 12 2 112 1 139 1 277 1 218 1 
184 2 130 1 234 1 47 1 165 1 290 2 342 1 212 1 95 1 12 2 113 1 88 1 179 1 180 1 218 1 320 1 219 2 38 1 250 1 
184 1 234 1 47 1 165 1 290 1 342 1 212 1 12 1 282 1 88 1 179 1 180 1 320 1 218 1 219 2 38 1 250 1 
9 1 184 1 183 1 134 1 47 1 174 1 50 1 290 1 317 1 95 1 12 1 249 1 179 1 218 1 
184 1 234 1 47 1 165 1 290 1 342 1 212 1 95 1 12 1 113 1 88 1 179 1 180 1 320 1 218 1 219 2 38 1 250 1 
80 1 
159 1 297 1 125 1 334 1 217 1 167 1 310 1 
220 1 297 1 120 1 125 1 178 1 126 1 153 1 228 1 310 1 10 1 312 1 271 1 107 1 340 1 254 1 343 1 217 2 
220 4 297 8 68 2 222 1 300 3 120 5 121 2 175 1 125 2 126 5 178 4 74 2 179 4 228 5 310 7 9 1 77 2 312 4 230 1 229 2 184 3 130 1 134 10 271 4 235 2 187 2 317 3 12 3 318 2 238 2 141 2 241 1 17 4 143 2 45 2 91 2 146 3 48 2 245 1 334 1 153 4 100 2 285 2 159 1 204 1 254 3 340 8 166 1 290 3 114 4 218 3 217 6 32 2 
17 3 220 1 297 4 45 2 91 2 326 1 48 2 121 2 281 1 178 2 153 1 310 4 312 1 271 1 340 4 168 1 191 1 318 2 293 1 114 3 87 1 215 1 217 2 90 1 
220 1 297 1 197 1 299 1 48 1 243 1 120 1 126 1 97 1 23 1 153 1 7 1 155 1 154 1 310 2 182 1 312 1 131 1 271 1 106 1 272 2 163 1 318 1 84 1 238 1 
159 1 220 1 312 1 297 1 271 1 125 1 153 1 334 1 217 1 310 1 
17 1 297 2 45 1 91 1 48 1 121 1 340 2 318 1 114 1 178 1 217 1 310 1 
125 1 126 1 120 1 228 1 254 1 217 1 
220 1 297 2 143 2 222 2 35 1 120 3 174 1 50 1 175 1 126 3 99 1 179 1 153 2 228 4 310 2 9 2 312 2 184 4 134 1 271 2 254 2 290 4 317 1 292 1 12 4 115 1 194 1 218 1 241 2 
33 1 197 2 299 1 94 1 300 1 243 2 20 1 21 2 147 1 305 1 265 1 200 1 23 3 179 1 154 2 9 1 335 1 184 1 134 1 315 1 338 1 163 3 135 1 255 1 62 1 290 1 317 1 214 1 12 1 84 2 139 1 218 1 
17 2 220 1 297 2 312 1 143 1 271 1 222 1 340 4 114 2 125 2 63 1 178 2 153 1 217 4 310 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
325 1 223 1 
86 1 1 1 
182 1 287 4 106 1 41 1 48 1 62 2 20 2 21 4 147 3 305 6 318 1 307 2 13 1 112 3 169 2 200 2 225 1 139 2 155 1 
13 1 41 1 167 1 
45 1 91 1 48 1 121 1 62 1 20 1 21 2 147 1 246 1 305 3 318 1 200 1 112 2 139 1 
147 1 305 2 112 1 293 1 281 1 90 1 
147 1 305 2 213 1 112 1 281 1 90 1 
147 1 305 1 281 1 
305 1 112 1 90 1 
287 1 45 1 91 1 48 1 121 1 147 2 305 5 318 1 112 3 169 1 285 1 
62 1 20 1 21 2 168 1 147 1 305 2 112 1 200 1 293 1 281 1 139 1 309 1 90 1 
76 1 182 1 287 2 48 1 147 3 305 6 318 1 307 1 112 3 169 1 155 1 
182 1 287 2 106 1 41 1 341 1 62 1 20 1 21 2 147 2 305 3 307 1 13 1 112 1 169 1 200 1 225 1 139 1 155 1 
182 1 287 4 106 1 48 1 62 1 20 1 21 2 147 3 305 6 307 2 318 1 200 1 169 2 112 3 139 1 309 1 155 1 
287 1 48 1 121 1 62 1 20 1 21 2 305 2 200 1 112 2 169 1 139 1 309 1 
287 1 45 1 91 1 48 1 121 1 62 1 20 1 21 2 147 1 305 3 318 1 200 1 112 2 169 1 139 1 309 1 
182 1 287 2 46 1 341 1 62 3 20 3 21 6 147 2 305 3 307 1 200 3 169 1 112 1 225 1 139 3 309 1 155 1 
46 1 259 1 62 3 20 3 21 6 147 1 305 2 246 1 112 1 200 3 293 1 281 1 139 3 309 1 90 1 
62 1 20 1 21 2 168 1 147 1 305 2 112 1 200 1 293 1 281 1 139 1 309 1 90 1 
62 2 20 2 21 4 168 1 147 1 246 1 305 2 112 1 200 2 293 1 281 1 139 2 309 1 90 1 
45 2 91 2 326 1 48 2 121 2 20 2 21 4 147 4 246 1 305 10 200 2 281 1 309 1 287 1 62 2 168 1 318 2 191 1 293 1 112 6 169 1 87 1 215 1 139 2 90 1 
62 1 20 1 21 2 168 1 147 1 305 2 112 1 200 1 293 1 281 1 139 1 309 1 90 1 
62 1 20 1 21 2 168 1 147 1 305 2 112 1 200 1 293 1 281 1 139 1 309 1 90 1 
45 2 91 2 326 1 48 2 121 2 20 1 21 2 147 4 305 10 200 1 281 1 309 1 287 1 62 1 168 1 318 2 191 1 293 1 112 6 169 1 87 1 215 1 139 1 90 1 
62 2 20 2 21 4 168 1 147 1 246 1 305 2 112 1 200 2 293 1 281 1 139 2 309 1 90 1 
46 1 62 2 20 2 21 4 168 1 147 1 305 2 112 1 200 2 293 1 281 1 139 2 309 1 90 1 
182 1 287 4 106 1 41 1 48 1 147 2 305 4 318 1 13 1 307 2 112 2 169 2 155 1 
46 1 62 2 20 2 21 4 168 1 147 1 305 2 112 1 200 2 293 1 281 1 139 2 309 1 90 1 
192 1 243 1 16 1 202 1 
51 1 269 1 192 1 58 1 243 1 16 1 15 1 202 1 188 1 
9 1 184 1 12 1 134 1 179 1 50 1 174 1 218 1 167 1 290 1 317 1 
33 1 9 1 184 1 133 1 197 1 134 1 94 1 300 1 243 1 163 2 290 1 317 1 214 1 12 1 23 2 179 1 154 1 218 1 
33 1 184 1 133 1 197 2 134 3 94 1 203 1 300 2 243 2 163 2 164 1 290 1 317 2 214 1 12 1 275 1 74 1 23 2 179 1 141 1 154 1 218 1 241 1 
33 1 197 2 94 1 300 2 243 2 329 1 23 2 74 1 179 1 154 1 184 2 133 1 134 3 203 1 163 2 164 1 290 2 317 2 12 2 275 1 14 1 218 1 141 1 241 1 
68 1 197 1 92 1 146 1 299 1 300 1 243 1 120 2 148 1 125 1 126 2 97 1 23 1 74 1 7 1 228 1 179 1 154 1 9 1 229 1 184 2 134 4 163 1 290 2 317 1 84 1 12 2 218 1 141 1 217 1 241 1 
9 1 229 1 184 3 68 1 134 4 146 1 300 1 120 2 290 3 317 1 12 3 125 1 126 2 14 1 74 1 179 1 228 1 217 1 141 1 218 1 32 1 241 1 
184 1 12 1 179 1 218 1 290 1 236 1 
9 2 230 1 184 6 130 1 134 3 93 1 300 1 49 1 236 1 290 7 317 2 190 1 82 1 149 1 328 1 12 7 179 3 218 2 38 1 322 1 8 1 
300 1 305 4 307 2 179 1 182 1 184 1 130 1 133 1 134 1 41 1 135 1 317 1 12 1 13 1 318 1 275 1 277 1 139 2 197 1 94 1 48 1 243 1 20 2 21 4 147 2 150 1 200 2 23 2 154 1 155 1 156 1 335 2 287 3 106 1 338 1 163 2 255 2 290 1 62 2 214 1 169 1 112 2 66 1 216 1 218 1 
220 2 297 1 68 1 146 1 120 3 175 1 125 1 151 1 126 3 334 1 153 2 228 2 100 1 310 1 159 1 9 1 312 2 77 1 229 1 184 1 271 2 134 2 235 1 254 1 290 1 12 1 217 1 32 1 
230 1 68 1 184 2 130 1 134 2 300 1 236 1 290 2 317 1 245 1 12 2 179 2 218 1 
9 1 184 4 130 1 134 1 174 1 50 1 290 4 317 1 12 4 152 1 14 1 179 1 218 1 
184 2 134 1 93 1 289 1 300 1 339 1 49 1 290 2 317 1 12 2 179 2 218 1 25 1 241 1 
9 1 184 1 12 1 88 1 179 1 218 1 320 1 219 1 290 1 342 1 
184 2 130 1 134 1 302 1 290 2 317 1 190 1 12 2 179 1 218 1 38 1 
9 1 184 4 130 1 134 3 50 1 174 1 290 5 317 2 190 1 328 1 12 5 152 1 179 2 218 2 241 1 322 1 
9 1 184 4 130 1 134 3 50 1 174 1 290 5 317 2 81 1 190 1 12 5 152 1 179 2 218 2 241 1 322 1 
33 1 9 1 184 1 133 1 197 1 134 1 94 1 300 1 243 1 163 2 290 1 317 1 329 1 12 1 23 2 179 1 154 1 218 1 
230 1 184 1 134 1 93 1 300 1 49 1 290 1 317 1 82 1 12 1 179 2 218 1 241 1 
83 1 52 1 193 1 323 1 
83 1 73 1 128 1 
52 1 83 2 193 1 323 1 
52 1 83 2 138 1 73 1 151 1 126 1 193 1 120 1 128 1 323 1 
252 1 60 1 79 1 167 1 
252 1 160 1 78 1 65 1 60 1 79 1 211 1 
160 1 256 1 257 1 
252 1 160 3 161 2 78 1 60 1 122 1 79 1 211 3 64 1 237 1 65 1 195 1 
252 1 160 2 274 1 78 1 162 1 65 1 60 1 79 1 211 2 
160 1 252 1 78 1 42 1 211 1 72 1 237 1 65 1 88 1 180 1 219 1 
252 1 160 1 78 1 65 1 237 1 60 1 211 1 
160 1 78 1 65 1 237 1 60 2 79 1 211 1 
252 1 160 2 78 2 60 1 264 1 211 2 327 1 237 1 65 2 26 1 
160 3 252 2 78 1 162 2 186 1 42 1 60 1 79 1 211 3 237 1 65 1 276 1 283 1 
252 1 160 2 78 1 162 1 60 1 79 1 342 1 211 2 212 1 237 1 65 1 88 1 180 1 219 2 54 1 
160 4 252 2 78 2 162 2 186 1 42 1 60 1 79 1 211 4 274 1 237 1 65 2 157 1 
252 1 160 1 78 1 65 1 237 1 60 1 79 1 211 1 
161 1 160 4 252 3 78 1 162 2 186 1 42 1 60 2 79 2 211 4 64 1 332 1 65 1 195 1 
252 1 160 2 78 1 288 1 162 1 34 1 60 1 262 1 79 1 211 2 237 1 65 1 
252 1 160 3 161 2 78 1 105 1 60 1 79 1 211 3 64 2 237 1 65 1 195 1 
252 2 129 2 248 1 347 1 
136 1 160 1 78 1 65 1 237 1 211 1 
252 1 160 2 78 1 162 1 65 1 237 1 283 1 60 1 79 1 211 2 
316 1 
252 1 160 1 78 1 65 1 237 1 60 1 79 1 211 1 
252 1 161 1 160 3 78 1 162 1 65 1 237 1 283 1 60 1 79 1 211 3 
252 1 186 1 332 1 42 1 
252 1 60 1 

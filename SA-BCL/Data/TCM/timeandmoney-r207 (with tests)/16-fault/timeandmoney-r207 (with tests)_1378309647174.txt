#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 205 48 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 205 48 73 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 205 217 159 264 (70,266) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 144 260 13 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 144 260 13 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 144 260 13 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 144 260 13 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 144 260 13 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 106 149 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 205 11 262 273 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 205 48 203 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 205 48 193 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 144 126 93 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 144 212 151 37 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 205 217 159 264 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 144 212 151 37 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 205 217 159 264 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 205 48 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 205 48 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 205 4 74 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 205 4 74 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 205 4 74 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 205 4 74 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 205 4 74 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 144 126 93 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 205 48 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 29 322 53 (120,136) (120,136) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 29 322 53 (120,136) (120,136) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 205 11 258 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 205 11 262 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 205 11 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 144 253 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 205 294 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 205 11 258 75 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 144 212 220 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 205 245 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 29 322 53 272 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 144 212 151 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 144 212 151 34 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 29 322 53 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 205 11 258 102 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 268 20 57 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 268 20 57 312 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 29 322 53 (120,136) (120,136) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 1 178 3 295 1 38 1 198 1 255 1 66 4 139 1 24 1 284 2 185 5 186 1 285 1 234 9 125 1 170 1 50 2 101 1 290 1 335 2 238 7 291 1 196 1 85 9 
269 1 178 3 295 1 38 1 198 1 255 1 66 4 139 1 24 1 284 2 185 5 186 1 285 1 234 9 125 1 170 1 50 2 101 1 290 1 335 2 238 7 291 1 196 1 85 9 
178 3 295 1 38 1 255 1 139 1 184 1 185 5 186 1 234 9 98 1 101 2 50 2 142 1 238 6 16 1 196 1 269 1 198 2 244 1 66 4 284 2 285 1 170 1 335 2 290 2 334 1 291 2 85 9 
178 3 295 1 38 1 255 1 139 1 184 1 185 5 186 1 234 9 98 1 101 2 50 2 142 1 238 6 16 1 196 1 269 1 198 2 244 1 66 4 284 2 285 1 170 1 335 2 290 2 334 1 291 2 85 9 
178 4 295 1 38 1 255 1 139 1 184 1 185 6 186 1 234 10 98 1 101 2 50 2 142 1 238 7 16 1 196 1 269 1 198 2 244 1 66 5 284 2 285 1 170 1 335 2 290 2 334 1 291 2 85 10 
178 2 295 1 255 1 139 1 184 1 185 4 186 1 234 7 98 1 101 2 50 1 142 1 238 4 16 1 196 1 269 1 198 2 244 1 66 3 284 2 285 1 170 1 335 2 290 2 334 1 291 2 85 7 
178 1 295 1 38 1 198 1 66 2 284 1 185 3 186 1 285 1 234 4 170 1 50 2 290 1 335 1 238 3 291 1 85 4 196 1 
295 1 92 1 298 1 284 1 185 1 305 1 186 1 234 2 170 1 101 1 334 1 335 1 290 1 291 1 16 1 85 2 
269 1 178 1 295 1 66 1 284 2 185 2 186 1 234 3 170 1 101 1 335 2 238 1 85 3 
263 1 
148 1 58 2 157 1 
326 2 64 2 28 2 172 1 78 2 228 1 301 2 175 2 
87 1 254 1 296 1 223 1 229 1 301 2 48 1 59 1 63 1 64 2 243 1 205 1 321 1 208 1 163 1 326 2 26 1 214 2 286 1 171 1 28 3 172 1 128 1 78 2 76 2 219 1 82 1 175 3 133 2 
326 1 99 1 64 1 28 1 172 1 154 1 173 1 78 1 301 1 175 1 
177 1 90 1 64 1 182 1 157 1 299 1 124 1 213 1 189 1 190 1 99 1 28 1 268 1 175 1 
177 1 90 1 182 1 301 2 189 2 190 2 99 2 64 2 154 1 157 1 71 1 124 1 326 2 213 1 28 2 172 1 173 1 78 2 175 2 
7 1 189 1 190 1 91 1 259 1 
7 1 213 1 189 2 180 1 190 2 157 1 145 1 259 1 
189 1 190 1 259 1 
64 1 154 1 301 1 71 1 7 1 326 1 189 1 190 1 99 1 28 1 172 1 173 1 78 1 175 1 
157 1 
7 1 213 1 189 2 180 1 190 2 51 1 157 1 259 1 
317 1 318 1 277 1 61 1 180 1 1 1 62 1 114 1 157 1 3 1 324 2 259 2 7 2 213 1 189 5 190 5 103 2 52 1 195 2 
263 1 
64 2 226 1 301 1 228 2 166 1 326 1 28 2 78 1 175 2 
153 1 44 1 70 1 
59 1 296 1 243 1 223 1 228 1 229 1 208 1 214 1 286 1 171 1 28 1 76 1 31 1 82 1 175 1 133 1 
165 1 326 3 64 3 28 3 78 1 228 1 301 3 175 3 
326 1 99 1 64 1 28 1 173 1 301 1 175 1 
166 1 326 1 99 1 64 1 28 1 226 1 78 1 301 1 175 1 
87 1 177 1 254 1 296 1 90 1 223 1 182 1 229 1 301 3 48 1 189 1 190 1 99 1 271 1 59 1 63 1 243 1 64 3 205 1 208 1 166 1 165 1 124 1 73 1 326 3 286 1 214 1 171 1 28 4 128 1 172 1 129 1 78 2 76 1 219 1 82 1 175 4 133 1 
165 1 326 1 64 2 28 2 20 1 228 1 301 1 268 1 175 2 
271 1 177 1 90 1 64 3 182 1 116 1 157 1 301 3 166 1 165 2 124 1 326 3 189 1 190 1 99 1 28 3 129 1 78 1 175 3 
64 2 44 1 301 2 70 1 165 1 166 1 326 2 28 2 78 1 175 2 
59 1 296 1 243 1 223 1 228 1 229 1 208 1 214 1 286 1 171 1 28 1 76 1 82 1 175 1 133 1 
296 1 243 1 223 1 228 1 229 1 162 1 208 1 214 1 286 1 28 1 143 1 76 1 82 1 175 1 133 1 
254 1 169 1 264 1 63 1 266 1 205 1 217 1 219 1 159 1 
304 1 
88 1 64 5 20 1 301 4 228 1 165 2 166 1 326 4 28 5 129 1 78 1 268 1 175 5 84 1 
326 1 99 1 64 1 28 1 173 1 301 1 304 1 175 1 
59 1 296 1 243 1 64 1 223 1 229 1 301 1 70 1 208 1 165 1 326 1 286 1 214 1 171 1 28 2 129 1 76 1 82 1 175 2 133 1 
56 1 328 1 
56 1 328 1 
45 1 67 1 
45 1 67 1 
45 1 67 1 
56 1 328 1 292 1 
56 1 328 1 292 1 
56 1 328 1 192 1 
56 2 45 1 328 2 104 1 67 1 5 1 
56 1 328 1 292 1 
56 1 328 1 113 1 
56 1 328 1 113 1 
56 1 328 1 113 1 
56 2 17 1 200 1 137 1 157 1 5 1 96 3 121 1 69 2 307 1 328 2 189 2 27 1 190 2 311 2 216 2 237 2 15 1 315 2 
228 1 301 2 96 1 308 1 189 1 190 1 311 1 192 1 105 1 237 1 236 1 56 1 276 1 150 1 200 1 64 2 69 1 326 2 328 1 249 1 28 2 216 1 288 1 175 2 
198 1 290 1 291 1 
305 1 290 1 291 1 
305 1 135 1 198 2 291 3 122 1 257 1 
123 1 305 1 135 1 198 1 291 2 122 1 
305 1 135 2 198 1 291 2 122 1 
34 1 180 1 1 2 222 1 259 1 7 4 8 1 232 1 308 1 97 2 189 5 190 5 103 1 236 1 195 1 148 1 58 3 150 1 151 1 61 1 277 3 323 1 157 2 206 2 324 1 22 2 159 1 212 1 211 1 330 1 213 1 217 1 
34 3 180 1 1 6 91 5 183 1 224 1 3 1 259 6 7 7 8 2 308 4 97 6 189 9 190 9 103 2 12 1 195 2 148 3 58 9 151 3 61 1 277 8 19 1 117 1 157 5 323 1 206 6 324 2 159 3 212 3 211 2 25 5 213 1 250 1 217 3 
34 1 1 2 3 1 301 1 7 2 8 1 232 1 308 1 189 3 97 2 190 3 99 1 103 1 195 1 148 2 58 4 277 3 151 1 64 1 154 1 157 3 324 1 22 1 206 2 159 1 71 1 211 1 212 1 326 1 213 1 330 1 28 1 172 1 173 1 78 1 217 1 175 1 
34 1 1 2 3 1 8 1 7 1 232 1 308 1 97 2 189 2 190 2 103 1 195 1 148 2 58 4 277 3 151 1 117 1 157 2 206 2 324 1 22 1 159 1 211 1 212 1 330 1 217 1 
263 1 
187 1 208 1 
46 1 
296 1 208 1 
296 1 287 1 77 2 229 1 325 1 208 3 
296 1 229 1 208 1 
43 1 208 1 
260 1 319 1 144 1 13 1 
260 1 319 1 144 1 13 1 
260 1 319 1 144 1 13 1 32 1 
260 1 319 1 144 1 13 1 
260 1 319 1 144 1 13 1 
295 1 179 1 256 1 257 1 185 1 305 1 186 1 140 1 234 2 261 1 101 1 238 1 55 1 274 1 198 1 160 1 284 1 168 1 214 1 286 1 170 1 131 1 76 1 290 1 335 1 82 1 291 2 83 1 133 1 85 2 
295 1 179 1 256 1 257 1 185 1 306 1 305 1 186 1 140 1 234 3 261 1 310 1 101 1 238 2 55 1 111 1 198 1 160 1 284 1 214 1 286 1 131 1 76 1 290 1 335 1 82 1 291 2 83 1 133 1 85 3 
295 1 179 1 256 1 257 1 185 1 305 1 186 1 140 1 234 2 310 1 101 1 238 2 111 1 198 1 160 1 214 1 286 1 131 1 76 1 290 1 82 1 291 2 83 1 133 1 85 2 
296 1 256 2 223 1 2 1 181 1 302 1 306 1 234 1 101 2 282 1 160 2 284 1 208 1 214 1 286 1 131 2 76 1 335 1 82 1 132 1 133 1 85 1 86 1 
179 1 256 1 257 1 305 1 140 1 234 1 261 1 310 1 101 1 55 1 274 1 198 1 160 1 284 1 214 1 286 1 170 1 131 1 76 1 290 1 335 1 82 1 291 2 83 1 133 1 85 1 
158 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 61 1 64 1 182 1 279 1 324 1 299 1 124 1 189 2 190 2 99 1 28 1 100 1 103 1 106 1 195 1 175 1 268 1 
177 1 90 1 180 1 296 1 1 1 223 2 182 1 2 1 181 1 299 1 259 2 189 3 190 3 99 1 100 1 103 1 106 1 195 1 268 1 240 1 149 1 61 1 277 1 64 1 279 1 281 1 324 1 208 1 124 1 211 1 286 1 214 2 28 1 333 1 76 2 82 1 175 1 133 2 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 180 1 64 1 182 1 279 1 299 1 259 1 124 1 189 3 190 3 99 1 28 1 51 1 100 1 106 1 175 1 268 1 
177 1 149 1 90 1 61 1 64 1 182 1 279 1 324 1 299 1 124 1 189 2 190 2 99 1 28 1 100 1 103 1 106 1 195 1 175 1 268 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
177 1 149 1 90 1 64 1 182 1 279 1 299 1 124 1 189 2 190 2 99 1 100 1 28 1 106 1 268 1 175 1 
254 1 169 1 263 1 63 1 219 1 
273 1 254 1 262 1 11 1 63 1 205 1 194 1 219 1 
254 1 64 1 63 1 203 1 205 1 301 1 165 1 326 1 48 1 28 1 129 1 194 1 219 1 175 1 
254 1 64 1 63 1 223 1 205 1 301 1 165 1 326 1 48 1 214 1 28 1 129 1 193 1 76 1 194 1 219 1 133 1 175 1 
209 1 254 1 126 1 214 1 63 1 223 1 93 1 144 1 76 1 219 1 133 1 
34 1 254 1 151 1 63 1 64 1 138 1 301 1 212 1 166 1 326 1 28 1 144 1 194 1 78 1 219 1 175 1 
212 1 254 1 169 1 151 1 37 1 63 1 144 1 219 1 
254 1 169 1 264 1 63 1 205 1 217 1 219 1 159 1 
212 1 34 1 254 1 169 1 151 1 63 1 144 1 219 1 
212 1 209 1 254 1 151 1 37 1 63 1 144 1 219 1 
209 1 254 1 264 1 63 1 205 1 217 1 219 1 159 1 
212 1 209 1 34 1 254 1 151 1 63 1 144 1 219 1 
212 1 34 1 254 1 151 1 63 1 144 1 219 1 
87 1 254 1 59 1 296 1 63 1 243 1 223 1 205 1 229 1 208 1 48 1 214 1 286 1 171 1 28 1 76 1 219 1 82 1 175 1 133 1 
254 1 296 1 63 1 243 1 223 1 205 1 229 1 208 1 162 1 48 1 214 1 286 1 28 1 143 1 314 1 76 1 219 1 82 1 175 1 133 1 
212 1 34 1 254 1 151 1 63 1 144 1 194 1 219 1 
87 1 34 1 254 1 316 1 59 1 151 1 296 1 63 1 243 1 229 1 208 1 212 1 168 1 214 1 286 1 171 1 28 1 144 1 76 1 219 1 82 1 175 1 133 1 
34 1 254 1 151 1 63 1 64 1 301 1 212 1 166 1 248 1 326 1 28 1 144 1 194 1 78 1 219 1 175 1 
231 1 74 1 309 1 112 1 63 1 205 1 4 1 80 1 
231 1 74 1 309 1 112 1 63 1 205 1 4 1 80 1 
231 1 74 1 309 1 112 1 63 1 205 1 4 1 80 1 
231 1 74 1 309 1 112 1 63 1 205 1 4 1 80 1 
231 1 74 1 309 1 112 1 63 1 205 1 4 1 80 1 
56 1 328 1 265 1 137 1 311 1 216 1 5 1 237 1 15 1 69 1 
192 1 105 1 
56 1 328 1 134 1 275 1 311 1 216 1 119 1 237 1 69 1 
56 1 17 1 200 1 137 1 157 1 5 1 96 2 69 1 307 1 328 1 189 1 27 1 190 1 311 1 216 1 237 1 15 1 315 1 
56 1 17 1 200 1 137 1 157 1 5 1 96 2 69 1 307 1 328 1 189 1 27 1 190 1 311 1 216 1 237 1 15 1 315 1 
56 1 17 1 200 1 137 1 157 1 5 1 96 2 69 1 307 1 328 1 189 1 27 1 190 1 311 1 216 1 237 1 15 1 315 1 
233 1 104 1 292 1 
233 1 104 1 292 1 
113 1 155 1 
113 1 104 1 155 1 
249 1 288 1 
228 1 96 1 301 2 7 1 308 1 189 1 190 1 9 1 311 1 192 1 105 1 237 1 236 1 315 1 56 1 276 1 150 1 64 2 69 1 326 2 328 1 27 1 249 1 28 2 216 1 288 1 175 2 
233 1 292 1 
113 1 104 1 155 1 
254 1 64 2 63 1 93 1 161 1 247 1 47 1 126 1 28 2 144 1 194 1 219 1 81 1 175 2 
293 1 179 1 198 1 160 1 257 1 305 1 168 1 261 1 286 1 310 1 214 2 76 2 290 1 291 2 82 1 336 1 239 1 83 1 133 2 
179 1 198 1 160 1 257 1 305 1 188 1 261 1 310 1 214 1 286 1 76 1 290 1 291 2 82 1 239 1 83 1 133 1 
293 1 296 1 223 1 2 1 181 1 282 1 160 1 208 1 286 1 214 1 76 1 14 1 82 1 133 1 
293 1 179 1 198 1 160 1 257 1 305 1 261 1 310 1 214 1 286 1 76 1 290 1 291 2 82 1 336 1 239 1 83 1 133 1 
42 1 
87 1 254 1 296 1 223 1 301 2 229 1 48 1 59 1 64 2 243 1 63 1 205 1 208 1 326 2 214 1 286 1 171 1 28 3 172 1 128 1 76 1 78 2 219 1 82 1 133 1 175 3 
148 2 58 4 61 1 277 1 1 2 157 4 206 2 324 1 260 1 211 1 213 2 97 2 103 1 195 1 240 1 
263 1 
35 1 180 1 1 1 259 1 189 1 190 1 103 1 195 1 148 1 58 1 18 1 277 1 61 1 157 2 324 1 213 1 30 1 
294 2 34 2 180 3 296 1 1 7 223 1 182 2 229 1 259 5 187 3 97 6 189 5 190 5 49 2 103 3 267 2 195 3 240 1 147 2 197 1 148 6 58 12 151 2 61 3 277 7 157 6 206 6 324 3 159 2 207 2 208 6 212 2 211 1 167 2 214 1 286 1 127 2 287 1 215 1 217 2 77 2 289 1 76 1 82 2 133 1 
253 1 34 2 180 1 1 5 259 1 258 1 189 1 97 5 190 1 11 1 103 2 195 2 240 1 146 1 270 1 58 6 148 3 277 8 61 2 151 2 156 1 157 5 206 5 324 2 280 1 159 2 207 2 211 1 212 2 331 1 213 2 75 1 174 1 218 1 217 2 
1 2 301 1 189 1 190 1 99 1 103 1 53 1 195 1 270 1 272 1 61 1 152 1 277 2 64 1 154 1 322 1 324 1 207 2 71 1 212 2 326 1 28 1 172 1 173 1 217 1 78 1 220 1 175 1 
317 1 318 1 61 1 277 1 1 1 157 1 324 1 213 1 103 1 195 1 
294 1 270 1 34 2 58 10 148 5 151 2 277 5 1 5 157 5 206 5 159 2 207 2 212 2 97 5 217 2 
213 1 189 1 190 1 180 1 157 1 259 1 
296 1 180 2 1 2 223 2 2 1 181 1 3 1 259 4 189 3 190 3 10 1 103 2 195 2 240 2 61 1 277 2 199 1 281 1 324 2 208 1 211 2 327 1 286 1 214 4 333 1 76 4 82 1 251 2 133 4 
311 1 216 1 23 1 
311 1 216 1 23 1 
110 1 249 1 311 1 216 1 15 1 
311 1 216 1 23 1 
311 1 297 1 216 1 
311 1 297 1 216 1 
311 1 297 1 216 1 
311 1 216 1 
56 1 328 1 
75 1 11 1 63 1 205 1 80 1 258 1 
75 1 11 1 63 2 205 1 80 1 227 1 258 1 
75 1 11 1 63 1 205 1 80 1 258 1 
75 1 11 1 63 1 205 1 80 1 258 1 
75 1 11 1 63 1 205 1 80 1 258 1 
75 1 11 1 63 1 205 1 80 1 258 1 
75 1 11 1 63 2 205 1 227 1 80 1 258 1 
75 1 11 1 63 2 242 1 205 1 80 1 258 1 
136 1 29 1 322 1 53 1 120 1 
75 1 11 1 63 2 242 1 205 1 80 1 258 1 
89 1 136 1 63 2 29 1 322 1 53 1 120 1 
263 1 
212 1 34 1 151 1 63 1 144 1 227 1 
11 1 205 1 258 1 
262 1 11 1 205 1 
11 1 205 1 
253 1 144 1 
294 1 205 1 
75 1 11 1 63 1 205 1 80 1 258 1 
212 1 144 1 220 1 
205 1 245 1 
272 1 29 1 322 1 53 1 
212 1 151 1 63 1 144 1 80 1 
212 1 34 1 151 1 63 1 144 1 80 1 
63 1 29 1 322 1 53 1 80 1 
11 1 242 1 63 3 205 1 102 1 227 1 80 1 258 1 
57 1 20 1 268 1 
221 1 57 1 312 1 320 1 20 1 79 1 268 1 230 1 
214 1 263 1 223 1 76 1 133 1 
296 1 243 1 64 1 223 1 228 1 229 1 301 1 208 1 165 1 326 1 214 1 286 1 171 1 28 2 76 1 82 1 175 2 133 1 
177 1 296 2 225 1 228 1 301 1 229 2 43 1 99 1 64 2 243 1 208 3 165 1 124 1 326 2 286 1 214 1 171 1 28 2 76 1 82 1 133 1 251 1 175 2 
177 1 296 2 94 1 225 1 228 1 301 1 229 2 43 1 99 1 143 1 64 2 243 1 208 3 165 1 124 1 326 2 286 1 214 2 28 2 76 2 82 1 133 2 251 1 175 2 
182 1 301 1 259 1 187 1 189 2 190 2 99 1 191 1 64 1 154 1 157 1 208 2 71 1 326 1 213 1 214 1 28 1 172 1 173 1 77 1 76 1 78 1 175 1 133 1 251 1 
296 1 223 1 182 1 94 1 157 1 225 1 43 1 229 1 208 4 259 1 187 1 213 1 189 2 214 3 286 1 190 2 49 1 76 3 77 1 82 1 251 1 133 3 
286 1 214 1 201 1 76 1 82 1 133 1 
108 1 60 1 296 2 201 1 223 2 115 1 118 1 40 1 229 1 246 1 163 1 208 3 168 1 310 1 214 7 286 2 287 1 313 1 76 7 82 3 133 6 
87 1 254 2 136 1 296 1 301 1 229 1 6 1 47 1 53 1 194 1 316 1 59 1 63 2 64 1 243 1 322 1 120 1 208 1 165 1 326 1 168 1 214 1 286 1 171 1 28 2 29 1 76 1 219 2 82 1 175 2 133 1 
180 1 1 1 223 1 182 1 259 2 7 1 187 1 189 3 190 3 49 1 103 2 267 1 195 2 147 1 317 1 318 1 277 1 61 2 157 1 324 2 208 2 327 1 213 1 214 1 127 1 76 1 77 1 133 1 
296 1 201 1 229 1 208 2 168 1 214 2 286 1 287 1 215 1 77 1 76 2 82 2 133 2 
176 1 168 1 286 1 214 4 296 1 223 1 181 1 2 1 94 1 76 4 82 1 208 1 133 4 
108 1 296 1 68 1 300 1 229 1 246 1 208 1 329 1 214 2 286 1 76 2 82 2 251 1 133 2 
305 1 286 1 214 1 223 1 76 1 290 1 291 1 82 1 83 1 133 1 
168 1 286 1 310 1 214 2 296 1 313 1 76 2 107 1 82 1 208 1 133 2 
176 1 296 2 223 1 181 1 2 1 118 1 40 1 208 3 168 1 214 5 286 2 313 1 76 5 82 2 251 1 133 4 
176 1 296 2 223 1 181 1 2 1 118 1 208 3 168 1 214 5 286 2 141 1 313 1 76 5 82 2 251 1 133 4 
296 1 243 1 64 1 223 1 228 1 229 1 301 1 208 1 165 1 326 1 214 1 286 1 28 2 143 1 76 1 82 1 175 2 133 1 
108 1 296 1 115 1 229 1 246 1 208 1 214 1 286 1 287 1 76 1 82 2 251 1 133 1 
64 1 28 1 278 1 235 1 81 1 303 1 161 1 175 1 247 1 
0 1 65 1 278 1 
164 1 235 1 278 1 228 1 303 1 
177 1 90 1 0 1 182 1 301 1 303 2 228 1 7 1 189 2 190 2 99 2 235 2 271 1 64 1 154 1 65 1 278 1 157 1 71 1 164 2 124 1 326 1 213 1 28 1 172 1 130 1 173 1 78 1 175 1 
295 1 139 1 284 1 185 1 186 1 234 3 170 1 238 1 335 1 334 1 85 3 
185 1 178 1 241 1 66 1 
185 1 295 1 
263 1 
185 1 186 1 295 1 234 1 335 1 85 1 284 1 
101 1 256 1 85 1 
295 1 39 1 284 1 72 1 185 1 186 1 234 3 170 1 332 1 335 1 334 2 85 3 
185 1 186 1 295 1 234 2 50 1 238 1 335 1 85 2 284 1 
185 1 285 1 234 1 198 1 170 1 66 1 290 1 335 1 291 1 85 1 284 1 
185 1 295 1 234 1 170 1 335 1 85 1 284 1 
186 1 295 2 234 1 170 1 335 1 85 1 284 1 
109 1 295 1 202 1 284 2 185 1 210 1 234 2 170 1 335 2 85 2 
178 1 295 1 255 1 66 1 139 1 284 1 185 2 186 1 234 3 170 1 335 1 238 2 85 3 
33 1 295 1 198 1 284 1 257 1 185 1 305 1 186 1 234 2 170 1 335 1 290 1 238 1 291 2 85 2 
178 1 295 1 38 1 66 1 284 2 185 2 186 1 234 4 170 1 50 1 335 2 238 2 85 4 
185 1 186 1 295 1 234 1 170 1 335 1 85 1 284 1 
178 1 295 2 241 1 39 1 66 1 284 1 185 3 186 2 234 4 332 1 334 1 238 2 335 1 85 4 
295 1 95 1 24 1 284 1 185 1 186 1 234 2 170 1 335 1 238 1 85 2 54 1 
295 1 36 1 39 1 284 1 185 1 186 1 234 3 170 1 332 2 335 1 334 2 85 3 
185 2 21 1 41 2 252 1 
234 1 170 1 335 1 283 1 85 1 284 1 
185 1 186 1 295 1 234 2 170 1 139 1 238 1 335 1 85 2 284 1 
204 1 
185 1 186 1 295 1 234 1 170 1 335 1 85 1 284 1 

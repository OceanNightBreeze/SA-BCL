#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 271 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 271 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 100 42 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
179 1 37 1 119 1 61 1 205 2 330 1 82 9 162 1 147 4 309 1 27 1 28 1 45 1 315 2 32 1 91 5 17 1 92 1 114 2 19 3 53 7 194 9 75 1 196 1 
179 1 37 1 119 1 61 1 205 2 330 1 82 9 162 1 147 4 309 1 27 1 28 1 45 1 315 2 32 1 91 5 17 1 92 1 114 2 19 3 53 7 194 9 75 1 196 1 
37 2 179 1 119 1 61 1 157 1 205 2 82 9 331 1 162 1 147 4 309 1 45 2 28 1 315 2 32 2 242 1 91 5 320 1 17 1 92 1 114 2 19 3 193 1 194 9 53 6 75 2 196 1 117 1 
37 2 179 1 119 1 61 1 157 1 205 2 82 9 331 1 162 1 147 4 309 1 45 2 28 1 315 2 32 2 242 1 91 5 320 1 17 1 92 1 114 2 19 3 193 1 194 9 53 6 75 2 196 1 117 1 
37 2 179 1 119 1 61 1 157 1 205 2 82 10 331 1 162 1 147 5 309 1 45 2 28 1 315 2 32 2 242 1 91 6 320 1 17 1 92 1 114 2 19 4 193 1 194 10 53 7 75 2 196 1 117 1 
37 2 179 1 119 1 61 1 157 1 205 1 82 7 331 1 162 1 147 3 309 1 45 2 28 1 315 2 32 2 242 1 91 4 320 1 17 1 92 1 114 2 19 2 193 1 194 7 53 4 75 2 117 1 
37 1 315 1 179 1 119 1 32 1 61 1 205 2 91 3 82 4 92 1 114 1 147 2 19 1 309 1 194 4 53 3 45 1 196 1 
315 1 37 1 119 1 61 1 242 1 91 1 82 2 331 1 92 1 114 1 214 1 146 1 194 2 75 1 45 1 123 1 
315 2 119 1 61 1 91 2 82 3 17 1 92 1 114 2 147 1 19 1 194 3 53 1 75 1 
201 1 145 1 41 1 
0 2 145 1 336 1 
185 1 192 2 33 2 263 2 77 2 11 2 279 2 222 1 
118 1 58 2 97 1 2 1 276 1 279 2 161 1 6 1 163 1 185 1 306 1 102 2 150 1 338 1 11 2 188 1 340 2 151 1 13 1 129 2 33 3 263 2 243 1 171 1 34 1 153 1 289 2 222 1 321 1 292 1 115 1 192 2 154 1 93 1 20 1 139 1 77 3 
67 1 185 1 192 1 33 1 263 1 77 1 11 1 279 1 231 1 253 1 
300 1 260 1 33 1 87 1 241 1 41 1 190 1 231 1 172 1 293 1 145 1 192 1 235 1 77 1 
260 2 33 1 87 1 241 2 263 1 41 1 279 1 231 1 172 1 293 1 145 1 192 1 235 1 77 1 11 1 
210 1 316 1 51 1 260 1 241 1 
210 1 272 1 316 1 145 1 260 2 203 1 241 2 41 1 
210 1 260 1 241 1 
316 1 260 1 33 1 241 1 263 1 279 1 231 1 253 1 67 1 185 1 192 1 77 1 11 1 95 1 
145 1 
210 1 272 1 316 1 145 1 260 2 241 2 137 1 41 1 
298 1 96 1 272 1 41 1 180 4 158 1 279 1 231 1 253 1 67 1 210 2 185 1 282 1 145 1 255 1 307 1 236 1 11 1 287 1 316 2 217 1 128 1 260 5 33 1 16 4 15 1 317 2 241 5 218 2 263 1 48 1 49 1 345 1 192 1 324 2 323 1 77 1 95 1 
201 1 222 1 
33 2 47 1 263 1 279 1 222 2 333 1 192 2 77 2 11 1 
5 1 291 1 141 1 
129 1 33 1 2 1 243 1 276 1 34 1 289 1 161 1 222 1 163 1 6 1 223 1 115 1 102 1 154 1 77 1 
129 1 33 2 141 1 2 1 243 1 263 1 276 1 34 1 161 1 289 1 6 1 163 1 115 1 192 1 154 1 102 1 176 1 268 1 77 2 11 1 
192 3 33 3 263 3 176 1 77 3 11 3 279 1 222 1 
67 1 192 1 33 1 263 1 77 1 11 1 231 1 
333 1 192 1 33 1 47 1 263 1 77 1 11 1 279 1 231 1 
118 1 58 1 97 1 62 1 2 1 276 1 161 1 279 2 231 1 6 1 163 1 185 1 306 1 102 1 235 1 150 1 215 1 338 1 11 3 188 1 340 2 260 1 129 1 33 4 87 1 47 1 241 1 243 1 263 3 171 1 34 1 289 1 222 1 321 1 172 1 115 1 293 1 192 3 154 1 176 1 20 1 139 1 77 4 268 1 
300 1 334 1 192 2 33 2 263 1 176 1 77 2 11 1 222 1 
260 1 33 3 47 1 241 1 87 1 63 1 263 3 279 1 231 1 172 1 293 1 145 1 192 3 235 1 176 2 268 1 77 3 215 1 11 3 
291 1 192 2 33 2 141 1 47 1 263 2 176 1 77 2 11 2 279 1 
129 1 33 1 2 1 243 1 276 1 34 1 289 1 161 1 222 1 163 1 6 1 115 1 102 1 154 1 77 1 
129 1 33 1 204 1 250 1 2 1 243 1 276 1 34 1 289 1 161 1 231 1 222 1 163 1 6 1 102 1 77 1 54 1 
58 4 59 1 97 2 60 1 141 2 142 1 183 1 5 2 212 1 281 1 306 1 167 1 338 1 188 1 340 2 151 2 317 1 171 1 73 1 344 1 291 2 324 1 20 1 139 1 
172 1 173 1 192 1 33 1 263 1 77 1 11 1 231 1 
259 1 300 1 33 5 47 1 263 4 279 1 222 1 334 1 192 5 52 1 176 2 77 5 268 1 11 4 
173 1 67 1 192 2 33 2 263 2 77 2 11 2 231 1 
270 1 84 1 
270 1 84 1 
135 1 99 1 
135 1 99 1 
135 1 99 1 
270 1 84 1 202 1 
270 1 84 1 224 1 
270 2 84 2 135 1 99 1 46 1 269 1 
270 1 84 1 202 1 
270 1 84 1 202 1 
270 1 84 1 208 1 
270 1 84 1 208 1 
270 1 84 1 208 1 
270 2 286 1 84 2 260 2 241 2 206 3 318 2 23 2 319 2 277 1 304 1 209 1 43 2 254 1 145 1 325 2 198 1 269 1 247 1 
286 1 270 1 84 1 260 1 33 2 241 1 89 1 206 1 263 2 265 1 302 1 318 1 23 1 342 1 319 1 111 1 222 1 25 1 43 1 18 1 192 2 224 1 77 2 11 2 
37 1 32 1 45 1 
37 1 146 1 45 1 
37 3 32 2 74 1 146 1 7 1 181 1 
37 2 32 1 146 1 7 1 10 1 181 1 
37 2 32 1 146 1 7 1 181 2 
271 1 316 3 272 1 260 4 15 1 241 4 41 1 210 1 244 1 145 1 337 1 326 1 246 1 
105 1 271 1 272 1 316 3 260 4 15 1 241 4 41 1 210 2 145 1 51 1 337 1 348 1 30 1 
0 3 271 1 328 2 41 1 180 3 142 1 279 1 231 1 253 1 183 1 67 1 185 1 145 2 336 1 236 1 11 1 316 2 128 1 260 3 33 1 16 2 317 1 241 3 169 2 263 1 48 1 342 1 244 1 192 1 323 1 324 1 77 1 326 1 178 1 95 1 246 1 199 1 
0 7 271 1 273 1 328 4 41 1 180 5 142 2 183 2 145 4 336 3 236 1 316 3 128 1 260 4 108 1 16 4 317 2 169 4 241 4 48 1 342 2 267 1 244 1 323 1 324 2 326 1 178 1 246 2 199 2 
201 1 266 1 34 1 
155 1 34 1 
349 1 
6 1 34 1 
6 1 2 1 225 1 266 2 275 1 34 3 
6 1 2 1 34 1 
322 1 34 1 
287 1 58 1 59 1 151 1 80 1 158 1 252 1 182 1 3 1 212 2 144 1 122 1 168 1 
287 1 58 1 59 1 151 1 80 1 158 1 252 1 182 1 3 1 212 2 144 1 122 1 168 1 
287 1 58 1 59 1 151 1 80 1 158 1 152 1 252 1 182 1 3 1 212 2 144 1 122 1 168 1 
58 25 59 4 97 12 80 1 22 1 158 2 252 2 142 3 278 1 182 2 3 5 183 3 212 9 4 1 144 1 186 1 306 1 122 2 338 1 168 1 257 3 287 2 340 2 151 13 317 3 134 1 191 4 294 1 295 1 20 1 324 3 139 1 199 3 
287 1 58 3 340 4 59 2 97 1 151 2 80 1 158 1 252 1 182 1 3 1 212 3 332 1 294 1 166 1 306 2 122 1 139 2 20 2 338 2 168 1 
37 2 119 1 61 1 40 1 329 1 161 1 82 2 102 1 146 1 284 1 45 1 313 1 285 1 315 1 238 1 32 1 129 1 243 1 91 1 289 1 290 1 113 1 92 1 114 1 74 1 53 1 194 2 75 1 195 1 55 1 
37 2 61 1 329 1 161 1 82 3 102 1 146 1 284 1 45 1 311 1 313 1 285 1 315 1 238 1 32 1 71 1 129 1 288 1 243 1 91 1 289 1 290 1 92 1 74 1 114 1 194 3 53 2 75 1 195 1 55 1 
37 2 61 1 329 1 161 1 82 2 102 1 146 1 284 1 45 1 313 1 32 1 71 1 129 1 288 1 243 1 91 1 289 1 290 1 92 1 74 1 194 2 53 2 75 1 195 1 55 1 
315 1 129 1 14 1 243 1 230 1 276 1 34 1 161 1 289 1 82 1 6 1 66 1 290 2 165 1 114 1 102 1 8 1 194 1 75 2 311 1 55 2 156 1 313 2 
37 2 315 1 238 1 119 1 32 1 40 1 129 1 288 1 243 1 329 1 161 1 289 1 82 1 290 1 74 1 114 1 146 1 102 1 284 1 194 1 75 1 45 1 195 1 55 1 285 1 313 1 
280 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 15 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
129 1 260 1 102 1 15 1 241 1 276 1 289 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 272 1 260 3 300 1 33 1 87 1 241 3 190 1 42 1 231 1 172 1 210 1 100 1 293 1 192 1 235 1 137 1 77 1 56 1 
127 1 341 1 260 2 300 1 15 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
127 1 341 1 260 2 300 1 33 1 241 2 87 1 190 1 42 1 231 1 172 1 100 1 293 1 192 1 235 1 77 1 56 1 
212 1 287 1 340 2 281 1 59 1 201 1 306 1 80 1 20 1 139 1 158 1 171 1 338 1 188 1 168 1 
118 1 58 14 59 1 97 6 141 11 22 1 142 2 278 1 3 1 183 1 212 2 5 11 306 2 187 1 338 2 188 2 257 3 340 4 151 8 86 1 317 1 171 1 222 1 291 4 191 3 175 1 93 1 346 1 20 2 139 2 324 2 197 1 199 2 
118 1 58 2 97 1 2 1 276 1 161 1 6 1 163 1 306 1 102 1 11 1 338 1 188 1 70 1 340 2 258 1 129 1 151 1 86 1 33 2 243 1 263 1 34 1 171 1 289 1 222 1 223 1 291 1 115 1 192 1 154 1 93 1 176 1 347 1 20 1 139 1 77 2 268 1 
118 1 80 1 2 2 251 1 158 1 161 2 3 4 163 2 6 2 5 6 212 7 306 3 256 2 11 1 168 1 129 3 86 1 317 2 90 1 263 1 171 3 93 1 94 1 176 1 139 3 20 3 324 2 268 1 58 14 59 3 97 7 141 6 276 1 142 2 183 2 184 2 283 2 102 3 149 2 150 2 338 3 188 3 287 1 340 6 151 7 33 3 288 1 243 2 34 2 289 3 291 6 115 2 192 1 154 2 77 3 199 2 
118 1 200 1 248 1 58 2 97 1 230 1 276 2 161 2 6 2 281 1 165 1 306 2 102 7 11 1 338 2 339 1 188 2 340 4 129 8 151 1 13 2 33 1 288 1 263 1 243 2 189 1 34 3 171 2 289 8 113 1 174 1 192 1 116 1 93 1 136 1 176 1 20 2 139 2 77 1 
58 3 59 1 97 2 141 1 142 1 279 1 183 1 212 1 5 1 306 1 11 1 338 1 188 1 124 1 340 2 151 1 86 1 33 1 47 1 317 1 263 1 171 1 291 1 192 1 20 1 139 1 324 1 77 1 199 1 
58 2 340 2 60 1 151 2 141 1 171 1 142 1 3 1 212 1 5 1 281 1 291 1 306 1 139 1 20 1 324 1 338 1 188 1 
58 2 340 2 59 1 97 2 141 1 317 1 171 1 183 1 212 1 5 1 281 1 73 1 291 1 306 1 139 1 20 1 338 1 188 1 
58 4 59 1 97 2 141 2 142 1 3 1 183 1 5 2 212 2 281 1 306 1 338 1 188 1 340 2 151 2 317 1 171 1 291 2 324 1 20 1 139 1 199 1 
58 2 340 2 60 1 151 2 141 1 171 1 142 1 3 1 212 1 5 1 291 1 306 1 116 1 139 1 20 1 324 1 338 1 188 1 
58 2 340 2 59 1 97 2 141 1 317 1 171 1 183 1 212 1 5 1 73 1 291 1 306 1 116 1 139 1 20 1 338 1 188 1 
58 4 59 1 97 2 141 2 142 1 3 1 183 1 5 2 212 2 306 1 338 1 188 1 340 2 151 2 317 1 171 1 291 2 116 1 324 1 20 1 139 1 199 1 
340 2 58 4 59 1 97 2 151 2 317 1 141 2 171 1 142 1 183 1 3 1 212 2 5 2 291 2 306 1 139 1 20 1 324 1 338 1 188 1 199 1 
118 1 58 2 97 1 2 1 276 1 161 1 6 1 163 1 306 1 102 1 150 1 338 1 188 1 340 2 151 1 129 1 33 1 243 1 34 1 171 1 289 1 222 1 115 1 154 1 93 1 139 1 20 1 77 1 
118 1 58 1 97 1 204 1 229 1 250 1 2 1 276 1 161 1 231 1 6 1 163 1 306 1 102 1 338 1 188 1 340 2 129 1 33 1 243 1 34 1 171 1 289 1 222 1 139 1 20 1 77 1 54 1 
58 4 59 1 97 2 141 2 142 1 3 1 183 1 5 2 212 2 306 1 338 1 188 1 340 2 151 2 86 1 317 1 171 1 291 2 324 1 20 1 139 1 199 1 
58 4 59 1 97 2 141 2 2 1 142 1 161 1 183 1 3 1 212 2 5 2 163 1 6 1 306 1 102 1 150 1 256 1 338 1 188 1 340 2 151 2 129 1 33 1 317 1 243 1 34 1 171 1 289 1 113 1 291 2 115 1 154 1 324 1 139 1 20 1 77 1 199 1 
58 3 97 1 141 1 142 1 279 1 183 1 3 1 212 1 5 1 306 1 11 1 338 1 188 1 216 1 340 2 151 2 86 1 33 1 317 1 47 1 263 1 171 1 291 1 192 1 20 1 139 1 324 1 77 1 199 1 
58 19 59 3 79 1 97 10 274 2 22 1 65 1 142 3 278 1 3 3 183 3 212 6 101 1 232 1 306 2 166 1 29 1 338 2 257 1 340 4 151 9 317 3 130 1 191 2 177 2 20 2 139 2 324 3 296 1 199 3 
58 26 59 2 79 1 97 12 274 1 303 1 65 2 143 1 142 3 278 2 3 2 183 2 212 4 101 2 306 3 166 1 233 1 234 1 83 1 338 3 257 2 340 6 151 14 317 2 130 1 110 1 191 2 294 2 177 4 20 3 139 3 324 3 296 1 199 3 
79 1 80 1 303 1 158 1 3 4 212 7 166 1 306 3 83 1 168 1 257 3 317 4 130 1 324 4 139 3 20 3 177 4 58 36 59 3 97 19 274 1 22 1 65 2 142 4 143 1 278 3 183 4 101 1 232 1 233 1 234 1 338 3 340 6 287 1 151 17 110 1 191 4 294 1 245 1 199 4 296 1 
79 1 80 1 303 1 158 1 3 3 212 7 166 1 306 4 83 1 168 1 257 3 317 3 130 1 324 4 139 4 20 4 177 4 58 33 59 4 97 16 274 1 22 1 65 2 142 4 143 1 278 3 183 3 101 1 232 1 233 1 234 1 338 4 340 8 287 1 151 17 110 1 191 4 294 2 245 1 199 4 296 1 
58 47 59 6 79 1 97 23 80 1 274 1 303 1 22 2 158 1 65 1 143 1 142 7 278 2 3 7 183 7 212 13 101 1 306 2 166 1 233 1 234 1 83 1 338 2 168 1 257 4 287 1 340 4 151 24 317 7 130 1 110 1 191 4 294 1 177 4 20 2 139 2 324 7 197 2 296 1 199 7 
270 1 43 1 84 1 254 1 23 1 318 1 319 1 269 1 247 1 160 1 
270 1 43 1 84 1 36 1 23 1 318 1 98 1 319 1 314 1 
224 1 89 1 
286 1 270 1 84 1 260 1 241 1 206 2 318 1 23 1 319 1 277 1 304 1 209 1 43 1 254 1 145 1 325 1 269 1 247 1 
286 1 270 1 84 1 260 1 241 1 206 2 318 1 23 1 319 1 277 1 304 1 209 1 43 1 254 1 145 1 325 1 269 1 247 1 
286 1 270 1 84 1 260 1 241 1 206 2 318 1 23 1 319 1 277 1 304 1 209 1 43 1 254 1 145 1 325 1 269 1 247 1 
68 1 202 1 46 1 
68 1 202 1 46 1 
208 1 46 1 343 1 
208 1 343 1 
265 1 302 1 
270 1 206 1 23 1 302 1 209 1 43 1 25 1 213 1 11 2 316 1 84 1 260 1 33 2 241 1 89 1 263 2 318 1 265 1 342 1 319 1 111 1 222 1 18 1 192 2 224 1 325 1 77 2 
68 1 202 1 
208 1 343 1 
118 1 58 2 97 1 249 1 161 1 6 1 164 1 306 1 102 2 310 1 338 1 188 1 340 2 129 2 151 1 13 2 86 1 85 1 33 2 243 1 189 1 133 1 34 1 171 1 289 2 192 2 93 1 136 1 139 1 20 1 77 2 
37 2 31 1 238 1 32 1 129 2 288 1 243 1 170 1 329 1 161 1 289 2 113 1 74 1 146 1 102 2 284 1 45 1 76 1 55 1 
37 2 238 1 32 1 129 1 288 1 243 1 64 1 170 1 329 1 289 1 161 1 74 1 146 1 102 1 284 1 45 1 55 1 
31 1 78 1 129 1 243 1 230 1 276 1 34 1 161 1 289 1 6 1 66 1 165 1 102 1 55 1 
37 2 31 1 238 1 32 1 129 1 288 1 243 1 170 1 329 1 289 1 161 1 74 1 146 1 102 1 284 1 45 1 76 1 55 1 
125 1 
118 1 58 1 97 1 2 1 276 1 279 2 161 1 163 1 6 1 185 1 306 1 102 1 150 1 338 1 11 2 188 1 340 2 129 1 33 3 263 2 243 1 34 1 171 1 289 1 222 1 321 1 115 1 192 2 154 1 20 1 139 1 77 3 
15 1 
298 1 201 1 145 1 16 1 307 1 41 1 180 1 
15 1 
129 1 102 1 15 1 276 1 289 1 
15 1 
260 1 15 1 109 1 241 1 
307 1 15 1 
0 10 217 1 16 5 169 5 317 2 218 2 328 5 180 5 142 2 183 2 184 1 336 5 145 5 324 2 199 2 
210 1 272 1 145 1 260 1 241 1 41 1 
129 1 15 1 102 1 276 1 24 1 289 1 
43 1 308 1 23 1 
43 1 254 1 265 1 23 1 112 1 
43 1 308 1 23 1 
43 1 308 1 23 1 
43 1 228 1 23 1 
43 1 228 1 23 1 
43 1 228 1 23 1 
43 1 23 1 
270 1 84 1 
58 2 340 4 287 1 59 1 97 1 151 1 80 1 158 1 3 1 212 2 306 2 294 1 139 2 20 2 338 2 168 1 
212 1 287 1 59 1 201 1 80 1 158 1 168 1 
340 2 58 4 59 1 97 2 151 2 317 1 81 1 142 1 183 1 3 1 212 2 306 1 139 1 20 1 324 1 338 1 199 1 
257 1 58 7 59 1 97 4 151 3 317 1 22 1 142 1 278 1 183 1 3 1 212 2 191 2 324 1 199 1 
58 27 59 6 97 14 80 1 22 1 158 4 252 1 142 2 183 2 3 5 212 11 282 1 306 2 69 1 338 2 168 1 257 2 287 4 340 4 151 13 317 3 345 1 191 2 175 1 294 2 324 3 139 2 20 2 197 1 199 2 
58 1 191 1 97 1 
257 1 58 1 151 1 
340 2 58 6 59 2 97 3 151 3 317 1 81 1 142 1 3 1 183 1 184 1 212 3 306 1 20 1 139 1 324 1 338 1 199 1 
58 12 59 1 97 6 142 2 143 1 278 1 3 1 183 2 212 2 306 1 166 1 233 1 234 1 83 1 338 1 257 1 340 2 151 6 317 2 110 1 191 1 20 1 139 1 324 2 199 2 
58 6 287 1 59 1 151 3 97 3 317 1 158 1 3 1 212 2 345 1 324 1 
58 12 59 3 97 6 80 1 158 3 252 1 3 3 212 6 282 1 306 1 69 1 338 1 168 1 340 2 287 3 151 6 317 1 345 1 294 1 20 1 139 1 324 1 
340 2 287 2 58 10 59 3 151 5 97 5 317 2 158 2 3 2 212 5 282 1 345 1 306 1 166 1 20 1 139 1 324 2 338 1 
340 2 58 2 151 2 142 1 3 1 212 1 166 1 306 1 139 1 20 1 324 1 338 1 
340 2 58 4 59 1 97 2 151 2 317 1 142 1 183 1 3 1 212 2 166 1 306 1 139 1 20 1 324 1 338 1 199 1 
58 3 340 6 287 1 59 1 97 2 151 1 158 1 3 1 212 2 294 1 232 1 166 1 306 3 139 3 20 3 69 1 338 3 
58 28 59 6 97 15 80 1 22 1 81 1 158 3 142 3 278 1 3 5 183 3 4 1 212 11 186 1 232 1 306 5 166 1 69 1 338 5 168 1 257 3 287 3 340 10 151 13 317 4 345 1 191 4 294 2 295 1 20 5 139 5 324 4 199 3 
257 1 287 1 340 2 58 2 59 1 151 1 97 1 80 1 158 1 278 1 212 1 191 1 166 1 306 1 233 1 139 1 20 1 338 1 168 1 
58 5 59 1 97 2 80 1 22 1 81 1 158 1 142 1 278 1 3 1 212 2 166 1 306 2 233 1 338 2 168 1 257 1 287 1 340 4 151 3 191 2 20 2 139 2 324 1 199 1 
58 13 59 2 97 7 80 1 81 1 158 1 143 1 142 2 278 1 3 1 183 2 212 3 306 3 166 1 233 1 234 1 83 1 338 3 168 1 257 1 287 1 340 6 151 6 317 2 110 1 191 1 294 1 20 3 139 3 324 2 199 2 
58 11 59 2 97 4 80 1 81 1 158 1 142 2 143 1 278 1 3 2 183 1 212 4 306 3 166 1 233 1 234 1 83 1 338 3 168 1 257 1 287 1 340 6 151 7 317 1 110 1 191 1 294 1 20 3 139 3 324 2 199 2 
257 1 287 1 340 2 58 2 59 1 151 1 97 1 80 1 158 1 278 1 212 1 191 1 166 1 306 1 233 1 139 1 20 1 338 1 168 1 
58 12 59 1 97 6 142 2 143 1 278 1 3 1 183 2 212 2 306 1 166 1 233 1 234 1 83 1 338 1 257 1 340 2 151 6 317 2 110 1 191 1 20 1 139 1 324 2 199 2 
58 12 59 2 97 5 80 1 81 1 158 1 143 1 142 2 278 1 3 2 183 1 212 4 306 4 166 1 233 1 234 1 83 1 338 4 168 1 257 1 287 1 340 8 151 7 317 1 110 1 191 1 294 2 20 4 139 4 324 2 199 2 
58 16 59 3 97 7 143 1 142 3 278 1 3 3 183 2 212 6 166 1 306 4 232 1 233 1 234 1 83 1 338 4 257 1 340 8 151 9 317 2 110 1 191 1 294 2 20 4 139 4 324 3 199 3 
287 2 58 2 59 2 151 1 97 1 80 1 158 2 3 2 212 4 168 2 
58 12 59 2 97 5 80 1 158 1 143 1 142 2 278 1 3 1 183 1 212 3 166 1 306 4 232 1 233 1 234 1 83 1 338 4 168 1 257 1 287 1 340 8 151 7 317 1 110 1 191 1 294 2 20 4 139 4 324 2 199 2 
192 1 300 1 334 1 33 1 77 1 159 1 222 1 
192 1 300 1 334 1 335 1 33 1 240 1 88 1 132 1 264 1 77 1 159 1 222 1 
6 1 165 1 201 1 129 1 102 1 243 1 230 1 276 1 34 1 161 1 289 1 
129 1 33 2 2 1 243 1 263 1 276 1 34 1 289 1 161 1 222 1 6 1 163 1 192 1 102 1 154 1 176 1 77 2 11 1 
38 1 2 2 161 1 231 1 163 1 6 2 102 1 11 1 106 1 129 1 33 2 263 2 243 1 34 3 289 1 222 1 172 1 293 1 192 2 154 1 322 1 176 1 77 2 
38 1 250 1 2 2 161 1 231 2 163 1 6 2 102 1 11 1 106 1 129 1 33 2 263 2 243 1 34 3 289 1 222 1 172 1 293 1 192 2 322 1 176 1 77 2 54 1 
38 1 39 1 1 1 2 1 41 1 276 1 161 1 210 1 6 1 145 1 102 3 235 1 106 1 129 3 260 2 241 2 243 1 266 1 34 4 289 3 322 1 155 1 226 1 
38 1 12 1 39 1 106 1 260 2 129 3 241 2 2 1 243 1 276 1 41 1 266 1 34 4 289 3 161 1 6 1 210 1 145 1 102 3 235 1 322 1 155 1 
174 1 129 1 102 1 243 1 161 1 289 1 
200 1 248 1 13 1 129 7 288 1 2 1 243 3 189 1 276 2 220 1 34 3 50 1 289 7 161 2 113 1 6 2 121 1 174 1 102 6 225 1 339 1 
59 1 80 1 2 1 158 1 161 1 212 1 6 1 163 1 283 1 306 2 102 1 256 1 150 1 11 1 338 2 188 2 168 1 287 1 340 4 129 1 86 1 33 2 243 1 263 1 133 1 34 1 171 2 289 1 113 1 115 1 192 1 154 1 176 1 20 2 139 2 77 2 
12 1 272 1 316 1 260 3 129 1 15 2 241 3 262 1 301 1 266 1 276 1 34 2 24 1 289 1 210 2 26 1 102 1 235 1 155 1 
129 2 2 1 243 2 266 1 34 2 289 2 161 1 113 1 6 1 174 1 102 2 225 1 9 1 
39 1 129 4 243 1 230 1 276 1 34 1 289 4 161 1 113 1 6 1 165 1 102 4 327 1 
38 1 21 1 129 2 140 1 2 1 243 2 34 1 50 1 289 2 161 1 6 1 121 1 102 2 94 1 
37 1 129 1 146 1 102 1 284 1 243 1 45 1 276 1 161 1 289 1 
129 2 288 1 249 1 243 1 189 1 34 1 289 2 161 1 113 1 6 1 102 2 
38 1 248 1 200 1 129 5 243 2 230 1 189 1 276 1 34 3 289 5 161 2 113 1 6 2 165 1 102 4 327 1 
38 1 200 1 129 5 243 2 230 1 207 1 189 1 276 1 34 3 289 5 161 2 113 1 6 2 165 1 102 4 327 1 
129 1 33 2 250 1 2 1 243 1 263 1 276 1 34 1 289 1 161 1 231 1 222 1 6 1 163 1 192 1 102 1 176 1 77 2 54 1 11 1 
38 1 129 1 2 1 243 2 220 1 34 1 50 1 289 1 161 1 6 1 121 1 102 1 225 1 
299 1 85 1 33 1 221 1 164 1 192 1 104 1 310 1 77 1 
107 1 104 1 35 1 
299 1 104 1 219 1 221 1 222 1 
299 2 316 1 260 2 107 1 241 2 87 1 41 1 219 2 221 2 222 1 231 1 35 1 172 1 293 1 145 1 103 1 104 1 235 1 215 1 
315 1 119 1 61 1 242 1 91 1 82 3 114 1 92 1 53 1 194 3 28 1 
126 1 147 1 19 1 91 1 
92 1 91 1 
92 1 201 1 61 1 91 1 
315 1 92 1 114 1 61 1 194 1 91 1 82 1 
290 1 75 1 82 1 
315 1 119 1 227 1 61 1 242 2 91 1 82 3 114 1 92 1 44 1 194 3 138 1 
315 1 92 1 114 1 61 1 205 1 53 1 194 2 91 1 82 2 
315 1 37 1 119 1 32 1 91 1 82 1 114 1 147 1 309 1 194 1 45 1 
315 1 119 1 92 1 114 1 194 1 91 1 82 1 
315 1 119 1 92 2 114 1 61 1 194 1 82 1 
315 2 119 1 91 1 82 2 92 1 114 2 194 2 148 1 312 1 297 1 
315 1 119 1 61 1 91 2 82 3 162 1 92 1 114 1 147 1 19 1 194 3 53 2 28 1 
37 2 315 1 119 1 32 1 61 1 120 1 91 1 82 2 92 1 114 1 74 1 146 1 194 2 53 1 45 1 
315 2 119 1 61 1 205 1 91 2 82 4 92 1 114 2 147 1 19 1 194 4 53 2 196 1 
315 1 119 1 92 1 114 1 61 1 194 1 91 1 82 1 
315 1 227 1 126 1 61 2 242 1 91 3 82 4 92 2 114 1 147 1 19 1 53 2 194 4 138 1 
315 1 119 1 61 1 261 1 131 1 91 1 330 1 82 2 92 1 114 1 194 2 53 1 
315 1 119 1 227 1 61 1 242 2 91 1 82 3 114 1 92 1 194 3 138 2 237 1 
57 1 72 1 91 2 305 2 
211 1 315 1 119 1 114 1 194 1 82 1 
315 1 119 1 92 1 114 1 61 1 53 1 194 2 28 1 91 1 82 2 
239 1 
315 1 119 1 92 1 114 1 61 1 194 1 91 1 82 1 

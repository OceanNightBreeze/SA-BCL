#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 63 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 42 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 42 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 42 320 287 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 313 131 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 313 131 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 313 131 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 313 131 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 313 131 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 34 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 9 87 1 157 1 133 1 242 2 138 1 64 2 246 7 291 4 12 1 14 1 272 1 38 1 44 2 298 5 122 1 350 9 278 1 352 1 125 3 49 1 23 1 176 1 261 1 
335 9 87 1 157 1 133 1 242 2 138 1 64 2 246 7 291 4 12 1 14 1 272 1 38 1 44 2 298 5 122 1 350 9 278 1 352 1 125 3 49 1 23 1 176 1 261 1 
335 9 87 2 157 1 242 2 138 2 64 2 246 6 291 4 36 1 12 1 272 1 38 1 73 1 294 1 146 1 44 2 298 5 122 1 235 1 350 9 278 2 352 1 125 3 49 1 23 2 176 1 261 1 360 1 
335 9 87 2 157 1 242 2 138 2 64 2 246 6 291 4 36 1 12 1 272 1 38 1 73 1 294 1 146 1 44 2 298 5 122 1 235 1 350 9 278 2 352 1 125 3 49 1 23 2 176 1 261 1 360 1 
335 10 87 2 157 1 242 2 138 2 64 2 246 7 291 5 36 1 12 1 272 1 38 1 73 1 294 1 146 1 44 2 298 6 122 1 235 1 350 10 278 2 352 1 125 4 49 1 23 2 176 1 261 1 360 1 
335 7 87 2 157 1 242 2 138 2 64 1 246 4 291 3 36 1 12 1 272 1 38 1 73 1 294 1 146 1 44 2 298 4 122 1 235 1 350 7 278 2 352 1 125 2 49 1 23 2 261 1 360 1 
335 4 157 1 44 1 242 1 298 3 278 1 350 4 352 1 125 1 138 1 64 2 23 1 246 3 291 2 12 1 176 1 261 1 272 1 
85 1 335 1 87 1 18 1 107 1 44 1 242 1 235 1 350 1 278 1 352 1 138 1 83 1 12 1 261 1 
335 3 87 1 44 2 242 2 298 2 350 3 352 1 125 1 49 1 246 1 291 1 12 1 261 1 
253 1 34 1 179 1 
228 2 254 1 179 1 
289 1 191 2 280 2 58 2 132 1 165 2 60 2 110 2 
202 1 58 2 132 1 29 1 30 1 158 1 60 3 110 2 322 1 226 2 184 2 183 1 113 1 207 1 7 1 289 1 89 1 290 1 165 2 213 1 15 1 273 1 342 1 92 1 76 1 94 2 191 3 218 1 79 1 80 1 46 1 124 2 104 1 280 2 282 2 239 1 152 1 
56 1 191 1 280 1 66 1 58 1 132 1 165 1 326 1 60 1 110 1 
253 1 191 1 56 1 58 1 276 1 60 1 236 1 171 1 258 1 69 1 238 1 90 1 309 1 179 1 
253 1 191 1 56 1 58 1 110 1 60 1 171 2 280 1 258 1 69 2 238 1 165 1 90 1 309 1 179 1 
171 1 311 1 307 1 69 1 285 1 
253 1 171 2 311 1 69 2 269 1 321 1 285 1 179 1 
171 1 69 1 285 1 
311 1 56 1 191 1 132 1 58 1 110 1 60 1 323 1 171 1 66 1 280 1 69 1 165 1 326 1 
179 1 
253 1 171 2 311 1 69 2 269 1 277 1 285 1 179 1 
317 1 253 1 75 1 311 2 96 2 31 1 285 2 102 1 288 1 171 5 355 1 50 1 69 5 269 1 118 1 166 2 26 1 129 2 179 1 
289 1 34 1 
169 1 191 2 58 2 3 1 60 2 110 1 280 1 289 2 165 1 
188 1 234 1 159 1 
15 1 92 1 191 1 30 1 158 1 60 1 79 1 322 1 226 1 184 1 183 1 124 1 84 1 289 1 89 1 152 1 
289 1 191 3 280 3 58 3 165 1 266 1 60 3 110 3 
56 1 191 1 280 1 58 1 326 1 60 1 110 1 
169 1 56 1 191 1 280 1 58 1 165 1 3 1 60 1 110 1 
56 1 58 3 132 1 241 1 29 1 158 1 30 1 266 1 60 4 110 3 322 1 183 1 226 1 184 1 207 1 7 1 289 1 89 1 290 1 69 1 165 2 90 1 309 1 213 1 15 1 92 1 232 1 169 1 94 1 191 4 218 1 79 1 80 1 46 1 171 1 124 1 104 1 356 1 280 3 258 1 238 1 282 2 239 1 152 1 
236 1 289 1 191 2 280 1 58 2 224 1 266 1 60 2 110 1 
232 1 169 1 56 1 191 3 58 3 266 2 110 3 60 3 171 1 280 3 356 1 116 1 69 1 258 1 238 1 165 1 90 1 309 1 179 1 
169 1 191 2 58 2 234 1 159 1 266 1 110 2 60 2 280 2 165 1 
15 1 92 1 191 1 30 1 158 1 60 1 79 1 226 1 184 1 183 1 322 1 124 1 289 1 89 1 152 1 
191 1 30 1 158 1 60 1 79 1 226 1 184 1 183 1 322 1 101 1 124 1 315 1 289 1 89 1 152 1 
180 1 265 1 29 2 159 2 113 2 207 1 290 1 247 1 213 1 93 1 39 1 188 2 328 1 94 4 234 2 329 1 218 1 351 1 80 1 219 1 282 2 52 1 239 1 222 1 
56 1 191 1 280 1 58 1 145 1 309 1 60 1 110 1 
15 1 232 1 92 1 191 2 58 1 234 1 158 1 30 1 266 1 79 1 110 1 60 2 322 1 183 1 226 1 184 1 124 1 89 1 280 1 152 1 
232 1 240 1 169 1 344 1 191 5 58 5 224 1 266 2 110 4 60 5 236 1 280 4 289 1 165 1 
56 1 191 2 280 2 58 2 145 1 326 1 60 2 110 2 
263 1 293 1 
263 1 293 1 
123 1 86 1 
123 1 86 1 
123 1 86 1 
17 1 263 1 293 1 
263 2 293 2 123 1 86 1 346 1 210 1 
263 1 293 1 28 1 
17 1 263 1 293 1 
17 1 263 1 293 1 
263 1 293 1 220 1 
263 1 293 1 220 1 
263 1 293 1 220 1 
263 2 293 2 214 1 336 2 343 1 274 1 297 1 114 2 171 2 229 2 69 2 331 3 210 1 185 2 357 1 175 1 316 1 283 2 179 1 
263 1 0 1 58 2 28 1 110 2 60 2 205 1 114 1 289 1 229 1 69 1 185 1 37 1 293 1 343 1 191 2 170 1 171 1 280 2 331 1 237 1 151 1 283 1 153 1 
138 1 23 1 278 1 
85 1 138 1 278 1 
85 1 138 3 190 1 23 2 208 1 302 1 
85 1 138 2 190 1 23 1 347 1 302 1 
85 1 138 2 190 2 23 1 302 1 
0 1 317 2 180 1 285 1 61 1 112 1 338 1 228 3 69 5 269 1 35 1 166 1 252 2 39 1 253 1 75 3 311 4 328 1 254 1 96 1 197 2 22 2 102 1 171 5 279 1 237 1 127 1 151 1 52 1 359 1 129 1 179 2 
56 1 132 1 58 1 285 1 110 1 60 1 323 1 66 1 307 1 340 1 69 2 165 1 326 1 143 1 253 1 311 2 191 1 48 1 171 2 280 1 179 1 
317 2 180 1 61 1 228 4 69 3 166 1 35 1 252 2 39 1 253 1 75 3 311 2 328 1 254 2 96 1 197 1 22 2 171 3 279 1 237 1 127 1 359 1 52 1 129 1 26 1 179 3 
317 4 180 2 61 1 206 1 163 1 228 7 69 4 166 1 35 2 16 1 252 4 39 2 253 1 75 5 311 3 328 2 254 3 96 1 197 2 22 4 171 4 279 1 237 2 127 1 359 1 52 2 129 1 26 1 179 4 
57 1 34 1 322 1 
204 1 322 1 
255 1 
89 1 322 1 
141 1 57 2 255 1 322 2 354 1 89 1 152 1 
89 1 152 1 322 1 
348 1 322 1 
91 1 333 1 180 1 77 2 94 7 29 3 217 1 135 1 245 1 113 4 219 2 51 1 119 1 52 1 271 1 230 1 222 3 
91 1 333 1 180 1 77 2 94 7 29 3 217 1 135 1 245 1 113 4 219 2 51 1 119 1 52 1 271 1 230 1 222 3 
91 1 333 1 180 1 77 2 94 7 29 3 217 1 196 1 135 1 245 1 113 4 219 2 51 1 119 1 52 1 271 1 230 1 222 3 
180 1 29 6 243 1 59 1 135 1 245 1 113 5 207 1 290 1 35 1 271 1 230 2 292 1 213 1 91 2 39 1 94 11 77 1 328 1 217 1 98 1 219 2 256 2 24 1 282 2 52 1 239 1 262 1 128 1 222 4 
113 1 63 1 207 1 94 1 77 1 290 1 20 1 217 1 282 2 239 1 230 1 213 1 
85 1 264 1 335 2 87 1 318 1 108 1 242 1 158 1 184 1 226 1 183 1 6 1 138 2 208 1 246 1 325 1 11 1 12 1 121 1 44 1 298 1 278 1 350 2 312 1 352 1 124 1 23 1 332 1 177 1 261 1 
85 1 264 1 335 3 87 1 318 1 242 1 225 1 158 1 184 1 226 1 183 1 138 2 9 1 208 1 325 1 246 2 11 1 12 1 121 1 44 1 298 1 278 1 350 3 312 1 124 1 23 1 332 1 177 1 261 1 178 1 
85 1 264 1 335 2 87 1 318 1 225 1 158 1 184 1 226 1 183 1 138 2 208 1 325 1 246 2 11 1 12 1 121 1 298 1 350 2 278 1 312 1 124 1 23 1 261 1 178 1 
264 2 335 1 27 1 87 2 156 1 242 1 88 1 158 2 30 1 183 1 322 1 184 1 226 1 89 1 9 1 68 1 325 2 11 2 120 1 233 1 44 1 350 1 353 1 100 1 172 1 124 1 152 1 358 1 361 1 
85 1 264 1 335 1 87 1 318 1 108 1 242 1 225 1 158 1 184 1 226 1 183 1 138 2 208 1 325 1 11 1 121 1 44 1 278 1 350 1 312 1 352 1 124 1 23 1 332 1 177 1 
193 1 
200 1 223 1 319 1 56 1 191 1 58 1 42 1 320 1 147 3 276 1 267 1 285 1 109 1 60 1 236 1 171 2 173 1 162 1 324 1 258 1 69 2 238 1 309 1 90 1 
200 1 223 1 319 1 56 1 191 1 58 1 42 1 320 1 147 3 276 1 267 1 285 1 109 1 60 1 236 1 171 2 173 1 162 1 324 1 69 2 258 1 238 1 309 1 90 1 
317 1 334 2 200 1 223 1 55 1 319 2 56 1 58 1 267 2 285 4 109 1 60 1 162 2 228 2 117 2 324 1 69 4 269 2 186 1 90 1 309 1 166 1 341 1 253 1 75 1 191 1 96 1 276 1 147 4 102 1 236 1 171 4 173 1 258 1 105 2 238 1 129 1 179 1 130 2 
317 1 27 1 2 1 88 1 158 2 30 2 285 2 183 1 322 1 184 2 226 2 89 1 68 1 69 2 269 1 166 1 74 1 75 1 96 1 97 1 102 1 124 2 171 2 127 1 152 1 358 1 129 1 361 1 
200 1 223 1 319 1 56 1 191 1 58 1 277 1 147 2 276 1 285 2 109 1 60 1 236 1 171 3 173 1 324 1 69 3 258 1 269 1 238 1 309 1 90 1 
200 1 223 1 56 1 58 1 285 1 60 1 109 1 267 1 324 1 69 3 269 1 90 1 309 1 253 1 191 1 276 1 147 3 277 1 236 1 171 3 173 1 258 1 238 1 179 1 
200 1 223 1 56 1 319 1 58 1 60 1 109 1 285 2 267 1 162 1 324 1 69 3 269 1 90 1 309 1 253 1 191 1 277 1 276 1 147 3 236 1 171 3 173 1 258 1 238 1 179 1 
200 1 223 1 319 2 56 1 191 1 58 1 42 1 320 1 147 2 277 1 276 1 60 1 285 3 109 1 287 1 236 1 171 3 173 1 162 2 324 1 258 1 69 3 238 1 269 1 309 1 90 1 
317 1 200 1 55 1 56 1 319 2 58 1 60 1 109 1 285 4 244 2 162 2 65 1 324 1 117 2 69 4 166 1 253 1 75 1 254 2 171 4 173 1 258 1 129 1 179 2 334 2 223 1 267 2 228 2 269 2 309 1 90 1 341 1 191 1 96 1 147 4 276 1 236 1 102 1 238 1 106 2 
200 1 223 1 56 1 191 1 58 1 42 1 147 2 276 1 109 1 60 1 236 1 171 2 173 1 324 1 69 2 258 1 238 1 309 1 90 1 
200 1 223 1 56 1 191 1 58 1 42 1 147 2 276 1 109 1 60 1 236 1 171 2 173 1 324 1 69 2 258 1 238 1 309 1 90 1 
317 1 334 2 200 1 223 1 55 1 319 2 56 1 58 1 267 2 285 4 60 1 109 1 162 2 228 2 117 2 324 1 69 4 269 2 186 1 90 1 309 1 270 1 166 1 253 1 75 1 191 1 215 1 96 1 276 1 147 4 349 1 236 1 102 1 171 4 173 1 258 1 105 2 238 1 129 1 179 1 130 2 
333 1 180 1 29 3 159 1 245 1 113 3 207 1 289 2 290 1 34 1 119 1 271 1 213 1 188 1 94 6 77 1 234 1 218 1 351 1 80 1 219 2 51 1 282 2 239 1 52 1 222 2 
180 1 337 1 29 6 159 4 59 3 113 8 207 2 289 1 290 2 35 2 292 1 213 2 91 1 273 1 39 2 188 8 94 14 328 1 95 1 43 1 234 8 218 1 299 1 98 1 80 2 219 1 256 3 104 1 221 1 282 4 239 2 52 2 222 2 
58 1 29 1 158 1 30 1 159 1 266 1 60 2 110 1 322 1 183 1 184 1 226 1 113 1 207 1 289 1 89 1 290 1 213 1 15 1 92 1 232 1 273 1 345 1 191 2 94 2 95 1 218 1 79 1 99 1 80 1 45 1 124 1 84 1 280 1 104 1 282 2 152 1 239 1 
58 1 203 1 158 2 159 7 110 1 60 3 322 2 245 1 113 10 207 3 289 2 290 3 209 1 119 1 212 2 249 2 213 3 15 2 77 1 328 2 218 3 79 2 80 3 219 6 124 3 330 2 259 2 222 10 333 1 180 3 29 10 225 1 30 1 266 1 184 3 226 3 183 2 89 2 35 2 271 1 91 4 273 1 232 1 92 2 39 2 188 7 191 3 94 20 95 1 234 7 46 2 103 1 104 1 280 1 51 1 282 6 239 3 152 2 52 3 
27 1 29 1 88 1 158 2 30 1 183 1 322 1 184 2 226 2 113 1 207 1 89 1 290 1 68 1 268 1 140 1 213 1 273 1 342 1 94 2 218 1 80 1 124 2 104 1 282 2 152 1 358 1 239 1 361 1 
180 1 58 1 182 1 29 2 159 1 110 1 60 1 113 1 207 1 290 1 165 1 35 1 213 1 169 1 39 1 188 1 191 1 94 3 328 1 95 1 234 1 218 1 80 1 219 1 280 1 282 2 239 1 52 1 222 1 
91 1 93 1 39 1 188 1 94 2 234 1 159 1 218 1 351 1 80 1 113 2 207 1 290 1 282 2 239 1 52 1 222 1 213 1 
188 1 180 1 94 2 328 1 234 1 265 1 29 2 159 1 218 1 351 1 80 1 219 1 207 1 290 1 282 2 239 1 222 1 213 1 
180 1 29 2 159 2 113 2 207 1 290 1 35 1 213 1 91 1 39 1 188 2 94 4 328 1 234 2 218 1 351 1 80 1 219 1 282 2 52 1 239 1 222 2 
91 1 93 1 39 1 188 1 94 2 234 1 159 1 218 1 80 1 113 2 207 1 290 1 268 1 282 2 239 1 52 1 222 1 213 1 
188 1 180 1 94 2 328 1 234 1 265 1 29 2 159 1 218 1 80 1 219 1 207 1 290 1 268 1 282 2 239 1 222 1 213 1 
180 1 29 2 159 2 113 2 207 1 290 1 268 1 35 1 213 1 91 1 39 1 188 2 94 4 328 1 234 2 218 1 80 1 219 1 282 2 52 1 239 1 222 2 
180 1 29 2 159 2 113 2 207 1 290 1 35 1 213 1 91 1 39 1 188 2 94 4 328 1 234 2 218 1 80 1 219 1 282 2 52 1 239 1 222 2 
29 1 158 1 30 1 60 1 183 1 184 1 226 1 322 1 113 1 207 1 289 1 89 1 290 1 213 1 15 1 273 1 92 1 94 2 191 1 218 1 79 1 80 1 46 1 124 1 104 1 282 2 152 1 239 1 
29 1 158 1 30 1 60 1 183 1 184 1 226 1 322 1 113 1 207 1 289 1 89 1 290 1 213 1 273 1 189 1 94 2 191 1 218 1 79 1 80 1 101 1 315 1 124 1 104 1 282 2 152 1 239 1 
180 1 29 2 159 2 113 2 207 1 290 1 35 1 213 1 91 1 39 1 188 2 94 4 328 1 95 1 234 2 218 1 80 1 219 1 282 2 52 1 239 1 222 2 
180 1 29 2 159 2 158 1 60 1 183 1 184 1 226 1 322 1 113 2 6 1 207 1 89 1 290 1 35 1 213 1 91 1 15 1 92 1 39 1 188 2 328 1 94 4 191 1 234 2 218 1 79 1 80 1 46 1 219 1 124 1 330 1 282 2 52 1 152 1 239 1 222 2 
180 1 201 1 58 1 29 1 159 1 110 1 60 1 113 2 207 1 290 1 165 1 35 1 213 1 91 1 169 1 39 1 188 1 328 1 191 1 94 3 95 1 234 1 218 1 80 1 280 1 282 2 239 1 52 1 222 1 
313 1 131 1 207 1 8 1 290 1 20 1 282 2 239 1 213 1 
313 1 131 1 207 1 8 1 290 1 20 1 282 2 239 1 213 1 
313 1 131 1 207 1 8 1 290 1 20 1 282 2 239 1 213 1 
313 1 131 1 207 1 8 1 290 1 20 1 282 2 239 1 213 1 
313 1 131 1 207 1 8 1 290 1 20 1 282 2 239 1 213 1 
58 2 29 1 158 1 60 2 183 1 322 1 184 2 226 2 62 1 113 1 207 1 89 1 290 1 140 1 251 1 213 1 273 1 342 2 295 1 191 2 94 2 41 1 95 1 19 1 218 1 80 1 124 2 104 1 150 1 282 2 239 1 
85 1 318 1 144 1 158 1 225 1 278 1 134 1 312 1 183 1 226 2 184 2 4 1 124 2 6 1 138 2 23 1 208 1 11 1 332 1 
85 1 318 1 144 1 225 1 158 1 278 1 312 1 226 1 184 1 21 1 183 1 124 1 138 2 23 1 208 1 11 1 332 1 
27 1 88 1 30 1 158 2 184 1 226 1 322 1 183 1 4 1 89 1 68 1 11 1 233 1 353 1 124 1 174 1 358 1 152 1 361 1 
85 1 318 1 144 1 158 1 225 1 278 1 134 1 312 1 226 1 184 1 183 1 4 1 124 1 138 2 23 1 208 1 11 1 332 1 
53 1 
58 2 132 1 29 1 30 1 158 1 60 3 110 2 184 1 226 1 183 1 322 1 207 1 7 1 289 1 89 1 290 1 165 2 213 1 15 1 92 1 94 1 191 3 218 1 79 1 80 1 46 1 124 1 104 1 280 2 282 2 152 1 239 1 
317 2 252 2 253 2 75 1 77 1 2 1 254 2 96 1 22 2 102 1 228 4 127 1 166 1 129 1 179 4 
317 1 253 1 75 1 50 1 34 1 118 1 179 1 
317 1 285 1 244 1 65 1 228 1 69 1 269 1 166 1 253 1 75 1 254 1 96 1 102 1 171 1 129 1 106 1 179 2 
317 8 54 2 2 1 57 2 204 3 158 4 285 5 322 10 161 2 6 1 115 1 67 1 69 5 211 2 71 1 118 1 166 4 212 2 250 2 252 6 253 2 75 9 328 2 254 6 22 6 124 3 171 5 127 2 129 4 179 8 180 2 304 2 30 1 183 3 226 3 184 3 305 1 306 3 89 3 139 2 228 12 269 3 35 2 141 1 39 2 96 4 348 2 194 2 102 4 50 1 238 2 152 3 52 2 155 1 
317 5 54 1 180 2 2 1 284 1 59 1 285 1 160 1 306 2 227 1 228 4 69 1 164 1 269 1 166 2 35 2 292 1 252 4 39 2 253 2 75 8 328 2 254 2 96 2 22 4 300 1 102 2 171 1 256 1 281 1 127 1 25 1 52 2 129 2 179 4 
317 2 54 1 180 1 56 1 132 1 58 1 60 1 110 1 245 1 306 2 5 1 323 1 66 1 69 1 165 1 166 1 119 1 326 1 271 1 75 2 191 1 96 1 102 1 301 1 171 1 280 1 52 2 129 1 
317 1 253 1 75 1 96 1 102 1 50 1 118 1 166 1 129 1 179 1 
317 5 252 5 54 1 39 2 180 2 75 5 328 2 254 5 22 5 306 2 228 10 35 2 212 1 52 2 179 5 
253 1 171 1 69 1 269 1 285 1 179 1 
317 1 27 1 2 1 88 1 158 2 30 2 285 2 183 1 322 1 184 2 226 2 89 1 68 1 69 1 269 1 71 1 166 1 74 1 75 1 96 1 97 1 102 1 124 2 171 1 127 1 152 1 358 1 129 1 361 1 
114 1 78 1 283 1 
114 1 274 1 199 1 37 1 283 1 
114 1 78 1 283 1 
114 1 78 1 283 1 
114 1 181 1 283 1 
114 1 181 1 283 1 
114 1 181 1 283 1 
114 1 283 1 
263 1 293 1 
91 1 333 1 180 1 77 1 94 8 29 4 245 1 113 4 219 2 207 2 290 2 24 1 51 1 119 1 282 4 52 1 239 2 271 1 222 3 213 2 
333 1 180 1 77 1 94 6 29 3 245 1 113 3 219 2 34 1 51 1 119 1 271 1 52 1 222 2 
91 1 39 1 180 1 328 1 94 4 29 2 113 2 219 1 207 1 290 1 33 1 282 2 35 1 239 1 52 1 222 2 213 1 
113 1 256 1 94 2 29 1 59 1 292 1 
333 1 180 5 29 12 59 2 245 2 5 1 113 13 207 1 290 1 119 2 35 2 271 2 213 1 91 4 39 2 77 1 328 2 94 25 43 1 98 1 219 4 256 2 24 1 51 1 221 1 282 2 52 5 239 1 222 8 
256 1 94 1 29 1 
113 1 94 1 59 1 
91 1 39 1 180 1 94 6 328 1 29 3 113 3 207 1 219 1 290 1 33 1 282 2 35 1 239 1 212 1 52 1 222 2 213 1 
180 2 284 1 29 6 59 1 113 6 207 1 227 1 290 1 164 1 35 2 292 1 213 1 91 1 39 2 94 12 328 2 20 1 300 1 219 1 256 1 281 1 282 2 239 1 52 2 222 2 
91 1 180 1 94 6 29 3 245 1 113 3 219 1 119 1 52 1 271 1 222 2 
91 1 333 1 94 3 29 2 243 1 245 1 113 1 219 1 207 1 290 1 24 1 51 1 282 2 271 1 239 1 222 2 213 1 
91 2 180 2 94 10 20 1 29 5 245 2 5 1 113 5 207 1 219 3 290 1 282 2 119 1 239 1 271 2 52 2 222 5 213 1 
91 1 39 1 94 2 20 1 113 2 207 1 290 1 282 2 239 1 52 1 222 1 213 1 
91 1 39 1 180 1 328 1 94 4 29 2 20 1 113 2 219 1 207 1 290 1 282 2 35 1 239 1 52 1 222 2 213 1 
167 1 91 1 94 3 29 2 20 1 243 1 245 1 113 1 207 3 219 1 290 3 24 1 282 6 239 3 271 1 222 2 213 3 
333 1 180 2 29 8 243 1 59 1 245 2 5 1 113 7 207 4 290 4 33 1 119 1 271 2 292 1 213 4 91 3 167 1 94 15 20 1 219 3 256 1 24 1 51 1 282 8 52 2 239 4 222 6 262 1 
333 1 180 1 284 1 29 4 59 1 245 1 113 4 207 1 290 1 119 1 271 1 292 1 213 1 77 1 94 8 20 1 219 2 256 1 51 1 282 2 52 1 239 1 222 2 
333 1 180 1 284 1 29 5 59 1 245 1 113 6 207 2 290 2 33 1 119 1 35 1 271 1 292 1 213 2 91 1 39 1 77 1 94 11 20 1 98 1 219 2 256 2 51 1 282 4 239 2 52 2 222 3 
333 1 180 3 284 1 29 10 59 1 245 1 113 9 207 3 227 1 290 3 164 1 33 1 119 1 35 2 271 1 292 1 213 3 91 1 39 2 77 1 94 19 328 2 20 1 300 1 219 3 256 1 281 1 24 1 51 1 282 6 239 3 52 3 222 4 
333 1 180 2 284 1 29 7 59 1 245 1 113 10 207 3 227 1 290 3 164 1 33 1 119 1 35 2 271 1 292 1 213 3 91 2 39 2 77 1 94 17 328 1 20 1 300 1 219 3 256 1 281 1 24 1 51 1 282 6 239 3 52 3 222 5 
333 1 180 1 284 1 29 4 59 1 245 1 113 4 207 1 290 1 119 1 271 1 292 1 213 1 77 1 94 8 20 1 219 2 256 1 51 1 282 2 52 1 239 1 222 2 
180 2 284 1 29 6 59 1 113 6 207 1 227 1 290 1 164 1 35 2 292 1 213 1 91 1 39 2 94 12 328 2 20 1 300 1 219 1 256 1 281 1 282 2 239 1 52 2 222 2 
333 1 180 2 284 1 29 8 59 1 245 1 113 10 207 4 227 1 290 4 164 1 33 1 119 1 35 2 271 1 292 1 213 4 91 2 39 2 77 1 94 18 328 1 20 1 300 1 219 3 256 1 281 1 24 2 51 1 282 8 239 4 52 3 222 5 
180 2 284 1 29 7 59 1 113 9 207 4 227 1 290 4 164 1 35 3 292 1 213 4 91 3 167 1 39 3 94 16 328 2 20 1 300 1 219 3 256 1 281 1 24 2 282 8 239 4 52 3 222 6 
333 2 91 3 180 1 94 7 29 4 245 3 113 3 219 3 51 1 119 1 271 3 52 1 222 6 
333 1 180 2 284 1 29 8 59 1 245 1 113 10 207 4 227 1 290 4 164 1 119 1 35 2 271 1 292 1 213 4 91 1 167 1 39 2 77 1 94 18 328 1 20 1 300 1 219 3 256 1 281 1 24 2 51 1 282 8 239 4 52 3 222 4 
236 1 289 1 191 1 58 1 224 1 198 1 60 1 
327 1 40 1 191 1 58 1 224 1 60 1 286 1 236 1 289 1 198 1 70 1 231 1 
124 1 68 1 34 1 30 1 184 1 226 1 
15 1 191 2 58 1 158 1 30 1 266 1 79 1 110 1 60 2 322 1 226 1 184 1 183 1 124 1 289 1 89 1 280 1 152 1 
56 1 58 2 158 1 266 1 60 2 110 2 183 1 184 1 226 1 322 3 289 1 115 1 89 2 90 1 309 1 15 1 191 2 348 1 194 1 79 1 124 1 280 1 152 2 
56 1 58 2 158 1 266 1 60 2 110 2 183 1 184 2 226 2 322 3 289 1 115 1 89 2 90 1 309 1 13 1 191 2 348 1 194 1 79 1 315 1 124 2 280 1 152 2 
57 1 204 1 158 1 30 1 285 1 183 1 322 4 184 3 226 3 115 1 89 1 69 2 248 1 13 1 187 1 253 1 348 1 194 1 124 3 171 2 238 1 152 1 179 1 
253 1 57 1 348 1 304 1 30 1 194 1 158 1 204 1 285 1 226 3 184 3 322 4 183 1 171 2 124 3 89 1 115 1 69 2 238 1 13 1 152 1 179 1 
339 1 124 1 158 1 183 1 184 1 226 1 
141 1 342 1 295 1 296 1 27 1 88 1 225 1 30 2 158 3 195 1 226 6 184 7 322 3 183 2 339 1 6 1 124 7 126 1 89 2 260 1 152 1 
58 1 159 1 158 1 110 1 60 2 322 1 245 1 113 3 6 1 207 2 289 2 290 2 119 1 213 2 15 1 77 1 19 1 218 2 79 1 80 2 124 1 219 2 330 1 259 1 222 2 333 1 180 1 29 3 266 1 184 1 226 1 183 1 89 1 271 1 92 1 188 1 191 2 94 6 95 1 234 1 46 1 280 1 51 1 282 4 239 2 152 1 52 1 
317 1 57 1 304 1 30 1 204 1 285 2 226 1 184 1 322 2 161 1 139 1 69 3 211 1 269 1 118 1 71 1 166 2 253 1 75 1 311 1 96 2 102 2 124 1 171 3 50 1 238 1 129 2 179 1 
141 1 57 1 158 2 226 2 184 2 322 2 183 1 339 1 6 1 124 2 89 1 152 1 155 1 
27 1 88 1 158 2 30 1 183 1 322 1 226 2 184 2 124 2 6 1 89 1 68 1 152 1 358 1 361 1 
27 1 203 1 88 1 158 2 226 2 184 2 322 1 183 1 124 2 115 1 89 1 358 1 152 1 361 1 
85 1 124 1 138 1 318 1 158 1 30 1 278 1 183 1 184 1 226 1 
295 1 225 1 158 1 226 2 184 2 322 1 183 1 6 1 124 2 89 1 251 1 
27 1 88 1 158 3 30 1 183 2 322 3 184 3 226 2 6 1 89 2 68 1 295 1 195 1 124 3 260 1 358 1 152 1 361 1 
27 1 303 1 88 1 158 3 30 1 183 2 322 3 184 3 226 2 6 1 89 2 68 1 295 1 124 3 260 1 358 1 152 1 361 1 
191 2 58 1 158 1 30 1 266 1 79 1 110 1 60 2 322 1 226 1 184 1 183 1 124 1 315 1 289 1 89 1 280 1 152 1 
141 1 27 1 88 1 158 2 226 1 184 1 322 1 183 1 124 1 115 1 126 1 89 1 152 1 
314 1 168 1 136 1 289 1 308 1 
168 2 142 1 253 1 311 1 56 1 314 2 136 1 171 2 289 1 356 1 257 1 69 2 308 2 258 1 238 1 309 1 90 1 310 1 179 1 
62 1 168 1 136 1 191 1 58 1 150 1 41 1 308 1 60 1 
142 1 136 1 310 1 
38 1 352 1 335 3 246 1 242 1 44 1 298 1 36 1 12 1 350 3 261 1 
125 1 18 1 298 1 291 1 
298 1 261 1 
34 1 298 1 12 1 261 1 
335 1 242 1 44 1 298 1 12 1 350 1 261 1 
264 1 87 1 350 1 
335 3 44 1 242 1 298 1 350 3 111 1 352 1 137 1 72 1 36 2 12 1 261 1 
335 2 64 1 246 1 242 1 44 1 298 1 12 1 350 2 261 1 
352 1 335 1 138 1 23 1 157 1 242 1 44 1 298 1 291 1 278 1 350 1 
352 1 335 1 242 1 44 1 298 1 350 1 261 1 
352 1 335 1 242 1 44 1 12 1 350 1 261 2 
352 1 47 1 335 2 216 1 242 2 44 2 298 1 350 2 261 1 81 1 
38 1 335 3 44 1 242 1 122 1 298 2 350 3 352 1 125 1 246 2 291 1 12 1 261 1 
85 1 335 2 192 1 44 1 242 1 298 1 350 2 278 1 352 1 138 2 23 1 208 1 246 1 12 1 261 1 
335 4 44 2 242 2 298 2 350 4 352 1 125 1 64 1 246 2 291 1 12 1 176 1 261 1 
352 1 335 1 242 1 44 1 298 1 12 1 350 1 261 1 
335 4 18 1 44 1 242 1 298 3 350 4 111 1 137 1 125 1 246 2 291 1 36 1 12 2 261 2 
335 2 44 1 242 1 298 1 350 2 352 1 149 1 246 1 12 1 261 1 14 1 154 1 
82 1 352 1 335 3 137 2 242 1 44 1 298 1 36 2 12 1 350 3 261 1 111 1 
148 1 10 1 275 2 298 2 
352 1 1 1 335 1 242 1 44 1 350 1 
38 1 352 1 335 2 246 1 242 1 44 1 298 1 12 1 350 2 261 1 
32 1 
352 1 335 1 242 1 44 1 298 1 12 1 350 1 261 1 

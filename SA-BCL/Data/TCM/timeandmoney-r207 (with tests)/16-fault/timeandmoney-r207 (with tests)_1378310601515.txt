#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (11,39) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 144 276 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 348 65 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 66 210 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 66 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 66 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 66 210 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 66 210 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 63 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 248 257 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 92 346 (228,312) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
260 1 57 1 262 1 86 1 169 5 240 1 265 2 347 9 91 1 170 3 173 1 215 1 350 2 308 1 219 2 199 1 8 1 153 2 356 9 359 1 12 2 102 1 14 2 140 4 234 1 185 2 278 1 301 6 
260 1 57 1 262 1 86 1 169 5 240 1 265 2 347 9 91 1 170 3 173 1 215 1 350 2 308 1 219 2 199 1 8 1 153 2 356 9 359 1 12 2 102 1 14 2 140 4 234 1 185 2 278 1 301 6 
260 1 57 1 262 1 86 1 169 6 240 1 265 2 347 10 91 1 170 4 173 1 215 1 350 2 308 1 219 2 199 1 8 1 153 2 356 10 359 1 12 2 102 1 14 2 140 5 234 1 185 2 278 1 301 7 
260 1 57 1 262 1 86 1 169 4 240 1 265 2 347 7 91 1 170 2 173 1 350 2 308 1 219 2 199 1 8 1 153 2 356 7 359 1 12 1 102 1 14 2 140 3 234 1 185 2 278 1 301 4 
86 1 356 4 169 3 265 1 347 4 12 2 170 1 173 1 215 1 350 1 308 1 14 1 102 1 219 1 140 2 185 1 234 1 301 3 
260 1 8 1 153 1 169 1 356 2 265 1 347 2 173 1 350 1 308 1 14 1 4 1 234 1 185 1 110 1 132 1 
153 1 356 3 169 2 265 2 347 3 170 1 173 1 308 1 14 2 140 1 234 1 199 1 301 1 
262 1 86 1 169 5 240 1 265 2 347 9 170 3 173 1 215 1 324 1 350 1 308 1 219 1 247 1 199 1 153 1 356 9 12 2 14 2 102 1 140 4 234 1 185 1 301 7 
262 1 86 1 169 5 240 1 265 2 347 9 170 3 173 1 215 1 324 1 350 1 308 1 219 1 247 1 199 1 153 1 356 9 12 2 14 2 102 1 140 4 234 1 185 1 301 7 
63 1 28 1 89 1 
28 1 19 2 108 1 
112 1 313 2 291 1 320 2 282 2 118 2 284 2 81 2 
25 2 123 1 320 2 282 2 305 1 30 1 284 2 1 1 213 1 61 1 309 1 67 2 38 1 112 1 313 2 291 1 137 1 225 1 293 2 314 1 255 1 202 2 101 1 75 1 48 1 339 1 77 1 187 1 118 2 20 1 120 1 81 2 164 2 
178 1 313 1 291 1 252 1 320 1 282 1 305 1 118 1 284 1 81 1 
168 1 302 1 320 1 152 1 28 1 282 1 305 1 98 1 89 1 266 1 184 1 81 1 21 1 82 1 
168 1 313 1 302 2 320 1 152 1 28 1 282 1 305 1 284 1 89 1 266 2 184 1 118 1 81 1 82 1 
268 1 302 1 269 1 50 1 266 1 
295 1 49 1 302 2 269 1 50 1 28 1 89 1 266 2 
302 1 50 1 266 1 
178 1 313 1 302 1 252 1 291 1 320 1 282 1 305 1 284 1 242 1 266 1 269 1 118 1 81 1 
28 1 
295 1 200 1 302 2 269 1 50 1 28 1 89 1 266 2 
40 1 26 1 302 5 336 1 157 1 306 1 266 5 172 1 295 1 341 1 15 1 269 2 174 1 50 2 147 1 288 1 331 1 
112 1 63 1 
112 2 313 1 320 2 282 2 284 1 68 1 208 1 118 1 81 2 
105 1 11 1 162 1 
25 1 112 1 137 1 305 1 100 1 61 1 339 1 67 1 120 1 164 1 
112 1 313 1 320 3 282 3 72 1 118 3 284 3 81 3 
178 1 320 1 282 1 305 1 118 1 284 1 81 1 
313 1 320 1 282 1 305 1 68 1 118 1 284 1 208 1 81 1 
168 1 25 1 123 1 302 1 320 3 282 3 305 1 30 1 284 3 266 1 213 1 61 1 267 1 309 1 67 1 38 1 112 1 136 1 313 2 137 1 291 1 152 1 225 1 293 1 72 1 255 1 202 2 75 1 48 1 184 1 208 1 118 3 20 1 53 1 120 1 81 3 164 1 82 1 
112 1 320 2 282 2 72 1 118 1 284 1 81 2 21 1 318 1 
136 1 168 1 313 1 302 1 320 3 152 1 28 1 224 1 282 3 305 1 72 2 284 3 266 1 267 1 184 1 208 1 118 3 81 3 82 1 
313 1 320 2 282 2 72 1 284 2 11 1 208 1 118 2 162 1 81 2 
25 1 112 1 137 1 305 1 61 1 339 1 67 1 120 1 164 1 
112 1 25 1 320 1 222 1 180 1 282 1 335 1 357 1 346 1 32 1 228 1 78 1 67 1 120 1 164 1 
39 1 123 1 293 1 30 1 255 1 348 1 202 2 213 1 75 1 2 1 309 1 18 1 52 1 20 1 
168 1 320 1 282 1 305 1 118 1 284 1 163 1 81 1 
61 1 25 1 136 1 137 1 320 1 282 1 67 1 72 1 118 1 284 1 11 1 120 1 164 1 81 1 
112 1 136 1 313 1 320 5 282 5 72 2 284 4 35 1 118 4 208 1 177 1 81 5 21 1 318 1 
178 1 320 2 282 2 305 1 118 2 284 2 163 1 81 2 
283 1 311 1 
283 1 311 1 
197 1 287 1 
197 1 287 1 
197 1 287 1 
283 1 311 1 286 1 
283 1 311 1 315 1 
272 1 362 1 197 1 283 2 311 2 287 1 
283 1 311 1 286 1 
283 1 311 1 286 1 
283 1 311 1 212 1 
283 1 311 1 212 1 
283 1 311 1 212 1 
272 1 211 2 111 2 302 2 124 2 28 1 283 2 285 1 294 2 316 1 266 2 158 1 3 1 232 1 259 3 175 1 329 2 311 2 96 1 
211 1 302 1 124 1 320 2 282 2 283 1 284 2 321 1 266 1 323 1 216 1 62 1 329 1 311 1 7 1 112 1 111 1 315 1 183 1 232 1 259 1 118 2 209 1 81 2 
350 1 219 1 185 1 
350 1 185 1 110 1 
150 1 350 3 326 1 113 1 219 2 110 1 
350 2 326 1 244 1 113 1 219 1 110 1 
350 2 326 2 219 1 113 1 110 1 
261 1 26 1 56 2 302 4 304 1 28 1 144 1 89 1 321 1 348 1 266 4 323 1 327 1 269 4 147 1 65 1 40 1 179 1 115 1 159 1 15 1 76 1 18 1 79 1 209 1 54 2 
238 3 26 1 302 6 28 2 304 1 144 1 89 1 321 2 348 1 266 6 146 1 268 3 269 5 147 1 65 1 64 1 288 1 40 1 179 1 223 1 115 1 159 1 15 1 76 1 50 3 18 1 54 2 
261 1 269 1 302 2 144 1 79 1 288 1 266 2 
261 1 302 1 144 1 79 1 288 1 276 1 266 1 
63 1 78 1 9 1 
78 1 248 1 
143 1 
78 1 180 1 
214 1 78 3 180 1 9 2 310 1 32 1 
78 1 180 1 32 1 
78 1 22 1 
135 1 0 1 293 6 10 1 30 2 227 2 127 1 101 4 115 1 341 1 174 1 18 1 17 2 245 3 149 1 165 1 122 1 
135 1 0 1 293 7 10 1 30 3 227 2 127 1 101 4 115 1 341 1 174 1 18 1 17 2 245 3 149 1 165 1 122 1 
135 1 0 1 293 6 10 1 30 2 193 1 227 2 127 1 101 4 115 1 341 1 174 1 18 1 17 2 245 3 149 1 165 1 122 1 
239 3 123 1 0 4 281 1 30 13 192 1 126 1 348 2 127 1 213 1 174 3 309 1 245 10 65 2 246 1 149 1 331 1 135 1 151 1 179 2 293 28 10 2 227 6 275 3 202 2 361 1 101 15 115 3 341 3 17 3 18 3 20 1 165 2 122 1 
123 2 0 1 30 5 127 1 213 2 174 1 245 5 309 2 149 1 135 1 293 10 10 1 358 1 227 4 202 4 361 1 101 5 115 1 297 1 341 1 18 1 17 2 20 2 165 1 
23 1 25 1 263 1 169 1 265 1 347 2 307 1 173 1 129 1 325 1 350 2 308 1 219 1 94 1 67 1 176 1 110 1 150 1 153 1 356 2 335 1 357 1 99 1 47 1 14 1 185 1 234 1 235 1 164 1 301 1 
23 1 25 1 263 1 169 1 265 1 347 3 307 1 173 1 129 1 325 1 350 2 308 1 219 1 94 1 67 1 110 1 150 1 201 1 153 1 356 3 335 1 357 1 47 1 14 1 299 1 185 1 235 1 207 1 164 1 301 2 
23 1 25 1 169 1 347 2 173 1 129 1 325 1 350 2 308 1 219 1 94 1 67 1 110 1 150 1 201 1 153 1 356 2 335 1 357 1 47 1 299 1 185 1 235 1 164 1 301 2 
23 2 237 1 25 1 84 1 27 1 241 1 265 1 347 1 129 2 67 1 271 1 333 1 153 2 180 1 356 1 335 1 357 1 14 1 78 1 207 1 235 2 120 1 164 1 
23 1 25 1 263 1 265 1 347 1 307 1 129 1 325 1 350 2 219 1 94 1 67 1 110 1 150 1 201 1 153 1 356 1 335 1 357 1 99 1 47 1 14 1 185 1 234 1 235 1 164 1 
74 1 
190 1 320 1 106 1 282 1 145 2 108 2 322 1 196 1 147 1 67 2 290 1 333 1 152 1 335 1 156 1 338 1 295 3 159 1 205 1 15 1 76 2 78 1 161 1 19 2 120 2 164 2 81 1 300 1 21 1 82 1 26 1 25 2 168 1 84 1 302 5 28 2 305 1 89 1 31 2 266 5 270 2 133 1 354 2 40 1 273 1 355 2 180 1 43 4 357 1 98 1 139 2 50 6 184 1 54 2 142 2 
190 1 168 1 200 1 302 3 320 1 152 1 43 2 282 1 305 1 98 1 266 3 196 1 295 1 50 2 270 1 184 1 161 1 81 1 82 1 300 1 21 1 133 1 
190 1 168 1 200 1 302 3 320 1 152 1 28 1 43 3 282 1 305 1 98 1 89 1 266 3 196 1 295 1 139 1 50 1 184 1 161 1 81 1 82 1 300 1 21 1 133 1 
190 1 168 1 302 3 320 1 28 1 282 1 305 1 89 1 266 3 196 1 270 1 133 1 200 1 152 1 43 3 98 1 295 1 139 1 50 2 184 1 161 1 81 1 21 1 300 1 82 1 142 1 
190 1 191 1 320 1 282 1 145 2 108 2 60 1 196 1 195 1 147 1 290 1 200 1 152 1 338 1 295 3 15 1 76 1 161 1 81 1 82 1 300 1 21 1 168 1 26 1 302 5 28 5 305 1 89 5 31 2 266 5 217 1 351 1 270 4 133 1 40 1 354 2 355 2 43 6 98 1 139 4 50 7 184 1 54 1 142 4 
190 1 26 1 168 1 302 4 320 1 28 2 282 1 145 2 305 1 89 1 31 2 108 2 266 4 196 1 147 1 270 2 133 1 354 2 40 1 290 1 152 1 355 2 43 4 98 1 156 1 338 1 295 2 139 2 15 1 50 4 76 1 184 1 161 1 19 2 54 1 81 1 142 2 300 1 21 1 82 1 
190 1 168 1 26 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 31 2 108 2 266 4 60 1 196 1 217 1 351 1 147 1 270 2 133 1 354 2 40 1 290 1 152 1 355 2 43 4 98 1 338 1 295 2 139 2 15 1 50 4 76 1 184 1 161 1 54 1 81 1 142 2 21 1 300 1 82 1 
190 1 168 1 26 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 31 2 108 2 266 4 60 1 196 1 217 1 351 1 147 1 270 2 133 1 354 2 40 1 290 1 152 1 355 2 43 4 98 1 338 1 295 2 139 2 15 1 50 4 76 1 184 1 161 1 54 1 81 1 142 2 21 1 300 1 82 1 
190 1 166 1 168 1 26 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 266 4 196 1 93 2 351 1 147 1 270 2 353 1 133 1 354 2 40 1 290 1 152 1 43 4 98 1 295 2 139 2 16 2 15 1 50 4 76 1 184 1 161 1 19 2 54 1 81 1 142 2 21 1 300 1 82 1 83 1 
190 1 26 1 168 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 31 2 108 2 266 4 60 1 196 1 195 1 217 1 351 1 147 1 270 3 133 1 354 2 40 1 290 1 152 1 355 2 43 5 98 1 338 1 295 2 139 3 15 1 76 1 50 5 184 1 161 1 54 1 81 1 21 1 300 1 82 1 142 3 
190 1 26 1 168 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 31 2 108 2 266 4 60 1 196 1 195 1 217 1 351 1 147 1 270 3 133 1 354 2 40 1 290 1 152 1 355 2 43 5 98 1 338 1 295 2 139 3 15 1 76 1 50 5 184 1 161 1 54 1 81 1 21 1 300 1 82 1 142 3 
190 1 166 1 26 1 168 1 302 4 320 1 28 1 282 1 145 2 305 1 89 1 266 4 196 1 93 2 147 1 270 2 133 1 354 2 40 1 290 1 152 1 43 4 98 1 156 1 295 2 139 2 16 2 15 1 50 4 76 1 184 1 161 1 19 2 54 1 81 1 142 2 300 1 21 1 82 1 
123 1 105 1 30 2 127 1 213 1 63 1 174 1 309 1 245 1 149 1 135 1 112 2 293 5 11 1 255 1 227 1 202 2 101 3 75 1 115 1 341 1 18 1 17 1 20 1 52 1 162 1 
239 3 123 2 105 10 0 1 30 4 213 2 245 1 309 2 65 2 246 1 134 1 112 1 332 1 292 1 225 1 179 2 293 12 73 1 255 1 11 10 275 3 202 4 101 8 75 2 115 2 204 1 298 1 77 1 20 2 162 3 
25 1 123 1 320 1 107 1 282 1 284 1 30 1 213 1 61 1 309 1 67 1 221 1 112 1 136 1 137 1 225 1 293 2 254 1 72 1 255 1 202 2 100 1 101 1 75 1 204 1 77 1 118 1 20 1 162 1 120 1 164 1 81 1 
25 1 123 1 320 1 282 1 284 1 30 1 213 1 34 1 309 1 67 1 136 1 225 1 293 1 72 1 255 1 202 2 75 1 204 1 118 1 20 1 120 1 81 1 164 1 
319 1 25 8 123 2 84 1 320 1 303 1 282 1 284 1 30 1 213 2 328 1 309 2 67 7 176 1 333 1 201 1 71 1 225 1 180 2 293 2 314 2 72 1 335 2 357 2 255 2 202 4 101 1 75 2 342 1 77 1 78 3 51 1 236 1 118 1 52 1 20 2 120 2 81 1 164 8 
123 1 320 1 282 1 284 1 30 1 348 1 213 1 309 1 65 1 313 1 179 1 293 2 226 1 255 1 202 2 101 1 75 1 115 1 204 1 18 1 208 1 118 1 20 1 81 1 
123 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 309 1 52 1 20 1 162 1 70 1 
123 1 293 1 30 1 255 1 348 1 202 2 213 1 75 1 2 1 309 1 18 1 52 1 20 1 
123 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 309 1 65 1 52 1 20 1 162 1 
123 1 303 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 309 1 20 1 162 1 70 1 
123 1 303 1 293 1 30 1 255 1 348 1 202 2 213 1 75 1 2 1 309 1 18 1 20 1 
123 1 303 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 309 1 65 1 20 1 162 1 
123 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 309 1 65 1 20 1 162 1 
25 1 123 1 305 1 30 1 213 1 61 1 309 1 67 1 38 1 112 1 137 1 225 1 293 2 255 1 202 2 101 1 75 1 339 1 77 1 20 1 120 1 164 1 
25 1 123 1 320 1 282 1 30 1 346 1 32 1 213 1 131 1 309 1 67 1 112 1 222 1 180 1 225 1 293 2 335 1 357 1 255 1 202 2 101 1 228 1 75 1 77 1 78 1 20 1 120 1 164 1 
123 1 105 1 179 1 293 2 11 1 255 1 202 2 213 1 101 2 75 1 115 1 204 1 309 1 65 1 20 1 162 1 
25 1 123 1 264 1 30 1 348 1 213 1 61 1 309 1 65 1 67 1 176 1 38 1 137 1 179 1 293 2 255 1 202 2 101 1 75 1 115 1 18 1 20 1 164 1 
123 1 320 1 105 1 282 1 30 2 284 1 348 1 213 1 309 1 65 1 6 1 313 1 179 1 293 4 255 1 11 1 202 2 101 2 75 1 115 1 204 1 18 1 208 1 118 1 20 1 81 1 
251 1 123 1 309 1 66 1 20 1 358 1 202 2 210 1 213 1 
251 1 123 1 309 1 66 1 20 1 358 1 202 2 210 1 213 1 
251 1 123 1 309 1 66 1 20 1 358 1 202 2 210 1 213 1 
251 1 123 1 309 1 66 1 20 1 358 1 202 2 210 1 213 1 
251 1 123 1 309 1 66 1 20 1 358 1 202 2 210 1 213 1 
272 1 211 1 111 1 124 1 175 1 329 1 283 1 311 1 285 1 360 1 
183 1 315 1 
230 1 211 1 111 1 206 1 124 1 329 1 283 1 311 1 274 1 
272 1 211 1 111 1 302 1 124 1 28 1 283 1 285 1 294 1 316 1 266 1 158 1 232 1 259 2 175 1 329 1 311 1 96 1 
272 1 211 1 111 1 302 1 124 1 28 1 283 1 285 1 294 1 316 1 266 1 158 1 232 1 259 2 175 1 329 1 311 1 96 1 
272 1 211 1 111 1 302 1 124 1 28 1 283 1 285 1 294 1 316 1 266 1 158 1 232 1 259 2 175 1 329 1 311 1 96 1 
362 1 286 1 203 1 
362 1 286 1 203 1 
212 1 33 1 
362 1 212 1 33 1 
7 1 62 1 
211 1 302 1 320 2 124 1 282 2 283 1 284 2 321 1 266 1 323 1 216 1 269 1 62 1 329 1 311 1 96 1 7 1 112 1 111 1 315 1 294 1 183 1 233 1 259 1 118 2 209 1 81 2 
286 1 203 1 
362 1 212 1 33 1 
280 1 25 2 123 1 320 2 282 2 30 1 171 1 213 1 309 1 67 2 330 1 180 1 97 1 225 1 293 2 314 2 335 1 357 1 255 1 202 2 101 1 75 1 204 1 342 1 77 1 78 1 186 1 236 1 20 1 164 2 81 2 
150 1 25 2 201 1 345 1 335 1 357 1 307 1 128 1 350 2 325 1 109 1 219 1 94 1 185 1 67 2 235 1 110 1 176 1 164 2 
150 1 25 1 201 1 345 1 335 1 357 1 194 1 307 1 350 2 325 1 219 1 94 1 185 1 67 1 235 1 110 1 164 1 
25 1 84 1 333 1 180 1 335 1 357 1 138 1 109 1 78 1 67 1 235 1 120 1 164 1 271 1 
150 1 25 1 201 1 345 1 335 1 357 1 307 1 128 1 350 2 325 1 109 1 219 1 94 1 185 1 67 1 235 1 110 1 164 1 
334 1 
63 1 
40 1 26 1 302 1 28 2 355 1 89 1 31 1 108 1 266 1 338 1 295 1 15 1 50 1 147 1 76 1 19 1 54 1 
40 1 26 1 25 1 180 1 335 2 357 1 32 1 257 1 214 1 277 1 15 1 147 1 78 1 67 1 248 1 120 1 164 1 
24 1 239 2 26 1 344 4 108 1 348 4 147 1 65 4 246 1 148 1 289 1 40 1 332 1 179 4 73 1 275 2 115 4 231 1 116 1 15 1 76 7 18 4 19 1 80 4 54 7 
40 1 26 1 302 1 266 1 306 1 217 1 341 1 15 1 147 1 174 1 331 1 
26 1 40 1 15 1 147 1 
295 1 302 1 50 1 28 1 89 1 266 1 
26 1 25 2 84 1 302 2 106 1 125 1 322 1 266 2 147 1 67 2 288 1 40 1 333 1 180 1 335 1 357 1 295 1 205 1 159 1 15 1 50 2 76 1 78 1 120 2 54 1 164 2 
25 1 123 1 320 2 282 2 284 2 30 1 213 1 61 1 309 1 67 1 38 1 112 1 313 2 291 1 137 1 225 1 293 1 255 1 202 2 75 1 48 1 118 2 20 1 120 1 164 1 81 2 
40 1 26 1 28 1 106 1 89 1 159 1 15 1 76 1 147 1 80 1 54 1 
211 1 329 1 337 1 
243 1 211 1 62 1 175 1 329 1 
211 1 329 1 337 1 
211 1 329 1 337 1 
211 1 329 1 119 1 
211 1 329 1 119 1 
211 1 329 1 119 1 
211 1 329 1 
283 1 311 1 
135 1 123 2 0 1 293 7 30 3 227 1 127 1 202 4 361 1 101 4 213 2 115 1 341 1 174 1 17 1 18 1 245 2 309 2 20 2 149 1 
135 1 293 5 30 2 227 1 127 1 101 3 115 1 341 1 63 1 174 1 17 1 245 1 18 1 149 1 
123 1 179 1 293 2 202 2 213 1 101 2 115 1 160 1 309 1 65 1 20 1 
239 2 179 1 0 1 293 6 73 1 30 3 348 1 275 1 101 3 115 1 18 1 65 1 245 1 246 1 
239 2 123 2 0 4 30 9 348 2 127 1 213 2 130 1 174 2 245 6 65 2 309 2 149 1 134 1 135 1 332 1 179 2 293 20 73 1 227 2 275 2 202 4 361 2 101 11 115 3 341 2 17 1 18 3 20 2 
239 1 293 1 30 1 
293 1 275 1 101 1 
179 1 0 1 293 5 30 2 348 1 101 3 115 1 65 1 245 1 18 1 141 1 
24 1 239 1 123 2 0 1 30 4 348 1 213 2 309 2 65 2 245 2 246 1 148 1 289 1 179 2 293 10 358 1 227 1 275 1 202 4 361 1 101 6 115 2 231 1 116 1 18 1 20 2 
0 1 293 6 30 3 227 1 127 1 101 3 115 1 341 1 174 1 18 1 245 2 
135 1 123 1 0 1 293 3 30 2 227 1 202 2 361 1 101 1 213 1 130 1 341 1 174 1 245 2 309 1 20 1 149 1 
341 1 174 1 245 1 227 1 331 1 
123 1 179 1 293 2 358 1 202 2 213 1 101 2 115 1 309 1 20 1 
123 1 179 1 293 2 358 1 202 2 213 1 101 2 115 1 309 1 65 1 20 1 
167 1 123 3 0 1 293 3 30 2 358 1 227 1 202 6 361 1 213 3 101 1 130 1 341 1 174 1 309 3 245 2 20 3 
239 4 167 1 123 5 281 1 0 5 30 14 192 1 126 1 348 3 127 2 213 5 130 1 174 3 309 5 65 3 245 8 246 1 149 1 135 1 179 3 293 30 73 1 358 1 227 3 275 3 202 10 361 2 101 16 115 5 341 3 160 1 17 1 18 5 20 5 
239 1 123 1 30 3 127 1 213 1 174 1 309 1 245 1 246 1 149 1 135 1 293 7 358 1 227 1 275 1 202 2 101 4 115 1 341 1 116 1 17 1 18 1 20 1 
239 2 123 2 0 1 30 4 127 1 213 2 174 1 309 2 65 1 245 2 246 1 149 1 135 1 179 1 293 10 73 1 358 1 227 1 275 1 202 4 101 6 115 2 341 1 116 1 160 1 17 1 18 1 20 2 
24 1 239 1 123 3 0 1 30 6 348 1 127 1 213 3 174 1 309 3 65 2 245 3 246 1 148 1 149 1 289 1 135 1 179 2 293 15 358 1 227 2 275 1 202 6 361 1 101 9 115 3 341 1 231 1 116 1 160 1 17 1 18 2 20 3 
24 1 239 1 123 3 0 2 30 6 348 1 127 1 213 3 174 2 309 3 65 2 245 6 246 1 148 1 149 1 331 1 289 1 135 1 179 2 293 15 358 1 227 4 275 1 202 6 361 1 101 9 115 3 341 2 231 1 116 1 160 1 17 1 18 2 20 3 
239 1 123 1 30 3 127 1 213 1 174 1 309 1 245 1 246 1 149 1 135 1 293 7 358 1 227 1 275 1 202 2 101 4 115 1 341 1 116 1 17 1 18 1 20 1 
24 1 239 1 123 2 0 1 30 4 348 1 213 2 309 2 65 2 245 2 246 1 148 1 289 1 179 2 293 10 358 1 227 1 275 1 202 4 361 1 101 6 115 2 231 1 116 1 18 1 20 2 
24 1 239 1 123 3 30 4 348 1 213 3 309 3 65 2 245 1 246 1 148 1 289 1 179 2 293 10 358 1 227 1 275 1 202 6 361 1 101 6 115 2 231 1 116 1 160 1 18 1 20 3 
24 1 239 1 167 1 123 4 0 3 30 4 348 1 213 4 309 4 65 3 245 4 246 1 148 1 289 1 179 3 293 13 358 1 227 1 275 1 202 8 361 2 101 9 115 3 231 1 116 1 18 1 20 4 
135 2 0 3 293 7 30 4 227 3 127 1 101 3 115 1 341 3 174 3 18 1 245 6 149 1 
24 1 239 1 167 1 123 3 30 4 348 1 213 3 309 3 65 2 245 1 246 1 148 1 289 1 179 2 293 10 358 1 227 1 275 1 202 6 361 1 101 6 115 2 231 1 116 1 18 1 20 3 
112 1 320 1 282 1 81 1 21 1 318 1 182 1 
112 1 320 1 282 1 154 1 182 1 59 1 296 1 363 1 81 1 279 1 318 1 21 1 
25 1 333 1 84 1 63 1 78 1 180 1 335 1 67 1 357 1 120 1 164 1 
112 1 25 1 137 1 320 1 282 1 305 1 72 1 284 1 339 1 67 1 118 1 120 1 81 1 164 1 
112 1 25 1 137 1 320 1 282 1 305 1 72 1 284 1 339 1 67 1 118 1 81 1 164 1 121 1 
25 1 320 1 180 2 282 1 335 1 72 1 284 1 357 1 346 1 32 2 228 1 92 1 78 3 67 1 118 1 81 1 164 1 121 1 22 1 
25 3 302 2 28 1 180 1 9 1 87 1 335 1 357 1 89 1 90 1 32 1 266 2 92 1 50 1 184 1 78 4 67 3 248 1 120 1 312 1 164 3 121 1 22 1 
25 1 302 1 320 1 28 1 282 1 305 1 284 1 242 1 89 1 266 1 67 1 248 1 178 1 313 1 252 1 291 1 258 1 78 1 118 1 164 1 81 1 121 1 
25 1 71 1 335 1 67 1 357 1 164 1 
319 1 25 7 201 1 71 1 180 2 314 1 335 3 44 1 357 2 32 1 229 1 214 1 342 1 5 1 328 1 78 3 51 1 67 6 176 1 120 2 164 7 
280 1 25 1 123 2 85 1 320 1 105 1 264 1 282 1 30 3 284 1 127 1 213 2 61 1 174 1 245 2 309 2 67 1 176 1 149 1 38 1 112 2 135 1 137 1 293 6 72 1 11 1 255 2 227 2 202 4 101 3 75 2 115 1 341 1 204 1 17 1 18 1 118 1 20 2 162 1 81 1 164 1 
25 1 26 2 302 2 28 1 125 1 89 1 306 1 266 2 269 1 174 1 147 2 67 1 36 1 248 1 37 1 220 1 331 1 40 2 41 1 155 1 295 1 341 1 258 1 15 2 76 1 50 1 78 1 120 1 164 1 
25 1 143 1 71 1 180 1 9 1 335 2 357 1 32 1 214 1 277 1 78 1 67 1 164 1 
25 4 84 1 333 1 180 1 335 1 357 1 90 1 78 1 95 1 67 4 176 1 120 1 164 4 
250 1 25 2 180 1 335 2 357 1 32 1 229 1 218 1 5 1 78 1 67 2 164 2 104 1 121 1 
350 1 25 1 94 1 185 1 335 1 67 1 357 1 110 1 120 1 164 1 
25 2 342 1 201 1 78 1 180 1 335 1 67 2 357 1 176 1 164 2 171 1 
319 1 25 5 333 1 84 1 180 2 335 2 357 2 342 1 78 3 95 1 67 4 51 1 176 1 120 1 164 5 121 1 
25 5 333 1 84 1 180 2 29 1 335 2 357 2 342 1 78 3 95 1 67 4 51 1 176 1 120 1 164 5 121 1 
112 1 25 1 320 2 180 1 282 2 335 1 72 1 284 1 357 1 346 1 32 1 228 1 78 1 67 1 118 1 120 1 81 1 164 1 
25 1 180 1 335 2 44 1 357 1 32 1 229 1 214 1 5 1 78 1 67 1 164 1 121 1 
320 1 97 1 282 1 13 1 186 1 198 1 81 1 189 1 330 1 
69 1 249 1 13 1 
112 1 42 1 198 1 189 1 13 1 
112 1 168 1 302 2 152 1 28 1 42 2 305 1 89 1 13 1 266 2 267 1 269 1 184 1 352 1 198 2 69 1 249 1 82 1 189 2 
308 1 63 1 169 1 173 1 
308 1 14 1 169 1 356 1 265 1 347 1 173 1 
23 1 153 1 356 1 
260 2 169 1 356 3 265 1 347 3 46 1 173 1 340 1 14 1 308 1 234 1 103 1 
308 1 14 1 169 1 356 2 265 1 347 2 12 1 301 1 173 1 
350 1 102 1 14 1 219 1 140 1 185 1 169 1 356 1 234 1 265 1 347 1 
14 1 169 1 356 1 234 1 265 1 347 1 173 1 
308 1 14 1 356 1 234 1 265 1 347 1 173 2 
169 1 356 2 265 2 181 1 347 2 58 1 173 1 14 2 234 1 55 1 
262 1 356 3 240 1 169 2 265 1 347 3 170 1 173 1 308 1 14 1 140 1 234 1 301 2 
150 1 169 1 356 2 265 1 347 2 173 1 350 2 308 1 14 1 219 1 234 1 343 1 185 1 110 1 301 1 
356 4 169 2 265 2 347 4 12 1 170 1 173 1 215 1 308 1 14 2 140 1 234 1 301 2 
308 1 14 1 169 1 356 1 234 1 265 1 347 1 173 1 
260 1 114 1 356 4 169 3 265 1 347 4 46 1 170 1 173 2 340 1 308 2 14 1 140 1 301 2 
169 1 356 2 265 1 347 2 45 1 173 1 256 1 14 1 308 1 234 1 247 1 301 1 
260 2 169 1 356 3 265 1 347 3 46 2 173 1 340 1 14 1 308 1 234 1 188 1 
169 2 117 2 88 1 317 1 
14 1 253 1 356 1 234 1 265 1 347 1 
308 1 14 1 262 1 169 1 356 2 234 1 265 1 347 2 301 1 173 1 
349 1 
308 1 14 1 169 1 356 1 234 1 265 1 347 1 173 1 
260 1 308 1 14 1 262 1 169 1 356 3 234 1 265 1 347 3 301 1 173 1 
140 1 114 1 169 1 170 1 
169 1 173 1 

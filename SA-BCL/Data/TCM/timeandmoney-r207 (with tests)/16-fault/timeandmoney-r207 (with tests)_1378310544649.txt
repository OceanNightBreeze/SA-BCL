#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 216 102 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 216 102 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 216 283 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 216 102 314 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 216 102 314 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (163,362) 38 346 115 152 191 8 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 346 115 152 147 330 363 177 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 346 115 152 147 330 363 177 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 346 115 152 147 330 363 177 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 346 115 152 147 330 363 177 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 346 115 152 147 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 346 115 152 191 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 346 115 152 147 317 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 346 115 152 147 295 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 109 1 2 1 24 1 65 1 138 1 
225 1 109 1 2 1 24 1 65 1 138 1 
225 1 109 1 2 1 24 1 65 1 138 1 
225 1 109 1 2 1 24 1 65 1 138 1 
341 1 109 4 143 3 31 2 110 1 345 1 2 1 249 1 233 1 47 1 74 2 325 3 127 1 24 1 116 1 138 1 65 4 303 1 
341 1 109 2 345 1 154 1 2 1 249 1 203 1 160 1 233 1 325 1 24 1 96 1 11 1 138 1 65 2 119 1 
341 1 109 3 143 1 69 1 345 1 2 2 203 1 74 1 325 2 24 2 138 1 65 3 303 1 
341 1 109 9 69 1 110 1 345 1 2 2 249 1 322 1 233 1 47 1 74 4 325 5 24 2 116 1 138 1 303 3 79 1 143 7 31 2 203 1 266 1 268 1 127 1 65 9 
341 1 109 9 69 1 110 1 345 1 2 2 249 1 322 1 233 1 47 1 74 4 325 5 24 2 116 1 138 1 303 3 79 1 143 7 31 2 203 1 266 1 268 1 127 1 65 9 
323 1 192 1 57 1 
192 1 172 1 72 2 
164 2 22 2 21 1 315 2 358 1 89 2 274 2 40 2 
248 1 343 1 228 1 315 2 186 1 298 1 252 1 89 2 136 1 4 1 190 1 299 1 320 2 234 2 164 3 22 2 21 1 93 2 302 2 118 1 196 1 56 1 218 1 219 1 80 1 358 1 34 2 103 1 104 1 37 1 12 1 126 1 62 1 13 1 207 1 274 3 40 2 
0 1 151 1 164 1 22 1 21 1 315 1 89 1 222 1 274 1 40 1 
0 2 151 1 57 1 278 1 315 1 89 2 210 1 222 1 124 1 192 1 164 2 22 1 21 1 178 1 206 1 53 1 40 1 274 2 
0 2 151 1 57 1 278 1 315 2 89 2 210 1 121 1 222 1 319 1 124 1 192 1 164 2 21 1 22 2 53 1 40 2 274 2 
286 1 121 1 281 1 35 1 319 1 
161 1 192 1 57 1 236 1 286 1 121 2 281 1 319 2 
286 1 121 1 319 1 
0 1 151 1 278 1 315 1 281 1 121 1 89 1 222 1 319 1 164 1 21 1 22 1 40 1 274 1 
192 1 
161 1 192 1 57 1 286 1 78 1 121 2 281 1 319 2 
241 2 57 1 1 1 286 2 201 1 281 2 121 5 111 2 319 5 6 1 161 1 192 1 94 1 195 2 353 1 293 1 149 1 327 1 262 1 
323 1 358 1 
0 1 33 1 315 1 358 1 89 2 84 1 164 2 22 1 150 1 274 2 40 1 
38 1 43 1 362 1 
56 1 343 1 80 1 344 1 228 1 358 1 34 1 103 1 4 1 12 1 320 1 164 1 13 1 93 1 118 1 274 1 
56 1 80 1 343 1 228 1 103 1 34 1 89 1 12 1 4 1 320 1 362 1 164 2 22 1 13 1 129 1 93 1 118 1 261 1 40 1 274 2 
164 3 22 3 315 1 358 1 89 3 261 1 274 3 40 3 
0 1 164 1 22 1 89 1 222 1 274 1 40 1 
0 1 315 1 89 1 84 1 164 1 22 1 150 1 40 1 274 1 
0 1 124 1 204 1 164 2 22 2 129 1 315 1 210 1 89 2 53 1 36 1 150 1 261 1 274 2 40 2 
92 1 164 2 22 1 358 1 206 1 89 2 261 1 274 2 40 1 
0 1 124 1 164 1 22 1 336 1 129 1 210 1 89 1 53 1 36 1 261 1 274 1 40 1 
43 1 315 1 89 2 164 2 362 1 22 2 261 1 150 1 40 2 274 2 
56 1 343 1 80 1 228 1 358 1 34 1 103 1 4 1 12 1 320 1 164 1 13 1 93 1 118 1 274 1 
56 1 343 1 80 1 228 1 358 1 34 1 103 1 12 1 320 1 164 1 93 1 108 1 64 1 118 1 274 1 
248 1 43 2 298 1 252 1 346 1 299 1 234 2 163 1 51 1 302 4 169 1 196 1 140 1 171 1 219 1 265 1 37 2 38 2 308 1 362 2 207 2 294 1 
0 1 164 1 22 1 230 1 89 1 53 1 274 1 40 1 
226 1 315 1 358 1 89 5 125 1 92 1 164 5 22 4 129 1 206 1 261 2 150 1 40 4 274 5 
0 1 164 2 22 2 230 1 89 2 222 1 274 2 40 2 
63 1 59 1 
63 1 59 1 
347 1 287 1 
347 1 287 1 
347 1 287 1 
132 1 63 1 59 1 
132 1 63 1 59 1 
132 1 63 1 59 1 
63 1 284 1 59 1 
247 1 347 1 81 1 63 2 287 1 59 2 
128 1 63 1 59 1 
128 1 63 1 59 1 
128 1 63 1 59 1 
209 1 67 3 247 1 32 1 231 1 121 2 59 2 17 1 173 2 319 2 61 1 192 1 215 1 326 2 63 2 260 2 205 1 130 2 86 2 
67 1 342 1 200 1 358 1 89 2 121 1 59 1 61 1 319 1 224 1 105 1 245 1 164 2 22 2 77 1 326 1 63 1 260 1 130 1 364 1 284 1 86 1 274 2 40 2 
233 1 249 1 116 1 
233 1 160 1 249 1 
7 1 160 1 249 3 116 2 99 1 217 1 
160 1 249 2 116 1 99 1 356 1 217 1 
160 1 249 2 116 1 99 1 217 2 
0 1 151 1 278 1 1 2 279 1 315 1 188 1 89 1 281 4 72 3 111 1 346 1 112 1 189 1 319 5 161 1 115 1 192 2 351 2 164 1 22 1 21 1 94 3 195 1 353 1 171 1 241 1 57 1 172 1 286 1 121 5 222 1 265 1 224 1 148 2 131 2 294 1 274 1 40 1 340 1 
0 1 151 1 278 1 1 2 279 1 315 1 281 4 89 1 72 3 111 1 346 1 112 1 189 1 319 5 137 1 161 1 115 1 192 2 351 2 164 1 21 1 22 1 94 3 10 1 195 1 353 1 171 1 241 1 285 2 57 1 172 1 286 3 121 5 222 1 35 2 265 1 224 1 148 2 294 1 40 1 274 1 
0 1 151 1 278 1 279 1 1 2 315 1 188 1 89 1 281 2 111 1 72 2 112 1 346 1 319 3 115 1 192 2 164 1 351 1 22 1 21 1 94 1 195 1 262 1 241 1 57 1 172 1 121 3 222 1 224 1 148 1 131 1 274 1 40 1 340 1 294 1 
279 1 1 2 188 1 281 1 72 2 111 1 112 1 346 1 319 2 115 1 192 1 351 1 94 1 195 1 262 1 241 1 332 1 172 1 121 2 224 1 148 1 131 1 340 1 294 1 
323 1 228 1 280 1 
228 1 273 1 
221 1 
80 1 228 1 
91 1 80 1 228 3 297 1 280 2 12 1 
80 1 228 1 12 1 
259 1 228 1 
171 1 277 1 146 1 306 2 82 3 37 3 361 1 290 1 244 1 175 1 193 1 309 1 302 7 98 2 207 4 294 1 15 1 
171 1 277 1 146 1 306 2 82 3 37 3 361 1 290 1 244 1 175 1 193 1 309 1 302 7 98 2 207 4 294 1 15 1 
171 1 133 1 277 1 146 1 306 2 82 3 37 3 361 1 290 1 244 1 175 1 193 1 309 1 302 7 98 2 207 4 294 1 15 1 
361 2 277 1 165 1 302 1 306 1 146 1 207 1 
248 2 252 2 299 2 234 4 193 1 302 9 98 3 170 1 171 1 141 1 199 1 219 2 306 2 146 1 82 4 37 4 361 1 244 1 290 1 175 1 309 1 207 5 294 1 15 1 
341 1 109 2 153 1 345 1 2 1 249 2 16 1 158 1 320 1 159 1 233 1 160 1 7 1 258 1 90 1 325 1 93 1 23 1 116 1 24 1 118 1 138 1 142 1 143 1 144 1 34 1 103 1 203 1 307 1 65 2 
341 1 109 3 153 1 345 1 2 1 249 2 16 1 158 1 320 1 159 1 233 1 7 1 160 1 258 1 90 1 325 1 300 1 93 1 116 1 24 1 118 1 143 2 30 1 144 1 34 1 103 1 203 1 307 1 107 1 65 3 
341 1 109 2 143 2 153 1 30 1 144 1 345 1 249 2 16 1 103 1 34 1 203 1 158 1 320 1 159 1 233 1 7 1 160 1 90 1 325 1 107 1 93 1 116 1 118 1 65 2 
109 1 134 1 343 1 70 1 2 1 228 1 16 2 158 2 320 1 159 2 256 1 300 1 93 1 24 1 118 1 242 1 80 1 120 1 103 1 34 1 223 1 203 2 65 1 
109 1 153 1 2 1 249 2 16 1 158 1 320 1 159 1 233 1 160 1 7 1 258 1 90 1 93 1 23 1 116 1 24 1 118 1 138 1 30 1 144 1 34 1 103 1 203 1 307 1 65 1 
329 1 
0 1 134 1 42 1 343 2 228 1 279 1 1 2 187 1 229 1 210 1 89 1 111 1 282 1 320 2 319 2 255 1 256 1 161 1 164 1 93 2 94 2 195 1 118 1 353 1 167 1 53 1 97 1 168 1 241 1 333 1 80 1 337 1 286 2 103 1 34 2 121 2 124 1 176 1 178 1 206 1 274 1 
0 1 286 2 229 1 121 2 89 1 210 1 282 1 319 2 161 1 73 1 124 1 176 1 164 1 178 1 78 1 206 1 167 1 53 1 97 1 274 1 
0 1 229 1 121 1 89 1 210 1 282 1 319 1 46 1 124 1 176 1 164 1 178 1 180 1 206 1 167 1 53 1 97 1 274 1 
0 1 229 1 210 1 89 1 282 1 319 2 46 1 73 1 161 1 164 1 352 1 78 1 97 1 53 1 167 1 286 2 121 2 124 1 176 1 178 1 206 1 180 1 274 1 
0 2 151 1 278 1 315 1 229 1 89 2 210 1 282 1 319 2 161 1 73 1 192 1 164 2 22 1 21 1 352 1 78 1 97 1 53 1 167 1 57 1 286 2 121 2 222 1 289 1 124 1 176 1 178 1 206 1 40 1 274 2 
0 1 1 1 229 1 89 1 210 1 111 1 282 1 319 1 255 1 164 1 94 1 195 1 353 1 97 1 53 1 167 1 241 1 337 1 121 1 124 1 176 1 178 1 206 1 274 1 
0 1 1 1 229 1 210 1 89 1 111 1 282 1 319 1 255 1 164 1 94 1 195 1 353 1 97 1 53 1 167 1 216 1 241 1 102 1 305 1 337 1 121 1 124 1 176 1 178 1 206 1 274 1 
0 1 1 1 229 1 210 1 89 1 111 1 282 1 319 1 255 1 164 1 94 1 195 1 353 1 97 1 53 1 167 1 216 1 241 1 102 1 305 1 337 1 121 1 124 1 176 1 178 1 206 1 274 1 
0 1 1 1 229 1 210 1 89 1 111 1 282 1 319 1 255 1 164 1 94 1 195 1 283 1 353 1 97 1 53 1 167 1 216 1 241 1 121 1 202 1 124 1 176 1 271 1 178 1 206 1 274 1 
0 1 314 1 1 1 229 1 210 1 89 1 111 1 282 1 319 1 255 1 46 1 73 1 164 1 352 1 94 1 195 1 353 1 97 1 53 1 167 1 216 1 241 1 102 1 305 1 337 1 286 1 121 1 124 1 176 1 178 1 206 1 180 1 274 1 
0 1 314 1 1 1 229 1 210 1 89 1 111 1 282 1 319 1 255 1 46 1 73 1 164 1 352 1 94 1 195 1 353 1 97 1 53 1 167 1 216 1 241 1 102 1 305 1 337 1 286 1 121 1 124 1 176 1 178 1 206 1 180 1 274 1 
0 1 1 1 229 1 89 1 210 1 111 1 282 1 319 1 255 1 164 1 94 1 195 1 353 1 97 1 53 1 167 1 241 1 121 1 202 1 124 1 176 1 178 1 206 1 274 1 
248 1 43 1 298 1 252 1 299 1 323 1 234 2 51 1 302 6 98 2 196 1 171 1 219 1 358 2 306 1 82 2 37 3 244 1 290 1 38 1 175 1 309 1 362 1 207 3 15 1 294 1 
152 1 248 1 219 1 263 1 298 1 252 1 346 1 83 1 37 1 299 1 38 4 234 2 191 1 115 1 8 1 362 4 302 4 207 3 208 1 196 1 294 1 
275 1 248 1 343 1 43 1 344 1 228 1 298 1 89 1 252 1 4 1 320 1 299 1 190 1 234 2 164 2 22 1 93 1 302 2 118 1 55 1 196 1 261 1 56 1 80 1 219 1 334 1 358 1 103 1 34 1 12 1 83 1 37 1 104 1 13 1 129 1 207 1 274 2 40 1 
248 2 43 2 343 1 228 1 186 1 298 2 89 1 252 2 346 1 211 1 4 1 299 2 320 1 18 1 190 1 19 1 234 4 115 1 164 2 22 1 93 1 302 5 118 1 196 2 261 1 26 1 56 1 80 1 219 2 103 1 34 1 12 1 83 1 37 2 38 2 39 1 362 2 13 1 129 1 207 3 294 1 274 2 40 1 
134 1 248 2 343 2 228 3 298 2 44 1 89 1 252 2 45 1 320 8 299 2 190 1 256 1 212 1 234 4 51 1 164 1 22 1 93 8 302 2 118 2 237 1 261 1 196 2 142 1 30 1 219 2 80 2 103 2 34 7 122 1 104 1 37 1 291 1 311 1 62 2 207 1 274 1 40 1 
248 1 43 1 315 1 298 1 252 1 89 1 346 1 299 1 234 2 115 1 164 1 22 1 302 3 98 1 196 1 171 1 219 1 82 1 83 1 265 1 37 2 38 1 310 1 362 1 207 1 150 1 40 1 274 1 294 1 
248 1 43 1 219 1 298 1 252 1 346 1 299 1 38 1 234 2 362 1 51 1 302 2 207 2 196 1 140 1 294 1 
171 1 248 1 43 1 219 1 298 1 252 1 82 1 265 1 37 2 299 1 38 1 234 2 362 1 51 1 302 2 98 1 169 1 196 1 
248 1 43 1 219 1 298 1 252 1 346 1 299 1 38 1 234 2 115 1 362 1 51 1 302 2 207 2 196 1 294 1 
248 1 43 1 219 1 298 1 252 1 346 1 299 1 38 1 234 2 362 1 311 1 302 2 207 2 196 1 140 1 294 1 
171 1 248 1 43 1 219 1 298 1 252 1 82 1 265 1 37 2 299 1 38 1 234 2 362 1 311 1 302 2 98 1 169 1 196 1 
248 1 43 1 219 1 298 1 252 1 346 1 299 1 38 1 234 2 115 1 362 1 311 1 302 2 207 2 196 1 294 1 
248 1 43 1 219 1 298 1 252 1 346 1 299 1 38 1 234 2 115 1 362 1 302 2 207 2 196 1 294 1 
248 1 343 1 228 1 186 1 298 1 252 1 4 1 320 1 299 1 190 1 234 2 164 1 93 1 302 2 118 1 196 1 56 1 80 1 219 1 358 1 103 1 34 1 104 1 12 1 37 1 13 1 207 1 274 1 
248 1 343 1 228 1 298 1 252 1 320 1 299 1 190 1 234 2 164 1 93 1 302 2 118 1 196 1 56 1 80 1 219 1 145 1 358 1 103 1 34 1 104 1 12 1 37 1 108 1 64 1 207 1 274 1 
248 1 43 1 219 1 298 1 252 1 83 1 346 1 299 1 38 1 234 2 115 1 362 1 302 2 207 2 196 1 294 1 
248 1 43 1 228 1 186 1 298 1 252 1 346 1 4 1 320 1 299 1 234 2 115 1 164 1 93 1 302 2 118 1 196 1 26 1 56 1 142 1 80 1 219 1 103 1 34 1 12 1 38 1 362 1 13 1 207 2 294 1 274 1 
248 1 135 1 315 1 298 1 252 1 89 1 346 1 299 1 234 2 115 1 164 1 22 1 302 3 196 1 171 1 219 1 37 1 83 1 265 1 38 1 362 1 207 2 150 1 40 1 274 1 294 1 
28 1 152 1 248 2 219 2 263 1 252 2 232 1 346 1 37 2 299 2 162 1 234 4 115 1 147 1 363 1 177 1 302 6 207 4 208 1 294 1 170 1 330 1 
295 1 248 2 313 1 3 1 252 2 346 3 299 2 20 1 162 3 234 4 115 3 350 1 302 21 98 1 330 2 170 1 171 1 141 1 28 1 29 1 219 2 263 2 82 1 265 1 288 1 37 9 147 2 363 2 177 1 339 1 207 12 208 2 294 3 
28 1 152 1 248 2 219 2 263 1 252 2 232 1 346 1 37 2 299 2 162 1 234 4 115 1 147 1 363 1 177 1 302 6 207 4 208 1 294 1 170 1 330 1 
28 1 152 1 248 2 219 2 263 1 252 2 232 1 346 1 37 2 299 2 162 1 234 4 115 1 147 1 363 1 177 1 302 6 207 4 208 1 294 1 170 1 330 1 
152 1 248 1 252 1 346 1 299 1 234 2 162 1 115 1 302 11 98 1 330 1 170 1 171 1 28 1 219 1 263 1 306 1 82 1 37 4 290 1 244 1 175 1 147 1 309 1 363 1 177 1 207 7 208 1 15 1 294 2 
209 1 247 1 63 1 326 1 260 1 231 1 130 1 59 1 86 1 321 1 
77 1 284 1 
68 1 85 1 316 1 63 1 326 1 260 1 130 1 59 1 86 1 
209 1 67 2 247 1 32 1 231 1 121 1 59 1 17 1 173 1 61 1 319 1 192 1 326 1 63 1 260 1 205 1 130 1 86 1 
209 1 67 2 247 1 32 1 231 1 121 1 59 1 17 1 173 1 61 1 319 1 192 1 326 1 63 1 260 1 205 1 130 1 86 1 
209 1 67 2 247 1 32 1 231 1 121 1 59 1 17 1 173 1 61 1 319 1 192 1 326 1 63 1 260 1 205 1 130 1 86 1 
132 1 81 1 117 1 
132 1 81 1 117 1 
128 1 9 1 
128 1 9 1 81 1 
105 1 245 1 
183 1 63 1 326 1 260 1 121 1 281 1 130 1 59 1 86 1 319 1 
132 1 117 1 
128 1 9 1 81 1 
41 1 248 1 296 1 228 1 298 1 44 1 89 2 252 1 254 1 320 2 299 1 190 1 212 1 234 2 49 1 164 2 93 2 302 2 118 1 196 1 80 1 220 1 219 1 103 1 34 2 83 1 104 1 37 1 62 2 207 1 274 2 
142 1 30 1 144 1 249 2 250 1 103 1 34 2 320 2 159 1 233 1 7 1 160 1 257 1 106 1 258 1 90 1 93 2 116 1 118 1 
30 1 144 1 249 2 250 1 34 1 103 1 318 1 320 1 159 1 233 1 7 1 160 1 258 1 90 1 93 1 116 1 118 1 
134 1 80 1 343 1 70 1 228 1 103 1 34 1 320 1 159 1 256 1 106 1 93 1 118 1 139 1 
30 1 144 1 249 2 250 1 103 1 34 1 320 1 159 1 233 1 7 1 160 1 257 1 106 1 258 1 90 1 93 1 116 1 118 1 
71 1 
6 1 323 1 192 1 57 1 1 1 94 1 201 1 
1 1 111 1 72 1 319 1 161 1 192 2 94 1 195 1 353 1 355 1 100 1 241 1 57 1 172 1 337 1 286 1 121 1 
87 1 343 1 297 1 228 4 279 1 280 1 156 1 111 2 319 2 320 1 161 1 75 1 93 1 94 1 195 2 353 2 118 1 241 2 80 1 304 1 286 2 34 1 103 2 121 2 60 1 12 1 338 1 312 1 181 1 273 2 
295 1 279 1 227 1 1 5 3 1 155 1 72 6 111 2 346 2 319 1 161 1 115 2 192 5 351 5 94 8 195 2 353 2 171 2 241 2 29 1 57 2 333 1 172 3 335 2 263 1 286 1 121 1 288 1 265 2 147 1 292 1 148 5 339 1 208 1 294 2 
0 1 151 1 278 1 1 2 315 1 89 1 111 1 319 1 164 1 21 1 22 1 94 2 195 1 353 1 171 1 241 1 101 1 335 2 305 1 121 1 222 1 244 1 290 1 292 1 274 1 15 1 294 2 40 1 
241 1 57 1 1 1 201 1 111 1 6 1 192 1 94 1 195 1 353 1 
172 1 1 2 72 2 346 1 115 1 192 1 351 1 148 1 294 1 
161 1 192 1 57 1 286 1 121 1 319 1 
134 1 42 1 343 2 228 1 279 2 1 2 187 1 111 2 320 4 319 3 256 1 161 2 93 4 94 2 195 2 118 1 353 1 328 2 262 1 238 1 241 2 80 1 333 2 286 4 103 1 34 4 121 3 264 1 269 1 
248 1 343 1 228 1 315 2 186 1 298 1 252 1 89 2 136 1 4 1 190 1 299 1 320 1 234 2 164 3 22 2 21 1 93 1 302 1 118 1 196 1 56 1 219 1 80 1 358 1 34 1 103 1 37 1 12 1 13 1 274 3 40 2 
241 1 57 2 172 2 333 1 1 2 279 1 306 1 72 4 111 1 192 4 351 2 94 1 195 1 148 2 353 1 
260 1 239 1 86 1 
260 1 239 1 86 1 
260 1 239 1 86 1 
105 1 260 1 231 1 66 1 86 1 
260 1 86 1 27 1 
260 1 86 1 27 1 
260 1 86 1 27 1 
260 1 86 1 
63 1 59 1 
171 1 141 1 248 2 219 2 306 1 252 2 82 3 37 4 299 2 290 1 244 1 234 4 175 1 193 1 309 1 302 8 98 2 207 4 294 1 15 1 
171 1 306 1 82 2 37 3 323 1 244 1 290 1 175 1 309 1 302 6 98 2 207 3 15 1 294 1 
248 1 219 1 252 1 346 1 299 1 234 2 115 1 52 1 302 2 207 2 294 1 
152 1 115 1 147 1 263 1 302 4 207 3 346 1 208 1 37 1 294 1 
152 1 191 1 115 1 263 1 302 4 207 3 346 1 208 1 37 1 294 1 
263 1 302 1 37 1 
302 1 207 1 208 1 
171 1 82 2 211 1 37 3 346 1 265 1 115 1 193 1 302 6 98 1 207 3 294 1 
295 1 248 2 3 1 252 2 346 2 299 2 234 4 115 2 193 1 302 11 98 1 170 1 171 1 141 1 29 1 219 2 263 1 82 2 265 1 37 5 288 1 147 1 339 1 207 6 208 1 294 2 
171 1 82 2 37 3 290 1 244 1 193 1 302 6 98 1 207 3 294 1 15 1 
141 1 248 1 219 1 252 1 157 1 82 2 37 2 299 1 244 1 175 1 234 2 193 1 309 1 302 3 98 1 207 1 15 1 
171 2 248 1 219 1 101 1 252 1 82 5 37 5 299 1 244 2 290 1 234 2 193 2 302 10 98 3 207 5 170 1 15 2 294 2 
248 1 219 1 252 1 346 1 299 1 234 2 302 2 207 2 170 1 294 1 
248 1 219 1 252 1 346 1 299 1 234 2 115 1 302 2 207 2 170 1 294 1 
141 1 248 3 219 3 252 3 157 1 82 2 232 1 37 2 299 3 244 1 234 6 193 1 302 3 98 1 207 1 170 1 15 1 
152 1 246 1 248 4 317 1 252 4 232 1 346 3 299 4 234 8 115 3 193 2 52 1 302 24 98 2 170 1 357 1 141 1 171 3 219 4 263 3 306 1 82 4 37 11 265 2 290 1 244 1 175 1 147 1 309 1 207 13 208 3 15 1 294 4 
295 1 248 1 252 1 299 1 234 2 302 8 98 2 170 1 171 1 219 1 263 1 306 1 82 2 37 4 244 1 290 1 175 1 147 1 309 1 207 4 208 1 294 1 15 1 
152 1 295 1 248 2 219 2 263 1 252 2 346 1 37 1 299 2 234 4 115 1 147 1 52 1 302 4 207 3 208 1 294 1 170 1 
295 1 248 3 3 1 252 3 346 2 299 3 234 6 115 2 193 1 52 1 302 17 98 3 170 1 171 2 141 1 29 1 219 3 263 1 306 1 82 4 265 1 37 8 288 1 290 1 244 1 175 1 147 1 309 1 339 1 207 9 208 1 15 1 294 3 
295 1 248 3 3 1 252 3 346 2 299 3 234 6 115 2 193 3 52 1 302 24 98 4 170 1 171 4 141 1 29 1 101 1 219 3 263 1 306 1 82 7 37 11 288 1 265 1 290 2 244 2 175 1 147 1 309 1 339 1 207 13 208 1 15 2 294 5 
295 1 248 1 252 1 299 1 234 2 302 8 98 2 170 1 171 1 219 1 263 1 306 1 82 2 37 4 244 1 290 1 175 1 147 1 309 1 207 4 208 1 294 1 15 1 
295 1 248 2 3 1 252 2 346 2 299 2 234 4 115 2 193 1 302 11 98 1 170 1 171 1 141 1 29 1 219 2 263 1 82 2 265 1 37 5 288 1 147 1 339 1 207 6 208 1 294 2 
295 1 248 3 3 1 252 3 346 2 299 3 234 6 115 2 52 1 302 11 98 1 170 1 171 1 141 1 29 1 219 3 263 1 82 1 265 1 37 5 288 1 147 1 339 1 207 6 208 1 294 2 
295 1 248 4 3 1 252 4 232 1 346 3 299 4 234 8 115 3 193 3 302 14 98 2 170 1 171 1 141 2 29 1 219 4 263 1 82 5 265 1 37 5 288 1 147 1 339 1 207 9 208 1 294 3 
171 1 82 6 37 4 244 3 290 1 175 2 309 1 193 3 302 7 98 3 207 3 15 3 294 1 
295 1 248 3 3 1 252 3 232 1 346 2 299 3 234 6 115 2 302 11 98 1 170 1 171 1 141 1 29 1 219 3 263 1 82 1 265 1 37 5 288 1 147 1 339 1 207 6 208 1 294 2 
92 1 164 1 358 1 89 1 206 1 251 1 274 1 
185 1 88 1 358 1 251 1 89 1 253 1 92 1 164 1 272 1 206 1 354 1 274 1 
256 1 323 1 134 1 80 1 343 1 228 1 93 1 103 1 34 1 118 1 320 1 
56 1 80 1 343 1 228 1 358 1 103 1 34 1 89 1 12 1 4 1 320 1 164 2 22 1 93 1 118 1 261 1 40 1 274 2 
0 1 182 1 228 3 89 2 4 1 320 1 259 1 164 2 22 1 93 1 118 1 328 1 53 1 261 1 56 1 80 2 358 1 34 1 103 1 12 2 124 1 274 2 40 2 
0 1 182 1 228 3 89 2 320 2 259 1 164 2 213 1 22 1 93 2 118 1 328 1 53 1 261 1 56 1 80 2 358 1 34 2 103 1 12 2 124 1 108 1 274 2 40 2 
182 1 240 1 57 1 343 1 80 1 228 4 286 1 103 1 34 3 121 2 280 1 12 1 319 2 320 3 192 1 259 1 213 1 75 1 93 3 179 1 118 1 328 1 273 1 
182 1 57 1 343 1 80 1 228 4 286 1 103 1 34 3 121 2 280 1 12 1 319 2 320 3 192 1 259 1 213 1 75 1 93 3 118 1 328 1 181 1 273 1 
93 1 103 1 34 1 118 1 45 1 320 1 
343 2 228 3 297 1 45 1 113 1 320 7 212 1 50 1 93 7 118 2 237 1 142 1 80 2 30 1 103 3 34 6 122 1 12 1 174 1 291 1 62 1 
41 1 248 2 43 1 228 1 186 1 298 2 89 1 252 2 4 1 299 2 320 1 234 4 19 1 164 2 22 1 93 1 302 6 118 1 98 2 196 2 261 1 26 1 171 1 56 1 142 1 80 1 219 2 306 1 358 2 103 1 34 1 82 2 37 3 12 1 83 1 38 1 290 1 244 1 175 1 309 1 362 1 13 1 207 3 294 1 15 1 274 2 40 1 
343 1 1 1 228 2 281 1 280 1 111 2 319 3 320 1 6 1 161 1 192 1 93 1 75 1 94 1 195 2 353 2 238 1 241 2 57 1 304 1 286 2 201 1 34 1 121 3 60 1 312 1 181 1 273 1 
142 1 80 1 297 1 228 2 34 2 103 2 280 1 156 1 45 1 12 1 320 2 93 2 118 1 
142 1 134 1 343 1 80 1 228 1 103 1 34 4 5 1 320 4 256 1 213 1 93 4 118 1 
80 1 228 1 34 2 103 2 12 1 113 1 360 1 320 2 174 1 114 1 93 2 95 1 118 1 328 1 
233 1 160 1 343 1 144 1 93 1 249 1 103 1 34 1 118 1 320 1 
142 1 30 1 80 1 296 1 228 1 34 2 103 1 320 2 212 1 93 2 118 1 
134 1 142 1 343 1 80 2 228 3 34 4 103 2 5 1 320 5 256 1 212 1 291 1 93 5 118 2 328 1 237 1 
134 1 142 1 343 1 80 2 228 3 34 4 103 2 5 1 320 5 256 1 212 1 324 1 291 1 93 5 118 2 328 1 
56 1 80 1 343 1 228 1 358 1 103 1 34 1 89 1 12 1 320 1 164 2 22 1 93 1 108 1 118 1 261 1 40 1 274 2 
80 1 297 1 228 1 34 1 103 2 12 1 113 1 320 1 174 1 50 1 93 1 118 1 328 1 
235 1 358 1 359 1 14 1 197 1 
0 2 151 1 278 1 315 1 89 1 210 1 281 1 319 1 349 1 235 1 192 1 164 1 22 1 21 1 53 1 197 1 331 1 198 1 57 1 121 1 359 1 222 1 36 1 124 1 14 1 274 1 40 1 
49 1 235 1 164 1 220 1 89 1 359 1 254 1 274 1 197 1 
331 1 349 1 359 1 
341 1 323 1 325 1 345 1 
341 1 109 1 325 1 345 1 2 1 24 1 65 1 
109 1 16 1 203 1 
341 1 109 3 2 1 154 2 345 1 48 1 325 1 301 1 24 1 54 1 138 1 65 3 
341 1 109 2 325 1 143 1 31 1 345 1 2 1 24 1 65 2 
109 1 110 1 2 1 249 1 233 1 74 1 325 1 24 1 116 1 138 1 65 1 
109 1 325 1 345 1 2 1 24 1 65 1 138 1 
341 1 109 1 345 2 2 1 24 1 65 1 138 1 
109 2 58 1 345 1 2 2 243 1 325 1 24 2 138 1 65 2 25 1 
341 1 109 3 79 1 143 2 345 1 2 1 322 1 74 1 325 2 24 1 138 1 65 3 303 1 
341 1 109 2 143 1 345 1 2 1 249 2 160 1 7 1 233 1 325 1 76 1 24 1 116 1 138 1 65 2 
341 1 109 4 143 2 31 1 345 1 2 2 47 1 74 1 325 2 24 2 138 1 65 4 303 1 
341 1 109 1 325 1 345 1 2 1 24 1 65 1 138 1 
341 2 109 4 143 2 154 1 345 2 2 1 48 1 74 1 325 3 301 1 166 1 24 1 65 4 303 1 
341 1 109 2 143 1 184 1 345 1 2 1 123 1 268 1 325 1 24 1 138 1 65 2 
341 1 109 3 276 1 2 1 154 2 345 1 48 2 325 1 301 1 24 1 138 1 65 3 
348 2 270 1 325 2 214 1 
267 1 109 1 2 1 24 1 65 1 138 1 
341 1 79 1 109 2 325 1 143 1 345 1 2 1 24 1 65 2 138 1 
194 1 
341 1 109 1 325 1 345 1 2 1 24 1 65 1 138 1 
341 1 109 3 79 1 143 1 2 1 154 1 345 1 325 1 24 1 138 1 65 3 
74 1 325 1 166 1 303 1 
325 1 345 1 

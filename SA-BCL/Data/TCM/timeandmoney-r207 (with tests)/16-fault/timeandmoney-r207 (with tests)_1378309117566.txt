#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (94,313) 127 (0,26) (0,26) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (94,313) 127 (0,26) (0,26) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (94,313) 127 (0,26) (0,26) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (94,313) 127 (0,26) (0,26) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (107,137) (45,157) (45,157) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 166 328 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 55 85 242 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (15,265) 236 48 339 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 129 25 323 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 129 25 323 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 129 25 323 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 129 25 323 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 129 25 323 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (107,137) (107,137) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 244 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (107,137) (45,157) (45,157) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (107,137) (45,157) (45,157) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (107,137) (45,157) (45,157) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 166 328 6 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 55 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 55 85 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 55 138 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 59 1 187 1 144 1 348 1 270 1 94 1 335 1 26 1 174 1 127 1 
0 1 59 1 187 1 144 1 348 1 270 1 94 1 335 1 26 1 174 1 127 1 
0 1 59 1 187 1 144 1 348 1 270 1 94 1 335 1 26 1 174 1 127 1 
0 1 59 1 187 1 144 1 348 1 270 1 94 1 335 1 26 1 174 1 127 1 
140 1 152 1 131 1 187 4 337 3 348 1 347 1 311 1 270 1 312 2 314 1 105 1 252 1 180 3 59 1 144 4 42 1 212 2 
140 1 337 1 187 2 348 1 270 1 311 1 260 1 327 1 314 1 252 1 59 1 144 2 134 1 335 1 174 1 98 1 
140 1 131 1 187 3 337 2 348 1 270 2 312 1 313 1 314 1 180 1 59 2 144 3 335 1 
140 1 187 9 348 1 347 1 144 9 335 1 267 1 95 1 212 2 152 1 131 3 337 5 270 2 38 1 311 1 312 4 313 1 314 1 180 7 252 1 105 1 59 2 42 1 46 1 
140 1 187 9 348 1 347 1 144 9 335 1 267 1 95 1 212 2 152 1 131 3 337 5 270 2 38 1 311 1 312 4 313 1 314 1 180 7 252 1 105 1 59 2 42 1 46 1 
333 1 224 1 70 1 
49 1 333 1 121 2 
53 1 161 1 264 2 297 2 80 2 73 2 361 2 97 2 
161 1 297 3 231 1 189 1 207 1 8 1 65 1 28 2 264 2 9 1 284 1 67 1 332 1 93 1 69 1 149 2 73 3 97 2 12 1 77 1 52 1 130 2 53 1 245 2 54 1 80 2 13 2 84 1 57 1 355 1 197 1 136 1 223 1 225 1 227 1 361 2 183 1 
53 1 264 1 297 1 80 1 37 1 73 1 361 1 97 1 
297 1 298 1 233 1 164 1 249 1 329 1 143 1 333 1 224 1 226 1 124 1 73 1 97 1 181 1 
297 1 298 2 80 1 233 1 249 1 264 1 143 1 333 1 224 1 226 1 124 1 361 1 73 1 181 2 97 1 
86 1 298 1 142 1 181 1 262 1 
86 1 214 1 298 2 333 1 11 1 224 1 181 2 262 1 
86 1 298 1 181 1 
194 1 53 1 298 1 297 1 80 1 37 1 262 1 264 1 361 1 73 1 181 1 97 1 
333 1 
86 1 298 2 333 1 11 1 224 1 319 1 181 2 262 1 
110 1 113 1 298 5 82 1 5 1 133 2 279 1 262 2 86 2 20 1 315 2 333 1 11 1 224 1 173 2 125 1 320 1 181 5 228 1 
161 1 70 1 
161 2 297 2 80 1 264 1 305 1 201 1 73 2 361 1 97 2 
265 1 236 1 288 1 
161 1 297 1 54 1 13 1 57 1 189 1 197 1 28 1 65 1 302 1 149 1 73 1 227 1 12 1 183 1 77 1 
161 1 264 3 297 3 36 1 80 3 361 1 73 3 97 3 
264 1 297 1 80 1 96 1 73 1 97 1 
264 1 297 1 305 1 80 1 201 1 124 1 73 1 361 1 97 1 
161 1 297 4 298 1 233 1 189 1 207 1 65 1 28 1 264 3 143 1 284 1 67 1 332 1 93 1 149 1 124 1 73 4 97 3 12 1 77 1 130 2 53 1 245 1 54 1 36 1 81 1 80 3 101 1 13 1 84 1 57 1 355 1 249 1 197 1 338 1 136 1 201 1 223 1 225 1 226 1 227 1 361 2 181 1 183 1 
161 1 264 1 297 2 36 1 80 1 164 1 73 2 256 1 97 2 
298 1 297 3 36 2 101 1 80 3 233 1 249 1 338 1 264 3 143 1 201 1 333 1 255 1 124 1 226 1 361 1 73 3 181 1 97 3 
264 1 297 1 265 1 80 1 201 1 73 1 361 1 97 1 
161 1 297 1 54 1 13 1 57 1 189 1 197 1 28 1 65 1 149 1 73 1 227 1 12 1 183 1 77 1 
161 1 297 1 54 1 13 1 57 1 197 1 28 1 65 1 292 1 149 1 73 1 227 1 183 1 213 1 77 1 
130 2 245 2 247 1 114 1 236 1 355 1 15 1 207 1 290 1 265 1 284 1 332 1 136 1 223 2 148 1 225 1 
264 1 297 1 233 1 80 1 253 1 124 1 73 1 97 1 
297 2 54 1 36 1 101 1 80 1 13 1 57 1 189 1 197 1 65 1 28 1 264 1 265 1 149 1 227 1 73 2 97 1 183 1 12 1 77 1 
161 1 297 5 36 2 80 4 101 1 164 1 64 1 282 1 264 4 201 1 73 5 361 1 256 1 97 5 
264 1 297 1 80 1 96 1 73 1 97 1 
155 1 150 1 
155 1 150 1 
203 1 155 1 150 1 104 1 
203 1 155 1 150 1 104 1 
203 1 104 1 
155 1 363 1 150 1 
155 1 363 1 150 1 
146 1 203 1 318 1 155 2 150 2 104 1 
310 1 155 1 150 1 
155 1 363 1 150 1 
299 1 155 1 150 1 
299 1 155 1 150 1 
299 1 155 1 150 1 
112 2 298 2 153 2 16 1 250 2 191 2 157 1 266 2 135 1 333 1 181 2 45 1 107 1 206 1 
111 1 112 1 298 1 297 1 153 1 80 1 217 1 250 1 191 1 166 1 328 1 264 1 266 1 122 1 73 1 181 1 97 1 206 1 
252 1 311 1 42 1 
252 1 311 1 327 1 
252 3 215 1 42 2 360 1 34 1 327 1 
252 2 42 1 360 1 34 1 126 1 327 1 
252 2 42 1 34 1 360 2 327 1 
111 1 298 5 141 1 5 1 300 1 262 4 49 1 121 3 333 2 122 1 32 2 11 1 173 1 125 2 193 1 247 1 56 1 217 1 133 1 290 1 359 1 86 1 342 2 20 3 315 1 343 1 200 1 224 1 24 1 181 5 91 2 295 1 
298 9 235 1 163 1 141 3 5 1 142 5 300 1 262 7 66 1 210 5 49 3 121 9 333 5 32 6 11 1 173 2 125 6 192 1 247 3 217 4 358 1 133 2 290 3 359 2 86 6 20 8 315 2 200 2 202 1 224 1 24 3 181 9 228 1 91 6 295 3 
298 3 141 1 262 2 49 2 333 3 121 4 32 2 173 1 125 2 247 1 56 1 217 1 133 1 290 1 359 1 342 1 20 3 315 1 343 1 200 1 224 1 181 3 24 1 228 1 295 1 91 2 
298 4 235 1 163 1 141 2 262 3 49 3 333 4 121 7 32 4 173 1 125 4 247 2 56 1 217 2 358 1 133 1 290 2 359 1 342 2 20 5 315 1 343 1 200 1 224 1 181 4 24 2 91 4 228 1 295 2 
70 1 227 1 184 1 
199 1 227 1 
316 1 
227 1 65 1 
54 1 22 1 227 3 17 1 65 1 184 2 
54 1 227 1 65 1 
139 1 227 1 
185 1 245 7 247 1 234 1 177 1 141 1 117 1 357 3 8 4 274 1 223 3 43 1 285 1 309 2 268 2 182 1 365 1 
185 1 245 7 247 1 234 1 177 1 141 1 117 1 357 3 8 4 274 1 223 3 43 1 285 1 309 2 268 2 182 1 365 1 
185 1 245 7 247 1 234 1 177 1 141 1 117 1 357 3 8 4 274 1 306 1 223 3 43 1 285 1 309 2 268 2 182 1 365 1 
185 2 245 3 55 1 177 1 223 1 242 1 85 1 309 1 8 2 41 1 103 1 
185 1 130 4 230 1 245 9 247 1 234 1 177 1 141 1 355 2 357 4 207 2 8 5 274 1 169 1 87 1 284 2 223 4 43 1 285 1 225 2 309 2 268 3 182 1 365 1 
140 1 187 2 257 1 162 1 348 1 190 1 327 1 237 1 28 1 144 2 147 1 335 1 211 1 353 1 149 1 74 1 77 1 337 1 13 1 215 1 311 1 270 1 197 1 314 1 180 1 252 2 59 1 42 1 21 1 276 1 
140 1 187 3 257 1 162 1 190 1 327 1 237 1 28 1 144 3 147 1 335 1 353 1 149 1 74 1 77 1 287 1 337 1 215 1 13 1 176 1 311 1 270 1 197 1 273 1 314 1 180 2 252 2 59 1 42 1 276 1 
140 1 187 2 257 1 162 1 190 1 327 1 237 1 28 1 144 2 147 1 335 1 353 1 149 1 77 1 337 1 13 1 176 1 215 1 311 1 197 1 273 1 314 1 180 2 252 2 42 1 
160 1 287 1 187 1 13 1 270 1 57 1 156 1 271 1 190 2 28 1 237 2 59 1 144 1 335 2 204 1 353 2 149 1 
187 1 257 1 162 1 348 1 190 1 327 1 237 1 28 1 144 1 147 1 335 1 211 1 353 1 149 1 74 1 77 1 13 1 215 1 311 1 270 1 197 1 273 1 252 2 59 1 42 1 276 1 
251 1 
233 1 5 1 280 1 329 1 143 1 241 1 11 1 149 2 97 1 151 1 13 2 102 1 57 2 249 1 197 1 19 1 20 2 205 1 109 1 298 3 297 1 258 1 164 1 259 1 29 1 168 1 65 1 28 2 349 1 208 1 171 2 173 1 125 2 124 1 73 1 77 1 133 1 219 1 359 1 86 2 315 1 226 1 321 1 227 1 181 3 364 1 
298 3 297 1 233 1 258 1 2 1 164 1 249 1 349 1 329 1 86 2 171 2 143 1 11 1 124 1 226 1 319 1 73 1 181 3 97 1 151 1 109 1 364 1 
298 3 297 1 233 1 258 1 164 1 249 1 349 1 329 1 86 1 171 3 143 1 333 1 11 1 224 1 124 1 226 1 319 1 73 1 181 3 97 1 151 1 109 1 364 1 128 1 
297 1 298 3 258 1 233 1 164 1 2 1 329 1 349 1 171 3 143 1 351 1 333 1 11 1 124 1 73 1 97 1 151 1 128 1 249 1 86 2 224 1 226 1 319 1 181 3 364 1 109 1 
233 1 2 2 5 1 280 1 329 1 143 1 333 1 11 1 50 1 286 1 97 2 151 1 53 1 194 1 249 1 289 1 19 1 20 1 109 1 297 2 298 3 258 1 164 1 261 1 349 1 168 2 264 1 171 2 351 2 173 1 124 1 125 1 73 2 80 1 37 1 133 1 86 3 315 1 317 1 224 1 226 1 361 1 319 1 321 2 181 3 364 1 
298 2 297 1 258 1 233 1 164 1 5 1 280 1 29 1 168 1 329 1 349 1 171 2 143 1 173 1 125 1 124 1 73 1 97 1 151 1 249 1 133 1 19 1 20 1 315 1 226 1 321 1 181 2 364 1 109 1 
297 2 298 2 258 1 233 1 164 1 5 1 280 1 261 1 168 2 329 1 349 1 264 1 171 2 143 1 333 1 50 1 173 1 125 1 124 1 73 2 97 2 151 1 53 1 194 1 80 1 37 1 249 1 133 1 289 1 19 1 20 1 315 1 224 1 226 1 361 1 321 2 181 2 364 1 109 1 
297 2 298 2 258 1 233 1 164 1 5 1 280 1 261 1 168 2 329 1 349 1 264 1 171 2 143 1 333 1 50 1 173 1 125 1 124 1 73 2 97 2 151 1 53 1 194 1 80 1 37 1 249 1 133 1 289 1 19 1 20 1 315 1 224 1 226 1 361 1 321 2 181 2 364 1 109 1 
297 2 298 2 258 1 233 1 164 1 5 1 280 1 168 2 329 1 349 1 283 1 264 1 171 2 143 1 333 1 50 1 173 1 125 1 124 1 73 2 97 2 151 1 53 1 194 1 80 1 37 1 249 1 133 1 20 1 315 1 291 1 224 1 226 1 361 1 321 2 181 2 364 1 109 1 108 1 
233 1 2 1 5 1 280 1 329 1 143 1 333 1 50 1 97 2 151 1 53 1 194 1 249 1 289 1 19 1 20 1 109 1 298 2 297 2 258 1 164 1 261 1 349 1 168 2 264 1 171 3 351 1 173 1 124 1 125 1 73 2 128 1 80 1 37 1 133 1 86 1 315 1 317 1 224 1 226 1 361 1 321 2 181 2 364 1 
233 1 2 1 5 1 280 1 329 1 143 1 333 1 50 1 97 2 151 1 53 1 194 1 249 1 289 1 19 1 20 1 109 1 298 2 297 2 258 1 164 1 261 1 349 1 168 2 264 1 171 3 351 1 173 1 124 1 125 1 73 2 128 1 80 1 37 1 133 1 86 1 315 1 317 1 224 1 226 1 361 1 321 2 181 2 364 1 
298 2 297 1 258 1 233 1 164 1 5 1 280 1 29 1 168 1 329 1 349 1 283 1 171 2 143 1 173 1 125 1 124 1 73 1 97 1 151 1 249 1 133 1 20 1 315 1 226 1 321 1 181 2 364 1 109 1 
130 2 161 2 245 6 247 1 234 1 141 1 236 1 355 1 357 2 207 1 288 1 8 3 274 1 265 1 284 1 332 1 136 1 223 3 148 1 43 1 285 1 225 1 70 1 309 1 268 2 182 1 
130 2 245 2 236 3 355 1 48 1 207 1 288 2 8 1 339 1 18 1 41 1 103 1 265 3 284 1 332 1 136 1 223 1 225 1 
161 1 297 2 231 1 189 1 207 1 8 1 65 1 28 1 302 1 264 1 284 1 332 1 67 1 149 1 73 2 97 1 12 1 77 1 130 2 245 2 246 1 54 1 36 1 35 1 13 1 80 1 101 1 57 1 355 1 197 1 288 1 18 1 341 1 136 1 223 1 225 1 227 1 183 1 
141 1 189 1 236 2 8 3 331 1 284 2 332 2 93 1 149 1 97 1 12 1 245 5 54 1 13 1 101 1 57 1 197 1 288 1 18 1 24 1 295 1 63 1 297 2 207 2 28 1 65 1 264 1 265 2 67 1 73 2 268 1 77 1 130 4 36 1 80 1 354 1 83 1 355 2 357 1 40 1 136 2 223 2 225 2 227 1 183 1 
297 1 231 1 207 2 8 1 281 1 28 7 65 2 239 1 264 1 208 1 350 1 284 2 332 2 67 1 148 1 69 2 149 8 51 1 73 1 97 1 77 2 130 4 245 2 36 1 80 1 13 8 39 1 57 2 355 2 197 2 273 1 219 1 136 2 223 1 345 1 21 1 225 2 227 3 90 1 
297 1 141 1 236 1 207 1 8 1 264 1 265 1 284 1 332 1 73 1 97 1 268 1 243 1 130 2 245 3 247 1 80 1 355 1 357 1 288 1 18 1 290 1 201 1 136 1 223 2 225 1 361 1 24 1 295 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 265 1 284 1 332 1 136 1 148 1 334 1 225 1 295 1 
130 2 245 2 247 1 114 1 236 1 355 1 207 1 290 1 265 1 284 1 332 1 136 1 148 1 223 2 225 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 265 1 284 1 332 1 136 1 148 1 225 1 24 1 295 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 265 1 284 1 332 1 136 1 334 1 51 1 225 1 295 1 
130 2 245 2 247 1 114 1 236 1 355 1 207 1 290 1 265 1 284 1 332 1 136 1 223 2 51 1 225 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 265 1 284 1 332 1 136 1 51 1 225 1 24 1 295 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 265 1 284 1 332 1 136 1 225 1 24 1 295 1 
161 1 297 1 231 1 189 1 207 1 8 1 65 1 28 1 284 1 332 1 67 1 93 1 149 1 73 1 12 1 77 1 130 2 245 2 54 1 13 1 57 1 355 1 197 1 136 1 223 1 225 1 227 1 183 1 
161 1 297 1 231 1 207 1 8 1 27 1 65 1 28 1 284 1 332 1 67 1 149 1 73 1 77 1 213 1 130 2 245 2 54 1 13 1 57 1 355 1 197 1 292 1 136 1 223 1 225 1 227 1 183 1 
130 2 245 2 141 1 236 1 355 1 207 1 8 2 18 1 265 1 284 1 332 1 136 1 225 1 24 1 295 1 
297 1 141 1 236 1 189 1 207 1 8 2 28 1 65 1 265 1 284 1 332 1 93 1 149 1 73 1 12 1 77 1 130 2 245 2 54 1 13 1 83 1 355 1 197 1 136 1 21 1 225 1 227 1 24 1 295 1 183 1 
297 1 141 1 236 1 207 1 8 2 264 1 265 1 284 1 332 1 73 1 97 1 130 2 245 2 80 1 355 1 357 1 288 1 18 1 201 1 136 1 225 1 361 1 24 1 346 1 295 1 365 1 
129 1 130 2 169 1 25 1 284 1 355 1 356 1 225 1 207 1 323 1 
129 1 130 2 169 1 25 1 284 1 355 1 356 1 225 1 207 1 323 1 
129 1 130 2 169 1 25 1 284 1 355 1 356 1 225 1 207 1 323 1 
129 1 130 2 169 1 25 1 284 1 355 1 356 1 225 1 207 1 323 1 
129 1 130 2 169 1 25 1 284 1 355 1 356 1 225 1 207 1 323 1 
112 1 153 1 266 1 137 1 191 1 107 1 
166 1 
112 1 153 1 266 1 191 1 244 1 
112 1 298 1 153 1 16 1 250 2 191 1 157 1 266 1 135 1 333 1 181 1 45 1 107 1 206 1 
112 1 298 1 153 1 16 1 250 2 191 1 157 1 266 1 135 1 333 1 181 1 45 1 107 1 206 1 
112 1 298 1 153 1 16 1 250 2 191 1 157 1 266 1 135 1 333 1 181 1 45 1 107 1 206 1 
61 1 
61 1 
293 1 
293 1 
132 1 218 1 
111 1 112 1 298 1 153 1 217 1 6 1 16 1 250 1 191 1 166 1 328 1 262 1 266 1 135 1 122 1 181 1 
61 1 
293 1 
297 2 231 1 207 1 8 1 65 1 28 2 263 1 239 1 284 1 332 1 67 1 307 1 69 2 123 1 149 2 73 2 97 2 77 1 130 2 245 2 13 2 216 1 355 1 197 1 18 1 136 1 223 1 345 1 294 1 225 1 227 1 
257 1 215 1 13 2 311 1 197 1 327 1 273 1 165 1 28 2 252 2 42 1 147 1 149 2 353 1 21 1 276 1 72 1 77 1 324 1 
257 1 215 1 13 1 311 1 197 1 327 1 273 1 28 1 252 2 42 1 147 1 149 1 353 1 276 1 72 1 278 1 77 1 
13 1 57 1 353 1 149 1 156 1 165 1 179 1 28 1 
257 1 215 1 13 1 311 1 197 1 327 1 273 1 165 1 28 1 252 2 42 1 147 1 149 1 353 1 276 1 72 1 77 1 324 1 
120 1 
20 1 113 1 333 1 224 1 125 1 70 1 279 1 
298 1 5 1 49 1 31 1 121 1 333 2 11 1 173 1 125 1 79 1 133 1 19 1 86 1 20 1 315 1 224 1 181 1 
232 2 4 2 5 4 141 2 279 1 10 1 143 2 49 6 333 8 11 3 149 2 247 2 54 1 13 2 102 1 57 1 197 2 17 1 290 2 199 3 20 9 21 1 24 2 295 2 62 1 113 1 298 5 65 1 28 2 301 2 170 1 304 2 68 2 121 12 32 6 173 4 125 8 175 2 77 1 76 2 272 1 133 4 40 2 359 2 86 5 315 4 224 2 227 6 181 5 91 6 184 2 
298 1 47 1 5 2 141 4 326 1 304 3 49 5 121 10 333 7 11 1 32 8 173 2 125 8 175 1 336 1 247 4 248 1 55 1 102 1 196 1 133 2 290 4 359 1 103 2 41 2 221 1 86 1 20 13 315 2 224 2 23 1 181 1 24 4 91 8 138 1 295 4 229 1 
297 1 298 1 234 1 5 1 141 2 261 1 264 1 304 2 209 1 173 1 285 1 125 2 175 1 73 1 97 1 194 1 53 1 247 1 80 1 37 1 133 1 20 2 315 1 361 1 181 1 182 1 
113 1 5 1 133 1 279 1 20 1 315 1 333 1 173 1 224 1 125 1 
247 2 141 2 40 1 290 2 20 5 304 2 49 5 121 10 333 5 32 5 125 5 175 1 24 2 295 2 91 5 
86 1 298 1 333 1 11 1 224 1 181 1 
298 3 5 1 65 1 28 4 208 1 145 1 241 1 172 2 11 2 173 2 149 4 125 2 77 1 13 4 57 2 102 2 197 1 133 2 272 1 219 1 178 1 359 2 86 4 20 2 315 2 205 1 227 1 181 3 228 1 
161 1 297 3 189 1 207 1 28 1 65 1 264 2 284 1 67 1 332 1 93 1 149 1 73 3 97 2 12 1 77 1 130 2 53 1 245 1 54 1 13 1 80 2 84 1 57 1 355 1 197 1 136 1 223 1 225 1 361 2 227 1 183 1 
5 1 102 1 133 1 359 1 20 1 315 1 49 2 121 4 333 4 32 2 173 1 224 2 125 2 309 1 91 2 
112 1 191 1 118 1 
112 1 191 1 118 1 
195 1 112 1 60 1 132 1 191 1 
112 1 191 1 118 1 
112 1 191 1 75 1 
112 1 191 1 75 1 
112 1 191 1 75 1 
112 1 191 1 
155 1 150 1 
130 4 245 8 230 1 247 1 234 1 141 1 355 2 357 3 207 2 8 4 274 1 284 2 223 4 43 1 285 1 225 2 309 1 268 2 182 1 365 1 
274 1 245 6 247 1 234 1 223 3 141 1 43 1 285 1 357 2 70 1 309 1 8 3 268 2 182 1 
130 2 245 4 247 1 325 1 141 1 355 1 357 2 207 1 8 2 290 1 284 1 223 2 225 1 24 1 268 1 295 1 365 1 
245 2 55 1 223 1 8 1 41 1 103 1 
245 2 223 1 48 1 8 1 41 1 103 1 
245 1 223 1 103 1 
245 1 8 1 41 1 
130 2 245 6 247 1 325 1 141 1 355 1 207 1 357 3 8 3 40 1 290 1 284 1 223 3 225 1 24 1 295 1 268 2 365 1 
130 2 245 2 55 1 355 1 207 1 8 1 103 1 41 1 169 1 284 1 223 1 225 1 138 1 
245 6 247 1 234 1 141 1 357 2 8 3 223 3 285 1 268 1 182 1 365 1 
99 1 130 2 245 3 230 1 234 1 355 1 357 2 207 1 8 1 274 1 284 1 223 2 43 1 225 1 268 1 182 1 365 1 
130 2 245 10 247 2 234 2 141 2 355 1 207 1 357 5 8 5 169 1 209 1 284 1 223 5 225 1 285 1 268 3 182 2 365 2 
130 2 245 2 141 1 355 1 207 1 357 1 8 2 169 1 284 1 225 1 295 1 365 1 
130 2 245 4 247 1 141 1 355 1 357 2 207 1 8 2 290 1 169 1 284 1 223 2 225 1 24 1 268 1 295 1 365 1 
99 1 130 6 230 1 245 3 234 1 355 3 207 3 357 2 8 1 169 1 284 3 254 1 223 2 225 3 268 1 182 1 365 1 
130 6 245 2 55 1 325 1 355 3 207 3 85 1 8 1 41 1 103 1 169 1 284 3 254 1 223 1 225 3 
130 2 245 2 55 1 355 1 207 1 8 1 103 1 41 1 169 1 284 1 223 1 225 1 138 1 
130 4 245 2 55 1 325 1 355 2 207 2 8 1 41 1 103 1 169 1 284 2 223 1 225 2 138 1 
230 1 234 1 47 1 325 1 141 5 207 3 326 1 8 14 169 1 284 3 285 1 309 1 268 4 336 1 130 6 245 29 247 5 248 1 55 1 355 3 357 6 290 4 41 2 103 2 274 1 223 15 43 1 225 3 23 1 24 4 138 1 295 4 182 1 229 1 365 2 
130 2 245 2 55 1 355 1 207 1 8 1 103 1 41 1 169 1 284 1 223 1 225 1 138 1 
130 2 245 2 55 1 355 1 207 1 8 1 103 1 41 1 169 1 284 1 223 1 225 1 138 1 
47 1 141 4 207 1 326 1 8 11 169 1 284 1 268 2 336 1 130 2 245 22 247 4 248 1 55 1 355 1 357 4 290 4 41 2 103 2 223 11 225 1 23 1 24 4 138 1 295 4 229 1 365 2 
130 4 245 2 55 1 325 1 355 2 207 2 8 1 41 1 103 1 169 1 284 2 223 1 225 2 138 1 
130 4 245 2 55 1 355 2 207 2 8 1 41 1 103 1 169 1 284 2 254 1 223 1 225 2 138 1 
245 7 247 1 234 3 141 1 357 6 8 3 274 2 223 4 43 1 285 1 268 3 182 3 365 3 
130 4 245 2 55 1 355 2 207 2 8 1 41 1 103 1 169 1 284 2 254 1 223 1 225 2 138 1 
161 1 297 1 164 1 88 1 73 1 97 1 256 1 
161 1 297 1 164 1 238 1 222 1 88 1 71 1 89 1 73 1 256 1 97 1 322 1 
208 1 13 1 57 1 149 1 197 1 70 1 227 1 219 1 77 1 65 1 28 1 
161 1 297 2 54 1 36 1 80 1 13 1 57 1 197 1 65 1 28 1 264 1 149 1 227 1 73 2 97 1 183 1 12 1 77 1 
161 1 139 1 297 2 233 1 188 1 28 1 65 2 264 1 172 1 149 1 124 1 73 2 97 2 12 1 77 1 36 1 54 2 13 1 80 2 197 1 226 1 227 3 183 1 
161 1 139 1 297 2 233 1 188 1 28 2 65 2 264 1 172 1 149 2 124 1 73 2 97 2 77 1 213 1 36 1 54 2 13 2 80 2 197 1 58 1 226 1 227 3 183 1 
139 1 298 2 188 1 28 3 65 1 143 1 333 1 172 1 149 3 77 1 54 1 13 3 57 1 197 1 58 1 198 1 340 1 86 1 199 1 224 1 227 4 181 2 184 1 
139 1 298 2 54 1 13 3 188 1 57 1 197 1 58 1 65 1 28 3 301 1 199 1 86 1 143 1 333 1 172 1 224 1 149 3 227 4 181 2 77 1 184 1 
13 1 149 1 197 1 90 1 77 1 28 1 
54 1 13 7 154 1 39 1 57 2 197 3 17 1 273 1 281 1 28 6 65 2 92 1 350 1 344 1 69 1 345 1 21 1 149 7 227 3 90 1 77 2 
161 2 297 2 234 1 141 1 236 1 189 1 207 2 8 3 65 1 28 1 263 1 331 1 264 1 265 1 284 2 332 2 93 1 149 1 285 1 73 2 309 1 97 1 268 2 12 1 77 1 130 4 245 6 247 1 54 1 36 1 80 1 13 1 83 1 355 2 357 2 197 1 288 1 18 1 274 1 136 2 223 3 43 1 21 1 225 2 227 1 182 1 183 1 
113 1 298 3 232 1 5 2 4 1 279 1 28 1 262 1 301 1 143 1 333 1 11 1 173 2 149 1 125 1 76 1 13 1 57 1 133 2 272 1 199 1 86 2 20 1 315 2 224 1 227 2 181 3 184 1 
54 1 13 1 197 2 17 1 28 1 65 1 10 1 316 1 149 1 227 2 90 1 77 1 184 1 
208 1 186 1 13 4 57 1 21 1 149 4 197 1 227 1 58 1 219 1 77 1 65 1 28 4 
54 1 13 2 154 1 1 1 197 2 28 2 220 1 65 1 30 1 344 1 172 1 149 2 227 1 77 1 
252 1 257 1 13 1 311 1 57 1 149 1 197 1 327 1 77 1 28 1 
13 2 197 1 273 1 28 2 65 1 21 1 149 2 123 1 345 1 227 1 77 1 
186 1 13 5 57 1 39 1 197 2 219 1 28 4 65 2 208 1 350 1 172 1 149 5 21 1 345 1 227 3 77 2 
100 1 186 1 13 5 57 1 39 1 197 2 219 1 28 4 65 2 208 1 172 1 149 5 21 1 345 1 227 3 77 2 
161 1 297 2 54 1 36 1 80 1 13 1 57 1 197 1 65 1 28 1 264 1 149 1 227 1 73 2 97 1 183 1 213 1 77 1 
54 1 13 1 154 1 197 2 17 1 28 1 65 1 92 1 344 1 172 1 149 1 227 1 77 1 
297 1 216 1 167 1 307 1 352 1 159 1 294 1 73 1 97 1 
119 1 116 1 159 1 
161 1 352 1 159 1 78 1 167 1 
161 1 298 2 233 1 116 1 249 1 338 1 167 2 262 1 240 1 143 1 119 1 333 1 352 2 224 1 124 1 226 1 159 1 181 2 78 2 
314 1 140 1 337 1 70 1 
314 1 140 1 59 1 337 1 187 1 144 1 270 1 
187 1 335 1 190 1 
140 1 337 1 187 3 348 1 270 1 158 1 314 1 59 1 144 3 33 1 362 1 98 2 
314 1 140 1 180 1 59 1 337 1 187 2 144 2 270 1 212 1 
187 1 337 1 348 1 347 1 270 1 311 1 312 1 252 1 59 1 144 1 42 1 
140 1 59 1 337 1 187 1 144 1 348 1 270 1 
314 1 140 2 59 1 187 1 144 1 348 1 270 1 
140 1 337 1 187 2 115 1 348 1 3 1 270 2 59 2 144 2 106 1 
140 1 131 1 187 3 337 2 348 1 270 1 38 1 312 1 314 1 180 2 59 1 144 3 95 1 
140 1 337 1 187 2 215 1 348 1 270 1 311 1 327 1 314 1 275 1 252 2 180 1 59 1 144 2 42 1 
140 1 131 1 187 4 337 2 348 1 270 2 312 1 314 1 105 1 180 2 59 2 144 4 212 1 
314 1 140 1 59 1 337 1 187 1 144 1 348 1 270 1 
140 2 131 1 187 4 337 3 270 1 312 1 158 1 314 2 180 2 59 1 144 4 33 1 277 1 98 1 
140 1 337 1 187 2 348 1 270 1 14 1 314 1 180 1 59 1 144 2 267 1 44 1 
269 1 140 1 337 1 187 3 348 1 270 1 158 1 314 1 59 1 144 3 33 2 98 2 
337 2 7 2 296 1 330 1 
59 1 187 1 144 1 348 1 270 1 308 1 
314 1 140 1 180 1 59 1 337 1 187 2 144 2 348 1 270 1 95 1 
303 1 
314 1 140 1 59 1 337 1 187 1 144 1 348 1 270 1 
140 1 187 3 337 1 348 1 270 1 314 1 180 1 59 1 144 3 95 1 98 1 
131 1 337 1 277 1 312 1 
140 1 337 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) (24,182) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (24,182) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) (24,182) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (121,158,168,192) (121,158,168,192) (121,158,168,192) 22 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 211 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 324 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 211 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
158 1 22 1 189 1 168 1 121 1 
114 1 327 1 211 1 
114 1 178 1 102 2 
233 2 205 2 257 2 235 2 283 2 201 2 78 1 103 1 
125 1 205 3 206 1 40 1 292 2 45 2 209 1 92 1 171 1 176 1 94 2 257 2 97 1 53 1 9 1 216 2 305 1 103 1 307 1 63 1 107 1 145 1 65 1 231 1 195 1 157 1 233 2 235 3 283 2 196 1 319 1 117 1 201 2 78 1 238 2 241 1 202 1 
233 1 205 1 30 1 257 1 235 1 283 1 271 1 201 1 78 1 154 1 
205 1 108 1 126 1 47 1 114 1 258 1 30 1 52 1 235 1 115 1 197 1 10 1 201 1 327 1 
205 1 108 2 47 1 233 1 114 1 52 2 257 1 258 1 30 1 283 1 235 1 115 1 197 1 201 1 327 1 
317 1 52 1 108 1 56 1 294 1 
114 1 52 2 116 1 108 2 291 1 56 1 294 1 327 1 
52 1 108 1 294 1 
205 1 108 1 271 1 154 1 233 1 30 1 52 1 257 1 283 1 235 1 56 1 78 1 201 1 326 1 
114 1 
114 1 52 2 116 1 108 2 56 1 294 1 3 1 327 1 
289 1 185 2 269 1 108 5 151 1 131 2 294 2 232 1 114 1 52 5 116 1 180 1 285 1 11 1 56 2 306 2 17 1 79 1 327 1 
103 1 211 1 
205 2 222 1 233 1 257 1 235 2 283 1 54 1 201 2 103 2 
270 1 19 1 5 1 
205 1 125 1 292 1 130 1 209 1 92 1 171 1 195 1 235 1 216 1 305 1 103 1 238 1 107 1 65 1 145 1 
123 2 205 5 68 1 299 1 233 4 257 4 235 5 283 1 259 1 54 1 10 1 201 5 103 1 164 1 
233 2 205 2 30 1 257 2 235 2 271 1 201 2 175 1 
123 1 125 1 205 2 292 1 209 1 92 1 171 1 299 1 195 1 233 1 257 1 235 2 216 1 305 1 201 1 238 1 19 1 107 1 145 1 65 1 
123 1 233 3 205 3 257 3 283 1 235 3 201 3 103 1 
233 1 205 1 30 1 257 1 235 1 271 1 201 1 
233 1 205 1 30 1 257 1 235 1 283 1 222 1 54 1 201 1 
123 1 125 1 205 4 40 1 292 1 45 2 209 1 92 1 171 1 299 1 255 1 301 1 47 1 94 1 257 3 258 1 52 1 97 1 53 1 9 1 54 1 216 1 305 1 103 1 307 1 107 1 145 1 65 1 108 1 231 1 195 1 157 1 233 3 30 1 283 2 235 4 115 1 196 1 197 1 117 1 201 3 78 1 238 1 202 1 
233 1 123 1 205 2 68 1 257 1 235 2 10 1 201 2 103 1 
123 2 205 3 108 1 299 1 255 1 47 1 233 3 114 1 52 1 30 1 257 3 258 1 283 1 115 1 235 3 197 1 54 1 201 3 237 1 
123 1 205 2 270 1 233 2 257 2 283 1 235 2 54 1 201 2 19 1 
205 1 125 1 292 1 209 1 92 1 171 1 195 1 235 1 216 1 305 1 103 1 238 1 107 1 65 1 145 1 
205 1 125 1 292 1 209 1 171 1 235 1 216 1 305 1 103 1 238 1 308 1 239 1 107 1 65 1 145 1 
42 1 45 2 296 1 133 1 5 2 94 4 97 1 53 1 9 1 55 1 59 1 307 1 19 2 67 1 270 2 187 1 231 1 26 1 157 1 196 2 319 2 160 1 200 1 163 1 
233 1 205 1 30 1 258 1 257 1 235 1 201 1 175 1 
212 1 247 1 
212 1 247 1 
244 1 300 1 
244 1 300 1 
244 1 300 1 
212 1 247 1 249 1 
212 1 247 1 249 1 
212 1 247 1 249 1 
212 1 247 1 230 1 
244 1 212 2 256 1 247 2 75 1 300 1 
212 1 247 1 311 1 
212 1 247 1 311 1 
212 1 247 1 311 1 
205 2 148 1 247 1 108 1 110 1 2 1 295 1 230 1 280 1 156 1 93 1 212 1 233 2 213 1 52 1 257 2 235 2 261 1 201 2 103 1 265 1 264 1 220 1 146 1 
86 1 148 2 247 2 108 2 44 2 224 1 2 2 250 1 295 3 156 2 212 2 256 1 114 1 52 2 213 1 140 1 15 1 220 2 242 1 
312 1 43 1 104 1 
312 1 43 1 183 1 
69 1 43 3 14 1 62 1 183 1 104 2 
69 1 43 2 320 1 14 1 183 1 104 1 
69 2 43 2 14 1 183 1 104 1 
289 3 41 1 131 1 294 1 210 1 133 1 136 1 52 5 179 1 261 1 11 1 56 4 59 1 306 1 17 2 264 1 144 1 185 1 149 2 186 2 108 5 280 1 114 1 116 1 160 1 200 1 32 1 33 2 327 1 328 1 
205 1 294 1 52 2 257 1 56 2 21 1 108 2 271 1 154 1 29 1 233 1 114 1 30 1 317 1 159 1 283 1 235 1 78 1 201 1 326 1 327 1 
289 3 205 1 41 1 131 1 210 1 133 1 136 1 257 1 52 3 179 1 56 2 59 1 306 1 17 2 264 1 185 1 149 2 269 1 108 3 186 2 271 1 154 1 233 1 114 1 30 1 235 1 283 1 160 1 201 1 78 1 200 1 32 1 33 1 326 1 327 1 
246 1 257 1 179 1 17 4 264 2 185 1 269 1 108 4 186 4 271 1 28 1 114 1 30 1 283 1 200 2 201 1 32 2 33 2 289 5 205 1 41 1 131 1 210 1 133 2 136 1 52 4 56 3 306 1 59 2 149 4 225 1 154 1 233 1 235 1 160 2 78 1 326 1 327 1 
107 1 288 1 211 1 
6 1 107 1 
16 1 
125 1 107 1 145 1 
191 1 107 1 
125 1 107 1 
125 1 95 1 107 3 288 2 145 1 83 1 
167 1 207 1 296 4 173 1 135 1 51 2 94 14 96 2 263 2 59 3 143 2 150 1 26 5 196 6 319 8 200 3 240 1 203 1 
167 1 207 3 296 4 173 1 135 1 51 2 94 14 96 2 263 2 59 3 143 2 150 1 26 7 196 6 319 8 200 3 240 1 203 1 
167 1 207 1 296 4 173 1 135 1 48 1 51 2 94 14 96 2 263 2 59 3 143 2 150 1 26 5 196 6 319 8 200 3 240 1 203 1 
167 1 45 4 207 7 296 5 133 1 173 2 135 1 51 3 94 40 96 2 97 2 53 2 9 2 260 1 263 3 59 4 307 2 143 3 105 1 23 1 150 2 273 1 314 1 193 1 26 12 194 4 318 4 196 16 319 24 160 4 200 7 32 4 240 1 203 1 81 2 37 1 38 1 
45 4 207 2 296 5 173 1 135 1 51 2 94 16 97 2 96 2 53 2 9 2 263 2 59 3 307 2 219 1 143 2 150 1 26 7 196 7 319 9 200 3 199 1 240 1 81 1 203 1 
158 1 22 1 189 1 168 1 121 1 
158 1 189 1 168 1 24 1 121 1 
189 1 168 1 182 1 192 1 
158 1 189 1 168 1 24 1 121 1 
158 1 22 1 189 1 168 1 121 1 
266 1 
289 1 204 1 205 1 248 1 126 1 89 1 170 2 131 1 294 5 134 5 4 1 47 1 7 1 178 2 52 4 258 1 303 1 10 1 217 2 11 1 306 1 17 1 60 1 185 1 108 4 152 1 228 2 112 1 25 3 276 3 114 1 30 1 235 1 115 1 116 2 197 1 31 1 201 1 118 2 162 1 327 1 165 3 
289 1 204 1 205 1 248 1 126 1 89 1 170 2 131 1 294 5 134 5 4 1 47 1 7 1 178 2 52 4 258 1 303 1 10 1 217 2 11 1 306 1 17 1 60 1 185 1 108 4 152 1 228 2 112 1 25 3 276 3 114 1 30 1 235 1 115 1 116 2 197 1 31 1 201 1 118 2 162 1 327 1 165 3 
289 1 204 1 205 1 126 1 294 4 131 1 134 4 4 1 47 1 7 1 52 4 258 1 10 1 11 1 102 2 306 1 17 1 60 1 185 1 221 2 108 4 25 2 228 2 112 1 276 2 114 1 30 1 235 1 115 1 116 2 197 1 284 1 161 2 201 1 118 2 162 1 327 1 329 1 165 2 
84 1 248 1 170 2 4 1 7 1 178 2 177 1 258 1 8 1 10 1 262 1 11 1 102 2 17 2 107 1 185 1 108 5 25 2 112 1 276 2 113 1 279 1 114 2 30 1 115 1 116 3 197 1 201 1 118 2 289 2 204 1 125 1 205 1 292 2 126 1 294 6 131 1 209 2 210 1 134 4 47 1 52 5 217 2 216 2 305 1 306 1 60 1 65 1 228 2 235 1 162 1 238 2 327 1 329 1 165 2 
204 1 205 1 108 3 126 1 294 2 112 1 3 1 134 2 4 1 47 1 30 1 258 1 52 3 115 1 235 1 116 1 197 1 10 1 201 1 162 1 60 1 165 1 
204 1 205 1 108 3 126 1 294 1 25 1 112 1 3 1 134 3 4 1 47 1 114 1 30 1 258 1 52 3 115 1 235 1 116 1 197 1 10 1 201 1 162 1 60 1 327 1 
204 1 205 1 126 1 294 2 3 1 134 3 4 1 47 1 52 3 258 1 10 1 60 1 108 3 112 1 25 1 276 1 114 1 30 1 235 1 115 1 116 1 197 1 201 1 162 1 327 1 165 1 
248 1 89 1 170 2 3 1 4 1 7 1 258 1 178 2 10 1 11 1 17 1 185 1 108 5 112 1 25 4 276 4 282 1 114 5 30 1 115 1 197 1 116 3 31 1 201 1 118 2 204 1 289 1 205 1 126 1 294 7 131 1 134 6 47 1 52 5 303 1 217 2 306 1 60 1 152 1 228 2 235 1 162 1 327 5 165 4 
248 1 170 2 4 1 7 1 258 1 178 2 10 1 11 1 102 2 17 1 185 1 108 4 112 1 25 2 276 2 114 2 30 1 115 1 197 1 116 2 201 1 118 2 204 1 289 1 205 1 126 1 131 1 294 4 134 4 47 1 52 4 217 2 306 1 60 1 228 2 235 1 162 1 327 1 165 2 329 1 
289 1 204 1 205 1 248 1 126 1 89 1 294 4 170 2 131 1 134 4 4 1 47 1 7 1 178 2 52 4 258 1 303 1 10 1 217 2 11 1 306 1 17 1 60 1 185 1 108 4 152 1 25 2 228 2 112 1 276 2 114 1 30 1 235 1 115 1 116 2 197 1 201 1 118 2 162 1 327 1 165 2 
289 1 204 1 205 1 248 1 126 1 89 1 294 4 170 2 131 1 134 4 4 1 47 1 7 1 178 2 52 4 258 1 303 1 10 1 217 2 11 1 306 1 17 1 60 1 185 1 108 4 152 1 25 2 228 2 112 1 276 2 114 1 30 1 235 1 115 1 116 2 197 1 201 1 118 2 162 1 327 1 165 2 
289 1 204 1 205 1 126 1 294 4 131 1 134 4 4 1 47 1 7 1 52 4 258 1 303 1 10 1 11 1 102 2 306 1 17 1 60 1 185 1 221 2 108 4 71 1 25 2 228 2 112 1 276 2 114 1 30 1 235 1 115 1 116 2 197 1 284 1 161 2 201 1 118 2 162 1 327 1 165 2 122 1 
45 2 296 2 26 2 231 1 135 1 211 1 157 1 51 1 94 5 96 1 97 1 196 2 53 1 9 1 319 3 55 1 263 1 200 1 59 1 103 2 307 1 143 1 203 1 
40 1 128 1 45 4 207 1 133 1 5 11 94 14 97 2 53 2 9 2 58 1 59 1 103 1 307 2 63 1 105 1 19 11 270 3 273 1 26 1 231 1 194 3 234 1 157 2 318 3 196 6 319 8 160 2 200 2 236 1 32 2 38 1 
123 1 125 1 205 2 40 1 292 1 45 2 130 1 209 1 92 1 171 1 253 1 299 1 257 1 94 2 97 1 53 1 9 1 216 1 12 1 305 1 58 1 103 1 307 1 63 1 107 1 145 1 65 1 267 1 270 1 231 1 195 1 157 1 233 1 235 2 196 1 319 1 201 1 238 1 
88 2 92 2 171 2 5 4 252 1 257 1 94 23 96 2 97 3 9 3 263 2 103 3 107 2 19 4 270 4 188 2 26 5 195 2 30 1 196 9 201 1 200 5 32 2 203 1 202 2 123 1 205 3 125 2 40 1 292 1 45 6 207 1 209 1 296 4 135 1 299 1 302 2 51 1 53 3 216 1 58 1 305 2 59 3 307 3 63 1 143 2 65 2 145 2 223 2 153 1 231 3 233 1 157 3 235 3 160 2 319 14 80 1 238 1 240 1 
123 1 84 1 205 1 125 2 206 2 0 1 40 1 292 8 45 4 90 1 209 2 257 1 94 2 177 1 97 2 137 1 53 2 9 2 139 1 55 1 216 8 13 1 305 2 307 2 63 1 107 3 65 2 66 1 272 1 231 2 233 1 157 2 235 1 196 1 198 1 319 1 201 1 323 1 238 7 
205 1 45 2 257 1 94 1 97 1 53 1 54 1 9 1 58 1 307 1 310 1 231 1 157 1 233 1 283 1 235 1 160 1 319 1 201 1 200 1 32 1 
270 1 42 1 45 2 207 1 26 1 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 55 1 200 1 307 1 19 1 
270 1 45 2 296 1 133 1 26 1 5 1 231 1 157 1 94 2 97 1 53 1 196 2 9 1 55 1 59 1 307 1 163 1 19 1 
270 1 45 2 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 55 1 200 1 307 1 32 1 19 1 
270 1 42 1 45 2 272 1 207 1 26 1 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 200 1 307 1 19 1 
270 1 45 2 272 1 296 1 133 1 26 1 5 1 231 1 157 1 94 2 97 1 53 1 196 2 9 1 59 1 307 1 163 1 19 1 
270 1 45 2 272 1 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 200 1 307 1 32 1 19 1 
270 1 45 2 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 200 1 307 1 32 1 19 1 
125 1 205 1 40 1 292 1 45 2 209 1 92 1 171 1 94 2 97 1 53 1 9 1 216 1 305 1 103 1 307 1 63 1 107 1 145 1 65 1 231 1 195 1 157 1 235 1 196 1 319 1 238 1 202 1 
40 1 292 1 45 2 72 1 209 1 231 1 157 1 30 1 94 1 97 1 196 1 53 1 9 1 216 1 103 1 307 1 80 1 238 1 
270 1 45 2 5 1 231 1 157 1 94 2 97 1 53 1 9 1 160 1 319 2 58 1 200 1 307 1 32 1 19 1 
125 1 205 1 292 1 45 2 92 1 171 1 5 1 94 2 97 1 137 1 53 1 9 1 216 1 305 1 307 1 19 1 107 1 145 1 65 1 270 1 223 1 231 1 195 1 157 1 235 1 319 2 160 1 200 1 32 1 238 1 202 1 
205 1 45 2 133 1 5 1 257 1 94 3 97 1 53 1 54 1 9 1 58 1 59 1 307 1 218 1 19 1 231 1 157 1 233 1 283 1 235 1 196 1 160 1 319 2 201 1 200 1 32 1 
290 1 45 4 207 5 172 1 133 1 94 28 214 1 97 2 53 2 9 2 215 1 57 1 101 1 59 1 61 1 307 2 105 2 273 2 26 5 76 1 27 2 194 4 318 4 196 9 319 19 160 6 321 1 199 1 200 6 32 6 120 1 36 1 39 1 38 2 
290 1 45 4 207 5 172 1 133 1 94 28 214 1 97 2 53 2 9 2 215 1 57 1 101 1 59 1 61 1 307 2 105 2 273 2 26 5 76 1 27 2 194 4 318 4 196 9 319 19 160 6 321 1 199 1 200 6 32 6 120 1 36 1 39 1 38 2 
290 1 45 2 207 5 296 1 172 1 133 1 135 1 51 1 94 33 96 1 214 1 97 1 53 1 9 1 263 1 215 1 57 1 101 1 59 2 61 1 307 1 143 1 105 2 273 2 26 6 76 1 27 2 194 4 318 4 196 11 319 22 160 6 321 1 199 1 200 7 32 6 120 1 36 1 203 1 38 2 
290 1 45 4 207 5 172 1 133 1 94 30 98 1 214 1 97 2 53 2 9 2 215 1 57 1 101 1 59 1 61 1 307 2 105 2 273 2 315 1 26 5 76 1 27 2 194 4 318 4 196 9 319 21 160 7 321 1 199 1 200 7 32 7 120 1 39 1 38 2 
290 2 45 2 172 1 133 1 94 16 97 1 214 1 53 1 9 1 215 1 57 1 101 1 59 1 307 1 61 1 273 2 76 1 27 2 194 2 318 2 196 7 319 9 160 2 199 1 321 1 200 2 32 2 120 2 36 1 
212 1 256 1 148 1 247 1 140 1 224 1 129 1 2 1 220 1 156 1 
230 1 146 1 
212 1 148 1 247 1 70 1 2 1 18 1 220 1 278 1 156 1 
85 1 249 1 
311 1 75 1 281 1 
148 1 247 1 108 1 44 1 224 1 2 1 250 1 295 2 156 1 212 1 256 1 114 1 213 1 52 1 140 1 15 1 220 1 242 1 
148 1 247 1 108 1 44 1 224 1 2 1 250 1 295 2 156 1 212 1 256 1 114 1 213 1 52 1 140 1 15 1 220 1 242 1 
148 1 247 1 108 1 44 1 224 1 2 1 250 1 295 2 156 1 212 1 256 1 114 1 213 1 52 1 140 1 15 1 220 1 242 1 
85 1 249 1 75 1 
85 1 249 1 75 1 
311 1 281 1 
311 1 75 1 281 1 
93 1 265 1 
205 2 148 1 247 1 108 1 44 1 110 1 2 1 295 1 132 1 230 1 280 1 156 1 233 2 93 1 212 1 257 2 52 1 235 2 261 1 56 1 201 2 103 1 265 1 264 1 220 1 242 1 146 1 
125 1 205 2 206 2 40 1 292 2 45 2 90 1 174 1 94 2 97 1 53 1 9 1 138 1 216 2 305 1 13 1 58 1 307 1 63 1 107 1 65 1 231 1 157 1 235 2 196 1 319 1 201 2 322 1 238 2 35 1 287 1 
268 1 20 1 312 1 292 2 43 2 208 1 155 1 137 1 181 1 216 2 100 1 305 1 323 1 62 1 183 1 238 2 119 1 104 1 65 1 
268 1 20 1 312 1 292 1 43 2 208 1 155 1 286 1 216 1 305 1 323 1 62 1 183 1 238 1 119 1 104 1 65 1 
84 1 125 1 177 1 292 1 1 1 100 1 216 1 305 1 209 1 190 1 238 1 107 1 155 1 65 1 
268 1 20 1 312 1 292 1 43 2 208 1 155 1 181 1 216 1 100 1 305 1 323 1 62 1 183 1 238 1 119 1 104 1 65 1 
275 1 
205 3 125 1 40 1 292 1 45 2 209 1 92 1 171 1 94 1 257 2 97 1 53 1 9 1 216 1 305 1 103 1 307 1 107 1 65 1 145 1 231 1 195 1 233 2 157 1 235 3 283 2 196 1 117 1 201 2 78 1 238 1 202 1 
185 1 289 1 186 1 131 1 210 1 114 1 8 1 11 1 306 1 17 1 327 1 
289 1 114 1 151 1 17 1 79 1 327 1 211 1 
185 1 289 1 108 1 248 1 294 1 131 1 170 1 114 2 52 1 178 1 116 1 217 1 11 1 102 1 306 1 17 1 327 1 
185 1 125 1 292 1 313 1 131 1 209 1 6 1 11 1 216 1 305 1 306 1 238 1 324 1 107 2 65 2 145 1 83 1 
289 3 131 1 172 1 178 1 214 1 11 1 306 1 102 1 17 7 61 1 105 1 185 1 149 4 186 4 273 1 76 1 194 2 318 2 160 4 321 1 200 4 32 4 38 1 
289 2 205 1 89 1 131 1 297 2 52 1 257 1 96 1 263 1 11 1 306 1 59 1 17 2 143 1 185 1 108 1 271 1 154 1 233 1 30 1 235 1 283 1 200 2 78 1 201 1 34 1 240 1 326 1 
185 1 289 1 151 1 131 1 114 1 11 1 306 1 79 1 17 1 327 1 
289 2 149 2 186 2 133 1 160 1 200 1 59 1 32 1 17 2 
114 1 52 1 108 1 116 1 294 1 327 1 
289 2 84 1 125 1 292 4 131 2 209 2 294 4 210 2 52 3 177 1 8 2 99 1 11 1 216 4 305 1 306 2 17 2 309 1 107 1 65 1 185 2 269 1 108 3 229 2 113 1 279 1 77 1 116 2 238 4 
148 1 2 1 316 1 
148 1 2 1 316 1 
148 1 2 1 316 1 
93 1 148 1 127 1 224 1 2 1 
148 1 2 1 298 1 
148 1 2 1 298 1 
148 1 2 1 298 1 
148 1 2 1 
212 1 247 1 
45 2 207 1 296 4 135 1 51 1 94 15 97 1 96 2 53 1 9 1 263 2 59 3 307 1 143 2 273 1 26 5 194 1 318 1 196 7 319 8 200 3 321 1 199 1 240 1 203 1 
45 4 207 2 172 1 133 3 50 1 94 20 97 2 214 1 53 2 9 2 59 3 61 1 307 2 105 1 273 1 26 2 76 1 194 2 318 2 196 9 319 11 160 4 321 1 199 1 200 4 32 4 38 1 
45 4 207 1 172 1 50 1 94 8 97 2 214 1 53 2 9 2 307 2 61 1 273 1 26 1 76 1 194 1 318 1 196 2 319 6 160 2 321 1 199 1 200 2 32 2 
45 4 172 1 133 1 50 1 94 10 97 2 214 1 53 2 9 2 59 1 307 2 61 1 273 1 76 1 194 1 318 1 196 4 319 6 160 2 321 1 199 1 200 2 32 2 
45 2 207 1 296 4 135 1 51 1 94 15 97 1 96 2 53 1 9 1 263 2 59 3 307 1 143 2 273 1 26 5 194 1 318 1 196 7 319 8 200 3 321 1 199 1 240 1 203 1 
45 2 273 1 207 1 172 1 26 1 76 1 194 1 94 8 214 1 97 1 318 1 53 1 196 2 9 1 160 2 319 6 200 2 199 1 321 1 61 1 32 2 307 1 
45 4 172 1 133 1 50 1 94 10 97 2 214 1 53 2 9 2 59 1 307 2 61 1 273 1 76 1 194 1 318 1 196 4 319 6 160 2 321 1 199 1 200 2 32 2 
45 4 207 1 172 1 133 1 94 10 97 2 214 1 53 2 9 2 59 1 307 2 61 1 273 1 26 1 76 1 194 1 318 1 196 4 319 6 160 2 321 1 199 1 200 2 32 2 39 1 
207 3 296 3 26 6 135 2 94 7 96 1 196 4 319 3 263 3 200 1 59 1 143 3 203 1 
45 4 172 1 133 1 94 10 97 2 214 1 53 2 9 2 59 1 307 2 61 1 273 1 76 1 194 1 318 1 196 4 319 6 160 2 321 1 199 1 200 2 32 2 39 1 
45 4 207 3 296 4 135 1 51 1 94 17 97 2 96 2 53 2 9 2 263 2 59 3 307 2 143 2 26 7 196 8 319 9 200 3 240 1 203 1 81 1 
296 2 26 2 135 1 211 1 51 1 94 5 96 1 196 2 319 3 263 1 200 1 59 1 143 1 203 1 
45 2 50 1 94 2 97 1 53 1 9 1 160 1 319 2 200 1 307 1 32 1 
273 1 207 2 26 2 194 2 94 8 318 2 196 2 319 6 160 2 200 2 32 2 105 1 38 1 
45 2 207 2 296 4 135 1 51 1 94 21 96 2 97 1 53 1 9 1 263 2 59 3 307 1 143 2 105 1 26 6 194 2 234 1 318 2 196 8 160 2 319 13 200 5 32 2 240 1 81 1 203 1 38 1 
94 1 196 1 194 1 
94 1 318 1 319 1 
88 1 207 1 26 1 94 4 196 1 160 1 319 3 200 1 32 1 
45 2 273 1 207 1 172 1 26 1 76 1 194 1 94 8 214 1 97 1 318 1 53 1 196 2 9 1 160 2 319 6 200 2 199 1 321 1 61 1 32 2 307 1 
207 1 296 1 26 2 94 6 96 1 196 3 319 3 263 1 200 1 59 1 143 1 
45 2 207 1 296 1 26 2 135 1 94 3 97 1 196 2 53 1 9 1 319 1 263 1 307 1 143 1 81 1 203 1 37 1 
45 2 207 2 296 3 26 5 94 10 97 1 96 1 53 1 196 5 9 1 319 5 263 2 199 1 200 2 59 2 307 1 240 1 143 2 
45 2 207 1 26 1 94 2 97 1 53 1 9 1 160 1 319 2 199 1 200 1 307 1 
45 2 207 1 133 1 26 1 94 4 97 1 196 2 53 1 9 1 160 1 319 2 199 1 200 1 59 1 307 1 32 1 
45 6 207 1 296 1 26 2 94 3 97 3 196 2 53 3 9 3 319 1 263 1 199 1 307 3 143 1 81 1 37 1 39 1 
45 8 207 4 296 4 133 1 135 1 50 1 51 1 94 29 96 2 97 4 53 4 260 1 9 4 263 2 59 4 307 4 143 2 273 1 314 1 193 1 26 8 194 3 318 3 196 13 319 16 160 2 199 1 200 5 32 2 240 1 203 1 81 1 39 1 
205 1 68 1 235 1 10 1 201 1 103 1 254 1 
205 1 68 1 166 1 111 1 74 1 254 1 235 1 10 1 201 1 103 1 106 1 147 1 
84 1 125 1 177 1 292 1 216 1 305 1 209 1 238 1 107 1 65 1 211 1 
123 1 125 1 205 2 292 1 209 1 92 1 171 1 233 1 257 1 235 2 216 1 201 1 305 1 103 1 238 1 107 1 145 1 65 1 
123 1 125 2 205 2 292 1 92 1 191 1 171 1 229 1 47 1 233 2 30 1 258 1 257 1 235 2 304 1 216 1 201 2 305 1 103 1 238 1 107 3 145 2 65 1 
123 1 205 2 125 2 292 2 171 1 47 1 257 1 258 1 304 1 142 1 216 2 305 1 103 1 107 3 65 1 145 2 191 1 229 1 233 2 30 1 235 2 201 2 238 2 239 1 
125 1 292 3 294 1 209 1 91 1 49 1 6 1 52 2 304 1 142 1 216 3 305 1 107 4 65 1 145 1 108 2 191 1 229 1 114 1 115 1 238 3 327 1 288 1 
125 1 108 2 292 3 209 1 294 1 191 1 229 1 46 1 114 1 6 1 52 2 115 1 304 1 142 1 216 3 305 1 238 3 327 1 107 4 288 1 145 1 65 1 
66 1 292 1 216 1 305 1 238 1 65 1 
125 1 245 1 292 1 73 1 209 1 226 1 216 1 305 1 238 1 107 1 83 1 145 1 65 2 
92 1 171 1 257 1 94 13 97 2 96 2 9 2 263 2 103 3 107 1 26 5 195 1 30 1 196 6 201 1 200 3 202 1 203 1 123 1 205 2 125 1 292 1 45 4 207 1 296 4 135 1 302 1 51 1 137 1 53 2 216 1 58 1 305 1 59 3 307 2 143 2 65 1 145 1 223 1 231 2 233 1 157 2 235 2 319 7 322 1 80 1 238 1 240 1 
289 1 124 1 243 1 292 1 209 1 131 2 294 2 46 1 6 1 52 3 11 2 56 1 216 1 306 2 17 1 309 1 107 2 185 2 108 3 109 1 151 1 114 1 115 1 116 1 79 1 238 1 327 1 288 1 
125 1 66 1 137 1 292 2 313 1 216 2 305 1 238 2 107 2 288 1 65 2 145 1 83 1 
84 1 125 1 292 4 209 1 177 1 137 1 142 1 216 4 305 1 238 4 325 1 107 1 65 1 
125 1 245 1 292 1 73 1 274 1 216 1 305 1 238 1 184 1 107 1 82 1 145 1 65 2 
312 1 292 1 43 1 216 1 305 1 209 1 183 1 119 1 238 1 65 1 
125 1 137 1 292 2 138 1 216 2 305 1 13 1 323 1 238 2 107 1 65 1 
84 1 125 2 0 1 292 5 209 1 229 1 177 1 137 1 198 1 216 5 13 1 305 2 238 4 325 1 107 3 65 2 
84 1 125 2 292 5 209 1 229 1 177 1 137 1 198 1 216 5 13 1 305 2 238 4 325 1 64 1 107 3 65 2 
123 1 125 1 205 2 292 1 209 1 171 1 233 1 257 1 235 2 216 1 201 1 305 1 103 1 238 1 239 1 107 1 145 1 65 1 
125 1 245 1 292 1 73 1 226 1 229 1 216 1 305 1 238 1 107 1 83 1 145 1 65 2 
141 1 169 1 103 1 251 1 227 1 
108 2 87 1 169 1 293 1 251 2 227 2 277 1 47 1 255 1 114 1 30 1 258 1 52 2 115 1 197 1 56 1 141 2 103 1 327 1 
205 1 169 1 227 1 174 1 235 1 141 1 201 1 35 1 287 1 
87 1 169 1 277 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (179,269) 274 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (17,201) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (52,125,142) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 157 13 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (17,201) (17,201) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 157 255 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 36 73 279 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 200 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 163 92 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 163 92 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 157 63 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 16 246 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 157 128 307 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 157 255 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (52,125,142) (52,125,142) 113 19 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 200 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 262 167 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (179,269) (179,269) (95,170) 47 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (179,269) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (179,269) (179,269) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 268 144 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 268 144 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 268 144 129 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 268 144 129 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 268 144 129 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 157 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 157 66 290 111 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (17,201) (17,201) 210 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 157 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 157 128 307 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (179,269) 274 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 133 58 3 111 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 163 92 303 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 163 92 303 288 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 197 (214,316) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 197 (214,316) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 197 (212,226) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 107 190 (212,226) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 107 (214,316) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (214,316) 76 196 (95,170) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 197 (212,226) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (17,201) (17,201) 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 1 283 5 81 2 257 1 87 1 165 9 289 1 89 6 291 1 131 2 296 1 215 2 136 9 15 2 218 1 174 2 306 1 223 2 180 1 310 1 181 1 148 1 237 3 30 1 33 2 326 1 160 4 161 1 
252 1 283 5 81 2 257 1 87 1 165 9 289 1 89 6 291 1 131 2 296 1 215 2 15 2 136 9 218 1 174 2 306 1 223 2 180 1 310 1 181 1 148 1 237 3 30 1 33 2 326 1 160 4 161 1 
252 1 283 6 81 2 257 1 87 1 165 10 289 1 89 7 291 1 131 2 296 1 215 2 15 2 136 10 218 1 174 2 306 1 223 2 180 1 310 1 181 1 148 1 237 4 30 1 33 2 326 1 160 5 161 1 
283 4 81 2 257 1 87 1 165 7 289 1 89 4 291 1 131 1 296 1 215 2 15 2 136 7 218 1 174 2 306 1 223 2 180 1 310 1 181 1 148 1 237 2 30 1 33 2 326 1 160 3 161 1 
223 1 252 1 283 3 81 1 310 1 148 1 87 1 165 4 89 3 237 1 30 1 131 2 296 1 215 1 33 1 136 4 15 1 160 2 
223 1 306 1 283 1 81 1 181 1 310 1 87 1 165 2 9 1 296 1 215 1 33 1 263 1 136 2 242 1 174 1 
223 2 283 2 310 1 257 1 87 1 165 3 89 1 237 1 296 1 215 2 136 3 174 1 160 1 
283 5 252 1 81 1 257 1 87 1 8 1 165 9 89 7 131 2 296 1 215 2 136 9 15 1 174 1 223 2 310 1 148 1 277 1 237 3 30 1 33 1 326 1 160 4 161 1 
283 5 252 1 81 1 257 1 87 1 8 1 165 9 89 7 131 2 296 1 215 2 136 9 15 1 174 1 223 2 310 1 148 1 277 1 237 3 30 1 33 1 326 1 160 4 161 1 
42 1 55 1 200 1 
106 2 286 1 55 1 
32 2 182 2 205 2 105 2 285 1 311 2 102 2 
182 1 285 1 105 1 205 1 274 1 5 1 311 1 234 1 12 1 213 2 32 1 51 2 195 1 116 2 269 1 102 1 
32 1 182 1 205 1 105 1 285 1 311 1 17 1 102 1 
52 1 142 1 
32 1 182 1 205 1 105 1 311 1 52 1 102 1 
299 1 302 1 217 1 16 1 125 1 
13 1 299 1 302 1 217 1 125 1 157 1 
299 1 302 1 125 1 
32 1 182 1 299 1 205 1 105 1 285 1 217 1 311 1 125 1 17 1 102 1 201 1 
55 1 
299 1 255 1 302 1 217 1 125 1 157 1 
104 1 279 1 24 1 299 3 73 1 302 1 217 2 125 3 36 1 324 1 26 1 
200 1 
32 1 298 1 182 2 105 1 205 2 311 1 139 1 102 2 
32 1 182 3 205 3 105 3 311 3 61 1 102 3 
182 1 205 1 105 1 311 1 102 1 
32 1 182 1 298 1 205 1 105 1 311 1 139 1 102 1 
32 1 96 1 298 1 182 2 205 2 105 2 311 2 61 1 102 2 
163 1 182 1 205 1 105 1 311 1 61 1 92 1 102 1 
96 1 182 1 205 1 105 1 311 1 61 1 102 1 
32 1 182 1 298 1 205 1 105 1 311 1 102 1 
213 1 51 1 5 1 116 1 
213 1 51 1 5 1 116 1 
80 1 253 2 82 1 72 1 171 1 264 1 141 1 198 1 
182 1 205 1 105 1 311 1 102 1 251 1 
213 1 96 1 182 1 51 1 205 1 105 1 5 1 311 1 61 1 116 1 102 1 
163 1 182 4 105 4 205 4 311 4 61 2 92 1 93 1 32 1 96 1 298 1 245 1 102 4 
182 1 205 1 105 1 311 1 102 1 
320 1 27 1 
320 1 27 1 
70 1 194 1 
70 1 194 1 
70 1 194 1 
320 1 232 1 27 1 
94 1 70 1 320 2 194 1 27 2 152 1 
320 1 27 1 250 1 
320 1 27 1 250 1 
320 1 27 1 250 1 
320 1 27 1 86 1 
320 1 27 1 86 1 
320 1 27 1 86 1 
178 1 177 2 124 2 125 2 275 2 27 2 276 1 62 1 166 1 108 3 94 1 299 2 320 2 134 2 138 1 247 1 55 1 40 2 282 1 
182 2 205 2 124 1 105 2 125 1 311 2 232 1 275 1 27 1 28 1 108 1 189 1 259 1 299 1 320 1 134 1 155 1 138 1 199 1 221 1 143 1 102 2 40 1 
81 1 33 1 15 1 
81 1 33 1 9 1 
238 1 81 3 15 2 38 1 78 1 9 1 
238 1 81 2 272 1 15 1 38 1 9 1 
238 2 81 2 15 1 38 1 9 1 
299 1 302 1 217 1 125 1 157 1 63 1 
203 1 299 2 302 1 217 2 16 1 125 2 185 1 246 1 
42 1 83 1 84 1 286 2 125 3 10 1 259 1 133 1 299 3 217 2 222 2 55 3 58 1 104 1 24 1 308 1 106 4 312 1 26 1 34 3 321 2 158 1 324 1 323 1 117 1 248 2 
42 1 83 1 84 2 286 3 125 4 10 1 259 2 133 2 299 4 217 3 53 1 222 4 55 4 58 2 104 1 24 1 308 2 106 7 312 1 26 1 151 1 154 1 34 5 321 4 158 2 324 1 323 2 117 1 248 4 
121 1 233 1 200 1 
103 1 233 1 
301 1 
233 1 315 1 
120 1 121 2 229 1 233 3 315 1 301 1 22 1 
229 1 233 1 315 1 
233 1 187 1 
162 1 122 2 45 1 84 1 231 1 287 1 6 1 11 4 278 7 211 1 192 3 265 2 243 3 323 1 98 1 325 1 41 1 
162 1 122 2 45 1 84 1 231 1 287 1 6 1 11 4 278 7 211 1 192 3 265 2 243 3 323 1 98 1 325 1 41 1 
162 1 122 2 45 1 84 1 231 1 287 1 6 1 130 1 11 4 278 7 211 1 192 3 265 2 243 3 323 1 98 1 325 1 41 1 
162 1 202 1 122 3 80 1 253 2 284 1 45 2 82 1 84 4 6 2 287 5 11 16 211 1 133 3 261 1 97 1 264 1 265 5 98 1 141 1 101 1 57 3 58 3 231 1 278 31 192 10 112 1 243 15 323 4 158 3 159 1 325 2 77 4 41 2 
162 1 80 2 122 2 253 4 82 2 45 1 84 1 6 1 287 1 11 5 211 1 264 2 265 3 98 1 141 2 313 1 278 9 153 1 192 4 112 1 323 1 243 4 325 1 41 1 
283 1 1 1 204 1 81 2 46 1 4 1 209 1 87 1 165 2 89 1 9 1 132 1 296 1 213 1 215 1 51 1 15 1 136 2 304 1 174 1 220 1 20 1 267 1 223 1 310 1 33 1 75 1 35 1 116 1 78 1 
283 1 1 1 204 1 81 2 46 1 4 1 209 1 87 1 165 3 89 2 9 1 132 1 296 1 213 1 215 1 216 1 51 1 15 1 136 3 174 1 220 1 20 1 305 1 223 1 318 1 33 1 75 1 35 1 116 1 78 1 
283 1 1 1 204 1 81 2 46 1 209 1 87 1 165 2 89 2 9 1 132 1 296 1 213 1 216 1 51 1 136 2 15 1 174 1 20 1 305 1 33 1 75 1 35 1 116 1 78 1 
223 1 204 1 1 2 5 1 209 2 233 1 165 1 315 1 91 1 188 1 318 1 260 1 280 1 215 1 213 1 14 1 51 1 136 1 75 2 37 1 174 2 116 1 20 1 
1 1 204 1 81 2 46 1 4 1 209 1 165 1 9 1 132 1 213 1 215 1 51 1 15 1 136 1 304 1 174 1 220 1 20 1 305 1 223 1 310 1 33 1 75 1 35 1 116 1 78 1 
292 1 
104 1 307 1 83 1 5 1 125 1 26 1 128 1 258 1 65 1 213 1 299 1 51 1 34 1 302 2 157 1 324 1 116 1 248 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
299 1 255 1 302 1 125 1 157 1 
104 1 125 1 26 1 258 1 239 1 299 1 113 1 324 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
239 1 299 1 113 1 125 1 219 1 52 1 19 1 142 1 
104 1 125 1 26 1 258 1 239 1 299 1 113 1 324 1 219 1 52 1 19 1 142 1 
162 1 122 1 80 1 253 2 45 1 82 1 278 2 11 2 211 1 192 1 171 1 72 1 264 1 265 1 323 1 98 1 198 1 141 1 200 1 41 1 
57 1 119 1 80 1 253 2 82 1 167 1 11 1 278 2 171 1 72 1 262 1 264 1 243 1 141 1 77 1 
175 1 224 1 119 1 80 1 253 2 182 1 206 1 105 1 205 1 82 1 311 1 61 1 11 1 278 2 96 1 171 1 72 1 300 1 264 1 243 1 141 1 102 1 
224 1 119 1 80 1 253 2 179 1 182 1 105 1 205 1 82 1 47 1 5 1 311 1 61 1 278 1 95 1 213 1 96 1 51 1 171 1 72 1 264 1 243 1 116 1 141 1 269 1 102 1 
175 1 80 1 253 2 82 1 5 1 278 1 11 1 213 1 135 1 171 1 72 1 51 1 264 1 115 1 116 1 141 1 
80 1 119 1 253 2 43 1 82 1 205 1 84 1 11 1 133 1 298 1 171 1 264 1 141 1 102 1 58 1 182 1 105 1 311 1 278 2 32 1 72 1 323 1 158 1 243 1 
80 1 253 2 227 1 82 1 278 1 11 1 133 1 171 1 72 1 264 1 323 1 198 1 141 1 
80 1 253 2 271 1 82 1 84 1 278 1 171 1 72 1 264 1 158 1 243 1 198 1 141 1 
80 1 58 1 253 2 82 1 84 1 278 2 11 1 133 1 171 1 72 1 264 1 243 1 158 1 323 1 198 1 141 1 
80 1 253 2 227 1 82 1 278 1 11 1 133 1 171 1 72 1 264 1 323 1 115 1 141 1 
80 1 253 2 271 1 82 1 84 1 278 1 171 1 72 1 264 1 158 1 243 1 115 1 141 1 
80 1 58 1 253 2 82 1 84 1 278 2 11 1 133 1 171 1 72 1 264 1 243 1 158 1 323 1 115 1 141 1 
80 1 58 1 253 2 82 1 84 1 11 1 278 2 133 1 171 1 72 1 264 1 243 1 158 1 323 1 141 1 
213 1 51 1 5 1 116 1 269 1 
213 1 51 1 5 1 137 1 116 1 
119 1 80 1 58 1 253 2 82 1 84 1 278 2 11 1 133 1 171 1 72 1 264 1 243 1 158 1 323 1 141 1 
179 1 213 1 51 1 116 1 269 1 267 1 
80 1 119 1 253 2 82 1 205 1 84 1 11 1 133 1 298 1 171 1 264 1 141 1 102 1 58 1 182 1 105 1 311 1 314 1 278 2 32 1 72 1 323 1 158 1 243 1 
153 1 80 1 253 2 82 1 264 1 127 1 129 1 141 1 268 1 144 1 
153 1 80 1 253 2 82 1 264 1 127 1 129 1 141 1 268 1 144 1 
153 1 80 1 253 2 82 1 264 1 127 1 129 1 141 1 268 1 144 1 
153 1 80 1 253 2 82 1 264 1 127 1 129 1 141 1 268 1 144 1 
153 1 80 1 253 2 82 1 264 1 127 1 129 1 141 1 268 1 144 1 
94 1 178 1 146 1 134 1 320 1 124 1 275 1 27 1 276 1 40 1 
232 1 221 1 
193 1 134 1 320 1 124 1 74 1 25 1 275 1 27 1 40 1 
178 1 177 1 124 1 125 1 275 1 27 1 276 1 62 1 166 1 108 2 94 1 299 1 320 1 134 1 138 1 55 1 40 1 282 1 
178 1 177 1 124 1 125 1 275 1 27 1 276 1 62 1 166 1 108 2 94 1 299 1 320 1 134 1 138 1 55 1 40 1 282 1 
178 1 177 1 124 1 125 1 275 1 27 1 276 1 62 1 166 1 108 2 94 1 299 1 320 1 134 1 138 1 55 1 40 1 282 1 
23 1 152 1 250 1 
23 1 152 1 250 1 
109 1 86 1 
109 1 86 1 152 1 
189 1 199 1 
205 2 124 1 125 1 259 1 299 1 134 1 217 1 221 1 102 2 143 1 177 1 182 2 60 1 105 2 311 2 275 1 232 1 27 1 28 1 108 1 189 1 320 1 155 1 199 1 282 1 40 1 
23 1 250 1 
109 1 86 1 152 1 
295 1 182 2 205 2 149 1 114 1 102 2 
81 2 204 1 46 1 208 1 9 1 235 1 132 1 213 2 33 1 51 2 15 1 75 1 116 2 327 1 20 1 220 1 78 1 267 1 305 1 
81 2 204 1 46 1 9 1 235 1 132 1 213 1 33 1 51 1 15 1 75 1 39 1 116 1 220 1 20 1 78 1 305 1 
204 1 5 1 256 1 233 1 315 1 260 1 213 1 280 1 51 1 14 1 75 1 116 1 327 1 20 1 
81 2 204 1 46 1 208 1 9 1 235 1 132 1 213 1 33 1 51 1 15 1 75 1 116 1 327 1 20 1 220 1 78 1 305 1 
254 1 
42 1 50 1 34 1 100 1 248 1 55 1 200 1 
104 1 106 1 286 1 26 1 258 1 90 1 236 1 293 1 34 1 302 1 157 1 324 1 248 1 
120 1 103 1 104 1 0 1 204 1 229 1 123 1 5 1 26 1 233 2 258 1 315 1 213 1 51 1 324 1 116 1 20 2 
42 1 284 1 84 1 286 3 258 1 290 1 133 1 302 1 222 4 55 4 57 1 58 1 104 1 147 1 106 6 184 1 26 1 66 1 111 1 34 5 321 4 157 1 324 1 323 1 158 1 77 1 248 2 
205 1 45 1 285 1 84 1 125 1 210 1 258 1 211 1 299 1 17 1 102 1 270 1 104 1 182 1 105 1 311 1 184 2 26 1 32 1 34 2 324 1 323 1 248 1 41 1 201 1 
42 1 104 1 26 1 258 1 50 1 34 1 324 1 100 1 248 1 55 1 
58 2 106 10 84 2 286 5 49 1 184 2 133 2 34 5 321 5 323 2 158 2 266 1 248 5 222 5 55 5 
302 1 157 1 
104 1 307 1 83 1 5 1 26 1 258 1 128 1 65 1 213 1 51 1 34 1 302 2 157 1 324 1 99 1 116 1 248 1 
213 1 32 1 182 1 51 1 205 1 105 1 285 1 274 1 5 1 311 1 116 1 269 1 102 1 
122 1 42 2 104 1 106 4 83 1 286 2 26 1 258 1 65 1 34 1 321 2 324 1 222 2 248 2 55 4 
189 1 294 1 134 1 276 1 40 1 
134 1 88 1 40 1 
134 1 88 1 40 1 
134 1 88 1 40 1 
191 1 134 1 40 1 
191 1 134 1 40 1 
191 1 134 1 40 1 
134 1 40 1 
320 1 27 1 
162 1 122 1 80 1 253 2 284 1 82 1 45 1 84 1 11 4 211 1 264 1 265 2 98 1 141 1 57 1 278 8 153 1 111 1 192 2 323 1 243 4 77 1 41 1 
162 1 202 1 122 1 80 2 253 4 284 1 44 1 45 1 82 2 84 1 287 1 11 6 211 1 133 1 264 2 265 2 98 1 141 2 57 1 58 1 278 11 153 1 111 1 192 3 243 5 323 2 77 2 41 1 
80 2 253 4 284 1 82 2 3 1 84 1 290 1 11 6 133 2 264 2 265 1 141 2 57 1 58 2 147 1 278 11 153 1 111 1 192 1 112 1 241 1 243 5 323 2 158 1 77 1 
58 2 80 1 57 1 253 2 284 1 147 1 3 1 82 1 84 1 290 1 11 6 278 10 153 1 192 1 111 1 133 2 241 1 264 1 265 1 158 1 323 2 243 4 141 1 77 1 
162 1 122 1 80 1 253 2 284 1 82 1 45 1 84 1 11 4 211 1 264 1 265 2 98 1 141 1 57 1 278 8 153 1 111 1 192 2 323 1 243 4 77 1 41 1 
58 2 80 1 57 1 253 2 284 1 147 1 3 1 82 1 84 1 290 1 11 6 278 10 153 1 192 1 111 1 133 2 241 1 264 1 265 1 158 1 323 2 243 4 141 1 77 1 
80 3 253 6 284 1 44 1 3 1 82 3 84 1 290 1 11 6 133 2 264 3 265 1 141 3 57 1 58 2 147 1 278 11 153 1 111 1 192 1 112 1 241 1 243 5 323 2 158 1 77 1 
80 3 253 6 284 1 3 1 82 3 84 1 290 1 11 6 133 2 264 3 265 2 141 3 57 1 58 2 147 1 278 11 153 1 111 1 240 1 192 2 112 1 241 1 243 5 323 2 158 1 77 1 
162 2 45 3 84 1 287 3 278 7 11 3 211 1 192 6 265 3 243 4 323 1 98 1 41 3 
80 3 253 6 284 1 3 1 82 3 84 1 290 1 11 6 133 2 264 3 265 1 141 3 57 1 58 2 147 1 278 11 153 1 111 1 240 1 192 1 112 1 241 1 243 5 323 2 158 1 77 1 
162 1 122 1 80 2 253 4 82 2 45 1 84 1 287 1 278 8 11 4 211 1 192 3 112 1 264 2 265 2 323 1 243 4 98 1 141 2 41 1 
162 1 122 1 45 1 84 1 11 3 278 6 211 1 192 2 265 2 243 3 323 1 98 1 200 1 41 1 
80 1 58 1 253 2 44 1 82 1 84 1 287 1 11 2 278 4 192 2 133 1 264 1 265 1 243 2 158 1 323 1 141 1 
202 1 57 1 58 1 284 1 84 1 287 1 278 7 11 3 192 2 133 1 265 1 158 1 243 4 323 1 77 2 
162 1 202 1 122 1 80 2 253 4 45 2 82 2 84 3 287 4 164 1 11 11 211 1 133 2 262 1 264 2 265 5 98 1 141 2 56 1 58 2 57 2 278 23 192 9 112 2 323 3 243 12 158 2 77 2 41 2 
243 1 77 1 278 1 
57 1 278 1 11 1 
80 1 58 1 253 2 44 1 82 1 84 1 287 1 278 6 11 3 192 3 133 1 264 1 265 2 243 3 323 1 158 1 266 1 141 1 
58 2 80 1 57 1 253 2 284 1 147 1 3 1 82 1 84 1 290 1 11 6 278 10 153 1 192 1 111 1 133 2 241 1 264 1 265 1 158 1 323 2 243 4 141 1 77 1 
211 1 192 2 45 1 84 1 265 1 287 1 243 3 323 1 41 1 278 6 11 3 
162 1 56 1 80 1 253 2 45 1 82 1 287 1 11 1 278 3 192 2 112 1 264 1 265 1 243 2 98 1 141 1 41 1 
80 1 253 2 82 1 45 2 84 2 287 2 210 1 11 5 278 10 153 1 211 1 192 5 264 1 265 3 243 5 323 2 141 1 41 2 
80 1 253 2 82 1 287 1 11 2 278 2 153 1 192 1 133 1 264 1 323 1 141 1 
80 1 58 1 253 2 82 1 84 1 287 1 11 2 278 4 153 1 192 2 133 1 264 1 265 1 243 2 158 1 323 1 141 1 
56 1 80 3 253 6 82 3 45 1 287 1 278 3 11 1 153 1 112 1 240 1 192 2 264 3 265 1 243 2 141 3 41 1 
162 1 202 1 122 1 80 5 253 10 284 1 44 1 45 3 82 5 84 5 287 5 11 16 211 2 261 1 133 3 97 1 264 5 265 7 98 1 141 5 56 1 57 3 58 3 278 34 153 1 112 2 240 1 192 12 243 18 323 5 158 3 159 1 77 4 41 3 
163 1 303 1 92 1 
163 1 169 1 110 1 309 1 183 1 303 1 288 1 92 1 
260 1 204 1 213 1 14 1 51 1 5 1 233 1 116 1 20 1 315 1 200 1 
204 1 182 1 229 1 105 1 205 1 5 1 311 1 61 1 233 1 315 1 316 1 213 1 51 1 197 1 116 1 20 1 102 1 
59 1 204 1 182 1 229 1 105 1 205 1 311 1 61 1 233 1 315 1 316 1 213 1 51 1 197 1 116 1 20 1 102 1 
59 1 204 1 182 1 229 1 105 1 205 1 311 1 61 1 233 1 315 1 212 1 213 1 51 1 197 1 116 1 20 1 102 1 
121 1 103 1 59 1 226 1 204 1 229 1 125 1 233 4 107 1 187 1 315 1 190 1 213 1 299 1 51 1 302 1 116 1 20 1 
121 1 103 1 59 1 204 1 229 1 125 1 233 4 107 1 187 1 315 1 213 1 214 1 299 1 51 1 302 1 116 1 20 1 
204 1 213 1 51 1 228 1 116 1 20 1 
225 1 120 1 145 1 204 2 228 1 229 1 5 2 7 1 233 3 315 2 29 1 297 1 213 6 51 7 195 1 18 1 116 7 20 3 267 1 305 1 249 1 
182 1 205 1 105 1 311 1 61 1 102 1 
121 1 103 1 104 1 5 1 125 1 26 1 233 2 258 1 170 1 214 1 213 1 299 1 51 1 302 1 217 1 196 1 324 1 99 1 76 1 116 1 
121 1 120 1 204 1 228 1 123 1 229 1 233 2 315 1 213 2 51 2 116 2 20 2 267 1 
204 1 5 1 48 1 233 1 315 1 260 1 213 4 71 1 51 4 14 1 116 4 20 1 267 1 
59 1 145 1 204 1 229 1 150 1 233 1 64 1 315 1 213 2 172 1 51 2 18 1 116 2 20 2 
132 1 81 1 204 1 213 1 33 1 51 1 5 1 116 1 20 1 9 1 
68 1 204 1 213 2 51 2 233 1 116 2 20 1 315 1 267 1 249 1 305 1 
225 1 59 1 204 2 5 1 233 3 315 2 260 1 213 4 297 1 71 1 14 1 51 5 116 5 20 2 267 1 249 1 
59 1 204 2 5 1 233 3 315 2 260 1 69 1 213 4 297 1 71 1 14 1 51 5 116 5 20 2 267 1 249 1 
204 1 182 1 229 1 105 1 205 1 5 1 311 1 61 1 233 1 315 1 212 1 213 1 51 1 197 1 116 1 20 1 102 1 
120 1 59 1 145 1 204 1 229 1 233 1 315 1 29 1 213 1 51 1 18 1 116 1 20 2 
182 1 205 1 149 1 126 1 295 1 156 1 244 1 114 1 102 1 
126 1 186 1 54 1 
156 1 126 1 244 1 140 1 
42 1 182 1 205 1 105 1 285 1 311 1 125 1 126 1 186 1 168 1 32 1 299 1 217 1 17 1 54 1 102 1 201 1 55 1 
283 1 296 1 87 1 200 1 
223 1 283 1 296 1 215 1 136 1 87 1 165 1 
1 1 136 1 174 1 
223 1 283 1 296 1 215 1 181 2 310 1 173 1 230 1 136 3 87 1 165 3 118 1 
131 1 223 1 283 1 296 1 215 1 136 2 87 1 165 2 89 1 
223 1 283 1 81 1 310 1 148 1 165 1 215 1 33 1 136 1 15 1 160 1 
223 1 283 1 215 1 310 1 136 1 87 1 165 1 
223 1 296 1 215 1 310 1 136 1 87 2 165 1 
223 2 283 1 310 1 87 1 165 2 31 1 319 1 215 2 281 1 136 2 
223 1 283 2 310 1 87 1 165 3 89 2 237 1 296 1 215 1 136 3 326 1 161 1 160 1 
223 1 283 1 81 2 310 1 207 1 87 1 165 2 89 1 9 1 296 1 215 1 33 1 136 2 15 1 78 1 
223 2 252 1 283 2 310 1 87 1 165 4 89 2 237 1 131 1 296 1 215 2 136 4 160 1 
223 1 283 1 296 1 215 1 310 1 136 1 87 1 165 1 
223 1 283 3 181 1 230 1 85 1 87 2 165 4 89 2 237 1 296 2 215 1 173 1 136 4 160 1 
223 1 283 1 310 1 87 1 165 2 8 1 89 1 67 1 215 1 296 1 136 2 322 1 
223 1 283 1 310 1 181 2 230 1 165 3 87 1 215 1 296 1 173 2 136 3 79 1 
283 2 176 2 2 1 273 1 
223 1 215 1 310 1 136 1 165 1 317 1 
223 1 283 1 296 1 215 1 310 1 136 2 87 1 165 2 89 1 161 1 
21 1 
223 1 283 1 296 1 215 1 310 1 136 1 87 1 165 1 
223 1 283 1 310 1 181 1 165 3 87 1 89 1 215 1 296 1 136 3 161 1 
283 1 85 1 160 1 237 1 
283 1 87 1 

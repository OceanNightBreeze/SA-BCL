#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 267 (158,203,244,266) 233 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 267 320 300 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 267 320 300 341 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 267 320 300 341 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 327 172 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 327 172 93 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 327 309 63 239 (96,160) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 327 98 204 154 340 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 327 17 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 305 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 305 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 305 330 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 305 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 327 98 256 59 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 327 172 264 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 327 172 164 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 327 172 170 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 327 309 63 239 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 327 309 63 239 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 327 172 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 327 172 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 327 281 6 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 327 281 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 327 281 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 327 281 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 327 281 6 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 327 172 170 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 327 172 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 327 98 204 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 327 98 256 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 327 98 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 327 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 327 309 153 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 327 78 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 231 102 214 182 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 327 309 63 91 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 231 102 214 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 327 98 204 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 327 98 204 205 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 231 102 214 (112,297) (112,297) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 267 (158,203,244,266) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 267 320 338 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 267 320 339 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 267 320 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 1 61 1 344 1 186 1 294 1 221 1 
289 1 61 1 344 1 186 1 294 1 221 1 
289 1 61 1 344 1 186 1 294 1 221 1 
289 1 61 1 344 1 186 1 294 1 221 1 
317 1 200 1 158 1 289 2 61 1 344 1 126 1 233 1 267 1 294 2 16 1 221 1 
30 1 161 1 152 1 237 1 200 1 289 2 2 1 61 1 40 1 350 1 344 1 46 1 138 1 294 2 209 1 221 1 
200 1 300 1 320 1 289 2 61 2 344 2 267 1 350 1 294 2 16 1 221 1 
200 1 289 3 61 2 350 1 267 1 16 1 341 1 300 1 244 1 320 1 344 2 126 1 294 3 221 1 
200 1 289 3 61 2 350 1 267 1 16 1 341 1 300 1 244 1 320 1 344 2 126 1 294 3 221 1 
288 1 265 1 136 1 
288 1 43 2 54 1 
1 2 124 2 60 2 348 2 108 2 334 1 293 2 185 1 
335 1 1 3 146 1 60 3 24 1 118 1 92 2 185 1 269 1 213 1 318 2 67 2 124 2 301 1 150 1 246 1 127 1 101 1 321 1 276 1 348 2 172 1 108 2 106 2 326 1 36 1 327 1 280 1 229 1 232 1 56 1 85 1 293 2 
156 1 1 1 124 1 60 1 348 1 108 1 293 1 185 1 4 1 260 1 
288 1 1 2 116 1 60 2 23 1 348 2 108 1 314 1 185 1 4 1 315 1 240 1 156 2 342 1 124 1 136 1 291 1 293 1 177 1 236 1 260 1 
288 1 1 1 116 2 60 1 23 1 348 1 108 1 315 1 240 1 156 1 342 2 124 1 136 1 291 1 293 1 
104 1 342 1 116 1 268 1 11 1 
288 1 7 1 342 2 116 2 201 1 136 1 268 1 11 1 
342 1 116 1 268 1 
1 1 116 1 60 1 348 1 108 1 4 1 185 1 156 1 342 1 124 1 293 1 11 1 236 1 260 1 
288 1 
288 1 7 1 13 1 342 2 116 2 136 1 268 1 11 1 
182 1 1 1 0 1 116 5 60 1 185 1 4 1 268 2 214 2 27 1 342 5 7 1 243 1 124 1 195 1 102 2 197 2 11 2 288 2 346 1 48 3 153 1 348 1 202 1 108 1 14 1 73 1 357 2 156 1 77 3 309 1 136 2 20 2 257 2 293 1 236 1 260 1 
265 1 334 1 
1 2 145 1 60 2 348 2 108 1 50 1 124 1 293 1 334 2 
96 1 89 1 278 1 
1 1 146 1 60 1 106 1 24 1 118 1 92 1 326 1 213 1 269 1 318 1 229 1 334 1 235 1 101 1 321 1 
1 2 146 1 60 2 348 1 118 1 108 1 106 1 24 1 326 1 92 1 269 1 213 1 96 1 318 1 124 1 229 1 125 1 19 1 101 1 321 1 
1 3 124 3 60 3 348 3 19 1 108 3 293 1 334 1 
156 1 1 1 124 1 60 1 348 1 108 1 260 1 
156 1 1 1 145 1 124 1 60 1 348 1 108 1 50 1 293 1 
1 4 116 1 146 1 60 4 23 1 118 1 24 1 92 1 93 1 315 1 185 1 269 1 213 1 240 1 318 1 67 2 342 1 124 3 301 1 125 1 150 1 127 1 101 1 321 1 348 3 172 1 108 3 106 1 326 1 50 1 36 1 156 1 327 1 280 1 229 1 291 1 19 1 232 1 56 1 85 1 178 1 293 2 
1 2 60 2 348 2 33 1 108 1 314 1 156 1 8 1 124 1 19 1 334 1 
288 1 1 3 116 1 60 3 23 1 348 3 108 3 325 1 50 1 315 1 240 1 156 1 342 1 124 3 125 1 19 2 291 1 293 1 178 1 
1 2 60 2 348 2 108 2 50 1 278 1 96 1 124 2 19 1 293 1 
1 1 146 1 60 1 106 1 24 1 118 1 92 1 326 1 213 1 269 1 318 1 229 1 334 1 101 1 321 1 
1 1 146 1 60 1 106 1 118 1 92 1 326 1 269 1 318 1 42 1 328 1 229 1 334 1 101 1 321 1 
160 1 239 1 63 1 36 1 309 1 327 1 67 2 218 1 301 1 280 1 150 1 56 1 85 1 
156 1 1 1 124 1 23 1 60 1 348 1 108 1 286 1 
1 5 60 5 348 5 33 1 108 4 50 1 314 1 156 1 8 1 124 4 194 1 125 1 19 2 140 1 293 1 334 1 
156 1 1 2 124 2 60 2 348 2 108 2 286 1 260 1 
255 1 303 1 
255 1 303 1 
159 1 333 1 
159 1 333 1 
159 1 333 1 
223 1 255 1 303 1 
358 1 255 1 303 1 
141 1 255 2 159 1 303 2 333 1 9 1 
223 1 255 1 303 1 
223 1 255 1 303 1 
149 1 255 1 303 1 
149 1 255 1 303 1 
149 1 255 1 303 1 
141 1 288 1 180 2 86 1 224 3 143 1 116 2 163 1 226 1 252 2 191 1 111 1 319 1 342 2 255 2 55 2 303 2 245 2 198 2 
180 1 86 1 1 2 116 1 60 2 95 1 188 1 190 1 166 1 342 1 124 2 245 1 303 1 224 1 348 2 108 2 72 1 52 1 252 1 358 1 255 1 55 1 81 1 334 1 
152 1 138 1 58 1 
152 1 138 1 40 1 
152 3 181 1 99 1 250 1 40 1 58 2 
152 2 99 1 250 1 345 1 40 1 58 1 
152 2 99 2 250 1 40 1 58 1 
115 1 296 1 0 1 116 5 63 1 91 1 184 2 268 1 316 1 188 1 122 2 43 3 7 1 342 5 100 2 197 1 11 4 249 1 288 2 48 2 72 1 14 1 52 1 354 1 309 1 77 3 80 1 136 1 54 1 20 1 257 1 259 1 
0 3 91 3 97 1 188 4 7 1 43 9 100 6 197 2 11 7 104 5 12 1 288 5 249 3 48 6 14 1 157 1 54 3 20 2 257 2 296 2 115 1 116 9 210 1 63 3 268 6 122 6 342 9 168 5 220 1 346 1 32 1 356 1 77 8 309 3 80 2 136 1 
296 1 0 1 116 3 63 1 91 1 184 1 188 1 122 2 342 3 43 4 100 2 11 2 197 1 12 1 288 3 249 1 346 1 48 2 354 1 309 1 77 3 80 1 136 1 54 2 20 1 257 1 259 1 
296 1 0 2 116 4 210 1 63 2 91 2 184 2 188 2 122 4 43 7 342 4 100 4 197 1 11 3 12 1 288 4 249 2 346 1 48 4 32 1 354 1 356 1 309 2 77 5 80 1 136 1 54 3 20 1 257 1 259 1 
146 1 265 1 83 1 
225 1 146 1 
312 1 
146 1 326 1 
146 3 359 1 326 1 26 1 83 2 269 1 
146 1 326 1 269 1 
253 1 146 1 
31 1 38 1 147 1 297 1 175 1 214 1 112 1 231 1 84 1 102 1 10 1 
31 1 38 1 147 1 297 1 175 1 214 1 112 1 231 1 84 1 102 1 10 1 
31 1 38 1 147 1 297 1 175 1 214 1 148 1 112 1 231 1 84 1 102 1 10 1 
340 1 327 1 98 1 31 1 38 1 204 1 84 1 175 1 154 1 10 1 
31 1 38 1 175 1 36 1 17 1 327 1 67 2 301 1 280 1 44 1 150 1 84 1 10 1 
237 1 181 1 88 1 2 1 61 1 90 1 92 1 40 1 187 1 318 1 68 1 344 1 126 1 29 1 321 1 221 1 152 2 200 1 289 2 106 1 350 1 15 1 290 1 109 1 132 1 230 1 229 1 138 1 58 1 294 2 
237 1 181 1 2 1 61 1 90 1 92 1 40 1 241 1 318 1 123 1 68 1 344 1 29 1 126 2 321 1 152 2 200 1 289 3 106 1 350 1 15 1 290 1 109 1 132 1 230 1 229 1 138 1 58 1 139 1 294 3 
237 1 181 1 2 1 92 1 40 1 241 1 318 1 68 1 29 1 126 2 321 1 152 2 200 1 289 2 106 1 350 1 15 1 109 1 132 1 230 1 229 1 138 1 58 1 139 1 294 2 
146 1 165 1 61 1 92 1 119 1 318 1 123 1 68 2 343 1 344 1 196 1 29 2 101 1 321 1 275 1 289 1 106 1 34 1 326 1 350 2 230 2 229 1 294 1 
181 1 88 1 61 1 90 1 92 1 40 1 318 1 68 1 344 1 29 1 321 1 221 1 152 2 289 1 106 1 350 1 15 1 290 1 109 1 132 1 230 1 229 1 138 1 58 1 139 1 294 1 
28 1 
1 1 183 2 146 1 92 2 314 1 41 2 315 1 240 1 318 2 192 1 43 2 7 3 45 1 196 1 101 2 197 1 321 1 288 2 48 2 14 1 106 2 326 1 156 1 329 1 208 1 54 2 331 4 291 1 257 1 20 1 296 1 116 5 60 1 23 1 337 2 119 1 268 6 121 2 66 1 342 5 219 2 273 2 306 1 348 1 173 1 351 1 174 1 228 1 352 1 131 1 77 2 136 1 229 1 360 2 177 1 
1 1 116 3 60 1 23 1 337 1 314 1 315 1 268 2 240 1 66 1 192 1 342 3 7 1 13 1 348 1 173 1 352 1 228 1 156 1 331 2 291 1 177 1 
1 1 116 2 23 1 60 1 348 1 173 1 314 1 315 1 228 1 352 1 240 1 121 1 66 1 156 1 192 1 342 2 331 3 291 1 177 1 
1 1 116 3 60 1 23 1 337 1 314 1 315 1 268 2 240 1 66 1 121 1 192 1 7 1 342 3 219 1 13 1 348 1 173 1 352 1 228 1 156 1 331 3 291 1 177 1 
1 2 116 3 60 2 23 1 337 2 314 1 185 1 4 1 268 3 315 1 240 1 66 1 192 1 7 1 342 3 124 1 219 2 304 1 288 1 13 1 348 2 108 1 173 1 352 1 228 1 156 2 330 1 136 1 331 2 291 1 293 1 177 1 236 1 260 1 
1 1 183 2 314 1 41 2 315 1 240 1 192 1 43 2 7 2 45 1 197 1 288 2 48 1 14 1 156 1 331 4 54 2 208 1 291 1 257 1 20 1 116 4 23 1 60 1 337 2 268 4 66 1 121 2 342 4 219 2 273 2 348 1 173 1 174 1 228 1 352 1 77 1 136 1 360 2 177 1 
1 1 116 2 23 1 60 1 348 1 173 1 314 1 315 1 228 1 352 1 240 1 66 1 156 1 192 1 342 2 331 2 291 1 177 1 305 1 
1 1 116 2 23 1 60 1 348 1 173 1 314 1 315 1 228 1 352 1 240 1 66 1 156 1 192 1 342 2 331 2 291 1 177 1 305 1 
295 1 1 1 183 2 116 4 60 1 23 1 337 2 314 1 268 4 315 1 240 1 121 2 120 1 66 1 192 1 7 2 43 2 342 4 193 1 219 2 45 1 273 2 128 1 197 1 288 1 105 2 48 1 348 1 14 1 173 1 352 1 228 1 77 1 156 1 136 1 331 4 291 1 257 1 20 1 362 2 177 1 
1 1 116 2 23 1 60 1 337 1 348 1 173 1 314 1 268 1 315 1 228 1 352 1 240 1 121 1 66 1 156 1 192 1 342 2 330 1 219 1 331 3 291 1 177 1 305 1 
1 1 116 2 23 1 60 1 337 1 348 1 173 1 314 1 268 1 315 1 228 1 352 1 240 1 121 1 66 1 156 1 192 1 342 2 330 1 219 1 331 3 291 1 177 1 305 1 
1 1 183 2 314 1 315 1 240 1 192 1 43 2 7 2 45 1 197 1 288 1 105 2 48 1 14 1 156 1 331 4 208 1 291 1 257 1 20 1 116 4 23 1 60 1 337 2 268 4 120 1 66 1 121 2 342 4 219 2 273 2 348 1 173 1 228 1 352 1 77 1 136 1 177 1 362 2 
265 1 297 1 36 1 214 1 67 2 218 1 301 1 280 1 112 1 231 1 150 1 56 1 85 1 102 1 
327 1 98 1 59 1 67 2 280 1 301 1 256 1 150 1 56 1 36 1 85 1 212 1 
1 1 264 1 60 1 348 1 172 1 108 1 36 1 212 1 327 1 67 2 124 1 280 1 125 1 301 1 19 1 150 1 56 1 85 1 
1 1 164 1 60 1 348 1 172 1 106 1 108 1 92 1 36 1 212 1 318 1 327 1 67 2 124 1 280 1 125 1 301 1 19 1 150 1 56 1 101 1 85 1 
103 1 38 1 172 1 106 1 92 1 36 1 318 1 327 1 67 2 301 1 280 1 150 1 56 1 84 1 85 1 101 1 170 1 222 1 
249 1 0 1 1 1 60 1 38 1 348 1 63 1 91 1 108 1 50 1 212 1 36 1 309 1 327 1 67 2 124 1 301 1 280 1 150 1 56 1 84 1 85 1 293 1 363 1 
249 1 0 1 89 1 38 2 278 1 36 1 299 1 96 1 76 1 67 2 218 1 301 1 280 1 150 1 56 1 292 1 84 2 85 1 
309 1 327 1 67 2 280 1 301 1 218 1 63 1 239 1 150 1 56 1 36 1 85 1 
249 1 0 1 89 1 38 2 63 1 91 1 278 1 36 1 96 1 309 1 327 1 67 2 218 1 301 1 280 1 150 1 56 1 84 2 85 1 
249 1 0 1 89 1 38 2 278 1 36 1 299 1 96 1 76 1 67 2 301 1 280 1 150 1 56 1 292 1 84 2 85 1 222 1 
309 1 327 1 67 2 280 1 301 1 63 1 239 1 150 1 56 1 36 1 85 1 222 1 
249 1 0 1 89 1 38 2 63 1 91 1 278 1 36 1 96 1 309 1 327 1 67 2 301 1 280 1 150 1 56 1 84 2 85 1 222 1 
249 1 0 1 89 1 38 2 63 1 91 1 278 1 36 1 96 1 309 1 327 1 67 2 301 1 280 1 150 1 56 1 84 2 85 1 
1 1 146 1 60 1 172 1 106 1 24 1 118 1 92 1 326 1 36 1 213 1 269 1 318 1 327 1 67 2 280 1 301 1 229 1 150 1 56 1 127 1 85 1 101 1 321 1 
1 1 146 1 60 1 172 1 106 1 118 1 92 1 326 1 298 1 36 1 269 1 318 1 327 1 67 2 42 1 328 1 280 1 301 1 229 1 150 1 56 1 85 1 101 1 321 1 
249 1 0 1 89 1 38 2 63 1 91 1 278 1 212 1 36 1 96 1 309 1 327 1 67 2 301 1 280 1 150 1 56 1 84 2 85 1 
0 1 1 1 146 1 89 1 60 1 38 2 63 1 118 1 24 1 91 1 92 1 269 1 213 1 187 1 96 1 318 1 67 2 301 1 150 1 127 1 321 1 249 1 106 1 326 1 278 1 227 1 36 1 309 1 327 1 229 1 280 1 56 1 84 2 85 1 
1 1 0 1 60 1 89 1 38 2 63 1 91 1 212 1 96 1 67 2 124 1 301 1 150 1 249 1 348 1 108 1 50 1 278 1 36 1 309 1 327 1 280 1 56 1 282 1 84 2 293 1 85 1 
254 1 327 1 6 1 67 2 281 1 280 1 301 1 44 1 150 1 47 1 36 1 287 1 
254 1 327 1 6 1 67 2 281 1 280 1 301 1 44 1 150 1 47 1 36 1 287 1 
254 1 327 1 6 1 67 2 281 1 280 1 301 1 44 1 150 1 47 1 36 1 287 1 
254 1 327 1 6 1 67 2 281 1 280 1 301 1 44 1 150 1 47 1 36 1 287 1 
254 1 327 1 6 1 67 2 281 1 280 1 301 1 44 1 150 1 47 1 36 1 287 1 
252 1 191 1 141 1 180 1 111 1 255 1 55 1 245 1 303 1 155 1 
190 1 358 1 
252 1 180 1 255 1 37 1 18 1 55 1 113 1 245 1 303 1 
141 1 288 1 180 1 86 1 224 2 143 1 116 1 163 1 226 1 252 1 191 1 111 1 342 1 255 1 55 1 303 1 245 1 198 1 
141 1 288 1 180 1 86 1 224 2 143 1 116 1 163 1 226 1 252 1 191 1 111 1 342 1 255 1 55 1 303 1 245 1 198 1 
141 1 288 1 180 1 86 1 224 2 143 1 116 1 163 1 226 1 252 1 191 1 111 1 342 1 255 1 55 1 303 1 245 1 198 1 
223 1 3 1 9 1 
223 1 3 1 9 1 
270 1 149 1 
270 1 149 1 9 1 
166 1 95 1 
180 1 87 1 1 2 116 1 163 1 60 2 95 1 188 1 190 1 166 1 342 1 124 2 245 1 303 1 198 1 11 1 224 1 348 2 72 1 108 2 52 1 252 1 358 1 255 1 55 1 81 1 334 1 
223 1 3 1 
270 1 149 1 9 1 
103 1 22 1 1 2 60 2 38 1 348 2 172 1 36 1 212 1 167 1 327 1 67 2 134 1 280 1 301 1 150 1 56 1 84 1 248 1 85 1 170 1 
152 2 181 1 90 1 106 2 92 2 40 1 109 1 187 1 318 2 132 1 68 1 229 1 310 1 138 1 58 1 247 1 139 1 129 1 321 1 
152 2 181 1 90 1 106 1 92 1 64 1 40 1 109 1 318 1 132 1 68 1 229 1 138 1 58 1 247 1 139 1 321 1 
142 1 146 1 165 1 106 1 326 1 92 1 119 1 318 1 68 1 229 1 196 1 101 1 129 1 321 1 
152 2 181 1 90 1 106 1 92 1 40 1 109 1 318 1 132 1 68 1 310 1 229 1 138 1 58 1 247 1 139 1 129 1 321 1 
322 1 
288 1 77 1 48 1 243 1 265 1 136 1 73 1 
116 1 41 1 268 1 43 1 7 1 342 1 197 1 288 2 48 1 14 1 174 1 77 1 136 1 54 1 360 1 20 1 257 1 
284 2 0 2 146 6 91 2 92 1 5 1 240 2 318 1 7 3 43 12 100 6 101 1 321 2 197 3 199 2 288 7 249 2 12 2 48 7 14 3 106 1 326 1 54 6 332 1 257 3 20 3 258 1 296 2 116 5 62 2 63 2 26 1 268 5 269 1 122 6 342 5 306 1 171 2 225 3 279 2 77 8 309 2 136 1 229 1 176 2 83 2 
296 1 0 2 116 1 117 1 91 2 63 2 211 1 268 1 215 1 122 5 98 1 342 1 7 1 43 6 69 1 100 5 197 2 306 1 12 1 288 5 249 2 347 1 48 5 14 2 204 1 205 1 130 1 357 2 77 8 309 2 79 1 136 2 54 3 20 2 257 2 
182 1 1 1 0 2 116 1 60 1 4 1 185 1 214 1 342 1 124 1 102 1 197 1 12 1 48 2 153 1 348 1 14 1 107 1 108 1 357 2 156 1 309 1 77 2 20 1 257 1 293 1 236 1 260 1 
288 1 48 1 14 1 73 1 77 1 243 1 136 1 257 1 20 1 197 1 
249 1 288 2 12 1 0 1 48 2 91 1 63 1 122 2 77 2 309 1 43 4 100 2 54 2 
288 1 342 1 116 1 7 1 136 1 268 1 
296 2 144 1 116 3 146 2 313 1 92 4 119 1 268 4 269 1 318 4 7 2 342 3 196 1 101 2 321 3 197 2 151 2 306 2 346 1 48 2 14 1 106 4 326 2 351 1 308 1 355 1 77 2 329 1 229 2 82 1 311 1 20 2 257 2 57 1 
1 3 146 1 60 3 24 1 118 1 92 1 185 1 213 1 269 1 318 1 67 2 124 2 301 1 150 1 127 1 101 1 321 1 348 2 172 1 106 1 108 2 326 1 36 1 327 1 280 1 229 1 232 1 56 1 293 2 85 1 
306 1 296 1 288 4 31 1 48 2 14 1 122 2 77 1 43 4 100 2 136 2 54 2 257 1 20 1 197 1 
336 1 55 1 245 1 
191 1 166 1 55 1 245 1 207 1 
336 1 55 1 245 1 
336 1 55 1 245 1 
55 1 245 1 277 1 
55 1 245 1 277 1 
55 1 245 1 277 1 
55 1 245 1 
255 1 303 1 
349 1 297 1 36 2 214 1 67 4 301 2 280 2 112 1 231 1 150 2 102 1 
265 1 112 1 231 1 297 1 102 1 214 1 
249 1 0 1 38 2 91 1 63 1 36 1 251 1 309 1 327 1 67 2 301 1 280 1 150 1 84 2 
327 1 98 1 204 1 
327 1 98 1 256 1 
327 1 98 1 
38 1 84 1 215 1 
199 1 327 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
309 1 327 1 0 1 153 1 38 1 84 1 
78 1 327 1 
182 1 231 1 102 1 214 1 
249 1 0 1 38 2 36 1 299 1 67 2 301 1 280 1 44 1 150 1 292 1 84 2 
249 1 0 1 38 2 91 1 63 1 36 1 309 1 327 1 67 2 301 1 280 1 44 1 150 1 84 2 
67 2 280 1 301 1 44 1 231 1 150 1 36 1 102 1 214 1 
327 1 98 1 67 6 280 3 301 3 44 1 150 3 71 1 204 1 36 3 154 1 251 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
327 1 98 1 67 4 280 2 301 2 44 1 150 2 204 1 205 1 36 2 251 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
327 1 98 1 67 2 280 1 301 1 44 1 150 1 204 1 205 1 36 1 
327 1 98 1 67 4 280 2 301 2 44 1 150 2 204 1 205 1 36 2 251 1 
327 1 98 1 67 4 280 2 301 2 44 1 150 2 71 1 204 1 205 1 36 2 
112 1 231 1 297 1 102 1 214 1 
327 1 98 1 67 4 280 2 301 2 44 1 150 2 71 1 204 1 205 1 36 2 
1 1 60 1 348 1 33 1 314 1 156 1 8 1 272 1 334 1 
263 1 1 1 324 1 60 1 348 1 33 1 314 1 94 1 156 1 216 1 217 1 8 1 272 1 334 1 
318 1 146 1 265 1 229 1 106 1 326 1 196 1 92 1 119 1 101 1 321 1 
1 2 146 1 60 2 348 1 118 1 108 1 106 1 326 1 92 1 269 1 213 1 318 1 124 1 229 1 19 1 334 1 101 1 321 1 
151 1 1 2 146 3 23 1 60 2 348 2 39 1 118 1 108 2 106 1 326 2 92 1 315 1 269 2 213 1 253 1 156 1 318 1 124 1 229 1 19 1 334 1 321 1 
151 1 1 2 146 3 23 1 60 2 348 2 39 1 118 1 108 2 106 2 326 2 92 2 315 1 269 2 353 1 253 1 156 1 318 2 42 1 124 1 229 1 19 1 334 1 321 1 
1 1 116 1 146 1 60 1 92 1 4 1 185 1 318 1 342 1 124 1 151 1 288 1 225 1 348 1 106 1 108 1 156 1 136 1 361 1 293 1 236 1 260 1 
284 1 1 1 116 1 146 1 60 1 92 1 4 1 185 1 318 1 342 1 124 1 151 1 288 1 225 1 348 1 106 1 108 1 156 1 136 1 293 1 236 1 260 1 
318 1 229 1 106 1 92 1 321 1 65 1 
335 1 49 1 146 3 106 6 92 7 26 1 326 2 65 1 75 1 206 1 269 1 187 1 110 1 355 1 318 7 229 2 302 1 311 1 139 1 101 2 321 3 
1 2 146 1 60 2 118 1 24 1 297 1 92 1 212 1 214 1 269 1 213 1 187 1 318 1 67 4 124 1 301 2 150 2 127 1 248 1 102 1 321 1 348 1 108 1 106 1 326 1 36 2 227 1 112 1 229 1 280 2 231 1 19 1 56 2 114 1 85 2 
284 1 116 3 146 2 62 1 92 1 268 2 240 1 318 1 243 1 342 3 7 1 101 1 197 2 11 1 288 1 48 1 171 1 225 1 106 1 14 2 73 1 308 1 77 1 136 1 176 1 20 2 257 2 83 1 
146 2 106 2 92 2 26 1 326 1 65 1 269 1 187 1 318 2 229 1 83 1 258 1 321 2 
146 1 106 4 92 4 326 1 119 1 353 1 187 1 189 1 318 4 229 1 196 1 101 1 321 1 
151 1 144 1 146 1 106 2 92 2 326 1 74 1 269 1 355 1 318 2 229 1 311 1 57 1 321 2 
152 1 318 1 229 1 106 1 92 1 138 1 40 1 109 1 101 1 321 1 
318 2 146 1 229 1 25 1 106 2 326 1 92 2 139 1 321 1 75 1 187 1 
151 1 146 3 106 4 92 5 326 2 119 1 206 1 75 1 187 1 189 1 110 1 318 5 229 2 196 1 101 1 321 2 
151 1 146 3 106 4 92 5 326 2 119 1 75 1 187 1 189 1 110 1 318 5 229 2 196 1 234 1 101 1 321 2 
1 2 146 1 60 2 348 1 118 1 108 1 106 1 326 1 92 1 269 1 318 1 42 1 124 1 229 1 19 1 334 1 101 1 321 1 
151 1 146 1 106 1 92 1 26 1 326 1 269 1 355 1 318 1 229 1 302 1 311 1 321 2 
307 1 53 1 70 1 334 1 274 1 
262 1 288 1 307 2 116 2 23 1 315 1 240 1 156 1 271 1 53 1 242 1 342 2 136 1 70 2 291 1 334 1 274 2 178 1 11 1 
22 1 307 1 1 1 60 1 348 1 167 1 53 1 134 1 70 1 
262 1 271 1 53 1 
237 1 200 1 265 1 2 1 
237 1 200 1 289 1 2 1 61 1 344 1 294 1 
230 1 289 1 350 1 
30 2 237 1 200 1 135 1 289 3 2 1 61 1 344 1 51 1 294 3 261 1 221 1 
317 1 237 1 200 1 289 2 2 1 61 1 344 1 126 1 294 2 
200 1 158 1 289 1 61 1 344 1 267 1 294 1 16 1 221 1 
237 1 200 1 289 1 61 1 344 1 294 1 221 1 
237 2 289 1 2 1 61 1 344 1 294 1 221 1 
237 1 200 1 289 2 238 1 61 2 169 1 344 2 294 2 221 1 323 1 
200 1 320 1 289 2 61 1 137 1 344 1 126 1 267 1 338 1 294 2 16 1 221 1 
152 2 237 1 181 1 200 1 289 2 2 1 61 1 40 1 35 1 344 1 138 1 126 1 58 1 294 2 221 1 
317 1 200 1 320 1 289 2 61 1 344 1 126 1 267 1 339 1 294 2 16 1 221 1 
237 1 200 1 289 1 2 1 61 1 344 1 294 1 221 1 
200 1 320 1 289 2 61 1 344 1 126 1 267 1 294 2 16 2 
237 1 200 1 244 1 289 2 2 1 61 1 203 1 266 1 344 1 126 1 294 2 221 1 
30 2 237 1 200 1 162 1 289 3 61 1 2 1 135 2 344 1 294 3 261 1 221 1 
283 1 133 1 200 2 285 2 
21 1 289 1 61 1 344 1 294 1 221 1 
237 1 200 1 289 2 2 1 61 1 137 1 344 1 126 1 294 2 221 1 
179 1 
237 1 200 1 289 1 2 1 61 1 344 1 294 1 221 1 
30 1 237 1 200 1 289 3 2 1 61 1 137 1 344 1 126 1 294 3 221 1 
200 1 289 1 320 1 126 1 267 1 294 1 
237 1 200 1 

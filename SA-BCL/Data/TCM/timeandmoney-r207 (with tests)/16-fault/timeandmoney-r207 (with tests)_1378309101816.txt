#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 45 271 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 45 271 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 45 271 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 45 271 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 45 271 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 33 90 93 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 291 46 332 225 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 33 90 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 33 90 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 349 298 68 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 349 298 68 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 349 298 68 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 349 298 68 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 349 298 68 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 291 (10,341) (10,341) 155 257 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 180 350 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 75 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 75 165 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 45 (81,224) (81,224) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 147 360 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
17 4 18 1 136 4 221 2 181 1 3 9 255 1 258 2 124 2 321 1 261 1 188 1 359 2 35 1 13 2 194 1 361 1 169 3 294 1 218 9 111 6 42 1 301 2 174 2 244 1 115 1 
188 1 17 4 18 1 136 4 359 2 221 2 181 1 35 1 3 9 13 2 194 1 361 1 169 3 294 1 255 1 111 6 258 2 218 9 301 2 42 1 174 2 321 1 124 2 261 1 244 1 115 1 
188 1 17 4 18 1 136 4 359 2 221 2 181 1 35 1 3 9 13 2 194 1 361 1 169 3 294 1 255 1 111 6 258 2 218 9 301 2 42 1 174 2 321 1 124 2 261 1 244 1 115 1 
188 1 17 3 18 1 136 3 359 2 221 2 181 1 35 1 3 7 13 1 194 1 361 1 169 2 294 1 255 1 111 4 258 2 218 7 301 2 42 1 174 2 321 1 124 2 244 1 115 1 
188 1 17 2 18 1 136 2 359 1 221 1 3 4 13 2 361 1 169 1 258 1 218 4 111 3 301 1 174 1 261 1 
136 1 359 1 215 1 3 2 223 1 194 1 146 1 361 1 196 1 258 1 218 2 301 1 87 1 174 1 321 1 124 1 
17 1 136 2 359 2 3 3 35 1 146 1 361 1 196 1 169 1 258 2 218 3 111 1 124 1 
188 1 177 1 17 4 18 1 136 4 221 1 359 2 3 9 35 1 13 2 361 1 160 1 169 3 294 1 255 1 258 2 218 9 111 7 301 1 174 1 124 1 261 1 
188 1 177 1 17 4 18 1 136 4 221 1 359 2 3 9 35 1 13 2 361 1 160 1 169 3 294 1 255 1 258 2 218 9 111 7 301 1 174 1 124 1 261 1 
130 1 241 1 48 1 
101 1 130 1 291 2 
216 2 228 2 239 2 329 1 192 1 22 2 91 2 266 2 
2 1 280 1 311 1 206 1 22 2 352 1 228 2 74 1 208 2 30 1 31 1 262 2 232 1 323 2 264 1 141 1 266 2 268 1 8 1 269 1 290 1 329 1 328 1 192 1 193 1 37 1 38 1 216 3 39 1 238 1 239 3 114 2 199 1 113 1 16 1 278 2 91 2 
216 1 283 1 228 1 239 1 270 1 192 1 22 1 201 1 91 1 266 1 
154 1 58 1 189 1 248 1 282 1 353 1 108 1 182 1 216 1 228 1 283 1 239 1 130 1 241 1 
154 2 248 1 22 1 282 1 353 2 108 1 182 1 216 1 228 1 283 1 239 1 130 1 241 1 266 1 91 1 
154 1 98 1 76 1 252 1 353 1 
154 2 285 1 130 1 241 1 76 1 252 1 353 2 185 1 
154 1 76 1 353 1 
154 1 270 1 252 1 192 1 22 1 353 1 216 1 283 1 228 1 239 1 201 1 54 1 266 1 91 1 
130 1 
154 2 130 1 241 1 76 1 319 1 252 1 353 2 185 1 
154 5 78 1 267 2 326 2 191 1 252 2 353 5 24 1 273 1 287 1 130 1 241 1 164 1 76 2 29 1 7 1 202 2 185 1 65 1 
216 3 228 3 28 1 239 3 329 1 22 3 266 1 91 3 
216 1 283 1 228 1 239 1 22 1 201 1 91 1 
66 1 216 1 283 1 228 1 239 1 22 1 313 1 91 1 266 1 
66 1 154 1 2 1 248 1 280 1 311 1 22 3 282 1 353 1 182 1 228 3 283 1 74 1 28 1 208 1 5 1 30 1 31 1 262 1 232 1 264 1 323 1 141 1 266 2 268 1 8 1 269 1 329 1 328 1 192 1 37 1 193 1 108 1 296 1 216 4 39 1 238 1 239 4 114 2 113 1 276 1 16 1 278 1 91 3 
216 2 228 2 189 1 239 2 28 1 329 1 343 1 22 1 91 1 
66 1 154 1 248 1 67 1 22 3 282 1 353 1 108 1 182 1 216 3 283 1 228 3 28 2 239 3 130 1 5 1 276 1 266 1 91 3 
66 1 156 1 22 2 216 2 228 2 28 1 239 2 266 1 91 2 56 1 
268 1 269 1 8 1 329 1 311 1 193 1 37 1 216 1 239 1 238 1 208 1 113 1 31 1 278 1 323 1 
268 1 269 1 8 1 329 1 190 1 311 1 37 1 216 1 85 1 239 1 238 1 208 1 113 1 278 1 323 1 
156 2 92 1 2 2 280 1 206 2 49 1 23 1 227 1 74 1 232 1 262 4 210 2 141 1 56 2 211 1 144 1 328 1 106 1 237 1 114 2 62 1 16 1 153 1 305 1 
216 1 283 1 228 1 239 1 22 1 303 1 108 1 91 1 
329 1 48 1 
66 1 216 2 228 2 239 2 329 2 22 1 313 1 91 1 266 1 
156 1 210 1 56 1 
268 1 8 1 269 1 329 1 311 1 193 1 37 1 216 1 239 1 238 1 208 1 113 1 31 1 278 1 323 1 306 1 
187 1 66 1 189 1 329 1 22 4 216 5 228 5 99 1 28 2 239 5 343 1 276 1 91 4 266 1 
216 2 283 1 228 2 239 2 303 1 22 2 201 1 91 2 
268 1 8 1 269 1 311 1 37 1 193 1 22 1 216 2 228 1 238 1 28 1 239 2 208 1 113 1 276 1 31 1 278 1 323 1 56 1 91 1 
94 1 6 1 245 1 
94 1 6 1 245 1 
94 1 314 1 245 1 
94 1 314 1 245 1 
94 1 314 1 245 1 
94 1 245 1 
94 1 245 1 
73 1 212 1 94 1 245 1 
73 1 212 1 94 1 245 1 
73 1 212 1 
94 1 6 1 245 1 
220 1 73 1 212 1 94 2 176 1 245 2 
94 1 12 1 245 1 
154 2 128 2 325 1 135 2 94 2 342 2 4 2 281 1 353 2 254 2 183 3 284 1 130 1 112 1 131 1 366 1 176 1 64 1 245 2 
154 1 135 1 178 1 247 1 94 1 22 2 353 1 254 1 228 2 183 1 184 1 322 1 128 1 329 1 342 1 12 1 36 1 216 2 274 1 239 2 131 1 133 1 245 1 91 2 
221 1 301 1 174 1 
215 1 301 1 174 1 
158 1 221 2 215 1 242 1 301 3 50 1 
158 1 221 1 215 1 242 1 301 2 260 1 
158 2 221 1 215 1 242 1 301 2 
154 5 247 1 310 1 252 4 353 5 227 1 101 1 76 1 7 1 29 3 126 1 340 1 185 1 341 2 211 1 144 1 267 1 326 1 327 1 34 1 80 1 10 2 191 2 291 3 83 2 274 1 241 1 130 2 151 1 133 1 153 1 202 1 
154 9 310 3 252 7 353 9 227 3 337 1 98 5 101 3 76 6 356 5 7 1 29 8 140 1 185 1 289 1 341 6 78 1 211 3 144 3 267 2 326 2 34 2 80 2 10 6 191 6 235 1 291 9 171 1 241 1 130 5 243 1 151 1 133 4 153 3 202 2 
154 3 310 1 252 2 353 3 227 1 101 2 29 3 340 1 126 1 341 2 211 1 267 1 78 1 144 1 326 1 34 1 80 1 191 2 10 2 291 4 83 1 241 1 130 3 133 1 153 1 202 1 
154 4 310 2 252 3 353 4 227 2 337 1 101 3 29 5 340 1 126 1 289 1 341 4 211 2 267 1 78 1 144 2 326 1 34 1 80 1 10 4 191 4 291 7 83 2 241 1 130 4 243 1 133 2 153 2 202 1 
268 1 8 1 
268 1 217 1 8 3 238 1 109 2 348 1 
8 1 48 1 109 1 
8 1 159 1 
179 1 
268 1 8 1 238 1 
8 1 9 1 
45 1 206 1 271 1 262 1 116 1 
45 1 206 1 271 1 262 1 116 1 
45 1 286 1 206 1 271 1 262 1 116 1 
45 1 206 1 271 1 262 1 116 1 
45 1 206 1 271 1 262 1 116 1 
136 1 221 1 3 2 97 1 50 1 70 1 229 1 258 1 208 1 231 1 124 1 358 1 323 1 269 1 359 1 215 1 146 1 361 1 196 1 297 1 110 1 111 1 218 2 275 1 301 2 174 1 113 1 278 1 152 1 333 1 
136 1 221 1 3 3 253 1 97 1 50 1 338 1 229 1 258 1 208 1 231 1 124 1 103 1 323 1 269 1 359 1 215 1 146 1 196 1 297 1 110 1 218 3 111 2 275 1 301 2 174 1 113 1 278 1 152 1 333 1 
136 1 221 1 3 2 253 1 97 1 50 1 229 1 208 1 231 1 124 1 103 1 323 1 269 1 215 1 146 1 196 1 110 1 218 2 111 2 275 1 301 2 113 1 174 1 278 1 333 1 
308 1 309 1 3 1 311 1 97 2 338 1 258 1 229 2 208 1 231 2 124 2 323 1 104 1 268 1 213 1 269 1 8 1 359 1 107 1 218 1 300 1 113 1 278 1 
221 1 3 1 97 1 50 1 229 1 258 1 208 1 231 1 124 1 358 1 103 1 323 1 269 1 359 1 215 1 361 1 297 1 110 1 218 1 275 1 301 2 174 1 113 1 278 1 152 1 333 1 
69 1 
44 4 46 1 222 2 96 1 282 1 182 1 228 1 283 1 101 2 7 1 104 1 185 3 58 1 189 1 8 1 105 2 60 2 191 2 11 1 291 2 195 1 292 1 108 1 198 1 239 1 241 1 113 1 202 1 154 5 204 2 248 1 21 1 251 1 311 2 353 5 162 1 76 6 208 2 29 2 259 1 323 2 268 1 267 1 213 1 326 1 269 1 80 1 167 2 216 1 172 2 130 2 41 1 219 1 175 2 278 2 
154 3 44 2 248 1 282 1 353 3 182 1 228 1 283 1 162 1 76 2 319 1 259 1 185 1 58 1 189 1 195 1 292 1 108 1 216 1 239 1 41 1 175 1 
154 3 204 1 44 3 248 1 282 1 353 3 182 1 228 1 283 1 162 1 76 1 319 1 259 1 185 1 58 1 189 1 195 1 292 1 108 1 216 1 239 1 41 1 241 1 130 1 
154 3 204 1 44 3 248 1 282 1 353 3 182 1 228 1 283 1 162 1 319 1 76 2 259 1 185 1 58 1 189 1 105 1 195 1 292 1 108 1 216 1 239 1 41 1 241 1 130 1 175 1 
154 3 44 2 248 1 93 1 282 1 353 3 182 1 228 1 283 1 162 1 76 3 319 1 259 1 185 1 33 1 58 1 189 1 105 2 195 1 292 1 108 1 216 1 239 1 41 1 175 2 90 1 
44 4 46 1 222 2 282 1 182 1 283 1 228 1 101 2 7 1 185 2 58 1 189 1 105 2 60 2 191 1 291 2 292 1 195 1 108 1 198 1 239 1 241 1 202 1 154 4 204 2 248 1 21 1 353 4 162 1 76 4 29 1 259 1 267 1 326 1 167 2 216 1 172 2 41 1 130 2 175 2 
154 2 33 1 44 2 58 1 189 1 248 1 292 1 195 1 282 1 353 2 108 1 182 1 216 1 283 1 228 1 162 1 239 1 41 1 259 1 
154 2 33 1 44 2 58 1 189 1 248 1 292 1 195 1 282 1 353 2 108 1 182 1 216 1 283 1 228 1 162 1 239 1 41 1 259 1 
154 2 44 2 248 1 46 1 249 1 282 1 353 2 225 1 182 1 228 1 283 1 162 1 100 1 29 1 7 1 125 1 259 1 267 1 58 1 189 1 326 1 191 1 291 1 167 1 195 1 292 1 108 1 216 1 172 1 239 1 41 1 332 1 202 1 
154 2 204 1 33 1 44 3 58 1 189 1 248 1 105 1 292 1 195 1 282 1 353 2 108 1 182 1 216 1 283 1 228 1 162 1 239 1 76 1 41 1 175 1 90 1 259 1 
154 2 204 1 33 1 44 3 58 1 189 1 248 1 105 1 292 1 195 1 282 1 353 2 108 1 182 1 216 1 283 1 228 1 162 1 239 1 76 1 41 1 175 1 90 1 259 1 
154 3 44 2 248 1 46 1 249 1 21 1 334 1 282 1 353 3 182 1 228 1 283 1 162 1 76 1 29 1 7 1 125 1 259 1 185 1 58 1 267 1 326 1 189 1 191 1 291 1 167 1 195 1 292 1 108 1 216 1 172 1 239 1 41 1 202 1 
156 1 144 1 307 1 328 1 106 1 280 1 206 2 227 1 74 1 62 1 114 2 262 2 16 1 232 1 210 1 305 1 56 1 141 1 
156 1 211 1 92 1 2 2 328 1 106 1 280 1 237 1 74 1 62 1 114 2 262 2 16 1 232 1 210 1 153 1 56 1 141 1 
156 2 307 1 2 2 310 1 280 1 206 2 227 1 74 1 232 1 262 4 210 2 141 1 56 2 144 1 211 1 328 1 106 2 237 1 114 2 62 1 16 1 153 1 
156 1 144 1 307 1 328 1 106 1 280 1 206 2 227 1 74 1 114 2 262 2 16 1 232 1 210 1 32 1 305 1 56 1 141 1 
156 1 211 1 92 1 2 2 328 1 106 1 280 1 237 1 74 1 114 2 262 2 16 1 232 1 210 1 32 1 153 1 56 1 141 1 
156 2 307 1 2 2 310 1 280 1 206 2 227 1 74 1 232 1 262 4 210 2 32 1 141 1 56 2 144 1 211 1 328 1 106 2 237 1 114 2 16 1 153 1 
211 1 156 2 144 1 307 1 2 2 328 1 310 1 106 2 280 1 206 2 237 1 227 1 74 1 114 2 16 1 232 1 262 4 210 2 153 1 56 2 141 1 
2 1 311 1 280 1 206 1 74 1 208 1 30 1 31 1 262 2 232 1 264 1 323 1 141 1 268 1 269 1 8 1 329 1 328 1 37 1 193 1 38 1 216 1 238 1 239 1 113 1 114 2 16 1 278 1 
2 1 311 1 280 1 206 1 74 1 208 1 30 1 262 2 232 1 323 1 141 1 268 1 269 1 8 1 329 1 190 1 328 1 37 1 38 1 85 1 216 1 238 1 239 1 302 1 113 1 114 2 16 1 278 1 
156 2 307 1 2 2 310 1 280 1 206 2 227 1 74 1 232 1 262 4 210 2 141 1 56 2 144 1 211 1 328 1 106 2 293 1 237 1 114 2 16 1 153 1 
118 1 156 2 307 1 2 2 310 1 280 1 206 2 227 1 70 1 74 1 208 1 31 1 262 4 232 1 210 2 264 1 323 1 56 2 141 1 211 1 144 1 268 1 269 1 8 1 328 1 106 2 37 1 193 1 237 1 216 1 238 1 239 1 113 1 114 2 16 1 278 1 153 1 
66 1 156 1 307 1 2 1 310 1 280 1 206 2 22 1 227 1 228 1 74 1 232 1 262 3 210 1 266 1 141 1 56 1 142 1 211 1 144 1 328 1 106 1 293 1 216 1 239 1 114 2 16 1 153 1 91 1 
45 1 180 1 2 3 280 1 206 4 224 1 48 1 227 1 316 1 74 1 232 1 262 7 141 1 211 1 328 1 329 2 106 1 81 1 237 1 114 2 62 1 149 1 16 1 
155 1 156 4 307 1 2 6 137 1 310 2 280 2 206 8 227 2 74 2 30 1 53 3 232 2 262 14 210 11 141 2 56 11 143 3 233 1 144 2 211 1 329 1 234 1 328 2 106 2 293 1 237 1 38 1 148 1 114 4 304 1 16 1 153 1 
156 1 157 1 2 1 311 1 280 1 95 1 206 1 22 1 335 1 228 1 74 1 28 1 208 1 30 1 31 1 232 1 262 2 323 1 141 1 268 1 8 1 269 1 329 1 328 1 37 1 193 1 293 1 216 2 38 1 238 1 239 2 113 1 114 2 276 1 16 1 278 1 306 1 91 1 
45 1 180 1 2 10 280 3 224 1 227 3 228 1 232 3 141 3 56 6 57 2 144 2 8 2 106 3 193 2 293 1 237 3 239 3 238 2 149 1 114 6 113 2 16 3 153 2 118 2 156 6 19 2 310 2 311 1 206 11 22 1 316 1 74 3 28 1 208 1 30 1 31 2 262 21 323 1 264 2 210 6 268 2 211 3 269 2 329 2 328 3 81 1 37 2 38 1 129 1 216 3 276 1 134 1 278 1 277 2 91 1 
2 1 311 2 280 2 206 1 22 1 70 1 256 1 71 1 122 1 228 1 74 2 28 1 208 8 209 1 30 1 103 1 232 2 262 2 323 8 104 1 32 1 141 2 268 2 213 1 269 2 8 3 328 2 197 1 216 1 38 1 147 1 239 1 62 1 113 2 114 4 199 2 16 2 278 7 91 1 
66 1 156 1 2 2 310 1 280 1 206 1 22 1 227 1 228 1 74 1 232 1 262 3 210 1 56 1 266 1 141 1 144 1 211 1 328 1 106 1 293 1 82 1 237 1 216 1 239 1 114 2 16 1 153 1 91 1 
349 1 298 1 74 1 40 1 68 1 280 1 114 2 232 1 141 1 120 1 
349 1 298 1 74 1 40 1 68 1 280 1 114 2 232 1 141 1 120 1 
349 1 298 1 74 1 40 1 68 1 280 1 114 2 232 1 141 1 120 1 
349 1 298 1 74 1 40 1 68 1 280 1 114 2 232 1 141 1 120 1 
349 1 298 1 74 1 40 1 68 1 280 1 114 2 232 1 141 1 120 1 
154 1 128 1 325 1 135 1 94 1 342 1 4 1 281 1 353 1 254 1 183 2 284 1 130 1 112 1 131 1 176 1 64 1 245 1 
154 1 128 1 325 1 135 1 94 1 342 1 4 1 281 1 353 1 254 1 183 2 284 1 130 1 112 1 131 1 176 1 64 1 245 1 
154 1 128 1 325 1 135 1 94 1 342 1 4 1 281 1 353 1 254 1 183 2 284 1 130 1 112 1 131 1 176 1 64 1 245 1 
220 1 6 1 127 1 
220 1 6 1 127 1 
59 1 314 1 
220 1 59 1 314 1 
36 1 184 1 
154 1 135 1 178 1 247 1 94 1 252 1 4 1 22 2 353 1 254 1 228 2 284 1 183 1 184 1 322 1 128 1 329 1 342 1 12 1 36 1 170 1 216 2 274 1 239 2 133 1 245 1 91 2 
128 1 325 1 135 1 94 1 166 1 342 1 281 1 176 1 254 1 245 1 
12 1 322 1 
51 1 128 1 317 1 135 1 94 1 342 1 200 1 254 1 245 1 
6 1 127 1 
220 1 59 1 314 1 
2 1 280 1 206 1 256 1 318 1 72 1 228 2 74 1 139 1 208 2 30 1 232 1 262 2 323 2 141 1 268 1 269 1 8 1 328 1 293 1 145 1 216 2 38 1 147 1 239 2 15 1 113 1 114 2 199 2 16 1 278 2 
0 1 269 1 221 1 215 1 50 1 295 1 70 1 229 1 208 2 301 2 275 1 174 1 113 1 52 1 103 1 278 2 323 2 152 1 333 1 
0 1 269 1 221 1 215 1 50 1 336 1 229 1 208 1 301 2 275 1 174 1 113 1 103 1 278 1 323 1 152 1 333 1 
268 1 213 1 269 1 8 1 308 1 311 1 295 1 229 1 208 1 113 1 132 1 278 1 323 1 104 1 
0 1 269 1 221 1 215 1 50 1 295 1 229 1 208 1 301 2 275 1 174 1 52 1 113 1 103 1 278 1 323 1 152 1 333 1 
25 1 
287 1 130 1 241 1 164 1 191 1 29 1 48 1 
154 1 222 1 353 1 101 1 76 1 29 1 7 1 185 1 267 1 326 1 60 1 191 1 291 1 198 1 130 2 241 1 202 1 
1 2 47 2 96 1 182 2 227 2 287 1 101 6 7 4 185 3 341 6 144 2 8 6 10 6 191 8 291 12 109 2 238 1 241 2 113 1 345 2 202 4 153 2 348 1 117 2 154 5 20 2 310 2 311 1 159 3 353 5 119 2 70 1 315 2 27 1 164 1 208 2 76 5 29 9 323 2 265 1 268 1 267 4 211 2 326 4 269 2 80 2 362 1 130 8 89 1 278 2 277 2 368 1 
341 2 143 1 267 1 155 1 326 1 191 1 10 2 291 3 257 1 101 1 130 1 7 1 29 1 53 1 202 1 
154 1 267 1 326 1 350 1 180 1 191 1 353 1 316 1 29 1 102 1 7 1 345 1 202 1 
267 1 326 1 191 1 287 1 164 1 241 1 130 1 7 1 29 1 202 1 
341 5 144 2 211 2 20 1 310 2 191 5 10 5 291 10 227 2 101 5 130 5 29 5 345 2 277 1 153 2 
154 1 130 1 241 1 76 1 353 1 185 1 
154 3 251 1 311 2 96 2 353 3 27 2 208 2 76 4 357 1 7 1 29 2 323 2 104 1 185 2 78 1 268 1 267 2 326 2 213 1 269 1 8 1 80 2 11 1 191 2 168 1 113 1 278 2 202 2 368 1 
2 1 280 1 311 1 22 2 228 2 74 1 208 1 30 1 31 1 262 1 232 1 323 1 264 1 141 1 266 2 268 1 269 1 8 1 329 1 328 1 192 1 193 1 37 1 216 3 39 1 239 3 238 1 114 2 113 1 16 1 278 1 91 2 
341 1 267 1 45 1 326 1 80 1 10 1 191 2 291 2 96 1 101 1 241 1 130 2 7 1 29 1 202 1 
128 1 240 1 254 1 
128 1 240 1 254 1 
128 1 86 1 254 1 
128 1 86 1 254 1 
128 1 86 1 254 1 
128 1 254 1 
94 1 245 1 
128 1 240 1 254 1 
128 1 299 1 36 1 254 1 324 1 
307 1 180 1 106 2 280 2 81 1 224 1 121 1 237 1 316 1 74 2 114 4 232 2 141 2 
211 1 45 1 180 1 2 3 106 1 81 1 206 4 224 1 48 1 237 1 227 1 316 1 149 1 262 7 
211 1 144 1 79 1 307 1 2 2 310 1 106 2 280 1 206 2 237 1 227 1 74 1 114 2 232 1 262 4 153 1 141 1 
211 1 155 1 143 1 233 1 144 1 307 1 2 4 310 1 106 2 206 3 237 1 227 1 53 2 262 7 153 1 
45 1 307 1 180 1 2 9 310 2 280 1 206 10 224 1 121 1 227 3 316 1 74 1 53 2 262 19 232 1 141 1 211 3 144 2 233 1 143 2 234 1 106 3 81 1 237 2 149 1 114 2 304 1 153 2 
2 1 53 1 262 1 
143 1 206 1 262 1 
144 1 211 1 79 1 307 1 2 3 310 1 280 1 106 3 206 3 227 1 237 2 74 1 114 2 232 1 262 6 277 1 153 1 141 1 
155 1 307 1 2 6 310 2 280 1 206 6 120 1 227 2 257 1 74 1 53 1 262 12 232 1 141 1 143 1 144 2 211 2 106 2 236 1 330 1 237 1 114 2 63 1 153 2 246 1 
211 1 307 1 2 3 180 1 106 2 206 3 227 1 237 1 316 1 149 1 262 6 
307 1 180 1 2 1 106 2 280 1 81 1 224 1 121 1 237 1 316 1 74 1 88 1 114 2 262 1 232 1 141 1 
211 2 307 1 350 1 180 1 2 5 106 3 206 5 237 2 227 2 316 1 149 1 262 10 
144 1 307 1 280 1 106 1 206 2 120 1 227 1 74 1 114 2 232 1 262 2 141 1 
211 1 144 1 307 1 2 2 310 1 106 2 280 1 206 2 120 1 237 1 227 1 74 1 114 2 232 1 262 4 153 1 141 1 
2 1 180 1 280 1 106 1 206 1 120 1 237 1 316 1 74 1 114 2 232 1 262 2 141 1 
203 1 155 1 307 5 180 3 2 14 310 3 280 5 206 12 224 1 121 2 120 1 227 4 316 3 74 5 53 4 232 5 262 26 263 1 141 5 143 3 233 1 144 3 211 4 79 1 106 11 81 1 272 1 237 6 88 1 149 1 114 10 347 1 153 3 
155 1 45 1 2 4 180 1 280 1 206 5 224 1 120 1 227 1 257 1 316 1 74 1 53 1 262 9 232 1 141 1 211 1 143 1 106 1 81 1 237 1 114 2 149 1 
155 1 45 1 307 1 180 1 2 5 310 1 280 2 206 7 224 1 120 1 227 2 316 1 257 1 74 2 53 2 262 12 232 2 141 2 211 1 143 1 233 1 144 1 79 1 106 2 81 1 237 1 149 1 114 4 
155 1 307 1 2 7 310 2 280 3 206 6 120 1 121 1 227 2 257 1 74 3 53 1 262 13 232 3 141 3 143 1 144 2 211 2 79 1 106 2 236 1 330 1 237 1 114 6 63 1 153 2 246 1 
155 1 307 1 2 4 310 2 280 3 206 7 121 1 120 1 227 2 257 1 74 3 53 1 262 11 232 3 141 3 143 1 144 2 211 1 79 1 106 2 236 1 330 1 237 1 114 6 63 1 153 1 246 1 
155 1 45 1 2 4 180 1 280 1 206 5 224 1 120 1 227 1 257 1 316 1 74 1 53 1 262 9 232 1 141 1 211 1 143 1 106 1 81 1 237 1 114 2 149 1 
155 1 307 1 2 6 310 2 280 1 206 6 120 1 227 2 257 1 74 1 53 1 262 12 232 1 141 1 143 1 144 2 211 2 106 2 236 1 330 1 237 1 114 2 63 1 153 2 246 1 
155 1 307 1 2 5 310 2 280 4 206 7 120 1 121 2 227 2 257 1 74 4 53 1 262 12 232 4 141 4 143 1 144 2 211 1 79 1 106 2 236 1 330 1 237 1 114 8 63 1 153 1 246 1 
155 1 307 2 2 5 310 2 280 4 206 7 120 1 121 2 227 2 257 1 74 4 53 1 262 12 232 4 141 4 143 1 144 2 211 1 106 4 272 1 236 1 330 1 237 2 114 8 63 1 153 1 246 1 
307 2 180 2 2 2 106 4 81 1 206 2 224 2 237 2 316 2 262 4 
155 1 307 1 2 5 310 2 280 4 206 7 120 1 121 2 227 2 257 1 74 4 53 1 262 12 232 4 141 4 143 1 144 2 211 1 106 2 272 1 236 1 330 1 237 1 114 8 63 1 153 1 246 1 
75 1 
75 1 364 1 365 1 165 1 226 1 367 1 
268 1 213 1 269 1 8 1 208 1 113 1 311 1 48 1 104 1 323 1 278 1 
268 1 8 1 269 1 329 1 311 1 37 1 193 1 22 1 216 2 228 1 238 1 28 1 239 2 208 1 113 1 278 1 323 1 91 1 
216 1 228 1 27 1 239 1 28 1 22 1 91 1 
216 1 228 1 27 1 239 1 28 1 22 1 91 1 
154 1 27 1 353 1 
154 1 27 1 353 1 
71 1 269 1 208 1 113 1 323 1 278 1 
268 2 8 3 269 3 311 2 312 1 197 1 70 1 71 1 122 1 147 1 238 1 208 7 209 1 199 1 113 2 288 1 103 1 346 1 278 6 323 7 348 1 
118 1 45 1 2 3 180 1 19 1 280 2 206 4 224 1 22 1 227 1 70 1 316 1 228 1 74 2 28 1 208 1 31 1 262 7 232 2 323 1 264 1 141 2 211 1 268 1 8 1 269 1 329 2 328 2 106 1 81 1 37 1 193 1 293 1 145 1 237 1 216 2 238 1 239 2 149 1 113 1 114 4 16 2 278 1 91 1 
154 3 117 1 1 1 47 1 311 1 252 1 159 1 353 3 182 1 315 1 287 1 164 1 208 1 76 2 29 1 7 2 323 1 185 1 267 2 326 2 8 2 191 1 109 1 130 1 241 1 278 1 202 2 368 1 
268 1 8 2 269 2 362 1 109 1 70 1 71 1 238 1 208 2 113 1 278 2 323 2 348 1 
268 1 213 1 269 1 8 1 214 1 311 1 205 1 70 1 208 4 113 1 278 4 323 4 104 1 
268 1 8 1 269 2 312 1 27 1 238 1 208 1 331 1 123 1 113 1 288 1 278 1 323 1 55 1 
269 1 215 1 208 1 301 1 174 1 113 1 311 1 333 1 323 1 278 1 
268 1 8 1 269 1 70 1 147 1 15 1 208 2 113 1 103 1 278 2 323 2 
268 2 213 1 8 3 269 2 214 1 311 1 197 1 70 1 122 1 27 1 147 1 208 4 113 2 104 1 278 3 323 4 
268 2 213 1 8 3 269 2 214 1 311 1 360 1 70 1 122 1 27 1 147 1 208 4 113 2 104 1 278 3 323 4 
268 1 8 1 269 1 329 1 190 1 311 1 37 1 22 1 216 2 228 1 238 1 28 1 239 2 208 1 113 1 278 1 323 1 91 1 
27 1 
216 1 228 1 318 1 72 1 239 1 139 1 77 1 354 1 161 1 
84 1 77 1 363 1 
173 1 329 1 77 1 354 1 161 1 
154 2 248 1 329 1 252 1 282 1 353 2 363 1 108 1 161 2 354 2 182 1 84 1 283 1 173 2 130 1 241 1 5 1 77 1 186 1 
136 1 146 1 48 1 196 1 
136 1 218 1 258 1 359 1 3 1 146 1 196 1 
218 1 231 1 124 1 
136 1 359 1 279 1 351 1 3 3 194 2 361 1 146 1 196 1 258 1 218 3 150 1 
136 1 111 1 218 2 258 1 359 1 3 2 13 1 146 1 196 1 
17 1 18 1 136 1 218 1 258 1 221 1 359 1 301 1 3 1 174 1 361 1 
136 1 218 1 258 1 359 1 3 1 361 1 196 1 
218 1 258 1 359 1 3 1 146 1 361 1 196 2 
43 1 136 1 359 2 3 2 361 1 196 1 355 1 258 2 218 2 344 1 
17 1 136 2 359 1 3 3 146 1 361 1 196 1 169 1 255 1 294 1 258 1 218 3 111 2 
136 1 359 1 221 1 215 1 3 2 146 1 361 1 196 1 50 1 258 1 218 2 111 1 301 2 339 1 174 1 
17 1 136 2 359 2 3 4 13 1 146 1 361 1 196 1 169 1 258 2 218 4 111 2 261 1 
136 1 218 1 258 1 359 1 3 1 146 1 361 1 196 1 
17 1 136 3 359 1 351 1 279 1 3 4 194 1 146 2 196 2 169 1 138 1 111 2 218 4 258 1 
177 1 136 1 111 1 218 2 258 1 359 1 250 1 320 1 3 2 146 1 361 1 196 1 
136 1 359 1 279 1 351 2 3 3 194 2 361 1 146 1 196 1 258 1 218 3 163 1 
26 2 61 1 136 2 14 1 
218 1 258 1 359 1 230 1 3 1 361 1 
136 1 111 1 218 2 258 1 359 1 3 2 146 1 361 1 196 1 294 1 
207 1 
136 1 218 1 258 1 359 1 3 1 146 1 361 1 196 1 
136 1 359 1 3 3 194 1 361 1 146 1 196 1 294 1 111 1 258 1 218 3 
17 1 136 1 138 1 169 1 
136 1 196 1 

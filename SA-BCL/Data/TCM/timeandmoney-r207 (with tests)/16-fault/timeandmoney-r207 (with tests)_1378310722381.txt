#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 118 (49,97) (49,97) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 118 (49,97) (49,97) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 118 (49,97) (49,97) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 118 (49,97) (49,97) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 118 (219,229) (219,229) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (45,94,136,207) 238 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (45,94,136,207) 238 143 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (45,94,136,207) 238 143 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (117,209) 266 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (56,114,148) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (230,235,242) (230,235,242) (230,235,242) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (230,235,242) (230,235,242) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (45,94,136,207) (45,94,136,207) (230,235,242) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (70,122) (70,122) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (56,114,148) (56,114,148) 149 308 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 239 214 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 255 31 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 255 31 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (117,209) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (117,209) (117,209) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 255 151 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (117,209) 266 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 316 (203,324) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 316 (203,324) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 316 (18,303) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 316 (18,303) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
79 1 94 1 118 1 247 1 228 1 97 1 136 1 45 1 49 1 
79 1 94 1 118 1 247 1 228 1 97 1 136 1 45 1 49 1 
79 1 94 1 118 1 247 1 228 1 97 1 136 1 45 1 49 1 
79 1 94 1 118 1 247 1 228 1 97 1 136 1 45 1 49 1 
285 1 326 1 139 1 191 1 79 4 78 1 169 2 331 3 86 1 61 1 93 1 94 4 156 1 207 3 228 1 42 2 45 1 136 1 
191 1 79 1 94 1 118 1 247 1 228 1 219 1 291 1 136 1 45 1 229 1 
79 1 94 2 247 1 238 1 228 1 136 2 45 2 
190 1 79 2 94 3 247 1 238 1 207 1 143 1 228 1 136 2 45 2 
190 1 79 2 94 3 247 1 238 1 207 1 143 1 228 1 136 2 45 2 
116 1 254 1 189 1 
270 1 272 2 189 1 
287 2 260 2 25 2 146 2 4 1 
287 1 25 1 312 2 172 1 275 2 146 1 4 1 32 1 244 1 117 1 260 1 157 2 188 1 266 1 
287 1 260 1 25 1 146 1 4 1 59 1 
148 1 114 1 133 1 146 1 
114 1 287 1 260 1 25 1 146 1 
35 1 123 1 56 1 26 1 293 1 
35 1 91 1 116 1 289 1 56 2 26 2 293 1 189 1 
35 1 56 1 26 1 
287 1 56 1 25 1 26 1 293 1 200 1 146 1 59 1 4 1 260 1 
189 1 
35 1 116 1 289 1 56 2 26 2 302 1 293 1 189 1 
252 1 192 2 128 1 196 1 289 1 83 1 56 5 218 1 26 5 293 2 35 2 204 2 116 1 8 1 64 1 337 1 65 2 248 1 189 1 
260 1 157 1 85 1 25 1 312 1 188 1 275 1 146 1 108 1 
254 1 
287 1 260 1 25 1 262 1 158 1 146 2 
287 1 260 3 25 3 108 1 146 3 
260 1 25 1 146 1 
287 1 260 1 158 1 25 1 262 1 146 1 
287 1 260 2 85 1 262 1 25 2 146 2 108 1 
133 1 16 1 260 1 25 1 146 2 108 1 
260 1 85 1 25 1 146 1 108 1 
287 1 260 1 25 1 262 1 146 1 
157 1 312 1 188 1 275 1 
157 1 312 1 188 1 275 1 
277 1 62 1 279 1 290 1 256 1 332 1 250 2 33 1 
260 1 25 1 2 1 146 1 
77 1 133 1 16 1 287 1 260 4 85 1 262 1 25 4 137 1 146 5 108 2 
260 1 25 1 146 1 
68 1 276 1 
68 1 276 1 
213 1 294 1 
213 1 294 1 
213 1 294 1 
283 1 68 1 276 1 
68 1 276 1 174 1 
213 1 6 1 240 1 68 2 294 1 276 2 
283 1 68 1 276 1 
283 1 68 1 276 1 
182 1 68 1 276 1 
182 1 68 1 276 1 
182 1 68 1 276 1 
234 1 306 1 166 3 142 2 22 2 56 2 274 1 26 2 240 1 276 2 222 1 34 1 225 2 296 1 154 2 46 2 68 2 231 1 189 1 
166 1 197 1 142 1 21 1 22 1 274 1 56 1 25 2 26 1 146 2 276 1 174 1 225 1 38 1 227 1 260 2 338 1 46 1 68 1 138 1 74 1 
191 1 78 1 156 1 
191 1 156 1 291 1 
78 2 191 3 329 1 144 1 291 1 163 1 
78 1 191 2 144 1 291 1 187 1 163 1 
78 1 191 2 144 2 291 1 163 1 
194 1 192 1 307 1 270 1 272 3 56 5 313 2 113 1 151 1 204 1 152 1 116 1 8 2 65 1 320 1 64 2 10 1 252 1 167 2 255 1 289 1 21 1 26 5 131 2 293 4 30 1 35 1 338 1 138 1 304 1 189 2 
192 2 270 3 53 1 272 9 56 9 57 1 313 6 201 1 111 1 113 3 151 3 204 2 152 2 116 1 8 6 123 5 65 2 320 2 64 5 162 1 252 1 83 1 255 3 289 1 24 1 334 5 26 9 131 6 293 7 30 1 35 6 338 4 304 3 189 5 
194 1 192 1 270 2 272 4 56 3 313 2 113 1 204 1 152 1 151 1 116 1 8 2 65 1 320 1 64 2 10 1 167 1 255 1 83 1 26 3 131 2 293 2 338 1 304 1 189 3 
192 1 194 1 270 3 272 7 56 4 313 4 111 1 113 2 204 1 152 1 151 2 116 1 8 4 65 1 320 1 64 3 10 1 162 1 167 2 255 2 83 1 24 1 26 4 131 4 293 3 338 2 304 2 189 4 
140 1 254 1 159 1 
315 1 159 1 
257 1 
181 1 159 1 
181 1 140 2 66 1 159 3 241 1 173 1 
181 1 66 1 159 1 
259 1 159 1 
76 1 237 1 19 3 54 1 129 2 3 1 88 1 176 1 113 1 202 1 180 2 95 1 226 4 264 3 265 7 48 1 127 1 
76 1 237 1 19 3 54 1 129 2 3 1 88 1 176 1 113 1 202 1 180 2 95 1 226 4 264 3 265 7 48 1 127 1 
76 1 103 1 237 1 19 3 54 1 129 2 3 1 88 1 176 1 113 1 202 1 180 2 95 1 226 4 264 3 265 7 48 1 127 1 
237 2 54 1 3 1 199 1 202 1 277 1 113 4 151 3 150 1 280 3 250 2 72 1 127 2 253 4 76 1 255 3 290 1 332 1 19 12 129 3 292 1 27 1 88 2 176 1 33 1 180 5 95 2 226 16 44 1 264 10 47 1 265 28 48 5 304 3 
237 1 54 1 3 1 199 1 113 1 277 2 208 1 250 4 127 1 76 1 290 2 332 2 19 4 129 2 87 1 88 1 33 2 176 1 180 3 95 1 226 5 264 4 265 9 48 1 
235 1 191 2 141 1 312 1 275 1 110 1 242 1 156 1 247 1 120 1 207 1 157 1 282 1 321 1 211 1 161 1 327 1 78 1 79 1 329 1 291 1 94 2 228 1 136 1 45 1 230 1 305 1 
235 1 191 2 141 1 312 1 275 1 110 1 156 1 247 1 120 1 207 2 157 1 282 1 321 1 211 1 161 1 78 1 79 2 329 1 291 1 298 1 94 3 184 1 135 1 136 1 45 1 230 1 305 1 
235 1 78 1 191 2 79 1 329 1 141 1 291 1 312 1 275 1 110 1 94 2 156 1 120 1 247 1 184 1 207 2 157 1 135 1 321 1 282 1 211 1 161 1 
328 1 79 1 195 1 141 1 20 1 312 1 58 1 275 1 298 1 94 1 181 1 120 1 247 2 122 1 157 1 282 2 45 1 136 1 321 2 159 1 188 1 211 2 70 1 
235 1 191 2 141 1 312 1 275 1 110 1 242 1 156 1 247 1 120 1 157 1 282 1 321 1 211 1 161 1 78 1 79 1 329 1 291 1 94 1 228 1 135 1 136 1 45 1 230 1 305 1 
119 1 
192 1 193 1 308 1 195 1 141 1 56 2 312 2 275 2 146 1 148 1 149 1 114 1 204 1 152 1 115 1 120 1 8 1 157 2 65 1 64 1 159 1 252 1 328 1 289 1 26 2 35 2 133 1 300 1 181 1 39 1 188 2 98 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
35 1 148 1 149 1 114 1 115 1 308 1 133 1 289 1 39 1 56 2 26 2 302 1 146 1 
252 1 192 1 308 1 56 1 26 1 146 1 149 1 148 1 114 1 204 1 115 1 133 1 39 1 65 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
148 1 149 1 114 1 115 1 308 1 133 1 39 1 56 1 26 1 146 1 
252 1 192 1 308 1 56 1 26 1 146 1 149 1 148 1 114 1 204 1 115 1 133 1 39 1 65 1 
76 1 237 1 256 1 290 1 254 1 54 1 332 1 129 1 88 1 33 1 176 1 113 1 277 1 180 1 62 1 279 1 226 2 264 1 265 2 250 2 
214 1 253 1 256 1 290 1 332 1 19 1 239 1 33 1 277 1 279 1 280 1 226 1 318 1 265 2 250 2 
288 1 256 1 290 1 19 1 332 1 85 1 25 1 198 1 108 1 146 1 33 1 277 1 37 1 279 1 226 1 155 1 260 1 318 1 265 2 250 2 
288 1 256 1 290 1 19 1 332 1 85 1 23 1 25 1 312 1 275 1 108 1 146 1 33 1 277 1 279 1 260 1 318 1 157 1 188 1 265 1 250 2 
81 1 256 1 290 1 332 1 312 1 275 1 33 1 277 1 279 1 226 1 155 1 157 1 188 1 265 1 250 2 160 1 
100 1 287 1 255 1 256 1 290 1 19 1 332 1 25 1 146 1 33 1 113 1 277 1 151 1 279 1 226 1 260 1 318 1 262 1 265 2 250 2 304 1 
17 1 256 1 290 1 332 1 33 1 277 1 113 1 62 1 279 1 226 1 265 1 250 2 304 1 
277 1 62 1 279 1 255 1 290 1 256 1 19 1 332 1 265 1 250 2 31 1 33 1 
255 1 256 1 290 1 19 1 332 1 33 1 277 1 113 1 62 1 151 1 279 1 226 1 265 2 250 2 304 1 
81 1 17 1 256 1 290 1 332 1 33 1 277 1 113 1 279 1 226 1 265 1 250 2 304 1 
277 1 279 1 81 1 255 1 290 1 256 1 19 1 332 1 265 1 250 2 31 1 33 1 
81 1 255 1 256 1 290 1 19 1 332 1 33 1 277 1 113 1 151 1 279 1 226 1 265 2 250 2 304 1 
255 1 256 1 290 1 19 1 332 1 33 1 277 1 113 1 151 1 279 1 226 1 250 2 265 2 304 1 
117 1 157 1 312 1 188 1 275 1 
157 1 312 1 188 1 275 1 322 1 
255 1 256 1 290 1 19 1 332 1 33 1 277 1 113 1 151 1 279 1 226 1 318 1 265 2 250 2 304 1 
327 1 117 1 157 1 312 1 209 1 275 1 
287 1 255 1 256 1 290 1 19 1 332 1 171 1 25 1 146 1 33 1 113 1 277 1 151 1 279 1 226 1 260 1 318 1 262 1 265 2 250 2 304 1 
1 1 102 1 3 1 199 1 107 1 113 5 277 3 278 1 280 3 9 1 208 1 12 1 290 3 19 17 129 1 33 3 36 4 226 20 47 3 48 4 50 1 304 4 237 1 54 1 245 1 151 4 250 6 249 2 69 1 72 1 253 4 76 1 82 1 255 4 332 3 88 1 176 1 180 4 336 1 185 1 264 8 265 37 99 1 
1 1 102 1 237 1 54 1 3 1 107 1 199 2 277 4 113 5 245 1 151 4 278 1 280 3 9 1 208 1 249 2 250 8 69 1 72 1 12 1 253 4 76 1 82 1 290 4 255 3 332 4 19 15 129 1 88 1 176 1 33 4 36 4 180 4 226 20 336 1 185 1 264 7 47 3 265 35 50 1 48 3 304 4 99 1 
1 1 237 1 54 1 3 1 107 1 199 1 277 2 113 8 245 1 151 7 278 1 280 4 208 1 249 1 250 4 69 1 72 2 12 1 253 4 76 1 82 1 290 2 255 7 332 2 19 18 129 1 130 2 88 1 176 1 33 2 36 4 180 7 226 27 336 1 185 1 264 15 47 2 265 45 50 1 48 8 304 7 99 1 
1 1 277 2 113 3 245 1 151 3 278 1 280 1 9 1 208 1 249 1 250 4 69 1 72 1 12 2 253 2 290 2 255 3 332 2 19 7 33 2 258 1 36 2 180 3 226 9 264 6 47 1 265 16 48 3 304 3 
1 1 107 1 199 2 277 3 113 3 245 1 151 3 278 2 280 2 208 1 249 2 250 6 69 1 12 1 253 2 82 1 290 3 255 2 19 10 332 3 33 3 36 4 180 2 226 14 336 1 185 1 264 4 265 24 47 2 48 2 50 1 304 3 99 1 
234 1 34 1 225 1 142 1 22 1 333 1 46 1 240 1 68 1 276 1 
227 1 174 1 
233 1 90 1 225 1 92 1 142 1 22 1 46 1 68 1 276 1 
234 1 306 1 166 2 142 1 22 1 274 1 56 1 26 1 240 1 276 1 34 1 225 1 296 1 154 1 46 1 68 1 231 1 189 1 
234 1 306 1 166 2 142 1 22 1 274 1 56 1 26 1 240 1 276 1 34 1 225 1 296 1 154 1 46 1 68 1 231 1 189 1 
234 1 306 1 166 2 142 1 22 1 274 1 56 1 26 1 240 1 276 1 34 1 225 1 296 1 154 1 46 1 68 1 231 1 189 1 
6 1 63 1 283 1 
6 1 63 1 283 1 
330 1 182 1 
330 1 6 1 182 1 
38 1 197 1 
306 1 142 1 197 1 56 1 145 1 276 1 146 2 154 1 68 1 74 1 166 1 22 1 21 1 25 2 26 1 293 1 174 1 225 1 38 1 227 1 260 2 46 1 338 1 138 1 
63 1 283 1 
330 1 6 1 182 1 
101 1 299 1 126 1 146 2 
327 1 78 1 191 2 329 1 141 1 291 1 312 2 275 2 110 1 281 1 156 1 120 1 40 1 157 2 135 1 282 1 210 1 161 1 305 1 
78 1 191 2 329 1 141 1 291 1 312 1 275 1 110 1 281 1 156 1 120 1 157 1 135 1 186 1 282 1 161 1 305 1 
328 1 195 1 141 1 20 1 312 1 275 1 224 1 181 1 120 1 157 1 282 1 159 1 188 1 210 1 
78 1 191 2 329 1 141 1 291 1 312 1 275 1 110 1 281 1 156 1 120 1 40 1 157 1 135 1 282 1 210 1 161 1 305 1 
286 1 
116 1 196 1 254 1 8 1 64 1 337 1 189 1 
192 1 270 1 272 1 56 1 204 1 116 1 206 1 8 1 64 1 65 1 252 1 13 1 216 1 289 1 26 1 35 1 189 2 
269 1 193 1 192 4 270 6 196 1 273 1 272 12 275 3 109 2 113 2 204 4 116 2 205 1 120 2 8 8 11 2 14 1 289 3 26 5 131 6 295 2 35 5 304 2 51 2 141 3 140 2 56 5 312 3 313 6 315 3 152 2 151 2 317 2 64 7 65 4 157 3 66 2 159 8 324 2 71 2 327 1 252 4 165 1 255 2 84 1 173 1 175 2 89 2 259 1 181 2 337 1 188 1 189 8 
193 1 192 2 270 3 272 6 56 1 313 5 113 2 152 1 204 2 151 2 116 2 280 1 8 5 64 6 65 2 11 2 253 1 252 2 82 1 289 1 255 2 221 1 26 1 131 5 175 1 35 1 41 1 336 1 185 1 47 1 50 1 304 2 99 1 189 5 
192 1 237 1 54 1 56 1 200 1 146 1 59 1 4 1 113 1 204 1 121 1 8 1 65 1 64 1 11 1 252 1 287 1 25 1 26 1 28 1 88 1 260 1 
252 1 192 1 196 1 204 1 116 1 8 1 65 1 337 1 64 1 189 1 
270 5 255 2 272 10 313 5 131 5 175 1 113 2 151 2 317 1 8 5 64 3 304 2 11 2 189 5 
35 1 116 1 289 1 56 1 26 1 189 1 
269 2 192 2 193 2 271 1 195 1 141 1 56 3 312 4 275 4 246 1 204 2 152 2 120 1 8 2 65 2 157 4 64 2 159 1 252 1 165 1 328 1 83 1 289 2 26 3 35 4 181 1 300 1 188 2 98 1 
117 1 287 1 260 1 157 1 25 1 312 1 188 1 275 1 266 1 146 1 4 1 
252 1 192 1 193 1 270 2 272 4 129 1 313 2 131 2 204 1 152 1 116 2 8 2 65 1 64 1 189 4 
142 1 43 1 46 1 
234 1 197 1 142 1 319 1 46 1 
142 1 43 1 46 1 
142 1 43 1 46 1 
142 1 46 1 284 1 
142 1 46 1 284 1 
142 1 46 1 284 1 
142 1 46 1 
68 1 276 1 
237 1 54 1 3 1 113 1 277 1 280 1 208 1 250 2 253 1 76 1 290 1 19 4 332 1 129 1 88 1 33 1 176 1 180 2 226 4 264 2 265 8 47 1 99 1 
237 1 54 1 3 1 277 2 113 2 151 1 280 1 208 1 250 4 72 1 253 2 76 1 80 1 290 2 19 5 332 2 129 1 88 1 176 1 33 2 180 2 226 6 264 3 265 11 47 1 48 1 304 1 99 1 
237 1 54 1 3 1 199 1 277 3 113 3 151 2 280 1 208 1 250 6 253 1 76 1 80 1 82 1 290 3 255 2 19 8 332 3 129 1 88 1 176 1 33 3 180 3 226 9 336 1 185 1 264 4 265 17 47 1 48 1 50 1 304 2 99 1 
237 1 54 1 3 1 199 1 277 3 113 3 151 2 280 1 208 1 250 6 253 1 76 1 80 1 82 1 290 3 255 1 19 6 332 3 129 1 88 1 176 1 33 3 180 2 226 10 336 1 185 1 264 4 265 16 47 1 50 1 48 2 304 2 99 1 
237 1 54 1 3 1 113 1 277 1 280 1 208 1 250 2 253 1 76 1 290 1 19 4 332 1 129 1 88 1 33 1 176 1 180 2 226 4 264 2 265 8 47 1 99 1 
253 1 82 1 255 2 290 1 332 1 19 4 33 1 113 2 277 1 151 2 280 1 226 6 336 1 185 1 264 1 208 1 250 2 47 1 265 10 48 1 50 1 304 2 99 1 
237 1 54 1 3 1 199 2 277 4 113 3 151 2 280 1 208 1 250 8 253 1 76 1 80 1 82 1 290 4 255 1 19 7 332 4 129 1 88 1 176 1 33 4 180 3 226 10 336 1 185 1 264 5 265 17 47 1 48 2 50 1 304 2 99 1 
199 2 277 4 113 3 151 3 280 1 9 1 208 1 250 8 253 1 82 1 290 4 255 2 19 5 332 4 33 4 180 3 226 9 336 1 185 1 264 6 265 14 47 1 48 3 50 1 304 3 99 1 
76 1 237 3 19 4 54 1 3 1 88 3 176 2 113 1 180 3 226 3 264 6 265 7 48 3 
237 1 54 1 3 1 199 2 277 4 113 3 151 2 280 1 9 1 208 1 250 8 253 1 76 1 82 1 290 4 255 1 19 7 332 4 129 1 88 1 176 1 33 4 180 3 226 10 336 1 185 1 264 4 265 17 47 1 48 1 50 1 304 2 99 1 
76 1 237 1 290 2 54 1 19 4 332 2 129 1 3 1 199 1 88 1 33 2 176 1 113 1 277 2 180 2 226 4 264 3 265 8 250 4 48 1 
76 1 237 1 254 1 19 3 54 1 129 1 3 1 88 1 176 1 113 1 180 2 226 3 264 2 265 6 
80 1 255 1 290 1 19 1 332 1 33 1 277 1 113 1 180 1 151 1 226 2 264 2 250 2 265 3 48 1 304 1 
253 2 255 1 19 3 113 1 180 1 151 1 280 1 226 3 264 2 47 1 265 6 48 1 72 1 304 1 
237 2 54 1 239 1 3 1 199 2 113 3 277 2 151 2 280 2 250 4 72 1 73 1 253 2 76 1 255 2 290 2 19 10 332 2 129 1 130 1 88 2 176 1 33 2 180 5 226 11 264 9 265 21 48 4 304 2 
253 1 19 1 265 1 
280 1 226 1 265 1 
80 1 290 1 255 1 332 1 19 2 33 1 277 1 113 1 151 1 180 2 226 3 317 1 264 3 250 2 265 5 48 1 304 1 
253 1 82 1 255 2 290 1 332 1 19 4 33 1 113 2 277 1 180 1 151 2 280 1 226 6 336 1 185 1 264 2 208 1 250 2 47 1 265 10 48 1 50 1 304 2 99 1 
237 1 54 1 19 3 3 1 88 1 113 1 180 1 226 3 264 2 265 6 48 1 
76 1 237 1 290 1 19 2 332 1 199 1 88 1 176 1 33 1 277 1 180 1 226 1 264 2 265 3 250 2 48 1 73 1 
237 1 54 1 19 3 3 1 88 1 113 1 180 1 121 1 226 2 264 1 265 5 
290 1 332 1 33 1 277 1 113 1 226 2 208 1 264 1 250 2 265 2 48 1 304 1 
255 1 290 1 19 1 332 1 33 1 277 1 113 1 180 1 151 1 226 2 264 2 208 1 250 2 265 3 48 1 304 1 
237 1 290 3 19 2 332 3 199 1 88 1 33 3 277 3 180 1 226 1 9 1 208 1 264 2 265 3 250 6 48 1 73 1 
237 3 54 2 3 2 199 2 277 5 113 5 151 3 150 1 280 3 9 1 208 1 250 10 72 1 73 1 253 4 76 1 80 1 290 5 255 3 19 15 332 5 129 1 292 1 88 3 176 1 33 5 180 7 226 16 44 1 264 12 47 1 265 31 48 5 304 3 
16 1 310 1 146 1 29 1 178 1 153 1 133 1 
75 1 16 1 310 1 106 1 29 1 146 1 178 1 153 1 133 1 335 1 134 1 212 1 
328 1 195 1 181 1 141 1 120 1 254 1 157 1 159 1 312 1 188 1 275 1 
141 1 25 1 312 1 275 1 108 1 146 1 203 1 181 1 120 1 260 1 316 1 157 1 66 1 159 1 188 1 
269 1 141 1 25 1 312 1 275 1 108 1 146 1 203 1 181 1 120 1 260 1 316 1 157 1 66 1 159 1 
269 1 141 1 25 1 312 1 275 1 108 1 146 1 181 1 120 1 260 1 316 1 157 1 66 1 159 1 303 1 
269 1 51 1 140 1 141 1 56 2 312 1 275 1 146 1 200 1 4 1 59 1 315 1 205 1 116 1 120 1 157 1 66 1 159 4 287 1 18 1 25 1 26 2 35 1 259 1 181 1 260 1 232 1 189 1 
269 1 51 1 140 1 141 1 56 2 312 1 275 1 146 1 200 1 4 1 59 1 315 1 205 1 116 1 120 1 157 1 66 1 159 4 324 1 287 1 25 1 26 2 35 1 259 1 181 1 260 1 189 1 
141 1 120 1 261 1 157 1 312 1 275 1 
327 1 141 3 170 1 312 7 275 7 173 1 177 1 147 1 243 1 244 1 181 2 120 2 261 1 301 1 7 1 157 6 135 1 66 1 188 2 159 3 251 1 
260 1 25 1 146 1 108 1 
192 2 51 1 196 1 140 1 56 3 312 1 275 1 109 1 315 1 204 2 116 1 8 1 64 1 157 1 65 2 159 2 324 1 252 2 165 1 289 1 26 3 293 1 89 1 295 1 35 2 337 1 188 1 189 1 
327 1 140 1 141 2 273 1 312 2 275 2 173 1 181 1 120 1 261 1 157 2 66 1 159 2 
327 1 328 1 195 1 141 1 312 4 275 4 314 1 5 1 181 1 120 1 157 4 188 1 159 1 
269 1 52 1 309 1 141 2 170 1 312 2 275 2 112 1 181 1 120 1 301 1 157 2 66 1 159 1 
110 1 191 1 156 1 141 1 120 1 157 1 291 1 312 1 188 1 275 1 
327 1 268 1 141 1 312 2 275 2 181 1 120 1 157 2 135 1 159 1 251 1 
327 1 328 1 269 1 195 1 141 2 312 5 275 5 177 1 147 1 314 1 181 2 120 2 157 4 188 1 159 3 251 1 
327 1 328 1 269 1 195 1 141 2 220 1 312 5 275 5 147 1 314 1 181 2 120 2 157 4 188 1 159 3 251 1 
141 1 25 1 312 1 275 1 108 1 146 1 181 1 120 1 260 1 316 1 157 1 66 1 159 1 188 1 303 1 
269 1 141 2 170 1 312 1 275 1 173 1 181 1 120 1 301 1 7 1 157 1 66 1 159 1 
179 1 297 1 105 1 323 1 
0 1 236 1 287 1 25 1 56 1 26 1 293 1 146 1 200 1 4 1 59 1 297 1 116 1 183 1 260 1 189 1 
297 1 101 1 299 1 105 1 126 1 146 1 323 1 
0 1 297 1 236 1 
285 1 139 1 331 1 254 1 
285 1 139 1 79 1 94 1 331 1 136 1 45 1 
79 1 247 1 321 1 
285 1 139 1 79 3 168 1 215 1 94 3 331 1 96 1 228 1 136 1 45 1 67 2 
285 1 139 1 79 2 94 2 331 1 207 1 42 1 136 1 45 1 
191 1 78 1 79 1 93 1 94 1 331 1 169 1 156 1 228 1 136 1 45 1 
285 1 79 1 94 1 331 1 228 1 136 1 45 1 
285 2 139 1 79 1 94 1 228 1 136 1 45 1 
285 1 79 2 94 2 331 1 228 1 136 2 45 2 125 1 325 1 267 1 
285 1 139 1 79 3 169 1 331 2 311 1 55 1 86 1 94 3 207 2 228 1 45 1 136 1 
285 1 139 1 191 2 79 2 78 1 329 1 15 1 331 1 291 1 94 2 156 1 207 1 228 1 45 1 136 1 
285 1 326 1 139 1 79 4 169 1 331 2 86 1 94 4 207 2 228 1 42 1 45 2 136 2 
285 1 139 1 79 1 94 1 331 1 228 1 136 1 45 1 
285 2 139 2 79 4 168 1 215 1 169 1 331 3 217 1 86 1 94 4 207 2 45 1 136 1 67 1 
285 1 190 1 79 2 139 1 331 1 60 1 94 2 207 1 228 1 45 1 136 1 164 1 
285 1 139 1 79 3 168 1 215 2 94 3 331 1 228 1 136 1 45 1 67 2 223 1 
331 1 263 1 132 1 
79 1 94 1 124 1 228 1 136 1 45 1 
285 1 139 1 79 2 94 2 331 1 207 1 311 1 228 1 136 1 45 1 
104 1 
285 1 139 1 79 1 94 1 331 1 228 1 136 1 45 1 
285 1 79 3 139 1 331 1 311 1 94 3 207 1 228 1 45 1 136 1 67 1 
331 1 169 1 217 1 86 1 
285 1 331 1 

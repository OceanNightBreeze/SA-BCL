#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (42,61) (42,61) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (42,61) (42,61) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (42,61) (42,61) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (42,61) (42,61) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 51 253 364 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 51 253 364 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) 140 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 115 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) 140 300 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 311 70 216 (133,258) 81 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 124 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 311 70 239 129 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 311 70 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 311 257 315 (19,354) (26,176) (26,176) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 311 257 315 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 124 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 115 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) (88,170) (63,304) 40 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 311 257 315 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 311 70 216 (133,258) 81 350 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) (88,170) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 311 204 9 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 311 257 315 (19,354) (19,354) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 311 70 239 32 105 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 311 257 315 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) 140 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 124 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 124 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 311 70 216 (133,258) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 22 (133,258) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 22 (90,245) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 311 70 239 251 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 311 70 216 (90,245) 207 (88,170) (88,170) (63,304) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 22 (90,245) 319 312 (63,304) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 311 70 239 32 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 311 257 315 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 311 70 286 345 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 311 204 9 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 311 204 305 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 311 204 349 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 311 70 216 (133,258) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 311 70 239 251 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
180 1 241 1 80 1 103 1 325 1 83 1 61 1 210 1 331 1 109 1 42 1 65 1 76 1 
180 1 80 1 241 1 103 1 325 1 83 1 61 1 210 1 331 1 109 1 42 1 65 1 76 1 
180 1 80 1 241 1 103 1 325 1 83 1 61 1 210 1 331 1 109 1 42 1 65 1 76 1 
180 1 80 1 241 1 103 1 325 1 83 1 61 1 210 1 331 1 109 1 42 1 65 1 76 1 
89 1 49 1 241 1 103 1 51 1 325 1 83 4 114 2 14 2 220 1 329 3 52 1 340 1 210 1 109 4 332 1 253 1 76 1 189 3 
0 1 80 1 103 1 335 1 51 1 325 1 83 2 329 1 52 1 340 1 210 1 185 1 109 2 65 1 76 1 68 1 
80 1 103 2 325 2 83 3 14 1 220 1 93 1 329 2 52 1 340 1 109 3 76 1 189 1 
89 1 241 1 80 1 103 2 51 1 325 2 83 7 114 1 14 3 220 2 329 3 93 1 337 1 309 1 210 1 109 7 253 1 364 1 76 1 189 5 333 1 
89 1 241 1 80 1 103 2 51 1 325 2 83 7 114 1 14 3 220 2 329 3 93 1 337 1 309 1 210 1 109 7 253 1 364 1 76 1 189 5 333 1 
124 1 125 1 336 1 
232 1 101 2 336 1 
255 1 172 2 5 1 98 2 159 2 272 2 276 2 224 2 
321 2 88 1 70 1 24 1 226 1 159 1 229 2 90 1 207 1 5 1 98 1 140 1 311 1 216 1 169 1 127 2 39 1 297 1 172 1 222 1 272 1 276 1 224 1 
172 1 5 1 98 1 159 1 272 1 60 1 231 1 276 1 100 1 224 1 
112 1 125 1 79 1 10 1 357 1 336 1 195 1 173 1 172 1 298 1 94 1 98 1 272 1 100 1 
112 1 125 1 10 2 79 1 159 1 336 1 195 1 172 1 298 1 94 2 98 1 272 1 276 1 224 1 100 1 
10 1 94 1 29 1 193 1 254 1 
125 1 10 2 94 2 29 1 261 1 336 1 263 1 254 1 
10 1 94 1 29 1 
10 1 159 1 60 1 231 1 172 1 94 1 5 1 98 1 272 1 237 1 276 1 254 1 100 1 224 1 
336 1 
125 1 10 2 94 2 29 1 261 1 151 1 336 1 254 1 
125 1 10 5 102 2 271 1 323 1 261 1 82 1 336 1 209 1 149 1 94 5 108 1 177 2 150 2 29 2 351 1 290 1 269 1 254 2 
302 1 321 1 70 1 226 1 259 1 127 1 159 1 229 1 90 1 297 1 207 1 172 1 222 1 98 1 272 1 311 1 216 1 276 1 
255 1 124 1 
191 1 255 1 159 1 84 1 172 2 98 2 272 2 67 1 276 1 100 1 224 1 
202 1 162 1 58 1 
321 1 70 1 226 1 127 1 222 1 229 1 115 1 311 1 90 1 216 1 297 1 207 1 
255 1 172 3 259 1 98 3 159 3 272 3 276 3 224 1 
172 1 98 1 159 1 272 1 231 1 276 1 100 1 
159 1 84 1 172 1 98 1 272 1 67 1 276 1 224 1 100 1 
302 1 112 1 88 1 321 1 70 1 226 1 259 1 159 3 229 1 90 1 207 1 94 1 5 1 98 3 140 1 311 1 216 1 100 1 79 1 10 1 127 1 17 1 297 1 195 1 172 3 298 1 300 1 222 1 272 3 67 1 276 3 224 2 
255 1 172 2 11 1 357 1 259 1 98 2 159 1 272 2 276 1 
302 1 112 1 10 1 79 1 259 2 159 3 336 1 17 1 195 1 172 3 298 1 94 1 98 3 272 3 67 1 276 3 224 1 100 1 57 1 
202 1 259 1 159 2 172 2 162 1 98 2 272 2 67 1 276 2 224 1 
321 1 70 1 226 1 127 1 222 1 229 1 311 1 90 1 216 1 297 1 207 1 
258 1 321 1 70 1 226 1 81 1 127 1 222 1 229 1 311 1 216 1 297 1 
322 1 202 2 113 1 136 1 279 1 205 2 181 1 284 1 162 2 120 1 212 1 75 1 267 2 58 2 314 1 128 2 13 1 358 1 16 1 247 1 338 1 178 4 134 1 223 1 
112 1 172 1 203 1 98 1 159 1 272 1 276 1 100 1 
320 1 302 1 255 1 11 1 357 1 259 2 159 4 228 1 172 5 98 5 272 5 67 1 276 4 224 1 
203 1 172 2 98 2 159 2 272 2 231 1 276 2 100 1 
23 1 182 1 
23 1 182 1 
347 1 161 1 
347 1 161 1 
347 1 161 1 
23 1 182 1 92 1 
23 1 91 1 182 1 
23 2 303 1 126 1 347 1 182 2 161 1 
23 1 182 1 92 1 
23 1 182 1 92 1 
23 1 182 1 106 1 
23 1 182 1 106 1 
23 1 182 1 106 1 
1 1 23 2 159 1 182 2 231 1 94 2 5 1 164 2 234 2 98 1 288 1 56 1 268 1 8 2 237 1 144 1 100 1 10 2 242 1 38 1 147 2 60 1 171 2 18 1 172 1 341 1 272 1 276 1 224 1 
255 1 1 1 23 1 157 1 159 2 182 1 91 1 94 1 164 1 234 1 98 2 310 1 235 1 287 1 236 1 8 1 10 1 217 1 147 1 171 1 360 1 172 2 272 2 276 2 
210 1 241 1 51 1 
210 1 335 1 51 1 
308 1 210 3 240 1 241 2 335 1 244 1 
299 1 210 2 240 1 241 1 335 1 244 1 
210 2 241 1 240 2 335 1 244 1 
157 1 261 1 181 1 232 1 94 5 29 1 166 1 235 1 188 1 236 1 290 3 167 1 355 2 37 1 101 3 102 1 10 5 125 1 271 2 13 1 336 2 358 1 247 1 130 1 318 1 108 1 150 1 177 1 132 1 44 2 20 2 254 4 
159 1 231 1 94 2 5 1 29 1 98 1 237 1 36 1 100 1 10 2 125 1 193 1 336 1 60 1 172 1 66 1 272 1 154 1 276 1 254 2 224 1 
181 1 232 2 94 3 166 1 188 1 236 1 269 1 290 3 355 2 37 1 125 1 102 1 10 3 101 4 271 2 336 3 13 1 358 1 247 1 130 1 318 1 150 1 177 1 44 1 20 2 254 2 
181 1 231 1 232 2 94 3 5 1 98 1 188 1 236 2 290 3 237 1 100 1 10 3 102 1 101 4 13 1 336 3 15 1 60 1 247 1 150 1 20 2 254 2 159 1 163 1 166 1 269 1 355 2 37 1 125 1 271 2 358 1 130 1 361 1 172 1 318 1 177 1 44 1 272 1 276 1 224 1 
124 1 30 1 
22 1 
342 1 
311 1 
70 1 239 1 129 1 311 1 
70 1 311 1 
293 1 
135 2 280 1 230 1 283 1 187 2 212 4 31 3 267 10 353 1 313 2 168 2 146 1 128 8 13 3 358 3 343 1 178 18 134 7 
135 2 280 1 230 1 283 1 187 2 212 4 31 3 267 10 353 1 313 2 168 2 146 1 128 8 13 3 358 3 343 1 178 18 134 7 
135 2 280 1 230 1 283 1 187 2 212 4 31 3 267 10 353 1 313 2 168 2 146 1 128 8 13 3 358 3 343 1 301 1 178 18 134 7 
146 2 339 1 343 1 267 1 230 1 178 1 313 1 
322 2 135 2 156 1 280 1 205 4 262 1 230 1 283 1 187 2 120 2 212 5 31 4 267 11 353 1 313 2 168 2 146 1 128 9 13 3 358 3 16 2 296 1 338 2 178 20 134 9 
321 1 48 1 51 1 229 1 325 1 28 1 329 1 52 1 308 1 95 1 53 1 210 2 211 1 189 1 76 1 241 1 80 1 127 1 103 1 335 1 83 2 194 1 297 1 62 1 340 1 109 2 41 1 363 1 222 1 153 1 
321 1 48 1 51 1 229 1 325 1 28 1 329 1 52 1 308 1 95 1 53 1 210 2 211 1 265 1 189 2 78 1 334 1 241 1 80 1 127 1 103 1 335 1 83 3 194 1 297 1 62 1 340 1 109 3 222 1 153 1 
321 1 48 1 51 1 229 1 28 1 329 1 52 1 308 1 53 1 210 2 211 1 265 1 189 2 78 1 80 1 241 1 127 1 335 1 83 2 194 1 297 1 340 1 109 2 222 1 153 1 
257 1 321 1 334 1 226 1 315 1 80 2 103 1 127 1 26 1 325 1 83 1 229 1 28 2 53 2 19 1 176 1 109 1 34 1 153 2 311 1 
321 1 48 1 51 1 229 1 325 1 28 1 308 1 95 1 53 1 210 2 211 1 265 1 76 1 241 1 80 1 127 1 103 1 335 1 83 1 194 1 297 1 62 1 109 1 41 1 222 1 153 1 
327 1 
37 1 257 1 321 2 10 2 102 1 226 2 271 1 315 1 261 1 127 2 229 2 307 1 94 2 108 1 29 2 177 1 150 1 131 1 311 1 290 1 190 1 
112 1 261 1 346 1 94 3 54 1 55 1 29 2 98 1 100 1 270 2 123 1 10 3 79 1 357 1 195 1 172 1 173 1 298 1 87 1 151 1 272 1 69 1 
112 1 324 1 261 1 346 1 94 3 54 1 29 1 98 1 100 1 270 3 123 1 10 3 79 1 125 1 357 1 336 1 195 1 172 1 173 1 298 1 87 1 151 1 272 1 69 1 
112 1 261 1 324 1 346 1 306 1 94 3 54 1 55 1 29 2 98 1 100 1 270 3 123 1 10 3 79 1 125 1 357 1 336 1 195 1 172 1 173 1 298 1 151 1 87 1 272 1 69 1 
281 2 324 4 3 1 232 2 94 5 55 4 54 1 233 1 98 1 290 1 292 1 100 1 10 5 102 1 336 5 195 1 298 1 108 1 252 1 150 1 151 1 201 1 69 1 112 1 261 3 346 1 72 1 306 4 29 7 33 2 214 2 270 6 123 1 79 1 125 5 357 1 271 1 172 1 173 1 174 1 177 1 87 1 86 2 272 1 
281 2 324 2 3 1 232 2 94 4 54 1 55 2 98 1 290 1 100 1 10 4 102 1 101 2 336 2 195 1 298 1 108 1 150 1 69 1 112 1 260 1 261 2 346 1 306 2 29 4 33 2 214 2 270 4 123 1 79 1 125 1 357 1 271 1 172 1 173 1 174 1 177 1 87 1 86 2 272 1 
112 1 281 2 324 2 261 2 346 1 72 1 306 2 3 1 232 2 94 4 55 2 54 1 233 1 29 4 33 2 98 1 214 2 290 1 100 1 270 4 123 1 125 1 10 4 79 1 102 1 271 1 357 1 336 1 195 1 172 1 173 1 298 1 174 1 108 1 150 1 177 1 86 2 87 1 201 1 272 1 69 1 
112 1 281 2 324 2 261 2 346 1 72 1 306 2 3 1 232 2 94 4 55 2 54 1 233 1 29 4 33 2 98 1 214 2 290 1 100 1 270 4 123 1 125 1 10 4 79 1 102 1 271 1 357 1 336 1 195 1 172 1 173 1 298 1 174 1 108 1 150 1 177 1 86 2 87 1 201 1 272 1 69 1 
112 1 46 2 324 2 261 2 346 1 72 1 306 2 3 1 94 4 55 2 54 1 29 4 98 1 214 2 290 1 145 1 100 1 270 4 294 1 123 1 125 1 101 2 10 4 79 1 102 1 271 1 357 1 336 1 195 1 172 1 173 1 298 1 108 1 250 2 150 1 177 1 86 2 87 1 272 1 275 1 69 1 
112 1 281 2 261 2 324 3 346 1 72 1 306 3 3 1 232 2 94 4 54 1 55 3 233 1 29 5 33 2 98 1 214 2 290 1 292 1 100 1 270 5 123 1 125 1 102 1 10 4 79 1 271 1 357 1 336 1 195 1 172 1 173 1 298 1 174 1 108 1 150 1 177 1 86 2 87 1 201 1 272 1 69 1 
112 1 281 2 261 2 324 3 346 1 72 1 306 3 3 1 232 2 94 4 54 1 55 3 233 1 29 5 33 2 98 1 214 2 290 1 292 1 100 1 270 5 123 1 125 1 102 1 10 4 79 1 271 1 357 1 336 1 195 1 172 1 173 1 298 1 174 1 108 1 150 1 177 1 86 2 87 1 201 1 272 1 69 1 
46 2 324 2 3 1 94 4 54 1 55 2 98 1 290 1 100 1 294 1 10 4 102 1 101 2 336 1 195 1 298 1 108 1 250 2 150 1 69 1 112 1 260 1 261 2 346 1 306 2 29 4 214 2 270 4 123 1 79 1 125 1 357 1 271 1 172 1 173 1 177 1 87 1 86 2 272 1 
322 1 255 3 136 1 135 1 280 1 205 2 284 1 187 1 120 1 212 2 31 1 267 4 353 1 168 1 313 1 124 1 128 3 13 1 358 1 16 1 338 1 134 3 178 7 223 1 
225 3 255 1 322 2 202 4 136 2 205 4 181 1 116 1 117 1 208 3 162 11 330 1 73 1 120 2 31 1 212 1 141 1 267 8 122 1 58 11 128 6 13 2 358 1 219 1 16 2 247 2 130 2 338 2 152 1 366 1 134 2 178 14 223 1 
302 1 321 1 202 1 322 1 136 1 70 1 226 1 259 1 205 2 159 1 229 1 115 1 90 1 117 1 207 1 120 1 98 1 311 1 141 1 267 1 216 1 122 1 127 1 128 1 104 1 16 1 297 1 172 1 249 1 338 1 222 1 272 1 110 1 276 1 178 2 223 1 
302 1 88 1 322 1 321 1 136 1 70 1 226 1 304 1 259 1 205 2 159 1 229 1 90 1 117 1 207 1 120 1 98 1 311 1 216 1 122 1 170 1 127 1 128 1 40 1 16 1 297 1 172 1 338 1 222 1 272 1 276 1 178 1 223 1 
257 1 322 1 321 2 136 1 24 1 226 1 315 1 205 2 128 1 127 2 229 2 16 1 338 1 120 1 311 1 267 1 141 1 45 1 122 1 178 2 179 1 223 1 
202 1 322 1 136 1 205 2 159 1 181 1 117 1 162 1 120 1 212 1 98 1 267 1 58 1 128 2 13 1 358 1 16 1 247 1 130 1 172 1 338 1 272 1 67 1 21 1 276 1 134 1 178 3 224 1 223 1 
202 1 322 1 58 1 136 1 205 2 13 1 16 1 247 1 162 1 284 1 338 1 120 1 31 1 75 1 267 2 134 1 178 2 223 1 
202 1 322 1 58 1 136 1 205 2 314 1 128 2 181 1 358 1 16 1 162 1 284 1 338 1 120 1 212 1 134 1 178 2 223 1 
322 1 202 2 136 1 205 2 181 1 284 1 162 2 120 1 212 1 267 2 58 2 128 2 13 1 358 1 247 1 16 1 130 1 338 1 178 4 134 1 223 1 
202 1 322 1 58 1 136 1 205 2 13 1 16 1 247 1 162 1 338 1 120 1 31 1 75 1 267 2 45 1 134 1 178 2 223 1 
202 1 322 1 58 1 136 1 205 2 314 1 128 2 181 1 358 1 16 1 162 1 338 1 120 1 212 1 45 1 134 1 178 2 223 1 
322 1 202 2 136 1 205 2 181 1 162 2 120 1 31 1 212 1 267 2 58 2 128 2 13 1 358 1 247 1 16 1 130 1 338 1 45 1 178 4 134 2 223 1 
322 1 202 2 136 1 205 2 181 1 162 2 120 1 212 1 267 2 58 2 128 2 13 1 358 1 247 1 16 1 130 1 338 1 178 4 134 1 223 1 
88 1 321 1 70 1 226 1 127 1 222 1 229 1 311 1 90 1 216 1 297 1 207 1 
258 1 321 1 70 1 226 1 81 1 127 1 222 1 229 1 350 1 311 1 216 1 297 1 
322 1 202 2 136 1 205 2 181 1 117 1 162 2 120 1 212 1 267 2 58 2 128 2 13 1 358 1 247 1 16 1 130 1 338 1 178 4 134 1 223 1 
321 1 88 1 70 1 127 1 170 1 229 1 90 1 297 1 207 1 363 1 222 1 311 1 216 1 
322 1 202 1 136 1 205 2 181 1 159 1 117 1 206 1 162 1 120 1 31 1 98 1 267 2 58 1 128 1 13 1 358 1 16 1 247 1 130 1 172 1 338 1 272 1 67 1 276 1 134 1 178 3 224 1 223 1 
225 1 322 2 156 1 205 4 158 1 27 1 326 1 160 1 2 1 208 2 73 1 120 2 31 1 267 4 142 1 128 3 243 1 13 1 16 2 247 1 130 1 107 1 338 2 366 1 178 7 134 1 
225 1 322 2 156 1 205 4 158 1 27 1 326 1 160 1 2 1 208 2 73 1 120 2 31 1 267 4 142 1 128 3 243 1 13 1 16 2 247 1 130 1 107 1 338 2 366 1 178 7 134 1 
225 2 322 3 135 1 280 1 156 1 205 6 158 1 262 2 181 2 138 1 27 1 326 3 160 1 2 1 208 3 285 1 187 1 73 2 120 3 31 3 212 4 215 1 266 1 267 17 353 1 142 1 313 1 168 1 192 1 128 15 243 1 13 4 358 3 16 3 247 3 130 3 338 3 198 1 366 1 178 32 134 7 
225 1 322 2 156 1 205 4 158 1 27 1 326 1 160 1 2 1 208 2 73 1 120 2 31 1 267 4 77 1 128 3 243 1 13 1 16 2 247 1 130 1 107 1 338 2 366 1 178 7 134 1 
225 2 322 3 156 1 205 6 158 2 262 2 181 1 27 2 138 1 326 3 160 1 2 1 208 2 285 1 120 3 73 2 31 1 212 1 215 1 266 1 267 11 142 1 192 1 128 9 243 1 13 2 358 1 16 3 247 2 130 2 338 3 198 1 134 2 178 20 
23 1 126 1 227 1 164 1 234 1 213 1 289 1 182 1 171 1 8 1 
310 1 91 1 
4 1 356 1 23 1 164 1 234 1 182 1 171 1 8 1 183 1 
1 1 23 1 159 1 182 1 231 1 94 1 5 1 164 1 234 1 98 1 288 1 56 1 268 1 8 1 237 1 144 1 100 1 10 1 242 1 38 1 147 2 60 1 171 1 18 1 172 1 341 1 272 1 276 1 224 1 
1 1 23 1 159 1 182 1 231 1 94 1 5 1 164 1 234 1 98 1 288 1 56 1 268 1 8 1 237 1 144 1 100 1 10 1 242 1 38 1 147 2 60 1 171 1 18 1 172 1 341 1 272 1 276 1 224 1 
1 1 23 1 159 1 182 1 231 1 94 1 5 1 164 1 234 1 98 1 288 1 56 1 268 1 8 1 237 1 144 1 100 1 10 1 242 1 38 1 147 2 60 1 171 1 18 1 172 1 341 1 272 1 276 1 224 1 
47 1 303 1 92 1 
47 1 303 1 92 1 
25 1 106 1 
303 1 25 1 106 1 
360 1 287 1 
255 1 23 1 157 1 159 2 182 1 91 1 94 1 164 1 165 1 234 1 98 2 310 1 235 1 287 1 236 1 8 1 10 1 217 1 242 1 147 1 171 1 360 1 172 2 341 1 272 2 276 2 254 1 
47 1 92 1 
303 1 25 1 106 1 
321 2 322 1 136 1 204 1 24 2 205 2 229 2 117 1 139 1 118 1 120 1 98 2 311 1 141 1 267 1 35 1 122 1 9 1 127 2 128 1 16 1 172 2 338 1 272 2 274 1 178 2 223 1 179 1 
321 2 48 1 241 1 335 1 127 2 51 1 229 2 28 1 297 1 308 1 62 1 210 2 197 1 211 1 222 1 363 1 121 1 265 1 365 1 
321 1 48 1 241 1 335 1 127 1 51 1 229 1 28 1 297 1 308 1 62 1 210 2 221 1 211 1 121 1 222 1 265 1 
321 1 257 1 226 1 315 1 127 1 229 1 28 1 19 1 311 1 365 1 354 1 
321 1 48 1 241 1 335 1 127 1 51 1 229 1 28 1 297 1 308 1 62 1 210 2 197 1 211 1 121 1 222 1 265 1 365 1 
59 1 
124 1 125 1 271 1 336 1 351 1 290 1 209 1 
281 1 261 1 232 1 94 1 29 1 33 1 290 1 102 1 101 1 10 1 125 1 271 1 336 2 174 1 108 1 150 1 177 1 
321 1 102 1 70 1 226 1 239 1 127 1 229 1 105 1 108 1 177 1 150 1 32 1 311 1 
225 1 261 1 181 2 138 1 208 1 232 3 94 1 29 1 73 1 215 1 266 1 290 7 355 5 10 1 101 6 102 1 125 1 271 4 192 1 336 4 13 2 358 2 247 2 130 2 85 1 108 1 150 1 177 1 198 1 273 1 20 5 
135 1 159 1 231 1 283 1 94 1 5 1 187 1 98 1 290 2 237 1 100 1 168 1 102 1 10 1 12 1 271 2 13 2 358 1 60 1 85 2 172 1 108 1 150 1 177 1 201 1 272 1 276 1 224 1 
102 1 125 1 271 1 336 1 209 1 108 1 177 1 150 1 351 1 290 1 
101 10 12 1 271 5 181 2 13 2 336 5 358 2 247 2 130 2 85 2 232 5 20 5 352 1 290 5 355 5 
125 1 10 1 94 1 29 1 261 1 336 1 
37 1 257 1 321 2 10 1 102 1 226 2 271 1 315 1 261 1 127 2 229 2 307 1 94 1 108 1 29 2 177 1 150 1 131 1 200 1 311 1 290 1 190 1 
88 1 321 1 70 1 226 1 127 1 159 1 229 1 90 1 297 1 207 1 172 1 5 1 222 1 98 1 140 1 272 1 311 1 216 1 276 1 224 1 
37 1 101 4 102 1 125 2 271 2 336 4 232 2 108 1 177 1 150 1 20 2 290 1 190 1 313 1 355 2 
234 1 7 1 8 1 
360 1 155 1 234 1 289 1 8 1 
234 1 7 1 8 1 
234 1 7 1 8 1 
175 1 234 1 8 1 
175 1 234 1 8 1 
175 1 234 1 8 1 
234 1 8 1 
23 1 182 1 
225 1 322 1 135 2 156 1 280 1 205 2 138 1 208 1 283 1 187 2 73 1 120 1 212 4 31 3 267 10 353 1 313 1 168 2 128 9 13 3 358 3 16 1 338 1 178 19 134 7 
225 1 322 2 135 2 280 1 156 1 205 4 138 1 208 2 283 1 187 2 73 1 120 2 212 4 31 4 99 1 267 12 353 1 313 1 168 2 128 10 13 4 358 3 16 2 247 1 130 1 338 2 366 1 178 22 134 8 
225 1 322 4 156 1 205 8 181 1 262 2 138 1 208 1 73 1 120 4 31 2 212 1 99 1 215 1 267 7 266 1 192 1 128 5 13 2 358 1 16 4 247 2 130 2 338 4 198 1 178 12 134 3 
225 1 322 4 156 1 205 8 181 1 262 2 138 1 208 1 73 1 120 4 31 1 212 2 99 1 215 1 267 7 266 1 192 1 128 5 13 2 358 1 16 4 247 2 130 2 338 4 198 1 178 12 134 3 
225 1 322 1 135 2 156 1 280 1 205 2 138 1 208 1 283 1 187 2 73 1 120 1 212 4 31 3 267 10 353 1 313 1 168 2 128 9 13 3 358 3 16 1 338 1 178 19 134 7 
225 1 322 3 156 1 205 6 181 1 262 2 138 1 208 1 73 1 120 3 31 2 212 2 215 1 267 7 266 1 192 1 128 5 13 2 358 1 16 3 247 2 130 2 338 3 198 1 178 12 134 4 
225 1 322 4 135 2 280 1 156 1 205 8 181 1 262 2 138 1 208 1 283 1 187 2 73 1 120 4 31 4 212 5 99 1 215 1 266 1 267 16 353 1 313 1 168 2 192 1 128 13 13 5 358 4 16 4 247 2 130 2 338 4 198 1 178 29 134 9 
225 1 322 3 156 1 205 6 262 1 181 1 138 1 208 1 73 1 120 3 31 2 212 2 215 1 267 7 266 1 192 1 128 5 13 2 358 1 16 3 247 2 130 2 107 1 338 3 198 1 178 12 134 4 
280 2 128 2 187 2 212 2 31 2 267 2 353 1 134 4 178 4 168 2 
225 1 322 4 135 2 280 1 156 1 205 8 181 1 262 2 138 1 208 1 283 1 187 2 73 1 120 4 31 4 212 5 215 1 266 1 267 16 353 1 313 1 168 2 192 1 128 13 13 5 358 4 16 4 247 2 130 2 107 1 338 4 198 1 178 29 134 9 
322 2 135 2 280 1 205 4 262 1 283 1 187 2 120 2 212 4 31 3 267 9 353 1 168 2 313 1 128 8 13 3 358 3 16 2 338 2 134 7 178 17 
124 1 135 1 280 1 128 3 13 1 358 1 187 1 212 2 31 1 267 4 353 1 134 3 178 7 313 1 168 1 
322 1 205 2 128 2 181 1 13 1 358 1 16 1 247 1 130 1 338 1 120 1 212 1 31 1 99 1 267 2 134 2 178 4 
225 1 128 4 181 1 13 1 358 1 247 1 130 1 208 2 73 1 212 1 31 1 267 3 366 1 178 7 134 2 
225 2 322 1 135 2 280 1 205 2 181 1 262 1 208 2 283 1 187 2 120 1 212 5 31 4 267 15 353 1 313 1 168 2 128 12 13 5 358 4 247 2 219 1 16 1 130 2 338 1 152 1 366 1 178 27 134 9 
128 1 178 1 208 1 
225 1 267 1 178 1 
322 1 205 2 128 3 181 1 13 1 358 1 16 1 247 1 130 1 338 1 120 1 31 2 212 2 99 1 352 1 267 3 178 6 134 4 
225 1 322 2 156 1 205 4 262 1 181 1 138 1 208 1 73 1 120 2 31 2 212 2 267 7 266 1 215 1 192 1 128 5 13 2 358 1 16 2 247 2 130 2 338 2 198 1 178 12 134 4 
135 1 128 3 13 1 358 1 187 1 212 1 31 1 267 3 178 6 134 2 168 1 
322 1 238 1 280 1 205 2 128 2 262 1 16 1 338 1 187 1 120 1 31 1 212 1 267 1 353 1 134 2 178 3 168 1 
135 1 128 5 13 2 358 2 283 1 187 1 212 2 31 2 267 5 134 4 178 10 168 1 
322 1 156 1 205 2 13 1 16 1 247 1 338 1 120 1 31 1 267 2 178 2 134 1 
322 1 156 1 205 2 128 2 181 1 13 1 358 1 16 1 247 1 130 1 338 1 120 1 212 1 267 2 134 1 178 4 
322 1 156 1 205 2 128 1 16 1 338 1 187 1 120 1 212 1 31 1 267 1 178 2 134 2 168 1 
225 3 322 4 135 2 280 1 156 1 205 8 50 1 262 1 181 2 208 3 283 1 187 2 73 1 120 4 212 5 31 4 99 1 267 16 353 1 313 1 168 2 128 15 13 5 316 1 358 5 16 4 247 2 130 2 107 1 248 1 338 4 178 31 134 9 
255 1 172 1 277 1 11 1 357 1 98 1 272 1 
111 1 255 1 277 1 11 1 357 1 246 1 172 1 186 1 362 1 98 1 272 1 6 1 
257 1 124 1 321 1 226 1 315 1 127 1 229 1 311 1 
321 1 70 1 226 1 259 1 127 1 159 1 229 1 90 1 297 1 172 1 98 1 222 1 272 1 311 1 216 1 276 1 
321 1 70 1 259 1 127 1 159 1 229 1 90 1 328 1 297 1 172 1 98 1 222 1 272 1 311 1 216 1 276 1 
321 1 258 1 70 1 259 1 127 1 159 1 229 1 328 1 297 1 172 1 98 1 222 1 272 1 311 1 216 1 276 1 
321 1 10 1 94 1 127 1 133 1 229 1 328 1 22 1 
321 1 10 1 94 1 127 1 229 1 245 1 328 1 22 1 
321 1 127 1 222 1 229 1 297 1 119 1 
321 1 70 1 226 1 239 1 251 1 127 1 229 1 311 1 
322 1 321 1 88 1 136 1 70 1 259 1 205 2 304 1 159 1 229 1 117 1 90 1 118 1 207 1 120 1 98 1 311 1 216 1 127 1 170 1 16 1 297 1 172 1 338 1 222 1 363 1 272 1 276 1 223 1 
321 1 10 1 102 1 226 1 127 1 229 1 245 1 94 1 108 1 63 1 177 1 150 1 200 1 22 1 319 1 312 1 254 1 
321 1 70 1 239 1 127 1 32 1 229 1 311 1 119 1 
257 1 321 2 226 1 315 1 127 2 363 1 229 2 311 1 
184 1 321 1 70 1 286 1 345 1 127 1 229 1 311 1 
321 1 210 1 226 1 211 1 335 1 127 1 51 1 222 1 229 1 297 1 
321 2 204 1 127 2 363 1 229 2 311 1 265 1 9 1 
321 2 204 1 226 1 305 1 127 2 363 1 229 2 311 1 
321 2 204 1 226 1 349 1 127 2 363 1 229 2 311 1 
321 1 258 1 70 1 226 1 259 1 127 1 159 1 229 1 297 1 172 1 98 1 222 1 272 1 311 1 216 1 276 1 
321 1 70 1 239 1 251 1 127 1 229 1 311 1 328 1 
255 1 196 1 317 1 96 1 348 1 
112 1 255 1 125 1 79 1 10 2 336 1 17 1 195 1 348 2 298 1 317 2 196 2 96 1 94 2 43 1 344 1 291 1 254 1 100 1 
139 1 348 1 317 1 172 1 96 1 98 1 272 1 274 1 35 1 
96 1 43 1 344 1 
52 1 124 1 340 1 329 1 
52 1 340 1 109 1 103 1 83 1 325 1 329 1 
80 1 83 1 153 1 
52 1 0 2 340 1 137 1 109 3 103 1 148 1 83 3 325 1 76 1 329 1 359 1 
49 1 103 1 325 1 83 2 114 1 329 1 52 1 340 1 109 2 189 1 
210 1 89 1 241 1 109 1 103 1 51 1 83 1 325 1 14 1 76 1 329 1 
52 1 109 1 103 1 83 1 325 1 76 1 329 1 
52 2 340 1 109 1 103 1 83 1 325 1 76 1 
103 2 325 2 83 2 329 1 52 1 97 1 109 2 64 1 74 1 76 1 
103 1 325 1 83 3 14 1 220 1 329 2 52 1 337 1 340 1 109 3 76 1 189 2 333 1 
256 1 241 1 335 1 103 1 51 1 325 1 83 2 329 1 52 1 308 1 340 1 210 2 109 2 76 1 189 1 
49 1 103 1 325 1 83 3 114 1 14 1 220 1 329 2 52 1 340 1 109 3 332 1 76 1 189 2 
52 1 340 1 109 1 103 1 83 1 325 1 76 1 329 1 
0 1 137 1 49 1 103 1 148 1 83 4 325 1 14 1 220 1 329 3 52 2 340 2 109 4 189 2 
52 1 309 1 340 1 295 1 109 2 71 1 103 1 83 2 325 1 189 1 76 1 329 1 
52 1 0 2 278 1 340 1 137 2 109 3 103 1 148 1 83 3 325 1 76 1 329 1 
264 2 282 1 329 2 143 1 
109 1 199 1 103 1 83 1 325 1 76 1 
52 1 337 1 340 1 109 2 103 1 83 2 325 1 189 1 76 1 329 1 
218 1 
52 1 340 1 109 1 103 1 83 1 325 1 76 1 329 1 
0 1 103 1 325 1 83 3 329 1 52 1 337 1 340 1 109 3 189 1 76 1 
49 1 14 1 220 1 329 1 
52 1 329 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (7,21) (7,21) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (7,21) (7,21) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (7,21) (7,21) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (7,21) (7,21) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 315 268 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 315 268 88 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 315 277 230 137 (32,188) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 257 1 320 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 257 1 320 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 257 1 320 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 257 1 320 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 257 1 320 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 139 203 296 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 315 278 45 255 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 315 268 194 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 315 268 42 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 257 66 38 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 257 210 112 12 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 315 277 230 137 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 257 210 112 12 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 315 277 230 137 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 315 268 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 315 268 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 315 165 105 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 315 165 105 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 315 165 105 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 315 165 105 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 315 165 105 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 257 66 38 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 94 267 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 315 268 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 89 164 236 (150,260) (150,260) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 89 164 236 (150,260) (150,260) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 86 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 315 278 183 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 315 278 45 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 315 278 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 257 91 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 315 276 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 315 278 183 106 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 257 210 43 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 315 154 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 89 164 236 262 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 257 210 112 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 257 210 112 15 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 89 164 236 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 315 278 183 143 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 89 164 236 (150,260) (150,260) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 6 (266,299) (266,299) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 84 1 21 1 258 1 220 1 237 1 93 1 7 1 95 1 34 1 136 1 189 1 302 1 
0 1 21 1 84 1 136 1 258 1 189 1 220 1 237 1 93 1 7 1 34 1 302 1 95 1 
0 1 21 1 84 1 136 1 258 1 189 1 220 1 237 1 93 1 7 1 34 1 302 1 95 1 
0 1 21 1 84 1 136 1 258 1 189 1 220 1 237 1 93 1 7 1 34 1 302 1 95 1 
0 4 84 1 258 1 72 1 73 3 6 2 93 1 266 1 95 1 270 1 136 4 39 1 189 1 319 1 252 2 18 2 299 1 212 1 
0 2 84 1 258 1 220 1 266 1 95 1 36 1 136 2 116 1 39 1 223 1 189 1 58 1 299 1 302 1 
0 3 84 1 73 1 6 1 266 1 95 2 270 1 136 3 189 2 18 1 299 1 104 1 302 1 
0 9 84 1 258 1 174 1 6 4 93 1 266 1 95 2 270 3 136 9 138 1 189 2 319 1 18 4 104 1 73 7 72 1 39 1 208 1 246 1 252 2 299 1 212 1 302 1 
0 9 84 1 258 1 174 1 6 4 93 1 266 1 95 2 270 3 136 9 138 1 189 2 319 1 18 4 104 1 73 7 72 1 39 1 208 1 246 1 252 2 299 1 212 1 302 1 
217 1 86 1 111 1 
217 1 141 1 10 2 
23 2 37 2 29 1 282 2 264 1 263 2 238 2 81 2 
85 1 125 1 90 1 263 2 268 1 13 2 315 1 54 1 101 2 191 1 140 1 59 1 281 1 23 2 29 1 282 3 107 1 287 1 286 1 110 2 204 1 238 3 335 1 37 2 338 1 207 1 209 1 214 1 81 2 
23 1 37 1 205 1 29 1 282 1 162 1 78 1 263 1 238 1 81 1 
217 1 309 1 263 1 265 1 135 1 324 1 23 1 29 1 282 2 234 1 238 2 240 1 111 1 206 1 205 1 37 1 78 1 162 2 250 1 339 1 81 2 
217 1 309 2 263 2 265 1 135 1 324 1 23 2 29 1 282 2 234 2 238 2 111 1 206 1 37 2 205 1 162 2 78 1 250 1 81 2 
328 1 309 1 247 1 234 1 332 1 
157 1 217 1 184 1 328 1 309 2 234 2 332 1 111 1 
309 1 234 1 332 1 
324 1 23 1 29 1 328 1 282 1 309 1 234 1 263 1 238 1 205 1 37 1 162 1 78 1 81 1 
217 1 
217 1 184 1 328 1 309 2 234 2 332 1 111 1 196 1 
217 1 328 2 285 1 309 5 234 5 71 1 128 1 332 2 239 1 111 1 113 1 14 1 271 2 184 1 337 2 245 1 229 1 63 1 146 2 
282 2 286 1 90 1 32 1 204 1 263 1 110 1 238 2 180 1 335 1 13 1 37 1 338 1 207 1 101 1 209 1 191 1 119 1 281 1 81 1 
86 1 264 1 
23 1 282 2 263 1 264 2 238 2 37 1 298 1 322 1 81 2 
166 1 32 1 53 1 
282 1 286 1 90 1 264 1 110 1 204 1 238 1 335 1 13 1 338 1 207 1 101 1 40 1 191 1 209 1 281 1 
83 1 23 1 231 1 282 5 263 4 264 1 238 5 180 1 242 1 37 4 119 2 339 1 322 1 81 5 
37 2 282 2 162 1 78 1 263 2 238 2 123 1 81 2 
23 1 37 3 282 3 119 1 264 1 263 3 238 3 81 3 
37 1 282 1 162 1 78 1 263 1 238 1 81 1 
23 1 37 1 282 1 162 1 298 1 263 1 238 1 322 1 81 1 
85 1 88 1 309 1 90 1 263 3 265 1 268 1 180 1 135 1 13 1 315 1 101 1 191 1 102 1 140 1 281 1 322 1 23 2 29 1 107 1 282 4 287 1 286 1 234 1 204 1 110 1 238 4 335 1 37 3 206 1 338 1 207 1 162 1 209 1 119 1 250 1 214 1 81 3 
242 1 37 1 282 2 119 1 339 1 264 1 263 1 238 2 81 2 
23 1 217 1 282 3 309 1 234 1 263 3 238 3 265 1 178 1 180 1 135 1 37 3 206 1 162 1 119 2 102 1 250 1 322 1 81 3 
166 1 23 1 37 2 282 2 119 1 32 1 263 2 238 2 322 1 81 2 
282 1 90 1 286 1 264 1 110 1 204 1 238 1 335 1 13 1 338 1 207 1 101 1 191 1 209 1 281 1 
282 1 90 1 286 1 264 1 110 1 204 1 238 1 335 1 13 1 275 1 207 1 101 1 191 1 209 1 20 1 
315 1 85 1 26 1 230 1 137 1 277 1 188 1 287 1 214 1 
135 1 37 1 282 1 162 1 263 1 238 1 123 1 81 1 
251 1 215 1 
251 1 215 1 
283 1 201 1 
283 1 201 1 
283 1 201 1 
251 1 215 1 197 1 
182 1 283 1 201 1 251 2 221 1 215 2 
317 1 251 1 215 1 
251 1 215 1 197 1 
251 1 215 1 197 1 
251 1 291 1 215 1 
251 1 291 1 215 1 
251 1 291 1 215 1 
168 1 44 1 309 1 264 1 263 2 96 1 317 1 185 1 227 1 323 1 198 1 147 1 152 1 282 2 69 1 234 1 238 2 156 1 37 2 251 1 215 1 256 1 303 1 81 2 
65 1 198 3 22 1 147 2 217 1 168 1 172 1 309 2 234 2 221 1 9 1 98 1 269 1 225 2 251 2 256 2 215 2 323 2 303 2 
39 1 258 1 93 1 
39 1 258 1 58 1 
258 3 41 1 192 1 58 1 93 2 293 1 
258 2 55 1 41 1 58 1 93 1 293 1 
258 2 41 2 58 1 93 1 293 1 
3 1 263 1 10 3 271 1 14 3 184 1 185 1 15 1 277 1 23 1 24 2 29 1 282 1 285 2 111 1 33 1 112 1 205 1 37 1 117 1 118 1 210 1 217 2 309 5 48 2 226 2 141 1 61 1 229 1 146 1 324 1 230 1 328 4 234 5 332 1 238 1 337 1 78 1 162 1 81 1 
2 1 3 1 263 1 10 3 271 1 14 3 184 1 185 1 15 1 187 1 277 1 23 1 24 2 29 1 282 1 285 2 111 1 112 1 37 1 205 1 117 1 210 1 124 2 217 2 309 5 48 2 141 1 61 1 229 1 146 1 324 1 230 1 328 4 234 5 332 3 238 1 337 1 78 1 162 1 247 2 81 1 
217 2 309 3 3 1 48 2 263 1 10 3 271 1 14 3 185 1 15 1 277 1 226 1 141 1 146 1 324 1 23 1 24 2 29 1 230 1 282 1 328 2 285 2 234 3 238 1 239 1 111 1 33 1 112 1 37 1 205 1 337 1 117 1 162 1 78 1 118 1 210 1 81 1 
3 1 263 1 10 7 14 5 271 1 15 2 185 2 277 2 24 4 23 1 29 1 282 1 285 4 112 2 33 1 111 1 205 1 37 1 117 1 118 1 210 2 217 4 309 4 48 4 129 1 131 1 312 1 226 2 141 3 146 1 324 1 230 2 328 3 234 4 238 1 239 1 337 1 162 1 78 1 81 1 
86 1 190 1 286 1 
286 1 94 1 
75 1 
286 1 209 1 191 1 
218 1 286 1 
286 1 209 1 
190 2 286 3 209 1 191 1 211 1 179 1 
1 1 257 1 320 1 19 1 
1 1 257 1 320 1 19 1 
1 1 257 1 320 1 19 1 195 1 
1 1 257 1 320 1 19 1 
1 1 257 1 320 1 19 1 
0 2 84 1 258 2 171 1 170 1 126 1 90 1 93 1 311 1 266 1 95 1 11 1 13 1 136 2 274 1 101 1 189 1 58 1 192 1 284 1 153 1 73 1 110 1 204 1 290 1 241 1 39 1 299 1 302 1 
0 3 258 2 171 1 170 1 126 1 90 1 93 1 311 1 266 1 95 1 11 1 13 1 136 3 274 1 99 1 101 1 189 1 192 1 58 1 25 1 284 1 153 1 73 2 110 1 204 1 292 1 39 1 299 1 302 1 
0 2 25 1 258 2 171 1 153 1 284 1 90 1 73 2 204 1 110 1 93 1 311 1 266 1 11 1 292 1 13 1 274 1 136 2 39 1 101 1 192 1 58 1 299 1 302 1 
0 1 171 2 90 1 4 1 311 2 176 1 95 1 13 1 136 1 99 1 318 1 101 1 189 1 62 1 68 1 108 1 284 2 286 1 110 1 204 1 207 1 209 1 302 2 
0 1 84 1 258 2 171 1 170 1 126 1 90 1 93 1 311 1 95 1 11 1 13 1 136 1 274 1 101 1 189 1 58 1 192 1 284 1 153 1 110 1 204 1 290 1 292 1 39 1 302 1 
109 1 
3 1 90 1 261 2 265 1 8 1 10 2 14 2 271 1 13 2 272 4 184 3 186 2 101 2 199 2 282 1 285 2 286 1 110 2 204 1 111 2 294 1 297 1 206 1 207 2 209 1 121 1 304 2 305 2 217 3 308 1 46 2 309 5 50 1 313 1 135 1 318 1 56 1 139 1 141 2 62 1 229 1 146 1 64 1 330 2 234 5 332 6 238 1 333 1 240 1 337 1 162 1 339 1 250 1 341 1 81 1 
217 2 308 1 309 3 46 1 265 1 8 1 135 1 272 2 184 1 56 1 196 1 282 1 234 3 332 2 238 1 240 1 111 2 294 1 297 1 206 1 162 1 339 1 250 1 81 1 
199 1 217 2 308 1 282 1 309 2 234 2 238 1 111 2 240 1 265 1 8 1 294 1 272 3 135 1 206 1 297 1 162 1 56 1 250 1 339 1 81 1 
305 1 217 3 308 1 309 3 46 1 265 1 8 1 135 1 272 3 184 1 56 1 196 1 199 1 282 1 234 3 332 2 238 1 240 1 111 3 294 1 297 1 206 1 162 1 339 1 250 1 81 1 
261 1 263 1 265 1 8 1 272 3 271 1 14 1 184 2 186 1 280 1 196 1 23 1 199 1 29 1 282 2 285 1 203 1 111 3 294 1 37 1 205 1 206 1 297 1 304 1 305 3 217 3 308 1 309 4 46 3 133 1 135 1 56 1 139 1 141 1 229 1 145 1 146 1 324 1 149 1 330 1 234 4 332 5 238 2 333 1 240 1 337 1 78 1 162 2 250 1 339 1 81 2 
261 2 265 1 8 1 10 2 272 4 271 1 14 1 184 2 186 2 199 2 282 1 285 1 111 3 294 1 206 1 297 1 304 2 305 2 217 4 308 1 309 4 46 2 50 1 135 1 56 1 139 1 141 2 229 1 146 1 330 2 234 4 332 4 238 1 333 1 240 1 337 1 162 1 250 1 339 1 81 1 
261 1 263 1 265 1 8 1 272 3 271 1 14 1 184 1 186 1 23 1 199 1 29 1 282 2 285 1 203 1 111 3 294 1 37 1 205 1 206 1 297 1 304 1 305 1 217 3 308 1 309 3 46 1 133 1 135 1 56 1 139 1 141 1 229 1 145 1 146 1 324 1 330 1 234 3 332 2 238 2 333 1 240 1 337 1 78 1 162 2 250 1 339 1 81 2 
261 1 263 1 265 1 8 1 272 3 271 1 14 1 184 1 186 1 23 1 199 1 29 1 282 2 285 1 203 1 111 3 294 1 37 1 205 1 206 1 297 1 304 1 305 1 217 3 308 1 309 3 46 1 133 1 135 1 56 1 139 1 141 1 229 1 145 1 146 1 324 1 330 1 234 3 332 2 238 2 333 1 240 1 337 1 78 1 162 2 250 1 339 1 81 2 
217 2 308 1 309 2 265 1 8 1 135 1 272 2 186 1 56 1 139 1 282 1 330 1 234 2 203 1 238 1 240 1 111 2 294 1 297 1 206 1 296 1 162 1 339 1 250 1 81 1 
261 1 263 1 265 1 8 1 272 4 271 1 14 1 184 1 186 1 23 1 199 2 29 1 282 2 285 1 203 1 111 3 294 1 37 1 205 1 206 1 297 1 304 1 305 2 217 3 308 1 46 2 309 3 133 1 135 1 56 1 139 1 141 1 229 1 145 1 146 1 324 1 149 1 330 1 234 3 332 3 238 2 333 1 240 1 337 1 78 1 162 2 250 1 339 1 81 2 
261 1 263 1 265 1 8 1 272 4 271 1 14 1 184 1 186 1 23 1 199 2 29 1 282 2 285 1 203 1 111 3 294 1 37 1 205 1 206 1 297 1 304 1 305 2 217 3 308 1 46 2 309 3 133 1 135 1 56 1 139 1 141 1 229 1 145 1 146 1 324 1 149 1 330 1 234 3 332 3 238 2 333 1 240 1 337 1 78 1 162 2 250 1 339 1 81 2 
265 1 8 1 10 2 272 4 271 1 14 1 184 2 186 2 199 2 282 1 285 1 31 1 111 3 294 1 206 1 297 1 301 2 305 2 216 2 217 3 308 1 309 4 46 2 50 1 135 1 56 1 139 1 229 1 146 1 330 2 234 4 332 4 238 1 240 1 337 1 162 1 250 1 339 1 81 1 
85 1 26 1 150 1 86 1 89 1 287 1 260 1 236 1 164 1 214 1 
315 1 85 1 45 1 278 1 287 1 255 1 321 1 214 1 
85 1 282 1 287 1 263 1 238 1 268 1 180 1 315 1 37 1 119 1 321 1 194 1 214 1 81 1 
85 1 282 1 287 1 110 1 263 1 238 1 268 1 180 1 13 1 315 1 37 1 207 1 101 1 119 1 321 1 214 1 42 1 81 1 
66 1 13 1 257 1 85 1 115 1 38 1 207 1 101 1 287 1 110 1 214 1 
23 1 257 1 148 1 85 1 282 1 287 1 263 1 238 1 112 1 37 1 15 1 210 1 321 1 214 1 322 1 81 1 
12 1 257 1 85 1 26 1 287 1 210 1 112 1 214 1 
315 1 85 1 26 1 230 1 137 1 277 1 287 1 214 1 
257 1 85 1 26 1 15 1 287 1 210 1 112 1 214 1 
12 1 257 1 85 1 115 1 287 1 210 1 112 1 214 1 
315 1 85 1 115 1 230 1 137 1 277 1 287 1 214 1 
257 1 85 1 115 1 15 1 287 1 210 1 112 1 214 1 
257 1 85 1 15 1 287 1 210 1 112 1 214 1 
85 1 282 1 107 1 287 1 286 1 90 1 110 1 204 1 238 1 268 1 335 1 13 1 315 1 338 1 207 1 101 1 191 1 209 1 214 1 281 1 
85 1 282 1 287 1 286 1 90 1 110 1 204 1 238 1 268 1 335 1 13 1 315 1 275 1 207 1 101 1 191 1 209 1 254 1 20 1 214 1 
257 1 85 1 15 1 287 1 210 1 112 1 321 1 214 1 
257 1 85 1 282 1 107 1 287 1 286 1 90 1 110 1 204 1 238 1 112 1 241 1 35 1 335 1 13 1 15 1 338 1 101 1 209 1 191 1 210 1 214 1 281 1 
67 1 23 1 257 1 85 1 282 1 287 1 263 1 238 1 112 1 37 1 15 1 210 1 321 1 214 1 322 1 81 1 
82 1 315 1 16 1 331 1 132 1 105 1 214 1 165 1 
82 1 315 1 16 1 331 1 132 1 105 1 214 1 165 1 
82 1 315 1 16 1 331 1 132 1 105 1 214 1 165 1 
82 1 315 1 16 1 331 1 132 1 105 1 214 1 165 1 
82 1 315 1 16 1 331 1 132 1 105 1 214 1 165 1 
66 1 306 1 257 1 85 1 282 2 233 1 287 1 238 2 38 1 17 1 80 1 321 1 214 1 81 2 
258 2 126 1 284 1 153 1 90 1 204 1 110 2 93 1 241 1 292 1 97 1 13 2 114 1 274 1 39 1 101 2 192 1 58 1 228 1 
258 2 126 1 284 1 153 1 90 1 110 1 204 1 93 1 292 1 13 1 114 1 274 1 39 1 101 1 192 1 58 1 343 1 
307 1 284 1 90 1 286 1 4 1 204 1 110 1 13 1 207 1 318 1 101 1 209 1 228 1 62 1 
258 2 126 1 284 1 153 1 90 1 110 1 204 1 93 1 292 1 97 1 13 1 114 1 274 1 39 1 101 1 192 1 58 1 228 1 
259 1 
14 1 217 1 86 1 285 1 71 1 128 1 111 1 
217 2 309 1 261 1 10 1 14 1 271 1 184 1 141 1 229 1 146 1 285 1 234 1 332 1 333 1 111 1 337 1 304 1 
90 1 286 1 204 1 110 1 52 1 94 1 267 1 271 1 13 1 337 1 207 1 101 1 209 1 191 1 211 1 229 1 146 1 
217 5 169 2 3 1 309 1 310 1 48 5 91 1 175 1 10 6 14 8 271 2 184 1 183 1 15 2 278 1 277 2 57 1 141 3 193 1 229 2 146 2 64 1 24 5 106 1 230 2 232 1 285 5 329 1 234 1 332 1 112 2 111 2 337 2 210 2 253 1 
43 1 169 2 309 1 262 1 263 1 271 1 14 2 277 1 229 1 145 1 146 1 324 1 23 1 29 1 282 1 285 2 234 1 238 1 236 1 205 1 37 1 337 1 162 1 78 1 210 2 253 1 164 1 81 1 
217 1 285 1 71 1 128 1 111 1 271 1 14 1 337 1 229 1 146 1 
24 5 217 5 230 2 169 2 285 5 48 5 112 2 10 10 14 5 276 1 15 2 277 2 210 2 141 5 253 1 
217 1 184 1 309 1 234 1 332 1 111 1 
3 2 309 3 90 1 313 1 271 2 13 4 14 2 184 2 318 1 101 4 62 1 229 1 146 2 64 2 28 1 200 1 285 2 286 1 234 3 332 4 204 1 110 4 239 1 158 1 337 2 207 2 209 1 121 1 342 2 
85 1 90 1 263 2 268 1 13 1 315 1 101 1 140 1 191 1 281 1 23 2 29 1 282 3 107 1 286 1 287 1 110 1 204 1 238 3 335 1 37 2 338 1 207 1 209 1 214 1 81 2 
1 1 64 1 24 2 217 4 285 2 3 1 48 2 111 2 10 4 271 1 14 1 337 1 141 2 229 1 146 1 
244 1 303 1 323 1 
77 1 69 1 172 1 303 1 323 1 
244 1 303 1 323 1 
244 1 303 1 323 1 
122 1 303 1 323 1 
122 1 303 1 323 1 
122 1 303 1 323 1 
303 1 323 1 
251 1 215 1 
82 1 315 1 106 1 183 1 278 1 214 1 
82 1 315 1 106 1 183 1 278 1 92 1 214 2 
82 1 315 1 106 1 183 1 278 1 214 1 
82 1 315 1 106 1 183 1 278 1 214 1 
82 1 315 1 106 1 183 1 278 1 214 1 
82 1 315 1 106 1 183 1 278 1 214 1 
82 1 315 1 106 1 183 1 278 1 92 1 214 2 
82 1 326 1 315 1 106 1 183 1 278 1 214 2 
150 1 89 1 260 1 236 1 164 1 
82 1 326 1 315 1 106 1 183 1 278 1 214 2 
150 1 151 1 89 1 260 1 236 1 164 1 214 2 
150 1 86 1 89 1 260 1 236 1 164 1 
257 1 15 1 210 1 92 1 112 1 214 1 
315 1 183 1 278 1 
315 1 45 1 278 1 
315 1 278 1 
257 1 91 1 
315 1 276 1 
82 1 315 1 106 1 183 1 278 1 214 1 
43 1 257 1 210 1 
315 1 154 1 
89 1 262 1 236 1 164 1 
82 1 257 1 210 1 112 1 214 1 
82 1 257 1 15 1 210 1 112 1 214 1 
82 1 89 1 236 1 164 1 214 1 
82 1 326 1 315 1 183 1 278 1 143 1 92 1 214 3 
242 1 327 1 282 1 339 1 264 1 238 1 81 1 
327 1 282 1 173 1 235 1 264 1 238 1 242 1 161 1 100 1 339 1 103 1 81 1 
13 1 86 1 318 1 207 1 101 1 90 1 286 1 209 1 204 1 110 1 62 1 
282 2 286 1 90 1 264 1 263 1 110 1 204 1 238 2 335 1 13 1 37 1 207 1 101 1 209 1 191 1 119 1 281 1 81 1 
218 1 90 1 264 1 263 1 13 1 135 1 101 1 191 2 279 1 281 1 282 2 286 3 204 1 110 1 238 2 335 1 37 2 206 1 162 1 119 1 209 2 342 1 81 2 
218 1 90 1 264 1 263 1 13 2 135 1 316 1 101 2 191 2 279 1 20 1 282 2 286 3 204 1 110 2 238 2 335 1 37 2 206 1 162 1 119 1 209 2 342 1 81 2 
217 1 218 1 309 2 90 1 49 1 263 1 94 1 13 1 190 1 101 1 279 1 191 1 324 1 23 1 29 1 282 1 286 4 234 2 332 1 204 1 110 1 238 1 111 1 76 1 37 1 205 1 162 1 78 1 209 1 250 1 342 1 81 1 
217 1 218 1 309 2 90 1 263 1 94 1 134 1 13 1 190 1 101 1 279 1 191 1 324 1 23 1 29 1 282 1 286 4 234 2 332 1 204 1 110 1 238 1 111 1 37 1 205 1 162 1 78 1 209 1 250 1 342 1 81 1 
13 1 87 1 101 1 90 1 204 1 110 1 
27 1 219 1 47 1 286 3 90 3 5 1 51 1 110 6 204 2 241 1 292 1 181 1 13 5 54 1 207 2 101 6 191 1 209 2 211 1 60 1 
85 2 89 1 90 1 260 1 263 1 13 1 101 1 191 1 321 1 281 1 150 1 282 2 107 1 286 1 287 2 110 1 204 1 236 1 238 2 241 1 334 1 35 1 335 1 37 1 338 1 209 1 119 1 80 1 164 1 214 2 81 1 
169 2 262 1 263 1 94 1 271 2 13 1 14 4 184 1 190 1 101 1 277 2 23 1 200 1 29 1 282 1 285 5 286 2 110 1 111 2 205 1 37 1 207 1 210 2 43 1 217 2 309 3 128 1 134 1 144 1 229 2 146 2 324 1 328 1 234 3 71 1 332 2 238 1 74 1 236 1 337 2 162 1 78 1 250 1 79 1 253 1 164 1 81 1 
87 1 286 1 90 1 110 1 52 1 204 1 75 1 13 1 190 1 101 1 191 1 209 1 211 1 
90 1 286 1 110 4 204 1 241 1 13 4 159 1 316 1 207 1 318 1 101 4 209 1 62 1 
325 1 27 1 286 1 90 2 110 2 289 1 204 1 181 1 13 2 160 1 101 2 191 1 209 1 342 1 
13 1 39 1 258 1 207 1 153 1 101 1 90 1 58 1 204 1 110 1 
13 2 101 2 90 1 286 1 209 1 5 1 204 1 110 2 241 1 344 1 292 1 
219 1 286 3 90 2 5 1 110 5 51 1 204 2 241 1 13 4 159 1 318 1 207 1 101 5 209 2 342 1 62 1 
219 1 286 3 90 2 5 1 110 5 204 2 241 1 336 1 13 4 159 1 318 1 207 1 101 5 209 2 342 1 62 1 
282 2 286 1 90 1 264 1 263 1 110 1 204 1 238 2 335 1 13 1 37 1 207 1 101 1 209 1 191 1 119 1 20 1 81 1 
27 1 47 1 286 1 90 2 110 1 204 1 181 1 13 1 101 1 191 1 209 1 342 1 211 1 
306 1 282 1 233 1 120 1 340 1 17 1 238 1 300 1 81 1 
249 1 340 1 213 1 
120 1 340 1 264 1 130 1 300 1 
217 1 309 2 263 1 130 1 265 1 135 1 222 1 102 1 324 1 23 1 29 1 282 1 328 1 234 2 238 1 111 1 37 1 206 1 205 1 78 1 162 2 120 1 249 1 340 1 250 1 300 1 213 1 81 1 
86 1 299 1 266 1 
0 1 136 1 189 1 299 1 266 1 95 1 
136 1 311 1 302 1 
0 3 84 1 30 1 127 1 95 1 266 1 177 1 136 3 223 2 189 1 299 1 
0 2 136 2 189 1 73 1 252 1 299 1 266 1 95 1 
0 1 84 1 136 1 39 1 258 1 189 1 18 1 6 1 212 1 93 1 95 1 
0 1 84 1 136 1 189 1 299 1 95 1 
0 1 84 1 136 1 189 1 6 1 299 1 266 1 95 1 
0 2 84 1 70 1 95 2 136 2 314 1 189 2 163 1 299 1 
0 3 84 1 73 2 6 1 266 1 95 1 270 1 136 3 208 1 189 1 246 1 18 1 299 1 
0 2 84 1 258 2 73 1 93 1 266 1 95 1 136 2 39 1 189 1 58 1 192 1 142 1 299 1 
0 4 84 1 73 2 6 1 266 1 95 2 270 1 136 4 189 2 319 1 252 1 18 1 299 1 
0 1 84 1 136 1 189 1 299 1 266 1 95 1 
0 4 30 1 73 2 6 1 266 2 95 1 177 1 270 1 136 4 223 1 243 1 189 1 18 1 299 2 
0 2 84 1 73 1 174 1 95 1 266 1 155 1 136 2 189 1 248 1 299 1 
0 3 84 1 136 3 30 1 223 2 189 1 288 1 299 1 266 1 95 1 177 2 
295 1 167 2 224 1 6 2 
0 1 84 1 136 1 189 1 202 1 95 1 
0 2 84 1 136 2 208 1 189 1 73 1 299 1 266 1 95 1 
273 1 
0 1 84 1 136 1 189 1 299 1 266 1 95 1 
0 3 84 1 136 3 208 1 223 1 189 1 73 1 299 1 266 1 95 1 
270 1 243 1 18 1 6 1 
299 1 

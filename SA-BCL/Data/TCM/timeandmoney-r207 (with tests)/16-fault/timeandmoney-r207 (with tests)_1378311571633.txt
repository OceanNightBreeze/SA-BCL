#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 122 (91,256) (91,256) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 122 (91,256) (91,256) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 122 (91,256) (91,256) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 158 11 333 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 158 11 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 332 258 340 341 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 332 258 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 291 110 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 31 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
121 2 122 1 81 4 148 3 327 1 86 1 108 2 248 2 304 7 33 1 275 1 91 1 95 1 256 1 160 1 12 2 137 1 118 1 313 2 347 2 209 7 349 3 49 2 77 1 52 1 
121 2 122 1 81 4 148 3 327 1 86 1 108 2 248 2 304 7 33 1 275 1 91 1 95 1 256 1 160 1 12 2 137 1 118 1 313 2 347 2 209 7 349 3 49 2 77 1 52 1 
121 2 122 1 81 4 148 3 327 1 86 1 108 2 248 2 304 7 33 1 275 1 91 1 95 1 256 1 160 1 12 2 137 1 118 1 313 2 347 2 209 7 349 3 49 2 77 1 52 1 
121 2 122 1 81 4 148 4 270 1 327 1 86 1 108 2 248 2 304 7 33 1 275 1 91 1 95 1 256 1 160 1 12 2 137 1 139 1 118 1 313 2 347 2 209 7 349 3 49 2 77 1 52 1 
121 1 122 1 81 3 12 1 148 3 270 1 139 1 263 1 108 1 86 1 248 1 347 1 304 4 209 4 349 2 49 1 77 1 95 2 
234 1 121 1 148 1 12 1 270 1 139 1 164 1 304 2 347 1 313 1 209 2 74 1 275 1 49 1 77 1 52 1 
121 2 81 1 12 2 137 1 148 2 270 1 139 1 108 1 304 3 313 1 209 3 349 1 77 1 
215 1 121 2 122 1 160 1 81 7 148 5 12 2 290 1 137 1 270 1 139 1 263 1 86 1 108 3 248 1 347 1 304 9 313 1 33 1 209 9 349 4 49 1 77 1 95 2 
215 1 121 2 122 1 160 1 81 7 148 5 12 2 290 1 137 1 270 1 139 1 263 1 86 1 108 3 248 1 347 1 304 9 313 1 33 1 209 9 349 4 49 1 77 1 95 2 
176 1 31 1 352 1 
332 2 2 1 352 1 
1 2 114 2 24 2 78 1 255 2 151 2 307 2 93 1 
1 2 170 1 24 2 26 1 27 2 326 1 222 1 272 1 151 2 180 1 183 1 156 1 343 1 38 1 255 3 307 2 93 1 185 1 159 2 114 3 204 1 345 1 259 1 66 1 138 1 237 1 101 1 262 1 100 2 141 1 292 2 314 1 241 1 193 1 78 1 351 2 318 1 
227 1 315 1 1 1 114 1 219 1 24 1 255 1 151 1 307 1 93 1 
1 2 219 1 24 1 6 1 151 1 176 1 227 1 154 1 255 2 93 1 307 1 203 1 114 2 64 1 117 1 47 1 240 1 315 2 317 1 79 1 352 1 
1 2 219 1 114 2 64 1 24 2 151 2 6 1 176 1 117 2 240 1 47 1 227 1 315 2 317 2 79 1 352 1 93 1 307 2 255 2 
117 1 21 1 321 1 317 1 201 1 
176 1 117 2 21 1 317 2 201 1 352 1 225 1 94 1 
117 1 21 1 317 1 
1 1 219 1 114 1 64 1 24 1 151 1 117 1 227 1 315 1 317 1 201 1 93 1 307 1 255 1 
352 1 
176 1 117 2 21 1 317 2 201 1 352 1 184 1 94 1 
216 1 21 2 162 1 323 1 67 2 45 1 116 1 346 2 176 1 117 5 143 2 60 1 317 5 36 1 201 2 352 1 254 1 94 1 135 1 
31 1 78 1 
111 1 1 2 114 2 24 1 151 1 229 1 78 2 255 2 307 1 
124 1 90 1 296 1 
159 1 114 1 170 1 26 1 138 1 27 1 237 1 326 1 222 1 101 1 100 1 141 1 262 1 78 1 212 1 255 1 
159 1 124 1 1 1 170 1 114 2 24 1 138 1 26 1 27 1 237 1 222 1 326 1 101 1 262 1 141 1 100 1 151 1 330 1 9 1 255 2 
203 1 111 1 1 5 114 5 24 4 151 4 303 1 330 2 78 1 9 1 213 1 214 1 255 5 307 1 
227 1 315 1 1 2 114 2 24 2 128 1 255 2 151 2 
1 3 114 3 330 1 24 3 78 1 307 1 255 3 151 3 
227 1 315 1 1 1 114 1 24 1 255 1 151 1 
111 1 315 1 1 1 114 1 229 1 24 1 255 1 151 1 307 1 
107 1 1 3 326 1 6 1 151 3 249 1 330 1 9 1 156 1 255 4 159 1 111 1 114 4 259 1 260 1 262 1 117 1 292 1 79 1 78 1 170 1 24 3 26 1 27 1 222 1 272 1 183 1 343 1 38 1 93 1 307 2 345 1 138 1 237 1 100 1 141 1 101 1 47 1 240 1 315 2 314 1 241 1 317 1 193 1 351 2 
203 1 1 2 114 2 330 1 24 1 78 1 214 1 255 2 151 1 
111 1 107 1 1 3 114 3 24 3 6 1 151 3 117 1 240 1 47 1 315 1 330 2 317 1 9 1 105 1 79 1 352 1 307 1 255 3 
111 1 124 1 1 2 114 2 24 2 151 2 330 1 296 1 307 1 255 2 
159 1 114 1 170 1 26 1 138 1 27 1 237 1 326 1 222 1 100 1 141 1 262 1 101 1 78 1 255 1 
159 1 123 1 114 1 170 1 26 1 138 1 27 1 326 1 100 1 141 1 262 1 101 1 153 1 78 1 255 1 
195 1 345 1 115 1 291 1 259 1 99 1 272 1 292 1 314 1 241 1 156 1 351 2 50 1 38 1 
47 1 315 1 1 1 114 1 24 1 128 1 255 1 151 1 
288 1 152 1 
288 1 152 1 
232 1 
232 1 
232 1 
252 1 288 1 152 1 
41 1 288 1 152 1 
268 1 34 1 232 1 288 1 152 1 
252 1 288 1 152 1 
252 1 288 1 152 1 
273 1 288 1 152 1 
273 1 288 1 152 1 
273 1 288 1 152 1 
117 1 11 1 22 1 317 1 333 1 158 1 306 1 288 1 152 1 
11 1 22 1 158 1 306 1 288 1 152 1 
248 1 347 1 49 1 
347 1 74 1 49 1 
120 1 248 2 347 3 74 1 62 1 175 1 
248 1 347 2 74 1 62 1 134 1 175 1 
248 1 347 2 74 1 62 2 175 1 
21 1 217 1 246 1 171 1 2 1 339 1 196 1 247 1 28 1 224 2 176 1 182 1 60 2 110 1 201 4 94 1 331 1 332 2 162 1 115 1 291 1 67 1 188 1 45 2 102 1 346 1 117 5 143 1 317 5 336 1 352 2 145 1 
21 3 321 2 217 1 1 1 338 2 219 1 339 1 147 1 196 1 24 1 247 1 151 1 176 1 250 1 227 1 182 1 60 1 110 1 201 4 94 1 93 1 307 1 255 1 332 1 114 1 162 1 64 1 67 1 188 1 45 2 102 1 346 1 117 5 315 1 143 1 317 5 336 1 352 1 
216 1 246 1 1 1 219 1 2 1 339 1 196 1 24 1 247 1 224 1 151 1 176 1 227 1 182 1 60 2 110 1 201 2 255 1 307 1 93 1 332 2 114 1 64 1 115 1 291 1 67 1 45 2 188 1 102 1 346 1 117 3 315 1 143 1 317 3 352 2 336 1 145 1 
246 1 1 1 2 2 196 1 247 2 151 1 60 3 110 2 201 3 255 1 332 4 114 1 63 1 64 1 115 2 291 2 67 1 117 4 210 1 72 1 336 2 216 1 219 1 339 2 24 1 224 2 176 1 227 1 182 1 93 1 307 1 45 4 188 2 102 2 346 1 315 1 143 1 317 4 352 3 145 1 
319 1 31 1 101 1 
289 1 101 1 
223 1 
138 1 101 1 262 1 
132 1 101 1 
101 1 262 1 
319 2 167 1 138 1 101 3 262 1 308 1 
23 1 221 2 177 1 199 1 178 7 8 4 185 10 186 2 235 3 96 2 345 9 115 3 98 1 334 1 292 19 336 3 353 2 146 1 
23 1 221 2 177 1 199 1 178 7 8 4 185 10 186 2 235 3 96 2 345 9 115 3 98 1 334 1 292 19 336 3 353 2 146 1 
23 1 221 2 177 1 199 1 178 7 8 4 185 10 186 2 235 3 96 2 345 9 115 3 98 1 334 1 292 19 166 1 336 3 353 2 146 1 
53 1 23 1 300 1 221 3 324 1 226 4 177 1 199 1 178 12 179 1 8 5 110 3 156 1 38 1 185 21 186 3 235 7 96 3 345 16 115 5 291 2 259 1 98 2 102 3 18 3 334 2 205 1 292 37 265 1 241 1 294 1 351 2 336 6 353 2 146 1 
149 1 221 2 177 1 199 1 178 9 8 5 156 2 38 2 185 11 186 2 235 4 96 2 115 3 345 10 259 2 98 1 17 1 334 1 205 1 292 21 241 2 351 4 336 3 353 2 146 1 
120 1 121 1 81 1 148 1 270 1 26 1 27 1 248 1 304 2 89 1 136 1 159 1 12 1 65 1 43 1 44 1 139 1 100 1 141 1 20 1 313 1 347 2 293 1 209 2 348 1 74 1 49 1 211 1 104 1 77 1 
120 1 121 1 245 1 81 2 148 1 270 1 26 1 27 1 248 1 304 3 89 1 305 1 136 1 159 1 12 1 65 1 44 1 139 1 100 1 141 1 20 1 313 1 347 2 209 3 348 1 74 1 49 1 211 1 104 1 243 1 
120 1 81 2 148 1 270 1 26 1 27 1 248 1 304 2 89 1 305 1 136 1 159 1 65 1 139 1 100 1 141 1 313 1 347 2 209 2 348 1 74 1 211 1 104 1 49 1 243 1 
121 1 245 1 159 1 12 1 65 2 26 1 27 1 326 1 141 1 101 1 262 1 100 1 14 1 207 1 313 2 304 1 89 2 209 1 35 1 295 1 211 2 276 1 10 1 
120 1 121 1 26 1 27 1 248 1 304 1 89 1 136 1 159 1 12 1 65 1 44 1 100 1 141 1 20 1 313 1 347 2 293 1 209 1 348 1 74 1 49 1 211 1 104 1 77 1 243 1 
251 1 
1 1 2 2 284 1 326 2 6 1 329 1 287 1 60 2 154 1 255 1 203 1 159 2 332 2 114 1 162 1 258 1 67 1 262 1 261 1 68 2 16 2 165 2 117 5 19 1 335 1 295 1 79 1 119 1 21 6 269 2 26 1 27 2 127 2 274 4 176 2 182 1 35 1 37 1 94 3 344 1 45 2 100 2 101 1 141 1 346 1 240 1 47 1 190 1 315 1 143 1 316 2 317 5 191 1 352 3 106 2 
21 2 1 1 284 1 6 1 274 2 176 2 154 1 37 1 184 1 94 1 255 1 203 1 114 1 68 1 117 3 240 1 47 1 335 1 315 1 317 3 191 1 79 1 119 1 352 2 
203 1 1 1 114 1 269 1 284 1 274 3 6 1 176 2 117 2 47 1 240 1 335 1 315 1 191 1 317 2 154 1 37 1 79 1 352 2 119 1 255 1 
21 2 1 1 269 1 284 1 6 1 274 3 176 2 154 1 37 1 184 1 94 1 255 1 203 1 114 1 68 1 117 3 240 1 47 1 335 1 315 1 317 3 191 1 79 1 119 1 352 2 106 1 
1 2 2 2 284 1 151 1 6 1 60 1 154 1 255 2 203 1 114 2 64 1 162 1 258 1 67 1 68 4 165 2 16 2 117 5 335 1 76 1 79 1 119 1 21 7 219 1 269 3 82 1 340 1 24 1 127 2 274 5 176 4 227 1 228 1 37 1 184 1 307 1 93 1 94 3 45 1 346 1 47 1 240 1 190 1 315 2 143 1 316 2 191 1 317 5 103 1 352 4 106 4 
21 4 1 1 2 2 269 2 284 1 127 2 6 1 274 4 329 1 176 3 60 1 154 1 37 1 94 2 255 1 203 1 332 2 114 1 162 1 258 1 67 1 45 1 68 2 346 1 16 2 165 2 117 4 190 1 240 1 47 1 335 1 315 1 143 1 316 2 191 1 317 4 79 1 119 1 352 4 106 2 
21 4 1 1 2 2 269 2 340 1 284 1 127 2 6 1 274 4 176 3 228 1 60 1 154 1 37 1 94 2 255 1 203 1 114 1 162 1 258 1 67 1 45 1 68 2 346 1 16 2 165 2 117 4 190 1 240 1 47 1 335 1 315 1 143 1 316 2 317 4 191 1 103 1 79 1 119 1 352 3 106 2 
21 4 1 1 2 2 269 2 340 1 284 1 127 2 6 1 274 4 176 3 228 1 60 1 154 1 37 1 94 2 255 1 203 1 114 1 162 1 258 1 67 1 45 1 68 2 346 1 16 2 165 2 117 4 190 1 240 1 47 1 335 1 315 1 143 1 316 2 317 4 191 1 103 1 79 1 119 1 352 3 106 2 
1 1 340 1 284 1 6 1 274 2 176 2 181 1 341 1 154 1 37 1 255 1 203 1 332 1 114 1 162 1 258 1 67 1 45 1 346 1 165 1 117 2 240 1 47 1 70 1 335 1 315 1 264 1 143 1 316 1 317 2 191 1 79 1 119 1 352 2 
21 5 1 1 2 2 340 1 269 3 82 1 284 1 127 2 6 1 274 5 176 3 228 1 60 1 154 1 37 1 94 2 255 1 203 1 114 1 162 1 258 1 67 1 45 1 346 1 68 3 16 2 165 2 117 4 190 1 240 1 47 1 335 1 315 1 143 1 316 2 317 4 191 1 103 1 79 1 119 1 352 3 106 3 
21 5 1 1 2 2 340 1 269 3 82 1 284 1 127 2 6 1 274 5 176 3 228 1 60 1 154 1 37 1 94 2 255 1 203 1 114 1 162 1 258 1 67 1 45 1 346 1 68 3 16 2 165 2 117 4 190 1 240 1 47 1 335 1 315 1 143 1 316 2 317 4 191 1 103 1 79 1 119 1 352 3 106 3 
1 1 284 1 6 1 274 2 176 2 181 1 154 1 37 1 255 1 203 1 332 1 114 1 162 1 258 1 67 1 45 1 346 1 165 1 117 2 240 1 47 1 70 1 335 1 315 1 143 1 316 1 191 1 317 2 79 1 119 1 352 2 
195 1 124 1 221 1 272 1 199 1 31 1 178 3 90 1 8 2 156 1 38 1 185 4 186 1 235 1 96 1 345 4 115 1 259 1 292 8 314 1 241 1 296 1 351 2 78 3 336 1 353 1 146 1 
0 1 124 10 324 1 83 1 271 1 272 1 226 3 178 1 179 1 90 10 183 1 110 2 156 2 38 2 185 8 235 1 113 1 204 1 345 5 115 1 291 1 259 2 239 1 102 2 18 3 292 13 314 2 241 2 296 3 78 1 351 4 336 2 
1 1 170 1 24 1 26 1 27 1 222 1 326 1 272 1 151 1 330 1 183 1 156 1 9 1 38 1 255 2 185 1 159 1 114 2 345 1 204 1 259 1 138 1 237 1 101 1 262 1 141 1 100 1 239 1 13 1 292 2 314 1 241 1 296 1 78 1 351 2 212 1 267 1 169 1 
1 1 326 1 151 1 249 1 199 1 198 1 330 1 8 4 253 2 110 2 9 1 156 3 255 3 159 1 114 3 204 1 115 5 291 2 259 3 262 2 292 30 296 5 78 5 336 5 124 5 170 2 24 1 221 2 26 2 27 1 222 2 272 3 129 2 177 1 178 7 90 5 183 1 133 2 343 2 38 3 185 16 186 2 233 1 235 3 96 1 345 14 138 2 237 2 189 2 100 1 239 1 141 2 101 2 102 2 315 1 314 3 241 3 351 6 353 2 146 1 
244 1 195 1 1 1 326 2 197 1 58 1 151 1 330 1 156 2 255 1 159 7 257 1 114 1 204 1 259 2 262 3 292 2 71 1 295 1 298 1 172 1 218 1 24 1 26 4 27 6 272 2 29 1 180 2 35 1 183 1 38 2 185 1 278 1 345 1 43 1 138 1 100 7 101 4 141 3 280 1 314 2 241 2 351 4 
1 1 24 1 272 1 30 1 151 1 110 1 156 1 38 1 307 1 255 1 185 1 111 1 114 1 115 1 345 1 291 1 259 1 239 1 102 1 292 2 314 1 241 1 351 2 336 1 
235 1 195 1 124 1 259 1 272 1 102 1 178 1 292 2 314 1 90 1 241 1 296 1 297 1 156 1 351 2 336 1 38 1 185 2 
195 1 115 1 345 1 291 1 259 1 99 1 272 1 292 1 314 1 241 1 156 1 351 2 38 1 
195 1 124 1 345 1 115 1 291 1 259 1 272 1 102 1 292 3 314 1 90 1 241 1 296 1 110 1 156 1 351 2 336 1 38 1 185 2 
235 1 124 1 259 1 272 1 102 1 58 1 178 1 292 2 314 1 90 1 241 1 296 1 297 1 156 1 351 2 336 1 38 1 185 2 
115 1 345 1 291 1 259 1 99 1 272 1 58 1 292 1 314 1 241 1 156 1 351 2 38 1 
124 1 345 1 115 1 291 1 259 1 272 1 102 1 58 1 292 3 314 1 90 1 241 1 296 1 110 1 156 1 351 2 336 1 38 1 185 2 
124 1 345 1 115 1 291 1 259 1 272 1 102 1 292 3 314 1 90 1 241 1 296 1 110 1 156 1 351 2 336 1 38 1 185 2 
170 1 26 1 27 1 222 1 326 1 272 1 183 1 343 1 156 1 38 1 255 1 185 1 159 1 114 1 204 1 345 1 259 1 138 1 237 1 262 1 141 1 100 1 101 1 292 2 314 1 241 1 78 1 351 2 
123 1 170 1 173 1 26 1 27 1 326 1 272 1 153 1 183 1 156 1 38 1 255 1 185 1 159 1 114 1 204 1 345 1 259 1 138 1 262 1 141 1 100 1 101 1 292 2 314 1 241 1 78 1 351 2 
124 1 345 1 115 1 291 1 259 1 239 1 272 1 102 1 292 3 314 1 90 1 241 1 296 1 110 1 156 1 351 2 336 1 38 1 185 2 
124 1 170 1 26 1 27 1 222 1 272 1 129 1 90 1 110 1 343 1 156 1 38 1 255 1 185 2 159 1 114 1 345 1 115 1 291 1 43 1 259 1 138 1 237 1 102 1 141 1 100 1 262 1 101 1 292 3 314 1 241 1 296 1 351 2 336 1 
124 1 1 1 24 1 272 1 151 1 90 1 110 1 156 1 38 1 307 1 255 1 185 2 111 1 311 1 114 1 345 2 115 1 291 1 259 1 239 1 102 1 292 4 314 1 241 1 296 1 351 2 336 1 
55 1 324 1 286 1 226 2 130 1 178 1 179 1 342 1 110 2 156 2 38 2 185 6 309 1 235 1 115 1 345 4 291 1 42 1 259 2 102 2 140 1 17 1 18 1 292 10 241 2 144 1 351 4 336 2 
55 2 324 2 286 2 226 2 57 1 178 1 32 1 342 1 110 3 156 2 38 2 309 4 185 14 235 1 161 1 115 2 345 9 42 1 291 2 259 2 102 3 17 1 205 1 18 2 69 1 292 23 241 2 242 1 144 1 350 1 351 4 336 3 194 1 
55 2 324 3 286 1 57 1 226 4 32 1 178 4 179 1 342 1 110 4 156 3 38 3 202 1 185 17 309 4 235 4 161 1 115 2 345 11 291 2 42 1 259 3 140 1 102 4 17 1 205 1 18 3 69 1 292 28 241 3 242 1 144 1 350 1 351 6 336 4 194 1 
55 1 324 1 286 1 226 2 178 1 179 1 342 1 110 2 156 2 38 2 185 7 309 2 235 1 161 1 115 1 345 5 291 1 42 1 259 2 102 2 140 1 17 1 18 1 292 12 241 2 144 1 351 4 336 2 
55 1 221 1 324 2 286 1 57 1 226 3 199 1 32 1 178 5 179 1 342 1 8 1 110 4 156 2 38 2 309 4 185 20 186 1 235 4 161 1 96 1 345 14 115 4 42 1 291 3 259 2 102 4 17 1 205 1 18 2 69 1 292 34 241 2 242 1 144 1 350 1 351 4 336 5 353 1 194 1 146 1 
1 2 125 1 26 1 27 2 325 1 272 1 29 1 197 1 180 2 183 1 200 1 156 1 38 1 255 2 185 1 159 2 114 2 204 1 345 1 259 1 312 1 141 1 101 1 262 1 100 2 239 1 46 1 292 2 314 1 241 1 351 2 
120 1 159 2 43 1 4 1 26 1 44 1 27 2 56 1 141 1 100 2 248 1 347 2 89 1 74 1 348 1 49 1 231 1 243 1 136 1 
120 1 159 1 236 1 4 1 44 1 26 1 27 1 100 1 141 1 248 1 347 2 89 1 74 1 348 1 49 1 243 1 136 1 
159 1 26 1 27 1 56 1 326 1 141 1 101 1 262 1 100 1 14 1 89 1 35 1 295 1 75 1 
120 1 159 1 4 1 26 1 44 1 27 1 56 1 100 1 141 1 248 1 347 2 89 1 74 1 348 1 49 1 231 1 243 1 136 1 
87 1 
176 1 31 1 60 1 323 1 45 1 352 1 254 1 
21 1 332 1 162 1 2 1 67 1 45 1 127 1 346 1 16 1 176 1 117 1 190 1 143 1 317 1 60 1 352 2 94 1 
319 1 21 2 299 1 2 2 339 2 26 2 27 1 326 1 6 1 182 1 60 3 110 1 133 1 7 1 94 1 308 1 159 1 332 4 187 1 289 2 162 2 115 1 291 1 67 2 138 1 45 3 188 2 102 1 100 1 262 1 101 4 141 1 346 2 117 2 143 2 73 1 317 2 192 1 336 1 352 2 168 1 51 1 
339 3 2 2 324 1 226 1 57 1 32 1 60 4 110 2 332 4 162 1 115 2 291 2 67 1 188 3 45 4 102 2 346 1 18 1 69 1 143 1 242 1 352 2 336 2 194 1 
54 2 1 1 219 1 24 1 221 1 151 1 177 1 227 1 60 2 255 1 93 1 307 1 186 1 114 1 162 1 64 1 115 1 67 1 279 1 45 2 346 1 117 1 315 1 143 1 317 1 103 1 336 2 353 1 
162 1 67 1 323 1 45 1 346 1 176 1 143 1 60 1 254 1 352 1 
332 2 339 1 2 1 115 1 291 1 45 2 188 1 102 1 60 1 110 1 336 1 352 1 
176 1 117 1 21 1 317 1 352 1 94 1 
216 1 21 4 220 1 26 1 126 1 27 4 326 2 287 2 182 2 35 1 60 2 155 2 94 2 159 4 344 1 162 1 67 2 45 2 141 1 101 1 262 1 100 4 346 2 117 3 19 1 48 1 143 2 317 3 295 1 
1 2 170 1 24 2 26 1 27 1 326 1 222 1 272 1 151 2 183 1 156 1 343 1 38 1 255 3 307 2 93 1 159 1 114 3 345 1 259 1 138 1 237 1 100 1 141 1 262 1 101 1 292 1 314 1 241 1 193 1 78 1 351 2 
332 2 2 1 339 1 162 1 67 1 45 1 346 1 176 1 287 1 182 1 143 1 60 1 352 2 
158 1 306 1 
158 1 306 1 
158 1 306 1 
158 1 306 1 
158 1 306 1 
158 1 306 1 
158 1 306 1 
158 1 306 1 
288 1 152 1 
221 2 177 1 199 1 178 7 8 4 156 2 38 2 185 9 186 2 235 3 96 1 345 9 115 3 259 2 205 1 292 18 241 2 351 4 336 3 353 2 146 1 
186 1 235 1 96 1 115 1 345 4 221 1 31 1 199 1 178 3 292 8 8 2 336 1 353 1 146 1 185 4 
320 1 345 1 115 1 291 1 259 1 102 1 292 3 241 1 110 1 156 1 351 2 336 1 38 1 185 2 
235 1 115 1 345 3 291 1 324 1 102 1 226 2 18 1 292 6 178 1 179 1 110 1 336 1 185 3 
0 1 221 2 83 1 226 2 177 1 199 1 178 8 179 1 8 4 110 2 156 1 38 1 185 15 186 2 235 4 96 1 115 4 345 12 291 1 259 1 102 2 18 2 205 1 292 27 241 1 351 2 336 5 353 2 146 1 
292 1 345 1 226 1 
18 1 292 1 185 1 
235 2 345 2 115 1 291 1 102 1 292 5 178 2 133 1 110 1 336 1 185 3 
324 1 226 1 57 1 32 1 178 2 110 2 156 1 38 1 185 7 235 2 345 3 115 1 291 1 259 1 102 2 17 1 18 1 69 1 292 10 241 1 242 1 351 2 336 2 194 1 
186 1 235 1 115 1 345 3 221 1 292 6 178 2 8 1 336 1 353 1 185 3 
186 1 235 1 345 2 221 1 259 1 205 1 199 1 178 2 292 3 241 1 8 1 156 1 351 2 38 1 337 1 185 1 146 1 
186 1 235 2 345 5 115 2 221 1 177 1 178 4 292 10 8 2 336 2 353 1 185 5 
235 1 259 1 102 1 17 1 292 2 178 1 241 1 156 1 351 2 336 1 38 1 185 2 
235 1 345 1 115 1 291 1 259 1 102 1 17 1 178 1 292 3 241 1 110 1 156 1 351 2 336 1 38 1 185 2 
186 1 235 1 345 1 259 1 221 1 17 1 292 2 178 2 241 1 8 1 156 1 351 2 38 1 185 1 
53 1 320 1 221 2 324 1 226 3 177 1 199 1 178 8 8 4 110 2 156 4 38 4 185 16 186 2 235 4 96 1 345 14 115 5 291 2 259 4 140 1 102 2 17 1 205 1 18 3 292 30 241 4 265 1 294 1 351 8 336 5 353 2 146 1 
221 2 324 1 226 1 177 1 199 1 178 7 8 4 156 1 38 1 185 10 186 2 235 3 96 1 115 3 345 10 259 1 17 1 18 1 292 20 241 1 351 2 336 3 353 2 194 1 146 1 
320 1 221 2 324 1 226 2 177 1 199 1 178 8 179 1 8 4 110 1 156 2 38 2 185 12 186 2 235 4 96 1 115 3 345 11 259 2 102 1 17 1 18 1 292 23 241 2 351 4 336 4 353 2 194 1 146 1 
320 1 221 1 324 1 226 1 57 1 199 1 32 1 178 4 8 1 110 2 156 3 38 3 185 11 186 1 235 3 96 1 345 6 115 2 291 1 259 3 102 2 17 1 205 1 18 1 69 1 292 17 241 3 242 1 351 6 336 3 353 1 194 1 146 1 
320 1 221 2 324 1 226 1 57 1 177 1 199 1 32 1 178 8 8 4 110 2 156 3 38 3 185 16 186 2 235 4 96 1 345 12 115 4 291 1 259 3 102 2 17 1 205 1 18 1 69 1 292 28 241 3 242 1 351 6 336 5 353 2 194 1 146 1 
221 2 324 1 226 1 177 1 199 1 178 7 8 4 156 1 38 1 185 10 186 2 235 3 96 1 115 3 345 10 259 1 17 1 18 1 292 20 241 1 351 2 336 3 353 2 194 1 146 1 
324 1 226 1 57 1 32 1 178 2 110 2 156 2 38 2 185 7 235 2 345 3 115 1 291 1 259 2 102 2 17 1 205 1 18 1 69 1 292 10 241 2 242 1 351 4 336 2 194 1 
320 1 324 1 226 1 57 1 178 1 32 1 110 2 156 3 38 3 185 7 235 1 345 3 115 1 291 1 259 3 102 2 17 1 205 1 18 1 69 1 292 10 241 3 242 1 351 6 336 2 194 1 
324 1 226 1 57 1 178 2 32 1 110 2 156 2 38 2 185 7 235 2 345 3 115 1 291 1 259 2 140 1 102 2 17 1 18 1 69 1 292 10 241 2 242 1 351 4 336 2 194 1 
186 2 235 2 345 2 221 2 199 2 178 4 292 4 8 2 146 1 185 2 
324 1 226 1 57 1 178 1 32 1 110 2 156 3 38 3 185 7 235 1 345 3 115 1 291 1 259 3 140 1 102 2 17 1 205 1 18 1 69 1 292 10 241 3 242 1 351 6 336 2 194 1 
203 1 206 1 1 1 114 1 78 1 255 1 214 1 
310 1 203 1 112 1 322 1 1 1 114 1 15 1 206 1 131 1 78 1 214 1 255 1 
31 1 159 1 35 1 295 1 26 1 27 1 326 1 141 1 101 1 262 1 100 1 
159 1 1 1 170 1 114 2 24 1 138 1 26 1 27 1 326 1 222 1 101 1 262 1 100 1 141 1 151 1 330 1 78 1 255 2 
1 2 170 1 24 1 26 1 27 1 222 1 151 2 249 1 330 1 132 1 155 1 157 1 255 2 159 1 114 2 138 2 141 1 100 1 262 2 101 3 240 1 47 1 315 2 78 1 
123 1 1 2 170 1 24 1 26 1 27 1 151 2 249 1 330 1 132 1 155 1 157 1 255 2 159 1 114 2 138 2 141 1 100 1 262 2 101 3 240 1 47 1 315 2 78 1 
319 1 21 1 1 1 219 1 24 1 26 1 27 1 151 1 6 1 176 1 227 1 132 1 155 1 157 1 255 1 307 1 93 1 159 1 289 1 114 1 64 1 97 1 138 1 141 1 101 4 100 1 262 1 117 2 142 1 315 1 317 2 352 1 
319 1 21 1 1 1 219 1 24 1 26 1 27 1 151 1 6 1 176 1 227 1 132 1 155 1 157 1 255 1 307 1 93 1 159 1 289 1 114 1 64 1 138 1 141 1 101 4 100 1 262 1 117 2 315 1 317 2 168 1 352 1 
159 1 278 1 26 1 27 1 141 1 100 1 
244 1 218 1 26 3 84 1 27 5 326 2 29 1 180 1 308 1 159 6 257 1 278 1 43 1 138 1 141 2 101 3 262 2 100 6 71 1 298 1 
1 1 151 1 249 1 199 1 330 1 253 1 200 1 8 4 156 2 255 2 159 1 114 2 115 3 259 2 262 1 292 18 296 1 78 5 336 3 124 1 170 1 24 1 221 2 26 1 27 1 222 1 272 2 129 1 177 1 178 7 90 1 343 1 38 2 185 9 186 2 235 3 96 1 345 9 43 1 138 1 237 1 100 1 239 1 141 1 101 1 315 1 314 2 241 2 351 4 353 2 146 1 
319 1 54 2 1 1 323 1 326 1 6 1 151 1 60 4 201 1 254 1 255 1 159 1 289 1 114 1 162 2 64 1 115 2 67 2 117 3 168 1 336 2 21 2 299 1 219 1 24 1 221 1 126 1 27 1 176 2 177 1 227 1 94 1 93 1 307 1 186 1 187 1 279 1 45 5 101 2 100 1 346 2 315 1 143 2 317 3 51 1 352 2 353 1 
319 1 159 2 278 1 43 1 138 1 26 2 27 2 100 2 262 1 101 2 141 1 7 1 308 1 
159 4 283 1 35 1 295 1 43 1 26 1 27 4 326 1 141 1 101 1 262 1 100 4 277 1 
244 1 159 2 172 1 138 1 26 2 27 2 100 2 262 1 101 1 141 1 5 1 280 1 155 1 298 1 
159 1 347 1 74 1 49 1 26 1 27 1 326 1 141 1 100 1 136 1 
46 1 159 2 43 1 26 1 27 2 141 1 101 1 262 1 100 2 29 1 243 1 
159 5 283 1 218 1 43 1 26 2 27 4 326 1 100 5 262 2 101 3 141 2 29 1 71 1 35 1 295 1 155 1 
159 5 283 1 43 1 26 2 27 4 326 1 100 5 262 2 101 3 141 2 29 1 59 1 71 1 35 1 295 1 155 1 
159 1 123 1 1 1 170 1 114 2 24 1 138 1 26 1 27 1 326 1 101 1 262 1 100 1 141 1 151 1 330 1 78 1 255 2 
244 1 159 1 138 1 26 2 27 1 84 1 100 1 262 1 101 1 141 1 155 1 298 1 308 1 
109 1 80 1 88 1 150 1 78 1 
107 1 80 1 1 1 219 1 24 1 150 1 151 1 6 1 109 1 176 1 227 1 88 1 230 1 61 1 201 1 255 1 307 1 93 1 40 1 114 1 64 1 117 2 240 1 47 1 315 2 317 2 79 1 352 1 
109 1 1 1 88 1 114 1 125 1 150 1 312 1 325 1 255 1 
109 1 40 1 61 1 
31 1 148 1 270 1 139 1 
121 1 304 1 148 1 209 1 12 1 270 1 139 1 
313 1 304 1 65 1 
121 1 148 1 12 1 163 1 270 1 139 1 174 1 304 3 209 3 281 1 77 1 52 2 
121 1 304 2 81 1 148 1 209 2 12 1 270 1 139 1 95 1 
248 1 121 1 347 1 304 1 148 1 209 1 12 1 349 1 49 1 77 1 86 1 
121 1 304 1 148 1 209 1 12 1 139 1 77 1 
121 1 304 1 209 1 12 1 270 1 139 2 77 1 
121 2 148 1 12 2 139 1 238 1 85 1 302 1 304 2 209 2 77 1 
121 1 160 1 81 2 12 1 148 2 270 1 139 1 108 1 304 3 33 1 209 3 349 1 77 1 
120 1 121 1 81 1 148 1 12 1 270 1 139 1 248 1 347 2 304 2 209 2 74 1 49 1 77 1 92 1 
121 2 81 2 12 2 148 2 270 1 139 1 263 1 108 1 304 4 209 4 349 1 77 1 95 1 
121 1 304 1 148 1 209 1 12 1 270 1 139 1 77 1 
121 1 81 2 12 1 148 3 270 2 139 2 174 1 108 1 304 4 208 1 209 4 281 1 349 1 52 1 
215 1 121 1 81 1 148 1 12 1 270 1 139 1 328 1 304 2 209 2 77 1 282 1 
121 1 148 1 12 1 301 1 270 1 139 1 174 1 304 3 209 3 281 2 77 1 52 2 
148 2 266 1 3 2 39 1 
121 1 304 1 209 1 12 1 25 1 77 1 
121 1 304 2 81 1 33 1 148 1 209 2 12 1 270 1 139 1 77 1 
285 1 
121 1 304 1 148 1 209 1 12 1 270 1 139 1 77 1 
121 1 81 1 12 1 148 1 270 1 139 1 304 3 33 1 209 3 77 1 52 1 
208 1 148 1 349 1 108 1 
148 1 139 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (40,48,74,128,159) (16,144) (16,144) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (40,48,74,128,159) (16,144) (16,144) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (40,48,74,128,159) (16,144) (16,144) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (40,48,74,128,159) (16,144) (16,144) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 203 153 143 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 203 153 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 203 153 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 203 153 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 203 153 143 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 215 63 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 16 1 84 1 18 1 144 1 235 1 151 1 164 1 310 1 55 1 12 1 132 1 42 1 159 1 
164 1 151 1 295 1 16 1 84 1 18 1 310 1 55 1 12 1 144 1 132 1 235 1 42 1 159 1 
164 1 151 1 295 1 16 1 84 1 18 1 310 1 55 1 12 1 144 1 132 1 235 1 42 1 159 1 
164 1 151 1 295 1 16 1 84 1 18 1 310 1 55 1 12 1 144 1 132 1 235 1 42 1 159 1 
295 4 202 3 60 1 103 2 84 1 300 1 25 1 125 1 235 1 87 3 110 2 151 1 328 1 239 1 189 1 310 1 55 4 42 1 
295 2 277 1 300 1 25 1 87 1 235 1 151 1 152 1 127 1 164 1 239 1 310 1 55 2 12 1 42 1 159 1 
295 3 202 1 60 1 103 1 300 1 87 2 151 1 239 1 154 1 310 2 55 3 12 1 42 2 
199 1 202 7 295 9 84 1 300 1 87 5 125 1 310 2 93 1 55 9 12 1 60 3 103 4 232 1 25 1 235 1 110 2 151 1 328 1 239 1 189 1 154 1 112 1 42 2 
199 1 202 7 295 9 84 1 300 1 87 5 125 1 310 2 93 1 55 9 12 1 60 3 103 4 232 1 25 1 235 1 110 2 151 1 328 1 239 1 189 1 154 1 112 1 42 2 
187 1 14 1 51 1 
54 2 285 1 51 1 
32 1 331 2 290 2 9 2 246 2 2 2 156 1 150 2 
46 1 260 2 3 1 2 3 90 1 304 1 265 1 92 1 9 2 170 2 171 1 271 1 97 1 273 1 174 1 229 1 62 1 183 1 282 1 20 1 64 1 147 1 236 1 150 2 283 2 286 2 32 1 331 3 290 2 241 1 71 1 72 2 243 1 246 2 156 1 198 1 43 1 
129 1 32 1 331 1 290 1 9 1 246 1 172 1 194 1 2 1 150 1 
14 1 51 1 1 1 2 1 150 1 218 1 331 1 307 1 167 1 311 1 114 1 194 1 226 1 77 1 
14 1 51 1 1 2 2 1 150 1 290 1 331 1 307 1 9 1 311 1 246 1 114 1 194 1 226 1 77 2 
121 1 122 1 77 1 88 1 1 1 
81 1 14 1 122 1 51 1 77 2 88 1 261 1 1 2 
122 1 77 1 1 1 
181 1 88 1 1 1 2 1 150 1 129 1 32 1 290 1 331 1 9 1 172 1 246 1 194 1 77 1 
51 1 
81 1 14 1 122 1 51 1 258 1 77 2 88 1 1 2 
81 1 122 2 296 1 255 1 210 2 51 2 88 2 1 5 213 5 2 1 129 1 9 1 11 1 169 2 312 1 172 1 313 1 175 1 13 1 178 2 14 2 139 1 320 1 181 1 141 2 325 1 150 1 326 5 32 1 331 1 290 1 240 1 193 2 333 1 246 1 194 1 118 2 77 5 
187 1 156 1 
298 1 21 1 2 2 150 2 331 2 290 1 9 1 246 1 156 2 
217 1 301 1 162 1 
229 1 20 1 64 1 260 1 2 1 67 1 236 1 283 1 90 1 286 1 304 1 331 1 171 1 174 1 156 1 43 1 
80 1 229 1 209 1 20 1 64 1 260 1 236 1 2 2 150 1 283 1 90 1 304 1 286 1 217 1 331 2 9 1 171 1 246 1 174 1 43 1 
80 1 298 1 209 2 214 1 2 5 150 5 262 1 218 1 331 5 290 1 9 4 246 4 250 1 156 1 
129 1 331 2 9 2 246 2 194 1 35 1 2 2 150 2 
290 1 331 3 209 1 9 3 246 3 2 3 156 1 150 3 
129 1 331 1 9 1 246 1 194 1 2 1 150 1 
331 1 290 1 298 1 9 1 21 1 246 1 194 1 2 1 150 1 
80 1 46 1 298 1 209 1 1 1 260 1 3 1 2 4 90 1 304 1 265 1 307 1 9 3 170 1 223 1 311 1 171 1 271 1 273 1 174 1 226 1 229 1 59 1 62 1 282 1 20 1 64 1 236 1 150 3 283 1 286 1 32 1 290 2 331 4 241 1 71 1 72 2 243 1 246 3 114 1 194 1 77 1 156 1 43 1 
218 1 331 2 9 1 209 1 246 1 214 1 2 2 156 1 150 2 
80 1 59 1 298 1 209 2 51 1 1 1 2 3 150 3 288 1 290 1 331 3 307 1 9 3 311 1 246 3 194 1 114 1 77 1 226 1 
298 1 209 1 162 1 2 2 150 2 290 1 331 2 217 1 9 2 246 2 
229 1 20 1 64 1 260 1 2 1 236 1 283 1 286 1 304 1 90 1 331 1 171 1 174 1 156 1 43 1 
104 1 20 1 64 1 259 1 260 1 2 1 236 1 283 1 286 1 304 1 90 1 331 1 171 1 174 1 156 1 
297 1 301 2 52 1 162 2 6 1 217 2 264 1 265 2 308 1 170 4 131 1 271 1 273 1 62 1 141 1 22 1 282 1 147 2 241 1 72 2 242 1 193 1 243 1 338 1 
331 1 307 1 9 1 246 1 194 1 35 1 2 1 150 1 
28 1 149 1 
28 1 149 1 
184 1 294 1 
184 1 294 1 
184 1 294 1 
272 1 28 1 149 1 
28 1 197 1 149 1 
190 1 105 1 28 2 184 1 149 2 294 1 
272 1 28 1 149 1 
272 1 28 1 149 1 
134 1 28 1 149 1 
134 1 28 1 149 1 
134 1 28 1 149 1 
83 1 160 1 86 1 1 1 2 2 306 1 263 1 9 2 10 1 316 1 318 1 106 1 145 1 28 1 65 1 29 1 149 1 150 2 331 2 69 1 246 2 77 1 197 1 156 1 
100 1 83 1 51 1 85 1 108 1 28 2 1 2 149 2 306 2 190 1 263 2 69 2 10 2 95 2 337 1 77 2 314 1 158 1 316 3 
84 1 25 1 235 1 
152 1 25 1 235 1 
152 1 84 2 222 1 244 1 96 1 235 3 
152 1 319 1 84 1 222 1 96 1 235 2 
152 1 84 1 222 1 96 2 235 2 
252 2 200 1 44 2 81 1 254 1 122 1 297 1 51 2 49 1 86 1 88 4 213 2 1 5 54 3 169 1 176 1 135 1 178 1 318 1 14 1 141 1 65 1 326 3 285 1 192 2 193 1 333 1 33 1 335 1 338 1 118 1 77 5 
121 1 122 1 205 1 302 1 51 1 88 2 1 2 2 1 129 1 9 1 172 1 14 1 181 1 150 1 32 1 290 1 331 1 246 1 194 1 77 2 249 1 
44 1 252 2 254 1 297 1 51 3 49 1 86 1 88 2 1 3 213 2 54 4 169 1 176 1 135 1 13 1 178 1 14 1 141 1 326 3 285 2 192 2 193 1 33 1 118 1 77 3 338 1 
252 4 44 2 254 1 297 2 51 4 49 1 86 2 88 3 1 4 213 4 54 7 169 1 176 2 135 1 13 1 178 1 14 1 141 2 237 1 326 5 285 3 192 4 193 2 33 1 247 1 118 1 77 4 338 2 119 1 
187 1 90 1 274 1 
90 1 293 1 
137 1 
90 1 171 1 236 1 
90 1 23 1 
90 1 236 1 
90 3 70 1 171 1 274 2 236 1 39 1 
139 1 208 1 141 1 280 1 147 4 186 1 240 1 265 3 264 1 193 1 170 7 131 3 269 1 313 1 117 1 196 2 41 2 
139 1 208 1 141 1 280 1 147 4 186 1 240 1 265 3 264 1 193 1 170 7 131 3 269 1 313 1 117 1 196 2 41 2 
251 1 139 1 208 1 141 1 280 1 147 4 186 1 240 1 265 3 264 1 193 1 170 7 131 3 269 1 313 1 117 1 196 2 41 2 
123 4 297 2 208 2 256 1 299 3 257 1 265 13 220 1 264 4 219 1 170 29 269 1 131 7 313 2 176 3 228 1 139 1 62 1 280 2 141 3 282 1 146 1 147 16 186 1 287 1 240 2 241 1 72 2 193 4 243 1 117 1 338 3 196 3 41 3 
208 1 265 4 264 1 219 1 170 9 131 4 269 1 313 1 15 1 139 1 62 2 141 1 280 1 282 2 147 5 186 1 240 1 241 2 72 4 193 1 243 2 195 1 196 2 41 3 
202 1 295 2 84 1 300 1 211 1 87 1 260 1 166 1 304 1 5 1 216 1 309 1 310 1 55 2 12 1 174 1 322 1 24 1 25 1 235 2 283 1 151 1 152 1 286 1 239 1 155 1 244 1 36 1 42 1 78 1 
295 3 202 2 84 1 300 1 211 1 87 1 260 1 166 1 304 1 130 1 309 1 8 1 310 1 55 3 12 1 174 1 180 1 322 1 24 1 25 1 235 2 283 1 152 1 286 1 239 1 244 1 155 1 36 1 42 1 78 1 
295 2 202 2 84 1 300 1 211 1 87 1 260 1 166 1 304 1 130 1 309 1 8 1 55 2 12 1 174 1 24 1 25 1 235 2 283 1 152 1 286 1 239 1 244 1 36 1 78 1 
295 1 260 1 53 1 304 1 166 2 90 1 309 2 310 1 55 1 225 1 12 2 174 1 230 1 180 1 321 1 182 1 20 1 24 2 236 1 283 1 286 1 291 1 42 1 
295 1 84 1 211 1 322 1 24 1 25 1 235 2 260 1 283 1 152 1 151 1 304 1 286 1 166 1 216 1 310 1 8 1 309 1 55 1 244 1 155 1 12 1 174 1 36 1 78 1 42 1 
34 1 
81 1 122 2 260 2 1 3 213 1 2 1 304 1 90 1 218 1 307 1 7 1 167 1 169 1 311 1 226 1 174 1 135 1 178 1 138 1 321 1 182 1 20 2 236 1 150 1 283 2 326 1 286 2 331 1 191 1 333 1 334 1 194 1 114 1 118 1 77 3 120 1 340 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
81 1 122 1 138 1 258 1 1 3 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 3 120 1 
178 1 138 1 1 2 2 1 150 1 331 1 218 1 307 1 167 1 333 1 169 1 334 1 311 1 194 1 114 1 226 1 77 2 118 1 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
138 1 1 2 2 1 150 1 218 1 331 1 307 1 167 1 334 1 311 1 194 1 114 1 226 1 77 2 120 1 
178 1 138 1 1 2 2 1 150 1 331 1 218 1 307 1 167 1 333 1 169 1 334 1 311 1 194 1 114 1 226 1 77 2 118 1 120 1 
301 1 162 1 6 1 217 1 265 3 170 6 269 1 131 2 313 1 271 1 273 1 139 1 62 1 141 1 282 1 147 3 186 1 187 1 240 1 241 1 72 2 193 1 243 1 196 1 41 2 156 2 
204 1 123 3 47 1 299 3 256 1 301 10 303 1 3 1 162 3 4 1 217 10 220 1 265 4 264 2 170 12 131 2 271 1 273 2 176 2 62 2 183 1 282 2 147 8 185 1 241 2 72 4 193 2 243 2 338 2 156 1 
80 1 253 1 209 1 260 1 162 1 2 2 3 1 90 1 304 1 4 1 265 1 9 1 170 2 171 1 271 1 173 1 273 1 174 1 229 1 62 1 183 1 20 1 282 1 64 1 147 1 236 1 67 1 283 1 150 1 286 1 331 2 241 1 72 2 243 1 246 1 75 1 156 1 43 1 
80 1 260 1 3 1 2 2 162 2 165 1 4 1 90 1 265 2 264 2 94 1 9 1 170 5 171 1 271 2 273 2 174 1 176 1 20 1 282 2 283 1 286 1 193 1 38 1 41 1 43 1 209 1 301 2 304 1 217 2 131 3 133 1 229 1 62 2 64 1 147 3 236 1 150 1 331 2 330 1 241 2 71 1 72 4 243 2 246 1 338 1 
45 1 209 1 260 7 2 1 3 1 304 4 90 4 5 1 6 1 265 1 92 2 8 1 9 1 170 2 224 1 171 1 271 2 273 2 174 3 275 1 62 2 321 1 182 1 183 1 20 2 282 2 234 1 324 1 147 1 68 1 236 3 150 1 283 6 327 1 286 7 331 1 332 1 241 2 72 4 73 1 292 1 243 2 246 1 
297 1 298 1 301 1 161 1 162 1 2 1 4 1 217 1 265 2 9 1 170 3 271 1 273 1 176 1 62 1 141 1 282 1 147 1 150 1 290 1 331 1 241 1 72 2 193 1 243 1 246 1 338 1 
62 1 301 1 282 1 147 2 162 1 6 1 217 1 264 1 241 1 72 2 242 1 193 1 170 2 243 1 131 1 271 1 273 1 338 1 
297 1 62 1 141 1 301 1 282 1 22 1 162 1 6 1 217 1 241 1 265 2 72 2 170 2 243 1 271 1 273 1 
297 1 301 2 162 2 6 1 217 2 264 1 265 2 170 4 131 1 271 1 273 1 176 1 62 1 141 1 282 1 147 2 241 1 72 2 193 1 243 1 338 1 
275 1 62 1 301 1 282 1 147 2 162 1 217 1 264 1 241 1 72 2 242 1 193 1 170 2 243 1 131 1 271 1 273 1 338 1 
275 1 297 1 62 1 141 1 301 1 282 1 22 1 162 1 217 1 241 1 265 2 72 2 170 2 243 1 271 1 273 1 
275 1 62 1 301 1 282 1 147 2 162 1 217 1 264 1 241 1 72 2 193 1 170 2 243 1 131 1 271 1 273 1 338 1 176 1 
62 1 301 1 282 1 147 2 162 1 217 1 264 1 241 1 72 2 193 1 170 2 243 1 131 1 271 1 273 1 338 1 176 1 
260 1 2 1 3 1 304 1 90 1 265 1 170 2 171 1 271 1 273 1 174 1 229 1 62 1 183 1 20 1 282 1 64 1 147 1 236 1 283 1 286 1 331 1 71 1 241 1 72 2 243 1 156 1 43 1 
259 1 260 1 2 1 3 1 304 1 90 1 265 1 170 2 171 1 271 1 273 1 174 1 136 1 104 1 62 1 183 1 20 1 282 1 64 1 147 1 236 1 283 1 286 1 331 1 241 1 72 2 243 1 156 1 
62 1 301 1 282 1 147 2 162 1 4 1 217 1 264 1 241 1 72 2 193 1 170 2 243 1 131 1 271 1 273 1 338 1 176 1 
301 1 260 1 162 1 2 1 165 1 304 1 90 1 5 1 217 1 264 1 170 2 131 1 171 1 271 1 273 1 174 1 176 1 229 1 62 1 282 1 64 1 147 2 236 1 283 1 286 1 331 1 71 1 241 1 72 2 193 1 243 1 338 1 43 1 
298 1 301 1 2 1 162 1 4 1 217 1 264 1 9 1 170 2 131 1 271 1 273 1 176 1 317 1 62 1 282 1 147 2 150 1 290 1 331 1 241 1 72 2 193 1 243 1 246 1 338 1 
203 1 15 1 289 1 153 1 241 1 72 2 62 1 143 1 243 1 282 1 
203 1 15 1 289 1 153 1 241 1 72 2 62 1 143 1 243 1 282 1 
203 1 15 1 289 1 153 1 241 1 72 2 62 1 143 1 243 1 282 1 
203 1 15 1 289 1 153 1 241 1 72 2 62 1 143 1 243 1 282 1 
203 1 15 1 289 1 153 1 241 1 72 2 62 1 143 1 243 1 282 1 
111 1 331 1 2 1 150 1 
124 1 84 1 211 1 25 1 235 2 260 2 283 2 152 1 304 1 286 2 166 1 5 1 8 1 244 1 155 1 76 1 174 1 339 1 78 1 
84 1 140 1 211 1 25 1 235 2 260 1 283 1 152 1 286 1 166 1 304 1 8 1 244 1 155 1 76 1 174 1 78 1 
230 1 321 1 182 1 20 1 260 1 236 1 283 1 304 1 90 1 286 1 166 1 245 1 174 1 339 1 
124 1 84 1 211 1 25 1 235 2 260 1 283 1 152 1 304 1 286 1 166 1 8 1 244 1 155 1 76 1 174 1 339 1 78 1 
115 1 
326 1 187 1 14 1 320 1 51 1 175 1 213 1 
81 1 122 1 51 2 213 1 1 1 54 1 305 1 169 1 270 1 178 1 14 1 326 1 238 1 285 1 333 1 118 1 77 1 
252 3 81 1 260 1 1 2 90 4 169 2 267 1 171 1 174 1 274 1 176 1 178 2 102 1 20 1 283 1 31 1 286 1 285 3 192 3 193 1 293 2 118 2 122 2 297 1 210 1 51 3 213 3 54 6 304 2 226 1 133 1 135 1 141 1 142 1 323 1 236 1 326 4 70 1 333 2 336 1 77 2 338 1 157 1 
252 5 123 1 297 2 299 1 51 4 0 1 213 4 54 6 220 1 169 1 176 2 178 1 14 1 101 1 17 1 279 1 141 2 109 1 326 7 285 3 192 5 193 2 333 1 118 1 338 2 
255 1 210 2 1 1 213 2 2 1 129 1 9 1 11 1 169 1 172 1 313 1 178 1 139 1 278 1 181 1 141 1 150 1 326 2 32 1 331 1 240 1 290 1 193 2 333 1 246 1 194 1 118 1 77 1 
178 1 14 1 320 1 51 1 213 1 326 1 333 1 169 1 118 1 175 1 
252 2 297 1 141 1 51 2 213 2 54 4 326 2 285 2 192 2 193 1 338 1 176 1 
81 1 14 1 122 1 51 1 77 1 1 1 
81 2 122 4 260 4 213 2 1 3 304 1 90 1 7 1 169 2 56 2 174 1 135 2 177 1 13 1 178 2 179 1 321 1 182 1 20 2 236 1 283 4 326 2 286 4 191 1 333 1 118 2 77 3 37 1 340 2 
46 1 260 1 3 1 2 3 304 1 90 1 265 1 9 2 170 1 171 1 271 1 273 1 174 1 229 1 62 1 282 1 20 1 64 1 236 1 283 1 150 2 286 1 32 1 331 3 290 2 241 1 71 1 72 2 243 1 246 2 156 1 43 1 
252 2 178 1 14 2 51 4 213 2 54 4 326 1 285 2 192 2 333 1 169 1 118 1 196 1 135 1 340 1 
306 1 10 1 227 1 
306 1 168 1 10 1 108 1 29 1 
306 1 10 1 227 1 
306 1 10 1 227 1 
306 1 19 1 10 1 
306 1 19 1 10 1 
306 1 19 1 10 1 
306 1 10 1 
28 1 149 1 
139 1 62 2 141 1 282 2 147 4 186 1 240 1 265 4 264 1 241 2 219 1 72 4 193 1 170 8 243 2 131 3 269 1 313 1 196 1 41 2 
139 1 141 1 147 3 186 1 187 1 240 1 265 3 193 1 170 6 269 1 131 2 313 1 196 1 41 2 
297 1 62 1 141 1 282 1 30 1 147 2 265 2 241 1 264 1 72 2 193 1 170 4 243 1 131 1 338 1 176 1 
123 2 297 1 299 1 256 1 141 1 147 3 220 1 265 4 193 1 170 7 338 1 176 1 
297 2 123 2 47 1 256 1 299 2 303 1 265 12 264 4 219 1 11 1 170 25 269 1 131 8 313 2 176 2 139 2 62 1 141 5 282 1 147 13 186 1 240 2 241 1 72 2 193 5 243 1 338 2 196 1 41 4 
123 1 265 1 170 1 
299 1 170 1 147 1 
297 1 141 1 147 3 265 3 264 1 193 1 170 6 131 2 133 1 338 1 176 1 41 1 
123 1 297 2 299 1 0 1 264 1 265 7 220 1 170 13 131 2 176 2 15 1 101 1 17 1 62 1 279 1 141 2 282 1 147 6 109 1 241 1 72 2 193 2 243 1 338 2 41 1 
139 1 141 1 147 3 240 1 265 3 264 1 193 1 170 6 131 2 313 1 41 1 
62 1 282 1 147 1 186 1 329 1 240 1 264 1 265 2 219 1 241 1 72 2 170 3 243 1 131 2 269 1 313 1 41 1 
15 1 139 1 62 1 141 2 282 1 147 5 240 2 241 1 264 2 265 5 72 2 193 2 11 1 170 10 243 1 131 5 313 2 41 3 
15 1 62 1 282 1 147 2 241 1 264 1 72 2 193 1 170 2 243 1 131 1 338 1 
15 1 297 1 62 1 141 1 282 1 147 2 265 2 241 1 72 2 193 1 170 4 243 1 338 1 176 1 
15 1 62 3 282 3 148 1 147 1 329 1 240 1 219 1 265 2 241 3 264 1 72 6 170 3 243 3 131 2 313 1 41 1 
123 4 297 2 299 3 256 1 219 2 265 16 220 1 264 4 170 32 269 1 131 8 313 3 176 3 228 1 15 1 139 2 62 5 141 4 282 5 146 1 30 1 148 1 147 16 186 1 287 1 329 1 240 3 241 5 72 10 193 5 243 5 338 3 196 1 41 4 
123 2 299 1 256 1 265 5 220 1 170 11 131 2 269 1 313 1 176 1 15 1 139 1 62 1 141 1 279 1 282 1 147 6 186 1 240 1 241 1 72 2 193 2 243 1 338 1 196 1 41 2 
123 1 299 1 265 4 220 1 170 8 269 1 131 2 313 1 15 1 139 1 62 2 141 1 279 1 282 2 30 1 147 4 186 1 240 1 241 2 72 4 193 1 243 2 196 1 41 2 
123 1 297 2 299 1 0 1 265 7 220 1 264 1 170 13 131 1 176 2 15 1 101 1 17 1 62 2 279 1 141 2 282 2 30 1 147 6 109 1 241 2 72 4 193 2 243 2 338 2 
123 1 297 1 299 1 0 1 219 1 265 8 220 1 264 2 170 18 269 1 131 4 313 1 176 2 15 1 101 1 139 1 17 1 62 3 279 1 141 2 282 3 30 1 147 10 109 1 186 1 240 1 241 3 72 6 193 3 243 3 338 2 196 1 41 2 
123 2 299 1 256 1 265 5 220 1 170 11 131 2 269 1 313 1 176 1 15 1 139 1 62 1 141 1 279 1 282 1 147 6 186 1 240 1 241 1 72 2 193 2 243 1 338 1 196 1 41 2 
123 1 297 2 299 1 0 1 265 7 220 1 264 1 170 13 131 1 176 2 15 1 101 1 17 1 62 1 279 1 141 2 282 1 147 6 109 1 241 1 72 2 193 2 243 1 338 2 
123 1 297 1 299 1 0 1 219 1 265 5 220 1 264 1 170 12 131 1 176 2 15 1 101 1 17 1 62 3 279 1 141 1 282 3 30 1 147 7 109 1 241 3 72 6 193 2 243 3 338 2 
123 1 297 1 299 1 0 1 219 1 264 2 265 5 220 1 170 12 131 3 176 2 15 1 101 1 17 1 62 3 279 1 141 1 282 3 148 1 147 7 109 1 241 3 72 6 193 2 243 3 338 2 41 1 
139 1 141 1 147 3 186 1 240 3 265 4 264 3 193 1 170 7 269 2 131 6 313 3 41 3 
123 1 297 1 299 1 0 1 219 1 265 5 220 1 264 1 170 12 131 1 176 2 15 1 101 1 17 1 62 3 279 1 141 1 282 3 148 1 147 7 109 1 241 3 72 6 193 2 243 3 338 2 
331 1 218 1 2 1 214 1 66 1 156 1 150 1 
206 1 50 1 26 1 66 1 214 1 2 1 150 1 218 1 331 1 268 1 98 1 156 1 
187 1 304 1 90 1 286 1 321 1 182 1 20 1 174 1 260 1 236 1 283 1 
209 1 20 1 64 1 260 1 236 1 2 2 150 1 283 1 90 1 304 1 286 1 331 2 9 1 171 1 246 1 174 1 156 1 43 1 
209 1 260 1 2 2 304 1 90 3 307 1 9 2 56 1 311 1 171 2 174 1 61 1 64 1 23 1 236 2 283 1 150 2 286 1 331 2 246 1 194 1 156 1 43 1 
209 1 260 2 2 2 304 1 90 3 307 1 9 2 56 1 311 1 171 2 174 1 315 1 61 1 104 1 64 1 23 1 236 2 283 2 150 2 286 2 331 2 246 1 194 1 156 1 
201 1 14 1 122 1 61 1 20 1 51 1 23 1 1 2 260 3 236 1 283 3 304 1 286 3 90 4 56 1 171 1 57 1 226 1 77 2 293 1 274 1 174 1 315 1 
14 1 122 1 61 1 20 1 51 1 23 1 1 2 260 3 236 1 283 3 304 1 286 3 90 4 56 1 171 1 336 1 226 1 77 2 293 1 274 1 174 1 315 1 
304 1 286 1 116 1 174 1 260 1 283 1 
260 6 304 3 90 3 5 1 92 1 8 1 171 1 224 1 174 2 231 1 20 2 234 1 324 1 236 2 68 1 283 5 286 6 70 1 332 1 73 1 
260 1 162 1 2 2 165 1 4 1 90 1 5 1 265 3 9 1 170 6 171 1 269 1 271 2 273 2 174 1 282 2 283 1 186 1 286 1 193 1 196 1 41 2 43 1 209 1 301 1 126 1 304 1 217 1 131 2 313 1 229 1 139 1 62 2 141 1 64 1 147 3 236 1 150 1 330 1 331 2 240 1 71 1 241 2 72 4 243 2 246 1 156 2 
81 1 122 2 51 1 88 1 213 1 1 3 260 1 90 2 169 2 175 1 274 1 226 1 178 2 14 1 320 1 102 1 20 1 323 1 283 1 326 1 286 1 333 2 336 1 118 2 77 3 293 1 37 1 157 1 
260 2 236 1 283 2 286 2 90 2 304 2 5 1 70 1 267 1 171 1 116 1 274 1 174 1 
321 1 182 1 20 1 260 4 236 1 283 4 304 1 286 4 90 1 5 1 58 1 174 1 315 1 
45 1 260 2 236 1 283 2 286 2 327 1 90 1 304 2 332 1 73 1 56 1 171 1 174 1 99 1 
152 1 304 1 286 1 211 1 20 1 25 1 235 1 174 1 260 1 283 1 
260 2 236 1 283 2 286 2 90 1 304 1 5 1 8 1 221 1 224 1 174 1 
321 1 182 1 20 1 234 1 324 1 260 5 236 2 283 4 286 5 90 3 304 2 5 1 56 1 224 1 58 1 174 2 
321 1 182 1 20 1 234 1 260 5 236 2 283 4 286 5 188 1 90 3 304 2 5 1 56 1 224 1 58 1 174 2 
104 1 209 1 20 1 64 1 260 1 236 1 2 2 150 1 283 1 90 1 304 1 286 1 331 2 9 1 171 1 246 1 174 1 156 1 
231 1 260 1 236 1 283 1 286 1 90 1 304 2 332 1 70 1 73 1 56 1 171 1 174 1 
215 1 111 1 281 2 27 1 
215 1 82 1 111 1 63 1 281 2 27 1 77 1 88 1 1 1 248 1 
215 1 27 1 
82 1 63 1 281 1 
187 1 239 1 300 1 87 1 
295 1 239 1 310 1 300 1 55 1 87 1 42 1 
295 1 12 1 24 1 
295 3 48 1 300 1 87 1 151 1 128 1 239 1 310 1 55 3 40 1 42 1 159 2 
202 1 295 2 239 1 310 1 300 1 55 2 87 1 42 1 110 1 
151 1 295 1 189 1 84 1 103 1 310 1 55 1 25 1 235 1 87 1 42 1 
151 1 295 1 310 1 300 1 55 1 87 1 42 1 
151 1 295 1 239 1 310 1 300 2 55 1 42 1 
295 2 300 1 87 1 89 1 151 1 91 1 310 2 113 1 55 2 42 2 
199 1 295 3 202 2 60 1 103 1 300 1 232 1 87 2 151 1 239 1 310 1 55 3 42 1 
295 2 202 1 276 1 84 1 300 1 25 1 87 1 235 2 152 1 151 1 239 1 310 1 55 2 244 1 42 1 
295 4 202 2 60 1 103 1 300 1 125 1 87 2 110 1 151 1 239 1 310 2 55 4 42 2 
151 1 295 1 239 1 310 1 300 1 55 1 87 1 42 1 
202 2 295 4 60 1 48 1 103 1 300 2 107 1 87 3 128 1 239 2 310 1 55 4 42 1 159 1 
295 2 202 1 300 1 87 1 212 1 151 1 284 1 239 1 310 1 93 1 55 2 42 1 
295 3 48 1 300 1 87 1 151 1 128 2 239 1 310 1 55 3 74 1 42 1 159 2 
79 1 266 1 87 2 163 2 
151 1 295 1 310 1 55 1 233 1 42 1 
199 1 151 1 202 1 295 2 239 1 310 1 300 1 55 2 87 1 42 1 
207 1 
151 1 295 1 239 1 310 1 300 1 55 1 87 1 42 1 
199 1 202 1 295 3 300 1 87 1 151 1 239 1 310 1 55 3 42 1 159 1 
60 1 103 1 107 1 87 1 
300 1 87 1 

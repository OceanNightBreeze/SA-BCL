#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) (132,147) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (132,147) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) (132,147) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (83,133,148,321) (83,133,148,321) (83,133,148,321) 166 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 235 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 193 112 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
133 1 166 1 321 1 148 1 305 1 
121 1 90 1 272 1 
310 2 272 1 38 1 
179 1 316 2 303 2 203 2 21 2 255 2 176 1 222 2 
179 1 82 1 1 1 2 1 182 1 4 1 185 1 92 1 52 1 102 1 197 2 202 1 303 3 203 2 302 2 21 2 111 1 206 1 311 1 115 1 159 1 207 2 248 1 314 1 71 1 118 1 315 1 316 3 77 1 288 1 290 1 217 2 39 2 255 2 176 1 220 1 222 2 
316 1 63 1 267 1 128 1 303 1 203 1 21 1 255 1 176 1 222 1 
275 1 87 1 224 1 8 1 316 1 121 1 267 1 317 1 55 1 272 1 19 1 303 1 178 1 222 1 
275 2 87 1 224 1 8 1 316 1 121 1 267 1 317 1 55 2 272 1 203 1 303 1 255 1 21 1 222 1 
275 1 55 1 299 1 208 1 263 1 
110 1 275 2 121 1 55 2 299 1 238 1 272 1 263 1 
275 1 55 1 263 1 
275 1 63 1 128 1 316 1 267 1 55 1 299 1 170 1 203 1 303 1 176 1 255 1 21 1 222 1 
272 1 
275 2 121 1 55 2 299 1 238 1 272 1 263 1 192 1 
275 5 205 2 46 1 85 1 228 1 94 1 162 2 263 2 73 1 284 1 121 1 136 1 55 5 268 2 266 1 299 2 214 1 238 1 272 1 
179 1 90 1 
179 2 48 1 28 1 316 2 303 2 203 1 255 1 21 1 222 2 
137 1 65 1 194 1 
179 1 82 1 182 1 206 1 115 1 314 1 118 1 316 1 197 1 102 1 106 1 288 1 39 1 303 1 302 1 220 1 
82 1 182 1 206 1 115 1 314 1 118 1 194 1 102 1 316 2 197 1 78 1 288 1 323 1 39 1 203 1 303 2 302 1 21 1 220 1 222 1 
179 1 316 3 323 1 303 3 203 3 255 1 21 3 222 3 
316 1 63 1 267 1 303 1 203 1 21 1 222 1 
316 1 267 1 48 1 303 1 203 1 21 1 255 1 222 1 28 1 
179 1 82 1 2 1 182 1 4 1 87 1 224 1 8 1 52 1 102 1 197 1 140 1 267 1 55 1 202 1 303 4 203 3 302 1 21 3 275 1 206 1 115 1 311 1 159 1 207 1 248 1 314 1 71 1 118 1 28 1 315 1 316 4 317 1 78 1 288 1 323 1 290 1 217 2 39 1 219 1 220 1 255 2 176 1 222 3 
179 1 316 2 187 1 19 1 323 1 303 2 203 1 21 1 222 2 
275 1 87 1 224 1 96 1 8 1 28 1 316 3 55 1 317 1 267 1 78 1 272 1 323 2 203 3 303 3 219 1 255 1 21 3 222 3 
316 1 303 1 203 1 21 1 255 1 194 1 222 1 28 1 
179 1 82 1 182 1 206 1 115 1 314 1 118 1 316 1 197 1 102 1 288 1 39 1 303 1 302 1 220 1 
179 1 82 1 3 1 182 1 206 1 115 1 314 1 316 1 197 1 102 1 288 1 58 1 39 1 303 1 302 1 
155 1 2 1 65 1 246 1 4 1 207 2 248 1 191 1 71 2 194 1 315 1 286 1 35 1 202 1 217 2 290 1 
316 1 267 1 224 1 303 1 203 1 211 1 21 1 222 1 
179 1 226 1 187 1 280 1 28 1 316 5 78 1 19 1 323 2 203 4 303 5 21 4 255 1 222 5 
316 2 63 1 267 1 211 1 303 2 203 2 21 2 222 2 
181 1 54 1 
181 1 54 1 
252 1 97 1 
252 1 97 1 
252 1 97 1 
81 1 181 1 54 1 
181 1 54 1 116 1 
181 2 54 2 186 1 252 1 93 1 97 1 
81 1 181 1 54 1 
81 1 181 1 54 1 
181 1 54 1 278 1 
181 1 54 1 278 1 
181 1 54 1 278 1 
275 2 181 2 308 1 126 1 223 2 114 1 91 1 186 1 7 1 54 2 298 1 76 2 55 2 144 2 300 3 37 2 272 1 240 2 304 1 
179 1 181 1 229 1 7 1 54 1 55 1 300 1 144 1 240 1 146 1 203 2 303 2 21 2 22 1 275 1 116 1 316 2 165 1 75 1 76 1 213 1 37 1 125 1 222 2 
122 1 15 1 291 1 
32 1 15 1 291 1 
122 2 32 1 161 1 101 1 221 1 291 3 
122 1 276 1 32 1 161 1 101 1 291 2 
122 1 32 1 161 2 101 1 291 2 
94 3 263 1 191 1 195 1 268 1 267 1 272 2 203 1 21 1 275 5 205 1 121 1 33 1 38 1 222 1 46 1 128 1 129 1 130 2 50 1 232 2 136 2 55 5 299 4 238 1 146 1 303 1 155 1 63 1 247 1 310 3 162 1 72 1 316 1 163 2 170 1 171 1 254 1 176 1 255 1 
94 3 191 1 263 3 195 1 105 1 267 1 268 1 272 2 203 1 21 1 275 5 205 1 208 2 121 1 33 1 38 1 222 1 46 1 225 2 128 1 129 1 232 2 136 2 55 5 299 4 238 1 146 1 303 1 155 1 63 1 247 1 310 3 160 1 162 1 72 1 316 1 163 2 170 1 171 1 255 1 176 1 
128 1 228 1 94 1 129 1 130 1 50 1 232 1 195 1 136 2 267 1 268 1 55 3 299 2 272 2 146 1 303 1 203 1 21 1 275 3 63 1 205 1 310 2 162 1 72 1 316 1 121 1 163 1 33 1 170 1 171 1 38 1 254 1 255 1 176 1 222 1 
228 1 94 1 129 2 130 2 232 2 50 1 195 1 136 4 268 1 55 4 299 3 16 1 272 3 146 2 59 1 275 4 205 1 310 4 162 1 72 1 121 1 163 2 33 2 123 1 171 2 38 2 254 1 
82 1 90 1 36 1 
82 1 193 1 
285 1 
82 1 206 1 
285 1 82 3 102 1 134 1 103 1 206 1 36 2 
82 1 102 1 206 1 
82 1 5 1 
23 1 155 1 111 4 156 3 309 1 69 1 6 1 207 7 129 1 231 2 71 3 10 1 233 1 51 1 149 1 218 2 177 1 
23 1 155 1 111 4 156 3 309 1 69 1 6 1 207 7 129 1 231 2 71 3 10 1 233 1 51 1 149 1 218 2 177 1 
23 1 155 1 111 4 156 3 309 1 69 1 127 1 6 1 207 7 129 1 231 2 71 3 10 1 233 1 51 1 149 1 218 2 177 1 
42 1 292 3 183 1 86 1 4 1 6 5 129 4 191 3 231 3 294 1 10 2 233 1 51 2 13 1 149 1 202 1 273 4 23 1 111 16 155 4 156 8 309 2 69 1 207 31 282 1 71 15 315 1 33 3 171 3 290 1 217 2 218 3 40 1 177 2 
4 2 6 1 129 1 231 2 294 1 10 1 51 1 200 1 202 2 149 1 62 1 23 1 155 1 111 5 156 4 309 1 69 1 207 9 71 4 315 2 290 2 217 4 218 3 177 1 
133 1 166 1 321 1 148 1 305 1 
133 1 321 1 148 1 147 1 305 1 
83 1 321 1 132 1 305 1 
133 1 321 1 148 1 147 1 305 1 
133 1 166 1 321 1 148 1 305 1 
253 1 
82 1 182 2 46 1 94 1 263 2 102 1 197 2 135 1 139 1 136 1 268 1 55 2 238 1 269 1 302 2 275 2 205 1 64 1 206 1 279 1 314 2 162 1 72 1 120 1 169 1 288 1 215 1 39 2 
87 1 224 1 188 2 263 2 192 1 8 1 55 3 267 1 238 1 19 1 303 1 275 3 113 1 209 1 316 1 317 1 320 1 287 1 168 1 173 1 222 1 178 1 
87 1 224 1 89 1 188 3 263 1 192 1 8 1 55 3 267 1 238 1 19 1 272 1 303 1 275 3 113 1 209 1 316 1 121 1 317 1 320 1 168 1 173 1 222 1 178 1 
87 1 224 1 89 1 188 3 192 1 263 2 8 1 55 3 267 1 238 1 19 1 272 1 303 1 275 3 113 1 312 1 209 1 316 1 121 1 317 1 320 1 287 1 168 1 173 1 222 1 178 1 
87 1 184 1 89 4 188 6 94 1 192 1 263 7 8 1 100 1 267 1 268 1 19 1 272 5 109 1 275 5 205 1 277 1 113 1 209 1 121 5 287 4 216 1 38 2 222 1 46 1 224 1 227 2 136 1 55 5 141 1 143 2 238 3 303 1 152 2 243 1 312 4 162 1 316 1 317 1 320 1 168 1 173 1 175 2 178 1 
87 1 89 2 188 4 94 1 263 4 8 1 100 1 12 1 267 1 268 1 19 1 272 2 275 4 205 1 113 1 209 1 121 1 287 2 216 1 38 2 222 1 46 1 224 1 227 2 136 1 55 4 143 2 238 2 303 1 152 2 310 2 312 2 162 1 316 1 317 1 320 1 168 1 173 1 175 2 178 1 
46 1 184 1 87 1 89 2 224 1 227 2 94 1 188 4 263 4 8 1 100 1 136 1 268 1 55 4 267 1 143 2 238 2 272 1 19 1 303 1 152 2 109 1 275 4 243 1 205 1 113 1 312 2 162 1 209 1 316 1 121 1 317 1 287 2 320 1 168 1 38 2 216 1 173 1 175 2 222 1 178 1 
46 1 184 1 87 1 89 2 224 1 227 2 94 1 188 4 263 4 8 1 100 1 136 1 268 1 55 4 267 1 143 2 238 2 272 1 19 1 303 1 152 2 109 1 275 4 243 1 205 1 113 1 312 2 162 1 209 1 316 1 121 1 317 1 287 2 320 1 168 1 38 2 216 1 173 1 175 2 222 1 178 1 
275 2 87 1 224 1 113 1 188 2 8 1 209 1 316 1 317 1 267 1 55 2 235 1 320 1 168 1 19 1 173 1 303 1 178 1 222 1 
46 1 184 1 87 1 224 1 89 3 227 2 94 1 188 5 263 5 8 1 100 1 136 1 268 1 55 4 267 1 141 1 143 2 238 2 272 1 19 1 303 1 152 2 109 1 275 4 243 1 205 1 113 1 312 3 162 1 209 1 316 1 121 1 317 1 320 1 287 3 168 1 38 2 216 1 173 1 175 2 222 1 178 1 
46 1 184 1 87 1 224 1 89 3 227 2 94 1 188 5 263 5 8 1 100 1 136 1 268 1 55 4 267 1 141 1 143 2 238 2 272 1 19 1 303 1 152 2 109 1 275 4 243 1 205 1 113 1 312 3 162 1 209 1 316 1 121 1 317 1 320 1 287 3 168 1 38 2 216 1 173 1 175 2 222 1 178 1 
87 1 89 2 188 4 94 1 190 1 263 4 8 1 100 1 12 1 267 1 268 1 199 2 19 1 272 1 275 4 205 1 113 1 209 1 121 1 287 2 222 1 46 1 224 1 227 2 136 1 55 4 238 2 303 1 152 2 307 2 310 2 312 2 162 1 316 1 317 1 320 1 168 1 173 1 178 1 
179 2 23 1 155 1 111 3 156 2 2 1 65 1 4 1 69 1 90 1 207 6 129 1 248 1 231 1 71 3 194 1 51 1 315 1 137 1 286 1 149 1 202 1 217 2 290 1 218 2 177 1 
179 1 292 2 2 1 260 1 4 2 6 1 129 2 98 1 191 1 131 1 194 8 52 1 137 7 267 1 237 1 202 2 273 2 111 6 155 1 156 2 65 8 207 11 248 2 71 5 282 1 315 2 167 1 33 2 171 2 290 2 217 4 218 1 41 1 
179 1 82 1 1 1 182 1 2 1 4 1 47 1 230 1 295 1 102 1 197 1 52 1 137 1 106 1 202 1 302 1 303 2 203 1 21 1 111 1 206 1 115 1 207 2 248 1 314 1 118 1 71 1 316 2 315 1 78 1 288 1 323 1 39 1 217 2 290 1 220 1 41 1 222 1 
179 2 82 2 1 1 2 3 182 2 4 3 6 2 191 2 194 7 197 1 102 2 17 1 202 3 20 2 203 1 21 1 23 1 111 10 206 2 115 2 207 20 117 2 27 2 118 2 33 2 288 2 39 1 290 3 217 6 218 4 220 2 222 1 41 1 129 3 231 1 51 1 52 1 137 6 149 1 302 1 303 3 155 3 156 6 65 7 69 1 311 2 248 3 314 1 71 10 315 3 316 3 319 1 78 1 171 2 323 1 322 2 177 1 
82 1 1 1 182 2 2 1 4 1 102 1 197 2 52 1 139 1 269 1 270 1 202 1 302 2 153 1 111 1 64 1 206 1 207 2 248 1 314 1 71 1 315 1 120 1 77 1 288 1 215 1 39 2 290 1 217 2 
2 1 4 1 129 1 191 1 194 1 137 1 202 1 203 1 303 1 21 1 244 1 111 1 155 1 156 1 65 1 207 3 248 1 71 2 28 1 315 1 316 1 33 1 171 1 290 1 217 2 218 1 255 1 41 1 222 1 
111 2 156 1 2 1 65 1 4 1 6 1 207 2 248 1 129 1 194 1 315 1 137 1 286 1 142 1 33 1 202 1 217 2 290 1 
155 1 2 1 65 1 4 1 207 2 248 1 191 1 71 2 194 1 315 1 286 1 35 1 202 1 217 2 290 1 
155 1 111 2 2 1 65 2 4 1 207 4 248 1 129 1 191 1 71 2 194 2 315 1 286 1 33 1 171 1 202 1 217 2 290 1 
111 2 156 1 2 1 65 1 4 1 6 1 207 2 248 1 129 1 194 1 315 1 137 1 142 1 33 1 270 1 202 1 217 2 290 1 
155 1 2 1 65 1 4 1 207 2 248 1 191 1 71 2 194 1 315 1 35 1 270 1 202 1 217 2 290 1 
155 1 111 2 2 1 65 2 4 1 207 4 248 1 129 1 191 1 71 2 194 2 315 1 33 1 171 1 270 1 202 1 217 2 290 1 
155 1 111 2 2 1 65 2 4 1 207 4 248 1 129 1 191 1 71 2 194 2 315 1 33 1 171 1 202 1 217 2 290 1 
179 1 82 1 1 1 182 1 2 1 4 1 102 1 197 1 52 1 202 1 302 1 303 1 111 1 206 1 115 1 311 1 207 2 248 1 314 1 118 1 71 1 316 1 315 1 288 1 39 1 217 2 290 1 220 1 
82 1 204 1 3 1 182 1 206 1 115 1 314 1 316 1 197 1 102 1 288 1 58 1 39 1 303 1 302 1 
155 1 111 2 2 1 65 2 4 1 207 4 248 1 129 1 191 1 71 2 194 2 315 1 33 1 171 1 202 1 217 2 290 1 41 1 
82 1 182 1 2 1 4 1 129 1 191 1 194 2 102 1 197 1 202 1 20 1 302 1 303 1 155 1 111 2 65 2 206 1 115 1 311 1 207 4 248 1 26 1 71 2 118 1 316 1 315 1 33 1 288 1 171 1 39 1 217 2 290 1 220 1 
2 1 4 1 6 1 262 1 129 1 191 1 194 1 137 1 202 1 203 1 303 1 21 1 155 1 111 2 156 1 65 1 207 3 248 1 71 1 28 1 315 1 316 1 33 1 171 1 290 1 217 2 255 1 41 1 222 1 
257 1 292 1 84 1 45 1 183 1 4 2 6 1 129 2 191 1 53 1 271 1 202 2 273 2 62 1 306 1 111 6 155 1 156 1 207 11 71 5 282 1 315 2 31 1 34 1 33 2 171 2 290 2 217 4 
257 1 292 2 183 2 4 2 129 3 191 1 294 1 296 1 9 1 264 1 53 1 271 2 57 1 202 2 108 1 273 2 62 1 155 1 306 2 111 13 156 1 207 23 25 1 71 10 315 2 29 1 31 4 34 1 33 3 171 3 290 2 217 4 218 1 
257 1 292 1 45 1 183 1 4 2 6 2 129 2 191 2 264 1 53 1 271 1 202 2 273 2 62 1 306 1 111 7 155 2 156 2 207 15 71 8 282 1 315 2 31 2 34 1 33 2 171 2 290 2 217 4 
257 1 292 1 45 1 183 1 4 2 6 1 129 2 191 2 264 1 53 1 271 1 202 2 273 2 62 1 306 1 111 7 155 2 156 1 207 15 71 8 282 1 315 2 31 2 34 1 33 2 171 2 290 2 217 4 
257 1 292 2 183 2 4 2 6 1 129 5 191 1 231 1 294 1 296 1 9 1 264 1 51 1 53 1 271 1 57 1 149 1 202 2 108 1 273 3 23 1 62 1 155 2 306 1 111 18 156 3 69 1 207 31 25 1 71 13 282 1 315 2 29 1 31 4 34 1 33 4 171 4 290 2 217 4 218 2 177 1 
30 1 181 1 54 1 308 1 76 1 114 1 144 1 186 1 37 1 240 1 
213 1 116 1 
104 1 181 1 54 1 76 1 158 1 144 1 37 1 240 1 210 1 
275 1 181 1 308 1 126 1 223 1 114 1 91 1 186 1 7 1 54 1 55 1 76 1 144 1 300 2 37 1 272 1 240 1 304 1 
275 1 181 1 308 1 126 1 223 1 114 1 91 1 186 1 7 1 54 1 55 1 76 1 144 1 300 2 37 1 272 1 240 1 304 1 
275 1 181 1 308 1 126 1 223 1 114 1 91 1 186 1 7 1 54 1 55 1 76 1 144 1 300 2 37 1 272 1 240 1 304 1 
81 1 93 1 283 1 
81 1 93 1 283 1 
278 1 49 1 
93 1 278 1 49 1 
75 1 229 1 
179 1 181 1 223 1 91 1 229 1 54 1 55 1 299 1 144 1 300 1 240 1 146 1 303 2 203 2 21 2 22 1 275 1 116 1 316 2 165 1 75 1 76 1 213 1 37 1 174 1 125 1 222 2 
81 1 283 1 
93 1 278 1 49 1 
0 1 80 1 1 1 182 1 2 1 4 1 197 2 52 1 265 1 202 1 150 1 303 2 302 2 153 1 111 1 207 2 248 1 313 1 71 1 316 2 315 1 77 2 288 1 39 2 217 2 290 1 41 1 222 2 
180 1 182 1 66 1 157 1 26 1 197 2 196 1 122 1 138 1 32 1 234 1 15 1 288 1 251 1 124 1 39 2 302 2 221 1 291 2 
180 1 182 1 66 1 197 1 196 1 122 1 138 1 32 1 234 1 15 1 288 1 124 1 241 1 39 1 302 1 221 1 291 2 
43 1 82 1 182 2 99 1 197 1 102 1 139 1 234 1 269 1 302 1 64 1 157 1 206 1 314 1 120 1 164 1 288 1 215 1 39 1 
180 1 182 1 66 1 157 1 197 1 196 1 122 1 138 1 32 1 234 1 15 1 251 1 288 1 124 1 39 1 302 1 221 1 291 2 
172 1 
284 1 121 1 136 1 214 1 90 1 94 1 272 1 
46 1 94 1 263 1 136 1 268 1 55 1 143 1 238 1 272 2 275 1 205 1 310 1 162 1 121 1 38 1 216 1 175 1 
82 1 205 1 182 1 112 1 46 1 206 1 162 1 314 1 193 1 102 1 197 1 134 1 268 1 288 1 289 1 39 1 302 1 
292 1 183 1 46 2 94 8 129 2 263 1 191 2 296 1 9 1 232 5 135 1 136 5 55 1 268 2 238 1 272 5 57 1 108 1 151 1 273 1 275 1 205 2 155 2 310 6 70 2 162 2 72 1 29 1 163 5 121 2 33 2 250 1 171 2 38 3 79 1 
46 1 128 1 94 2 129 2 51 1 136 2 267 1 268 1 55 1 56 1 149 1 303 1 203 1 21 1 109 1 275 1 63 1 205 1 155 1 70 2 162 1 316 1 170 1 79 1 176 1 255 1 177 1 222 1 
205 1 46 1 94 1 162 1 284 1 121 1 136 1 268 1 214 1 272 1 
163 1 136 2 310 2 33 1 171 1 272 1 38 1 129 1 232 1 
275 1 121 1 55 1 238 1 272 1 263 1 
82 1 182 2 46 1 94 1 263 2 102 1 197 2 135 1 139 1 136 1 268 1 55 1 238 1 269 1 302 2 275 1 205 1 64 1 206 1 279 1 162 1 314 2 72 1 120 1 318 1 169 1 288 1 215 1 39 2 
179 1 82 1 182 1 2 1 4 1 52 1 197 1 102 1 202 1 302 1 303 3 203 2 21 2 206 1 311 1 115 1 159 1 207 1 248 1 314 1 71 1 118 1 315 1 316 3 288 1 290 1 217 2 39 1 255 2 176 1 220 1 222 2 
205 1 46 1 310 2 94 1 162 1 72 1 135 1 163 1 121 1 136 1 268 1 272 2 38 1 
236 1 144 1 240 1 
75 1 114 1 144 1 240 1 261 1 
236 1 144 1 240 1 
236 1 144 1 240 1 
144 1 201 1 240 1 
144 1 201 1 240 1 
144 1 201 1 240 1 
144 1 240 1 
181 1 54 1 
23 1 155 1 111 4 156 3 4 2 69 1 207 8 6 1 129 1 231 1 294 1 71 4 315 2 51 1 149 1 202 2 217 4 290 2 218 2 177 1 
51 1 23 1 155 1 111 3 156 2 69 1 90 1 207 6 129 1 149 1 231 1 218 2 71 3 177 1 
111 2 24 1 4 1 207 2 129 1 315 1 33 1 171 1 202 1 217 2 290 1 
155 1 292 1 111 3 156 1 183 1 207 7 6 1 129 1 191 1 71 4 282 1 33 1 171 1 273 2 
292 2 260 1 4 1 6 4 129 5 191 1 231 1 294 1 51 2 56 1 149 2 202 1 273 2 23 1 111 13 155 4 156 8 69 1 207 23 282 1 71 10 315 1 167 1 33 2 171 2 217 2 290 1 218 4 177 2 
207 1 71 1 273 1 
111 1 292 1 207 1 
111 3 155 1 156 1 207 6 6 1 129 1 191 1 117 1 71 3 33 1 171 1 
292 1 183 1 4 2 6 1 129 2 191 1 296 1 294 1 9 1 57 1 108 1 202 2 273 1 62 1 155 1 111 6 156 2 207 11 71 5 315 2 29 1 33 2 171 2 290 2 217 4 218 1 
111 3 155 1 156 2 207 6 6 1 129 1 71 3 51 1 149 1 218 1 177 1 
23 1 111 1 156 2 69 1 4 1 6 1 207 3 294 1 71 2 51 1 315 1 202 1 60 1 217 2 290 1 218 1 177 1 
62 1 111 5 155 2 156 5 4 1 6 2 207 10 129 2 71 5 315 1 51 2 56 1 202 1 149 1 290 1 217 2 218 3 177 2 
62 1 111 2 4 1 207 2 129 1 315 1 33 1 202 1 217 2 290 1 
62 1 111 2 4 1 207 2 129 1 315 1 33 1 171 1 202 1 217 2 290 1 
62 1 111 1 45 1 156 2 4 3 207 3 6 1 294 1 71 2 315 3 51 1 202 3 60 1 217 6 290 3 218 1 177 1 
42 1 292 3 45 1 183 1 86 1 4 5 6 5 129 5 191 3 231 1 294 2 51 3 149 2 202 5 60 1 273 4 23 1 62 1 111 16 155 5 156 9 69 1 24 1 207 34 71 18 282 1 315 5 33 3 171 3 290 5 217 10 218 4 40 1 177 3 
292 1 183 1 4 1 129 1 231 1 51 1 108 1 202 1 149 1 273 1 62 1 23 1 155 1 111 4 156 2 69 1 207 8 71 4 315 1 290 1 217 2 218 2 177 1 
292 1 183 1 4 2 6 1 129 2 231 1 51 1 149 1 108 1 202 2 273 2 23 1 62 1 155 1 111 6 156 3 69 1 24 1 207 11 71 5 282 1 315 2 33 1 171 1 290 2 217 4 218 2 177 1 
292 1 183 1 4 3 6 1 129 3 191 1 231 1 296 1 294 1 9 1 51 1 57 1 149 1 108 1 202 3 273 1 23 1 62 1 155 2 111 9 156 4 69 1 24 1 207 17 71 8 315 3 29 1 33 2 171 2 290 3 217 6 218 3 177 1 
292 1 183 1 4 3 6 3 129 5 191 1 231 1 296 1 294 1 9 1 51 2 56 1 57 1 149 2 108 1 202 3 273 1 23 1 62 1 155 4 111 13 156 7 69 1 24 1 207 24 71 11 315 3 29 1 33 2 171 2 290 3 217 6 218 4 177 2 
292 1 183 1 4 1 129 1 231 1 51 1 108 1 202 1 149 1 273 1 62 1 23 1 155 1 111 4 156 2 69 1 207 8 71 4 315 1 290 1 217 2 218 2 177 1 
292 1 183 1 4 2 6 1 129 2 191 1 296 1 294 1 9 1 57 1 108 1 202 2 273 1 62 1 155 1 111 6 156 2 207 11 71 5 315 2 29 1 33 2 171 2 290 2 217 4 218 1 
292 1 183 1 4 3 129 2 191 1 296 1 294 1 9 1 57 1 108 1 202 3 273 1 62 1 155 1 111 6 156 1 24 1 207 11 71 5 315 3 29 1 33 2 171 2 290 3 217 6 218 1 
292 1 45 1 183 1 4 4 6 3 129 3 191 1 296 1 294 2 9 1 57 1 108 1 202 4 273 1 62 1 155 1 111 9 156 5 207 14 71 5 315 4 29 1 33 3 171 3 290 4 217 8 218 2 
23 1 155 1 111 3 156 6 69 2 207 7 6 3 129 1 71 4 51 3 149 1 218 3 177 3 
292 1 45 1 183 1 4 3 129 2 191 1 296 1 294 1 9 1 57 1 108 1 202 3 273 1 62 1 155 1 111 6 156 1 207 11 71 5 315 3 29 1 33 2 171 2 290 3 217 6 218 1 
179 1 316 1 293 1 187 1 19 1 303 1 222 1 
179 1 258 1 293 1 187 1 316 1 107 1 301 1 18 1 19 1 303 1 242 1 222 1 
197 1 90 1 269 1 314 1 39 1 302 1 
179 1 82 1 182 1 206 1 115 1 314 1 118 1 102 1 316 2 197 1 288 1 323 1 39 1 203 1 303 2 302 1 21 1 222 1 
179 1 82 3 182 1 224 1 5 1 8 1 11 1 197 1 102 2 267 1 302 1 303 2 203 1 21 2 154 1 206 2 115 1 118 1 316 2 288 1 323 1 39 1 222 2 
179 1 82 3 182 1 224 1 5 1 8 1 11 1 197 2 102 2 267 1 58 1 302 2 303 2 203 1 21 2 274 1 154 1 206 2 115 1 316 2 288 1 323 1 39 2 222 2 
82 2 128 1 263 1 193 1 197 1 267 1 55 2 272 1 303 1 302 1 203 1 21 1 275 2 63 1 154 1 316 1 121 1 317 1 249 1 170 1 36 1 39 1 176 1 255 1 222 1 
274 1 275 2 82 4 154 1 245 1 182 1 206 1 5 1 314 1 263 1 11 1 193 1 102 1 197 3 121 1 317 1 55 2 288 1 36 1 272 1 39 3 302 3 
197 1 182 1 288 1 189 1 39 1 302 1 
82 3 64 1 182 3 206 2 68 1 189 1 314 2 26 1 197 7 134 1 102 1 120 1 77 1 14 1 288 2 239 1 145 1 124 1 39 7 302 6 256 1 
179 2 82 1 0 1 182 1 2 2 4 2 129 1 231 1 194 1 51 1 102 1 197 1 137 1 149 1 202 2 20 1 303 2 203 1 302 1 21 1 23 1 155 1 111 3 156 2 65 1 206 1 69 1 115 1 311 1 207 6 248 2 26 1 71 3 27 1 118 1 316 2 315 2 288 1 323 1 217 4 290 2 39 1 218 2 220 1 177 1 41 1 222 1 
44 1 82 2 46 2 94 1 263 2 193 1 197 1 136 1 268 2 55 3 299 1 238 1 272 1 302 1 275 3 205 2 245 1 314 1 162 2 281 1 284 1 119 1 121 1 318 1 317 1 214 1 36 1 39 1 
82 1 182 1 206 1 189 1 285 1 197 1 134 1 102 1 289 1 288 1 36 1 39 1 302 1 
82 1 64 1 182 2 206 1 314 1 26 1 102 1 197 2 120 1 139 1 288 1 269 1 215 1 39 2 302 2 
82 1 154 1 64 1 182 2 206 1 88 1 197 2 102 1 120 1 139 1 288 1 215 1 39 2 302 2 
197 1 182 1 32 1 66 1 15 1 288 1 314 1 39 1 302 1 291 1 
197 2 265 1 182 1 288 1 124 1 39 2 26 1 302 2 
82 3 64 1 182 3 206 2 68 1 314 1 26 1 102 1 197 3 120 1 139 1 269 1 288 2 215 1 145 1 239 1 39 3 302 2 
82 3 64 1 182 3 206 2 68 1 314 1 26 1 102 1 197 3 120 1 139 1 212 1 269 1 288 2 215 1 239 1 39 3 302 2 
179 1 82 1 182 1 206 1 115 1 314 1 102 1 316 2 197 1 288 1 323 1 58 1 39 1 203 1 303 2 302 1 21 1 222 1 
82 1 154 1 64 1 182 2 206 1 197 1 134 1 102 1 120 1 14 1 288 1 39 1 302 1 
80 1 313 1 316 1 74 1 297 1 150 1 61 1 303 1 222 1 
74 1 198 1 259 1 
179 1 74 1 297 1 95 1 61 1 
179 1 275 2 259 1 67 1 87 1 224 1 95 2 8 1 121 1 74 1 198 1 297 2 317 1 267 1 55 2 299 1 272 1 61 2 219 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) (53,140) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (53,140) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) (53,140) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (137,186,194,268) (137,186,194,268) (137,186,194,268) 190 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 293 146 132 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 258 191 91 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 291 1 137 1 190 1 
290 1 255 1 246 1 
23 1 290 1 293 2 
127 2 9 2 150 2 169 1 29 2 280 2 234 1 156 2 
1 1 127 2 285 1 237 1 240 1 131 1 169 1 135 1 9 2 11 1 206 2 300 1 303 1 256 2 102 1 103 1 144 1 147 1 111 1 264 1 307 1 150 3 180 1 29 3 33 1 156 2 36 1 184 1 187 2 276 2 321 1 163 1 233 1 280 2 234 1 325 2 324 1 
127 1 9 1 150 1 115 1 161 1 29 1 280 1 117 1 234 1 156 1 
127 1 150 1 112 1 290 1 29 1 182 1 317 1 39 1 120 1 57 1 255 1 161 1 125 1 260 1 
127 1 150 1 112 1 290 1 29 1 182 2 156 1 317 1 9 1 39 1 120 1 57 2 255 1 161 1 280 1 
10 1 130 1 57 1 30 1 182 1 
10 1 45 1 130 1 57 2 290 1 255 1 182 2 72 1 
10 1 57 1 182 1 
127 1 130 1 150 1 115 1 29 1 182 1 117 1 156 1 9 1 173 1 57 1 161 1 280 1 234 1 
290 1 
10 1 130 1 57 2 290 1 255 1 104 1 182 2 72 1 
130 2 289 1 290 1 308 1 182 5 183 1 72 1 157 2 296 2 10 2 57 5 204 1 255 1 59 2 176 1 43 1 213 1 236 1 235 1 
169 1 246 1 
127 2 263 1 150 2 169 2 29 2 273 1 156 1 9 1 280 1 
44 1 61 1 105 1 
285 1 111 1 150 1 307 1 169 1 180 1 29 1 135 1 36 1 184 1 98 1 11 1 187 1 276 1 144 1 325 1 
127 1 285 1 111 1 307 1 150 2 180 1 135 1 29 2 32 1 184 1 36 1 9 1 11 1 187 1 276 1 144 1 280 1 325 1 105 1 66 1 
127 3 9 3 150 3 169 1 29 3 32 1 280 3 156 1 
127 1 9 1 150 1 161 1 29 1 280 1 117 1 
127 1 9 1 263 1 150 1 161 1 29 1 280 1 273 1 156 1 
1 1 285 1 127 3 237 1 240 1 169 1 135 1 9 3 11 1 57 1 206 2 303 1 256 1 102 1 144 1 212 1 66 1 111 1 307 1 150 4 112 1 180 1 29 4 32 1 182 1 33 1 273 1 184 1 36 1 156 2 317 1 39 1 120 1 187 1 276 1 321 1 161 1 163 1 233 1 280 3 322 1 324 1 234 1 325 1 
127 2 9 1 67 1 150 2 169 1 29 2 280 1 32 1 260 1 
127 3 238 1 150 3 112 1 290 1 29 3 182 1 32 2 273 1 156 1 317 1 9 3 39 1 57 1 120 1 161 1 280 3 212 1 66 1 
127 2 150 2 29 2 32 1 273 1 156 1 9 2 61 1 280 2 105 1 
285 1 111 1 150 1 307 1 169 1 180 1 29 1 135 1 36 1 184 1 11 1 187 1 276 1 144 1 325 1 
150 1 307 1 2 1 169 1 180 1 29 1 135 1 36 1 184 1 185 1 11 1 187 1 276 1 144 1 325 1 
44 2 237 1 240 1 48 1 249 1 6 1 55 1 206 2 174 1 300 2 142 1 102 1 256 4 61 2 105 2 152 1 271 1 33 1 277 1 321 1 233 1 163 2 
317 1 127 1 9 1 150 1 161 1 29 1 280 1 49 1 
127 5 67 1 150 5 169 1 29 5 32 2 171 1 273 1 156 1 9 4 16 1 280 4 260 1 66 1 
127 2 9 2 150 2 161 1 29 2 280 2 49 1 117 1 
38 1 224 1 
38 1 224 1 
128 1 162 1 
128 1 162 1 
128 1 162 1 
38 1 84 1 224 1 
38 1 77 1 224 1 
128 1 38 2 266 1 162 1 177 1 224 2 
38 1 84 1 224 1 
38 1 84 1 224 1 
38 1 62 1 224 1 
38 1 62 1 224 1 
38 1 62 1 224 1 
290 1 94 1 182 2 314 2 224 2 316 1 38 2 100 2 121 1 57 2 227 1 82 2 253 2 254 1 279 2 210 1 177 1 107 1 148 3 
127 2 169 1 3 1 9 2 100 1 57 1 58 1 175 1 148 1 149 1 150 2 70 1 29 2 182 1 314 1 116 1 224 1 316 1 38 1 76 1 77 1 82 1 279 1 280 2 
119 1 275 1 31 1 
119 1 275 1 272 1 
195 1 275 3 310 1 31 2 272 1 225 1 
195 1 275 2 319 1 310 1 31 1 272 1 
195 2 275 2 310 1 31 1 272 1 
130 4 46 1 289 3 290 2 47 1 293 3 97 1 6 1 296 1 55 1 10 1 57 5 59 1 255 1 149 1 110 2 23 1 70 1 114 2 308 1 222 1 182 5 152 1 270 1 72 1 157 1 118 2 76 1 277 1 43 2 42 1 88 1 
130 7 289 8 290 5 133 1 47 2 293 9 6 3 51 5 296 2 55 3 10 6 57 9 255 1 59 2 176 1 305 1 211 1 23 3 220 1 114 6 308 1 30 5 182 9 152 3 269 1 270 1 72 1 157 2 118 6 76 4 277 3 320 1 43 6 42 3 88 2 
130 2 46 1 289 3 290 3 47 1 293 4 6 1 296 1 55 1 57 3 255 1 59 1 176 1 110 1 23 2 114 2 222 1 182 3 152 1 157 1 76 1 118 2 277 1 88 1 42 1 43 2 
130 3 46 1 289 5 290 4 47 1 293 7 6 2 296 1 55 2 57 4 255 1 59 1 176 1 305 1 211 1 110 2 23 3 114 4 182 4 222 1 152 2 157 1 118 4 76 2 277 2 320 1 88 1 42 2 43 4 
22 1 307 1 246 1 
307 1 65 1 
27 1 
307 1 180 1 
22 2 307 2 113 1 241 1 27 1 180 1 144 1 
307 1 180 1 144 1 
307 1 123 1 
20 1 288 1 25 1 201 2 55 1 78 1 277 1 141 3 251 1 300 4 207 1 256 7 304 1 143 1 40 1 163 3 41 2 
20 1 288 1 25 1 201 2 55 1 78 1 277 1 141 3 251 1 300 4 207 1 256 7 304 1 143 1 40 1 163 3 41 2 
20 1 288 1 218 1 25 1 201 2 55 1 78 1 277 1 141 3 251 1 300 4 207 1 256 7 304 1 143 1 40 1 163 3 41 2 
191 1 129 1 237 1 240 1 50 1 201 1 250 1 206 2 300 3 251 1 141 2 256 6 102 1 143 1 304 1 258 1 25 1 309 1 33 1 78 1 40 2 163 3 41 1 326 1 
237 2 240 2 288 1 5 1 201 2 55 1 206 4 300 5 141 4 251 1 207 1 102 2 256 9 304 1 143 1 20 1 313 1 33 2 78 1 277 1 40 1 163 4 41 3 326 1 
194 1 186 1 291 1 137 1 190 1 
194 1 186 1 140 1 291 1 137 1 
53 1 291 1 268 1 137 1 
194 1 186 1 140 1 291 1 137 1 
194 1 186 1 291 1 137 1 190 1 
214 1 
89 1 166 1 93 2 247 2 7 1 10 6 11 2 255 1 260 1 262 1 23 2 112 1 180 1 265 2 29 1 182 5 36 1 39 1 187 2 120 1 276 2 281 2 125 1 43 2 127 1 286 1 197 4 289 2 290 2 47 1 135 1 293 2 202 1 203 1 296 1 57 5 59 1 145 1 63 1 146 1 307 1 150 1 219 2 308 1 221 1 312 2 71 2 72 3 157 1 73 1 317 1 230 1 231 1 161 1 325 2 
127 1 89 1 197 2 7 1 10 2 57 3 104 1 260 1 150 1 112 1 219 1 29 1 221 1 182 3 72 1 73 1 317 1 39 1 120 1 230 1 161 1 125 1 
127 1 89 1 197 3 290 1 247 1 7 1 10 1 57 3 255 1 104 1 260 1 150 1 112 1 29 1 221 1 182 3 72 1 73 1 317 1 39 1 120 1 230 1 161 1 125 1 
127 1 89 1 197 3 290 1 247 1 7 1 10 2 57 3 255 1 104 1 260 1 150 1 112 1 219 1 29 1 265 1 221 1 182 3 72 1 73 1 317 1 39 1 120 1 230 1 161 1 125 1 
127 2 89 1 197 2 290 1 7 1 9 1 173 1 10 2 57 3 255 1 104 1 260 1 150 2 112 1 219 1 115 1 29 2 265 1 221 1 182 3 117 1 72 1 156 1 73 1 317 1 39 1 120 1 230 1 161 2 280 1 125 1 234 1 87 1 
89 1 93 2 247 2 7 1 10 4 255 1 260 1 23 2 112 1 29 1 265 2 182 4 39 1 120 1 125 1 281 2 43 1 127 1 286 1 197 4 289 1 290 2 293 2 296 1 57 4 59 1 63 1 146 1 150 1 219 2 308 1 221 1 71 2 312 2 72 2 157 1 317 1 73 1 230 1 161 1 
127 1 89 1 197 4 132 1 289 1 290 1 93 2 247 2 7 1 296 1 10 4 57 4 101 1 255 1 59 1 63 1 146 1 260 1 23 2 150 1 112 1 219 2 308 1 265 2 29 1 221 1 312 2 71 2 182 4 72 2 157 1 73 1 317 1 39 1 120 1 230 1 161 1 281 2 125 1 86 1 43 1 
127 1 89 1 197 4 132 1 289 1 290 1 93 2 247 2 7 1 296 1 10 4 57 4 101 1 255 1 59 1 63 1 146 1 260 1 23 2 150 1 112 1 219 2 308 1 265 2 29 1 221 1 312 2 71 2 182 4 72 2 157 1 73 1 317 1 39 1 120 1 230 1 161 1 281 2 125 1 86 1 43 1 
127 1 89 1 197 2 132 1 289 1 93 1 245 1 293 1 7 1 296 1 57 2 59 1 208 1 146 1 260 1 150 1 112 1 308 1 29 1 221 1 223 1 71 1 182 2 157 1 73 1 317 1 39 1 75 1 120 1 230 1 161 1 125 1 43 1 
127 1 89 1 193 1 197 5 132 1 289 1 290 1 93 2 247 3 7 1 296 1 10 5 101 1 57 4 255 1 59 1 63 1 146 1 260 1 23 2 150 1 112 1 219 3 308 1 29 1 265 3 221 1 312 2 71 2 182 4 72 2 157 1 73 1 317 1 39 1 120 1 230 1 161 1 281 2 125 1 86 1 43 1 
127 1 89 1 193 1 197 5 132 1 289 1 290 1 93 2 247 3 7 1 296 1 10 5 101 1 57 4 255 1 59 1 63 1 146 1 260 1 23 2 150 1 112 1 219 3 308 1 29 1 265 3 221 1 312 2 71 2 182 4 72 2 157 1 73 1 317 1 39 1 120 1 230 1 161 1 281 2 125 1 86 1 43 1 
89 1 93 2 247 2 7 1 10 4 255 1 260 1 112 1 29 1 265 2 182 4 39 1 120 1 125 1 43 1 127 1 286 1 197 4 289 1 290 1 198 2 293 2 296 1 57 4 59 1 208 1 146 1 150 1 219 2 308 1 221 1 71 2 223 2 72 2 157 1 317 1 73 1 230 1 161 1 
44 1 237 1 240 1 288 1 169 2 246 1 201 1 55 1 206 2 251 1 141 2 300 3 207 1 142 1 102 1 256 6 143 1 61 1 105 1 20 1 33 1 277 1 321 1 233 1 163 3 41 2 
1 1 44 6 129 2 237 2 90 1 240 2 169 1 134 1 6 2 55 2 206 4 300 7 102 2 256 12 61 2 258 2 17 1 105 6 264 1 181 1 33 2 152 1 154 1 277 1 321 1 188 1 161 1 163 5 233 2 282 1 42 2 
285 1 127 1 1 1 237 1 90 1 240 1 92 1 169 1 135 1 138 1 98 1 9 1 11 1 206 2 300 1 102 1 256 2 144 1 61 1 66 1 306 1 111 1 307 1 150 2 264 1 180 1 29 2 32 1 33 1 184 1 36 1 187 1 276 1 321 1 233 1 280 1 163 1 325 1 
127 1 1 1 168 1 237 1 90 1 240 1 9 1 11 1 14 1 206 2 256 2 102 1 66 1 150 1 29 1 32 1 33 1 37 1 159 1 187 1 276 1 321 1 233 1 280 1 163 2 325 1 
0 1 127 1 1 1 166 1 237 2 287 1 240 2 244 1 135 2 9 1 11 2 206 4 300 1 142 1 102 2 256 2 103 2 209 1 145 1 150 1 307 3 264 1 69 1 180 2 29 1 267 1 151 1 32 1 33 2 36 2 187 8 276 8 81 1 321 2 280 1 233 2 163 1 325 7 283 1 
127 1 44 1 237 1 90 1 240 1 6 1 9 1 55 1 206 2 300 1 102 1 256 3 61 1 105 1 150 1 29 1 33 1 152 1 153 1 273 1 156 1 277 1 321 1 280 1 233 1 163 2 42 1 
44 1 237 1 240 1 33 1 249 1 6 1 55 1 206 2 141 1 300 2 142 1 321 1 256 2 102 1 304 1 61 1 233 1 105 1 
44 1 237 1 240 1 33 1 271 1 152 1 206 2 277 1 142 1 321 1 256 2 102 1 61 1 233 1 163 2 105 1 
44 2 237 1 240 1 152 1 33 1 6 1 55 1 206 2 277 1 300 2 142 1 321 1 256 4 102 1 163 2 61 2 233 1 105 2 42 1 
44 1 287 1 237 1 240 1 33 1 249 1 6 1 55 1 206 2 141 1 300 2 321 1 256 2 102 1 304 1 61 1 233 1 105 1 
44 1 287 1 237 1 240 1 33 1 271 1 152 1 206 2 277 1 321 1 256 2 102 1 61 1 233 1 163 2 105 1 
44 2 237 1 287 1 240 1 6 1 55 1 206 2 300 2 141 1 102 1 256 4 304 1 61 2 105 2 33 1 152 1 277 1 321 1 233 1 163 2 42 1 
44 2 237 1 240 1 152 1 33 1 6 1 55 1 206 2 277 1 300 2 321 1 102 1 256 4 163 2 61 2 233 1 105 2 42 1 
285 1 1 1 237 1 240 1 169 1 135 1 11 1 206 2 300 1 256 2 102 1 144 1 111 1 264 1 307 1 150 1 180 1 29 1 33 1 184 1 36 1 187 1 276 1 321 1 233 1 163 1 324 1 325 1 
1 1 237 1 240 1 2 1 169 1 135 1 11 1 206 2 300 1 256 2 102 1 144 1 264 1 307 1 150 1 180 1 29 1 33 1 184 1 36 1 185 1 187 1 276 1 321 1 189 1 233 1 163 1 325 1 
44 2 237 1 90 1 240 1 152 1 33 1 6 1 55 1 206 2 277 1 300 2 321 1 256 4 102 1 163 2 61 2 233 1 105 2 42 1 
285 1 44 2 237 1 240 1 135 1 6 1 55 1 206 2 300 2 256 4 102 1 61 2 144 1 257 1 105 2 111 1 307 1 150 1 180 1 29 1 152 1 33 1 184 1 36 1 187 1 276 1 277 1 81 1 321 1 163 2 233 1 324 1 325 1 42 1 
127 1 44 1 237 1 90 1 240 1 139 1 6 1 9 1 55 1 206 2 141 1 300 2 102 1 256 3 304 1 61 1 105 1 150 1 29 1 152 1 33 1 273 1 156 1 277 1 321 1 163 1 280 1 233 1 42 1 
237 4 239 1 91 1 240 4 243 1 170 1 4 1 6 4 251 1 256 42 102 4 258 3 20 1 179 1 33 4 277 5 188 1 41 2 42 4 191 3 129 4 288 1 136 1 200 2 201 1 52 1 54 1 55 5 56 4 206 8 205 1 300 21 141 6 207 1 304 4 143 1 313 1 152 4 158 1 160 1 80 1 163 21 326 2 
191 3 129 4 237 3 239 1 288 1 240 3 91 1 243 1 136 1 200 2 170 1 201 1 4 1 52 1 6 4 54 1 55 5 56 4 205 1 206 6 251 1 141 3 300 19 207 1 102 3 256 37 304 1 143 1 258 3 20 1 179 1 313 1 33 3 152 3 158 1 160 1 80 1 277 4 188 1 163 18 41 2 326 1 42 4 
191 2 129 3 237 3 288 3 240 3 91 1 243 1 136 1 200 1 170 1 201 3 4 1 52 1 6 4 54 1 55 7 56 4 206 6 251 3 141 7 300 25 207 3 102 3 256 48 143 3 304 3 258 2 20 3 179 1 313 1 33 3 152 4 158 1 160 1 80 1 277 7 188 1 163 23 41 4 326 2 42 4 
191 2 129 3 237 2 240 2 91 1 243 1 136 1 200 1 170 1 6 2 55 2 56 3 205 1 206 4 300 9 102 2 256 19 258 2 28 1 313 1 33 2 152 2 160 1 80 1 277 2 188 1 163 10 42 2 
191 2 237 2 129 2 240 2 91 1 243 1 136 1 200 2 170 1 4 1 52 1 6 3 54 1 55 3 56 4 206 4 141 2 300 13 102 2 256 25 304 1 258 2 179 1 313 1 33 2 152 2 158 1 160 2 80 1 277 2 163 12 41 1 326 1 42 3 
100 1 38 1 217 1 227 1 82 1 279 1 210 1 177 1 314 1 224 1 
77 1 175 1 
192 1 100 1 38 1 13 1 82 1 279 1 314 1 224 1 106 1 
290 1 94 1 182 1 314 1 316 1 224 1 38 1 100 1 57 1 227 1 82 1 253 1 254 1 279 1 210 1 177 1 107 1 148 2 
290 1 94 1 182 1 314 1 316 1 224 1 38 1 100 1 57 1 227 1 82 1 253 1 254 1 279 1 210 1 177 1 107 1 148 2 
290 1 94 1 182 1 314 1 316 1 224 1 38 1 100 1 57 1 227 1 82 1 253 1 254 1 279 1 210 1 177 1 107 1 148 2 
99 1 266 1 84 1 
99 1 266 1 84 1 
74 1 62 1 
74 1 266 1 62 1 
58 1 3 1 
127 2 130 1 169 1 3 1 9 2 100 1 12 1 57 1 58 1 253 1 254 1 175 1 148 1 149 1 150 2 70 1 29 2 182 1 314 1 116 1 224 1 38 1 76 1 77 1 82 1 279 1 280 2 
99 1 84 1 
74 1 266 1 62 1 
127 2 1 1 237 1 90 1 240 1 135 1 199 1 206 2 300 1 102 1 256 2 103 2 209 1 18 1 215 1 307 1 150 2 264 1 180 1 29 2 33 1 36 1 187 2 276 2 321 1 233 1 163 1 284 1 164 1 283 1 325 2 
0 1 196 1 24 1 68 1 242 1 187 2 298 1 276 2 81 1 83 1 325 2 
0 1 196 1 68 1 242 1 187 1 276 1 301 1 83 1 325 1 
166 1 307 1 68 1 180 1 135 1 36 1 11 1 187 1 298 1 299 1 276 1 145 1 124 1 325 1 
0 1 196 1 24 1 298 1 187 1 68 1 276 1 242 1 83 1 325 1 
60 1 
289 1 290 1 255 1 246 1 43 1 213 1 236 1 
289 1 290 2 293 1 296 1 10 1 57 1 59 1 255 1 63 1 23 1 308 1 312 1 182 1 72 1 157 1 281 1 43 1 
307 2 113 1 180 1 308 1 135 1 36 2 157 1 296 1 11 1 187 1 276 1 59 1 144 1 65 1 325 1 64 1 19 1 
191 1 129 1 23 1 91 1 289 1 290 1 308 1 114 1 293 2 157 1 296 1 118 1 59 1 258 1 43 1 
127 1 288 1 289 2 296 1 9 1 55 2 173 1 101 1 57 1 251 1 59 1 143 1 261 2 108 1 150 1 308 1 115 1 29 1 182 1 117 1 157 1 156 1 274 1 277 1 161 1 280 1 234 1 43 2 
289 1 290 1 308 1 157 1 296 1 59 1 255 1 236 1 213 1 43 1 
23 2 289 2 290 2 114 2 293 4 152 1 6 1 55 1 118 2 277 1 42 1 43 2 
10 1 57 1 290 1 255 1 182 1 72 1 
166 1 289 2 47 2 135 1 96 2 202 1 296 2 11 2 10 4 57 3 59 2 176 1 145 1 262 1 307 1 180 1 308 1 182 3 72 2 36 1 157 2 318 1 187 4 276 4 229 1 231 2 323 1 325 4 43 2 
1 1 127 2 285 1 237 1 240 1 169 1 135 1 9 2 11 1 206 2 303 1 256 1 102 1 144 1 111 1 150 3 307 1 180 1 29 3 33 1 156 2 36 1 184 1 187 1 276 1 321 1 163 1 280 2 233 1 325 1 234 1 324 1 
23 2 289 1 290 4 114 2 308 1 47 1 293 4 201 1 157 1 296 1 118 2 59 1 255 2 231 1 43 2 
100 1 82 1 294 1 
100 1 58 1 82 1 292 1 210 1 
100 1 82 1 294 1 
100 1 82 1 294 1 
100 1 82 1 85 1 
100 1 82 1 85 1 
100 1 82 1 85 1 
100 1 82 1 
38 1 224 1 
191 1 129 1 237 2 288 2 91 1 240 2 201 1 4 1 52 1 6 2 55 5 206 4 251 2 300 13 141 5 207 1 256 24 102 2 304 1 143 2 258 1 20 1 108 1 179 1 313 1 33 2 152 1 158 1 277 4 163 11 41 4 42 2 326 1 
191 1 129 1 237 3 288 2 91 1 240 3 201 1 4 1 52 1 6 2 55 5 206 6 251 2 300 13 141 5 207 1 256 24 102 3 304 1 143 2 258 1 20 1 108 1 109 1 179 1 313 1 33 3 152 1 158 1 277 4 163 11 41 4 42 2 326 1 
191 1 129 1 237 4 91 1 240 4 4 1 52 1 6 2 55 2 206 8 300 7 141 3 256 14 102 4 304 2 258 1 109 1 179 1 313 1 33 4 152 2 158 1 277 2 163 7 41 1 42 2 326 2 
191 1 129 1 237 3 288 2 91 1 240 3 201 1 4 1 52 1 6 2 55 5 206 6 251 2 300 13 141 7 207 1 256 24 102 3 304 3 143 2 258 1 20 1 108 1 109 1 179 1 313 1 33 3 152 1 158 1 277 4 163 11 41 4 42 2 326 1 
191 1 129 1 237 2 288 2 91 1 240 2 201 1 4 1 52 1 6 2 55 5 206 4 251 2 300 13 141 5 207 1 256 24 102 2 304 1 143 2 258 1 20 1 108 1 179 1 313 1 33 2 152 1 158 1 277 4 163 11 41 4 42 2 326 1 
191 1 129 1 237 3 91 1 240 3 4 1 52 1 6 2 55 2 206 6 300 7 141 3 256 14 102 3 304 2 258 1 179 1 313 1 33 3 152 2 158 1 277 2 163 7 41 1 42 2 326 2 
191 1 129 1 237 3 91 1 240 3 4 1 52 1 6 2 55 2 206 6 300 6 141 1 256 11 102 3 258 1 109 1 179 1 313 1 33 3 152 1 158 1 277 1 163 5 41 1 42 2 326 1 
191 1 129 1 237 3 91 1 240 3 4 1 52 1 6 2 55 2 206 6 205 1 300 6 141 2 256 11 102 3 304 1 258 1 179 1 313 1 33 3 152 1 158 1 277 1 163 5 41 1 42 2 326 1 
20 2 288 1 55 1 277 1 251 3 141 6 300 3 207 1 256 7 143 3 304 3 163 4 41 3 
191 1 129 1 237 3 91 1 240 3 4 1 52 1 6 2 55 2 206 6 205 1 300 6 141 1 256 11 102 3 258 1 179 1 313 1 33 3 152 1 158 1 277 1 163 5 41 1 42 2 326 1 
20 1 237 2 288 1 240 2 33 2 201 1 55 1 206 4 277 1 300 4 141 3 251 1 207 1 256 8 102 2 304 1 143 1 163 4 41 2 326 1 
20 1 55 1 288 1 277 1 300 3 141 2 251 1 207 1 256 6 143 1 163 3 246 1 41 2 201 1 
109 1 237 1 240 1 152 1 33 1 6 1 55 1 206 2 277 1 141 1 300 2 102 1 256 4 304 1 163 2 42 1 
191 1 129 1 300 1 256 2 163 1 258 1 
129 2 237 1 288 2 240 1 201 1 6 2 55 5 206 2 251 2 300 13 141 8 207 1 256 25 102 1 143 2 304 4 258 2 17 1 20 1 108 1 152 2 33 1 277 5 188 1 163 12 41 4 282 1 42 2 326 1 
129 1 256 1 163 1 
300 1 256 1 258 1 
152 1 6 1 37 1 55 1 300 3 141 2 277 1 256 6 304 1 163 3 41 1 42 1 
191 1 129 1 237 3 91 1 240 3 4 1 52 1 6 2 55 2 206 6 300 7 141 3 256 14 102 3 304 2 258 1 179 1 313 1 33 3 152 2 158 1 277 2 163 7 41 1 42 2 326 2 
288 1 55 1 300 3 277 1 251 1 141 2 256 6 143 1 304 1 163 3 41 1 
20 1 237 1 240 1 33 1 50 1 206 2 300 1 141 2 251 1 207 1 256 3 102 1 304 1 143 1 163 2 41 1 326 1 
108 1 237 1 240 1 288 1 313 1 33 1 55 2 206 2 251 2 141 5 300 5 277 2 102 1 256 10 143 2 304 2 163 5 41 3 
237 1 240 1 313 1 33 1 6 1 55 1 206 2 300 2 141 1 102 1 256 2 304 1 
237 1 240 1 313 1 33 1 152 1 6 1 55 1 206 2 277 1 300 2 102 1 256 4 163 2 42 1 
237 3 240 3 313 1 33 3 50 1 205 1 206 6 251 1 141 2 300 1 256 3 102 3 143 1 304 1 163 2 41 1 326 1 
191 1 129 1 237 4 288 1 240 4 50 1 55 2 250 1 205 1 206 8 141 6 300 7 251 2 207 1 102 4 256 15 304 3 143 2 258 1 20 1 108 1 109 1 313 1 33 4 277 2 163 8 41 3 326 1 
127 1 67 1 150 1 169 1 29 1 95 1 260 1 
297 1 122 1 278 1 311 1 155 1 
166 1 11 1 187 1 307 1 276 1 180 1 135 1 145 1 246 1 325 1 36 1 
127 1 111 1 307 1 150 2 169 1 180 1 29 2 135 1 32 1 184 1 36 1 9 1 11 1 187 1 276 1 144 1 280 1 325 1 
127 2 169 1 135 1 96 1 9 2 144 2 111 1 150 2 307 3 180 2 29 2 32 1 315 1 36 1 184 1 317 1 39 1 187 1 276 1 161 1 123 1 280 1 325 1 
127 2 2 1 169 1 135 1 96 1 9 2 144 2 150 2 307 3 180 2 29 2 32 1 315 1 36 1 184 1 317 1 39 1 187 2 276 2 161 1 123 1 280 1 165 1 325 2 
290 1 135 1 96 1 10 1 11 1 57 2 252 1 255 1 144 1 65 1 22 1 307 4 112 1 180 1 182 2 35 1 315 1 36 1 187 3 276 3 123 1 165 1 325 3 
22 1 307 4 112 1 290 1 180 1 135 1 182 2 34 1 315 1 96 1 36 1 11 1 10 1 57 2 187 3 276 3 255 1 123 1 144 1 165 1 325 3 65 1 
187 1 276 1 69 1 135 1 325 1 36 1 
0 1 307 3 113 1 69 1 244 1 180 2 135 2 267 1 151 1 36 3 11 2 226 1 187 7 276 7 79 1 81 1 228 1 103 1 209 1 144 1 325 6 
127 1 237 1 90 1 288 1 240 1 169 1 134 1 199 1 9 1 55 2 206 2 14 1 300 4 141 3 251 1 207 1 256 8 102 1 304 1 143 1 20 1 108 1 150 1 29 1 32 1 33 1 187 1 276 1 277 2 81 1 321 1 161 1 163 4 233 1 280 1 41 2 325 1 
127 1 130 1 288 1 289 4 290 1 172 1 9 1 296 1 173 1 55 2 11 1 57 1 251 1 255 1 59 1 143 1 213 1 261 2 108 1 150 1 115 1 308 1 29 1 182 1 117 1 156 1 157 1 274 1 187 1 276 1 277 2 161 1 280 1 323 1 234 1 325 1 43 4 236 1 
22 1 307 2 113 1 69 1 180 1 135 1 36 2 187 2 276 2 81 1 144 1 325 2 19 1 
166 1 307 1 26 1 180 1 135 1 36 1 11 1 187 4 276 4 81 1 145 1 165 1 325 4 
21 1 307 1 180 1 135 1 96 1 36 2 8 1 226 1 187 2 276 2 228 1 144 1 259 1 325 2 
11 1 119 1 275 1 187 1 276 1 135 1 232 1 272 1 325 1 36 1 
0 1 307 1 180 1 135 1 36 1 187 2 276 2 81 1 209 1 325 2 284 1 
166 1 307 3 26 1 244 1 180 2 135 2 151 1 96 1 36 2 11 1 187 5 276 5 81 1 145 1 209 1 325 4 
166 1 307 3 26 1 180 2 135 2 151 1 96 1 248 1 36 2 11 1 187 5 276 5 81 1 145 1 209 1 325 4 
127 1 307 1 150 2 2 1 169 1 180 1 29 2 135 1 32 1 184 1 36 1 9 1 11 1 187 1 276 1 144 1 280 1 325 1 
307 1 113 1 180 1 135 1 96 1 36 2 226 1 187 1 276 1 79 1 228 1 144 1 325 1 
178 1 302 1 169 1 15 1 295 1 
178 1 130 1 167 1 216 1 112 1 290 1 169 1 182 2 295 2 317 1 39 1 57 2 120 1 302 2 255 1 15 2 161 1 212 1 126 1 
127 1 178 1 215 1 150 1 15 1 29 1 164 1 18 1 295 1 
167 1 178 1 126 1 

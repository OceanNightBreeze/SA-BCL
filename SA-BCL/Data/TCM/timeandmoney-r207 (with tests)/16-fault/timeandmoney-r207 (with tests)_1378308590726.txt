#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (136,309) 256 (141,339) (141,339) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (136,309) 256 (141,339) (141,339) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (136,309) 256 (141,339) (141,339) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (136,309) 256 (141,339) (141,339) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (152,187,222,296,341) (100,135) (100,135) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 1 142 161 160 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 266 104 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 262 1 275 1 309 1 60 1 358 1 359 1 95 1 256 1 141 1 23 1 
339 1 262 1 275 1 309 1 60 1 358 1 359 1 95 1 256 1 141 1 23 1 
339 1 262 1 275 1 309 1 60 1 358 1 359 1 95 1 256 1 141 1 23 1 
339 1 262 1 275 1 309 1 60 1 358 1 359 1 95 1 256 1 141 1 23 1 
272 3 368 1 239 1 120 2 230 1 358 4 359 1 162 1 95 1 85 1 326 1 55 1 23 1 18 1 170 1 60 4 249 3 83 2 
262 1 275 1 100 1 8 1 222 1 135 1 60 1 358 1 359 1 95 1 55 1 23 1 
272 1 262 1 368 1 120 1 136 1 358 3 359 1 95 2 85 1 23 2 170 1 60 3 249 2 
272 7 262 1 368 1 239 1 120 4 230 1 136 1 358 9 162 1 122 1 359 1 95 2 86 1 85 3 326 1 55 1 23 2 76 1 18 1 170 1 60 9 249 5 313 1 83 2 
272 7 262 1 368 1 239 1 120 4 230 1 136 1 358 9 162 1 122 1 359 1 95 2 86 1 85 3 326 1 55 1 23 2 76 1 18 1 170 1 60 9 249 5 313 1 83 2 
288 1 45 1 345 1 
247 2 345 1 19 1 
356 2 78 2 201 2 158 2 320 2 259 1 34 1 241 2 
250 1 356 2 144 2 147 1 158 3 227 1 277 1 0 1 209 1 75 1 361 1 164 1 166 1 78 2 310 1 189 1 259 1 34 1 317 1 39 2 320 2 199 2 265 1 295 2 154 1 241 2 17 1 243 1 42 1 155 1 139 1 201 3 109 1 331 1 46 1 375 2 353 1 113 1 115 1 
356 1 158 1 320 1 241 1 243 1 78 1 201 1 221 1 259 1 284 1 
338 1 158 1 218 1 320 1 207 1 324 1 243 1 107 1 201 1 44 1 45 1 234 1 345 1 63 1 
356 1 338 1 158 1 218 2 320 1 324 1 241 1 243 1 78 1 107 1 201 1 44 2 45 1 345 1 63 1 
44 1 218 1 350 1 208 1 40 1 
52 1 44 2 218 2 45 1 350 1 345 1 294 1 40 1 
44 1 218 1 350 1 
356 1 252 1 158 1 218 1 320 1 40 1 241 1 243 1 78 1 201 1 221 1 44 1 259 1 284 1 
345 1 
125 1 52 1 44 2 218 2 45 1 350 1 345 1 40 1 
52 1 218 5 357 1 102 1 138 2 74 1 40 2 255 2 98 1 105 1 106 2 150 1 44 5 45 1 350 2 268 1 171 1 345 1 62 1 
288 1 34 1 
356 1 273 1 158 2 320 2 241 1 243 1 42 1 78 1 201 2 260 1 34 1 
66 1 228 1 290 1 
317 1 144 1 158 1 227 1 39 1 265 1 209 1 295 1 75 1 164 1 139 1 201 1 46 1 353 1 34 1 316 1 
317 1 144 1 227 1 158 2 39 1 206 1 320 1 209 1 265 1 295 1 75 1 241 1 164 1 66 1 78 1 139 1 201 2 46 1 302 1 353 1 
356 1 158 3 206 1 320 3 241 3 243 1 42 1 78 3 201 3 34 1 
243 1 78 1 201 1 221 1 158 1 320 1 241 1 
356 1 273 1 158 1 320 1 241 1 243 1 78 1 201 1 260 1 
250 1 356 2 338 1 144 1 227 1 158 4 206 1 0 1 209 1 2 1 75 1 164 1 361 1 166 1 78 3 189 1 260 1 259 1 216 1 34 1 63 1 317 1 218 1 39 1 320 3 199 2 265 1 324 1 295 1 154 1 241 3 17 1 155 1 243 1 139 1 107 1 201 4 44 1 331 1 46 1 302 1 375 1 353 1 115 1 
78 1 201 2 158 2 206 1 14 1 320 2 234 1 34 1 241 1 
356 1 338 1 158 3 218 1 206 2 320 3 324 1 241 3 243 1 78 3 108 1 107 1 201 3 44 1 260 1 302 1 345 1 216 1 63 1 
66 1 356 1 78 2 201 2 158 2 228 1 206 1 320 2 260 1 241 2 
317 1 144 1 158 1 227 1 39 1 265 1 209 1 295 1 75 1 164 1 139 1 201 1 46 1 353 1 34 1 
317 1 144 1 158 1 227 1 39 1 200 1 265 1 209 1 295 1 75 1 164 1 201 1 46 1 344 1 34 1 
250 2 147 2 228 2 0 1 1 1 189 1 311 1 193 1 369 1 290 2 199 2 240 1 154 1 17 1 66 2 155 1 327 1 69 1 248 1 332 1 333 1 375 4 91 1 115 1 
217 1 158 1 320 1 324 1 241 1 243 1 78 1 201 1 
356 1 158 2 206 1 320 2 241 2 243 1 42 1 78 2 201 2 260 1 34 1 
243 1 78 2 201 2 217 1 221 1 158 2 320 2 241 2 
131 1 188 1 
131 1 188 1 
236 1 123 1 
236 1 123 1 
236 1 123 1 
72 1 131 1 188 1 
131 1 188 1 343 1 
131 2 236 1 188 2 315 1 123 1 325 1 
72 1 131 1 188 1 
72 1 131 1 188 1 
131 1 188 1 96 1 
131 1 188 1 96 1 
131 1 188 1 96 1 
131 2 225 1 92 2 195 1 119 2 218 2 185 2 219 2 22 1 307 1 67 2 44 2 188 2 9 1 345 1 61 1 315 1 130 3 35 1 
92 1 158 2 119 1 185 1 307 1 4 1 78 2 188 1 343 1 130 1 34 1 131 1 218 1 320 2 219 1 372 1 241 2 87 1 88 1 298 1 201 2 44 1 224 1 271 1 
239 1 326 1 55 1 
8 1 326 1 55 1 
126 1 299 1 79 1 239 2 8 1 55 3 
328 1 299 1 79 1 239 1 8 1 55 2 
79 1 299 2 239 1 8 1 55 2 
142 1 52 1 254 1 1 1 255 1 98 1 4 1 27 1 285 2 81 2 345 2 171 3 318 1 369 1 238 1 218 5 102 2 138 1 240 1 372 1 40 4 106 1 87 1 220 1 373 1 44 5 247 3 45 1 350 1 332 1 182 1 19 1 183 2 
356 1 252 1 158 1 208 1 97 1 6 1 78 1 259 1 284 1 345 1 286 1 218 2 320 1 40 2 241 1 243 1 201 1 221 1 44 2 45 1 350 1 
356 1 142 1 252 1 158 1 254 1 1 1 255 1 4 1 78 1 27 1 259 1 284 1 345 3 171 3 81 2 285 2 369 1 218 3 102 2 320 1 138 1 240 1 40 2 106 1 105 1 241 1 176 1 220 1 243 1 373 1 201 1 221 1 44 3 45 1 247 4 332 1 182 1 19 2 183 1 
142 2 1 2 4 2 284 1 285 4 345 4 64 1 102 4 240 2 105 1 106 1 241 1 243 1 201 1 247 7 19 3 356 1 117 1 252 1 158 1 254 2 255 1 78 1 27 1 259 1 171 5 81 4 369 2 218 4 320 1 138 1 40 3 176 1 220 1 373 1 221 1 44 4 45 1 182 1 332 2 183 2 337 1 
347 1 288 1 46 1 
266 1 46 1 
352 1 
317 1 46 1 
347 2 317 1 146 1 213 1 46 3 209 1 
317 1 46 1 209 1 
366 1 46 1 
250 3 147 4 20 1 197 1 240 1 321 1 323 1 322 1 25 1 267 1 342 1 311 2 332 1 333 3 129 1 214 2 375 7 
250 3 147 4 20 1 197 1 240 1 321 1 323 1 322 1 25 1 267 1 342 1 311 2 332 1 333 3 129 1 214 2 375 7 
250 3 147 4 20 1 197 1 240 1 321 1 323 1 322 1 25 1 348 1 342 1 267 1 311 2 332 1 333 3 129 1 214 2 375 7 
250 6 142 1 147 5 20 2 0 1 1 1 163 1 169 1 311 2 233 1 214 1 132 1 84 1 369 1 197 2 319 2 199 2 291 1 321 1 240 1 322 1 323 1 154 1 17 1 267 1 332 1 333 4 111 1 375 11 115 1 
250 4 147 5 20 1 0 2 25 1 342 1 311 3 80 1 214 2 129 1 197 1 199 4 240 1 321 1 323 1 154 2 17 2 267 1 332 1 70 1 333 4 111 1 375 9 115 2 
272 1 144 1 227 1 73 1 358 2 359 1 95 1 75 1 23 1 149 1 55 2 362 1 258 1 126 1 8 1 170 1 60 2 314 1 287 1 289 1 262 1 151 1 368 1 239 1 39 1 295 1 326 1 140 1 249 1 269 1 
272 2 144 1 227 1 73 1 358 3 95 1 75 1 23 1 149 1 55 2 126 1 362 1 7 1 8 1 170 1 60 3 11 1 314 1 287 1 262 1 151 1 368 1 239 1 39 1 295 1 326 1 181 1 140 1 249 1 269 1 
272 2 144 1 227 1 73 1 358 2 75 1 55 2 362 1 126 1 8 1 170 1 60 2 11 1 314 1 287 1 262 1 368 1 39 1 239 1 295 1 326 1 181 1 140 1 249 1 269 1 
317 1 287 2 144 1 13 1 262 2 227 1 39 1 101 1 73 2 358 1 340 1 265 1 95 1 295 1 75 1 23 1 77 1 362 2 7 1 46 1 32 1 60 1 354 1 
144 1 227 1 73 1 358 1 359 1 95 1 75 1 23 1 149 1 55 2 362 1 258 1 126 1 8 1 60 1 314 1 287 1 262 1 151 1 239 1 39 1 295 1 326 1 181 1 140 1 269 1 
370 1 
338 1 144 2 52 3 227 1 229 4 231 1 98 1 281 1 99 2 58 1 234 1 345 2 63 1 102 2 293 2 106 1 295 2 346 1 243 1 107 1 201 1 68 1 247 2 350 6 110 1 157 1 19 2 304 2 354 1 158 1 253 1 207 1 255 1 75 1 167 2 24 1 27 1 32 1 261 1 171 2 317 1 38 1 218 5 39 2 320 1 137 2 138 1 265 2 324 1 89 2 44 5 45 1 180 2 46 1 48 1 
338 1 158 1 218 2 229 2 320 1 207 1 324 1 346 1 281 1 243 1 24 1 107 1 99 1 201 1 44 2 58 1 350 1 157 1 234 1 63 1 
338 1 52 1 158 1 229 3 207 1 281 1 24 1 125 1 58 1 234 1 345 1 63 1 218 3 320 1 324 1 346 1 243 1 107 1 89 1 201 1 44 3 45 1 350 1 157 1 
338 1 52 1 158 1 229 3 207 1 281 1 24 1 167 1 125 1 99 1 58 1 234 1 63 1 218 3 320 1 324 1 346 1 243 1 107 1 89 1 201 1 44 3 350 2 157 1 
356 1 338 1 252 1 52 1 158 2 229 3 207 1 281 1 24 1 125 1 167 1 78 1 99 1 58 1 364 1 259 1 284 1 234 1 345 1 63 1 218 3 320 2 324 1 241 1 346 1 243 2 89 1 107 1 201 2 221 1 44 3 45 1 350 2 157 1 
338 1 52 2 229 4 231 1 98 1 281 1 99 2 58 1 234 1 345 1 63 1 102 1 293 2 106 1 346 1 243 1 107 1 201 1 247 2 350 4 110 1 157 1 19 2 304 2 158 1 207 1 255 1 24 1 167 2 171 1 218 4 320 1 138 1 137 2 324 1 89 2 44 4 180 2 45 1 48 1 
338 1 52 2 158 1 229 4 207 1 231 1 255 1 98 1 211 1 281 1 167 2 24 1 57 1 99 2 58 1 234 1 345 1 171 1 63 1 218 4 102 1 320 1 137 2 138 1 293 2 324 1 106 1 346 1 243 1 89 2 107 1 201 1 44 4 45 1 180 2 350 4 110 1 157 1 19 2 335 1 304 2 
338 1 52 2 229 4 231 1 98 1 281 1 57 1 99 2 58 1 284 1 234 1 345 1 63 1 102 1 293 2 106 1 241 1 346 1 243 2 107 1 201 2 350 4 110 1 157 1 19 2 304 2 356 1 252 1 158 2 207 1 255 1 211 1 24 1 167 2 78 1 259 1 171 1 218 4 320 2 138 1 137 2 324 1 89 2 221 1 44 4 180 2 45 1 335 1 
338 1 52 2 94 2 229 4 279 1 231 1 98 1 281 1 99 2 58 1 284 1 234 1 345 1 63 1 102 1 293 2 106 1 241 1 346 1 243 2 107 1 201 2 247 2 350 4 157 1 304 2 356 1 252 1 158 2 207 1 255 1 24 1 167 2 78 1 28 1 29 1 259 1 133 2 218 4 320 2 138 1 324 1 89 2 221 1 44 4 45 1 335 1 
338 1 52 2 229 5 231 1 98 1 281 1 57 1 99 3 58 1 284 1 234 1 345 1 63 1 102 1 293 2 106 1 241 1 346 1 243 2 107 1 201 2 350 5 110 1 157 1 19 2 304 2 356 1 252 1 158 2 207 1 255 1 211 1 167 3 24 1 78 1 259 1 171 1 218 4 320 2 138 1 137 2 324 1 89 3 177 1 221 1 44 4 180 2 45 1 335 1 
338 1 52 2 158 1 229 5 207 1 231 1 255 1 98 1 211 1 281 1 24 1 167 3 57 1 99 3 58 1 234 1 345 1 171 1 63 1 218 4 102 1 320 1 137 2 138 1 293 2 106 1 324 1 346 1 243 1 107 1 177 1 89 3 201 1 44 4 45 1 180 2 350 5 110 1 157 1 19 2 335 1 304 2 
338 1 52 2 94 2 229 4 279 1 231 1 98 1 281 1 99 2 58 1 284 1 234 1 345 1 63 1 102 1 293 2 106 1 241 1 346 1 243 2 107 1 201 2 247 2 350 4 157 1 304 2 356 1 252 1 158 2 207 1 255 1 24 1 167 2 78 1 259 1 133 2 218 4 320 2 138 1 324 1 89 2 221 1 44 4 45 1 48 1 
250 3 147 3 228 1 0 1 25 1 342 1 189 1 311 2 129 1 214 1 34 2 288 1 290 1 199 2 321 1 240 1 323 1 154 1 17 1 66 1 155 1 69 1 332 1 333 2 375 6 115 1 
250 7 142 3 116 1 147 10 277 1 228 4 0 2 1 3 121 1 305 1 311 1 189 2 233 3 34 1 365 1 132 1 37 1 369 1 290 13 197 1 319 4 199 4 291 2 240 3 154 2 17 2 66 13 155 1 331 1 332 1 333 2 375 17 115 2 
250 1 116 1 144 1 227 1 158 2 147 1 228 1 277 1 206 1 0 1 209 1 75 1 164 1 78 1 189 1 34 1 316 1 317 1 39 1 320 1 264 1 15 1 199 2 265 1 295 1 241 1 154 1 17 1 155 1 139 1 201 2 203 1 331 1 46 1 302 1 375 2 353 1 115 1 
142 2 144 3 227 2 147 10 277 1 228 7 0 3 1 2 342 1 189 3 10 2 290 7 197 4 199 6 240 3 295 3 154 3 241 1 17 3 66 7 155 3 201 3 302 1 351 1 353 2 355 2 115 3 250 10 116 1 158 3 206 1 209 2 21 2 75 2 124 1 164 2 166 2 25 1 78 1 311 4 214 1 129 1 34 2 317 2 369 2 39 3 320 1 321 1 265 1 323 1 371 1 139 2 331 1 46 2 181 1 332 3 333 8 375 20 49 2 
250 1 144 7 145 1 158 1 227 2 147 1 118 1 277 1 206 1 0 2 360 1 75 2 78 1 310 2 189 2 191 1 32 1 317 2 289 1 39 8 320 1 199 4 265 2 103 1 295 8 241 1 154 2 17 2 155 2 178 1 201 1 69 1 331 1 46 3 181 1 375 2 71 1 354 1 115 2 
356 1 142 1 250 2 116 1 158 1 147 1 228 1 0 1 1 1 78 1 311 1 189 1 260 1 369 1 290 1 263 1 320 1 199 2 240 1 154 1 241 1 17 1 66 1 155 1 201 1 332 1 333 1 375 3 115 1 
147 2 228 1 290 1 197 1 0 1 199 2 1 1 240 1 154 1 17 1 66 1 155 1 327 1 69 1 189 1 333 1 375 2 115 1 
250 2 369 1 228 1 290 1 0 1 199 2 154 1 17 1 66 1 155 1 69 1 311 1 189 1 332 1 333 1 375 2 115 1 193 1 
142 1 250 2 147 2 228 2 0 1 1 1 189 1 311 1 369 1 290 2 197 1 199 2 240 1 154 1 17 1 66 2 155 1 69 1 332 1 333 2 375 4 115 1 
145 1 147 2 228 1 290 1 197 1 0 1 199 2 1 1 240 1 154 1 17 1 66 1 155 1 327 1 189 1 333 1 375 2 115 1 
250 2 145 1 369 1 228 1 290 1 0 1 199 2 154 1 17 1 66 1 155 1 311 1 189 1 332 1 333 1 375 2 115 1 193 1 
142 1 250 2 145 1 147 2 228 2 0 1 1 1 189 1 311 1 369 1 290 2 197 1 199 2 240 1 154 1 17 1 66 2 155 1 332 1 333 2 375 4 115 1 
142 1 250 2 147 2 228 2 0 1 1 1 189 1 311 1 369 1 290 2 197 1 199 2 240 1 154 1 17 1 66 2 155 1 332 1 333 2 375 4 115 1 
250 1 144 1 147 1 227 1 158 1 277 1 0 1 209 1 75 1 164 1 166 1 189 1 34 1 317 1 39 1 199 2 265 1 295 1 154 1 17 1 155 1 139 1 201 1 331 1 46 1 375 2 353 1 115 1 
250 1 144 1 147 1 227 1 158 1 277 1 0 1 209 1 75 1 164 1 5 1 189 1 344 1 34 1 317 1 39 1 200 1 199 2 265 1 295 1 154 1 17 1 155 1 201 1 331 1 46 1 375 2 115 1 
142 1 250 2 116 1 147 2 228 2 0 1 1 1 189 1 311 1 369 1 290 2 197 1 199 2 240 1 154 1 17 1 66 2 155 1 332 1 333 2 375 4 115 1 
250 2 142 1 144 1 147 2 227 1 158 1 228 2 0 1 1 1 209 1 75 1 164 1 166 1 311 1 189 1 317 1 289 1 369 1 290 2 197 1 39 1 199 2 240 1 295 1 154 1 17 1 66 2 155 1 139 1 201 1 46 1 332 1 333 2 375 4 49 1 353 1 115 1 
250 1 356 1 142 1 116 1 158 1 147 2 228 1 0 1 1 1 78 1 189 1 260 1 33 1 369 1 290 1 197 1 320 1 199 2 240 1 154 1 241 1 17 1 66 1 155 1 201 1 332 1 333 1 375 3 115 1 
250 7 142 2 147 6 160 1 161 1 0 2 1 2 363 1 311 2 80 1 233 1 132 1 369 2 197 2 319 2 199 4 291 1 240 2 16 1 154 2 17 2 242 1 297 1 245 1 303 1 332 2 333 4 375 13 115 2 
250 12 142 3 147 14 184 1 161 1 0 3 1 3 306 1 257 1 363 2 282 1 59 1 311 2 80 1 233 2 172 1 132 2 369 2 197 2 319 2 199 6 240 3 16 2 154 3 17 3 242 1 245 1 246 1 332 2 303 4 111 2 333 4 375 26 115 3 
142 5 147 22 184 1 0 3 1 5 342 1 282 1 59 1 233 3 197 4 291 2 199 6 240 6 16 1 65 1 154 3 242 1 17 3 297 1 245 1 246 1 303 4 111 1 115 3 250 22 161 1 306 1 25 1 257 1 363 2 311 4 80 1 129 1 214 1 172 1 132 3 369 4 319 5 321 1 323 1 332 5 333 8 375 44 
250 21 142 5 184 1 147 22 161 1 0 4 1 5 306 1 25 1 257 1 342 1 282 1 363 2 59 1 311 5 80 1 233 3 214 1 129 1 172 1 132 3 369 4 197 3 319 5 199 8 291 2 321 1 240 6 65 1 16 1 323 1 154 4 17 4 242 1 297 1 245 1 246 1 303 4 332 5 111 2 333 8 375 43 115 4 
250 25 142 7 184 1 147 27 161 1 0 2 1 7 306 1 25 1 257 1 342 1 282 1 363 1 59 1 311 7 80 1 233 4 214 1 129 1 172 1 132 2 37 2 369 7 197 7 319 4 199 4 291 2 321 1 240 8 16 1 323 1 154 2 17 2 242 1 245 1 246 1 303 4 332 8 111 1 333 14 375 52 115 2 
131 1 92 1 188 1 119 1 185 1 219 1 22 1 315 1 192 1 35 1 
88 1 343 1 
131 1 92 1 367 1 188 1 119 1 185 1 292 1 153 1 219 1 
131 1 225 1 92 1 218 1 119 1 185 1 219 1 22 1 307 1 67 1 44 1 188 1 9 1 345 1 61 1 315 1 130 2 35 1 
131 1 225 1 92 1 218 1 119 1 185 1 219 1 22 1 307 1 67 1 44 1 188 1 9 1 345 1 61 1 315 1 130 2 35 1 
131 1 225 1 92 1 218 1 119 1 185 1 219 1 22 1 307 1 67 1 44 1 188 1 9 1 345 1 61 1 315 1 130 2 35 1 
72 1 349 1 325 1 
72 1 349 1 325 1 
196 1 96 1 
196 1 96 1 325 1 
298 1 224 1 
92 1 158 2 119 1 185 1 4 1 78 2 188 1 9 1 343 1 130 1 34 1 194 1 131 1 218 1 320 2 219 1 40 1 372 1 87 1 241 2 67 1 88 1 298 1 201 2 44 1 224 1 271 1 
72 1 349 1 
196 1 96 1 325 1 
250 1 116 1 144 2 227 1 158 2 147 1 118 1 277 1 0 1 360 1 75 1 186 1 168 1 310 2 189 1 82 1 317 1 134 1 39 2 320 2 199 2 295 2 154 1 17 1 155 1 201 2 179 1 331 1 46 1 375 2 115 1 
287 1 144 2 289 1 227 1 239 1 39 2 295 2 75 1 308 1 326 1 55 2 149 1 126 1 8 1 181 1 31 1 12 1 269 1 314 1 
287 1 144 1 227 1 239 1 39 1 295 1 308 1 75 1 326 1 55 2 149 1 126 1 43 1 8 1 181 1 269 1 314 1 
317 1 287 1 144 1 227 1 39 1 265 1 340 1 295 1 75 1 329 1 46 1 32 1 12 1 354 1 
287 1 144 1 227 1 239 1 39 1 295 1 308 1 75 1 326 1 55 2 149 1 126 1 8 1 181 1 31 1 12 1 269 1 314 1 
334 1 
288 1 45 1 102 1 74 1 171 1 345 1 62 1 
52 1 255 1 98 1 171 1 345 2 218 1 102 1 137 1 138 1 106 1 44 1 247 1 180 1 45 1 350 1 110 1 19 1 
317 1 144 1 146 1 227 1 39 1 138 1 209 1 265 1 255 1 104 1 98 1 106 1 295 1 75 1 266 1 46 1 190 1 
142 2 52 1 184 1 254 1 1 2 255 2 98 2 257 1 282 1 27 1 233 1 285 5 81 5 171 8 345 5 172 1 132 1 38 1 369 2 218 1 102 5 319 1 138 2 240 2 173 1 106 2 176 2 44 1 247 6 246 1 45 2 350 1 301 1 332 2 19 3 
356 1 252 1 158 1 254 1 255 1 98 1 211 1 78 1 259 1 129 1 284 1 171 2 218 1 102 2 198 1 320 1 138 1 321 1 240 2 323 1 106 1 241 1 176 2 243 1 201 1 221 1 44 1 332 1 
102 1 138 1 74 1 255 1 98 1 106 1 45 1 345 1 171 1 62 1 
142 1 369 1 102 2 254 1 1 1 240 1 176 1 247 4 332 1 171 2 81 2 285 2 19 2 345 2 
52 1 44 1 218 1 45 1 350 1 345 1 
143 1 144 4 52 2 227 3 148 1 209 1 255 2 3 1 98 1 75 2 283 1 27 2 32 1 261 1 171 2 317 2 36 2 38 2 218 3 39 4 102 2 138 2 265 2 105 1 106 2 295 4 374 1 68 1 44 3 156 1 202 1 46 2 350 4 354 1 
250 1 356 2 144 1 158 3 227 1 0 1 209 1 75 1 361 1 164 1 166 1 78 2 189 1 259 1 34 1 317 1 39 1 320 2 199 2 265 1 295 1 154 1 241 2 17 1 155 1 139 1 201 3 331 1 46 1 375 1 353 1 115 1 
38 1 102 1 138 1 255 1 98 1 106 1 247 2 45 1 27 1 19 1 285 1 171 1 345 2 
26 1 92 1 219 1 
298 1 237 1 92 1 219 1 22 1 
26 1 92 1 219 1 
26 1 92 1 219 1 
92 1 90 1 219 1 
92 1 90 1 219 1 
92 1 90 1 219 1 
92 1 219 1 
131 1 188 1 
250 4 147 4 197 1 0 2 199 4 240 1 321 1 323 1 154 2 17 2 25 1 342 1 311 2 332 1 333 3 111 1 214 1 129 1 375 8 115 2 
250 3 288 1 147 3 321 1 240 1 323 1 25 1 342 1 311 2 332 1 333 2 214 1 129 1 375 6 
250 2 142 1 369 1 147 2 197 1 0 1 199 2 1 1 240 1 54 1 154 1 17 1 311 1 332 1 333 2 375 4 115 1 
250 4 142 1 132 1 369 1 147 3 197 1 319 2 291 1 1 1 240 1 311 1 332 1 233 1 333 2 375 7 
142 2 250 12 147 11 0 2 1 2 121 1 25 1 342 1 311 5 233 2 214 1 129 1 84 1 369 2 37 1 197 4 319 2 291 1 199 4 321 2 240 3 323 2 154 2 17 2 332 3 333 9 111 2 375 23 115 2 
250 1 319 1 375 1 
147 1 233 1 375 1 
250 3 142 1 147 3 369 1 197 1 0 1 199 2 1 1 240 1 54 1 154 1 17 1 311 2 332 1 333 3 375 6 355 1 115 1 
250 6 142 2 147 6 184 1 0 1 1 2 257 1 282 1 311 1 233 1 80 1 172 1 132 1 369 2 197 1 319 1 199 2 240 2 154 1 17 1 246 1 332 2 333 2 375 12 115 1 
250 3 147 3 197 1 240 1 321 1 323 1 311 1 332 1 333 2 129 1 375 6 
250 2 84 1 147 1 197 1 0 1 199 2 321 1 323 1 154 1 17 1 25 1 342 1 311 1 333 2 111 1 375 3 115 1 
250 5 147 5 197 2 0 1 198 1 199 2 321 2 240 2 323 2 154 1 17 1 311 3 80 1 332 2 333 5 375 10 129 1 115 1 
147 2 197 1 0 1 199 2 1 1 240 1 154 1 17 1 80 1 333 1 375 2 115 1 
250 2 142 1 369 1 147 2 197 1 0 1 199 2 1 1 240 1 154 1 17 1 311 1 332 1 80 1 333 2 375 4 115 1 
250 2 84 1 147 1 197 1 0 3 199 6 321 1 323 1 154 3 17 3 297 1 311 1 80 1 111 1 333 2 375 3 115 3 
250 9 142 1 147 9 0 4 1 1 54 1 25 1 342 1 169 1 311 3 80 1 233 1 129 1 132 1 84 1 197 3 198 1 319 2 199 8 291 1 321 2 240 3 323 2 154 4 17 4 297 1 332 2 333 6 111 1 375 18 115 4 
250 5 142 1 147 6 0 1 1 1 25 1 342 1 282 1 311 2 233 1 80 1 214 1 129 1 132 1 319 2 199 2 291 1 321 1 240 2 323 1 154 1 17 1 332 1 333 2 375 11 115 1 
250 5 142 1 147 6 0 2 1 1 54 1 25 1 342 1 282 1 311 2 80 1 233 1 214 1 129 1 132 1 197 1 319 2 199 4 291 1 321 1 240 2 323 1 154 2 17 2 332 1 333 3 375 11 115 2 
250 10 142 2 147 9 184 1 0 3 1 2 54 1 25 1 257 1 342 1 282 1 311 3 233 1 80 1 214 1 129 1 172 1 132 1 369 2 197 1 319 1 199 6 321 1 240 3 323 1 154 3 17 3 246 1 332 3 333 4 111 1 375 19 115 3 
250 7 142 2 147 10 184 1 0 3 1 2 54 1 25 1 257 1 342 1 282 1 311 3 233 1 80 1 214 1 129 1 172 1 132 1 369 1 197 2 319 1 199 6 321 1 240 3 323 1 154 3 17 3 246 1 332 2 111 1 333 5 375 17 115 3 
250 5 142 1 147 6 0 1 1 1 25 1 342 1 282 1 311 2 233 1 80 1 214 1 129 1 132 1 319 2 199 2 291 1 321 1 240 2 323 1 154 1 17 1 332 1 333 2 375 11 115 1 
250 6 142 2 147 6 184 1 0 1 1 2 257 1 282 1 311 1 233 1 80 1 172 1 132 1 369 2 197 1 319 1 199 2 240 2 154 1 17 1 246 1 332 2 333 2 375 12 115 1 
250 8 142 2 147 10 184 1 0 4 1 2 54 1 25 1 257 1 342 1 282 1 311 3 80 1 233 1 214 1 129 1 172 1 132 1 369 1 197 2 319 1 199 8 321 1 240 3 323 1 154 4 17 4 246 1 332 2 333 5 111 2 375 18 115 4 
250 7 142 3 147 9 184 1 0 4 1 3 257 1 282 1 311 3 80 1 233 1 172 1 132 1 369 2 197 3 319 1 199 8 240 3 154 4 17 4 297 1 246 1 332 2 333 6 111 2 375 16 115 4 
250 4 147 3 197 3 321 3 240 1 323 3 25 1 342 2 311 3 332 1 333 6 375 7 129 1 
250 8 142 2 147 10 184 1 0 4 1 2 25 1 257 1 342 1 282 1 311 3 80 1 233 1 214 1 129 1 172 1 132 1 369 1 197 1 319 1 199 8 321 1 240 3 323 1 154 4 17 4 297 1 246 1 332 2 333 4 111 2 375 18 115 4 
201 1 158 1 320 1 14 1 234 1 112 1 34 1 
201 1 274 1 226 1 158 1 320 1 14 1 234 1 112 1 41 1 34 1 56 1 280 1 
317 1 288 1 144 1 227 1 39 1 46 1 32 1 265 1 295 1 75 1 354 1 
317 1 144 1 227 1 158 2 39 1 206 1 320 1 209 1 265 1 295 1 241 1 75 1 164 1 78 1 201 2 46 1 353 1 34 1 
317 2 366 1 144 1 36 1 227 1 158 2 39 1 206 1 320 2 209 2 324 1 295 1 175 1 241 2 75 1 164 1 243 1 78 1 201 2 46 3 353 1 34 1 63 1 
144 2 158 2 227 1 206 1 209 2 75 1 164 1 78 1 127 1 34 1 63 1 317 2 366 1 36 1 39 2 320 2 200 1 295 2 324 1 241 2 175 1 243 1 201 2 46 3 
317 1 338 1 251 1 366 1 144 3 36 1 227 1 218 2 39 3 265 1 209 1 295 3 175 1 75 1 266 1 347 1 127 1 44 2 45 1 46 4 350 1 128 1 345 1 
317 1 338 1 366 1 144 3 36 1 227 1 218 2 159 1 39 3 265 1 209 1 295 3 175 1 75 1 266 1 347 1 127 1 44 2 45 1 46 4 350 1 345 1 
144 1 227 1 39 1 295 1 75 1 71 1 
317 2 144 6 289 1 146 1 227 3 39 7 265 2 209 1 360 1 103 1 295 7 3 1 75 2 178 1 310 1 283 1 46 3 181 1 191 1 71 1 336 1 
250 3 116 1 144 1 147 3 227 1 158 2 228 1 206 1 0 2 209 1 75 1 164 1 166 1 25 1 78 1 342 1 311 2 189 2 10 1 214 1 129 1 34 2 317 1 289 1 134 1 290 1 39 1 320 1 199 4 240 1 321 1 323 1 295 1 241 1 154 2 17 2 66 1 155 2 139 1 201 2 46 1 332 1 333 2 375 6 49 1 353 1 115 2 
338 1 144 1 205 1 52 1 93 1 159 1 74 1 255 2 98 2 171 1 345 1 62 1 218 3 39 1 102 1 138 2 265 1 40 1 106 2 295 1 266 1 347 1 44 3 202 1 45 1 300 1 46 2 350 2 
317 1 144 1 146 1 227 1 39 1 209 1 295 1 75 1 347 1 46 1 190 1 352 1 71 1 
317 1 144 4 289 1 227 1 39 4 278 1 265 1 295 4 75 1 127 1 46 1 32 1 354 1 
317 1 144 2 36 1 227 2 39 2 148 1 209 1 295 2 3 1 75 1 124 1 156 1 283 1 46 1 
144 1 227 1 8 1 39 1 265 1 314 1 295 1 75 1 326 1 55 1 
317 1 144 2 289 1 227 1 39 2 360 1 295 2 75 1 179 1 46 1 181 1 
317 2 144 4 36 1 289 1 227 2 39 5 278 1 265 1 103 1 360 1 295 5 75 2 178 1 46 3 32 1 354 1 
235 1 317 2 144 4 36 1 289 1 227 2 39 5 278 1 265 1 360 1 295 5 75 2 178 1 46 3 32 1 354 1 
317 1 144 1 227 1 158 2 39 1 206 1 320 1 200 1 209 1 265 1 295 1 241 1 75 1 164 1 78 1 201 2 46 1 34 1 
317 1 144 1 36 1 146 1 227 2 39 1 209 1 295 1 3 1 75 1 283 1 46 1 336 1 
51 1 158 1 320 1 186 1 201 1 330 1 168 1 30 1 82 1 
50 1 276 1 330 1 
51 1 330 1 30 1 210 1 34 1 
338 1 50 1 51 2 218 2 276 1 210 2 40 1 324 1 243 1 107 1 44 2 330 1 45 1 232 1 30 2 345 1 216 1 34 1 63 1 
288 1 368 1 170 1 249 1 
368 1 170 1 60 1 358 1 249 1 95 1 23 1 
362 1 262 1 60 1 
368 1 152 1 358 3 359 1 95 1 23 1 296 1 341 1 222 2 170 1 60 3 249 1 
272 1 368 1 170 1 60 2 358 2 249 1 95 1 83 1 23 1 
239 1 120 1 230 1 358 1 359 1 95 1 23 1 55 1 326 1 60 1 249 1 
368 1 60 1 358 1 359 1 249 1 95 1 23 1 
368 2 170 1 60 1 358 1 359 1 95 1 23 1 
368 1 53 1 358 2 359 1 95 2 174 1 23 2 60 2 249 1 114 1 
272 2 368 1 120 1 358 3 359 1 122 1 95 1 85 1 23 1 170 1 60 3 249 2 313 1 
272 1 368 1 239 1 358 2 359 1 95 1 55 2 23 1 165 1 326 1 126 1 8 1 170 1 60 2 249 1 
272 2 368 1 120 1 358 4 359 1 95 2 85 1 23 2 18 1 170 1 60 4 249 2 83 1 
368 1 170 1 60 1 358 1 359 1 249 1 95 1 23 1 
272 2 368 2 152 1 120 1 358 4 95 1 85 1 296 1 23 1 244 1 222 1 170 2 60 4 249 3 
272 1 368 1 358 2 359 1 95 1 86 1 23 1 223 1 170 1 60 2 215 1 249 1 
368 1 152 2 358 3 359 1 95 1 296 1 23 1 187 1 222 2 170 1 60 3 249 1 
212 2 312 1 249 2 270 1 
47 1 60 1 358 1 359 1 95 1 23 1 
272 1 368 1 170 1 60 2 358 2 122 1 359 1 249 1 95 1 23 1 
204 1 
368 1 170 1 60 1 358 1 359 1 249 1 95 1 23 1 
272 1 368 1 222 1 170 1 60 3 358 3 122 1 359 1 249 1 95 1 23 1 
244 1 120 1 249 1 85 1 
368 1 249 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (27,231) 48 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (27,231) 48 292 305 (27,231) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (272,273) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (272,273) 276 50 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (272,273) 276 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 167 62 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 191 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 220 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (27,231) 48 112 275 219 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (27,231) 48 77 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (27,231) 48 210 94 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (27,231) 48 292 305 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (27,231) 48 210 94 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (27,231) 48 292 305 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (27,231) 48 210 63 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (27,231) 48 250 (98,244) (98,244) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 1 148 9 261 2 2 1 317 2 22 3 45 1 4 1 25 2 343 6 294 1 221 1 243 2 302 1 303 1 73 1 31 9 32 2 76 1 139 1 34 1 281 5 287 1 126 4 19 2 251 2 108 1 252 1 
211 1 148 9 261 2 2 1 317 2 22 3 45 1 4 1 25 2 343 6 294 1 221 1 243 2 302 1 303 1 73 1 31 9 32 2 76 1 139 1 34 1 281 5 287 1 126 4 19 2 251 2 108 1 252 1 
211 1 148 10 261 2 2 1 317 2 22 4 45 1 4 1 25 2 343 7 294 1 221 1 243 2 302 1 303 1 73 1 31 10 32 2 76 1 139 1 34 1 281 6 287 1 126 5 19 2 251 2 108 1 252 1 
148 7 261 2 2 1 317 2 22 2 45 1 4 1 25 2 343 4 294 1 221 1 243 1 302 1 303 1 73 1 31 7 32 2 76 1 139 1 34 1 281 4 287 1 126 3 19 2 251 2 108 1 252 1 
211 1 148 4 302 1 31 4 317 1 32 1 22 1 4 1 34 1 281 3 25 1 343 3 287 1 294 1 126 2 19 1 251 1 243 2 
224 1 148 2 302 1 261 1 31 2 2 1 317 1 32 1 4 1 281 1 25 1 287 1 115 1 270 1 251 1 108 1 
148 3 302 1 73 1 261 1 31 3 32 2 22 1 4 1 281 2 343 1 287 1 126 1 251 2 
211 1 148 9 261 1 317 1 22 3 4 1 25 1 343 7 294 1 221 1 243 2 302 1 73 1 31 9 32 2 13 1 34 1 281 5 287 1 144 1 126 4 19 1 251 2 252 1 
211 1 148 9 261 1 317 1 22 3 4 1 25 1 343 7 294 1 221 1 243 2 302 1 73 1 31 9 32 2 13 1 34 1 281 5 287 1 144 1 126 4 19 1 251 2 252 1 
311 1 56 1 220 1 
178 1 56 1 23 2 
67 2 293 2 289 2 227 2 74 1 329 2 310 2 150 1 
168 1 61 1 254 2 259 1 0 1 289 2 189 1 262 1 215 1 150 1 214 1 67 3 6 1 26 1 293 3 95 1 156 1 119 2 180 1 225 1 135 2 138 1 75 1 227 2 74 1 247 1 33 1 328 1 329 2 310 2 165 1 205 1 17 2 335 1 37 2 79 1 81 1 
140 1 67 1 293 1 289 1 21 1 227 1 74 1 329 1 310 1 202 1 
338 1 12 1 289 1 21 1 347 1 308 1 322 1 311 1 67 1 56 1 198 1 206 1 342 1 293 1 
338 1 12 2 289 1 227 1 21 1 347 1 308 2 310 1 329 1 311 1 67 1 56 1 198 1 206 1 293 1 
345 1 167 1 12 1 308 1 
311 1 340 1 345 1 56 1 285 1 12 2 308 2 46 1 
285 1 12 1 308 1 
345 1 160 1 12 1 289 1 21 1 74 1 227 1 308 1 310 1 329 1 140 1 67 1 293 1 202 1 
56 1 
311 1 345 1 56 1 285 1 12 2 145 1 308 2 46 1 
169 1 345 2 110 1 12 5 226 2 306 1 162 1 308 5 124 1 46 1 100 2 311 1 56 1 285 2 199 1 106 1 96 1 208 1 175 2 
220 1 150 1 
289 2 227 1 310 1 329 1 150 2 67 2 200 1 293 2 59 1 
231 1 48 1 
168 1 254 1 259 1 225 1 135 1 138 1 123 1 262 1 328 1 150 1 67 1 6 1 293 1 37 1 81 1 156 1 
168 1 254 1 259 1 225 1 135 1 289 1 138 1 227 1 262 1 328 1 329 1 67 2 231 1 6 1 36 1 293 2 37 1 269 1 81 1 156 1 
120 1 289 5 227 4 278 1 329 4 310 1 322 1 150 1 164 1 67 5 36 2 293 5 269 1 59 1 
116 1 140 1 67 2 293 2 289 2 21 1 227 2 329 2 
67 3 36 1 293 3 289 3 227 3 310 1 329 3 150 1 
140 1 67 1 293 1 289 1 21 1 227 1 329 1 
67 1 200 1 293 1 289 1 21 1 227 1 329 1 310 1 59 1 
338 1 168 1 254 1 259 1 0 1 289 3 21 1 262 1 150 1 214 1 67 4 6 1 198 1 26 1 293 4 68 1 269 1 156 1 9 1 119 1 180 1 225 1 135 1 12 1 138 1 75 1 227 3 347 1 247 1 74 1 33 1 328 1 308 1 310 2 329 3 205 1 17 2 206 1 36 1 335 1 79 1 37 1 81 1 59 1 
67 2 293 2 36 1 289 2 227 1 278 1 329 1 150 1 322 1 
338 1 256 1 12 1 289 3 347 1 21 1 227 3 308 1 310 1 329 3 67 3 56 1 198 1 206 1 36 2 293 3 68 1 269 1 59 1 
64 1 289 2 227 2 310 1 329 2 67 2 231 1 36 1 293 2 59 1 
168 1 254 1 259 1 225 1 135 1 138 1 328 1 262 1 150 1 67 1 6 1 293 1 37 1 81 1 156 1 
168 1 254 1 259 1 225 1 135 1 21 1 51 1 130 1 328 1 262 1 150 1 67 1 293 1 37 1 313 1 81 1 156 1 
119 2 0 1 305 1 75 1 33 1 214 1 205 2 333 1 231 1 292 1 196 1 17 2 26 1 48 1 335 1 27 1 
116 1 67 1 206 1 293 1 289 1 21 1 227 1 329 1 
273 1 319 1 
273 1 319 1 
315 1 272 1 
315 1 272 1 
315 1 272 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 319 1 
273 1 266 1 12 1 276 1 308 1 319 1 50 1 
273 1 266 1 276 1 319 1 
25 1 317 1 19 1 
224 1 25 1 317 1 
224 1 151 1 25 3 183 1 19 2 89 1 
224 1 151 1 25 2 183 1 19 1 8 1 
224 1 151 2 25 2 183 1 19 1 
210 1 84 1 257 1 63 1 1 1 44 2 23 3 46 1 5 1 196 1 292 1 199 2 92 1 175 1 96 1 178 1 345 4 159 2 226 1 12 5 277 1 308 5 229 1 181 2 100 1 101 1 311 1 15 1 285 1 56 2 40 1 106 3 
62 1 345 2 258 1 207 1 167 1 12 2 308 2 
84 1 210 1 63 1 44 2 23 4 196 1 292 1 199 2 92 1 175 1 178 2 345 2 159 1 226 1 12 3 277 1 308 3 229 1 100 1 181 2 311 1 101 1 56 3 208 1 40 1 106 3 
84 1 12 1 226 1 308 1 100 1 101 1 208 1 175 1 235 1 
187 1 262 1 220 1 
85 1 262 1 
348 1 
225 1 262 1 156 1 
262 1 104 1 
262 1 156 1 
187 2 225 1 262 3 248 1 185 1 156 1 
301 1 188 1 346 1 119 7 277 1 98 1 215 4 55 1 205 3 133 1 196 1 286 1 103 2 35 1 250 2 353 3 244 1 
301 1 188 1 346 1 119 7 277 1 98 1 215 4 55 1 205 3 133 1 196 1 286 1 103 2 35 1 250 2 353 3 244 1 
10 1 301 1 188 1 346 1 119 7 277 1 98 1 215 4 55 1 205 3 133 1 196 1 286 1 103 2 35 1 250 2 353 3 244 1 
188 1 133 2 346 1 119 1 250 1 14 1 215 1 
264 1 191 1 188 1 133 1 17 2 119 1 26 1 250 1 335 1 75 1 33 1 215 1 
254 1 148 2 261 1 239 1 317 1 43 1 4 1 291 1 89 1 25 2 343 1 268 1 154 1 28 1 344 1 224 1 72 1 302 1 135 1 31 2 32 1 328 1 281 1 142 1 287 1 37 1 314 1 19 1 251 1 81 1 
254 1 148 3 261 1 317 1 43 1 4 1 89 1 291 1 25 2 343 2 268 1 154 1 28 1 344 1 224 1 72 1 302 1 135 1 304 1 245 1 31 3 32 1 328 1 281 1 102 1 142 1 37 1 19 1 251 1 81 1 
254 1 148 2 261 1 43 1 317 1 4 1 89 1 25 2 343 2 268 1 154 1 28 1 344 1 224 1 302 1 135 1 304 1 31 2 328 1 281 1 102 1 142 1 37 1 19 1 81 1 
60 1 254 1 237 1 259 1 148 1 261 2 43 2 262 1 156 1 28 2 135 1 245 1 31 1 32 1 328 1 332 1 142 2 37 1 337 1 251 1 58 1 81 1 234 1 
254 1 148 1 261 1 317 1 43 1 291 1 89 1 25 2 268 1 154 1 28 1 344 1 224 1 72 1 135 1 304 1 31 1 32 1 328 1 142 1 287 1 37 1 314 1 19 1 251 1 81 1 
203 1 
209 1 254 2 170 1 259 2 316 4 318 2 262 1 321 2 322 1 46 3 131 2 132 1 265 1 91 1 134 1 96 1 175 1 177 1 178 2 135 2 12 5 226 1 328 1 332 1 100 1 56 1 285 6 106 2 234 1 338 1 289 1 111 1 21 1 190 1 23 2 193 2 67 1 198 1 199 2 342 1 293 1 153 2 156 1 29 2 121 1 347 1 308 5 206 1 166 1 312 2 37 2 40 1 83 1 81 1 
338 1 209 1 170 1 316 2 12 3 121 1 289 1 347 1 21 1 111 1 308 3 322 1 46 1 132 1 67 1 285 2 206 1 198 1 342 1 293 1 153 1 145 1 
338 1 209 1 170 1 316 3 289 1 111 1 21 1 322 1 46 1 132 1 67 1 198 1 342 1 293 1 12 3 121 1 347 1 308 3 311 1 285 1 206 1 56 1 312 1 145 1 
338 1 209 1 170 1 316 2 12 2 121 1 289 1 347 1 21 1 111 1 308 2 322 1 131 1 132 1 67 1 285 1 206 1 198 1 342 1 293 1 153 1 
209 1 170 1 316 4 318 2 321 2 322 1 46 3 131 4 132 1 96 1 175 1 177 1 178 2 12 5 226 1 227 1 329 1 100 1 140 1 56 1 285 7 145 1 106 1 338 1 149 1 289 2 21 2 111 1 190 1 67 2 341 1 193 2 198 1 342 1 199 1 293 2 153 4 155 1 202 1 29 2 160 1 121 1 74 1 347 1 308 5 310 1 163 1 204 1 311 1 206 1 312 2 
209 1 170 1 316 3 318 2 321 2 322 1 46 1 131 1 132 1 265 1 96 1 175 1 177 1 178 2 12 3 226 1 227 1 329 1 100 1 140 1 56 3 285 2 106 1 338 1 289 2 21 2 111 1 190 1 23 2 67 2 193 2 198 1 342 1 199 1 293 2 153 1 202 1 29 1 160 1 121 1 74 1 347 1 308 3 310 1 311 1 206 1 312 1 
209 1 170 1 316 4 318 2 321 2 322 1 46 2 131 2 132 1 175 1 96 1 177 1 178 2 12 4 226 1 227 1 329 1 100 1 140 1 285 4 56 1 106 1 338 1 289 2 21 2 111 1 190 1 341 1 67 2 193 2 198 1 342 1 199 1 293 2 153 2 202 1 29 2 160 1 121 1 74 1 347 1 308 4 310 1 163 1 204 1 311 1 206 1 312 2 
209 1 170 1 316 4 318 2 321 2 322 1 46 2 131 2 132 1 175 1 96 1 177 1 178 2 12 4 226 1 227 1 329 1 100 1 140 1 285 4 56 1 106 1 338 1 289 2 21 2 111 1 190 1 341 1 67 2 193 2 198 1 342 1 199 1 293 2 153 2 202 1 29 2 160 1 121 1 74 1 347 1 308 4 310 1 163 1 204 1 311 1 206 1 312 2 
209 1 170 1 316 2 87 1 318 2 322 1 46 2 132 1 175 1 96 1 271 1 177 1 12 4 226 1 227 1 329 1 100 1 140 1 285 2 56 1 106 1 186 2 338 1 289 2 21 2 111 1 23 2 67 2 193 2 198 1 342 1 199 1 293 2 295 1 202 1 160 1 121 1 74 1 347 1 308 4 310 1 309 2 163 1 311 1 206 1 
209 1 170 1 316 4 318 2 321 2 322 1 46 2 131 3 132 1 96 1 175 1 177 1 178 2 12 4 226 1 227 1 329 1 100 1 140 1 285 5 56 1 106 1 338 1 149 1 289 2 21 2 111 1 190 1 341 1 67 2 193 2 198 1 342 1 199 1 293 2 153 3 202 1 29 2 160 1 121 1 74 1 347 1 308 4 310 1 163 1 204 1 311 1 206 1 312 2 
209 1 170 1 316 4 318 2 321 2 322 1 46 2 131 3 132 1 96 1 175 1 177 1 178 2 12 4 226 1 227 1 329 1 100 1 140 1 285 5 56 1 106 1 338 1 149 1 289 2 21 2 111 1 190 1 341 1 67 2 193 2 198 1 342 1 199 1 293 2 153 3 202 1 29 2 160 1 121 1 74 1 347 1 308 4 310 1 163 1 204 1 311 1 206 1 312 2 
338 1 209 1 170 1 316 2 289 1 111 1 21 1 318 1 23 1 322 1 46 1 132 1 193 1 67 1 265 1 198 1 199 1 342 1 293 1 175 1 96 1 271 1 177 1 226 1 12 3 121 1 347 1 308 3 309 1 100 1 285 1 206 1 106 1 186 1 
0 1 214 1 215 3 150 2 196 1 26 1 48 1 220 1 244 1 301 1 119 6 75 1 277 1 98 1 33 1 55 1 333 1 205 3 231 1 17 2 35 1 103 2 250 1 335 1 353 2 
119 1 0 1 275 1 75 1 33 1 214 1 112 1 205 1 231 1 17 2 141 1 26 1 48 1 335 1 219 1 
168 1 254 1 259 1 64 1 0 1 289 1 262 1 150 1 214 1 215 1 67 2 323 1 6 1 218 1 26 1 293 2 93 1 269 1 156 1 119 2 225 1 180 1 135 1 138 1 227 1 75 1 123 1 33 1 328 1 329 1 205 1 165 1 17 2 141 1 36 1 335 1 37 1 81 1 
168 1 254 1 259 1 0 2 289 1 262 1 290 1 214 2 217 1 67 2 6 1 26 2 48 1 293 2 269 1 156 1 119 2 225 1 180 1 135 1 246 1 138 1 227 1 75 2 33 2 328 1 329 1 77 1 205 2 231 1 17 4 141 1 36 1 335 2 79 1 37 1 57 1 81 1 
147 1 254 8 61 2 259 2 239 1 0 2 289 1 262 3 214 2 215 1 67 1 26 2 293 1 176 1 156 2 300 1 119 2 180 1 304 1 135 7 327 1 227 1 75 2 33 2 328 2 329 1 332 1 283 1 333 1 165 1 205 1 17 4 36 1 335 2 37 8 80 1 107 1 81 2 234 1 
67 1 293 1 289 1 227 1 329 1 310 1 88 1 59 1 
210 1 119 2 0 1 75 1 277 1 33 1 214 1 215 2 333 1 231 1 17 2 26 1 48 1 335 1 94 1 
119 2 0 1 305 1 75 1 33 1 214 1 333 1 205 2 231 1 292 1 196 1 17 2 26 1 48 1 335 1 
210 1 119 2 63 1 0 1 75 1 277 1 33 1 214 1 215 2 333 1 231 1 17 2 26 1 48 1 335 1 
210 1 119 2 327 1 0 1 75 1 277 1 33 1 214 1 215 2 231 1 17 2 26 1 48 1 335 1 94 1 
119 2 327 1 0 1 305 1 75 1 33 1 214 1 205 2 231 1 292 1 196 1 17 2 26 1 48 1 335 1 
210 1 119 2 63 1 327 1 0 1 75 1 277 1 33 1 214 1 215 2 231 1 17 2 26 1 48 1 335 1 
210 1 63 1 119 2 0 1 75 1 277 1 33 1 214 1 215 2 231 1 17 2 26 1 48 1 335 1 
168 1 254 1 259 1 0 1 262 1 215 1 150 1 214 1 67 1 6 1 26 1 293 1 156 1 119 2 225 1 180 1 135 1 138 1 75 1 33 1 328 1 165 1 205 1 17 2 335 1 79 1 37 1 81 1 
168 1 254 1 259 1 0 1 21 1 130 1 262 1 150 1 214 1 67 1 26 1 293 1 156 1 118 1 119 1 225 1 180 1 135 1 75 1 51 1 33 1 328 1 205 1 17 2 335 1 313 1 37 1 81 1 
210 1 119 2 63 1 0 1 75 1 277 1 33 1 214 1 215 2 231 1 17 2 141 1 26 1 48 1 335 1 
168 1 210 1 254 1 63 1 239 1 0 1 262 1 215 2 290 1 214 1 67 1 6 1 26 1 48 1 293 1 156 1 119 2 225 1 135 1 138 1 277 1 75 1 33 1 328 1 231 1 17 2 335 1 79 1 37 1 81 1 
210 1 119 2 63 1 0 1 289 1 277 1 227 1 75 1 33 1 310 1 329 1 215 2 214 1 67 1 231 1 17 2 141 1 26 1 48 1 293 1 242 1 335 1 59 1 
210 3 63 3 20 2 86 1 215 9 24 1 112 2 264 1 216 1 192 1 292 3 196 3 26 2 296 1 119 19 75 2 277 3 33 2 282 1 351 1 205 10 103 3 182 1 17 4 286 3 184 2 143 1 335 2 353 6 146 1 
210 3 255 1 63 3 20 4 86 1 215 14 264 1 112 2 90 1 216 1 192 1 196 2 292 2 173 1 26 3 11 1 179 2 119 26 75 3 277 3 33 3 282 2 284 1 205 12 286 2 103 2 182 2 17 6 249 1 184 1 143 2 335 3 353 4 146 2 
210 4 255 1 63 4 20 4 86 1 215 20 24 1 90 1 112 4 264 1 216 1 192 1 292 4 196 5 173 1 26 3 296 1 244 1 11 1 301 1 179 1 119 41 75 3 277 5 98 1 33 3 55 1 282 3 284 1 205 21 35 1 103 4 182 2 17 6 286 4 249 1 184 1 250 1 143 1 335 3 353 8 146 3 82 1 
210 4 255 1 63 4 20 4 86 1 215 20 24 1 90 1 112 4 264 1 216 1 192 1 292 3 196 4 173 1 26 4 296 1 244 1 11 1 301 1 179 2 119 38 75 4 277 5 98 1 33 4 55 1 282 3 284 1 205 18 35 1 103 4 182 2 17 8 286 3 249 1 184 1 250 1 143 1 335 4 353 7 146 3 82 1 
210 7 255 1 339 2 63 7 20 4 86 1 215 27 90 1 112 4 264 1 216 1 192 1 292 7 196 8 173 1 26 2 296 2 244 1 11 1 301 1 179 1 119 52 75 2 277 8 98 1 33 2 55 1 282 2 284 1 205 25 35 1 103 7 182 1 17 4 286 7 249 1 184 1 250 1 143 1 335 2 353 14 146 4 
254 2 61 2 0 1 289 2 3 1 262 1 214 1 215 1 67 2 26 1 293 2 176 1 156 1 158 1 119 2 180 1 135 2 75 1 33 1 328 1 52 1 53 1 165 1 205 1 17 2 141 1 335 1 37 2 80 1 81 1 109 1 
28 1 254 2 224 1 344 1 30 1 72 1 304 1 135 2 239 1 317 1 328 1 89 1 25 2 267 1 37 2 154 1 19 1 298 1 81 1 
28 1 254 1 224 1 344 1 72 1 304 1 135 1 317 1 328 1 89 1 25 2 152 1 267 1 37 1 154 1 19 1 81 1 
28 1 254 1 259 1 135 1 328 1 262 1 332 1 37 1 325 1 298 1 58 1 81 1 234 1 156 1 
28 1 254 1 224 1 344 1 30 1 72 1 304 1 135 1 317 1 328 1 89 1 25 2 267 1 37 1 154 1 19 1 298 1 81 1 
16 1 
311 1 56 1 199 1 306 1 162 1 220 1 106 1 
321 1 190 1 23 1 46 1 199 1 175 1 96 1 178 1 29 1 226 1 12 1 308 1 100 1 311 1 56 2 285 1 106 1 
210 2 187 1 254 1 85 2 63 2 259 1 171 1 44 6 262 4 23 12 46 1 172 1 196 2 292 2 199 6 297 1 175 2 96 2 49 1 156 1 178 6 225 1 135 1 12 2 226 2 161 1 277 2 347 1 228 2 308 2 328 1 230 2 181 6 100 2 77 2 56 6 285 2 37 1 336 1 38 1 40 1 106 7 185 1 81 2 
210 2 255 1 63 2 44 5 23 6 46 1 112 1 90 1 113 1 292 2 196 2 173 1 199 5 175 2 96 2 178 3 11 1 70 1 69 1 12 1 226 2 277 2 308 1 228 2 181 5 100 2 282 1 311 2 285 1 56 5 249 1 40 1 106 8 146 1 83 1 
289 1 21 1 113 1 67 1 341 1 196 1 199 2 293 1 175 1 96 1 202 1 157 1 301 1 160 1 226 1 12 1 277 2 74 1 227 1 228 2 308 1 310 1 329 1 100 1 55 1 140 1 35 1 106 2 
226 1 306 1 162 1 100 1 311 1 56 1 199 1 96 1 175 1 106 1 
178 5 210 2 63 2 277 2 228 2 44 5 23 10 181 5 77 1 113 1 292 2 196 2 56 5 199 5 106 5 
311 1 56 1 285 1 12 1 308 1 46 1 
254 4 259 2 262 1 46 2 199 2 134 1 175 2 96 1 156 1 135 4 226 2 12 3 328 1 308 3 331 2 332 1 54 1 100 2 350 1 285 4 166 1 233 1 37 4 208 1 40 2 106 2 81 1 83 2 234 1 
168 1 254 1 259 1 0 1 289 2 262 1 150 1 214 1 67 3 6 1 26 1 293 3 156 1 119 1 180 1 225 1 135 1 138 1 75 1 227 2 74 1 247 1 33 1 328 1 329 2 310 2 205 1 17 2 335 1 37 1 79 1 81 1 
178 2 226 1 44 2 23 4 181 2 100 1 311 2 56 4 199 2 250 1 96 1 175 1 40 1 106 1 83 1 
232 1 65 1 279 1 
232 1 65 1 279 1 
222 1 117 1 232 1 42 1 279 1 
232 1 65 1 279 1 
71 1 232 1 279 1 
71 1 232 1 279 1 
71 1 232 1 279 1 
232 1 279 1 
273 1 319 1 
301 1 119 8 179 1 277 1 75 2 33 2 98 1 215 4 55 1 205 4 196 1 286 1 103 2 17 4 35 1 26 2 250 1 335 2 353 3 244 1 
301 1 119 6 277 1 98 1 215 3 55 1 205 3 196 1 35 1 103 2 250 1 353 2 220 1 244 1 
210 1 63 1 119 4 75 1 277 1 33 1 215 2 205 2 196 1 292 1 103 1 17 2 286 1 26 1 335 1 353 2 127 1 
210 1 119 7 63 1 277 1 215 3 112 2 282 1 205 4 196 1 292 1 103 1 286 1 296 1 353 2 146 1 
210 2 63 2 339 1 215 11 112 2 292 2 196 3 26 2 296 1 244 1 301 2 119 23 179 2 275 1 277 3 75 2 98 1 33 2 55 1 205 12 35 2 286 4 103 5 17 4 250 1 18 1 335 2 353 9 146 2 
112 1 205 1 119 1 
119 1 146 1 215 1 
210 1 119 6 63 1 75 1 277 1 33 1 215 3 77 1 205 3 292 1 196 1 17 2 286 1 103 2 26 1 335 1 353 3 127 1 
210 2 255 1 63 2 215 6 112 1 264 1 90 1 292 2 196 2 173 1 26 1 11 1 119 12 75 1 277 2 33 1 282 1 205 6 286 1 17 2 103 1 249 1 335 1 353 2 146 1 
301 1 119 6 277 1 215 3 55 1 205 3 196 1 35 1 103 1 286 1 353 2 
301 1 119 3 179 1 75 1 33 1 98 1 215 1 205 2 286 1 103 1 35 1 17 2 26 1 18 1 335 1 353 2 244 1 
157 1 301 2 119 10 75 1 277 2 33 1 215 5 264 1 55 1 205 5 196 2 17 2 35 2 103 3 286 2 26 1 335 1 353 5 
210 1 119 2 75 1 277 1 33 1 215 2 264 1 17 2 286 1 26 1 335 1 353 1 
210 1 63 1 119 4 75 1 277 1 33 1 215 2 264 1 205 2 196 1 292 1 103 1 17 2 286 1 26 1 335 1 353 2 
301 1 179 1 119 3 75 3 33 3 215 1 24 1 264 1 205 2 17 6 35 1 103 1 286 1 26 3 18 1 335 3 353 2 
210 3 63 3 238 1 215 16 24 1 112 4 264 1 292 3 196 5 324 1 26 5 296 1 244 1 301 3 179 2 119 34 137 1 75 5 277 5 98 1 33 5 55 2 282 1 205 18 35 3 17 10 286 5 103 7 250 1 18 1 335 5 353 12 127 1 146 3 
215 4 112 1 264 1 196 1 173 1 26 1 244 1 301 1 119 8 277 1 75 1 33 1 98 1 282 1 55 1 205 4 17 2 35 1 103 2 250 1 335 1 353 2 146 1 
210 1 63 1 215 6 112 2 264 1 196 1 173 1 26 2 296 1 244 1 301 1 119 11 75 2 277 2 98 1 33 2 55 1 282 1 205 5 103 2 35 1 17 4 286 1 250 1 335 2 353 3 127 1 146 1 
210 2 255 1 63 2 215 9 112 1 264 1 90 1 292 2 196 3 173 1 26 3 244 1 11 1 301 1 119 19 179 1 75 3 277 3 98 1 33 3 55 1 282 1 205 10 35 1 286 1 17 6 103 3 249 1 250 1 335 3 353 4 127 1 146 1 
210 2 255 1 63 2 215 10 112 1 264 1 90 1 292 1 196 2 173 1 26 3 244 1 11 1 301 1 179 1 119 17 75 3 277 3 98 1 33 3 55 1 282 1 205 7 35 1 286 2 17 6 103 3 249 1 250 1 335 3 353 5 127 1 146 1 
215 4 112 1 264 1 196 1 173 1 26 1 244 1 301 1 119 8 277 1 75 1 33 1 98 1 282 1 55 1 205 4 17 2 35 1 103 2 250 1 335 1 353 2 146 1 
210 2 255 1 63 2 215 6 112 1 264 1 90 1 292 2 196 2 173 1 26 1 11 1 119 12 75 1 277 2 33 1 282 1 205 6 286 1 17 2 103 1 249 1 335 1 353 2 146 1 
210 2 255 1 63 2 215 10 112 1 264 1 90 1 292 1 196 2 173 1 26 4 244 1 11 1 301 1 119 18 179 2 75 4 277 3 98 1 33 4 55 1 282 1 205 8 35 1 286 2 17 8 103 3 249 1 250 1 335 4 353 5 127 1 146 1 
210 3 255 1 63 3 215 9 24 1 112 1 264 1 90 1 292 2 196 2 173 1 26 4 11 1 119 16 179 2 75 4 277 3 33 4 282 1 205 7 286 3 17 8 103 3 249 1 335 4 353 6 146 1 
301 3 119 7 277 1 98 1 215 3 55 1 205 4 196 1 35 3 103 3 286 3 353 6 244 2 
210 2 255 1 63 2 215 10 24 1 112 1 264 1 90 1 292 1 196 2 173 1 26 4 244 1 11 1 301 1 119 18 179 2 75 4 277 3 98 1 33 4 55 1 282 1 205 8 35 1 286 1 17 8 103 3 249 1 250 1 335 4 353 4 146 1 
67 1 136 1 293 1 289 1 278 1 150 1 322 1 
128 1 136 1 289 1 240 1 278 1 320 1 150 1 322 1 67 1 78 1 293 1 354 1 
254 1 259 1 135 1 37 1 328 1 262 1 220 1 81 1 234 1 156 1 332 1 
168 1 254 1 259 1 225 1 135 1 289 1 227 1 262 1 328 1 329 1 150 1 67 2 6 1 36 1 293 2 37 1 81 1 156 1 
338 1 168 1 254 1 289 2 21 1 262 3 150 1 67 2 6 1 293 2 156 2 225 2 135 1 227 2 328 1 329 1 331 1 206 1 352 1 36 1 37 1 104 1 81 1 
338 1 168 1 254 1 289 2 21 2 130 1 262 3 150 1 67 2 293 2 156 2 225 2 135 1 227 2 328 1 329 1 331 1 206 1 352 1 36 1 313 1 37 1 104 1 81 1 
187 1 85 1 254 3 259 1 262 4 263 1 194 1 174 1 156 1 225 1 135 3 12 2 347 1 328 1 308 2 331 1 311 1 285 1 56 1 352 1 37 3 104 1 81 1 
254 3 85 1 187 1 259 1 225 1 135 3 12 2 347 1 308 2 262 4 328 1 331 1 311 1 194 1 56 1 285 1 352 1 37 3 104 1 81 1 49 1 156 1 
300 1 254 1 135 1 37 1 328 1 81 1 
254 1 259 1 135 1 37 1 280 1 
168 1 254 1 0 2 239 1 289 1 262 1 150 2 215 3 214 2 290 1 67 2 196 1 6 1 26 2 48 1 293 2 244 1 156 1 301 1 119 6 225 1 135 1 138 1 277 1 227 1 75 2 98 1 33 2 328 1 329 1 55 1 205 3 231 1 103 2 35 1 17 4 141 1 250 1 36 1 335 2 353 2 37 1 79 1 57 1 81 1 109 1 
254 1 85 1 187 1 259 1 262 2 46 1 199 1 297 1 175 2 96 2 49 1 345 1 135 1 226 2 12 3 161 1 306 1 347 1 162 1 308 3 100 2 311 1 56 1 285 2 233 1 37 1 106 1 38 1 
300 1 187 1 254 2 225 1 135 2 239 1 262 2 328 1 37 2 336 1 185 1 81 2 156 1 
254 4 259 1 135 4 239 1 262 1 328 1 332 1 194 1 195 1 37 4 81 1 234 1 156 1 
253 1 326 1 254 2 260 1 225 1 135 2 262 1 328 1 331 1 241 1 37 2 105 1 81 2 156 1 
254 1 224 1 25 1 259 1 135 1 317 1 154 1 37 1 328 1 81 1 
254 2 135 2 304 1 239 1 262 1 328 1 53 1 37 2 80 1 81 1 156 1 
254 5 147 1 259 1 135 4 239 1 262 3 328 2 331 1 332 1 283 1 195 1 37 5 80 1 234 1 81 2 156 2 
254 5 147 1 259 1 135 4 239 1 262 3 328 2 99 1 331 1 332 1 195 1 37 5 80 1 234 1 81 2 156 2 
168 1 254 1 259 1 289 1 21 1 262 1 130 1 150 1 67 2 293 2 156 1 225 1 135 1 227 1 328 1 329 1 36 1 313 1 37 1 81 1 
254 1 135 1 37 1 280 1 331 1 
223 1 334 1 299 1 39 1 150 1 
338 1 223 2 236 1 345 1 12 2 347 1 21 1 308 2 150 1 330 1 311 1 56 1 206 1 198 1 288 1 334 2 68 1 39 1 299 2 
158 1 289 1 3 1 52 1 67 1 293 1 334 1 299 1 39 1 
236 1 39 1 330 1 
281 1 302 1 220 1 4 1 
281 1 148 1 302 1 31 1 32 1 4 1 251 1 
148 1 261 1 43 1 
281 1 148 3 302 1 287 1 97 1 31 3 213 1 32 1 122 1 4 1 251 1 108 2 
281 1 343 1 148 2 302 1 31 2 32 1 4 1 251 1 243 1 
148 1 31 1 317 1 32 1 281 1 25 1 287 1 294 1 126 1 19 1 251 1 
281 1 148 1 302 1 287 1 31 1 32 1 251 1 
148 1 302 2 287 1 31 1 32 1 4 1 251 1 
148 2 274 1 302 1 31 2 32 2 281 1 66 1 197 1 287 1 251 2 
148 3 302 1 31 3 32 1 22 1 4 1 281 2 343 2 287 1 126 1 221 1 251 1 252 1 
224 1 148 2 302 1 31 2 317 1 32 1 4 1 89 1 281 1 25 2 47 1 343 1 287 1 19 1 251 1 
211 1 148 4 302 1 31 4 32 2 22 1 4 1 281 2 343 2 287 1 126 1 251 2 243 1 
281 1 148 1 302 1 287 1 31 1 32 1 4 1 251 1 
148 4 302 2 97 1 31 4 213 1 32 1 22 1 4 2 281 3 343 2 114 1 126 1 251 1 108 1 
148 2 302 1 31 2 32 1 129 1 307 1 4 1 281 1 343 1 287 1 144 1 251 1 
148 3 302 1 97 1 31 3 213 2 32 1 4 1 281 1 287 1 201 1 251 1 108 2 
281 2 41 1 212 2 349 1 
148 1 287 1 31 1 32 1 7 1 251 1 
281 1 343 1 148 2 302 1 287 1 31 2 32 1 4 1 251 1 252 1 
125 1 
281 1 148 1 302 1 287 1 31 1 32 1 4 1 251 1 
148 3 302 1 31 3 32 1 4 1 281 1 343 1 287 1 251 1 108 1 252 1 
281 1 114 1 126 1 22 1 
281 1 302 1 

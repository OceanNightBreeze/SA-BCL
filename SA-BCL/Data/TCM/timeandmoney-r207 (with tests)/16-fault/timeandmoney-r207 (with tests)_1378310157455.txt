#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 (24,75) (24,75) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 (24,75) (24,75) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 (24,75) (24,75) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 (24,75) (24,75) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 117 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 226 117 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 244 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 295 290 341 263 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 295 290 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 295 290 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 295 196 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 295 290 341 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 295 290 341 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 81 170 319 158 15 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 81 170 319 158 15 340 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 81 170 319 158 15 340 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 81 170 319 158 15 340 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 23 319 158 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 16 244 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 81 170 319 158 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 244 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (181,236) 13 122 (120,143) (120,143) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 212 (44,206) (44,206) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 1 70 2 95 2 264 1 220 3 187 1 174 3 267 1 362 1 212 1 225 1 77 1 44 1 
70 2 95 2 24 1 297 2 187 1 75 1 300 1 76 1 212 4 98 1 129 1 77 2 306 1 130 2 132 1 264 4 220 9 221 2 174 9 267 3 362 6 43 1 249 2 225 1 226 1 339 1 
70 2 95 2 24 1 297 2 187 1 75 1 300 1 76 1 212 4 98 1 129 1 77 2 306 1 130 2 132 1 264 4 220 9 221 2 174 9 267 3 362 6 43 1 249 2 225 1 226 1 339 1 
70 2 95 2 24 1 297 2 187 1 75 1 300 1 76 1 212 4 98 1 129 1 77 2 306 1 130 2 132 1 264 4 220 9 221 2 174 9 267 3 362 6 43 1 249 2 225 1 226 1 339 1 
70 2 95 2 24 1 297 1 187 1 75 1 300 1 76 1 212 3 129 1 77 2 306 1 130 2 132 1 264 3 220 7 221 2 174 7 267 2 362 4 43 1 249 2 225 1 226 1 339 1 
70 1 130 1 95 1 297 2 264 2 220 4 221 1 174 4 267 1 362 3 43 1 212 2 249 1 225 1 98 1 226 1 
206 1 70 1 165 1 130 1 132 1 95 1 220 2 25 1 221 1 174 2 76 1 225 1 77 1 44 1 352 1 
70 2 130 1 95 2 297 2 264 4 220 9 187 1 221 1 300 1 174 9 267 3 362 7 249 1 43 1 212 4 225 1 98 1 77 1 226 1 117 1 260 1 306 1 
70 2 130 1 95 2 297 2 264 4 220 9 187 1 221 1 300 1 174 9 267 3 362 7 249 1 43 1 212 4 225 1 98 1 77 1 226 1 117 1 260 1 306 1 
236 1 195 1 122 1 120 1 310 1 13 1 143 1 86 1 
273 1 
195 1 107 1 310 2 189 1 273 1 50 1 293 1 86 2 
19 1 345 2 47 1 122 1 120 1 94 2 50 1 273 1 143 1 326 1 145 1 236 1 258 1 189 2 54 2 78 1 195 2 310 5 13 1 133 1 244 1 14 2 287 1 86 5 61 2 363 2 178 1 16 1 292 1 293 1 116 1 
56 1 273 1 50 1 
28 2 273 1 323 1 
184 2 199 2 236 2 122 1 114 1 13 2 51 2 112 2 
184 3 252 2 92 2 48 1 121 1 122 1 160 1 161 1 188 1 124 1 51 3 276 1 236 2 301 1 29 1 351 1 304 1 193 1 354 1 35 1 150 1 13 2 59 1 87 2 112 2 288 1 199 2 136 1 42 1 177 1 114 1 115 1 316 1 90 1 367 2 318 1 371 2 
236 1 122 1 120 1 13 1 
103 1 184 1 122 1 120 1 310 1 13 1 49 1 273 1 50 1 143 1 51 1 86 1 111 1 112 1 233 1 175 1 236 1 338 1 180 1 
184 1 122 1 120 1 310 2 13 2 49 1 273 1 50 1 143 1 86 2 51 1 111 1 112 1 233 1 199 1 175 1 236 2 180 1 
195 1 310 1 189 1 58 1 86 1 
195 1 310 2 189 1 273 1 50 1 238 1 293 1 86 2 
310 1 189 1 86 1 
184 2 13 1 51 2 111 1 112 2 199 1 236 1 114 1 156 1 146 1 218 1 
211 1 259 1 265 1 
184 1 183 1 252 1 121 1 59 1 161 1 51 1 87 1 288 1 136 1 301 1 114 1 115 1 316 1 367 1 354 1 
184 5 168 1 13 1 324 1 51 5 360 1 111 1 112 5 199 4 314 2 236 4 114 1 338 1 204 1 146 1 218 1 
184 1 199 1 236 1 51 1 111 1 112 1 34 1 
56 1 114 1 
184 2 252 1 121 1 59 1 161 1 324 1 51 2 87 1 112 1 288 1 211 1 136 1 199 1 301 1 314 1 236 1 115 1 316 1 367 1 354 1 
184 2 51 2 111 1 112 2 199 2 236 2 314 1 114 1 218 1 
184 1 199 1 236 1 51 1 111 1 112 1 34 1 
184 1 13 1 51 1 111 1 112 1 199 1 236 1 156 1 146 1 
184 4 252 1 92 1 48 1 121 1 122 1 49 1 161 1 188 1 124 1 51 4 324 1 233 1 276 1 301 1 236 3 31 1 304 1 146 1 353 1 354 1 35 1 150 1 310 1 13 2 59 1 86 1 87 1 111 1 112 3 288 1 136 1 199 3 175 1 42 1 314 1 177 1 114 1 115 1 316 1 180 1 90 1 367 1 371 2 
184 2 51 2 111 1 360 1 112 2 199 1 314 1 236 1 114 1 338 1 218 1 
184 3 104 1 310 1 13 1 49 1 273 1 86 1 324 1 51 3 111 1 112 3 233 1 199 3 175 1 314 2 236 3 31 1 180 1 146 1 
184 2 13 1 265 1 51 2 112 2 199 2 211 1 314 1 236 2 146 1 
184 1 252 1 121 1 59 1 161 1 51 1 87 1 288 1 136 1 301 1 114 1 115 1 316 1 367 1 354 1 
184 1 252 1 121 1 38 1 84 1 59 1 161 1 51 1 87 1 288 1 136 1 114 1 316 1 367 1 354 1 
271 1 92 4 73 1 48 1 124 1 145 1 234 1 211 2 258 1 259 2 281 1 351 2 304 1 35 1 150 2 81 1 37 1 265 2 42 1 247 1 90 1 118 1 371 2 342 1 
184 1 51 1 111 1 112 1 199 1 175 1 236 1 181 1 
200 1 255 2 163 1 369 2 210 1 205 1 
255 1 369 1 110 1 
255 1 369 1 
255 1 369 1 
200 1 210 1 
200 1 210 1 
200 1 210 1 
255 1 166 1 369 1 
255 1 166 1 369 1 
255 1 166 1 369 1 
255 1 313 1 369 1 
255 1 313 1 369 1 
255 1 313 1 369 1 
184 2 251 1 119 1 141 1 208 1 51 2 52 1 126 1 255 1 236 2 128 1 283 1 9 1 79 1 310 1 85 1 86 1 110 1 112 2 199 2 151 1 114 1 369 1 370 1 
251 2 119 2 310 2 254 2 273 1 0 1 274 1 85 2 162 1 86 2 151 2 126 3 255 2 7 1 369 2 307 1 79 1 194 1 205 1 
165 1 249 1 296 1 99 2 221 2 
130 1 249 1 221 1 
130 1 165 1 221 1 
165 1 249 2 296 1 99 1 60 1 221 3 
165 1 249 1 296 1 82 1 99 1 221 2 
195 3 310 4 273 1 50 1 1 1 86 4 88 1 189 1 293 1 66 1 67 1 17 1 
195 3 310 4 273 1 50 1 108 1 58 1 86 4 88 1 189 2 293 1 67 1 68 1 101 1 
345 1 94 2 50 1 273 3 323 2 1 1 298 1 145 1 28 4 258 1 54 1 78 1 102 2 195 2 81 1 310 3 170 1 332 2 86 3 88 1 61 3 363 1 66 1 370 1 118 1 17 1 
345 1 94 4 50 1 273 4 347 1 323 3 1 2 298 1 145 2 28 7 258 2 54 1 78 1 102 4 195 3 81 2 332 4 310 4 170 2 243 1 86 4 336 1 88 1 61 5 363 1 66 1 370 2 118 2 17 1 
198 1 
121 1 161 1 288 1 
121 1 337 1 
56 1 121 1 361 1 
89 1 121 1 
121 1 288 1 
80 1 121 3 223 1 161 1 361 2 288 1 
19 1 46 1 92 4 150 1 37 2 207 1 134 1 287 1 335 1 145 1 234 3 289 1 214 2 16 1 155 1 202 1 351 3 
19 2 46 2 20 1 21 4 92 28 48 1 272 1 207 1 124 1 348 3 145 4 234 10 256 1 258 3 214 3 303 1 351 15 239 1 35 1 150 13 81 3 170 3 37 5 134 2 109 1 287 2 335 1 312 1 42 1 289 1 16 1 202 5 371 2 118 3 
46 1 19 1 92 6 48 2 124 2 145 1 234 4 214 2 351 4 35 2 150 2 37 3 134 1 287 1 335 1 42 2 312 1 289 1 366 1 16 1 202 1 65 1 371 4 
19 1 46 1 92 4 150 1 37 2 207 1 134 1 287 1 335 1 145 1 234 3 289 1 214 2 16 1 202 1 351 3 
19 1 46 1 92 4 150 1 37 2 207 1 134 1 287 1 335 1 145 1 234 3 289 1 214 2 16 1 202 1 351 3 
70 1 252 1 121 1 286 2 95 1 220 1 59 1 209 1 87 1 275 1 288 1 174 1 136 1 138 2 4 1 315 1 97 1 77 2 8 2 367 1 45 1 100 1 354 1 
70 1 252 1 95 1 8 1 77 1 305 1 354 1 130 1 165 1 149 1 286 1 220 1 87 1 245 1 221 2 60 1 174 1 136 1 137 1 138 1 249 1 225 1 64 1 367 1 157 1 344 1 
206 1 70 1 252 1 95 1 277 1 8 1 77 1 305 1 354 1 130 1 165 1 149 1 286 1 220 2 87 1 245 1 221 2 60 1 174 2 136 1 362 1 137 1 138 1 249 1 225 1 367 1 44 1 157 1 344 1 
206 1 70 1 252 1 95 1 97 1 8 1 77 1 305 1 354 1 130 1 308 1 165 1 149 1 286 1 220 3 87 1 60 1 221 2 174 3 136 1 362 2 137 1 138 1 249 1 64 1 367 1 44 1 157 1 344 1 
206 1 130 1 165 1 308 1 252 1 149 1 286 1 220 2 87 1 60 1 221 2 174 2 136 1 137 1 362 2 138 1 249 1 64 1 8 1 77 1 367 1 44 1 354 1 344 1 
224 1 
184 1 320 1 94 2 49 1 50 2 273 2 51 1 144 1 327 1 233 1 4 1 189 2 54 1 329 1 241 1 103 1 10 1 59 2 111 1 112 1 288 1 61 2 293 1 116 1 338 1 345 1 252 2 121 1 123 1 298 1 261 2 219 1 354 1 310 3 358 1 86 3 87 2 136 1 175 1 222 1 363 1 180 1 367 2 45 1 229 1 
184 1 49 1 50 2 273 2 123 1 51 1 327 1 233 1 127 1 189 2 261 2 103 1 107 1 310 3 358 1 86 3 111 1 112 1 175 1 222 1 293 1 338 1 180 1 229 1 
103 1 184 1 310 2 49 1 273 2 50 2 358 1 123 1 86 2 51 1 111 1 112 1 233 1 327 1 222 1 175 1 180 1 338 1 284 1 261 3 229 1 
184 1 49 1 50 3 273 3 123 1 51 1 327 1 233 1 127 1 189 2 284 1 261 3 103 1 107 1 310 3 358 1 86 3 111 1 359 1 112 1 175 1 222 1 293 1 338 1 180 1 229 1 
295 1 345 1 184 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 2 1 127 2 189 3 54 1 261 2 241 1 103 1 107 1 310 3 358 1 263 1 86 3 359 2 111 1 112 1 61 1 175 1 222 1 363 1 290 1 116 1 338 1 293 1 180 1 341 1 229 1 
345 1 184 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 54 1 261 2 241 1 103 1 310 2 358 1 86 2 111 1 112 1 61 1 222 1 175 1 363 1 116 1 338 1 180 1 229 1 
295 1 184 1 345 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 2 1 54 1 261 2 241 1 103 1 310 2 358 1 86 2 111 1 112 1 61 1 175 1 222 1 363 1 290 1 338 1 180 1 116 1 229 1 
295 1 184 1 345 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 2 1 54 1 261 2 241 1 103 1 310 2 358 1 86 2 111 1 112 1 61 1 175 1 222 1 363 1 290 1 338 1 180 1 116 1 229 1 
295 1 184 1 345 1 94 1 49 1 50 2 273 2 123 1 51 1 327 1 233 1 74 1 54 1 261 2 241 1 103 1 262 1 310 2 196 1 358 1 86 2 111 1 112 1 61 1 175 1 222 1 363 1 338 1 180 1 116 1 229 1 
295 1 345 1 184 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 2 1 127 1 189 1 54 1 284 1 261 3 241 1 103 1 310 2 358 1 86 2 111 1 359 1 112 1 61 1 175 1 222 1 363 1 290 1 116 1 338 1 180 1 229 1 341 1 
295 1 345 1 184 1 94 1 49 1 50 2 273 2 123 1 51 1 144 1 327 1 233 1 2 1 127 1 189 1 54 1 284 1 261 3 241 1 103 1 310 2 358 1 86 2 111 1 359 1 112 1 61 1 175 1 222 1 363 1 290 1 116 1 338 1 180 1 229 1 341 1 
345 1 184 1 94 1 49 1 50 2 273 2 123 1 51 1 327 1 233 1 54 1 261 2 241 1 103 1 262 1 310 2 358 1 86 2 111 1 112 1 61 1 222 1 175 1 363 1 116 1 338 1 180 1 229 1 
184 1 271 1 92 2 48 2 139 1 51 1 325 1 235 1 277 1 236 1 4 1 237 1 193 2 150 1 59 2 112 1 288 3 199 1 250 1 252 7 121 4 160 1 161 1 124 2 213 1 351 1 304 2 354 3 35 2 309 1 169 1 135 1 87 7 136 4 42 2 314 1 364 1 177 1 90 2 367 6 45 1 227 1 371 4 
184 1 92 3 48 1 124 1 51 1 234 1 145 1 211 1 236 1 258 1 259 1 351 1 146 1 304 1 35 1 81 1 150 2 170 1 37 1 13 1 265 1 112 1 199 1 42 1 268 1 90 1 371 2 230 1 118 1 
19 1 271 1 56 1 92 3 35 1 150 1 48 1 37 2 265 1 124 1 287 1 335 1 145 1 234 2 211 1 42 1 289 1 214 1 259 1 114 1 16 1 90 1 351 2 304 1 371 2 
42 1 35 1 268 1 48 1 90 1 217 1 124 1 304 1 371 2 
183 1 184 2 252 1 71 1 92 2 48 1 93 1 121 1 161 1 160 1 51 2 324 1 124 1 301 1 236 1 351 1 304 1 354 1 35 1 150 1 355 1 59 1 265 1 87 1 112 1 288 1 136 1 199 1 42 1 268 1 314 1 177 1 114 1 115 1 316 1 367 1 90 1 371 2 
184 2 92 18 48 2 324 1 51 2 234 5 145 4 276 1 236 1 240 2 57 1 150 9 244 1 59 1 287 1 111 1 335 1 112 1 288 1 199 1 153 2 289 1 16 1 115 1 202 1 343 1 118 2 19 1 252 1 121 1 161 1 124 2 211 6 301 1 258 3 349 1 259 6 351 9 304 2 218 1 354 1 35 2 81 2 357 1 170 2 37 4 265 6 87 1 136 1 42 2 268 1 314 1 177 1 316 1 367 1 90 2 371 4 
271 1 92 2 35 1 48 1 81 1 265 1 124 1 234 1 145 1 211 1 42 1 247 1 259 1 202 1 90 1 351 2 304 1 371 2 
271 1 92 2 35 1 48 1 73 1 150 2 37 1 265 1 124 1 234 1 211 1 42 1 258 1 259 1 90 1 304 1 371 2 118 1 
271 1 92 4 48 1 124 1 145 1 234 2 211 2 258 1 259 2 351 2 304 1 35 1 81 1 150 2 170 1 37 1 265 2 42 1 202 1 90 1 371 2 118 1 
92 2 35 1 48 1 81 1 265 1 124 1 234 1 145 1 211 1 42 1 247 1 259 1 202 1 90 1 227 1 351 2 304 1 371 2 
92 2 35 1 48 1 73 1 150 2 37 1 265 1 124 1 234 1 211 1 42 1 258 1 259 1 90 1 227 1 304 1 371 2 118 1 
92 4 48 1 124 1 145 1 234 2 211 2 258 1 259 2 351 2 304 1 35 1 81 1 150 2 170 1 37 1 265 2 42 1 202 1 90 1 227 1 371 2 118 1 
35 1 92 4 150 2 48 1 81 1 170 1 37 1 265 2 124 1 234 2 145 1 211 2 42 1 258 1 259 2 202 1 90 1 351 2 304 1 118 1 371 2 
184 1 252 1 92 2 48 1 121 1 160 1 161 1 51 1 124 1 276 1 301 1 351 1 304 1 354 1 35 1 150 1 59 1 87 1 288 1 136 1 42 1 177 1 114 1 115 1 316 1 367 1 90 1 371 2 
184 1 252 1 92 2 48 1 121 1 160 1 161 1 51 1 124 1 282 1 351 1 304 1 354 1 35 1 150 1 84 1 38 1 59 1 87 1 288 1 136 1 42 1 177 1 114 1 316 1 367 1 90 1 371 2 
92 4 48 1 124 1 145 1 234 2 211 2 258 1 259 2 351 2 304 1 35 1 81 1 150 2 170 1 37 1 265 2 42 1 268 1 202 1 90 1 371 2 118 1 
184 1 252 1 92 4 48 1 121 1 161 1 51 1 124 1 234 2 145 1 211 2 276 1 277 1 301 1 258 1 259 2 351 2 304 1 354 1 35 1 150 2 81 1 170 1 37 1 265 2 87 1 288 1 136 1 42 1 115 1 202 1 316 1 367 1 90 1 118 1 343 1 371 2 
184 1 92 3 48 1 124 1 51 1 234 1 145 1 211 1 236 1 258 1 259 1 351 2 146 1 304 1 35 1 150 1 81 1 170 1 13 1 265 1 112 1 113 1 199 1 42 1 268 1 202 1 90 1 118 1 371 2 
21 2 92 19 48 2 272 1 124 2 348 1 145 3 234 6 3 1 256 1 258 3 5 1 351 9 105 1 11 2 35 2 150 10 81 3 12 1 170 3 37 3 172 2 173 1 15 1 42 2 366 1 202 3 340 1 371 4 118 3 
319 1 92 17 21 2 48 2 158 1 23 1 124 2 348 2 234 1 145 2 3 1 256 2 258 1 5 2 351 9 11 2 35 2 150 8 81 2 170 2 37 1 312 1 15 2 42 2 366 1 269 1 69 1 340 1 371 4 118 1 
319 1 21 4 92 30 48 3 272 1 158 1 23 1 124 3 299 1 348 3 145 4 234 4 3 1 256 3 258 3 5 2 351 15 105 1 11 3 35 3 150 15 81 4 170 4 37 2 172 1 173 1 312 1 15 1 42 3 269 1 366 1 202 2 69 1 340 1 371 6 118 3 
319 1 21 4 92 30 48 3 272 1 158 1 23 1 124 3 299 1 348 3 145 4 234 5 3 1 256 3 258 3 5 2 351 15 105 1 11 3 35 3 150 15 81 4 170 4 37 3 172 1 173 1 312 1 15 1 42 3 269 1 366 1 202 2 69 1 340 1 371 6 118 3 
19 1 319 1 21 4 92 38 48 1 272 2 158 1 23 1 124 1 348 4 145 7 234 10 3 1 256 2 279 2 258 5 214 1 5 1 351 21 11 2 35 1 150 17 81 6 170 6 37 6 287 1 335 1 15 1 42 1 289 1 16 1 269 1 366 1 202 4 69 1 340 1 371 2 118 5 
151 1 251 1 255 1 119 1 171 1 7 1 369 1 85 1 162 1 205 1 
283 1 110 1 
151 1 251 1 255 1 278 1 291 1 119 1 369 1 85 1 182 1 
166 1 154 1 
313 1 322 1 163 1 
251 1 119 1 310 1 254 1 273 1 0 1 274 1 85 1 162 1 86 1 151 1 126 2 255 1 7 1 369 1 79 1 194 1 205 1 
251 1 119 1 310 1 254 1 273 1 0 1 274 1 85 1 162 1 86 1 151 1 126 2 255 1 7 1 369 1 79 1 194 1 205 1 
251 1 119 1 310 1 254 1 273 1 0 1 274 1 85 1 162 1 86 1 151 1 126 2 255 1 7 1 369 1 79 1 194 1 205 1 
166 1 154 1 163 1 
166 1 154 1 163 1 
313 1 322 1 
313 1 322 1 163 1 
9 1 52 1 
184 2 251 1 119 1 254 1 141 1 208 1 51 2 52 1 126 1 255 1 236 2 280 1 128 1 283 1 9 1 194 1 195 1 310 1 85 1 86 1 110 1 112 2 151 1 199 2 114 1 369 1 370 1 
184 2 252 2 92 2 48 1 121 1 160 1 51 2 124 1 213 1 351 1 304 1 193 2 354 1 330 1 35 1 150 1 83 1 39 1 87 2 112 2 288 1 136 1 42 1 268 1 246 1 177 1 179 1 90 1 367 2 250 1 371 2 
252 1 121 1 286 1 59 1 209 1 87 1 288 1 136 1 4 1 201 1 191 1 367 1 45 1 354 1 
130 1 165 1 252 1 149 1 286 1 334 1 87 1 60 1 221 2 136 1 137 1 249 1 201 1 190 1 64 1 367 1 157 1 354 1 
130 1 165 1 252 2 149 1 286 1 334 1 87 2 60 1 221 2 136 1 277 1 137 1 249 1 201 1 190 1 64 1 367 2 157 1 354 1 
130 1 165 1 252 1 149 1 346 1 286 1 87 1 60 1 221 2 136 1 137 1 249 1 190 1 64 1 367 1 157 1 354 1 
53 1 
345 1 47 1 94 1 50 1 273 1 133 1 61 1 363 1 54 1 116 1 
148 1 81 2 170 2 332 5 94 5 273 5 323 5 14 2 145 2 61 5 28 10 258 2 102 5 118 2 240 1 
310 1 189 1 273 1 50 1 293 1 86 1 
345 2 252 4 320 1 231 1 121 1 94 2 298 2 4 1 189 4 54 2 78 1 329 1 354 1 219 2 167 1 356 1 310 3 59 2 87 4 86 3 288 1 136 1 61 2 363 2 365 2 116 1 293 2 367 4 45 1 
61 1 56 1 47 1 94 1 273 1 50 1 133 1 
345 1 94 1 273 2 50 1 323 1 144 1 28 1 189 1 54 1 216 1 310 1 86 1 61 1 363 1 63 1 116 1 293 1 
94 3 273 3 323 3 145 1 189 2 54 2 102 3 240 1 106 1 332 3 59 1 14 1 288 1 61 4 116 2 293 1 294 1 118 1 345 2 252 1 121 4 253 1 298 1 161 1 125 1 28 6 258 1 354 1 164 1 81 1 310 2 170 1 131 1 87 1 86 2 266 1 361 1 136 2 89 2 363 2 223 1 180 1 367 1 
345 2 319 1 21 1 158 1 23 1 94 3 273 4 50 1 323 3 348 1 145 1 28 6 256 1 258 1 189 1 54 2 102 4 81 1 310 1 332 4 170 1 14 1 86 1 61 5 363 2 62 1 269 1 293 1 116 2 69 1 118 1 
345 1 19 1 310 1 94 2 244 1 14 1 86 1 287 1 145 1 61 2 2 1 363 1 258 1 16 1 54 1 116 1 
184 3 252 1 92 1 48 1 122 1 121 1 188 1 161 1 124 1 51 3 276 1 236 2 301 1 304 1 354 1 35 1 150 1 13 2 59 1 87 1 112 2 288 1 199 2 136 1 42 1 177 1 114 1 115 1 316 1 367 1 90 1 371 2 
345 1 332 2 94 2 50 2 273 4 323 2 298 1 61 1 28 4 363 1 214 1 54 1 116 1 102 2 219 1 
251 1 119 1 162 1 9 1 18 1 
27 1 251 1 119 1 
27 1 251 1 119 1 
27 1 251 1 119 1 
251 1 119 1 317 1 
251 1 119 1 317 1 
251 1 119 1 317 1 
251 1 119 1 
255 1 369 1 
19 1 35 1 92 7 48 1 150 3 37 2 244 1 124 1 287 1 234 4 145 2 42 1 258 1 366 1 16 1 202 2 351 4 371 2 
35 1 92 2 48 1 81 1 124 1 145 1 234 1 42 1 366 1 202 1 351 2 371 2 
35 1 92 4 150 2 48 1 81 1 170 1 37 1 124 1 234 2 145 1 42 1 258 1 366 1 202 1 351 2 118 1 371 2 
19 1 105 1 92 3 35 3 150 2 48 3 37 1 197 1 124 3 287 1 234 2 312 1 42 3 366 1 202 1 351 1 371 6 
19 2 20 1 21 4 92 28 48 5 272 1 124 5 348 3 145 5 234 11 256 1 258 3 214 1 303 1 351 14 239 1 105 1 331 1 35 5 150 14 81 3 170 3 37 6 197 1 287 2 335 1 312 2 42 5 289 1 16 2 366 1 202 5 371 10 118 3 
19 1 92 5 35 2 150 2 48 2 37 2 124 2 287 1 335 1 145 1 234 3 42 2 312 1 289 1 214 1 16 1 202 1 351 3 371 4 
56 1 19 1 92 3 150 1 37 2 287 1 335 1 234 2 145 1 289 1 214 1 16 1 351 2 
331 1 35 1 92 4 150 2 48 1 81 1 170 1 37 1 124 1 234 2 145 1 42 1 258 1 202 1 351 2 118 1 371 2 
21 2 92 7 150 4 272 1 81 1 170 1 37 1 348 1 145 1 234 2 256 1 258 1 202 1 351 3 118 1 
19 2 92 20 21 2 272 1 48 2 185 1 124 2 348 2 234 9 145 3 258 2 279 1 214 1 351 10 35 2 81 2 150 10 170 2 37 5 197 1 287 2 335 1 312 2 42 2 289 1 16 1 202 4 118 2 371 4 
92 1 21 1 150 1 
92 1 351 1 348 1 
35 1 331 1 92 6 48 1 150 3 81 1 170 1 37 1 124 1 145 1 234 2 42 1 258 1 202 1 351 3 371 2 118 1 240 1 
319 1 35 1 21 1 92 10 81 2 48 1 150 4 158 1 170 2 23 1 37 1 124 1 348 1 234 1 145 2 42 1 256 1 258 1 269 1 366 1 69 1 351 6 118 1 371 2 
92 1 16 1 351 1 145 1 
19 1 92 3 35 1 150 2 48 1 37 1 197 1 287 1 124 1 335 1 234 2 312 1 42 1 289 1 202 1 351 1 371 2 
19 1 92 5 21 1 48 1 158 1 124 1 348 1 145 1 234 2 256 1 214 1 351 3 35 1 150 2 37 2 287 1 335 1 42 1 289 1 366 1 16 1 371 2 
19 1 92 8 21 2 48 2 272 1 158 1 124 2 348 1 145 2 234 3 256 1 214 1 351 5 35 2 331 1 150 3 81 1 170 1 37 2 287 1 335 1 42 2 289 1 16 1 366 1 202 1 371 4 
92 11 21 1 319 1 48 2 158 1 23 1 124 2 348 1 145 2 234 1 256 1 258 1 351 6 35 2 150 5 81 2 170 2 37 1 42 2 312 1 366 1 269 1 69 1 371 4 118 1 
319 1 35 1 21 1 92 10 81 2 48 1 150 4 158 1 170 2 23 1 37 1 124 1 348 1 234 1 145 2 42 1 256 1 258 1 269 1 366 1 69 1 351 6 118 1 371 2 
19 1 92 5 21 1 48 1 158 1 124 1 348 1 145 1 234 2 256 1 214 1 351 3 35 1 150 2 37 2 287 1 335 1 42 1 289 1 366 1 16 1 371 2 
319 1 35 1 21 1 92 10 81 2 48 1 150 4 158 1 170 2 23 1 37 1 124 1 348 1 234 1 145 2 42 1 256 1 258 1 269 1 366 1 69 1 351 6 118 1 371 2 
319 1 92 11 21 1 48 3 158 1 23 1 124 3 348 1 145 2 234 1 256 1 258 1 351 6 331 1 35 3 150 5 81 2 170 2 37 1 42 3 312 1 366 1 269 1 69 1 371 6 118 1 
319 1 92 11 21 1 48 3 158 1 23 1 124 3 348 1 145 2 234 2 256 1 258 1 351 6 105 1 35 3 150 5 81 2 170 2 37 2 42 3 312 1 366 1 269 1 69 1 371 6 118 1 
19 2 92 7 150 2 37 4 244 1 287 2 335 1 234 7 145 3 289 1 258 1 214 1 16 2 202 3 351 5 
319 1 92 11 21 1 48 3 158 1 23 1 124 3 348 1 145 2 234 1 256 1 258 1 351 6 105 1 35 3 150 5 81 2 170 2 37 1 42 3 312 1 366 1 269 1 69 1 371 6 118 1 
184 1 152 1 114 1 338 1 51 1 360 1 112 1 
184 1 40 1 51 1 360 1 112 1 41 1 176 1 152 1 114 1 30 1 338 1 203 1 
252 4 121 1 59 1 87 4 288 1 136 1 277 1 4 1 302 1 215 1 367 4 45 1 354 1 
252 2 139 1 121 1 161 1 87 2 325 1 288 1 235 1 136 2 365 1 248 1 237 1 367 2 354 1 
136 1 130 1 165 1 252 1 149 1 367 1 59 1 87 1 221 1 354 1 
136 1 252 2 277 1 121 1 64 1 367 2 250 1 39 1 87 2 354 1 288 1 
252 5 309 1 121 3 59 1 87 5 288 2 136 2 277 1 365 1 4 1 364 1 302 1 367 4 45 1 250 1 354 2 
252 5 121 3 59 1 87 5 288 2 136 2 277 1 365 1 4 1 364 1 302 1 367 4 368 1 45 1 250 1 354 2 
184 2 252 1 121 1 84 1 59 1 161 1 51 2 87 1 112 1 288 1 136 1 199 1 314 1 236 1 114 1 316 1 367 1 354 1 
252 1 121 1 161 1 87 1 96 1 325 1 288 1 136 2 365 1 223 1 237 1 367 1 354 1 
136 1 56 1 252 1 4 1 121 1 367 1 59 1 45 1 87 1 354 1 288 1 
184 2 252 1 121 1 59 1 161 1 51 2 87 1 112 1 288 1 136 1 199 1 314 1 236 1 301 1 114 1 316 1 367 1 354 1 
184 2 252 1 121 3 161 2 51 2 233 1 301 1 236 1 218 1 354 1 36 1 87 1 111 2 112 2 288 2 199 2 136 1 175 1 314 1 365 1 114 1 316 1 337 1 367 1 
184 2 252 1 121 3 161 2 51 2 233 1 236 1 218 1 354 1 36 1 84 1 87 1 111 2 112 2 288 2 199 2 136 1 175 1 314 1 365 1 114 1 316 1 337 1 367 1 
252 1 122 1 120 1 121 4 50 1 273 1 143 1 159 1 161 1 236 1 189 1 55 1 354 1 310 2 13 1 36 1 87 1 86 2 361 1 288 1 136 1 89 1 365 1 337 1 180 1 367 1 
252 1 122 1 120 1 121 4 50 1 273 1 143 1 161 1 125 1 236 1 189 1 354 1 310 2 13 1 36 1 87 1 86 2 361 1 288 1 136 1 89 1 365 1 337 1 180 1 367 1 
136 1 252 1 367 1 135 1 87 1 354 1 
252 6 309 1 169 1 121 3 59 2 135 1 161 1 87 6 96 1 325 1 288 2 136 3 277 1 364 1 223 1 237 1 367 5 250 1 193 1 354 2 
19 1 184 2 252 1 92 3 48 2 121 1 161 1 51 2 124 2 145 1 234 2 211 1 277 1 276 1 236 1 301 1 214 1 259 1 351 2 304 2 354 1 35 2 57 1 150 1 37 2 265 1 287 1 87 1 335 1 112 1 288 1 136 1 199 1 42 2 268 1 289 1 314 1 179 1 114 1 16 1 115 1 316 1 90 2 367 1 371 4 343 1 
19 1 345 2 252 1 47 1 122 1 120 1 121 2 94 2 273 1 50 1 143 1 125 1 145 1 236 1 258 1 189 2 54 2 195 1 106 1 356 1 310 3 13 1 131 1 244 1 133 1 14 2 59 1 287 1 86 3 87 1 266 1 361 1 61 2 89 1 363 2 16 1 116 2 180 1 293 1 367 1 
252 2 121 2 135 1 161 1 87 2 361 1 288 1 136 2 277 1 223 1 367 2 294 1 354 1 
72 1 140 1 114 1 350 1 33 1 
72 1 122 1 140 1 120 1 49 1 50 1 273 1 143 1 232 1 233 1 236 1 6 1 31 1 350 1 33 1 195 1 310 2 13 1 285 1 86 2 111 1 175 1 180 1 
184 1 330 1 246 1 140 1 83 1 33 1 350 1 51 1 112 1 
6 1 33 1 232 1 
206 1 70 1 95 1 225 1 220 1 44 1 174 1 
206 2 70 1 242 1 142 1 95 1 264 1 220 4 174 4 267 1 362 2 76 1 212 1 270 1 44 2 
206 1 70 1 95 1 220 2 174 2 328 1 362 1 257 1 225 1 44 1 260 1 
70 1 206 1 242 2 142 1 95 1 220 3 174 3 311 1 76 2 225 1 44 1 
26 2 212 2 333 1 228 1 
70 1 95 1 225 1 220 1 91 1 174 1 
206 1 70 1 362 1 95 1 225 1 220 2 44 1 300 1 174 2 
321 1 
206 1 70 1 95 1 225 1 220 1 44 1 174 1 
206 1 56 1 44 1 
206 1 70 1 95 1 220 1 44 1 174 1 
138 1 77 1 220 1 
206 1 70 1 242 1 76 2 142 1 95 1 225 1 220 3 44 1 192 1 174 3 
206 1 70 1 362 1 95 1 297 1 220 2 44 1 174 2 
70 1 130 1 249 1 212 1 43 1 95 1 225 1 264 1 220 1 221 1 174 1 
206 1 70 1 95 1 225 1 220 1 174 1 
206 1 70 1 212 1 95 1 225 1 220 1 44 1 174 1 
206 1 70 2 95 2 186 1 220 2 174 2 225 1 32 1 147 1 
206 1 70 1 95 1 264 1 220 3 174 3 300 1 267 1 362 2 212 1 225 1 44 1 306 1 
206 1 70 1 165 1 130 1 22 1 95 1 220 2 221 2 60 1 174 2 362 1 249 1 225 1 44 1 
206 1 70 2 95 2 297 1 264 1 220 4 174 4 267 1 362 2 212 1 225 1 98 1 44 1 
206 1 70 1 362 1 76 1 95 1 225 1 220 3 44 1 300 1 174 3 
267 1 212 1 270 1 264 1 
206 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 59 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (142,232) (52,195) (52,195) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 114 267 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 125 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (142,232) (142,232) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (142,232) (52,195) (52,195) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (142,232) (52,195) (52,195) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (142,232) (52,195) (52,195) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 63 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 63 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 114 267 213 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 63 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 83 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 3 50 1 2 1 301 1 159 2 337 2 137 1 80 1 29 2 13 1 264 1 24 1 102 3 
84 9 2 1 20 1 149 1 41 1 9 2 91 1 24 2 332 1 50 6 333 2 301 4 159 2 337 5 137 1 76 1 80 1 28 2 29 2 13 1 263 1 264 3 145 1 265 2 100 1 367 1 241 1 102 9 
84 9 2 1 20 1 149 1 41 1 9 2 91 1 24 2 332 1 50 6 333 2 301 4 159 2 337 5 137 1 76 1 80 1 28 2 29 2 13 1 263 1 264 3 145 1 265 2 100 1 367 1 241 1 102 9 
84 10 2 1 20 1 149 1 41 1 9 2 91 1 24 2 332 1 50 7 333 2 301 5 159 2 337 6 137 1 76 1 80 1 28 2 29 2 13 1 263 1 264 4 145 1 265 2 100 1 367 1 241 1 102 10 
84 7 2 1 20 1 149 1 9 2 91 1 24 2 332 1 50 4 333 2 301 3 159 2 337 4 137 1 76 1 80 1 28 2 29 2 13 1 263 1 264 2 145 1 265 1 100 1 367 1 241 1 102 7 
84 4 50 3 2 1 333 1 301 2 159 1 337 3 41 1 80 1 28 1 29 1 13 1 264 1 145 1 9 1 265 2 241 1 102 4 
84 2 2 1 333 1 159 1 337 1 80 1 29 1 13 1 263 1 284 1 9 1 133 1 156 1 332 1 24 1 102 2 
84 9 2 1 20 1 41 1 23 1 9 1 24 1 71 1 50 7 301 4 333 1 159 2 337 5 137 1 80 1 28 1 29 2 13 1 264 3 145 1 265 2 100 1 241 1 102 9 
84 9 2 1 20 1 41 1 23 1 9 1 24 1 71 1 50 7 301 4 333 1 159 2 337 5 137 1 80 1 28 1 29 2 13 1 264 3 145 1 265 2 100 1 241 1 102 9 
158 1 166 1 304 1 117 1 179 1 321 1 62 1 152 1 351 1 252 1 130 1 33 1 238 1 201 1 
37 1 
287 1 158 1 338 1 311 1 238 2 179 2 210 1 37 1 
188 2 287 2 314 1 218 5 3 1 166 1 19 4 344 1 107 2 321 1 62 1 151 1 152 1 351 1 252 1 130 1 111 1 201 1 51 1 158 2 334 2 304 1 117 1 208 2 179 5 210 1 308 2 212 1 338 2 30 1 237 1 184 2 33 1 215 1 238 5 36 1 217 1 37 2 
287 1 155 1 37 1 
181 1 112 2 37 1 
351 1 252 2 166 2 130 2 26 1 304 2 117 2 152 2 
286 2 242 1 0 1 166 2 221 1 38 1 167 1 5 1 249 1 152 2 351 1 252 2 130 2 198 1 199 1 255 1 169 1 47 1 300 1 172 2 173 1 204 1 302 1 26 1 336 1 304 3 117 3 178 1 11 2 307 1 283 2 165 1 183 1 309 1 99 1 266 2 269 1 
351 1 252 1 166 1 130 1 304 1 117 1 33 1 62 1 201 1 152 1 
287 1 104 1 166 1 304 2 117 2 176 1 321 1 88 1 62 2 152 1 351 1 252 2 235 1 130 1 33 1 201 1 124 1 37 1 
287 1 104 1 166 2 304 2 117 2 176 1 321 1 179 1 62 2 152 2 351 1 252 2 130 2 33 1 238 1 201 1 124 1 37 1 
1 1 158 1 338 1 238 1 179 1 
287 1 328 1 158 1 338 1 238 2 179 2 210 1 37 1 
338 1 238 1 179 1 
189 1 73 1 166 1 304 2 26 2 117 2 152 1 252 2 130 1 
163 1 277 1 330 1 
0 1 173 1 245 1 302 1 26 1 304 1 336 1 221 1 117 1 11 1 307 1 283 1 198 1 169 1 99 1 266 1 
26 1 155 1 
243 1 0 1 173 1 302 1 166 1 336 1 304 2 221 1 117 2 11 1 27 1 152 1 307 1 252 1 163 1 283 1 198 1 169 1 99 1 266 1 
243 1 252 3 130 1 166 3 26 1 304 3 117 3 152 3 
252 1 166 1 304 1 117 1 33 1 62 1 152 1 
252 1 189 1 73 1 166 1 130 1 304 1 117 1 62 1 152 1 
243 1 104 1 73 1 166 2 304 2 176 1 117 2 62 1 27 1 152 2 252 2 130 1 236 1 239 1 124 1 
243 1 252 2 166 1 26 1 304 2 254 1 117 2 88 1 152 1 
243 1 104 1 166 1 304 1 117 1 176 1 62 1 27 1 152 1 252 1 236 1 124 1 59 1 
243 1 73 1 277 1 166 2 304 2 117 2 152 2 252 2 163 1 130 1 
0 1 173 1 302 1 26 1 304 1 336 1 221 1 117 1 11 1 307 1 283 1 198 1 169 1 99 1 266 1 
0 1 173 1 26 1 304 1 336 1 221 1 117 1 11 1 40 1 307 1 283 1 110 1 198 1 99 1 266 1 
188 1 286 2 242 1 191 1 167 1 5 1 129 1 347 1 45 1 154 1 47 1 330 2 49 1 92 1 172 4 277 2 208 1 139 1 178 2 163 2 165 1 183 1 143 1 309 2 
252 1 166 1 304 1 117 1 62 1 124 1 342 1 152 1 
243 2 73 1 166 4 304 5 26 1 117 5 79 1 88 1 27 1 152 4 252 5 130 1 254 1 135 1 
252 2 166 2 304 2 117 2 33 1 342 1 62 1 152 2 
331 1 
77 1 331 1 
331 1 
331 1 
77 1 
77 1 
77 1 
331 1 
331 1 
331 1 
331 1 
331 1 
331 1 
174 2 52 1 232 1 345 2 179 2 325 2 195 1 144 2 256 2 238 2 147 1 331 2 37 1 313 1 60 1 
114 1 174 1 166 1 304 1 231 1 117 1 345 1 179 1 325 1 152 1 252 1 144 1 119 1 256 1 153 1 238 1 267 1 147 1 331 1 
284 1 9 2 146 2 193 1 28 1 
333 1 9 1 28 1 
333 1 284 1 9 1 
284 1 9 3 146 1 193 1 28 2 162 1 
161 1 284 1 9 2 146 1 193 1 28 1 
188 1 287 1 218 2 19 3 107 1 347 1 298 1 153 1 69 1 170 1 157 2 112 3 92 1 158 4 10 2 260 1 334 1 303 2 355 1 231 1 208 1 95 1 179 5 210 1 308 1 181 1 338 1 119 1 31 1 238 5 36 1 37 2 
188 3 1 5 287 1 218 6 291 1 19 8 107 2 347 3 67 5 153 4 46 1 157 6 112 9 92 3 158 7 260 1 334 2 303 6 355 2 94 1 208 3 95 2 138 1 179 9 210 1 308 2 181 3 338 6 31 3 215 1 238 9 122 1 58 1 36 1 37 5 
287 1 188 1 218 2 19 3 107 1 347 1 298 1 153 1 69 1 157 2 112 4 92 1 158 2 10 1 334 1 355 1 303 2 208 1 95 1 179 3 308 1 181 2 31 1 238 3 215 1 37 3 
287 1 188 2 218 4 291 1 19 5 107 1 347 2 298 1 153 2 69 1 157 4 112 7 92 2 10 2 158 3 334 1 303 4 355 1 94 1 208 2 95 1 179 4 308 1 181 3 31 2 238 4 215 1 122 1 37 4 
68 1 
173 1 292 1 155 1 
173 1 168 1 
173 1 221 1 
173 3 275 1 336 1 221 1 57 1 292 2 
173 1 336 1 221 1 
173 1 7 1 
188 1 51 1 172 7 160 1 17 1 148 1 208 1 39 1 294 1 178 3 129 3 180 2 30 1 309 4 240 1 49 2 227 1 217 1 
286 2 343 3 188 4 219 1 17 1 148 1 294 2 248 1 5 1 322 1 129 10 347 3 109 1 47 1 49 5 227 2 353 4 51 1 172 31 92 3 160 5 208 4 178 15 180 3 306 1 30 2 165 1 183 1 309 16 31 3 240 1 368 1 187 1 217 2 
286 2 172 1 165 1 183 1 309 1 294 1 47 1 5 1 180 1 125 1 227 1 250 1 
188 1 51 1 172 7 160 1 17 1 148 1 208 1 294 1 178 3 129 3 180 2 30 1 309 4 240 1 49 2 227 1 217 1 
188 1 51 1 172 7 160 1 17 1 148 1 208 1 294 1 178 3 129 3 180 2 30 1 309 4 240 1 49 2 227 1 217 1 
84 1 0 1 173 1 159 1 190 1 261 1 221 1 116 1 192 2 150 1 11 1 307 1 12 1 272 1 29 1 225 2 283 1 198 1 285 1 266 1 24 2 113 2 102 1 
84 1 333 1 159 1 192 1 209 1 11 1 80 1 28 1 362 1 162 1 307 1 280 1 350 1 281 1 29 1 225 1 283 1 198 1 284 1 120 1 9 2 364 1 266 1 24 1 113 1 102 1 
84 2 2 1 246 1 192 1 350 1 225 1 198 1 9 2 113 1 24 1 50 1 333 1 159 1 337 1 209 1 11 1 80 1 28 1 362 1 280 1 307 1 162 1 281 1 29 1 13 1 283 1 120 1 284 1 266 1 102 2 
84 3 2 1 190 1 192 1 350 1 225 1 42 1 198 1 9 2 113 1 24 1 50 2 333 1 159 1 337 1 209 1 11 1 28 1 362 1 162 1 307 1 281 1 29 1 13 1 283 1 120 1 284 1 364 1 266 1 102 3 
84 2 2 1 192 1 225 1 42 1 198 1 9 2 24 1 113 1 50 2 333 1 337 1 209 1 11 1 28 1 362 1 307 1 162 1 13 1 283 1 120 1 284 1 364 1 266 1 102 2 
349 1 
0 2 218 2 85 1 221 1 323 2 88 1 90 1 274 1 43 1 132 1 173 1 276 1 334 1 176 1 179 4 11 2 181 2 12 1 338 6 235 1 282 2 283 2 285 1 238 4 104 1 289 2 19 2 106 1 107 1 295 2 62 1 252 1 198 1 257 2 202 1 112 2 259 2 354 1 355 1 304 1 117 1 356 1 118 2 361 2 210 3 308 1 307 1 32 1 266 2 365 1 124 1 36 1 37 1 
104 1 85 1 304 1 176 1 117 1 323 1 179 2 88 1 62 1 210 1 90 1 252 1 338 2 235 1 43 1 32 1 311 1 238 2 365 1 124 1 
104 1 85 1 304 1 176 1 117 1 179 1 88 1 361 1 62 1 90 1 252 1 235 1 43 1 257 1 32 1 238 1 365 1 124 1 
104 1 85 1 289 1 88 1 323 1 62 1 90 1 252 1 43 1 257 1 304 1 117 1 176 1 179 2 361 1 210 1 235 1 338 2 32 1 311 1 238 2 365 1 124 1 
218 1 166 1 85 1 321 1 323 3 88 1 90 1 130 1 43 1 132 1 334 1 176 1 179 3 96 1 181 1 338 5 235 1 282 1 16 1 238 3 186 1 287 1 104 1 18 1 289 3 19 1 107 1 295 1 62 2 152 1 351 1 252 2 297 1 257 1 201 1 259 1 354 1 304 2 117 2 118 1 361 1 210 2 308 1 32 1 33 1 311 1 365 1 124 1 36 1 37 1 
287 1 104 1 218 1 289 2 85 1 19 1 107 1 323 2 295 2 88 1 62 1 90 1 252 1 43 1 257 2 132 1 112 2 259 2 354 1 334 1 304 1 117 1 176 1 356 1 118 2 179 3 361 2 210 2 308 1 181 2 338 4 235 1 282 2 32 1 238 3 365 1 124 1 36 1 37 2 
287 1 218 1 104 1 289 2 85 1 19 1 107 1 323 2 295 2 88 1 62 1 90 1 252 1 297 1 43 1 257 2 132 1 259 2 354 1 334 1 304 1 117 1 176 1 118 2 179 3 361 2 210 2 96 1 308 1 181 2 338 4 235 1 282 2 16 1 32 1 238 3 365 1 124 1 36 1 37 1 
287 1 218 1 104 1 289 2 85 1 19 1 107 1 323 2 295 2 88 1 62 1 90 1 252 1 297 1 43 1 257 2 132 1 259 2 354 1 334 1 304 1 117 1 176 1 118 2 179 3 361 2 210 2 96 1 308 1 181 2 338 4 235 1 282 2 16 1 32 1 238 3 365 1 124 1 36 1 37 1 
287 1 218 1 104 1 289 2 85 1 19 1 107 1 293 1 323 2 88 1 62 1 90 1 252 1 43 1 257 2 329 2 132 1 112 2 259 2 334 1 304 1 117 1 176 1 118 2 179 3 361 2 210 2 308 1 338 4 235 1 141 1 16 1 32 1 340 1 341 2 238 3 365 1 124 1 36 1 37 1 
287 1 218 1 104 1 85 1 289 3 19 1 107 1 295 2 88 1 323 3 62 1 90 1 252 1 297 1 43 1 257 3 132 1 259 2 354 1 334 1 304 1 117 1 176 1 118 2 179 3 361 3 210 2 308 1 96 1 181 2 235 1 338 5 282 2 16 1 32 1 238 3 365 1 124 1 186 1 36 1 37 1 
287 1 218 1 104 1 85 1 289 3 19 1 107 1 295 2 88 1 323 3 62 1 90 1 252 1 297 1 43 1 257 3 132 1 259 2 354 1 334 1 304 1 117 1 176 1 118 2 179 3 361 3 210 2 308 1 96 1 181 2 235 1 338 5 282 2 16 1 32 1 238 3 365 1 124 1 186 1 36 1 37 1 
287 1 104 1 218 1 289 2 85 1 19 1 107 1 323 2 88 1 62 1 90 1 252 1 43 1 257 2 329 2 132 1 112 2 259 2 334 1 304 1 117 1 176 1 356 1 118 2 179 3 361 2 210 2 308 1 338 4 235 1 32 1 340 1 341 2 238 3 365 1 124 1 36 1 37 1 
243 1 0 2 286 4 242 2 166 1 220 1 221 2 167 2 246 1 5 2 152 1 249 1 296 1 252 1 198 2 47 2 48 1 172 2 173 3 204 2 304 1 117 1 278 1 177 1 139 1 11 7 178 1 54 1 262 1 307 2 12 1 283 8 165 2 183 2 309 1 364 1 266 8 285 1 269 1 
286 2 242 1 188 1 126 1 166 1 167 1 5 1 129 1 347 1 152 1 252 1 130 1 47 1 49 1 330 1 172 3 92 1 73 1 277 1 304 1 75 1 117 1 208 1 178 2 163 1 165 1 183 1 31 1 309 1 
286 2 242 1 188 1 17 1 148 1 167 1 5 1 129 2 155 1 47 1 49 2 330 1 51 1 172 6 277 1 26 2 208 1 139 1 178 3 180 1 163 1 30 1 165 1 183 1 309 3 217 1 
286 4 242 2 343 3 188 2 290 1 126 1 167 1 346 1 322 1 5 2 129 2 347 2 249 1 109 1 47 2 49 1 330 11 353 3 172 14 92 1 160 1 277 4 26 1 208 1 178 6 164 1 163 11 165 2 183 2 309 8 31 2 269 1 123 1 
0 1 242 1 243 1 286 2 245 1 126 1 166 1 221 1 167 1 5 1 152 1 249 1 251 1 252 1 198 1 169 1 47 1 172 2 173 1 302 1 277 1 26 1 336 1 304 2 117 2 11 1 178 1 27 1 307 1 283 1 183 1 165 1 309 1 99 1 98 1 266 1 269 1 35 1 
0 1 166 1 126 1 221 2 167 3 86 1 5 3 129 8 89 1 6 2 169 2 47 3 49 4 330 7 51 1 172 20 92 2 173 2 277 7 336 2 178 10 11 3 180 1 283 3 183 3 15 2 99 2 286 6 243 1 242 3 188 3 17 1 148 1 347 2 249 1 152 1 252 1 198 2 255 2 70 2 302 2 160 4 26 2 304 3 117 3 208 3 357 1 27 1 307 2 211 2 163 7 30 1 165 3 31 2 309 10 364 1 266 3 269 1 217 1 
172 2 242 1 286 2 188 1 160 1 277 1 167 1 139 1 5 1 129 1 347 1 163 1 183 1 165 1 143 1 309 2 47 1 330 1 
172 2 242 1 286 2 92 1 277 1 167 1 208 1 139 1 5 1 178 2 129 1 163 1 183 1 165 1 45 1 47 1 49 1 330 1 
188 1 286 2 242 1 167 1 5 1 129 2 347 1 47 1 330 2 49 1 172 4 92 1 160 1 277 2 208 1 139 1 178 2 163 2 165 1 183 1 309 2 31 1 
172 2 242 1 286 2 188 1 160 1 277 1 167 1 5 1 129 1 347 1 296 1 163 1 183 1 165 1 143 1 309 2 47 1 330 1 
172 2 242 1 286 2 92 1 277 1 167 1 208 1 5 1 178 2 129 1 296 1 163 1 183 1 165 1 45 1 47 1 49 1 330 1 
188 1 286 2 242 1 167 1 5 1 129 2 347 1 296 1 47 1 330 2 49 1 172 4 92 1 160 1 277 2 208 1 178 2 163 2 165 1 183 1 309 2 31 1 
92 1 242 1 286 2 188 1 172 4 160 1 277 2 167 1 208 1 178 2 5 1 129 2 347 1 163 2 183 1 165 1 31 1 309 2 47 1 49 1 330 2 
0 1 242 1 286 2 221 1 167 1 5 1 249 1 198 1 169 1 255 1 47 1 172 2 173 1 302 1 26 1 336 1 304 1 117 1 11 1 178 1 307 1 283 1 183 1 165 1 309 1 99 1 266 1 269 1 
0 1 242 1 286 2 221 1 167 1 40 1 5 1 249 1 198 1 110 1 47 1 172 2 173 1 26 1 336 1 304 1 117 1 11 1 178 1 307 1 279 1 283 1 183 1 165 1 309 1 99 1 266 1 269 1 
188 1 286 2 242 1 126 1 167 1 5 1 129 2 347 1 47 1 330 2 49 1 172 4 92 1 160 1 277 2 208 1 178 2 163 2 165 1 183 1 309 2 31 1 
188 1 242 1 286 2 221 1 167 1 246 1 5 1 129 2 347 1 198 1 169 1 255 1 70 1 47 1 49 1 330 2 92 1 172 4 173 1 160 1 302 1 277 2 336 1 304 1 117 1 208 1 178 2 11 1 307 1 163 2 283 1 183 1 165 1 309 2 31 1 99 1 266 1 
286 2 242 1 188 1 126 1 166 1 167 1 5 1 129 1 347 1 152 1 252 1 130 1 47 1 330 1 92 1 172 3 160 1 73 1 175 1 277 1 304 1 117 1 208 1 178 1 163 1 165 1 183 1 31 1 309 2 
286 4 343 1 188 3 105 1 322 1 5 2 129 6 347 3 250 1 108 1 109 1 47 2 49 3 171 1 353 2 172 19 92 3 160 3 136 1 208 3 78 2 359 1 178 10 81 1 165 2 183 2 309 9 31 3 312 1 34 2 
286 2 343 2 188 1 105 1 128 1 5 1 322 2 347 1 250 1 352 1 47 1 171 2 353 2 92 1 172 16 136 1 208 1 78 4 178 8 359 1 165 1 183 1 309 8 31 1 312 2 34 1 
286 4 343 3 188 2 128 1 105 1 322 3 5 2 129 3 347 2 250 1 108 1 109 1 352 1 47 2 49 1 171 2 353 4 172 23 92 2 160 2 205 1 136 1 208 2 78 4 359 1 178 12 165 2 183 2 309 11 31 2 312 1 34 1 
286 4 343 3 188 2 128 1 105 1 322 3 5 2 129 4 347 2 250 1 108 1 109 1 352 1 47 2 49 2 171 2 353 4 172 23 92 2 160 2 205 1 136 1 208 2 78 4 359 1 178 12 165 2 183 2 309 11 31 2 312 1 34 1 
286 2 343 4 188 8 17 3 148 3 128 1 105 1 346 2 322 2 5 1 129 13 347 5 250 1 109 2 352 1 47 1 49 8 171 1 353 4 51 3 172 51 92 5 160 5 136 1 208 8 78 4 359 1 178 24 180 3 30 3 165 1 183 1 309 27 31 5 312 1 34 1 217 3 
174 1 142 1 144 1 256 1 232 1 325 1 331 1 
114 1 
273 1 174 1 144 1 256 1 325 1 331 1 
174 1 52 1 232 1 345 2 179 1 325 1 195 1 144 1 256 1 238 1 147 1 331 1 37 1 313 1 60 1 
174 1 52 1 232 1 345 2 179 1 325 1 195 1 144 1 256 1 238 1 147 1 331 1 37 1 313 1 60 1 
174 1 52 1 232 1 345 2 179 1 325 1 195 1 144 1 256 1 238 1 147 1 331 1 37 1 313 1 60 1 
63 1 
63 1 
14 1 
14 1 
134 1 327 1 
158 1 114 1 174 1 231 1 345 1 179 1 325 1 144 1 119 1 256 1 153 1 213 1 238 1 267 1 331 1 313 1 60 1 
63 1 
14 1 
242 1 244 1 286 2 126 1 221 1 167 1 320 1 5 1 326 1 249 1 252 2 65 1 198 1 47 1 48 1 172 2 173 1 204 2 304 2 117 2 278 1 178 1 11 2 307 1 234 1 283 2 183 1 165 1 309 1 266 2 269 1 
0 1 173 1 25 1 221 1 116 1 192 1 11 1 307 1 271 1 12 1 283 1 198 1 266 1 285 1 
333 1 127 1 25 1 192 1 209 1 11 1 28 1 362 1 162 1 307 1 350 1 283 1 198 1 284 1 9 2 364 1 266 1 216 1 
333 1 127 1 25 1 246 1 192 1 209 1 11 2 28 1 362 1 162 1 307 1 350 1 283 2 198 1 284 1 9 2 364 1 266 2 216 1 
333 1 53 1 192 1 209 1 11 1 28 1 362 1 162 1 307 1 350 1 283 1 198 1 284 1 9 2 364 1 266 1 216 1 
194 1 
287 1 314 1 218 1 3 1 334 1 19 1 107 1 308 1 36 1 37 1 
188 2 92 2 218 5 303 5 19 5 208 2 347 2 6 1 181 5 31 2 184 2 111 1 157 5 112 10 37 5 
287 1 338 1 238 1 179 1 210 1 37 1 
0 2 218 2 19 2 221 1 107 2 106 2 224 1 274 1 198 1 8 1 173 1 276 1 335 2 334 2 355 2 11 4 179 3 210 2 307 1 308 2 12 1 338 4 56 1 283 4 215 1 266 4 238 3 285 1 36 1 
287 1 218 1 314 1 3 1 19 1 155 1 37 1 
287 1 218 1 19 1 107 1 295 1 112 1 354 1 334 1 179 1 210 1 308 1 181 1 338 1 282 1 238 1 36 1 37 2 
0 1 173 2 334 1 336 1 221 1 107 1 11 1 168 1 307 2 308 1 283 1 198 1 57 1 266 1 36 1 83 1 228 1 
287 1 343 1 218 2 166 1 19 2 106 1 107 1 321 1 322 1 62 1 152 1 64 1 351 1 252 1 130 1 352 1 111 1 201 1 157 2 112 2 353 1 334 1 304 1 355 1 303 2 117 1 308 1 181 1 184 1 33 1 36 1 37 2 
188 2 218 2 166 1 19 2 107 1 321 1 62 1 151 1 152 1 351 1 252 1 130 1 111 1 201 1 51 1 334 1 304 1 117 1 208 1 179 1 308 1 96 1 30 1 184 2 33 1 238 1 36 1 217 1 
286 2 0 1 242 1 166 2 38 1 221 1 167 1 5 1 249 1 152 2 351 1 252 2 130 2 198 1 255 1 169 1 47 1 172 1 173 1 302 1 26 1 304 3 336 1 117 3 178 1 11 1 307 1 283 1 165 1 183 1 99 1 266 1 
287 2 218 2 334 1 303 2 355 1 19 1 107 1 106 1 180 1 308 1 181 2 157 2 36 1 112 4 37 4 
316 1 144 1 207 1 325 1 327 1 
144 1 325 1 348 1 
144 1 325 1 348 1 
144 1 325 1 348 1 
144 1 101 1 325 1 
144 1 101 1 325 1 
144 1 101 1 325 1 
144 1 325 1 
331 1 
51 1 188 2 172 8 160 1 208 2 178 4 151 1 129 3 30 1 309 4 49 2 217 1 
172 2 188 1 286 2 160 1 165 1 183 1 309 2 47 1 5 1 129 1 347 1 250 1 
92 1 286 2 188 1 172 4 160 1 208 1 178 2 5 1 129 2 347 1 250 1 183 1 165 1 31 1 309 2 47 1 49 1 
172 3 286 6 219 1 160 1 93 1 178 2 5 3 129 2 250 1 108 1 30 1 183 3 165 3 309 1 47 3 49 1 217 1 
103 1 286 10 343 3 188 5 219 2 17 1 148 1 248 1 322 1 5 5 129 12 347 3 250 1 108 1 109 1 47 5 49 7 353 4 51 2 172 34 92 3 160 5 93 1 208 5 178 18 180 1 306 1 30 3 165 5 183 5 309 16 31 3 368 1 217 3 
188 1 51 1 172 8 286 4 219 1 160 1 17 1 148 1 208 1 178 4 5 2 180 1 129 3 30 1 183 2 165 2 309 4 47 2 49 2 217 1 
51 1 188 1 172 6 17 1 148 1 208 1 178 3 180 1 129 2 30 1 309 3 155 1 49 2 217 1 
92 1 103 1 286 2 188 1 172 4 160 1 208 1 178 2 5 1 129 2 347 1 183 1 165 1 31 1 309 2 47 1 49 1 
92 1 172 7 343 1 188 1 160 1 208 1 322 1 178 4 129 2 347 1 109 1 309 3 31 1 49 1 353 2 
188 3 343 2 286 4 219 2 17 1 148 1 290 1 346 1 5 2 129 9 347 2 109 1 47 2 49 5 353 2 51 1 172 23 92 2 160 4 93 1 208 3 178 12 180 1 30 2 183 2 165 2 31 2 309 11 217 2 
172 1 178 1 353 1 
172 1 343 1 309 1 
286 2 103 1 172 6 188 1 92 1 160 1 208 1 5 1 178 3 129 3 347 1 6 1 165 1 183 1 31 1 309 3 47 1 49 2 
286 2 172 2 343 1 5 1 322 1 178 1 250 1 183 1 165 1 309 1 352 1 47 1 353 1 
51 1 188 1 172 6 160 1 208 1 178 3 129 2 30 1 309 3 49 1 217 1 
172 3 286 2 219 1 160 1 17 1 148 1 93 1 178 2 5 1 129 2 30 1 183 1 165 1 309 1 47 1 49 1 217 1 
343 1 286 6 188 2 219 2 319 1 247 1 322 1 5 3 129 3 347 2 250 1 66 1 352 1 47 3 49 2 353 1 172 12 92 1 160 1 208 1 358 1 178 5 165 3 183 3 309 7 31 2 
286 8 103 1 343 1 188 3 219 2 319 1 247 1 322 1 5 4 129 4 347 3 250 1 66 1 109 1 352 1 47 4 49 2 353 2 172 15 92 1 160 2 208 1 358 1 178 6 165 4 183 4 309 9 31 3 
188 3 343 1 286 4 103 1 17 1 148 1 322 1 5 2 151 1 129 4 250 1 352 1 47 2 49 3 353 1 51 2 172 15 160 1 208 3 178 7 180 1 30 2 165 2 183 2 309 8 217 2 
188 3 343 1 286 4 103 1 17 1 148 1 322 1 5 2 151 1 129 7 250 1 352 1 47 2 49 4 353 1 51 2 172 15 160 3 208 3 178 7 180 1 30 2 165 2 183 2 309 8 217 2 
343 1 286 6 188 2 219 2 319 1 247 1 322 1 5 3 129 3 347 2 250 1 66 1 352 1 47 3 49 2 353 1 172 12 92 1 160 1 208 1 358 1 178 5 165 3 183 3 309 7 31 2 
286 2 172 2 343 1 5 1 322 1 178 1 250 1 183 1 165 1 309 1 352 1 47 1 353 1 
343 1 286 4 103 1 172 2 5 2 322 1 178 1 250 1 183 2 165 2 309 1 352 1 47 2 353 1 
343 1 286 4 172 2 5 2 322 1 178 1 250 1 108 1 183 2 165 2 309 1 352 1 47 2 353 1 
172 7 51 1 188 1 17 2 160 3 148 1 208 1 178 4 129 6 30 3 309 3 49 3 217 3 
343 1 286 4 172 2 5 2 322 1 178 1 250 1 108 1 183 2 165 2 309 1 352 1 47 2 353 1 
252 1 26 1 304 1 254 1 117 1 88 1 233 1 
26 1 304 1 117 1 305 1 270 1 88 1 55 1 233 1 252 1 226 1 254 1 214 1 
12 1 0 1 173 1 196 1 283 4 198 1 221 1 4 1 246 1 285 1 266 4 11 4 307 1 
173 1 315 1 335 1 336 1 221 1 86 1 61 1 11 2 307 2 283 2 198 1 44 1 266 2 121 1 
0 1 333 1 283 1 198 1 284 1 9 1 266 1 209 1 11 1 307 1 
173 1 221 1 246 1 11 2 307 1 65 1 283 2 198 1 364 1 266 2 48 1 
0 1 173 3 335 1 221 2 4 1 246 1 11 4 177 1 262 1 307 2 12 1 283 5 198 2 285 1 266 5 48 1 
0 1 173 3 335 1 317 1 221 2 4 1 246 1 11 4 262 1 307 2 12 1 283 5 198 2 285 1 266 5 48 1 
12 1 0 1 173 1 283 1 198 1 221 1 285 1 155 1 266 1 11 1 307 1 
243 1 0 1 173 1 166 1 26 1 336 1 304 2 221 1 117 2 11 1 152 1 307 1 252 1 283 1 198 1 169 1 99 1 266 1 
243 1 166 2 221 2 62 1 152 1 252 2 198 1 169 1 7 1 173 3 335 1 26 1 304 2 336 2 117 2 176 1 11 1 307 1 283 1 339 1 99 1 266 1 124 1 
243 1 166 2 221 2 40 1 62 1 152 1 252 2 196 1 198 1 7 1 173 3 335 1 26 1 304 2 336 2 117 2 176 1 11 2 307 1 283 2 339 1 99 1 266 2 124 1 
0 1 287 1 166 1 221 1 292 1 321 1 62 1 168 1 152 1 351 1 252 1 22 1 130 1 198 1 7 1 201 1 173 4 335 1 304 1 336 1 117 1 11 2 179 2 360 1 307 1 338 1 283 2 339 1 33 1 266 2 238 2 366 1 37 1 
0 1 287 1 173 4 335 1 115 1 336 1 221 1 292 1 179 2 11 3 168 1 307 1 196 1 338 1 339 1 283 3 198 1 7 1 238 2 266 3 366 1 37 1 
283 1 198 1 220 1 266 1 11 1 307 1 
0 2 72 1 173 3 204 1 220 1 336 1 221 2 246 1 61 1 177 1 11 6 54 1 262 1 307 3 283 7 198 2 57 1 364 1 266 7 121 1 48 1 
188 1 242 2 243 1 286 4 17 1 148 1 126 1 166 1 221 1 167 2 246 1 5 2 129 2 326 1 152 1 252 1 198 1 255 1 169 1 47 2 70 1 330 1 49 2 172 6 51 1 173 1 302 1 277 1 26 2 336 1 304 2 117 2 208 1 178 3 11 1 180 1 307 1 163 1 30 1 283 1 183 2 165 2 309 3 15 1 99 1 266 1 217 1 
287 1 0 1 218 1 314 1 3 1 19 1 107 2 292 1 168 1 131 1 8 1 158 1 173 2 334 2 115 1 11 1 179 3 210 1 308 2 140 1 338 2 283 1 266 1 238 3 268 1 366 1 36 2 37 1 
173 2 220 1 336 1 221 1 246 1 292 1 11 2 307 2 283 2 198 1 57 1 266 2 228 1 
243 1 0 1 173 1 166 1 26 1 336 1 304 2 221 1 117 2 11 1 40 1 152 1 307 1 252 1 283 1 198 1 99 1 266 1 
72 1 173 1 335 1 336 1 221 1 61 1 11 1 307 2 283 1 198 1 57 1 266 1 121 1 
182 1 74 1 26 1 253 1 87 1 
287 1 104 1 166 1 87 1 321 1 324 1 62 2 152 1 351 1 252 1 130 1 253 1 200 1 201 1 158 1 74 1 304 1 206 1 117 1 176 1 179 1 182 1 236 1 33 1 238 1 124 1 37 1 
234 1 244 1 252 1 182 1 74 1 304 1 253 1 117 1 320 1 
104 1 74 1 206 1 176 1 87 1 324 1 62 1 182 1 236 1 253 1 124 1 
84 1 2 1 29 1 13 1 159 1 337 1 80 1 102 1 
50 2 84 4 2 2 301 1 229 1 159 1 230 1 337 3 29 1 263 1 13 2 264 1 363 1 102 4 
84 2 50 1 2 1 159 1 337 1 80 1 29 1 13 1 23 1 310 1 185 1 102 2 
84 3 2 1 159 1 230 1 337 1 80 1 29 1 263 2 13 1 363 2 258 1 102 3 
203 1 337 2 299 1 97 2 
84 1 29 1 159 1 82 1 80 1 102 1 
50 1 84 2 2 1 29 1 13 1 159 1 337 1 20 1 80 1 102 2 
318 1 
84 1 2 1 29 1 13 1 159 1 337 1 80 1 102 1 
2 1 13 1 337 1 155 1 
84 1 2 1 29 1 13 1 159 1 337 1 102 1 
225 1 24 1 102 1 
84 3 2 1 159 1 230 1 337 1 223 1 80 1 29 1 263 2 13 1 363 1 102 3 
50 1 84 2 2 1 29 1 13 1 159 1 337 1 265 1 102 2 
84 1 333 1 301 1 29 1 159 1 337 1 9 1 80 1 28 1 241 1 102 1 
84 1 2 1 29 1 159 1 337 1 80 1 102 1 
84 1 2 2 29 1 13 1 159 1 80 1 102 1 
84 2 2 1 288 1 159 2 337 1 222 1 21 1 80 1 29 2 102 2 
84 3 50 2 2 1 301 1 159 1 20 1 337 2 80 1 29 1 13 1 264 1 100 1 102 3 
84 2 50 1 2 1 333 1 159 1 337 1 80 1 28 1 162 1 29 1 13 1 197 1 284 1 9 2 102 2 
84 4 50 2 2 1 301 1 159 2 337 2 41 1 80 1 29 2 13 1 264 1 265 1 102 4 
50 1 84 3 2 1 159 1 337 1 20 1 80 1 29 1 263 1 13 1 102 3 
301 1 229 1 264 1 337 1 
2 1 337 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (237,261) (237,261) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (237,261) (237,261) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (237,261) (237,261) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (237,261) (237,261) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (20,260) 312 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (20,260) 312 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 274 (44,52,222) (119,242,313) (119,242,313) (119,242,313) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (57,58,304) (57,58,304) 146 71 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 92 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 274 (44,52,222) (44,52,222) (44,52,222) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 270 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (151,268) (151,268) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException (151,268) 107 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (151,268) (151,268) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 292 1 260 1 293 1 165 1 261 1 181 1 241 1 237 1 69 1 123 1 
87 1 292 1 260 1 293 1 165 1 261 1 181 1 241 1 237 1 69 1 123 1 
87 1 292 1 260 1 293 1 165 1 261 1 181 1 241 1 237 1 69 1 123 1 
87 1 292 1 260 1 293 1 165 1 261 1 181 1 241 1 237 1 69 1 123 1 
216 3 98 3 117 1 241 1 14 1 194 1 69 1 225 1 307 1 292 1 293 4 319 2 181 4 63 1 124 1 41 2 274 1 94 1 
87 1 98 1 117 1 241 1 259 1 69 1 168 1 150 1 73 1 123 1 292 1 293 2 114 1 181 2 63 1 274 1 94 1 
87 1 216 1 98 2 117 1 241 2 69 1 292 2 307 1 293 3 20 1 181 3 63 1 41 1 
292 1 20 1 103 1 293 1 181 1 241 1 312 1 69 1 
292 1 20 1 103 1 293 1 181 1 241 1 312 1 69 1 
169 1 161 1 183 1 
187 2 161 1 167 1 
186 1 201 2 76 2 257 2 173 2 43 2 210 1 229 2 
2 1 174 1 178 1 47 1 201 2 200 1 247 1 330 1 76 2 12 2 294 1 77 2 248 1 298 1 80 1 275 1 142 1 82 2 85 1 204 2 229 2 32 1 206 1 34 1 59 1 340 1 88 1 257 3 303 1 147 1 60 1 210 1 89 1 211 2 235 1 186 1 214 1 173 2 43 3 
201 1 76 1 257 1 173 1 275 1 43 1 101 1 210 1 229 1 234 1 
58 1 304 1 
58 1 57 2 257 1 36 2 112 1 102 1 197 1 169 1 201 1 76 1 161 1 173 1 43 1 275 1 229 1 
57 1 331 1 36 1 125 1 198 1 
9 1 101 1 198 1 201 1 76 1 161 1 275 1 125 1 126 1 229 1 57 2 257 1 36 2 346 1 210 1 234 1 169 1 173 1 43 1 
57 1 36 1 198 1 
57 1 257 1 36 1 101 1 210 1 234 1 201 1 76 1 173 1 275 1 43 1 125 1 126 1 229 1 
161 1 
101 1 198 1 201 1 76 1 161 1 275 1 125 1 126 1 229 1 57 2 257 1 36 2 346 1 210 1 234 1 169 1 173 1 43 1 45 1 
1 2 135 1 157 1 285 1 138 1 101 1 265 2 198 2 291 5 201 1 76 1 295 1 226 4 161 2 275 1 316 2 125 2 229 1 126 1 86 1 29 1 128 1 57 5 339 2 257 1 35 2 15 2 279 1 36 5 210 1 346 1 234 1 169 2 350 1 352 1 172 1 173 1 43 1 
186 1 183 1 
257 2 233 1 186 1 201 1 76 2 294 1 171 1 173 1 275 1 43 2 229 1 
158 1 136 1 208 1 
206 1 257 1 147 1 47 1 60 1 211 1 235 1 89 1 186 1 212 1 12 1 294 1 248 1 298 1 214 1 275 1 43 1 82 1 
257 5 348 2 186 1 280 1 201 4 76 5 24 1 320 1 171 1 227 1 42 1 173 4 43 5 229 1 
201 2 76 2 257 2 173 2 275 1 43 2 101 1 277 1 
206 1 208 1 257 2 147 1 47 1 60 1 89 1 235 1 211 1 348 1 201 1 76 1 12 1 248 1 320 1 298 1 214 1 173 1 43 2 82 1 
186 1 348 1 201 3 76 3 257 3 173 3 43 3 229 1 
201 1 76 1 257 1 173 1 275 1 43 1 101 1 
257 1 233 1 201 1 76 1 171 1 173 1 43 1 275 1 229 1 
2 1 178 1 47 1 102 1 197 1 290 1 201 3 200 1 247 1 330 1 76 3 12 1 77 1 248 1 298 1 80 1 275 1 82 1 144 1 204 2 229 2 32 1 206 1 34 1 58 1 57 1 340 1 88 1 257 4 147 1 60 1 36 1 112 1 210 1 89 1 235 1 211 1 186 1 348 1 320 1 171 1 214 1 173 3 43 4 
186 1 348 1 201 1 76 2 257 2 227 1 42 1 173 1 43 2 
57 1 58 1 257 3 36 1 112 1 197 1 102 1 290 1 348 2 201 3 76 3 113 1 320 1 171 1 161 1 173 3 275 1 43 3 229 1 
158 1 257 2 208 1 348 1 201 2 76 2 171 1 173 2 43 2 229 1 
206 1 257 1 147 1 60 1 47 1 211 1 235 1 89 1 186 1 12 1 294 1 248 1 298 1 214 1 275 1 43 1 82 1 
66 1 206 1 33 1 257 1 147 1 47 1 211 1 235 1 89 1 186 1 12 1 294 1 248 1 298 1 275 1 43 1 82 1 
2 1 136 2 158 2 247 1 330 1 77 4 249 1 80 1 252 1 316 1 85 2 204 2 301 1 34 1 340 2 88 1 208 2 35 1 148 1 38 1 153 1 282 1 263 1 95 1 
201 1 76 1 257 1 173 1 275 1 43 1 102 1 277 1 
91 1 311 1 
91 1 311 1 
67 1 244 1 
67 1 244 1 
67 1 244 1 
91 1 311 1 93 1 
91 1 230 1 311 1 
337 1 67 1 91 2 311 2 244 1 220 1 
91 1 311 1 93 1 
91 1 311 1 93 1 
246 1 91 1 311 1 
246 1 91 1 311 1 
246 1 91 1 311 1 
176 1 46 1 192 1 311 1 243 1 219 1 201 2 76 2 250 1 302 1 57 1 342 1 230 1 257 2 36 1 149 1 186 1 305 1 152 1 91 1 132 1 308 1 173 2 43 2 
28 1 283 2 30 1 337 1 46 2 57 2 192 2 311 2 121 1 23 1 16 1 36 2 219 3 149 2 305 1 91 2 308 2 239 1 161 1 
225 1 274 1 94 1 
259 1 274 1 94 1 
225 2 90 1 259 1 253 1 162 1 94 3 
225 1 90 1 259 1 253 1 94 2 203 1 
225 1 90 2 259 1 253 1 94 2 
1 1 135 1 284 1 177 1 101 1 265 1 198 1 267 1 291 2 201 1 76 1 269 2 226 3 161 2 316 1 275 1 125 4 229 1 163 1 126 1 205 1 57 5 342 1 339 1 166 2 257 1 35 1 167 1 36 5 148 1 210 1 346 1 234 1 169 1 187 3 62 1 173 1 116 2 43 1 95 1 
101 1 198 1 11 1 201 1 329 1 76 1 331 1 161 1 275 1 125 2 126 1 229 1 57 2 257 1 36 2 210 1 234 1 169 1 173 1 43 1 322 1 
1 1 284 1 177 1 101 1 265 1 291 2 201 1 76 1 269 1 226 3 161 2 275 1 316 1 125 2 229 1 126 1 163 1 205 1 57 3 339 1 342 1 257 1 166 2 35 1 167 1 36 3 148 1 210 1 234 1 169 1 187 3 62 1 350 1 173 1 43 1 116 2 95 1 
1 1 177 1 101 1 265 1 269 2 226 5 275 1 316 2 229 1 57 4 148 2 234 1 187 7 62 2 116 4 284 1 122 1 291 4 201 1 160 1 76 1 161 4 125 3 163 1 126 1 205 1 256 1 342 2 339 1 166 4 257 1 35 2 167 3 36 4 210 1 169 1 350 1 173 1 43 1 95 2 
21 1 47 1 183 1 
333 1 47 1 
65 1 
89 1 147 1 47 1 
47 1 156 1 
147 1 47 1 
89 1 21 2 147 1 47 3 72 1 264 1 
29 1 301 2 318 1 340 3 35 1 285 1 287 2 180 1 306 1 77 7 297 1 252 3 189 1 316 1 315 1 85 4 86 1 
29 1 301 2 318 1 340 3 35 1 285 1 287 2 180 1 306 1 77 7 297 1 252 3 189 1 316 1 315 1 85 4 86 1 
29 1 54 1 301 2 318 1 340 3 35 1 285 1 287 2 180 1 306 1 77 7 297 1 252 3 189 1 316 1 315 1 85 4 86 1 
285 2 287 3 266 3 10 1 74 1 180 4 330 1 77 26 297 1 296 1 252 8 80 1 315 1 316 3 85 14 86 1 204 2 29 2 301 4 108 3 318 1 56 1 34 1 340 12 88 1 35 3 148 2 131 1 62 2 306 2 189 2 323 1 95 2 
285 1 287 2 74 1 180 1 330 2 77 9 297 1 80 2 252 4 81 1 316 1 85 5 204 4 86 1 29 1 301 3 34 2 318 1 340 4 88 2 35 1 37 1 306 1 189 1 
241 1 99 1 8 1 119 1 242 1 313 1 69 1 225 1 292 1 12 1 293 1 248 1 181 1 274 1 182 1 162 1 82 1 13 1 87 1 259 1 211 1 235 1 40 1 133 1 94 2 44 1 
216 2 98 1 117 1 241 1 193 1 99 1 242 1 313 1 225 1 292 1 159 1 12 1 293 3 248 1 181 3 274 1 162 1 182 1 82 1 13 1 87 1 259 1 211 1 235 1 114 1 40 1 63 1 64 1 133 1 94 2 44 1 
216 2 98 1 117 1 193 1 99 1 242 1 225 1 12 1 293 2 248 1 181 2 182 1 162 1 274 1 82 1 13 1 87 1 259 1 211 1 235 1 114 1 63 1 64 1 133 1 94 2 44 1 
241 1 99 2 47 1 292 1 159 1 12 1 293 1 248 1 181 1 298 1 273 1 82 1 13 2 87 2 231 1 147 1 235 1 211 1 39 1 213 1 238 1 154 1 133 2 
241 1 193 1 99 1 119 1 242 1 313 1 69 1 225 1 292 1 12 1 293 1 248 1 181 1 274 1 182 1 162 1 82 1 13 1 87 1 259 1 211 1 235 1 40 1 133 1 94 2 44 1 
137 1 
1 1 135 1 284 1 118 1 47 1 71 1 265 1 198 2 291 1 12 2 248 1 298 2 226 1 273 1 82 2 146 1 255 1 58 1 57 2 339 1 232 1 147 1 36 2 346 1 304 1 235 1 211 2 39 1 309 1 325 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 2 232 1 36 2 71 1 346 1 45 1 304 1 198 1 
135 1 1 1 146 1 255 1 58 1 57 1 339 1 232 1 36 1 265 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
146 1 255 1 58 1 57 1 232 1 36 1 71 1 304 1 
135 1 1 1 146 1 255 1 58 1 57 1 339 1 232 1 36 1 265 1 71 1 304 1 
2 1 158 1 136 1 285 1 287 1 247 1 330 1 77 6 297 1 80 1 252 2 316 1 183 1 85 3 204 2 86 1 29 1 301 2 318 1 34 1 340 3 208 1 88 1 35 1 38 1 186 2 
2 1 136 11 217 1 158 4 139 1 196 1 70 1 266 3 245 1 10 1 180 1 247 2 330 2 77 14 252 2 80 2 316 2 85 8 204 4 301 1 32 1 108 3 34 2 59 1 340 6 88 2 208 11 35 1 343 1 148 2 186 1 62 2 95 1 
0 1 2 1 139 1 47 1 12 1 275 1 59 1 147 1 60 1 235 1 186 1 320 1 158 1 288 1 201 1 247 1 330 1 76 1 77 2 248 1 294 1 298 1 80 1 82 1 85 1 204 2 254 1 32 1 206 1 34 1 340 1 88 1 257 2 211 1 89 1 348 1 212 1 214 1 173 1 43 2 
2 1 32 1 34 1 340 1 88 1 257 1 139 1 211 1 348 1 201 1 247 1 12 1 330 1 76 1 77 1 320 1 92 1 298 1 80 1 173 1 43 1 82 1 204 2 
2 1 47 2 268 1 141 1 247 1 12 2 330 1 248 2 77 2 298 1 80 1 273 1 27 1 82 2 142 1 85 1 204 2 107 1 32 1 127 1 338 1 34 1 59 1 340 1 88 1 147 2 89 1 235 3 211 2 39 1 
2 1 158 1 136 1 139 1 201 1 247 1 330 1 50 1 76 1 77 3 252 1 80 1 316 1 85 1 229 1 204 2 301 1 34 1 340 2 208 1 88 1 257 1 35 1 148 1 62 1 171 1 173 1 43 1 95 1 
2 1 158 1 136 1 34 1 208 1 88 1 148 1 38 1 180 1 247 1 330 1 77 2 252 1 80 1 263 1 316 1 85 2 204 2 
301 1 2 1 158 1 136 1 34 1 340 2 208 1 88 1 35 1 38 1 247 1 330 1 77 2 252 1 80 1 153 1 95 1 204 2 
2 1 136 2 158 2 180 1 247 1 330 1 77 4 80 1 252 2 316 1 85 2 204 2 301 1 34 1 340 2 88 1 208 2 35 1 148 1 38 1 62 1 95 1 
2 1 158 1 136 1 338 1 34 1 208 1 88 1 148 1 180 1 247 1 330 1 77 2 252 1 80 1 263 1 316 1 85 2 204 2 
301 1 2 1 158 1 136 1 338 1 34 1 340 2 208 1 88 1 35 1 247 1 330 1 77 2 252 1 80 1 153 1 95 1 204 2 
2 1 136 2 158 2 180 1 247 1 330 1 77 4 80 1 252 2 316 1 85 2 204 2 301 1 338 1 34 1 340 2 88 1 208 2 35 1 148 1 62 1 95 1 
2 1 136 2 158 2 180 1 247 1 330 1 77 4 80 1 252 2 316 1 85 2 204 2 301 1 34 1 340 2 88 1 208 2 35 1 148 1 62 1 95 1 
2 1 178 1 47 1 247 1 12 1 330 1 294 1 77 2 248 1 298 1 80 1 275 1 82 1 85 1 204 2 32 1 206 1 34 1 59 1 340 1 257 1 88 1 147 1 60 1 89 1 235 1 211 1 186 1 214 1 43 1 
2 1 66 1 47 1 224 1 247 1 12 1 330 1 294 1 77 1 248 1 298 1 80 1 275 1 82 1 204 2 32 1 206 1 33 1 34 1 340 1 257 1 88 1 147 1 89 1 235 1 211 1 186 1 43 1 
2 1 136 2 158 2 139 1 180 1 247 1 330 1 77 4 80 1 252 2 316 1 85 2 204 2 301 1 34 1 340 2 88 1 208 2 35 1 148 1 62 1 95 1 
2 1 158 2 136 2 8 1 178 1 47 1 247 1 12 1 330 1 77 4 248 1 252 1 80 1 316 1 82 1 85 2 204 2 301 1 206 1 34 1 340 2 208 2 257 1 88 1 35 1 147 1 60 1 148 1 344 1 89 1 235 1 211 1 62 1 214 1 43 1 95 1 
2 1 136 1 158 1 139 1 223 1 180 1 201 1 247 1 330 1 76 1 77 3 252 1 80 1 316 1 85 2 229 1 204 2 34 1 340 1 88 1 257 1 208 1 35 1 148 1 62 1 171 1 173 1 43 1 95 1 
5 1 7 1 120 1 266 1 10 1 180 2 330 2 77 14 78 1 252 4 80 2 81 1 316 2 143 2 85 7 204 4 336 2 301 2 55 1 108 1 34 2 340 7 88 2 35 2 148 2 62 2 281 1 95 2 96 1 
5 1 4 1 7 2 120 2 266 2 10 2 74 2 199 1 180 2 330 3 77 26 202 1 78 1 252 4 80 3 81 1 316 3 143 4 85 14 204 6 336 1 301 2 108 2 34 3 340 12 88 3 35 2 129 1 148 3 62 3 321 1 262 1 95 2 96 1 
5 1 4 1 6 1 7 1 285 1 120 2 287 1 266 3 10 3 74 1 199 1 180 3 330 3 77 36 202 1 78 1 297 1 252 6 80 3 81 1 316 4 143 4 85 18 86 1 204 6 336 1 29 1 301 3 108 3 318 1 34 3 340 18 88 3 35 4 129 1 148 3 62 3 281 1 321 1 262 1 95 3 96 1 
5 1 4 1 6 1 7 1 285 1 120 2 287 1 266 3 10 3 74 2 199 1 180 2 330 4 77 33 202 1 78 1 297 1 252 5 80 4 81 1 316 4 143 4 85 18 86 1 204 8 336 1 29 1 301 3 108 3 318 1 34 4 340 15 88 4 35 3 129 1 148 3 62 3 281 1 321 1 262 1 95 2 96 1 
5 1 4 1 7 1 285 1 120 1 287 1 266 2 10 2 199 1 180 2 330 1 77 29 202 1 78 1 297 1 252 5 80 1 81 1 316 4 143 3 85 15 86 1 204 2 336 1 29 1 301 3 108 2 318 1 34 1 340 14 88 1 35 4 129 1 148 3 62 3 321 1 262 1 95 3 96 1 
30 1 337 1 91 1 46 1 192 1 311 1 308 1 286 1 16 1 149 1 
230 1 250 1 
91 1 46 1 51 1 192 1 207 1 311 1 79 1 308 1 149 1 
26 1 93 1 
246 1 170 1 220 1 
283 1 30 1 337 1 57 1 46 1 192 1 311 1 121 1 23 1 16 1 36 1 219 2 149 1 305 1 91 1 308 1 239 1 161 1 
283 1 30 1 337 1 57 1 46 1 192 1 311 1 121 1 23 1 16 1 36 1 219 2 149 1 305 1 91 1 308 1 239 1 161 1 
283 1 30 1 337 1 57 1 46 1 192 1 311 1 121 1 23 1 16 1 36 1 219 2 149 1 305 1 91 1 308 1 239 1 161 1 
26 1 93 1 220 1 
26 1 93 1 220 1 
246 1 170 1 
246 1 170 1 220 1 
302 1 132 1 
283 1 176 1 46 1 192 1 311 1 243 1 219 1 201 2 76 2 250 1 125 1 302 1 57 1 342 1 230 1 257 2 36 1 149 1 347 1 186 1 152 1 91 1 132 1 239 1 308 1 173 2 43 2 
2 1 3 1 139 1 47 1 141 1 247 1 76 2 330 1 12 2 248 1 77 2 251 1 299 1 80 1 82 2 142 2 85 1 204 2 32 1 34 1 59 1 340 1 257 2 88 1 147 1 184 1 235 1 211 2 188 1 43 2 324 1 
193 1 99 1 8 1 259 1 235 1 211 2 222 1 225 1 12 2 248 1 40 1 274 1 162 1 52 1 182 1 94 2 82 2 44 1 190 1 
193 1 99 1 259 1 185 1 211 1 235 1 225 1 12 1 248 1 40 1 274 1 162 1 52 1 182 1 94 2 82 1 44 1 
240 1 99 1 147 1 47 1 235 1 211 1 39 1 12 1 248 1 298 1 154 1 273 1 82 1 190 1 
193 1 99 1 259 1 235 1 211 1 222 1 225 1 12 1 248 1 40 1 274 1 162 1 52 1 182 1 94 2 82 1 44 1 190 1 
351 1 
169 1 291 1 157 1 128 1 226 1 161 1 183 1 
135 1 1 1 97 1 57 1 339 1 341 1 167 1 36 1 346 1 265 1 198 1 169 1 187 1 291 1 104 1 226 1 161 2 
135 1 1 1 339 1 147 1 111 1 47 2 265 1 72 1 235 2 89 1 211 1 12 1 248 1 270 1 298 1 333 1 82 1 
135 2 1 2 4 1 101 1 265 2 266 1 10 1 226 8 275 1 316 2 229 1 108 1 57 1 15 2 279 1 148 2 234 1 187 6 62 2 321 1 116 5 325 1 284 1 327 1 198 1 291 5 201 1 76 1 202 1 161 5 126 1 339 2 257 1 166 5 35 2 167 3 129 1 36 1 346 1 209 1 210 1 169 2 173 1 262 1 43 1 95 2 
1 1 135 1 285 1 101 1 265 1 291 2 201 1 76 1 226 2 275 1 316 2 86 1 126 1 229 1 29 1 53 1 57 1 339 1 257 1 35 1 15 2 279 1 36 1 210 1 234 1 172 1 173 1 43 1 
135 1 1 1 157 1 128 1 339 1 265 1 169 1 291 1 226 1 161 1 
166 5 35 2 15 2 167 5 279 1 148 2 291 5 187 10 62 2 25 1 226 5 161 5 316 2 116 5 95 2 
57 1 257 1 36 1 101 1 210 1 346 1 198 1 234 1 169 1 201 1 76 1 173 1 161 1 275 1 43 1 229 1 126 1 
1 2 135 1 284 1 118 1 68 1 47 2 265 2 198 2 268 1 291 1 12 2 248 2 298 2 226 1 273 1 27 1 82 2 107 1 127 1 57 2 339 2 147 2 36 2 346 1 89 1 235 3 211 2 39 1 350 1 309 1 325 1 
2 1 178 1 47 1 201 2 200 1 247 1 330 1 12 1 76 2 77 1 248 1 298 1 80 1 82 1 204 2 229 2 32 1 206 1 34 1 340 1 88 1 257 3 147 1 60 1 210 1 211 1 235 1 89 1 186 1 214 1 173 2 43 3 
135 1 1 1 284 1 339 1 166 2 167 2 287 1 265 1 169 2 187 4 291 2 226 1 161 4 116 2 325 1 
192 1 308 1 22 1 
30 1 31 1 192 1 132 1 308 1 
192 1 308 1 22 1 
192 1 308 1 22 1 
192 1 332 1 308 1 
192 1 332 1 308 1 
192 1 332 1 308 1 
192 1 308 1 
91 1 311 1 
29 1 301 2 34 2 318 1 340 4 88 2 35 1 285 1 287 1 74 1 180 1 330 2 77 8 297 1 252 3 80 2 316 1 85 4 86 1 204 4 
29 1 301 2 77 6 318 1 340 3 35 1 285 1 297 1 252 2 316 1 287 1 183 1 85 3 86 1 
301 1 34 1 340 2 88 1 35 1 148 1 130 1 180 1 62 1 330 1 77 4 252 2 80 1 316 1 95 1 85 2 204 2 
108 1 77 2 340 1 266 1 85 1 10 1 
217 1 218 1 285 2 287 1 70 1 196 1 266 2 74 2 180 4 330 2 77 23 297 1 252 9 80 2 316 3 85 11 86 1 204 4 29 2 301 5 108 2 318 1 34 2 340 12 88 2 35 3 148 2 62 2 95 2 
77 1 340 1 266 1 
108 1 77 1 85 1 
301 2 34 1 340 3 88 1 35 1 148 1 130 1 180 1 62 1 330 1 77 6 25 1 80 1 252 3 316 1 95 1 85 3 204 2 
4 1 266 1 10 1 180 1 330 1 77 12 202 1 80 1 252 2 81 1 316 2 85 6 204 2 301 1 108 1 34 1 340 6 88 1 35 2 129 1 148 2 62 2 321 1 262 1 95 2 
29 1 301 1 340 3 35 1 285 1 180 1 77 6 252 2 316 1 85 3 86 1 
29 1 301 1 34 1 318 1 218 1 340 2 88 1 285 1 74 1 180 1 330 1 77 3 297 1 252 2 80 1 85 1 204 2 
29 2 301 3 34 1 340 5 88 1 285 2 35 2 180 2 330 1 77 10 80 1 172 1 252 5 81 1 316 2 85 5 204 2 86 1 
34 1 88 1 148 1 180 1 330 1 77 2 80 1 252 1 81 1 316 1 85 2 204 2 
301 1 34 1 340 2 88 1 35 1 148 1 180 1 62 1 330 1 77 4 252 2 80 1 81 1 316 1 95 1 85 2 204 2 
29 1 301 1 34 3 218 1 340 2 88 3 285 1 74 1 180 1 330 3 77 3 281 1 80 3 252 2 81 1 85 1 204 6 
218 1 285 3 287 1 266 3 10 1 74 2 180 4 330 5 77 29 297 1 296 1 80 5 252 10 81 1 316 4 85 14 86 2 204 10 29 3 301 6 108 3 318 1 56 1 34 5 340 15 88 5 35 4 148 2 130 1 62 2 281 1 323 1 95 2 
285 1 287 1 266 1 10 1 330 1 77 8 202 1 297 1 80 1 252 2 81 1 316 1 85 4 204 2 86 1 29 1 301 2 108 1 34 1 318 1 340 4 88 1 35 1 
285 1 287 1 266 1 10 1 330 2 77 8 202 1 297 1 80 2 252 2 81 1 316 1 85 4 86 1 204 4 29 1 301 2 108 1 34 2 318 1 340 4 88 2 35 1 130 1 
4 1 285 1 287 1 266 1 10 1 74 1 180 1 330 3 77 19 202 1 297 1 80 3 252 4 81 1 316 3 85 9 86 1 204 6 29 1 301 3 108 1 318 1 34 3 340 10 88 3 35 3 129 1 148 2 130 1 62 2 321 1 262 1 95 2 
4 1 285 1 287 1 266 1 10 1 74 1 180 2 330 3 77 17 202 1 297 1 80 3 252 5 81 1 316 3 85 10 86 1 204 6 29 1 301 3 108 1 318 1 34 3 340 7 88 3 35 2 129 1 148 2 130 1 62 2 321 1 262 1 95 1 
285 1 287 1 266 1 10 1 330 1 77 8 202 1 297 1 80 1 252 2 81 1 316 1 85 4 204 2 86 1 29 1 301 2 108 1 34 1 318 1 340 4 88 1 35 1 
4 1 266 1 10 1 180 1 330 1 77 12 202 1 80 1 252 2 81 1 316 2 85 6 204 2 301 1 108 1 34 1 340 6 88 1 35 2 129 1 148 2 62 2 321 1 262 1 95 2 
4 1 285 1 287 1 266 1 10 1 74 2 180 2 330 4 77 18 202 1 297 1 80 4 252 5 81 1 316 3 85 10 86 1 204 8 29 1 301 3 108 1 318 1 34 4 340 8 88 4 35 2 129 1 148 2 130 1 62 2 321 1 262 1 95 1 
4 1 266 1 10 1 74 2 180 3 330 4 77 16 202 1 80 4 252 6 81 1 316 3 85 9 204 8 301 3 108 1 34 4 340 7 88 4 35 2 129 1 148 3 62 3 281 1 321 1 262 1 95 2 
29 3 301 3 318 1 340 4 35 1 285 3 180 3 77 7 297 2 252 6 316 1 85 3 86 1 
4 1 285 1 287 1 266 1 10 1 74 2 180 1 330 4 77 18 202 1 297 1 80 4 252 4 81 1 316 3 85 10 86 1 204 8 29 1 301 3 108 1 318 1 34 4 340 8 88 4 35 2 129 1 148 2 62 2 281 1 321 1 262 1 95 1 
186 1 349 1 76 1 257 1 227 1 42 1 43 1 
109 1 257 1 195 1 140 1 186 1 349 1 76 1 236 1 227 1 42 1 43 1 84 1 
235 1 211 1 39 1 12 1 248 1 298 1 147 1 273 1 47 1 82 1 183 1 
47 1 201 1 12 1 76 1 248 1 294 1 298 1 275 1 82 1 206 1 257 2 147 1 60 1 211 1 235 1 89 1 348 1 186 1 173 1 43 2 
175 1 47 3 102 1 201 1 12 1 76 2 294 1 248 1 275 2 82 1 206 1 257 2 147 2 60 1 112 1 211 1 235 1 89 2 186 1 348 1 173 2 43 2 155 1 156 1 
175 1 47 3 102 1 201 1 12 1 76 2 294 1 248 1 275 2 82 1 206 1 33 1 257 2 147 2 112 1 211 1 235 1 89 2 186 1 348 1 173 2 43 2 155 1 156 1 
175 1 47 4 101 1 197 1 198 1 201 1 76 1 12 1 248 1 333 1 161 1 275 1 82 1 229 1 126 1 110 1 57 2 257 1 147 1 36 2 210 1 234 1 211 1 235 1 89 1 169 1 21 1 173 1 43 1 215 1 155 1 156 1 
175 1 47 1 101 1 197 1 198 1 201 1 12 1 76 1 333 1 161 1 275 1 82 1 126 1 229 1 57 2 257 1 36 2 210 1 234 1 211 1 169 1 18 1 173 1 43 1 
211 1 235 1 12 1 248 1 105 1 82 1 
127 1 147 1 47 1 72 1 268 1 211 1 151 1 89 1 235 2 12 1 248 1 298 1 82 1 
2 2 136 1 8 1 139 1 178 1 47 1 180 1 12 1 271 1 275 1 316 3 318 1 147 1 60 1 235 1 186 3 158 1 285 2 287 1 201 1 247 2 330 2 76 1 294 1 248 1 77 13 251 1 297 1 80 2 252 4 82 1 85 7 204 4 86 2 29 2 301 3 206 1 34 2 340 6 88 2 257 2 208 1 35 3 344 1 211 1 89 1 348 1 172 1 214 1 173 1 43 2 
135 2 1 2 47 1 101 1 265 2 221 1 12 1 226 4 275 1 316 2 229 1 57 3 15 2 279 1 234 1 18 1 157 1 68 1 285 1 326 1 197 1 198 2 291 5 201 1 76 1 298 1 333 1 161 2 125 1 82 1 86 1 126 1 29 1 128 1 339 2 257 1 35 2 36 3 346 1 210 1 211 1 169 2 172 1 173 1 43 1 310 1 
111 1 147 1 47 2 72 1 211 1 89 1 235 2 12 1 248 1 21 1 105 1 82 1 65 1 
107 1 127 1 8 1 147 2 47 2 268 1 89 1 235 3 211 2 39 1 12 2 248 2 298 1 273 1 27 1 82 2 
107 1 127 1 191 1 147 1 47 1 268 1 211 1 89 1 235 2 12 1 248 1 27 1 82 1 
259 1 211 1 235 1 12 1 248 1 298 1 182 1 274 1 82 1 94 1 
3 1 193 1 8 1 184 1 147 1 47 1 211 2 235 1 12 2 248 1 82 2 
107 1 3 1 127 1 8 1 147 3 47 4 17 1 268 1 89 1 211 3 235 4 39 1 12 2 248 3 298 1 228 1 273 1 27 1 82 3 
107 1 3 1 127 1 8 1 147 3 47 4 268 1 89 1 211 3 235 4 39 1 12 2 248 3 298 1 228 1 273 1 27 1 82 3 106 1 
47 1 201 1 12 1 76 1 248 1 294 1 298 1 275 1 82 1 206 1 33 1 257 2 147 1 211 1 235 1 89 1 348 1 186 1 173 1 43 2 
175 1 127 1 147 1 47 1 72 1 268 1 211 1 151 1 89 1 235 2 12 1 248 1 82 1 
49 1 76 1 188 1 278 1 257 1 299 1 100 1 43 1 324 1 
49 1 115 1 134 1 
186 1 49 1 278 1 100 1 272 1 
335 1 57 2 278 2 58 1 100 2 36 2 112 1 197 1 102 1 169 1 290 1 186 1 49 1 115 1 161 1 272 2 275 1 125 1 134 1 
98 1 117 1 63 1 183 1 
98 1 292 1 117 1 293 1 181 1 241 1 63 1 
87 1 293 1 13 1 
98 1 117 1 241 1 69 1 314 1 73 2 75 1 292 1 293 3 19 1 181 3 63 1 
216 1 98 1 292 1 117 1 319 1 293 2 181 2 241 1 63 1 
98 1 241 1 14 1 69 1 225 1 292 1 293 1 181 1 41 1 274 1 94 1 
98 1 292 1 293 1 181 1 241 1 63 1 69 1 
292 1 117 1 293 1 181 1 241 1 63 2 69 1 
98 1 292 2 293 2 181 2 241 2 63 1 69 1 83 1 276 1 289 1 
216 2 98 2 117 1 164 1 241 1 69 1 328 1 292 1 307 1 293 3 181 3 63 1 41 1 
216 1 98 1 117 1 317 1 241 1 259 1 69 1 225 1 292 1 293 2 181 2 63 1 162 1 274 1 94 2 
216 2 98 2 117 1 241 2 194 1 69 1 292 2 307 1 293 4 319 1 181 4 63 1 41 1 
98 1 292 1 117 1 293 1 181 1 241 1 63 1 69 1 
216 2 98 3 117 2 241 1 314 1 73 1 292 1 307 1 19 1 293 4 114 1 181 4 63 2 41 1 
117 1 241 1 69 1 345 1 292 1 293 1 103 1 114 1 181 1 63 1 300 1 
98 1 117 1 241 1 69 1 314 2 73 2 292 1 19 1 293 3 181 3 63 1 334 1 
61 2 98 2 48 1 179 1 
145 1 292 1 293 1 181 1 241 1 69 1 
216 1 98 1 292 1 117 1 164 1 293 2 181 2 241 1 63 1 69 1 
258 1 
98 1 292 1 117 1 293 1 181 1 241 1 63 1 69 1 
216 1 98 1 292 1 164 1 117 1 293 3 181 3 241 1 63 1 69 1 73 1 
98 1 307 1 114 1 41 1 
98 1 63 1 

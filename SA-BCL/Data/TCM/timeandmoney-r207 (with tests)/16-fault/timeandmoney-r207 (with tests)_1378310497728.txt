#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (78,286) 175 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (0,194) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (15,26,124) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (0,194) (0,194) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 294 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 24 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (15,26,124) (15,26,124) 273 266 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 294 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 248 296 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (78,286) (78,286) (44,173) 225 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (78,286) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 316 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (78,286) (78,286) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 267 50 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (0,194) (0,194) 47 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (78,286) 175 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 308 (208,230) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 308 (208,230) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 308 (95,168) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (0,194) (0,194) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (0,194) (0,194) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (0,194) (0,194) 47 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 278 271 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 308 (95,168) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 5 170 1 254 1 128 9 6 9 53 2 132 1 302 1 96 2 17 1 18 2 140 2 223 1 309 1 25 1 114 2 32 1 75 1 321 2 193 6 197 1 161 2 199 1 203 1 246 3 288 1 247 4 85 1 
293 5 170 1 254 1 128 9 6 9 53 2 132 1 302 1 96 2 17 1 18 2 140 2 223 1 309 1 25 1 114 2 32 1 75 1 321 2 193 6 197 1 161 2 199 1 203 1 246 3 288 1 247 4 85 1 
293 6 170 1 254 1 128 10 6 10 53 2 132 1 302 1 96 2 17 1 18 2 140 2 223 1 309 1 25 1 114 2 32 1 75 1 321 2 193 7 197 1 161 2 199 1 203 1 246 4 288 1 247 5 85 1 
293 4 170 1 254 1 128 7 6 7 53 2 132 1 302 1 96 2 17 1 18 2 140 2 223 1 309 1 25 1 114 1 32 1 75 1 321 2 193 4 161 2 199 1 203 1 246 2 288 1 247 3 85 1 
293 3 170 1 25 1 128 4 6 4 114 2 53 1 75 1 321 1 193 3 197 1 161 1 96 1 302 1 199 1 246 1 140 1 247 2 
87 1 293 1 170 1 128 2 6 2 260 1 75 1 321 1 161 1 302 1 96 1 203 1 18 1 140 1 334 1 85 1 
293 2 170 1 254 1 128 3 6 3 75 1 193 1 161 2 302 1 18 1 246 1 140 2 247 1 
293 5 170 1 254 1 128 9 6 9 53 1 132 1 302 1 96 1 18 1 140 2 21 1 25 1 190 1 114 2 75 1 193 7 321 1 161 2 197 1 199 1 246 3 288 1 247 4 
293 5 170 1 254 1 128 9 6 9 53 1 132 1 302 1 96 1 18 1 140 2 21 1 25 1 190 1 114 2 75 1 193 7 321 1 161 2 197 1 199 1 246 3 288 1 247 4 
165 1 294 1 236 1 
237 1 165 1 90 2 
210 2 220 1 59 2 12 2 41 2 320 2 66 2 
210 1 317 2 277 1 320 1 159 1 175 1 218 2 220 1 59 1 286 1 41 1 12 1 103 1 287 2 13 1 66 1 
210 1 220 1 59 1 12 1 41 1 320 1 66 1 194 1 
210 1 314 1 12 1 15 1 320 1 124 1 
210 1 59 1 12 1 41 1 15 1 320 1 66 1 
169 1 26 1 154 1 179 1 138 1 
36 1 165 1 26 2 154 1 179 1 259 1 138 2 236 1 
26 1 179 1 138 1 
0 1 210 1 220 1 26 1 154 1 59 1 12 1 41 1 138 1 320 1 66 1 194 1 
165 1 
135 1 165 1 26 2 154 1 179 1 259 1 138 2 236 1 
185 1 252 1 253 1 152 1 154 2 26 5 274 1 259 1 232 2 211 1 191 1 236 1 77 2 240 1 165 1 179 2 138 5 45 1 105 2 
294 1 
210 2 59 1 41 1 12 2 43 1 319 1 320 2 66 1 
218 1 210 1 59 1 12 1 41 1 287 1 317 1 103 1 320 1 142 1 299 1 
210 3 59 3 12 3 41 3 320 3 142 1 66 1 
210 1 59 1 12 1 41 1 320 1 
210 1 59 1 12 1 41 1 43 1 320 1 319 1 66 1 
210 2 59 2 12 2 41 2 319 1 320 2 142 1 66 1 299 1 
1 1 210 2 314 1 59 1 12 2 41 1 320 2 142 1 
210 1 59 1 12 1 41 1 320 1 142 1 299 1 
210 1 59 1 12 1 41 1 320 1 319 1 66 1 
218 1 287 1 317 1 103 1 
218 1 287 1 317 1 103 1 
67 1 98 1 303 1 258 1 82 1 276 1 222 1 143 2 
210 1 59 1 12 1 41 1 16 1 320 1 
1 1 210 5 314 1 320 5 319 1 299 1 94 1 327 1 59 4 41 4 12 5 142 2 66 1 
210 1 59 1 12 1 41 1 320 1 
38 1 63 1 
38 1 63 1 
51 1 34 1 
51 1 34 1 
51 1 34 1 
38 1 63 1 195 1 
38 1 63 1 93 1 
38 2 285 1 51 1 63 2 34 1 306 1 
38 1 63 1 195 1 
38 1 63 1 195 1 
49 1 38 1 63 1 
49 1 38 1 63 1 
49 1 38 1 63 1 
186 1 86 2 250 1 126 1 69 1 255 1 26 2 318 2 196 1 239 2 165 1 38 2 167 1 285 1 221 3 177 2 138 2 63 2 206 2 
109 1 69 1 272 1 210 2 26 1 188 1 318 1 192 1 320 2 93 1 239 1 38 1 60 1 59 2 221 1 178 1 12 2 177 1 41 2 138 1 63 1 206 1 209 1 
96 1 53 1 321 1 
96 1 260 1 321 1 
9 1 53 2 19 1 260 1 321 3 322 1 
9 1 53 1 19 1 260 1 321 2 158 1 
9 2 53 1 19 1 260 1 321 2 
290 2 259 1 90 3 178 1 101 1 179 1 11 1 138 5 105 1 109 1 110 1 272 1 26 5 154 4 313 1 274 2 232 1 74 1 30 1 191 1 115 1 236 1 237 1 117 1 77 1 79 1 325 1 241 2 165 2 240 3 122 2 336 1 
290 6 169 5 259 1 90 9 214 1 217 1 101 3 179 6 11 2 138 9 105 2 185 1 187 1 68 1 109 4 110 3 26 9 154 7 313 2 70 5 274 6 112 1 232 2 74 3 191 1 115 3 236 1 237 3 117 3 77 2 79 1 164 1 165 5 240 8 122 6 
290 2 90 4 11 1 101 1 138 3 105 1 185 1 109 1 110 1 154 2 26 3 313 1 274 2 232 1 74 1 236 1 115 1 237 2 117 1 77 1 325 1 165 3 240 3 241 1 122 2 336 1 
290 4 90 7 217 1 11 1 101 2 138 4 105 1 185 1 187 1 68 1 109 2 110 2 26 4 313 1 154 3 274 4 232 1 74 2 236 1 115 2 237 3 117 2 77 1 325 1 165 4 240 5 241 2 122 4 336 1 
118 1 227 1 294 1 
118 1 267 1 
311 1 
118 1 62 1 
118 2 311 1 227 2 229 1 268 1 62 1 104 1 
118 1 62 1 104 1 
118 1 224 1 
249 1 110 1 71 1 155 1 28 1 72 2 74 1 31 3 8 2 76 1 219 1 180 3 121 1 332 7 83 1 84 1 65 4 
249 1 110 1 71 1 155 1 28 1 72 2 74 1 31 3 8 2 76 1 219 1 180 3 121 1 332 7 83 1 84 1 65 4 
249 1 110 1 71 1 155 1 28 1 72 2 74 1 31 3 8 2 76 1 263 1 219 1 180 3 121 1 332 7 83 1 84 1 65 4 
249 1 23 1 147 1 110 2 71 2 72 1 74 2 31 6 115 2 117 2 200 2 282 2 329 1 101 2 102 1 180 2 121 2 332 13 182 1 65 7 
249 1 24 1 98 1 71 1 258 1 276 1 72 1 332 1 222 1 143 2 65 1 22 1 
293 1 170 1 4 1 129 1 128 2 6 2 53 1 212 1 89 1 260 1 96 1 302 1 55 1 218 1 18 1 140 1 151 1 315 1 317 1 73 1 75 1 193 1 321 2 322 1 161 1 326 1 39 1 120 1 287 1 123 1 
293 1 170 1 4 1 128 3 6 3 53 1 212 1 89 1 260 1 262 1 96 1 218 1 18 1 140 1 151 1 315 1 317 1 73 1 75 1 193 2 321 2 322 1 235 1 160 1 161 1 326 1 39 1 120 1 287 1 123 1 
293 1 170 1 4 1 128 2 6 2 212 1 89 1 53 1 260 1 96 1 218 1 18 1 151 1 315 1 317 1 73 1 75 1 193 2 321 2 235 1 322 1 160 1 326 1 120 1 287 1 
4 2 128 1 6 1 89 1 174 1 91 1 262 1 218 1 58 1 103 1 18 2 139 1 62 1 140 1 151 2 317 1 156 1 73 1 161 1 118 1 326 2 287 1 331 1 
4 1 128 1 6 1 53 1 212 1 89 1 260 1 96 1 302 1 55 1 218 1 18 1 140 1 151 1 315 1 317 1 73 1 321 2 322 1 160 1 161 1 326 1 39 1 120 1 287 1 123 1 
40 1 
251 1 210 1 5 1 259 1 89 1 301 1 218 2 266 1 58 1 12 1 179 2 15 1 103 2 138 2 62 1 105 1 26 2 313 1 314 1 273 1 274 1 275 1 317 2 232 1 73 1 191 1 320 1 118 1 77 1 240 1 287 2 204 1 331 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 26 2 273 1 314 1 259 1 320 1 135 1 266 1 12 1 179 1 15 1 138 2 204 1 124 1 
251 1 210 1 26 1 314 1 273 1 232 1 191 1 320 1 77 1 266 1 12 1 15 1 138 1 204 1 105 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 266 1 26 1 314 1 273 1 12 1 15 1 138 1 204 1 320 1 124 1 
251 1 210 1 26 1 314 1 273 1 232 1 191 1 320 1 77 1 266 1 12 1 15 1 138 1 204 1 105 1 124 1 
67 1 294 1 155 1 258 1 72 1 28 1 276 1 74 1 8 1 98 1 219 1 303 1 82 1 180 1 332 2 222 1 83 1 143 2 65 2 84 1 
67 1 248 1 258 1 276 1 296 1 31 1 298 1 200 1 282 1 98 1 82 1 332 2 222 1 143 2 65 1 
67 1 2 1 210 1 258 1 276 1 172 1 7 1 31 1 320 1 298 1 299 1 98 1 59 1 41 1 12 1 82 1 332 2 222 1 270 1 143 2 142 1 65 1 
210 1 258 1 298 1 299 1 98 1 218 1 59 1 12 1 103 1 222 1 270 1 142 1 143 2 67 1 225 1 276 1 317 1 31 1 320 1 78 1 286 1 82 1 41 1 287 1 44 1 332 1 
67 1 258 1 276 1 317 1 172 1 98 1 218 1 330 1 82 1 103 1 287 1 332 1 222 1 143 2 65 1 307 1 
210 1 258 1 298 1 98 1 59 1 12 1 101 1 222 1 143 2 66 1 65 1 67 1 110 1 276 1 74 1 31 1 319 1 320 1 115 1 117 1 41 1 82 1 332 2 207 1 
67 1 144 1 258 1 276 1 74 1 115 1 98 1 303 1 82 1 332 1 222 1 143 2 65 1 
67 1 110 1 258 1 276 1 31 1 279 1 117 1 98 1 303 1 82 1 332 1 222 1 143 2 
67 1 110 1 258 1 276 1 74 1 31 1 115 1 117 1 98 1 303 1 82 1 101 1 332 2 222 1 143 2 65 1 
67 1 144 1 258 1 276 1 74 1 115 1 98 1 330 1 82 1 332 1 222 1 143 2 65 1 
67 1 110 1 258 1 276 1 31 1 279 1 117 1 98 1 330 1 82 1 332 1 222 1 143 2 
67 1 110 1 258 1 276 1 74 1 31 1 115 1 117 1 98 1 330 1 82 1 101 1 332 2 222 1 143 2 65 1 
67 1 110 1 258 1 276 1 74 1 31 1 115 1 117 1 98 1 82 1 101 1 332 2 222 1 143 2 65 1 
218 1 286 1 287 1 317 1 103 1 
218 1 316 1 287 1 317 1 103 1 
67 1 110 1 258 1 276 1 74 1 31 1 298 1 115 1 117 1 98 1 82 1 101 1 332 2 222 1 143 2 65 1 
78 1 218 1 286 1 129 1 287 1 317 1 
210 1 3 1 258 1 298 1 98 1 59 1 12 1 101 1 222 1 143 2 66 1 65 1 67 1 110 1 276 1 74 1 31 1 319 1 320 1 115 1 117 1 41 1 82 1 332 2 
258 4 171 1 8 3 98 4 101 8 102 3 14 1 180 12 269 1 22 1 184 1 110 9 276 4 28 2 31 32 33 1 115 8 117 7 281 1 200 6 282 5 121 9 289 1 48 2 292 2 54 1 219 2 222 4 143 8 304 1 65 35 147 3 155 2 72 2 74 10 162 4 163 1 80 1 329 2 242 1 332 67 83 2 335 1 84 2 
48 1 292 2 258 4 171 1 8 2 54 1 98 4 219 1 102 2 101 7 180 9 222 4 269 1 304 1 143 8 65 28 22 1 184 1 147 2 110 7 155 1 72 1 28 1 276 4 74 8 31 25 33 1 115 7 162 4 163 1 117 6 80 1 200 4 281 1 282 4 242 1 329 2 332 53 121 7 83 1 335 1 84 1 289 1 
48 1 292 1 258 2 171 1 8 1 54 1 98 2 219 1 102 2 101 7 180 8 222 2 304 1 143 4 65 27 22 1 184 1 147 2 110 8 155 1 72 1 28 1 276 2 74 8 31 25 33 1 115 7 162 4 163 1 117 7 80 1 200 4 281 1 282 4 242 1 329 2 332 52 121 7 83 1 335 1 84 1 289 1 
258 4 171 1 8 2 98 4 101 8 102 2 180 11 269 1 22 1 184 1 110 8 276 4 28 1 31 27 33 1 115 8 117 7 281 1 200 4 282 4 121 9 289 1 48 1 292 2 54 1 219 1 57 1 222 4 143 8 304 1 65 30 147 2 155 1 72 1 74 9 162 4 163 2 80 1 329 2 242 1 332 57 83 1 335 1 84 1 
48 2 292 2 258 3 171 1 8 1 54 1 98 3 102 2 101 3 180 3 222 3 304 1 143 6 65 14 22 1 184 1 110 2 276 3 74 3 31 12 33 2 115 3 162 4 163 1 117 2 80 1 281 1 200 2 282 2 242 1 121 2 332 26 335 1 289 1 
250 1 239 1 255 1 38 1 285 1 177 1 245 1 318 1 63 1 206 1 
192 1 93 1 
148 1 239 1 38 1 177 1 113 1 318 1 63 1 206 1 261 1 
186 1 86 1 250 1 126 1 69 1 255 1 26 1 318 1 239 1 165 1 38 1 167 1 285 1 221 2 177 1 138 1 63 1 206 1 
186 1 86 1 250 1 126 1 69 1 255 1 26 1 318 1 239 1 165 1 38 1 167 1 285 1 221 2 177 1 138 1 63 1 206 1 
186 1 86 1 250 1 126 1 69 1 255 1 26 1 318 1 239 1 165 1 38 1 167 1 285 1 221 2 177 1 138 1 63 1 206 1 
201 1 306 1 195 1 
201 1 306 1 195 1 
49 1 257 1 
49 1 257 1 306 1 
60 1 188 1 
86 1 210 2 93 1 60 1 59 2 221 1 12 2 177 1 178 1 138 1 63 1 183 1 186 1 109 1 272 1 26 1 154 1 188 1 318 1 192 1 320 2 239 1 38 1 41 2 206 1 209 1 
201 1 195 1 
49 1 257 1 306 1 
146 1 210 1 12 1 320 1 
151 1 256 1 129 1 317 2 53 1 73 1 89 1 212 1 260 1 321 2 322 1 160 1 96 1 218 2 81 1 120 1 287 2 333 1 123 1 
151 1 317 1 53 1 212 1 89 1 73 1 260 1 321 2 322 1 160 1 96 1 218 1 119 1 120 1 287 1 333 1 123 1 
151 1 256 1 317 1 156 1 73 1 89 1 118 1 218 1 58 1 103 1 287 1 62 1 331 1 20 1 
151 1 256 1 317 1 53 1 73 1 212 1 89 1 260 1 321 2 322 1 160 1 96 1 218 1 81 1 120 1 287 1 333 1 123 1 
291 1 
252 1 240 1 165 1 294 1 274 1 45 1 236 1 
125 1 149 1 26 1 274 1 259 1 232 1 191 1 157 1 90 1 236 1 237 1 77 1 165 2 240 1 179 1 138 1 105 1 
50 1 153 1 232 1 317 1 73 2 89 1 191 1 118 1 77 1 218 1 267 1 103 1 287 1 268 1 62 1 104 1 105 1 
290 5 127 2 5 1 171 1 259 1 90 6 54 1 56 1 179 1 102 1 101 2 138 1 105 2 226 1 110 2 313 1 228 1 26 1 274 5 232 2 74 2 191 2 115 2 236 2 237 3 77 2 117 2 80 1 200 1 240 8 165 5 282 1 122 5 335 1 289 1 
47 1 0 1 210 1 127 2 88 1 219 1 220 1 59 1 12 1 138 1 105 1 66 1 110 1 26 1 274 1 232 1 28 1 74 1 191 1 320 1 194 1 77 1 240 2 41 1 84 1 
252 1 274 1 232 1 191 1 236 1 77 1 165 1 240 1 105 1 45 1 
290 5 110 2 228 1 274 5 74 2 90 10 215 1 115 2 237 5 117 2 165 5 240 5 101 2 122 5 
165 1 26 1 179 1 138 1 259 1 236 1 
5 2 259 2 89 1 301 1 218 4 58 1 179 4 103 2 138 3 62 1 105 2 145 1 185 1 108 1 313 2 26 3 274 2 275 1 232 2 317 4 73 1 191 1 118 1 77 2 240 2 202 2 287 4 331 1 46 1 
210 1 317 1 320 1 175 1 218 1 220 1 59 1 286 1 41 1 12 1 103 1 287 1 66 1 
290 2 313 1 274 2 5 1 72 1 232 1 191 1 90 4 236 2 237 2 77 1 240 1 165 4 105 1 122 2 
318 1 206 1 133 1 
250 1 328 1 188 1 318 1 206 1 
318 1 206 1 133 1 
318 1 206 1 133 1 
265 1 318 1 206 1 
265 1 318 1 206 1 
265 1 318 1 206 1 
318 1 206 1 
38 1 63 1 
258 1 8 2 98 1 219 1 102 1 101 1 180 2 222 1 143 2 65 6 22 1 147 1 110 1 155 1 72 1 28 1 276 1 74 2 31 5 115 1 80 1 200 2 282 1 332 11 83 1 84 1 
258 2 131 1 8 2 98 2 219 1 102 1 101 1 180 3 222 2 143 4 65 6 22 1 147 1 110 1 155 1 72 1 28 1 276 2 74 2 31 5 115 1 80 1 200 2 282 1 332 11 121 1 83 1 84 1 
292 1 258 3 171 1 131 1 8 3 54 1 98 3 219 1 102 1 101 2 180 4 222 3 143 6 65 9 22 1 110 3 155 1 72 1 28 1 276 3 74 3 31 10 115 2 117 2 80 1 200 1 282 1 121 1 332 19 83 1 335 1 84 1 289 1 
292 1 258 3 171 1 131 1 8 2 54 1 98 3 219 1 102 1 101 2 180 4 222 3 143 6 65 10 22 1 110 2 155 1 72 1 28 1 276 3 74 3 31 7 115 2 117 1 80 1 200 1 282 1 332 17 121 2 83 1 335 1 84 1 289 1 
258 1 8 2 98 1 219 1 102 1 101 1 180 2 222 1 143 2 65 6 22 1 147 1 110 1 155 1 72 1 28 1 276 1 74 2 31 5 115 1 80 1 200 2 282 1 332 11 83 1 84 1 
258 1 171 1 54 1 98 1 102 1 101 2 180 1 222 1 143 2 65 6 22 1 110 2 276 1 74 2 31 6 115 2 117 2 80 1 200 1 282 1 332 12 121 1 335 1 289 1 
292 2 258 4 171 1 131 1 8 3 54 1 98 4 219 1 102 1 101 2 180 5 222 4 143 8 65 10 22 1 110 2 155 1 72 1 28 1 276 4 74 3 31 8 115 2 117 1 80 1 200 1 282 1 121 2 332 18 83 1 335 1 84 1 289 1 
292 1 258 3 171 1 54 1 98 3 102 1 101 2 180 2 222 3 269 1 143 6 65 7 22 1 110 1 276 3 74 2 31 4 115 2 117 1 80 1 200 1 282 1 332 11 121 2 335 1 289 1 
110 1 155 1 28 1 74 1 31 4 8 3 219 3 180 6 332 7 121 3 83 2 84 3 65 3 
292 2 258 4 171 1 8 3 54 1 98 4 219 1 102 1 101 2 180 4 222 4 269 1 143 8 65 10 22 1 110 2 155 1 72 1 28 1 276 4 74 3 31 8 115 2 117 1 80 1 200 1 282 1 121 1 332 18 83 1 335 1 84 1 289 1 
292 1 110 1 155 1 258 2 72 1 28 1 276 2 74 1 31 4 8 2 98 2 219 1 180 3 332 8 121 1 222 2 83 1 143 4 65 4 84 1 
110 1 294 1 155 1 72 1 28 1 74 1 31 3 8 2 219 1 180 2 332 6 83 1 84 1 65 3 
110 1 258 1 276 1 131 1 74 1 31 2 115 1 117 1 98 1 101 1 332 4 222 1 143 2 65 2 
147 1 110 2 74 2 31 6 115 2 117 2 200 2 282 2 329 1 102 1 101 2 180 2 332 12 121 2 65 6 
248 1 47 1 292 2 258 2 8 5 98 2 219 4 101 2 180 10 222 2 143 4 65 14 147 1 110 4 155 1 72 1 28 2 276 2 74 4 31 16 233 1 115 2 117 2 200 2 282 2 329 1 121 5 332 30 83 1 84 4 
200 1 332 1 31 1 
282 1 332 1 65 1 
110 1 258 1 276 1 131 1 74 1 31 3 215 1 115 1 117 1 98 1 101 1 180 1 332 6 121 1 222 1 143 2 65 3 
258 1 171 1 54 1 98 1 102 1 101 2 180 1 222 1 143 2 65 6 22 1 110 2 276 1 74 2 31 6 115 2 117 2 80 1 200 1 282 1 332 12 121 1 335 1 289 1 
110 1 28 1 74 1 31 3 8 1 219 1 180 2 332 6 121 1 65 3 84 1 
292 1 155 1 258 1 276 1 31 2 8 1 233 1 98 1 219 1 180 2 121 1 332 3 222 1 83 1 143 2 65 1 84 1 
47 1 110 2 258 1 276 1 28 1 74 2 31 5 8 3 98 1 219 2 180 5 121 2 332 10 222 1 143 2 84 2 65 5 22 1 
258 1 276 1 74 1 115 1 98 1 180 1 332 2 121 1 222 1 143 2 65 2 22 1 
110 1 258 1 276 1 74 1 31 2 115 1 117 1 98 1 101 1 180 1 332 4 121 1 222 1 143 2 65 2 22 1 
292 1 258 3 276 3 31 2 233 1 8 1 98 3 219 1 180 2 332 3 121 1 222 3 269 1 143 6 84 1 65 1 22 1 
292 1 258 4 131 1 8 2 98 4 219 1 102 1 101 4 180 6 222 4 182 1 269 1 143 8 65 16 22 1 147 1 110 5 155 1 111 1 72 1 28 1 276 4 74 5 31 16 115 4 117 4 200 4 282 4 283 1 329 1 332 32 121 4 83 1 84 1 
300 1 1 1 210 1 314 1 12 1 320 1 
300 1 1 1 210 1 314 1 10 1 244 1 12 1 297 1 29 1 320 1 234 1 
118 1 294 1 218 1 58 1 287 1 317 1 103 1 73 1 89 1 62 1 331 1 
308 1 210 1 230 1 317 1 73 1 89 1 320 1 118 1 218 1 59 1 41 1 12 1 103 1 287 1 62 1 104 1 142 1 
308 1 210 1 230 1 317 1 73 1 89 1 320 1 118 1 218 1 59 1 41 1 12 1 202 1 287 1 62 1 104 1 142 1 
308 1 210 1 317 1 73 1 89 1 320 1 95 1 118 1 218 1 59 1 41 1 12 1 202 1 287 1 62 1 104 1 142 1 
168 1 0 1 210 1 264 1 218 1 220 1 59 1 12 1 179 1 267 1 138 2 66 1 227 1 26 2 317 1 320 1 236 1 194 1 118 2 165 1 41 1 287 1 202 1 
0 1 210 1 89 1 264 1 218 1 220 1 59 1 12 1 179 1 267 1 138 2 62 1 104 1 224 1 66 1 227 1 26 2 317 1 73 1 320 1 194 1 236 1 324 1 118 4 165 1 41 1 287 1 202 1 208 1 
218 1 287 1 317 1 52 1 73 1 89 1 
150 1 129 1 317 2 89 1 73 2 118 1 238 1 218 2 99 1 181 1 103 1 287 2 268 1 62 1 104 1 
210 1 59 1 12 1 41 1 320 1 142 1 
0 1 47 1 252 1 210 1 127 2 130 1 259 1 173 1 264 1 218 1 220 1 219 1 59 1 12 1 267 1 179 2 103 1 138 3 105 2 66 1 108 1 110 2 227 1 26 3 154 1 274 3 28 1 317 1 232 2 74 1 191 2 320 1 194 1 236 2 323 1 77 2 118 2 240 4 165 2 41 1 287 1 45 1 84 1 208 1 
311 1 227 1 153 1 52 1 317 1 89 1 73 2 118 1 218 1 287 1 268 1 62 1 104 1 
27 1 129 1 317 4 73 1 89 1 118 1 218 4 243 1 58 1 103 1 287 4 331 1 62 1 
317 2 89 1 73 2 280 1 118 1 238 1 136 1 176 1 218 2 202 1 181 1 287 2 62 1 104 1 
96 1 218 1 120 1 287 1 317 1 103 1 73 1 89 1 260 1 321 1 
218 2 129 1 287 2 317 2 271 1 278 1 160 1 
27 1 129 1 317 4 89 2 73 2 278 1 118 3 37 1 218 5 58 1 166 1 202 1 103 1 287 5 331 1 62 2 
27 1 129 1 317 4 89 2 73 2 134 1 278 1 118 3 37 1 218 5 58 1 202 1 103 1 287 5 331 1 62 2 
308 1 210 1 317 1 73 1 89 1 320 1 95 1 118 1 218 1 59 1 41 1 12 1 103 1 287 1 62 1 104 1 142 1 
150 1 317 1 89 1 73 2 118 1 238 1 218 1 181 1 202 1 287 1 268 1 62 1 104 1 
146 1 231 1 42 1 106 1 
100 1 64 1 106 1 
137 1 231 1 42 1 106 1 
137 1 100 1 26 1 154 1 231 1 42 1 138 1 64 1 106 1 198 1 
293 1 170 1 294 1 75 1 
293 1 170 1 128 1 6 1 140 1 75 1 161 1 
326 1 128 1 18 1 
302 1 293 1 170 1 128 3 6 3 189 1 140 1 92 1 75 1 116 1 85 2 161 1 
293 1 170 1 128 2 6 2 114 1 140 1 75 1 193 1 161 1 
293 1 25 1 128 1 6 1 53 1 321 1 161 1 302 1 96 1 140 1 247 1 
302 1 293 1 128 1 6 1 140 1 75 1 161 1 
302 1 170 1 128 1 6 1 140 1 75 2 161 1 
293 1 312 1 128 2 295 1 6 2 75 1 161 2 302 1 140 2 205 1 
293 2 170 1 128 3 6 3 132 1 75 1 193 2 161 1 302 1 246 1 140 1 288 1 247 1 
293 1 170 1 128 2 6 2 53 1 260 1 75 1 321 2 193 1 322 1 161 1 302 1 96 1 140 1 107 1 
293 2 170 1 128 4 6 4 114 1 75 1 193 2 161 2 197 1 302 1 246 1 140 2 247 1 
302 1 293 1 170 1 128 1 6 1 140 1 75 1 161 1 
293 3 170 2 128 4 6 4 189 1 92 1 75 2 193 2 161 1 97 1 246 1 140 1 247 1 85 1 
293 1 170 1 128 2 6 2 213 1 75 1 193 1 161 1 302 1 61 1 140 1 21 1 
302 1 293 1 170 1 128 3 6 3 189 2 140 1 92 1 75 1 216 1 85 2 161 1 
310 1 293 2 284 2 35 1 
302 1 128 1 6 1 140 1 141 1 161 1 
302 1 293 1 170 1 128 2 6 2 140 1 132 1 75 1 193 1 161 1 
305 1 
302 1 293 1 170 1 128 1 6 1 140 1 75 1 161 1 
293 1 170 1 128 3 6 3 132 1 193 1 75 1 161 1 302 1 140 1 85 1 
97 1 293 1 246 1 247 1 
293 1 75 1 

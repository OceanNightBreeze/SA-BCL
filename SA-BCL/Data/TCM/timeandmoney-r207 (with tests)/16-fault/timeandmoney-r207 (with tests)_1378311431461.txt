#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (30,155) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) (121,233) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (121,233) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) (121,233) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (62,86,192,282) (62,86,192,282) (62,86,192,282) 311 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 318 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 311 1 192 1 328 1 
199 1 78 1 318 1 
54 1 43 2 78 1 
56 2 28 2 302 2 161 2 137 1 221 1 117 2 196 2 
211 1 1 1 216 1 137 1 221 1 9 1 56 2 112 1 15 2 302 2 225 1 151 2 19 1 226 1 113 1 117 3 24 1 229 1 196 2 197 1 307 1 28 2 73 1 161 3 232 1 310 1 163 1 165 2 167 1 37 1 126 2 174 1 206 1 128 1 284 1 249 2 209 1 
56 1 28 1 302 1 161 1 266 1 137 1 55 1 259 1 117 1 196 1 
50 1 199 1 161 1 31 1 78 1 259 1 56 1 11 1 59 1 148 1 150 1 268 1 117 1 23 1 
199 1 28 1 161 1 31 1 78 1 259 1 56 1 11 2 59 2 302 1 150 1 268 1 117 1 23 1 196 1 
11 1 59 1 309 1 105 1 261 1 
11 2 59 2 133 1 199 1 78 1 105 1 195 1 261 1 
11 1 59 1 105 1 
28 1 161 1 137 1 55 1 34 1 259 1 261 1 11 1 56 1 59 1 302 1 266 1 117 1 196 1 
78 1 
137 1 55 1 105 1 259 1 261 1 11 2 56 1 59 2 302 1 266 1 267 1 195 1 117 1 196 1 199 1 28 1 161 1 78 1 34 1 
217 2 98 2 137 1 140 1 55 1 186 5 300 4 104 1 259 1 105 2 261 2 56 1 11 5 12 2 59 5 302 1 266 1 153 1 117 1 269 2 195 1 196 1 26 1 28 1 160 1 274 1 199 2 161 1 201 1 203 1 34 1 279 2 78 2 169 1 321 1 44 2 329 1 291 1 
221 1 318 1 
28 1 161 2 221 2 109 1 56 2 319 1 302 1 117 2 196 1 
80 1 30 1 312 1 
211 1 307 1 1 1 119 1 161 1 232 1 73 1 221 1 9 1 126 1 15 1 284 1 249 1 209 1 117 1 197 1 
56 3 38 1 28 3 302 1 161 3 221 1 117 3 196 3 
56 1 28 1 161 1 266 1 259 1 117 1 196 1 
109 1 56 1 28 1 302 1 319 1 161 1 259 1 117 1 196 1 
211 1 1 1 216 1 137 1 6 1 221 1 259 1 9 1 56 3 11 1 59 1 15 1 302 2 150 1 151 1 19 1 226 1 113 1 268 1 23 1 154 1 117 4 24 1 229 1 197 1 196 3 307 1 28 3 275 1 73 1 232 1 161 4 310 1 163 1 31 1 165 2 126 1 38 1 206 1 319 1 128 1 284 1 249 1 209 1 
50 1 56 2 28 1 38 1 39 1 161 2 221 1 117 2 196 1 
28 3 275 1 161 3 31 1 78 1 6 1 259 1 11 1 56 3 59 1 38 2 302 1 319 1 150 1 64 1 268 1 117 3 23 1 196 3 
28 2 161 2 30 1 80 1 56 2 38 1 319 1 302 1 117 2 196 2 
307 1 211 1 1 1 161 1 232 1 73 1 221 1 9 1 126 1 15 1 284 1 249 1 209 1 117 1 197 1 
307 1 211 1 161 1 232 1 73 1 219 1 185 1 221 1 126 1 15 1 284 1 249 1 209 1 117 1 197 1 
141 1 155 1 
56 1 28 1 161 1 236 1 259 1 268 1 117 1 196 1 
211 1 307 1 28 1 1 1 275 1 73 1 232 1 161 2 30 1 9 1 56 1 126 1 38 1 15 1 284 1 249 1 209 1 117 2 197 1 196 1 
28 4 275 1 161 4 259 1 221 1 56 4 38 2 319 1 302 1 20 1 116 1 178 1 117 4 196 4 
56 2 28 2 161 2 236 1 266 1 259 1 117 2 196 2 
179 1 228 1 
179 1 228 1 
181 1 202 1 
181 1 202 1 
181 1 202 1 
179 1 184 1 228 1 
179 1 139 1 228 1 
179 2 14 1 181 1 202 1 207 1 228 2 
179 1 184 1 228 1 
179 1 184 1 228 1 
179 1 188 1 228 1 
179 1 188 1 228 1 
179 1 188 1 228 1 
179 2 231 1 308 2 253 1 2 2 101 1 3 2 4 2 78 1 11 2 59 2 14 1 241 3 127 1 287 1 22 2 131 1 228 2 210 1 
179 1 253 1 52 1 2 1 297 1 139 1 3 1 4 1 221 1 11 1 56 2 59 1 191 1 21 1 228 1 117 2 196 2 70 1 198 1 308 1 28 2 161 2 316 1 241 1 
32 1 92 1 292 1 
177 1 92 1 292 1 
84 1 254 1 235 1 32 2 177 1 92 3 
84 1 17 1 235 1 32 1 177 1 92 2 
84 2 235 1 32 1 177 1 92 2 
0 1 96 2 217 1 298 1 54 1 138 1 186 2 300 3 105 1 261 4 11 5 12 1 59 5 146 1 191 1 269 1 195 1 68 1 198 1 157 1 118 1 199 1 279 1 78 2 316 1 205 1 322 2 323 1 43 3 44 1 48 2 329 1 
137 1 55 1 259 1 105 1 261 2 11 2 56 1 59 2 302 1 266 1 305 1 114 1 117 1 196 1 199 1 28 1 161 1 309 1 78 1 34 1 324 1 
0 1 96 2 217 1 298 1 54 2 138 1 186 2 300 3 261 2 11 3 59 3 12 1 146 1 269 1 68 1 157 1 118 1 199 1 201 1 279 1 78 3 316 1 322 1 44 1 43 4 48 2 
94 1 0 1 96 4 217 1 298 2 54 4 138 1 186 4 300 5 261 3 11 4 59 4 12 2 146 1 269 1 68 2 157 2 118 1 199 1 201 1 164 1 279 2 78 5 316 2 322 2 43 8 44 1 48 4 288 1 
211 1 295 1 318 1 
211 1 304 1 
134 1 
211 1 73 1 
211 3 173 1 73 1 284 1 237 1 295 2 
211 1 73 1 284 1 
211 1 5 1 
51 3 160 1 216 3 279 1 104 1 169 1 260 2 301 1 12 1 110 1 320 1 175 1 225 4 151 7 286 2 246 1 290 1 
51 3 160 1 216 3 279 1 104 1 169 1 260 2 301 1 12 1 110 1 320 1 175 1 225 4 151 7 286 2 246 1 290 1 
271 1 51 3 160 1 216 3 279 1 104 1 169 1 260 2 301 1 12 1 110 1 320 1 175 1 225 4 151 7 286 2 246 1 290 1 
157 1 51 2 216 4 298 1 256 1 279 1 260 1 12 1 263 1 320 1 175 1 85 2 225 4 151 8 286 1 246 2 65 1 245 1 68 1 252 1 
51 4 216 4 104 1 260 2 301 1 12 1 151 9 225 5 226 2 24 2 160 1 310 2 165 4 279 1 169 1 206 2 320 1 175 1 41 1 246 1 286 3 247 1 250 1 290 1 
282 1 62 1 311 1 192 1 328 1 
282 1 62 1 192 1 121 1 328 1 
282 1 233 1 86 1 328 1 
282 1 62 1 192 1 121 1 328 1 
282 1 62 1 311 1 192 1 328 1 
172 1 
255 2 258 2 186 2 7 1 105 6 259 1 106 1 11 5 15 2 18 2 189 1 194 4 268 1 195 3 269 1 117 1 23 1 273 2 199 1 276 2 31 1 126 2 43 2 44 1 209 2 211 1 50 1 132 2 217 1 54 2 142 1 300 2 223 1 56 1 59 5 57 1 146 1 224 1 148 1 303 1 150 1 66 2 71 1 307 1 73 1 74 1 232 1 161 1 78 2 238 1 317 1 89 1 88 1 249 2 329 1 
50 1 142 1 259 1 105 2 223 1 106 1 56 1 11 3 59 3 148 1 303 1 150 1 194 2 267 1 268 1 23 1 117 1 195 1 161 1 276 1 31 1 317 1 
50 1 142 1 105 1 259 1 223 1 106 1 56 1 11 3 59 3 148 1 303 1 150 1 18 1 194 3 267 1 268 1 23 1 117 1 195 1 199 1 161 1 31 1 78 1 317 1 
50 1 142 1 259 1 105 2 223 1 106 1 56 1 11 3 59 3 148 1 303 1 150 1 18 1 194 3 267 1 268 1 195 1 23 1 117 1 66 1 161 1 276 1 31 1 317 1 
95 1 255 2 258 2 186 1 259 2 105 7 106 1 262 1 11 5 18 2 266 1 194 4 267 1 268 1 23 1 117 2 195 3 269 1 196 1 273 2 28 1 199 1 276 4 31 1 34 1 44 1 50 1 132 2 217 1 137 1 54 2 142 1 55 1 300 1 223 1 56 2 59 5 302 1 148 1 303 1 150 1 66 4 161 2 78 1 166 1 238 1 317 1 82 1 83 1 88 1 329 1 
255 2 258 2 186 1 259 1 105 4 106 1 11 4 18 2 194 4 268 1 23 1 117 1 269 1 195 2 273 2 199 1 276 2 31 1 44 1 43 2 50 1 132 2 217 1 54 2 142 1 300 1 223 1 56 1 59 4 148 1 224 1 303 1 150 1 66 2 161 1 78 2 238 1 317 1 88 1 329 1 
50 1 132 2 95 1 217 1 255 2 54 2 258 2 142 1 186 1 300 1 105 4 259 1 223 1 106 1 262 1 56 1 11 4 59 4 148 1 303 1 18 2 150 1 194 4 268 1 66 2 195 2 23 1 117 1 269 1 273 2 199 1 276 2 161 1 31 1 78 1 238 1 317 1 82 1 44 1 88 1 329 1 
50 1 132 2 95 1 217 1 255 2 54 2 258 2 142 1 186 1 300 1 105 4 259 1 223 1 106 1 262 1 56 1 11 4 59 4 148 1 303 1 18 2 150 1 194 4 268 1 66 2 195 2 23 1 117 1 269 1 273 2 199 1 276 2 161 1 31 1 78 1 238 1 317 1 82 1 44 1 88 1 329 1 
50 1 95 1 217 1 258 2 142 1 186 1 102 1 300 1 105 4 259 1 223 1 106 1 144 2 56 1 11 4 59 4 148 1 303 1 18 2 150 1 194 4 268 1 66 2 195 2 23 1 117 1 269 1 273 2 199 1 276 2 161 1 31 1 77 2 78 1 238 1 317 1 43 2 44 1 327 1 329 1 93 1 
50 1 137 1 142 1 55 1 259 2 105 1 223 1 106 1 56 2 11 2 59 2 302 1 148 1 303 1 150 1 18 1 266 1 194 3 268 1 23 1 117 2 66 1 196 1 28 1 199 1 161 2 276 1 31 1 34 1 78 1 166 1 317 1 
50 1 137 1 142 1 55 1 259 2 105 1 223 1 106 1 56 2 11 2 59 2 302 1 148 1 303 1 150 1 18 1 266 1 194 3 268 1 23 1 117 2 66 1 196 1 28 1 199 1 161 2 276 1 31 1 34 1 78 1 166 1 317 1 
258 2 186 1 259 1 105 4 106 1 11 4 18 2 194 4 268 1 23 1 117 1 269 1 195 2 273 2 199 1 276 2 31 1 44 1 43 2 50 1 217 1 142 1 300 1 223 1 144 2 56 1 59 4 148 1 224 1 303 1 150 1 66 2 161 1 77 2 78 1 238 1 317 1 329 1 93 1 
141 1 318 1 
212 1 51 2 216 6 298 1 256 1 100 1 257 1 221 1 12 2 61 1 151 14 225 8 226 2 24 2 68 2 229 1 157 2 30 11 310 2 163 2 33 1 312 11 165 4 279 1 167 1 80 4 320 1 206 2 128 1 85 3 286 1 245 3 252 1 
211 1 1 1 216 1 100 1 221 1 9 1 56 1 15 1 151 2 225 1 226 1 117 2 24 1 197 1 196 1 229 1 307 1 28 1 119 1 275 1 73 1 232 1 161 2 162 1 310 1 163 1 165 2 167 1 125 1 80 1 126 1 38 1 206 1 128 1 284 1 249 1 209 1 294 1 
1 2 100 1 104 1 8 1 260 1 9 2 12 3 15 3 113 2 117 3 24 3 196 1 197 2 27 1 28 1 275 1 120 1 30 7 279 3 122 2 124 2 126 3 38 1 206 3 128 3 40 1 284 2 286 4 209 1 290 1 211 2 51 8 216 10 53 2 298 2 221 2 222 2 301 1 56 1 151 20 225 10 226 3 68 2 229 1 307 2 157 2 160 1 161 3 232 2 73 2 163 3 310 3 312 7 165 6 167 1 169 1 80 7 320 4 249 3 
213 1 211 3 182 1 216 1 141 1 220 1 107 1 56 1 58 1 15 8 225 1 151 2 226 1 117 1 24 1 196 1 229 1 72 1 307 2 28 1 161 1 232 2 74 1 73 2 310 1 163 1 165 2 167 1 126 8 37 2 243 1 38 1 206 1 128 1 40 1 89 1 249 7 209 2 90 1 
51 1 216 2 298 1 100 1 56 1 12 1 302 1 225 1 151 3 226 1 117 1 24 1 25 1 68 1 196 1 157 1 28 1 161 1 30 1 310 1 163 1 312 1 165 2 279 1 80 1 319 1 206 1 128 1 286 1 
141 1 
141 1 
141 1 
157 1 51 1 30 1 163 1 310 1 312 1 165 2 80 1 58 1 12 1 320 1 206 1 128 1 129 1 151 2 225 2 226 1 24 1 
51 1 216 2 30 1 298 1 163 1 310 1 312 1 165 2 279 1 80 1 58 1 206 1 128 1 151 2 226 1 286 1 130 1 24 1 
51 2 216 2 298 1 12 1 58 1 225 2 151 4 226 1 68 1 24 1 157 1 30 2 310 1 163 1 312 2 165 2 279 1 80 2 206 1 320 1 128 1 286 1 
51 2 216 2 298 1 12 1 151 4 225 2 226 1 68 1 24 1 157 1 30 2 310 1 163 1 312 2 165 2 279 1 80 2 206 1 320 1 128 1 286 1 
211 1 1 1 216 1 221 1 9 1 15 1 225 1 151 2 226 1 113 1 117 1 24 1 197 1 229 1 307 1 73 1 232 1 161 1 163 1 310 1 165 2 167 1 126 1 206 1 128 1 284 1 249 1 209 1 
211 1 216 1 136 1 219 1 185 1 221 1 15 1 225 1 151 2 226 1 117 1 24 1 197 1 229 1 307 1 73 1 232 1 161 1 163 1 310 1 165 2 167 1 126 1 206 1 128 1 284 1 249 1 209 1 
51 2 216 2 298 1 100 1 12 1 225 2 151 4 226 1 68 1 24 1 157 1 30 2 310 1 163 1 312 2 165 2 279 1 80 2 206 1 320 1 128 1 286 1 
211 1 51 2 1 1 216 2 298 1 9 1 12 1 15 1 151 4 225 2 226 1 113 1 117 1 24 1 68 1 197 1 157 1 307 1 232 1 73 1 161 1 30 2 163 1 310 1 312 2 165 2 279 1 124 1 80 2 126 1 243 1 320 1 206 1 128 1 284 1 286 1 249 1 
51 1 216 1 298 1 100 1 56 1 12 1 302 1 190 1 225 2 151 3 226 1 117 1 24 1 68 1 196 1 157 1 28 1 161 1 30 1 310 1 163 1 312 1 165 2 279 1 80 1 320 1 319 1 206 1 128 1 
51 6 216 10 298 3 256 1 143 1 265 1 12 3 149 2 151 19 225 9 226 2 24 2 68 3 157 3 234 1 310 2 165 4 279 3 314 1 81 1 281 1 206 2 320 3 85 2 41 1 176 2 45 1 286 3 245 1 252 1 
51 4 216 12 298 2 256 2 103 1 264 1 265 1 12 3 149 1 151 26 225 14 152 1 226 3 24 3 68 3 157 3 200 1 310 3 165 6 279 2 314 1 280 1 81 1 281 2 320 2 206 3 41 1 85 2 176 4 45 2 46 1 286 2 245 2 247 2 
256 3 103 1 104 1 260 1 12 5 265 1 264 1 24 3 200 1 279 5 280 1 281 1 206 3 41 1 45 2 286 4 46 1 290 1 51 8 216 21 298 4 301 1 149 1 225 20 151 41 152 1 226 3 68 4 157 4 159 1 160 1 234 1 310 3 165 6 314 1 169 1 81 1 320 4 85 4 176 4 245 3 247 1 252 1 
51 7 216 18 298 3 256 3 103 1 104 1 260 1 301 1 264 1 265 1 12 5 149 1 151 38 225 20 152 1 226 4 24 4 68 4 157 4 159 1 160 1 200 1 234 1 310 4 165 8 279 4 314 1 169 1 280 1 81 1 281 1 206 4 320 3 85 4 41 1 176 4 45 2 46 1 286 4 245 3 247 2 290 1 252 1 
51 14 216 25 298 7 256 2 103 1 104 1 260 1 301 1 264 1 265 1 12 8 149 1 61 2 151 52 225 27 152 1 226 2 24 2 68 7 157 7 160 1 200 1 310 2 165 4 279 8 314 1 169 1 280 1 81 1 281 1 206 2 320 7 85 4 41 1 176 4 45 1 46 1 286 7 245 4 247 1 290 1 252 2 
179 1 231 1 14 1 308 1 2 1 277 1 3 1 287 1 4 1 228 1 
297 1 139 1 
179 1 308 1 60 1 2 1 63 1 3 1 4 1 168 1 228 1 
179 1 231 1 308 1 253 1 2 1 101 1 3 1 4 1 78 1 11 1 59 1 14 1 241 2 127 1 287 1 22 1 228 1 210 1 
179 1 231 1 308 1 253 1 2 1 101 1 3 1 4 1 78 1 11 1 59 1 14 1 241 2 127 1 287 1 22 1 228 1 210 1 
179 1 231 1 308 1 253 1 2 1 101 1 3 1 4 1 78 1 11 1 59 1 14 1 241 2 127 1 287 1 22 1 228 1 210 1 
180 1 184 1 207 1 
180 1 184 1 207 1 
188 1 123 1 
188 1 207 1 123 1 
52 1 21 1 
179 1 52 1 2 1 297 1 139 1 3 1 4 1 221 1 261 1 11 1 56 2 59 1 191 1 21 1 22 1 117 2 228 1 70 1 196 2 198 1 308 1 28 2 29 1 161 2 316 1 127 1 241 1 
180 1 184 1 
188 1 207 1 123 1 
211 1 182 1 97 1 183 1 216 1 100 1 99 1 107 1 56 2 15 2 225 1 151 2 226 1 115 1 117 2 24 1 229 1 307 1 232 1 73 1 161 2 310 1 163 1 165 2 167 1 240 1 126 2 37 2 206 1 128 1 249 2 
307 1 214 1 135 1 254 1 232 1 32 1 79 1 126 2 187 1 15 2 243 1 40 1 177 1 47 1 249 2 289 1 92 2 292 1 270 1 
307 1 214 1 135 1 254 1 232 1 32 1 79 1 126 1 15 1 40 1 177 1 249 1 306 1 289 1 92 2 292 1 270 1 
307 1 211 1 232 1 73 1 74 1 126 1 15 1 89 1 47 1 249 1 209 1 289 1 293 1 69 1 
307 1 214 1 135 1 254 1 232 1 32 1 79 1 126 1 187 1 15 1 40 1 177 1 47 1 249 1 289 1 92 2 292 1 270 1 
215 1 
199 1 321 1 186 1 300 1 78 1 291 1 318 1 
132 1 217 1 255 1 54 1 186 1 300 1 105 1 11 1 59 1 269 1 195 1 199 1 78 2 44 1 43 1 88 1 329 1 
211 4 217 2 299 1 300 1 105 2 11 2 59 2 147 1 146 1 15 1 304 2 227 1 195 1 269 2 307 1 272 1 73 1 232 2 31 1 315 1 173 1 126 1 42 1 284 1 44 2 249 1 209 1 329 2 330 1 295 1 
96 5 217 2 98 2 298 2 256 1 54 3 103 1 186 5 7 1 300 8 105 1 11 1 264 1 59 1 13 1 12 2 146 1 152 1 195 1 269 2 68 2 157 2 199 2 200 1 203 1 78 5 279 2 280 1 85 1 43 6 44 2 48 5 245 1 329 2 251 1 
217 1 98 2 137 1 186 2 55 1 104 1 300 2 259 1 262 1 11 1 56 1 59 1 12 2 302 1 266 1 117 1 269 1 196 1 26 1 160 1 28 1 161 1 203 1 279 1 34 1 169 1 44 1 329 1 
199 1 217 1 186 1 78 1 300 1 321 1 44 1 329 1 291 1 269 1 
157 2 96 5 53 1 98 2 298 2 54 5 186 5 203 1 78 5 279 2 300 5 12 2 43 10 48 5 68 2 
11 1 59 1 199 1 78 1 105 1 195 1 
211 2 217 2 186 2 300 2 7 2 105 4 11 3 59 3 111 1 146 2 15 4 189 1 269 2 195 2 156 1 307 2 71 1 158 1 232 3 73 2 74 1 201 1 36 1 126 4 242 1 284 1 244 1 44 2 325 2 89 1 248 1 249 4 329 1 209 2 
211 1 1 1 216 1 137 1 221 1 9 1 56 2 15 1 302 2 151 1 19 1 226 1 113 1 117 3 24 1 229 1 196 2 197 1 307 1 28 2 161 3 232 1 73 1 163 1 310 1 165 2 126 1 206 1 128 1 284 1 249 1 209 1 
96 2 199 2 217 1 54 2 186 2 300 1 78 4 7 1 260 1 146 1 43 4 44 1 48 2 329 1 269 1 
308 1 4 1 91 1 
231 1 308 1 52 1 278 1 4 1 
308 1 4 1 91 1 
308 1 4 1 91 1 
296 1 308 1 4 1 
296 1 308 1 4 1 
296 1 308 1 4 1 
308 1 4 1 
179 1 228 1 
51 3 160 1 216 4 310 2 165 4 279 1 104 1 169 1 260 1 301 1 12 1 320 1 206 2 151 8 225 4 226 2 286 2 247 1 290 1 24 2 
301 1 12 1 51 2 160 1 216 3 151 6 225 3 286 2 279 1 104 1 169 1 290 1 260 1 318 1 
157 1 51 2 216 2 298 1 310 1 165 2 279 1 12 1 204 1 206 1 320 1 225 2 151 4 226 1 286 1 24 1 68 1 
157 1 51 2 216 4 298 1 256 1 279 1 12 1 320 1 85 2 151 7 225 3 286 1 245 1 252 1 68 1 
51 9 216 12 298 2 218 1 104 2 260 1 301 1 12 3 61 1 225 11 151 23 226 2 68 2 24 2 157 2 160 1 310 2 33 1 165 4 279 3 169 2 320 4 206 2 85 2 245 2 286 5 247 2 290 1 252 1 
216 1 85 1 151 1 
151 1 225 1 245 1 
157 1 51 3 216 3 53 1 298 1 310 1 165 2 279 1 12 1 204 1 206 1 320 1 151 6 225 3 226 1 286 2 24 1 68 1 
51 2 216 6 298 2 256 1 103 1 12 2 264 1 151 12 225 6 152 1 226 1 24 1 68 2 157 2 200 1 310 1 165 2 279 2 280 1 320 1 206 1 85 1 41 1 245 1 286 1 
51 2 160 1 216 3 279 1 104 1 169 1 12 1 320 1 225 3 151 6 286 1 
51 2 216 2 218 1 310 1 165 2 104 1 169 1 301 1 320 1 206 1 225 1 151 3 226 1 286 1 247 1 290 1 24 1 
26 1 51 6 160 1 216 6 104 2 279 2 169 2 12 2 320 3 225 6 151 12 286 3 
157 1 51 1 310 1 165 2 12 1 206 1 320 1 41 1 225 2 151 2 226 1 24 1 
157 1 51 2 216 2 298 1 310 1 165 2 279 1 12 1 206 1 320 1 41 1 225 2 151 4 226 1 286 1 24 1 68 1 
51 2 216 2 234 1 218 1 310 3 165 6 104 1 169 1 206 3 320 1 41 1 151 3 225 1 226 3 286 1 247 1 24 3 
51 4 216 6 256 1 104 1 301 1 12 2 151 12 225 6 226 3 65 1 24 3 26 1 160 1 234 1 310 3 165 6 279 2 169 1 204 1 320 2 206 3 85 1 41 1 286 2 245 1 290 1 
51 2 216 4 256 1 103 1 104 1 260 1 301 1 12 1 151 8 225 4 226 1 24 1 160 1 310 1 165 2 279 1 169 1 206 1 85 1 41 1 245 1 286 2 290 1 
51 3 216 5 256 1 103 1 104 1 260 1 301 1 12 2 151 11 225 6 226 2 24 2 68 1 157 1 160 1 310 2 165 4 279 1 169 1 204 1 206 2 320 1 85 2 41 1 286 2 245 1 290 1 252 1 
51 4 216 10 298 2 256 1 103 1 104 1 260 1 301 1 12 3 264 1 151 19 225 9 152 1 226 3 24 3 68 2 157 2 160 1 200 1 310 3 165 6 279 3 169 1 280 1 204 1 320 1 206 3 85 1 41 1 245 1 286 3 247 1 290 1 
51 5 216 7 298 1 256 1 103 1 104 1 260 1 301 1 12 3 264 1 151 17 225 10 152 1 226 3 24 3 68 2 157 2 160 1 200 1 310 3 165 6 279 2 169 1 280 1 204 1 320 2 206 3 85 1 41 1 245 1 286 3 247 1 290 1 
51 2 216 4 256 1 103 1 104 1 260 1 301 1 12 1 151 8 225 4 226 1 24 1 160 1 310 1 165 2 279 1 169 1 206 1 85 1 41 1 245 1 286 2 290 1 
51 2 216 6 298 2 256 1 103 1 12 2 264 1 151 12 225 6 152 1 226 1 24 1 68 2 157 2 200 1 310 1 165 2 279 2 280 1 320 1 206 1 85 1 41 1 245 1 286 1 
51 5 216 8 298 1 256 1 103 1 104 1 260 1 301 1 264 1 12 3 151 18 225 10 152 1 226 4 24 4 68 2 157 2 160 1 200 1 310 4 165 8 279 2 169 1 280 1 204 1 320 2 206 4 85 1 41 1 245 1 286 3 247 2 290 1 
51 6 216 7 298 2 256 1 103 1 264 1 12 3 151 16 225 9 152 1 226 4 24 4 68 3 157 3 200 1 234 1 310 4 165 8 279 2 280 1 320 3 206 4 85 1 41 1 245 1 286 3 247 2 
51 6 160 1 216 4 279 1 104 3 169 3 301 2 12 1 320 3 151 7 225 3 286 3 290 1 
51 4 216 8 298 1 256 1 103 1 104 1 260 1 301 1 264 1 12 3 151 18 225 10 152 1 226 4 24 4 68 2 157 2 160 1 200 1 234 1 310 4 165 8 279 2 169 1 280 1 320 1 206 4 85 1 41 1 245 1 286 3 247 2 290 1 
56 1 50 1 161 1 39 1 76 1 221 1 117 1 
49 1 50 1 161 1 75 1 76 1 221 1 35 1 239 1 171 1 56 1 39 1 117 1 
307 1 211 1 126 1 15 1 232 1 73 1 74 1 89 1 249 1 209 1 318 1 
211 1 307 1 28 1 73 1 232 1 161 2 221 1 9 1 56 1 126 1 38 1 15 1 284 1 249 1 209 1 117 2 197 1 196 1 
211 3 5 1 221 1 259 1 9 1 56 2 15 1 150 1 268 1 117 2 196 2 197 1 307 1 28 1 161 2 232 1 73 2 126 1 38 1 284 2 87 1 325 1 249 1 
211 3 219 1 5 1 221 1 259 1 56 2 15 2 150 1 268 1 117 2 196 2 197 1 307 1 28 1 161 2 232 1 73 2 126 2 38 1 284 2 87 1 325 1 285 1 249 2 
211 4 307 1 199 1 73 1 232 1 31 1 5 1 78 1 105 1 108 1 11 2 59 2 126 3 15 3 16 1 284 1 87 1 304 1 325 1 285 1 249 3 209 1 295 1 
211 4 307 1 199 1 73 1 232 1 31 1 5 1 78 1 105 1 11 2 59 2 126 3 15 3 284 1 87 1 304 1 325 1 285 1 249 3 209 1 330 1 295 1 
307 1 126 1 15 1 232 1 249 1 90 1 
72 1 213 1 211 3 307 2 158 1 182 1 73 2 232 3 313 1 220 1 173 1 37 1 126 7 243 1 15 7 40 1 284 1 249 6 248 1 209 2 90 1 
211 1 51 2 1 1 216 3 100 1 99 1 104 1 221 2 222 1 260 1 9 1 301 1 56 1 12 1 15 1 151 6 225 3 226 2 113 1 117 2 24 2 197 1 196 1 307 1 160 1 28 1 73 1 232 1 161 2 30 1 310 2 163 2 312 1 165 4 279 1 124 1 169 1 80 1 126 1 38 1 243 1 206 2 128 2 284 1 286 2 249 1 290 1 
211 2 217 2 299 1 186 1 300 1 105 2 261 1 11 3 59 3 15 1 304 1 269 2 195 1 272 1 199 1 31 1 78 1 315 1 36 1 126 1 321 1 44 2 249 1 209 1 329 2 291 1 330 1 295 1 
211 2 307 1 134 1 73 1 232 2 173 1 126 1 147 1 15 1 284 1 249 1 90 1 295 1 
211 1 307 1 232 1 74 1 73 1 10 1 126 4 15 4 243 1 89 1 285 1 249 4 209 1 
211 1 307 1 158 1 120 1 73 1 232 2 126 2 15 2 284 1 244 1 325 1 249 2 248 1 156 1 
307 1 126 1 15 1 232 1 177 1 249 1 209 1 92 1 292 1 270 1 
211 1 307 1 182 1 73 1 232 1 240 1 126 2 243 1 15 2 40 1 249 2 
211 3 307 2 72 1 182 1 74 1 73 2 232 2 220 1 10 1 126 5 15 5 243 1 325 1 89 1 249 4 209 1 
211 3 307 2 72 1 182 1 74 1 73 2 232 2 170 1 10 1 126 5 15 5 243 1 325 1 89 1 249 4 209 1 
211 1 307 1 28 1 73 1 232 1 161 2 219 1 221 1 56 1 126 1 38 1 15 1 284 1 249 1 209 1 117 2 197 1 196 1 
211 1 307 1 158 1 73 1 232 2 313 1 173 1 126 1 15 1 284 1 325 1 249 1 248 1 
230 1 183 1 97 1 161 1 56 1 145 1 326 1 115 1 117 1 
230 1 193 1 208 1 
230 1 145 1 326 1 221 1 67 1 
230 1 199 1 31 1 78 1 6 1 221 1 259 1 261 1 11 2 59 2 145 2 150 1 283 1 326 2 193 1 208 1 268 1 67 2 23 1 

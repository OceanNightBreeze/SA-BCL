#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (145,167) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (145,167) 85 202 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (145,167) 85 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 3 52 89 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 342 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 243 21 220 258 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 342 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 4 139 1 143 2 336 1 6 2 7 2 269 1 228 1 147 5 79 1 148 1 320 1 127 1 322 2 277 1 128 1 347 1 86 9 349 1 169 1 192 1 34 2 238 9 110 3 132 2 134 6 94 2 310 1 
0 4 139 1 143 2 336 1 6 2 7 2 269 1 228 1 147 5 79 1 148 1 320 1 127 1 322 2 277 1 128 1 347 1 86 9 349 1 169 1 192 1 34 2 238 9 110 3 132 2 134 6 94 2 310 1 
0 5 139 1 143 2 336 1 6 2 7 2 269 1 228 1 147 6 79 1 148 1 320 1 127 1 322 2 277 1 128 1 347 1 86 10 349 1 169 1 192 1 34 2 238 10 110 4 132 2 134 7 94 2 310 1 
0 3 139 1 143 2 336 1 6 2 7 2 269 1 228 1 147 4 79 1 148 1 320 1 127 1 322 2 277 1 128 1 86 7 349 1 169 1 192 1 34 2 238 7 110 2 132 2 134 4 94 1 310 1 
0 2 347 1 86 4 349 1 169 1 34 1 143 1 336 1 6 1 110 1 238 4 132 1 134 3 147 3 79 1 94 2 320 1 322 1 
190 1 86 2 349 1 46 1 169 1 34 1 192 1 35 1 143 1 336 1 6 1 7 1 238 2 269 1 147 1 322 1 
0 1 128 1 86 3 349 1 169 1 143 2 336 1 6 2 7 1 238 3 110 1 147 2 134 1 
0 4 76 1 142 1 143 2 336 1 6 2 7 1 228 1 147 5 148 1 79 1 320 1 322 1 128 1 86 9 347 1 349 1 169 1 34 1 110 3 238 9 132 1 134 7 94 2 
0 4 76 1 142 1 143 2 336 1 6 2 7 1 228 1 147 5 148 1 79 1 320 1 322 1 128 1 86 9 347 1 349 1 169 1 34 1 110 3 238 9 132 1 134 7 94 2 
55 1 342 1 9 1 
55 1 248 1 303 2 
129 2 180 2 317 2 282 2 212 1 326 1 328 2 353 2 
97 1 4 1 315 1 223 1 299 1 121 1 337 1 56 1 338 2 317 3 319 1 28 1 29 1 302 1 208 2 129 2 209 1 282 2 212 1 325 1 171 1 352 2 326 1 173 1 328 2 353 3 289 2 355 1 305 2 180 2 290 1 308 1 71 1 74 1 263 1 313 1 115 1 
129 1 180 1 317 1 282 1 231 1 193 1 326 1 328 1 175 1 353 1 
11 1 129 1 235 1 297 1 201 1 353 1 175 1 331 1 304 1 55 1 189 1 317 1 205 1 9 1 
11 1 129 1 235 2 282 1 297 2 328 1 353 1 175 1 331 1 304 1 55 1 180 1 189 1 317 1 9 1 
235 1 140 1 297 1 341 1 80 1 
256 1 111 1 235 2 55 1 297 2 341 1 80 1 9 1 
235 1 297 1 341 1 
235 1 129 1 141 1 282 1 297 1 193 1 326 1 328 1 175 1 353 1 180 1 317 1 231 1 80 1 
55 1 
111 1 235 2 55 1 297 2 341 1 80 1 9 1 131 1 
96 1 235 5 350 1 297 5 37 1 176 1 23 2 120 1 111 1 187 1 55 1 146 2 339 1 215 1 204 2 341 2 80 2 9 1 44 1 
208 1 129 1 4 1 171 1 223 1 194 1 173 1 299 1 328 1 353 2 121 1 109 1 305 1 180 1 338 1 317 2 340 1 71 1 263 1 74 1 
342 1 212 1 
129 2 64 1 282 1 212 2 49 1 328 1 353 2 180 1 317 2 
318 1 48 1 194 1 
208 1 4 1 212 1 171 1 223 1 173 1 299 1 353 1 13 1 121 1 305 1 338 1 317 1 71 1 74 1 263 1 
117 1 129 5 64 1 199 1 161 1 282 1 201 1 212 1 328 4 353 5 109 1 180 4 317 5 340 2 
24 1 129 2 180 2 317 2 193 1 328 2 175 1 353 2 
129 3 180 3 317 3 282 1 340 1 212 1 328 3 353 3 
129 1 180 1 317 1 193 1 328 1 175 1 353 1 
129 1 64 1 180 1 317 1 282 1 49 1 328 1 175 1 353 1 
4 1 315 1 297 1 223 1 299 1 121 1 337 1 56 1 189 1 338 1 317 4 340 1 319 1 301 1 11 1 302 1 208 1 64 1 129 3 235 1 209 1 282 2 107 1 212 1 325 1 171 1 352 2 326 1 173 1 328 3 353 4 175 1 109 1 289 1 355 1 331 1 304 1 305 1 180 3 290 1 71 1 263 1 74 1 313 1 
117 1 129 2 180 1 317 2 340 1 212 1 201 1 328 1 353 2 
11 1 64 1 235 1 129 3 282 1 297 1 107 1 285 1 328 3 175 1 353 3 109 1 331 1 304 1 55 1 180 3 189 1 317 3 340 2 
64 1 129 2 282 1 328 2 194 1 353 2 180 2 317 2 340 1 318 1 
208 1 4 1 212 1 171 1 223 1 299 1 173 1 353 1 121 1 305 1 338 1 317 1 71 1 74 1 263 1 
208 1 212 1 175 1 250 1 305 1 338 1 74 1 10 1 
243 1 266 1 315 1 48 2 267 1 144 1 337 1 58 1 318 2 28 2 302 1 279 1 209 2 170 1 153 1 325 1 352 2 194 2 195 1 289 4 355 1 93 1 218 1 313 1 
24 1 304 1 129 1 180 1 317 1 328 1 175 1 353 1 
287 1 145 1 
287 1 145 1 
167 1 43 1 
167 1 43 1 
167 1 43 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 145 1 
287 1 85 1 145 1 235 1 297 1 154 1 202 1 
287 1 85 1 145 1 154 1 
132 1 34 1 322 1 
46 1 34 1 322 1 
295 1 132 2 46 1 34 3 118 1 242 1 
295 1 132 1 46 1 34 2 242 1 177 1 
132 1 295 2 46 1 34 2 242 1 
243 1 1 1 297 5 100 1 248 1 21 1 144 1 23 1 55 2 58 1 146 1 204 1 341 1 80 4 63 1 62 2 9 1 31 2 168 2 235 5 348 1 279 1 280 1 350 3 259 1 303 3 37 2 15 1 111 1 178 1 215 1 42 1 
140 1 141 1 297 2 55 1 317 1 231 1 341 1 80 2 9 1 235 2 129 1 282 1 193 1 327 1 326 1 328 1 175 1 353 1 196 1 180 1 73 1 
243 1 1 1 297 3 100 1 248 2 21 1 144 1 23 1 187 1 55 3 58 1 146 1 204 1 80 2 62 2 9 1 31 1 235 3 168 2 279 1 280 1 350 3 37 2 303 4 178 1 42 1 
243 2 1 1 160 1 221 1 297 4 100 2 248 3 21 2 268 1 144 2 23 1 187 1 55 4 58 2 146 1 204 1 80 3 62 4 9 1 31 2 168 4 235 4 279 2 280 1 350 5 303 7 37 4 178 1 42 1 
300 1 342 1 173 1 
78 1 173 1 
216 1 
4 1 171 1 173 1 
233 1 173 1 
4 1 173 1 
300 2 330 1 4 1 171 1 149 1 173 3 
294 1 267 5 58 3 344 1 254 2 28 8 104 2 65 2 279 3 209 7 153 4 239 1 289 15 156 2 157 1 17 1 311 1 312 1 
294 1 267 7 58 3 344 1 254 2 28 8 104 2 65 2 279 3 209 7 153 4 239 1 289 15 156 2 157 3 17 1 311 1 312 1 
294 1 267 5 58 3 344 1 254 2 61 1 28 8 104 2 65 2 279 3 209 7 153 4 239 1 289 15 157 1 156 2 17 1 311 1 312 1 
243 3 294 1 2 3 315 1 21 3 267 14 144 3 271 4 229 1 77 1 58 6 344 2 254 3 28 21 104 2 65 3 279 6 209 20 106 1 151 1 153 7 325 1 352 2 239 1 288 1 289 41 156 3 157 7 355 1 17 1 241 1 136 1 311 1 313 1 312 2 
104 1 279 1 65 1 209 2 283 1 315 1 153 1 325 1 352 2 267 1 239 1 289 6 156 1 355 1 58 1 344 1 166 1 254 2 311 1 28 4 312 1 313 1 
46 1 99 1 118 1 143 1 336 1 6 1 299 1 7 1 224 1 227 1 122 1 338 1 8 1 147 1 165 1 203 1 125 1 322 1 208 1 86 2 349 1 169 1 210 1 34 2 238 2 132 1 305 1 134 1 137 1 263 1 
46 1 118 1 99 1 143 1 336 1 6 1 299 1 7 1 225 1 227 1 102 1 122 1 338 1 8 1 147 1 165 1 203 1 82 1 322 1 208 1 86 3 169 1 210 1 34 2 238 3 132 1 305 1 134 2 137 1 263 1 
46 1 118 1 336 1 299 1 7 1 225 1 227 1 122 1 338 1 147 1 165 1 203 1 82 1 322 1 208 1 86 2 169 1 210 1 34 2 238 2 305 1 132 1 134 2 137 1 263 1 
314 1 4 1 143 1 299 1 6 1 7 2 54 1 227 2 102 1 122 2 338 1 203 2 343 1 83 1 208 1 86 1 278 1 284 1 173 1 238 1 305 1 74 1 263 1 
46 1 99 1 118 1 143 1 6 1 299 1 7 1 227 1 122 1 338 1 8 1 165 1 203 1 82 1 125 1 322 1 208 1 86 1 349 1 210 1 34 2 238 1 132 1 305 1 137 1 263 1 
296 1 
314 1 3 1 4 1 186 2 188 1 270 2 55 1 146 1 234 1 275 1 276 1 235 4 66 1 236 2 284 1 111 3 113 2 18 2 74 2 246 2 297 4 248 2 299 1 22 1 23 1 338 2 163 2 341 6 204 1 255 1 208 2 33 1 350 2 37 2 303 2 172 2 173 1 178 1 305 2 215 1 263 1 219 1 
111 1 33 1 276 1 235 2 236 1 297 2 341 2 22 1 131 1 
33 1 276 1 235 1 297 1 18 1 172 1 22 1 
276 1 33 1 235 2 236 1 297 2 172 1 22 1 131 1 111 1 186 1 341 2 18 1 
3 1 141 1 52 1 53 1 186 4 270 2 55 2 317 1 146 1 231 1 234 1 9 2 276 1 12 1 235 4 236 4 282 1 193 1 326 1 328 1 111 3 113 2 18 3 246 2 297 4 248 2 22 1 23 1 163 2 204 1 341 7 346 1 33 1 129 1 350 1 37 1 172 3 175 1 353 1 131 1 180 1 215 1 214 1 
3 1 246 2 297 3 248 2 22 1 23 1 186 2 270 2 55 2 163 2 146 1 341 4 204 1 234 1 9 1 275 1 33 1 276 1 235 3 350 1 236 2 37 1 303 2 172 2 111 2 113 2 215 1 18 2 
3 1 246 2 297 3 248 2 52 1 53 1 22 1 23 1 186 2 270 2 55 1 163 2 146 1 341 4 204 1 234 1 9 1 33 1 276 1 12 1 235 3 350 1 236 2 37 1 172 2 111 2 113 2 215 1 18 2 
3 1 246 2 297 3 248 2 52 1 53 1 22 1 23 1 186 2 270 2 55 1 163 2 146 1 341 4 204 1 234 1 9 1 33 1 276 1 12 1 235 3 350 1 236 2 37 1 172 2 111 2 113 2 215 1 18 2 
245 1 276 1 33 1 235 1 3 1 350 1 297 1 89 1 37 1 52 1 22 1 23 1 270 1 163 1 146 1 215 1 204 1 60 1 95 1 
3 1 246 2 297 3 248 2 52 1 53 1 22 1 23 1 186 3 270 2 55 1 163 2 146 1 341 5 204 1 234 1 9 1 346 1 33 1 276 1 235 3 12 1 350 1 236 3 37 1 172 3 111 2 113 2 215 1 18 3 
3 1 246 2 297 3 248 2 52 1 53 1 22 1 23 1 186 3 270 2 55 1 163 2 146 1 341 5 204 1 234 1 9 1 346 1 33 1 276 1 235 3 12 1 350 1 236 3 37 1 172 3 111 2 113 2 215 1 18 3 
276 1 33 1 245 1 235 1 3 1 350 1 297 1 37 1 22 1 23 1 270 1 163 1 146 1 215 1 204 1 60 1 
315 1 48 1 267 2 337 1 58 1 342 1 318 1 254 1 28 3 302 1 104 1 65 1 279 1 209 3 170 1 153 2 212 2 325 1 352 2 194 1 239 1 289 6 156 1 355 1 311 1 313 1 
243 2 97 1 2 3 315 2 222 1 21 2 48 11 267 2 144 1 337 1 271 3 56 1 58 1 318 4 28 8 302 2 279 2 209 6 351 1 87 1 212 1 67 1 153 1 68 1 325 2 352 4 194 11 289 14 157 1 355 2 241 1 136 1 313 2 
265 1 97 1 4 1 222 1 315 1 223 1 299 1 50 1 121 1 337 1 56 1 338 1 317 2 340 1 318 1 28 1 208 1 302 1 129 1 209 1 212 1 171 1 325 1 352 2 173 1 328 1 13 1 353 2 109 1 289 2 305 1 355 1 180 1 71 1 309 1 263 1 74 1 313 1 
97 1 4 2 315 3 222 1 223 2 48 7 267 7 144 2 56 1 317 3 58 5 232 2 318 7 10 1 104 2 65 2 279 5 153 6 325 3 328 1 194 7 109 1 239 1 289 28 157 1 156 2 17 1 290 2 112 2 71 2 74 1 243 2 197 2 162 1 21 2 299 2 121 2 337 3 26 1 338 1 340 1 254 1 28 14 208 1 302 3 129 1 209 14 212 3 171 2 352 6 174 2 173 2 175 1 353 3 305 1 355 3 180 1 311 1 263 2 313 3 
333 1 45 1 97 1 314 1 200 1 4 2 315 2 299 2 224 1 337 2 56 1 338 8 317 1 59 1 340 1 82 1 28 1 323 1 208 8 302 2 129 1 209 1 170 1 284 1 325 2 352 4 328 1 173 3 353 1 155 1 289 2 305 7 355 2 181 1 180 1 263 2 74 2 313 2 115 2 
243 1 315 1 222 1 21 1 48 1 267 1 144 1 337 1 317 1 58 1 318 1 28 1 302 1 64 1 129 1 279 1 209 2 282 1 153 1 325 1 352 2 194 1 328 1 353 1 289 3 355 1 92 1 180 1 313 1 
243 1 302 1 279 1 170 1 315 1 325 1 48 1 352 2 267 1 194 1 195 1 337 1 289 2 157 1 355 1 318 1 28 2 313 1 
302 1 266 1 209 2 170 1 315 1 153 1 325 1 48 1 352 2 267 1 194 1 144 1 337 1 289 2 355 1 58 1 318 1 313 1 
243 1 315 1 21 1 48 2 267 2 144 1 337 1 58 1 318 2 28 2 302 1 279 1 209 2 170 1 153 1 325 1 352 2 194 2 289 4 355 1 157 1 313 1 
333 1 243 1 302 1 279 1 315 1 325 1 48 1 352 2 267 1 194 1 195 1 337 1 289 2 157 1 355 1 318 1 28 2 313 1 
333 1 302 1 266 1 209 2 315 1 153 1 325 1 48 1 352 2 267 1 194 1 144 1 337 1 289 2 355 1 58 1 318 1 313 1 
243 1 333 1 315 1 21 1 48 2 267 2 144 1 337 1 58 1 318 2 28 2 302 1 279 1 209 2 153 1 325 1 352 2 194 2 289 4 355 1 157 1 313 1 
243 1 315 1 21 1 48 2 267 2 144 1 337 1 58 1 318 2 28 2 302 1 279 1 209 2 153 1 325 1 352 2 194 2 289 4 355 1 157 1 313 1 
97 1 4 1 315 1 223 1 299 1 121 1 337 1 56 1 338 1 317 1 28 1 208 1 302 1 209 1 212 1 171 1 325 1 352 2 173 1 353 1 289 2 305 1 355 1 290 1 71 1 263 1 74 1 313 1 
208 1 302 1 209 1 315 1 212 1 325 1 352 2 175 1 250 1 337 1 289 1 305 1 355 1 56 1 338 1 182 1 74 1 313 1 10 1 
243 1 315 1 222 1 21 1 48 2 267 2 144 1 337 1 58 1 318 2 28 2 302 1 279 1 209 2 153 1 325 1 352 2 194 2 289 4 355 1 157 1 313 1 
243 1 197 1 4 1 315 1 21 1 48 2 223 1 267 2 299 1 144 1 121 1 224 1 337 1 338 1 317 1 58 1 318 2 28 2 208 1 302 1 279 1 209 2 153 1 171 1 325 1 352 2 194 2 173 1 353 1 289 4 157 1 305 1 355 1 290 1 71 1 263 1 313 1 
243 1 315 1 222 1 21 1 48 1 267 1 144 1 337 1 317 1 58 1 318 1 28 2 207 1 302 1 64 1 129 1 279 1 209 1 282 1 325 1 352 2 328 1 194 1 353 1 289 3 157 1 355 1 180 1 313 1 
2 3 220 1 98 2 315 3 267 7 144 4 271 4 229 1 58 5 104 1 279 5 65 1 283 1 153 3 237 1 325 3 14 1 69 1 239 1 289 41 157 4 16 4 156 1 241 1 70 1 292 1 243 4 116 1 21 4 25 1 123 1 254 1 28 20 30 1 209 21 88 1 130 1 352 6 355 3 213 1 136 3 311 1 313 3 
2 3 220 1 98 2 315 4 267 7 144 3 271 4 229 2 58 4 104 1 279 5 65 1 283 1 153 4 237 1 325 4 14 1 69 1 239 1 289 38 157 3 16 4 156 1 241 1 70 1 292 1 243 4 116 1 21 4 25 1 123 1 254 1 28 20 30 1 209 18 88 1 130 1 352 8 355 4 213 1 136 3 311 1 313 4 
243 7 116 1 2 4 220 1 98 1 315 2 21 7 267 13 144 7 229 1 25 1 271 4 58 8 254 1 123 1 28 27 30 1 104 1 65 1 279 8 209 25 351 2 283 1 88 1 237 1 153 6 130 1 325 2 352 4 239 1 289 52 156 1 16 4 355 2 157 7 213 1 241 2 70 1 292 1 136 2 311 1 313 2 
243 2 2 1 220 1 98 1 315 2 21 2 267 4 144 2 271 2 58 2 28 6 258 1 279 2 209 7 283 1 153 2 130 1 325 2 352 4 14 1 289 13 16 1 355 2 157 2 241 1 70 1 292 1 136 1 313 2 
243 3 116 1 2 2 220 1 98 2 315 3 21 3 267 4 144 2 229 2 271 2 25 1 58 2 123 1 28 14 30 1 279 3 209 12 283 1 88 1 237 1 153 2 130 2 325 3 352 6 289 26 157 2 16 4 355 3 213 1 70 1 292 1 136 2 313 3 
19 1 97 1 4 1 222 1 315 1 101 1 299 1 337 1 56 1 27 1 338 2 317 2 59 1 28 1 208 2 302 1 129 2 209 1 281 1 325 1 352 2 173 1 353 2 155 1 289 2 355 1 179 1 305 2 263 1 313 1 115 2 
208 2 46 1 324 1 210 1 34 2 118 1 99 1 299 1 224 1 132 1 305 2 338 2 203 1 206 1 263 1 82 1 137 1 322 1 345 1 
208 1 46 1 210 1 34 2 118 1 99 1 299 1 132 1 305 1 338 1 203 1 217 1 82 1 137 1 263 1 322 1 345 1 
208 1 314 1 324 1 4 1 284 1 299 1 173 1 305 1 338 1 41 1 203 1 263 1 74 1 83 1 
208 1 46 1 324 1 210 1 34 2 118 1 99 1 299 1 132 1 305 1 338 1 203 1 206 1 82 1 137 1 263 1 322 1 345 1 
84 1 
96 1 55 1 350 1 342 1 37 1 9 1 176 1 
246 1 297 1 248 1 23 1 55 2 146 1 204 1 341 1 234 1 9 1 235 1 350 1 37 1 303 1 111 1 113 1 215 1 
4 1 144 1 55 3 146 2 58 1 273 1 62 3 321 1 11 1 191 1 235 2 279 1 330 1 111 1 112 1 74 1 158 1 243 1 297 2 248 3 21 1 299 2 249 1 23 2 300 1 338 1 78 2 204 2 341 2 208 1 168 3 350 4 171 1 303 6 37 3 91 1 173 4 178 1 305 1 133 1 215 2 263 1 
243 2 198 1 2 1 335 2 297 1 248 3 21 2 23 2 144 2 271 1 25 1 55 5 146 2 58 2 341 1 204 2 123 1 62 5 30 1 9 2 235 1 168 5 279 2 66 1 350 8 237 1 211 1 303 6 37 5 39 1 111 1 178 1 213 1 215 2 136 1 
198 1 335 2 141 1 297 1 23 1 317 1 146 1 58 1 231 1 204 1 12 1 235 1 104 1 129 1 65 1 279 2 350 2 282 1 193 1 37 2 326 1 328 1 175 1 353 1 156 1 180 1 17 1 215 1 
96 1 350 1 37 1 176 1 23 1 55 1 146 1 215 1 204 1 9 1 
243 1 168 2 279 1 350 2 248 2 21 1 37 2 303 4 144 1 55 2 58 1 62 2 
111 1 235 1 55 1 297 1 341 1 9 1 
20 1 314 1 4 1 297 3 47 2 299 1 23 2 187 1 338 4 146 2 204 2 341 4 255 1 208 4 235 3 105 1 350 2 66 2 284 1 37 2 173 1 111 2 178 2 305 4 215 1 307 1 263 1 74 2 219 1 
4 1 315 1 223 1 299 1 121 1 337 1 56 1 338 1 317 3 319 1 208 1 302 1 129 2 209 1 282 2 212 1 325 1 171 1 352 2 326 1 328 2 173 1 353 3 289 1 305 1 355 1 180 2 290 1 71 1 74 1 263 1 313 1 
350 1 66 1 248 1 303 2 37 1 23 1 178 1 55 2 146 1 215 1 204 1 62 1 9 1 
244 1 291 1 152 1 
244 1 332 1 152 1 114 1 159 1 
244 1 291 1 152 1 
244 1 291 1 152 1 
244 1 152 1 124 1 
244 1 152 1 124 1 
244 1 152 1 124 1 
244 1 152 1 
287 1 145 1 
2 1 315 1 267 5 271 1 25 1 58 3 254 1 28 8 104 2 279 3 65 2 209 8 283 1 153 4 325 1 352 2 239 1 289 16 157 1 355 1 156 2 17 1 136 1 311 1 313 1 
243 1 2 1 315 2 21 1 267 6 271 2 25 1 58 3 254 1 274 1 28 10 104 2 65 2 279 4 209 9 283 1 153 4 325 2 352 4 239 1 289 19 156 2 355 2 157 2 17 1 241 1 136 1 311 1 313 2 
243 2 2 1 315 3 21 2 267 7 144 2 271 1 25 1 229 1 58 5 254 1 123 1 274 1 28 13 30 1 104 2 65 2 279 5 209 14 283 1 237 1 153 5 325 3 352 6 239 1 289 27 156 2 157 2 355 3 17 1 213 1 136 1 311 1 313 3 
243 2 2 1 315 3 21 2 267 9 144 1 229 1 271 1 25 1 58 4 254 1 123 1 274 1 28 14 30 1 104 2 65 2 279 5 209 11 283 1 153 5 237 1 325 3 352 6 239 1 289 25 156 2 157 4 355 3 17 1 213 1 136 1 311 1 313 3 
2 1 315 1 267 5 271 1 25 1 58 3 254 1 28 8 104 2 279 3 65 2 209 8 283 1 153 4 325 1 352 2 239 1 289 16 157 1 355 1 156 2 17 1 136 1 311 1 313 1 
243 2 2 1 315 1 21 2 267 2 144 2 271 1 25 1 58 2 123 1 28 6 30 1 279 2 209 6 283 1 153 1 237 1 325 1 352 2 289 12 157 1 355 1 213 1 136 1 313 1 
243 2 2 1 315 4 21 2 267 7 144 1 271 1 25 1 229 2 58 4 254 1 123 1 274 1 28 14 30 1 104 2 65 2 279 5 209 12 283 1 237 1 153 5 325 4 352 8 239 1 289 26 156 2 157 2 355 4 17 1 213 1 136 1 311 1 313 4 
243 3 2 1 315 4 21 3 267 6 144 2 271 1 25 1 229 2 58 2 123 1 28 9 30 1 279 3 209 7 283 1 237 1 153 3 325 4 352 8 14 1 289 16 157 3 355 4 213 1 136 1 313 4 
104 1 65 3 279 1 209 4 153 3 267 6 239 2 289 7 156 3 157 3 58 1 311 1 28 3 
243 2 2 1 315 4 21 2 267 7 144 1 271 1 25 1 229 2 58 4 254 1 123 1 28 14 30 1 104 2 65 2 279 5 209 12 283 1 237 1 153 5 325 4 352 8 14 1 239 1 289 26 156 2 157 2 355 4 17 1 213 1 136 1 311 1 313 4 
315 2 267 7 229 1 58 3 254 1 28 9 104 2 65 2 279 3 209 9 153 4 325 2 352 4 239 1 289 18 156 2 355 2 157 3 17 1 311 1 313 2 
104 1 65 1 279 1 209 3 153 2 267 2 239 1 289 6 156 1 58 1 342 1 254 1 311 1 28 3 
243 1 279 1 209 2 315 1 153 1 325 1 21 1 352 2 267 2 144 1 289 4 355 1 157 1 58 1 274 1 28 2 313 1 
243 1 2 1 279 1 209 4 153 1 21 1 267 2 144 1 289 7 271 2 157 1 241 1 58 1 136 1 28 3 
243 2 2 2 315 1 21 2 267 7 144 2 271 2 229 1 58 5 254 1 28 13 104 2 65 2 279 5 209 13 351 1 68 1 153 5 325 1 352 2 239 1 289 26 156 2 157 2 355 1 17 1 241 1 311 1 313 1 
289 1 271 1 209 1 
289 1 2 1 28 1 
243 1 279 1 209 3 315 1 153 2 325 1 21 1 352 2 267 3 144 1 289 6 355 1 157 1 112 1 58 1 274 1 28 3 313 1 
243 2 2 1 315 1 21 2 267 2 144 2 271 1 25 1 58 2 123 1 28 6 30 1 279 2 209 6 283 1 153 1 237 1 325 1 352 2 289 12 157 1 355 1 213 1 136 1 313 1 
104 1 279 1 65 1 209 3 153 1 267 2 289 6 156 1 157 1 58 1 28 3 
65 1 209 2 315 1 153 1 325 1 352 2 267 2 239 1 289 3 157 1 156 1 229 1 355 1 72 1 28 1 311 1 313 1 
104 1 65 2 279 2 209 5 315 1 283 1 153 3 325 1 352 2 267 5 289 10 355 1 156 2 157 2 17 1 58 2 28 5 313 1 
243 1 279 1 283 1 315 1 325 1 352 2 267 1 289 2 355 1 157 1 28 2 313 1 
243 1 279 1 209 2 283 1 315 1 153 1 325 1 21 1 352 2 267 2 144 1 289 4 355 1 157 1 58 1 28 2 313 1 
65 1 209 2 283 1 315 3 153 1 325 3 352 6 267 2 14 1 289 3 229 1 355 3 156 1 157 1 72 1 28 1 313 3 
243 2 2 3 315 4 21 2 267 9 144 2 229 1 271 3 77 1 58 5 254 1 274 1 28 16 104 2 65 2 279 5 209 16 283 1 106 1 153 5 325 4 352 8 14 1 239 1 288 1 289 32 156 2 355 4 157 4 17 1 136 1 311 1 313 4 
117 1 129 1 317 1 119 1 212 1 201 1 353 1 
117 1 129 1 119 1 212 1 298 1 201 1 286 1 108 1 185 1 353 1 317 1 57 1 
208 1 305 1 314 1 338 1 4 1 284 1 342 1 263 1 74 1 299 1 173 1 
208 1 129 1 4 1 212 1 171 1 223 1 173 1 299 1 328 1 353 2 121 1 305 1 180 1 338 1 317 2 340 1 74 1 263 1 
208 1 129 2 4 2 47 1 212 1 171 2 223 1 173 3 299 1 328 1 175 1 353 2 121 1 304 1 331 1 305 1 180 2 230 1 338 1 317 2 340 1 233 1 263 1 
4 2 47 1 223 1 299 1 338 1 230 1 317 2 340 1 233 1 10 1 208 1 129 2 212 1 171 2 328 1 173 3 353 2 175 2 261 1 305 1 331 1 304 1 180 2 263 1 
4 1 297 2 47 1 299 1 300 1 55 1 338 3 230 1 272 1 164 1 78 1 341 1 233 1 81 1 9 1 11 1 208 3 235 2 171 1 173 4 305 3 263 1 74 1 
11 1 208 3 235 2 4 1 297 2 47 1 171 1 299 1 173 4 300 1 305 3 55 1 230 1 338 3 78 1 341 1 233 1 273 1 81 1 74 1 263 1 9 1 
208 1 305 1 181 1 338 1 263 1 299 1 
323 1 45 1 208 7 257 1 200 1 4 2 247 1 171 1 173 3 299 3 155 1 224 1 330 1 305 6 181 1 240 1 338 7 82 1 74 2 263 2 115 1 
4 1 315 2 222 1 223 1 48 1 267 5 224 1 317 2 58 3 318 1 10 1 104 2 65 2 279 3 153 4 325 2 328 1 194 1 239 1 289 14 157 1 156 2 17 1 290 1 71 1 197 1 299 1 121 1 337 2 338 1 340 1 254 1 28 7 208 1 302 2 129 1 209 7 212 3 171 1 352 4 174 1 173 1 175 1 353 2 305 1 179 1 355 2 180 1 263 1 311 1 313 2 
96 1 297 3 23 2 300 1 55 1 338 1 146 2 78 1 204 2 341 2 80 1 273 1 321 1 9 1 11 1 208 1 191 1 235 3 350 1 37 1 173 2 176 1 111 1 305 1 215 2 307 1 74 1 158 1 
208 2 4 1 171 1 91 1 173 2 299 2 224 1 300 1 330 1 305 2 181 1 338 2 263 1 
208 4 314 1 4 1 284 1 316 1 299 1 173 1 224 1 305 4 338 4 81 1 74 1 263 1 
75 1 208 2 4 1 47 1 247 1 171 1 51 1 173 1 299 2 305 2 251 1 240 1 338 2 263 1 
208 1 305 1 46 1 338 1 34 1 263 1 137 1 74 1 299 1 322 1 
155 1 224 1 208 2 305 2 27 1 338 2 4 1 263 1 82 1 299 1 173 1 
323 1 45 1 208 5 314 1 4 2 47 1 284 1 316 1 173 3 299 2 224 1 155 1 305 4 338 5 74 1 263 2 
323 1 208 5 314 1 4 2 47 1 284 1 316 1 173 3 299 2 224 1 155 1 305 4 338 5 253 1 74 1 263 2 
4 1 223 1 299 1 338 1 317 2 340 1 10 1 208 1 129 1 212 1 171 1 328 1 173 1 353 2 175 1 261 1 305 1 180 1 263 1 74 1 
208 1 257 1 4 1 47 1 247 1 171 1 173 1 299 2 330 1 305 1 240 1 338 1 263 1 
19 1 334 1 129 1 281 1 101 1 353 1 40 1 317 1 126 1 
11 1 334 1 107 1 90 1 175 1 38 1 260 1 331 1 304 1 40 1 189 1 126 1 
38 1 334 1 40 1 212 1 126 1 
11 1 235 2 334 2 297 2 107 1 212 1 90 1 175 1 38 2 260 1 304 1 331 1 55 1 40 1 103 1 189 1 80 1 126 2 9 1 
169 1 147 1 342 1 336 1 
238 1 86 1 169 1 147 1 143 1 336 1 6 1 
238 1 227 1 7 1 
238 3 269 2 32 1 86 3 349 1 169 1 147 1 150 1 143 1 336 1 6 1 293 1 
238 2 86 2 169 1 147 1 134 1 94 1 143 1 336 1 6 1 
0 1 238 1 132 1 86 1 349 1 34 1 147 1 79 1 143 1 6 1 322 1 
238 1 86 1 349 1 147 1 143 1 336 1 6 1 
238 1 86 1 349 1 169 1 143 1 336 2 6 1 
138 1 86 2 349 1 143 2 336 1 6 2 238 2 147 1 262 1 264 1 
0 1 86 3 349 1 169 1 143 1 336 1 6 1 238 3 110 1 228 1 134 2 147 2 148 1 
86 2 46 1 349 1 169 1 34 2 118 1 143 1 336 1 6 1 238 2 132 1 147 1 134 1 135 1 322 1 
0 1 86 4 347 1 349 1 169 1 143 2 336 1 6 2 238 4 110 1 134 2 147 2 94 1 
238 1 86 1 349 1 169 1 147 1 143 1 336 1 6 1 
0 1 32 1 86 4 169 2 150 1 143 1 336 2 6 1 329 1 238 4 110 1 269 1 134 2 147 3 
86 2 76 1 349 1 169 1 5 1 143 1 36 1 336 1 6 1 238 2 147 1 134 1 
32 1 86 3 349 1 169 1 150 2 143 1 6 1 336 1 238 3 269 2 147 1 183 1 
354 2 226 1 306 1 147 2 
238 1 86 1 349 1 252 1 143 1 6 1 
238 2 228 1 86 2 349 1 169 1 147 1 134 1 143 1 336 1 6 1 
184 1 
238 1 86 1 349 1 169 1 147 1 143 1 336 1 6 1 
86 3 349 1 169 1 143 1 6 1 336 1 238 3 269 1 228 1 134 1 147 1 
329 1 0 1 110 1 147 1 
147 1 336 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (98,345) (277,311) (277,311) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 81 220 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 344 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 119 323 342 86 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (98,345) (98,345) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 81 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (98,345) (277,311) (277,311) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (98,345) (277,311) (277,311) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (98,345) (277,311) (277,311) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 81 220 305 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 111 66 157 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
343 1 25 3 2 9 300 1 27 1 151 2 218 2 5 1 331 4 125 1 30 1 243 2 7 2 88 1 160 9 10 1 351 1 112 6 354 1 16 5 173 1 228 1 289 2 210 1 360 1 184 2 319 1 114 2 
343 1 25 3 2 9 300 1 27 1 218 2 151 2 5 1 331 4 125 1 30 1 243 2 7 2 88 1 160 9 10 1 351 1 112 6 354 1 16 5 173 1 228 1 289 2 210 1 360 1 184 2 319 1 114 2 
343 1 25 4 2 10 300 1 27 1 218 2 151 2 5 1 331 5 125 1 30 1 243 2 7 2 88 1 160 10 10 1 351 1 112 7 354 1 16 6 173 1 228 1 289 2 210 1 360 1 184 2 319 1 114 2 
343 1 25 2 2 7 300 1 27 1 218 2 151 1 5 1 331 3 125 1 30 1 243 2 7 2 160 7 10 1 351 1 112 4 354 1 16 4 173 1 228 1 289 2 210 1 360 1 184 2 319 1 114 2 
160 4 25 1 112 3 354 1 2 4 300 1 16 3 218 1 151 2 5 1 228 1 289 1 331 2 125 1 184 1 243 1 7 1 88 1 
160 2 50 1 354 1 2 2 16 1 27 1 216 1 218 1 5 1 289 1 269 1 360 1 125 1 184 1 114 1 243 1 
160 3 351 1 25 1 112 1 354 1 2 3 16 2 218 2 5 1 289 2 331 1 125 1 114 1 
343 1 25 3 328 1 2 9 300 1 218 2 151 2 5 1 331 4 125 1 243 1 7 1 88 1 160 9 10 1 351 1 112 7 354 1 16 5 228 1 289 2 184 1 114 1 340 1 
343 1 25 3 328 1 2 9 300 1 218 2 151 2 5 1 331 4 125 1 243 1 7 1 88 1 160 9 10 1 351 1 112 7 354 1 16 5 228 1 289 2 184 1 114 1 340 1 
255 1 
119 2 232 1 190 1 
240 2 241 2 337 2 274 2 74 1 279 1 181 2 100 2 
322 1 253 2 49 1 324 1 274 3 1 1 329 1 192 2 3 1 4 1 240 2 241 2 279 1 346 1 200 1 34 1 308 2 161 1 165 1 12 1 166 1 337 3 264 2 92 1 181 2 15 1 97 1 358 1 18 1 74 1 362 1 20 1 100 2 141 1 118 1 213 1 142 2 
39 1 240 1 29 1 241 1 337 1 274 1 74 1 181 1 100 1 71 1 
143 1 78 1 144 1 174 1 274 1 337 1 355 1 190 1 39 1 240 1 303 1 198 1 282 1 295 1 
143 2 78 1 144 1 174 1 274 1 337 1 181 1 190 1 39 1 240 1 303 2 241 1 198 1 282 1 100 1 
143 1 303 1 248 1 325 1 38 1 
143 2 303 2 187 1 325 1 282 1 168 1 190 1 38 1 
143 1 303 1 38 1 
143 1 77 1 274 1 337 1 325 1 181 1 71 1 39 1 240 1 303 1 29 1 241 1 74 1 100 1 
190 1 
143 2 303 2 187 1 325 1 282 1 326 1 190 1 38 1 
143 5 353 2 297 2 187 1 265 1 325 2 356 1 190 1 169 1 38 2 134 1 303 5 153 2 113 1 304 1 282 1 115 1 159 1 285 1 
308 1 253 1 12 1 324 1 166 1 274 2 337 2 92 1 181 1 15 1 191 1 329 1 192 1 40 1 240 1 358 1 20 1 118 1 100 1 87 1 
255 1 
105 1 247 1 274 2 337 2 181 1 240 2 241 1 279 2 100 1 
233 1 296 1 191 1 
308 1 253 1 12 1 324 1 337 1 274 1 166 1 92 1 15 1 329 1 192 1 358 1 279 1 20 1 271 1 118 1 
240 3 241 1 337 3 274 3 279 1 181 3 100 3 87 1 
39 1 240 1 29 1 337 1 274 1 181 1 100 1 
39 1 240 1 105 1 241 1 247 1 337 1 274 1 181 1 100 1 
143 1 78 1 144 1 253 1 105 1 174 1 324 1 49 1 274 4 329 1 192 1 3 1 4 1 240 3 303 1 241 2 279 1 198 1 200 1 306 1 87 1 34 1 308 1 161 1 12 1 166 1 337 4 264 1 92 1 181 3 15 1 39 1 97 1 40 1 358 1 18 1 359 1 74 1 362 1 20 1 118 1 100 3 213 1 142 2 
240 2 337 2 274 2 279 1 355 1 181 1 100 1 87 1 26 1 
143 1 78 1 144 1 105 1 174 1 274 3 337 3 181 3 190 1 39 1 40 1 240 3 303 1 83 1 241 1 359 1 198 1 100 3 87 2 
240 1 105 1 241 1 337 1 274 1 181 1 100 1 191 1 
308 1 253 1 12 1 324 1 337 1 274 1 166 1 92 1 15 1 329 1 192 1 358 1 279 1 20 1 118 1 
308 1 253 1 12 1 324 1 337 1 274 1 166 1 92 1 15 1 130 1 121 1 192 1 358 1 279 1 20 1 
34 1 161 2 233 1 35 1 264 2 205 1 191 1 97 1 3 1 96 1 4 1 18 1 361 1 31 1 142 2 213 1 
39 1 240 1 337 1 274 1 17 1 198 1 181 1 100 1 
105 1 274 5 337 5 14 1 298 1 355 1 181 4 26 1 40 1 240 5 241 1 279 1 100 4 87 2 
39 1 240 2 29 1 337 2 274 2 17 1 181 2 100 2 
302 1 
302 1 
217 1 42 1 
217 1 42 1 
217 1 42 1 
302 1 
302 1 
217 1 302 2 42 1 
302 1 
302 1 
302 1 
302 1 
302 1 
143 2 44 1 163 2 48 1 311 1 312 1 190 1 226 2 172 2 302 2 303 2 72 2 345 1 277 1 99 2 
220 1 143 1 163 1 48 1 81 1 337 1 274 1 181 1 313 1 236 1 131 1 226 1 172 1 302 1 240 1 303 1 72 1 99 1 100 1 
184 1 243 1 7 1 
269 1 184 1 243 1 
109 1 175 1 269 1 317 1 184 3 7 2 
109 1 269 1 317 1 254 1 184 2 7 1 
109 1 269 1 317 2 184 2 7 1 
143 5 103 1 45 1 232 1 47 2 274 1 187 1 325 4 327 1 236 1 190 2 240 1 153 1 241 1 281 2 282 1 159 2 285 3 9 1 337 1 71 1 73 1 74 1 77 1 119 3 297 1 120 1 303 5 29 1 31 1 353 1 36 1 37 2 265 1 181 1 38 1 39 1 315 1 96 1 100 1 
143 5 102 1 45 1 232 1 47 2 274 1 186 1 187 1 325 4 327 1 236 1 190 2 240 1 153 1 241 1 282 1 159 2 285 3 9 1 337 1 248 2 287 2 71 1 73 1 74 1 77 1 119 3 297 1 303 5 29 1 31 1 353 1 36 1 37 2 181 1 265 1 38 3 39 1 315 1 96 1 100 1 
143 3 103 1 77 1 119 2 232 1 45 1 47 1 274 1 297 1 325 2 120 1 327 1 236 1 190 2 240 1 153 1 303 3 29 1 241 1 281 1 282 1 159 2 285 1 9 1 353 1 337 1 36 1 37 1 181 1 71 1 39 1 315 1 134 1 74 1 100 1 
143 2 103 1 119 2 232 1 45 1 47 1 297 1 120 1 325 1 327 1 236 1 190 1 153 1 303 2 281 1 159 2 285 1 9 1 353 1 36 1 37 1 315 1 134 1 211 1 
255 1 
84 1 20 1 
62 1 
166 1 20 1 
166 1 20 3 92 1 62 1 364 2 272 1 33 1 
166 1 20 1 92 1 
20 1 129 1 
161 3 322 4 350 1 45 1 128 3 180 1 264 7 106 1 107 1 268 2 332 1 242 2 334 1 363 1 31 1 347 1 63 1 
161 3 322 4 350 1 45 1 128 3 180 1 264 7 106 1 107 1 268 2 332 1 242 2 334 1 363 1 31 1 347 1 63 1 
161 3 322 4 350 1 45 1 128 3 180 1 264 7 106 1 107 1 268 2 332 1 242 2 334 1 363 1 31 1 347 1 117 1 63 1 
321 1 273 1 322 16 23 1 45 4 106 2 107 5 3 1 332 2 242 3 334 1 347 2 31 4 63 1 9 3 219 1 246 1 34 1 350 1 111 3 161 15 66 1 310 4 180 2 36 3 128 8 264 31 96 3 268 3 18 1 19 1 363 1 213 1 142 2 
273 1 322 5 45 1 54 1 106 1 3 2 107 1 332 1 242 3 31 1 347 1 63 1 34 2 161 4 350 1 180 1 128 4 264 9 183 1 268 2 18 2 363 1 213 2 142 4 
253 1 324 1 2 2 192 1 175 1 218 1 5 1 258 1 125 1 243 1 7 1 8 1 160 2 262 1 286 1 308 1 178 1 221 1 112 1 354 1 206 1 16 1 94 1 289 1 358 1 269 1 184 2 114 1 138 1 139 1 
253 1 324 1 2 3 192 1 175 1 218 1 5 1 258 1 196 1 243 1 7 1 8 1 160 3 286 1 308 1 178 1 221 1 203 1 112 2 354 1 16 1 94 1 289 1 358 1 269 1 230 1 184 2 114 1 138 1 139 1 
253 1 324 1 2 2 192 1 175 1 5 1 258 1 243 1 7 1 160 2 286 1 308 1 178 1 203 1 112 2 354 1 16 1 94 1 358 1 269 1 230 1 184 2 114 1 138 1 139 1 
253 1 324 1 2 1 58 1 192 1 193 1 218 1 196 1 160 1 308 1 178 2 166 1 13 1 15 1 94 2 266 1 358 1 289 1 270 1 20 1 114 2 139 2 140 1 
253 1 324 1 2 1 192 1 175 1 218 1 258 1 125 1 243 1 7 1 8 1 160 1 262 1 286 1 308 1 178 1 221 1 203 1 94 1 289 1 358 1 269 1 184 2 114 1 138 1 139 1 
122 1 
143 3 144 1 78 1 104 1 253 2 174 1 324 1 274 1 297 1 187 1 147 1 327 1 344 1 192 2 240 1 153 1 303 3 280 2 198 1 260 1 159 1 285 1 308 2 263 1 65 1 353 1 337 1 166 1 355 1 265 1 15 2 70 1 38 2 39 1 170 1 358 1 318 1 270 1 20 1 140 1 295 1 
143 3 144 1 104 1 78 1 174 1 65 1 263 1 274 1 337 1 187 1 68 1 355 1 326 1 38 2 70 1 39 1 240 1 303 3 280 2 198 1 260 1 295 1 
143 3 78 1 104 1 144 1 174 1 274 1 187 1 326 1 190 1 123 1 240 1 303 3 280 3 198 1 282 1 260 1 263 1 65 1 337 1 355 1 38 1 70 1 39 1 295 1 
143 3 78 1 104 1 144 1 174 1 274 1 187 1 326 1 190 1 123 1 240 1 303 3 280 3 198 1 282 1 260 1 126 1 263 1 65 1 337 1 68 1 355 1 70 1 38 2 39 1 295 1 
143 5 144 1 104 1 232 2 323 1 274 1 234 1 187 3 326 1 190 5 240 1 153 1 280 6 198 1 282 5 159 1 335 2 285 1 11 1 65 1 67 2 337 1 68 4 70 1 209 2 293 1 75 1 295 1 342 1 78 1 174 1 297 1 123 4 303 5 85 1 126 4 260 1 263 1 353 1 355 1 265 1 38 7 39 1 136 2 
143 4 144 1 104 1 232 2 323 1 274 1 234 1 187 2 190 2 240 1 153 1 280 4 198 1 282 1 159 1 335 2 285 1 201 1 65 1 67 2 337 1 68 2 70 1 209 2 295 1 78 1 119 2 174 1 297 1 123 2 303 4 260 1 126 2 263 1 353 1 355 1 265 1 38 4 39 1 136 2 
143 4 342 1 78 1 104 1 144 1 232 2 323 1 174 1 274 1 234 1 297 1 187 2 190 1 123 2 240 1 153 1 303 4 280 4 198 1 282 1 126 2 159 1 260 1 335 2 285 1 67 2 263 1 65 1 353 1 337 1 68 2 355 1 265 1 38 4 70 1 39 1 136 2 209 2 293 1 75 1 295 1 
143 4 342 1 78 1 104 1 144 1 232 2 323 1 174 1 274 1 234 1 297 1 187 2 190 1 123 2 240 1 153 1 303 4 280 4 198 1 282 1 126 2 159 1 260 1 335 2 285 1 67 2 263 1 65 1 353 1 337 1 68 2 355 1 265 1 38 4 70 1 39 1 136 2 209 2 293 1 75 1 295 1 
143 2 342 1 119 1 78 1 104 1 144 1 323 1 174 1 274 1 297 1 240 1 108 1 153 1 303 2 86 1 154 1 280 2 198 1 159 1 260 1 285 1 67 1 263 1 65 1 353 1 337 1 355 1 265 1 70 1 39 1 41 1 209 1 295 1 
143 4 342 1 78 1 104 1 144 1 232 2 323 1 174 1 274 1 234 1 297 1 187 2 190 1 123 3 240 1 153 1 303 4 280 5 198 1 282 1 159 1 260 1 126 3 335 2 285 1 11 1 67 2 263 1 65 1 353 1 337 1 68 3 265 1 355 1 70 1 38 5 39 1 136 2 209 2 75 1 293 1 295 1 
143 4 342 1 78 1 104 1 144 1 232 2 323 1 174 1 274 1 234 1 297 1 187 2 190 1 123 3 240 1 153 1 303 4 280 5 198 1 282 1 159 1 260 1 126 3 335 2 285 1 11 1 67 2 263 1 65 1 353 1 337 1 68 3 265 1 355 1 70 1 38 5 39 1 136 2 209 2 75 1 293 1 295 1 
143 4 144 1 104 1 323 1 274 1 187 2 190 1 240 1 153 1 154 1 280 4 198 1 282 1 159 1 285 1 201 1 65 1 67 2 337 1 68 2 70 1 209 2 295 1 78 1 119 2 174 1 297 1 123 2 303 4 260 1 126 2 263 1 353 1 355 1 265 1 38 4 39 1 41 2 320 2 
34 1 3 1 97 1 4 1 255 1 18 1 361 1 213 1 142 2 
322 6 45 2 233 8 296 7 191 8 107 1 60 1 3 2 4 1 242 1 279 1 31 1 307 1 9 2 246 1 127 1 34 2 161 5 111 2 310 2 128 2 36 2 264 11 182 1 39 1 97 2 96 1 18 2 362 1 231 1 252 1 213 2 142 4 
253 1 322 1 324 1 274 2 296 1 329 1 192 1 150 1 3 1 4 1 240 1 279 1 244 1 307 1 87 1 308 1 34 1 161 1 165 1 12 1 166 1 337 2 92 1 264 2 181 1 15 1 97 1 40 1 358 1 18 1 20 1 362 1 271 1 118 1 100 1 142 2 213 1 101 1 
322 10 45 3 233 7 49 2 324 2 274 3 106 1 189 1 329 2 191 7 192 1 3 3 107 2 240 1 4 3 242 4 279 2 63 1 9 2 161 10 165 1 12 2 337 3 166 2 15 1 171 2 18 3 292 2 20 2 118 2 213 3 253 1 296 6 347 1 31 3 348 1 87 1 307 1 308 1 34 3 350 1 36 2 128 6 264 20 92 2 181 1 133 2 40 1 97 3 96 2 135 2 268 1 358 2 362 1 363 1 100 1 142 6 
253 7 322 1 324 3 274 1 1 2 56 1 192 6 239 1 124 1 3 2 240 1 4 2 6 1 87 1 32 1 308 7 34 2 161 1 162 1 165 1 337 1 90 1 166 3 91 1 92 1 264 2 181 1 206 1 15 2 250 1 97 2 358 4 18 2 361 1 270 1 137 1 20 4 362 1 116 1 100 1 140 1 213 2 142 4 
185 1 322 1 45 1 105 1 233 1 274 1 296 1 191 1 3 1 4 1 240 1 241 1 242 1 31 1 307 1 9 1 34 1 161 2 337 1 128 1 36 1 264 3 181 1 97 1 96 1 18 1 100 1 213 1 142 2 
34 1 322 2 45 1 233 1 296 1 128 1 264 2 191 1 107 1 97 1 3 1 4 1 278 1 18 1 361 1 142 2 213 1 9 1 
34 1 161 2 233 1 35 1 264 2 191 1 97 1 3 1 96 1 4 1 18 1 361 1 31 1 142 2 213 1 
34 1 161 2 322 2 45 1 233 2 36 1 264 4 191 2 96 1 97 1 3 1 4 1 18 1 361 1 31 1 142 2 213 1 9 1 
34 1 322 2 45 1 233 1 296 1 128 1 264 2 191 1 107 1 97 1 3 1 4 1 278 1 18 1 116 1 142 2 213 1 9 1 
34 1 161 2 233 1 35 1 264 2 191 1 97 1 3 1 96 1 4 1 18 1 116 1 31 1 142 2 213 1 
34 1 161 2 322 2 45 1 233 2 36 1 264 4 191 2 96 1 97 1 3 1 4 1 18 1 116 1 31 1 142 2 213 1 9 1 
34 1 161 2 322 2 45 1 233 2 36 1 264 4 191 2 96 1 97 1 3 1 4 1 18 1 31 1 142 2 213 1 9 1 
322 1 253 1 324 1 49 1 274 1 329 1 192 1 3 1 4 1 279 1 308 1 34 1 161 1 165 1 12 1 166 1 337 1 264 2 92 1 15 1 97 1 358 1 18 1 20 1 362 1 118 1 142 2 213 1 
308 1 253 1 12 1 324 1 337 1 274 1 166 1 92 1 15 1 130 1 121 1 192 1 28 1 358 1 20 1 
34 1 161 2 322 2 45 1 233 2 36 1 264 4 191 2 96 1 97 1 3 1 4 1 18 1 31 1 307 1 142 2 213 1 9 1 
322 2 253 1 45 1 233 2 324 1 49 1 274 1 191 2 329 1 192 1 3 1 4 1 31 1 9 1 308 1 34 1 161 2 12 1 166 1 337 1 36 1 264 4 92 1 206 1 96 1 97 1 358 1 292 1 18 1 20 1 118 1 142 2 213 1 
322 2 22 1 45 1 105 1 233 1 274 1 296 1 191 1 107 1 3 1 4 1 240 1 241 1 31 1 307 1 9 1 34 1 161 1 337 1 128 1 36 1 264 3 181 1 96 1 97 1 18 1 100 1 213 1 142 2 
322 4 45 1 53 1 3 2 107 1 31 1 9 1 246 1 34 2 161 5 111 1 202 1 222 1 66 1 310 2 36 1 128 1 264 9 207 1 95 1 96 1 183 1 229 1 18 2 212 1 213 2 142 4 
322 4 45 1 53 1 3 2 107 1 31 1 9 1 246 1 34 2 161 5 111 1 202 1 222 1 66 1 310 2 36 1 128 1 264 9 207 1 95 1 96 1 183 1 229 1 18 2 212 1 213 2 142 4 
273 1 322 15 145 1 45 4 80 1 53 1 106 1 82 1 107 1 3 2 242 2 157 1 347 1 31 2 158 1 63 1 9 3 246 1 34 2 350 1 161 12 111 2 202 1 222 1 66 2 310 3 128 3 36 3 264 27 207 3 95 1 96 1 183 1 268 1 290 1 18 2 363 1 212 1 213 2 142 4 
322 6 45 2 215 1 53 1 3 2 107 1 176 1 31 1 9 2 246 1 34 2 161 5 111 1 202 1 66 1 310 2 36 2 128 1 264 11 207 1 95 1 96 1 183 1 229 1 18 2 212 1 213 2 142 4 
273 1 322 10 145 1 45 2 80 1 53 1 82 1 3 2 242 1 157 1 31 1 158 1 9 2 34 2 161 9 111 2 202 2 222 1 66 2 310 2 128 1 36 2 264 19 207 3 95 2 96 1 183 1 290 1 18 2 212 1 213 2 142 4 
226 1 163 1 302 1 172 1 345 1 98 1 99 1 
81 1 
226 1 163 1 302 1 172 1 146 1 99 1 
143 1 44 1 163 1 48 1 311 1 312 1 190 1 226 1 172 1 302 1 303 1 72 2 345 1 277 1 99 1 
143 1 44 1 163 1 48 1 311 1 312 1 190 1 226 1 172 1 302 1 303 1 72 2 345 1 277 1 99 1 
143 1 44 1 163 1 48 1 311 1 312 1 190 1 226 1 172 1 302 1 303 1 72 2 345 1 277 1 99 1 
267 1 
267 1 
79 1 
79 1 
238 1 179 1 
220 1 143 1 44 1 163 1 81 1 312 1 325 1 313 1 236 1 131 1 226 1 172 1 302 1 303 1 72 1 99 1 305 1 
267 1 
79 1 
253 2 322 1 324 1 274 2 1 2 192 2 3 1 4 1 240 2 6 1 199 1 307 1 308 2 34 1 161 1 162 1 64 1 165 1 166 1 337 2 264 2 97 1 208 1 358 1 18 1 20 1 362 1 43 1 76 1 142 2 213 1 
286 1 308 2 253 2 221 1 324 1 203 1 206 1 192 2 94 1 175 1 358 1 269 1 291 1 184 2 243 1 283 1 138 1 7 1 341 1 
286 1 308 1 253 1 221 1 24 1 324 1 203 1 192 1 94 1 175 1 358 1 269 1 291 1 184 2 243 1 138 1 7 1 
94 1 192 1 308 1 253 1 266 1 358 1 324 1 166 1 270 1 20 1 15 1 140 1 294 1 341 1 
286 1 308 1 253 1 221 1 324 1 203 1 192 1 94 1 175 1 358 1 269 1 291 1 184 2 243 1 283 1 138 1 7 1 341 1 
0 1 
255 1 
143 1 119 1 232 1 234 1 297 1 187 1 190 2 153 1 303 1 282 1 159 1 335 1 285 1 353 1 265 1 38 1 136 1 
143 2 119 4 253 1 45 1 232 2 47 2 174 1 324 1 297 2 187 1 275 1 327 1 190 2 148 1 192 1 257 1 303 2 153 2 84 2 61 1 333 1 177 1 159 3 9 1 285 2 308 1 309 1 353 2 166 1 36 1 37 2 92 1 265 2 15 1 38 2 288 1 135 1 358 2 20 4 364 1 272 1 
111 1 119 2 232 1 66 1 47 1 353 1 310 1 297 1 37 1 265 1 190 1 153 1 157 1 159 1 285 1 
143 1 77 1 45 2 274 1 297 1 106 1 257 2 240 1 153 1 303 1 29 1 241 1 347 1 159 2 31 1 63 1 285 2 353 1 337 1 265 1 181 1 225 1 71 1 39 1 227 1 75 1 74 1 100 1 
353 1 297 1 265 1 190 1 169 1 153 1 304 1 282 1 159 1 285 1 
119 2 232 1 45 1 47 1 36 1 37 1 190 1 159 2 9 1 
143 1 303 1 187 1 282 1 190 1 38 1 
143 3 253 4 324 1 297 2 187 2 147 1 327 2 192 4 330 1 153 2 303 3 197 1 159 2 285 2 110 1 308 4 353 2 166 1 265 1 15 2 38 4 134 1 170 1 358 1 318 2 270 1 20 1 21 2 140 1 
253 1 49 1 324 1 274 3 329 1 192 1 3 1 240 2 4 1 241 2 279 1 200 1 34 1 308 1 161 1 12 1 337 3 166 1 264 1 92 1 181 2 15 1 97 1 358 1 18 1 74 1 362 1 20 1 100 2 118 1 213 1 142 2 
119 4 232 2 47 2 353 1 297 1 37 2 265 1 327 1 190 4 153 1 268 1 318 1 282 2 159 2 285 1 
226 1 163 1 299 1 
251 1 226 1 163 1 179 1 237 1 
226 1 163 1 299 1 
226 1 163 1 299 1 
349 1 226 1 163 1 
349 1 226 1 163 1 
349 1 226 1 163 1 
226 1 163 1 
302 1 
322 4 45 1 106 1 3 1 242 2 157 1 31 1 347 1 63 1 34 1 111 1 161 4 350 1 66 1 310 1 128 2 264 8 183 1 268 1 18 1 363 1 213 1 142 2 
322 6 45 2 106 1 276 1 3 2 107 1 242 2 157 1 31 1 347 1 63 1 9 1 246 1 34 2 350 1 161 5 111 1 66 1 310 2 36 1 128 3 264 11 183 1 268 1 18 2 363 1 213 2 142 4 
273 1 322 9 45 3 145 1 80 1 106 1 276 1 3 3 107 1 242 3 157 1 347 1 31 2 158 1 63 1 9 2 34 3 350 1 111 1 161 8 66 1 310 1 36 2 128 4 264 17 96 1 183 1 268 1 290 1 18 3 363 1 213 3 142 6 
273 1 322 13 45 5 145 1 80 1 106 2 276 1 107 3 3 3 242 4 157 1 347 2 31 4 158 1 63 2 9 2 34 3 350 1 111 1 161 11 66 1 310 1 36 2 128 7 264 24 225 1 96 1 183 1 268 1 290 1 18 3 363 1 213 3 142 6 
322 4 45 1 106 1 3 1 242 2 157 1 31 1 347 1 63 1 34 1 111 1 161 4 350 1 66 1 310 1 128 2 264 8 183 1 268 1 18 1 363 1 213 1 142 2 
273 1 322 6 45 2 145 1 80 1 3 2 107 1 242 1 157 1 31 1 158 1 9 2 34 2 111 1 161 5 66 1 310 1 36 2 128 2 264 11 96 1 183 1 290 1 18 2 213 2 142 4 
273 1 322 6 45 2 145 1 80 1 276 1 3 3 242 1 157 1 31 1 158 1 9 2 34 3 161 5 111 1 66 1 310 1 36 2 128 1 264 11 96 1 183 1 290 1 18 3 213 3 142 6 
273 2 322 9 45 3 145 1 80 1 107 3 3 4 242 2 157 1 31 1 158 1 9 3 34 4 161 5 111 1 66 1 310 1 36 3 128 5 264 14 96 1 183 1 290 1 18 4 229 1 213 4 142 8 
161 4 350 1 322 3 45 1 128 6 264 7 106 3 107 3 242 3 363 2 31 1 347 3 63 1 
273 1 322 6 45 2 145 1 80 1 3 3 242 1 157 1 31 1 158 1 9 2 34 3 161 5 111 1 66 1 310 1 36 2 128 1 264 11 96 1 183 1 290 1 18 3 229 1 213 3 142 6 
34 2 273 1 161 4 322 4 350 1 45 1 128 3 264 8 106 1 107 1 3 2 268 1 242 2 18 2 363 1 31 1 347 1 63 1 142 4 213 2 
255 1 
276 1 34 1 322 2 3 1 45 1 18 1 36 1 264 2 9 1 213 1 142 2 
246 1 161 4 111 1 322 3 45 1 66 1 310 2 36 1 128 1 264 7 96 1 107 1 31 1 9 1 
273 1 322 13 45 5 106 2 107 4 60 1 3 1 242 4 347 2 31 4 63 2 9 2 246 1 34 1 111 2 161 10 350 1 310 2 36 2 128 8 264 23 225 1 182 1 96 1 268 1 18 1 363 1 142 2 213 1 
161 1 310 1 264 1 
322 1 111 1 264 1 
161 3 322 3 45 1 36 1 128 1 264 6 107 1 96 1 135 1 31 1 9 1 
273 1 322 6 45 2 145 1 80 1 3 2 107 1 242 1 157 1 31 1 158 1 9 2 34 2 111 1 161 5 66 1 310 1 36 2 128 2 264 11 96 1 183 1 290 1 18 2 213 2 142 4 
322 3 161 3 45 1 128 2 264 6 106 1 107 1 242 1 31 1 347 1 63 1 
273 1 34 1 322 1 161 2 350 1 128 2 264 3 106 1 107 1 3 1 152 1 242 1 18 1 363 1 347 1 142 2 213 1 
34 1 322 5 161 5 45 2 128 5 264 10 106 2 225 1 3 1 107 2 183 1 242 3 18 1 347 2 31 2 63 1 213 1 142 2 
34 1 322 2 3 1 45 1 183 1 18 1 264 2 9 1 213 1 142 2 
34 1 322 2 3 1 45 1 183 1 18 1 36 1 264 2 9 1 213 1 142 2 
273 1 34 3 161 2 322 1 128 2 264 3 106 1 3 3 107 1 152 1 183 1 242 1 229 1 18 3 347 1 142 6 213 3 
321 1 273 2 322 16 23 1 45 5 106 3 276 1 3 5 107 5 152 1 242 4 347 3 31 5 63 2 9 3 219 1 246 1 34 5 350 1 161 18 111 3 66 1 310 4 36 3 128 9 264 34 96 3 183 1 268 1 229 1 18 5 363 1 213 5 142 10 
240 1 214 1 337 1 274 1 279 1 355 1 26 1 
214 1 274 1 337 1 355 1 314 1 26 1 93 1 357 1 240 1 279 1 259 1 336 1 
192 1 308 1 253 1 255 1 15 1 
308 1 253 1 12 1 324 1 166 1 274 2 337 2 92 1 181 1 15 1 192 1 240 1 358 1 279 1 20 1 100 1 118 1 87 1 
308 1 144 1 253 1 12 1 324 1 166 2 274 2 337 2 51 1 92 2 129 1 181 1 192 1 39 1 240 2 358 1 279 1 20 3 198 1 21 1 100 2 118 1 87 1 
253 2 144 1 324 1 274 2 51 1 121 1 192 2 240 2 279 1 156 1 198 1 87 1 308 2 12 1 337 2 166 2 92 2 181 1 129 1 39 1 358 1 20 3 21 1 100 2 
143 2 253 3 174 1 324 1 51 1 190 1 192 3 303 2 84 1 156 1 282 1 284 1 308 3 166 1 92 1 129 1 69 1 15 1 38 1 358 1 20 4 21 1 364 1 
143 2 308 3 253 3 174 1 324 1 166 1 51 1 92 1 129 1 15 1 190 1 38 1 192 3 288 1 303 2 358 1 84 1 156 1 20 4 21 1 282 1 364 1 
192 1 308 1 253 1 358 1 324 1 91 1 
308 6 253 6 162 1 46 1 324 2 90 1 166 2 91 1 92 1 1 1 206 1 56 1 15 2 250 1 192 5 239 1 124 1 358 3 20 3 272 1 
322 3 253 1 45 1 233 1 324 1 49 1 274 2 296 1 106 1 191 1 329 1 192 1 3 2 4 2 240 1 242 2 279 2 31 1 347 1 63 1 307 1 87 1 34 2 308 1 161 3 350 1 12 1 166 1 337 2 128 2 264 6 92 1 181 1 206 1 97 2 171 1 208 1 268 1 358 1 18 2 292 1 20 1 363 1 100 1 118 1 142 4 213 2 
143 3 253 1 174 1 297 2 187 1 325 1 190 1 148 1 192 1 330 1 153 2 303 3 84 1 61 1 333 1 304 1 282 1 159 1 285 1 308 1 353 2 265 2 15 1 169 1 38 2 288 1 20 2 364 1 
308 2 253 2 324 1 166 1 91 1 275 1 92 1 206 1 192 2 358 2 20 2 364 1 272 1 
308 4 253 4 324 1 166 1 224 1 15 1 206 1 192 4 358 1 270 1 156 1 20 1 140 1 
308 2 253 2 324 1 90 1 166 1 92 1 339 1 192 2 239 1 358 2 137 1 20 1 21 1 32 1 
192 1 308 1 253 1 358 1 269 1 324 1 184 1 243 1 138 1 15 1 
192 2 308 2 253 2 162 1 358 1 324 1 166 1 203 1 20 1 199 1 206 1 
308 5 253 5 162 1 324 2 166 2 224 1 15 1 206 1 250 1 192 4 124 1 358 2 270 1 20 3 21 1 140 1 
308 5 253 5 162 1 324 2 166 2 224 1 15 1 206 1 250 1 192 4 358 2 270 1 20 3 21 1 140 1 261 1 
308 1 253 1 12 1 324 1 166 1 274 2 337 2 92 1 181 1 15 1 121 1 192 1 240 1 358 1 279 1 20 1 100 1 87 1 
308 1 253 1 46 1 324 1 90 1 166 1 92 1 192 1 239 1 358 2 20 1 21 1 272 1 
194 1 279 1 167 1 149 1 89 1 
143 2 144 1 78 1 174 1 223 1 325 1 167 2 190 1 256 1 149 2 39 1 303 2 194 1 359 1 279 1 195 1 198 1 282 1 89 2 
240 1 64 1 337 1 274 1 194 1 167 1 43 1 76 1 89 1 
223 1 194 1 195 1 
255 1 
16 1 160 1 218 1 5 1 289 1 354 1 2 1 
114 1 139 1 2 1 
160 3 52 1 354 1 132 1 2 3 59 1 16 1 218 1 5 1 289 1 125 1 360 2 
16 1 160 2 151 1 218 1 5 1 289 1 112 1 354 1 2 2 
160 1 2 1 300 1 16 1 218 1 289 1 331 1 125 1 184 1 243 1 7 1 
16 1 160 1 218 1 289 1 125 1 354 1 2 1 
160 1 218 1 5 1 289 1 125 1 354 2 2 1 
160 2 352 1 354 1 249 1 2 2 16 1 301 1 218 2 289 2 125 1 
160 3 10 1 343 1 112 2 25 1 354 1 2 3 16 2 218 1 5 1 289 1 331 1 125 1 
160 2 204 1 112 1 354 1 2 2 16 1 175 1 218 1 5 1 289 1 269 1 125 1 184 2 243 1 7 1 
160 4 112 2 25 1 354 1 2 4 16 2 218 2 151 1 5 1 289 2 331 1 125 1 88 1 
16 1 160 1 218 1 5 1 289 1 125 1 354 1 2 1 
160 4 52 1 112 2 25 1 354 2 59 1 2 4 16 3 218 1 5 2 289 1 331 1 360 1 245 1 
160 2 112 1 354 1 55 1 2 2 16 1 218 1 5 1 289 1 125 1 155 1 340 1 
160 3 52 1 188 1 354 1 2 3 59 2 16 1 218 1 5 1 289 1 125 1 360 2 
16 2 316 2 164 1 338 1 
160 1 218 1 289 1 125 1 57 1 2 1 
16 1 160 2 10 1 218 1 5 1 289 1 125 1 112 1 354 1 2 2 
235 1 
16 1 160 1 218 1 5 1 289 1 125 1 354 1 2 1 
16 1 160 3 10 1 218 1 5 1 289 1 360 1 125 1 112 1 354 1 2 3 
16 1 331 1 25 1 245 1 
16 1 354 1 

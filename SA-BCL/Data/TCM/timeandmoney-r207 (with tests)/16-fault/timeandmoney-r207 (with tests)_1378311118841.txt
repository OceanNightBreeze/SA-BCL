#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (54,89,118,338,368) (204,226) (204,226) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 310 127 312 236 179 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 150 64 132 350 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 150 64 132 350 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 150 64 132 350 108 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 150 64 132 350 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (12,45) 257 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (12,45) 257 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (12,45) 175 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (12,45) 175 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 310 127 312 236 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 1 147 1 301 1 20 2 5 1 122 1 363 5 78 2 289 1 247 6 54 1 222 2 250 1 84 1 163 9 207 3 230 4 252 2 369 9 371 1 34 2 88 2 36 2 142 1 167 1 186 1 260 1 145 1 
283 1 147 1 301 1 20 2 5 1 122 1 363 5 78 2 289 1 247 6 54 1 222 2 250 1 84 1 163 9 207 3 230 4 369 9 252 2 371 1 34 2 88 2 36 2 142 1 167 1 186 1 260 1 145 1 
283 1 147 1 301 1 20 2 5 1 122 1 363 6 78 2 289 1 247 7 54 1 222 2 250 1 84 1 163 10 207 4 230 5 369 10 252 2 371 1 34 2 88 2 36 2 142 1 167 1 186 1 260 1 145 1 
283 1 147 1 301 1 20 2 122 1 363 4 78 2 289 1 247 4 54 1 222 2 250 1 84 1 163 7 207 2 230 3 369 7 252 1 371 1 34 2 88 2 36 2 142 1 167 1 186 1 260 1 145 1 
247 3 283 1 222 1 301 1 250 1 84 1 20 1 207 1 5 1 163 4 230 2 369 4 252 2 34 1 88 1 167 1 363 3 78 1 
369 1 204 1 54 1 222 1 36 1 226 1 142 1 167 1 78 1 20 1 138 1 163 1 
247 1 283 1 222 2 84 1 20 2 163 3 207 1 230 1 369 3 36 1 167 1 363 2 145 1 
247 7 202 1 283 1 222 2 301 1 250 1 84 1 20 2 5 1 163 9 207 3 230 4 252 2 369 9 34 1 88 1 122 1 36 1 186 1 167 1 321 1 363 5 78 1 145 1 
247 7 202 1 283 1 222 2 301 1 250 1 84 1 20 2 5 1 163 9 207 3 230 4 252 2 369 9 34 1 88 1 122 1 36 1 186 1 167 1 321 1 363 5 78 1 145 1 
15 1 
50 1 143 2 126 1 
218 2 238 2 346 1 24 2 83 1 362 2 347 2 21 2 
280 1 39 1 40 1 238 2 19 2 99 1 21 2 4 1 215 1 217 1 218 2 47 1 360 1 24 2 177 1 362 3 263 1 8 2 130 2 290 1 134 1 83 1 309 1 335 1 160 1 159 2 336 1 107 1 274 1 232 1 60 1 316 1 346 1 254 1 255 1 347 3 114 2 
238 1 171 1 83 1 21 1 44 1 31 1 218 1 24 1 362 1 347 1 
238 2 171 1 240 1 98 1 44 2 21 1 22 1 356 1 218 1 24 1 362 2 7 1 126 1 203 1 30 1 13 1 83 1 135 1 311 1 31 1 347 2 
238 2 171 1 240 1 98 1 44 2 21 2 22 2 218 2 24 2 362 2 7 1 126 1 203 1 30 2 13 1 83 1 311 1 31 1 347 2 
22 1 30 1 151 1 62 1 348 1 
111 1 22 2 30 2 151 1 133 1 98 1 62 1 126 1 
22 1 30 1 62 1 
30 1 238 1 171 1 83 1 44 1 311 1 21 1 31 1 22 1 218 1 151 1 24 1 362 1 347 1 
126 1 
111 1 22 2 112 1 30 2 151 1 98 1 62 1 126 1 
324 1 333 1 81 1 30 5 365 2 334 1 98 1 71 2 110 1 302 2 111 1 22 5 229 1 75 1 59 1 151 2 62 2 126 1 168 1 
40 1 238 1 335 1 19 1 159 1 107 1 4 1 217 1 60 1 218 1 316 1 359 1 24 1 177 1 362 2 255 1 347 2 114 1 329 1 166 1 
15 1 
248 1 238 2 185 1 21 1 218 1 346 2 24 1 362 2 347 2 
183 1 329 1 241 1 
40 1 19 1 335 1 159 1 107 1 340 1 4 1 217 1 60 1 316 1 346 1 362 1 177 1 347 1 114 1 255 1 
218 3 238 3 346 1 359 1 24 3 362 3 347 3 21 1 
31 1 218 1 238 1 24 1 362 1 347 1 44 1 
248 1 238 1 185 1 21 1 44 1 218 1 24 1 362 1 347 1 
40 1 238 3 19 1 240 1 99 1 4 1 21 2 44 1 215 1 22 1 217 1 218 3 47 1 360 1 359 1 24 3 177 1 362 4 7 1 8 1 52 1 248 1 203 1 130 2 30 1 290 1 13 1 134 1 83 1 335 1 292 1 160 1 159 1 107 1 274 1 232 1 60 1 316 1 346 1 254 1 255 1 347 4 114 1 166 1 
218 1 238 2 346 1 359 1 24 1 135 1 362 2 347 2 339 1 
248 1 203 1 30 1 238 3 13 1 292 1 240 1 21 1 44 1 22 1 218 3 359 2 24 3 362 3 347 3 7 1 166 1 374 1 126 1 
248 1 218 1 238 1 24 1 362 1 347 1 329 1 21 1 
40 1 19 1 335 1 159 1 107 1 4 1 217 1 60 1 316 1 346 1 362 1 177 1 347 1 114 1 255 1 
40 1 136 1 19 1 335 1 159 1 4 1 217 1 60 1 346 1 362 1 177 1 347 1 114 1 255 1 210 1 
80 1 192 1 130 2 183 1 284 1 134 1 241 1 160 1 366 1 99 1 215 1 74 1 274 2 86 1 360 1 254 1 329 1 8 2 349 1 
213 1 238 1 44 1 218 1 24 1 362 1 347 1 7 1 
248 1 238 5 135 1 70 1 339 1 85 1 21 1 218 4 359 2 346 1 24 4 362 5 347 5 166 1 
31 1 218 1 238 1 24 1 362 1 347 1 44 1 
152 1 245 1 
152 1 245 1 
314 1 101 1 
314 1 101 1 
314 1 101 1 
180 1 152 1 245 1 
282 1 152 1 245 1 
314 1 12 1 101 1 152 2 227 1 245 2 
180 1 152 1 245 1 
180 1 152 1 245 1 
152 1 239 1 245 1 
152 1 239 1 245 1 
152 1 239 1 245 1 
11 2 30 2 364 2 117 1 174 1 45 1 341 3 286 1 22 2 370 2 23 1 219 2 304 1 152 2 198 1 245 2 126 1 144 1 128 2 
279 1 282 1 66 1 238 2 354 1 22 1 285 1 120 1 218 2 23 1 219 1 24 2 362 2 152 1 245 1 128 1 11 1 30 1 364 1 341 1 344 1 346 1 347 2 37 1 
34 1 88 1 78 1 
34 1 78 1 138 1 
220 1 55 1 88 2 249 1 78 3 138 1 
188 1 55 1 88 1 249 1 78 2 138 1 
55 1 88 1 249 2 78 2 138 1 
65 1 98 1 71 1 74 1 302 1 22 5 120 1 151 4 197 1 50 1 288 2 126 2 127 1 156 1 28 1 268 2 333 3 30 5 57 1 365 1 310 1 334 2 344 1 111 1 59 1 86 1 35 1 37 1 143 3 62 1 187 1 297 2 
238 1 171 1 327 1 98 1 71 1 44 1 21 1 302 1 22 5 120 1 218 1 358 2 151 4 24 1 197 1 362 1 26 1 126 1 127 1 28 1 268 1 333 1 30 5 57 1 83 1 365 1 310 1 334 2 311 1 111 1 31 1 59 1 35 1 347 1 143 1 62 3 297 1 348 2 
65 1 98 1 71 1 74 1 302 1 22 3 120 1 151 2 197 1 50 2 126 3 288 1 127 1 28 1 268 2 333 3 30 3 365 1 310 1 334 2 110 1 86 1 35 1 187 1 143 4 297 2 
65 1 98 1 71 1 74 2 302 1 22 4 120 2 151 3 197 1 50 3 126 4 288 2 127 2 201 1 28 2 268 4 333 5 30 4 365 1 310 2 334 4 342 1 110 1 86 2 35 1 320 1 143 7 187 1 297 4 
15 1 
67 1 177 1 
266 1 
177 1 335 1 
182 2 177 3 255 1 335 1 77 1 14 1 
177 1 255 1 335 1 
275 1 177 1 
28 1 80 3 280 4 192 2 170 1 353 2 74 1 274 3 87 1 140 1 318 1 123 1 373 1 176 1 8 7 79 1 93 1 
28 1 80 3 280 4 192 2 170 1 353 2 74 1 274 3 87 1 140 1 318 1 123 1 373 1 176 1 8 7 79 1 93 1 
28 1 80 3 280 4 192 2 170 1 353 2 74 1 274 3 87 1 140 1 318 1 123 1 373 1 176 1 305 1 8 7 79 1 93 1 
80 3 28 3 280 10 192 1 131 3 310 3 353 1 312 1 74 2 274 7 86 2 150 3 318 1 123 2 373 2 179 1 322 1 64 1 127 3 8 17 236 1 323 1 
280 5 146 1 192 3 170 1 353 2 148 1 99 2 74 1 215 2 123 1 8 9 79 1 28 1 80 4 130 4 134 2 274 4 345 1 140 1 87 1 254 2 318 1 373 1 93 1 
94 1 283 1 237 1 40 1 19 1 3 1 20 1 46 1 303 1 363 1 330 1 200 1 78 2 247 1 220 1 222 1 270 1 84 1 159 1 272 1 163 2 138 1 369 2 60 1 34 1 88 1 319 1 36 1 114 1 167 1 
94 1 283 1 237 1 40 1 19 1 3 1 20 1 46 1 124 1 363 1 200 1 78 2 129 1 247 2 220 1 104 1 222 1 270 1 84 1 159 1 272 1 163 3 138 1 369 3 60 1 34 1 88 1 319 1 36 1 114 1 
283 1 237 1 40 1 19 1 46 1 363 1 200 1 78 2 129 1 247 2 104 1 220 1 270 1 84 1 159 1 272 1 163 2 138 1 369 2 60 1 34 1 88 1 36 1 319 1 114 1 
40 1 222 1 270 2 335 1 19 1 106 1 159 1 161 1 272 2 328 1 20 1 163 1 216 1 369 1 217 1 60 1 177 1 36 2 124 1 319 2 256 1 114 1 295 1 
94 1 220 1 40 1 237 1 104 1 222 1 270 1 19 1 159 1 3 1 272 1 20 1 138 1 163 1 46 1 369 1 60 1 303 1 34 1 88 1 36 1 319 1 114 1 167 1 78 2 200 1 
178 1 
40 1 193 1 42 1 238 1 240 1 98 1 242 1 44 1 6 2 49 4 50 2 7 1 203 1 333 2 53 1 13 1 335 1 334 2 206 2 159 2 337 1 161 1 109 2 162 1 111 3 59 1 60 1 256 1 114 2 347 1 62 6 116 1 212 2 300 1 351 1 352 1 19 2 71 1 302 1 22 5 356 1 217 2 177 1 362 1 25 2 126 2 82 2 30 5 365 1 135 1 271 1 231 1 372 2 35 1 143 2 
300 1 238 1 42 1 240 1 98 1 242 1 44 1 22 3 356 1 362 1 49 2 25 1 7 1 126 1 203 1 30 3 13 1 135 1 162 1 111 1 112 1 231 1 347 1 62 2 
203 1 300 1 82 1 30 2 42 1 238 1 13 1 135 1 98 1 240 1 242 1 44 1 162 1 22 2 231 1 356 1 362 1 49 3 347 1 7 1 126 1 
212 1 300 1 238 1 42 1 240 1 98 1 242 1 44 1 22 3 356 1 362 1 49 3 25 1 7 1 126 1 203 1 30 3 82 1 13 1 135 1 162 1 111 1 112 1 231 1 347 1 62 2 
189 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 4 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 3 112 1 59 1 347 2 62 7 212 4 300 1 171 1 21 1 214 1 71 1 302 1 22 5 356 1 218 1 24 1 362 2 25 4 126 2 30 5 82 2 83 1 135 1 365 1 271 1 311 1 31 1 231 1 372 2 141 1 376 1 
193 1 238 2 42 1 98 2 240 1 242 1 44 2 6 2 49 4 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 2 59 1 347 2 62 4 116 1 212 2 300 1 171 1 21 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 2 126 2 30 4 82 2 83 1 135 1 365 1 271 1 311 1 31 1 231 1 372 2 143 2 
189 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 4 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 2 59 1 347 2 62 4 212 2 300 1 171 1 21 1 214 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 2 126 2 30 4 82 2 83 1 365 1 135 1 271 1 311 1 31 1 231 1 372 2 
189 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 4 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 2 59 1 347 2 62 4 212 2 300 1 171 1 21 1 214 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 2 126 2 30 4 82 2 83 1 365 1 135 1 271 1 311 1 31 1 231 1 372 2 
0 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 4 7 1 203 1 333 1 13 1 334 1 293 2 162 1 111 2 59 1 165 2 347 2 62 4 212 2 300 1 169 1 171 1 21 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 2 126 2 265 1 30 4 82 2 83 1 365 1 135 1 311 1 31 1 231 1 372 2 143 2 
189 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 5 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 2 59 1 347 2 62 5 212 3 300 1 171 1 21 1 214 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 3 126 2 30 4 82 3 83 1 135 1 365 1 271 1 311 1 31 1 231 1 372 2 141 1 
189 1 193 1 42 1 238 2 98 2 240 1 97 1 242 1 44 2 6 2 49 5 7 1 50 2 203 1 333 1 13 1 334 1 206 2 162 1 109 2 111 2 59 1 347 2 62 5 212 3 300 1 171 1 21 1 214 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 3 126 2 30 4 82 3 83 1 135 1 365 1 271 1 311 1 31 1 231 1 372 2 141 1 
193 1 238 2 42 1 98 2 240 1 242 1 44 2 6 2 49 4 7 1 203 1 333 1 13 1 334 1 293 2 162 1 111 2 59 1 165 2 347 2 62 4 116 1 212 2 300 1 171 1 21 1 71 1 302 1 22 4 356 1 218 1 24 1 362 2 25 2 126 2 265 1 30 4 82 2 83 1 135 1 365 1 311 1 31 1 231 1 372 2 143 2 
15 1 130 2 254 1 360 1 134 1 160 1 99 1 366 1 215 1 
280 10 241 12 99 2 215 2 196 1 150 4 47 1 360 2 123 3 329 12 8 15 127 3 28 3 80 3 130 4 183 12 131 3 134 2 310 3 160 1 336 1 137 1 274 5 32 1 346 1 254 2 64 1 375 1 377 1 323 2 
280 1 238 1 173 1 99 1 215 1 196 1 218 1 360 1 359 1 47 1 24 1 362 1 8 2 130 2 183 1 134 1 160 1 336 1 273 1 274 1 254 1 347 1 166 1 
280 3 40 1 192 1 238 1 241 2 99 2 4 1 196 1 47 1 329 2 8 5 9 1 290 1 335 1 159 1 160 2 107 1 58 1 60 1 254 2 114 1 347 2 255 1 166 1 19 1 72 1 215 2 217 1 218 1 359 1 360 2 24 1 123 2 362 2 177 1 127 1 28 1 80 3 130 4 221 1 183 2 134 2 310 1 274 2 316 1 317 1 
280 1 39 1 40 2 69 1 19 2 99 1 215 1 217 1 360 1 47 1 244 1 177 2 153 1 8 2 130 2 134 1 291 1 335 2 159 2 160 1 336 1 161 1 315 1 274 1 60 3 254 1 255 1 114 2 256 1 259 1 
280 1 299 1 192 1 238 1 241 1 99 1 21 1 215 1 74 1 196 1 218 1 360 1 24 1 362 1 329 1 127 1 8 3 80 1 248 1 28 1 130 2 183 1 134 1 310 1 160 1 274 2 86 1 254 1 347 1 
80 1 28 1 280 2 130 2 183 1 134 1 310 1 241 1 160 1 366 1 99 1 215 1 360 1 254 1 123 1 329 1 199 1 8 2 
80 1 192 1 130 2 183 1 284 1 134 1 241 1 160 1 366 1 99 1 215 1 74 1 274 2 86 1 360 1 254 1 329 1 8 2 
280 2 192 1 241 2 99 1 215 1 74 1 360 1 123 1 329 2 127 1 8 4 28 1 80 2 130 2 183 2 134 1 310 1 160 1 366 1 274 2 86 1 254 1 
80 1 28 1 280 2 130 2 183 1 134 1 310 1 291 1 241 1 160 1 99 1 215 1 360 1 254 1 123 1 329 1 199 1 8 2 
80 1 192 1 130 2 183 1 284 1 134 1 291 1 241 1 160 1 99 1 215 1 74 1 274 2 86 1 360 1 254 1 329 1 8 2 
80 1 28 1 280 2 130 2 183 1 134 1 310 1 291 1 241 1 160 1 99 1 215 1 360 1 254 1 123 1 329 1 8 2 127 1 
80 1 28 1 280 2 130 2 183 1 134 1 310 1 241 1 160 1 99 1 215 1 360 1 254 1 123 1 329 1 127 1 8 2 
280 1 40 1 19 1 99 1 4 1 215 1 217 1 360 1 47 1 177 1 362 1 8 2 130 2 290 1 134 1 335 1 159 1 160 1 336 1 107 1 274 1 60 1 316 1 346 1 254 1 255 1 114 1 347 1 
280 1 40 1 325 1 19 1 99 1 4 1 215 1 217 1 360 1 47 1 177 1 362 1 8 2 130 2 134 1 136 1 335 1 159 1 160 1 336 1 274 1 60 1 346 1 254 1 255 1 114 1 347 1 210 1 
80 1 28 1 280 2 130 2 183 1 134 1 310 1 241 1 160 1 99 1 215 1 196 1 360 1 254 1 123 1 329 1 8 2 127 1 
280 2 40 1 19 1 241 1 99 1 4 1 215 1 360 1 123 1 177 1 362 1 329 1 330 1 8 2 127 1 80 1 28 1 130 2 183 1 290 1 134 1 310 1 335 1 159 1 160 1 107 1 60 1 316 1 317 1 254 1 255 1 114 1 347 1 
17 1 280 2 238 1 241 1 99 1 21 1 215 1 196 1 218 1 360 1 123 1 24 1 362 1 329 1 127 1 8 2 80 1 248 1 28 1 130 2 183 1 134 1 310 1 160 1 254 1 347 1 
280 8 350 1 192 1 99 2 355 1 215 2 74 2 150 4 123 2 8 18 127 2 306 1 28 2 80 3 130 4 131 2 132 1 184 2 134 2 310 2 108 1 313 2 274 10 86 2 164 1 33 1 345 1 254 2 64 3 92 1 323 1 
280 8 350 1 192 2 99 2 355 1 215 2 74 2 150 4 123 2 8 18 127 2 306 1 28 2 80 4 130 4 131 2 132 1 184 2 134 2 310 2 108 1 313 2 274 10 86 2 164 1 33 1 345 1 254 2 64 3 92 1 323 1 
280 10 350 1 192 3 170 1 353 1 99 1 215 1 74 3 150 3 123 2 8 20 127 2 79 1 28 3 80 5 130 2 131 2 132 1 184 1 134 1 310 2 108 1 313 1 274 10 32 1 86 2 87 1 140 1 345 1 254 1 64 2 92 1 93 1 323 1 
280 9 350 1 192 3 99 2 355 2 215 2 74 3 150 2 123 3 264 1 8 19 127 3 306 1 28 3 80 6 130 4 131 1 184 1 134 2 310 3 108 1 313 2 274 10 86 3 33 1 345 1 254 2 64 1 92 1 323 1 
280 2 350 2 130 2 131 1 132 1 134 1 184 2 99 1 108 1 215 1 313 1 274 3 150 2 345 1 254 1 64 2 8 5 92 1 
11 1 219 1 269 1 364 1 152 1 198 1 245 1 174 1 45 1 128 1 
282 1 354 1 
251 1 103 1 287 1 11 1 219 1 364 1 152 1 245 1 128 1 
11 1 30 1 364 1 117 1 174 1 45 1 341 2 22 1 370 1 23 1 219 1 304 1 152 1 198 1 245 1 126 1 144 1 128 1 
11 1 30 1 364 1 117 1 174 1 45 1 341 2 22 1 370 1 23 1 219 1 304 1 152 1 198 1 245 1 126 1 144 1 128 1 
11 1 30 1 364 1 117 1 174 1 45 1 341 2 22 1 370 1 23 1 219 1 304 1 152 1 198 1 245 1 126 1 144 1 128 1 
180 1 12 1 257 1 
180 1 12 1 257 1 
175 1 239 1 
12 1 175 1 239 1 
279 1 66 1 
279 1 282 1 66 1 238 2 194 1 354 1 22 1 285 1 120 1 218 2 151 1 219 1 304 1 24 2 362 2 152 1 245 1 128 1 11 1 30 1 364 1 341 1 344 1 370 1 346 1 347 2 37 1 
180 1 257 1 
12 1 175 1 239 1 
211 1 280 1 39 2 40 1 238 2 69 1 19 2 2 1 99 1 215 1 196 1 360 1 121 1 47 1 177 1 362 2 8 2 267 1 130 2 134 1 335 1 159 2 160 1 336 1 208 1 274 1 60 1 16 1 254 1 347 2 114 2 
220 1 40 1 104 1 237 1 1 1 172 1 19 2 159 2 3 1 272 1 138 1 294 1 46 1 60 1 34 1 88 1 114 2 330 1 78 2 
220 1 104 1 237 1 40 1 1 1 18 1 19 1 159 1 3 1 272 1 138 1 46 1 60 1 34 1 88 1 114 1 78 2 
40 1 29 1 335 1 19 1 159 1 106 1 272 1 161 1 294 1 217 1 60 1 177 1 114 1 256 1 
220 1 104 1 237 1 40 1 1 1 172 1 19 1 159 1 3 1 272 1 138 1 294 1 46 1 60 1 34 1 88 1 114 1 78 2 
281 1 
15 1 
98 1 71 1 302 1 22 1 50 1 126 2 333 1 30 1 365 1 271 1 334 1 206 1 109 1 111 1 59 1 143 1 62 1 
190 1 40 1 98 2 240 2 195 2 100 2 243 2 50 6 154 2 330 1 333 9 53 1 56 1 335 1 334 8 159 2 111 3 59 4 60 2 255 1 114 2 62 5 297 6 67 3 19 2 71 4 302 4 74 2 22 5 75 1 217 1 177 6 125 2 77 1 126 8 127 2 28 2 268 6 81 1 221 2 182 2 30 5 224 2 365 4 310 2 367 2 86 2 139 1 35 2 143 12 277 1 
43 1 96 1 98 2 71 2 302 2 74 2 22 1 100 1 150 1 50 3 125 2 126 5 127 2 28 2 268 5 333 8 53 1 30 1 131 1 132 1 365 2 310 2 334 5 111 1 59 2 86 2 35 1 235 1 91 1 62 1 143 6 297 5 64 1 63 1 298 1 
30 1 365 1 214 1 71 1 302 1 22 1 59 1 140 1 90 1 125 1 79 1 
81 1 333 1 365 1 334 1 98 1 71 1 302 1 59 1 75 1 126 1 
28 2 268 5 221 1 333 5 310 2 334 5 74 2 100 1 86 2 50 5 125 2 143 10 297 5 126 5 127 2 
22 1 111 1 30 1 98 1 62 1 126 1 
40 1 351 1 95 2 19 4 71 2 302 2 22 3 217 2 177 1 333 2 53 2 30 3 157 1 56 1 205 1 365 2 335 1 334 2 159 4 337 1 161 1 110 1 111 2 59 1 60 1 35 2 114 4 256 1 62 4 
40 1 238 2 19 1 99 1 21 2 4 1 215 1 217 1 218 2 47 1 360 1 24 2 362 3 177 1 8 1 130 2 290 1 134 1 83 1 335 1 159 1 160 1 107 1 274 1 232 1 60 1 316 1 346 1 254 1 114 1 347 3 255 1 
268 2 333 1 53 1 365 1 353 1 334 2 98 2 71 1 302 1 59 1 35 1 50 2 143 4 297 2 126 4 
11 1 364 1 155 1 
66 1 11 1 105 1 364 1 174 1 
11 1 364 1 155 1 
11 1 364 1 155 1 
11 1 361 1 364 1 
11 1 361 1 364 1 
11 1 361 1 364 1 
11 1 364 1 
152 1 245 1 
280 4 192 2 170 1 353 1 99 1 74 1 215 1 150 1 8 8 79 1 28 1 80 2 130 2 131 1 132 1 134 1 274 4 345 1 140 1 87 1 254 1 64 1 93 1 
280 6 192 2 170 1 353 1 99 2 74 1 215 2 150 2 123 1 8 11 127 1 79 1 28 2 80 3 130 4 131 1 132 1 134 2 310 1 274 5 87 1 140 1 345 1 254 2 209 1 64 1 93 1 323 1 
280 9 192 3 170 1 43 1 353 1 148 1 99 3 215 3 74 3 150 1 123 1 8 19 127 2 79 1 28 3 80 4 130 6 131 1 132 1 134 3 310 2 274 10 86 2 87 1 140 1 345 1 254 3 235 1 209 1 91 1 64 1 63 1 93 1 
280 10 192 3 170 1 43 1 353 1 148 1 99 3 215 3 74 2 150 1 123 2 8 17 127 2 79 1 28 3 80 5 130 6 131 1 132 1 134 3 310 2 274 7 86 1 87 1 140 1 345 1 254 3 235 1 209 1 91 1 64 1 63 1 93 1 
280 4 192 2 170 1 353 1 99 1 74 1 215 1 150 1 8 8 79 1 28 1 80 2 130 2 131 1 132 1 134 1 274 4 345 1 140 1 87 1 254 1 64 1 93 1 
280 6 192 1 43 1 99 1 215 1 74 2 150 1 123 1 8 12 127 2 28 2 80 2 130 2 131 1 132 1 134 1 310 2 274 6 86 2 345 1 254 1 235 1 91 1 64 1 63 1 
280 10 192 3 170 1 43 1 353 1 148 2 99 4 215 4 74 2 150 1 123 2 8 18 127 2 79 1 28 3 80 5 130 8 131 1 132 1 134 4 310 2 274 8 86 1 87 1 140 1 345 1 254 4 235 1 91 1 209 1 64 1 63 1 93 1 
280 9 192 3 43 1 148 2 99 4 215 4 74 2 150 1 123 3 8 16 127 3 28 3 80 6 130 8 131 1 132 1 134 4 310 3 274 7 86 2 33 1 345 1 254 4 235 1 91 1 64 1 63 1 
80 6 28 1 280 3 192 3 170 1 74 1 274 4 140 3 87 1 123 3 8 7 93 2 79 3 
280 10 192 3 170 1 43 1 353 1 148 2 99 4 215 4 74 2 150 1 123 1 8 18 127 2 79 1 28 3 80 4 130 8 131 1 132 1 134 4 310 2 274 8 86 1 33 1 87 1 140 1 345 1 254 4 235 1 91 1 64 1 63 1 93 1 
28 1 280 4 80 3 192 2 130 4 170 1 134 2 353 1 148 1 99 2 74 1 215 2 274 4 87 1 140 1 254 2 123 1 8 8 93 1 79 1 
15 1 
80 2 28 1 280 2 192 1 130 2 134 1 310 1 99 1 74 1 215 1 274 2 86 1 254 1 123 1 209 1 127 1 8 4 
280 3 28 1 80 2 192 1 131 1 310 1 74 1 274 4 86 1 150 2 123 1 64 1 8 7 127 1 323 1 
280 11 192 5 41 1 170 1 353 1 148 2 99 2 74 3 215 2 150 2 123 4 127 2 8 23 79 2 80 9 28 3 130 4 131 2 134 2 310 2 274 12 86 2 32 1 87 1 140 2 254 2 375 1 93 1 323 1 
274 1 150 1 8 1 
280 1 131 1 8 1 
28 1 280 3 80 3 130 2 221 1 192 2 134 1 310 1 99 1 215 1 74 1 274 3 86 1 254 1 123 1 209 1 8 6 127 1 
280 6 192 1 43 1 99 1 215 1 74 2 150 1 123 1 8 12 127 2 28 2 80 2 130 2 131 1 132 1 134 1 310 2 274 6 86 2 345 1 254 1 235 1 91 1 64 1 63 1 
28 1 280 3 80 2 192 1 74 1 274 3 87 1 140 1 123 1 8 6 79 1 
280 1 80 2 192 1 41 1 130 2 170 1 134 1 148 1 99 1 215 1 274 2 140 1 254 1 123 1 8 3 79 1 93 1 
80 1 192 1 140 1 90 1 79 1 
28 1 280 2 80 1 130 2 134 1 310 1 99 1 215 1 345 1 254 1 123 1 8 2 
80 2 28 1 280 2 192 1 130 2 134 1 310 1 99 1 74 1 215 1 274 2 86 1 345 1 254 1 123 1 127 1 8 4 
80 2 280 1 41 1 130 6 192 1 134 3 148 1 99 3 215 3 274 2 33 1 345 1 140 1 254 3 123 1 8 3 79 1 
80 1 28 2 280 7 130 6 131 3 134 3 310 2 99 3 312 1 74 1 215 3 274 4 86 1 33 1 345 1 150 2 254 3 123 1 322 1 209 1 64 1 127 2 8 11 236 1 
238 1 346 1 362 1 135 1 347 1 339 1 278 1 
191 1 181 1 238 1 135 1 339 1 228 1 73 1 346 1 362 1 347 1 331 1 278 1 
217 1 15 1 114 1 19 1 159 1 
40 1 238 1 335 1 19 1 159 1 107 1 4 1 217 1 60 1 218 1 346 1 359 1 24 1 177 1 362 2 255 1 347 2 114 1 
40 1 238 2 95 1 19 1 4 1 44 1 218 2 359 1 24 1 362 2 177 3 7 1 13 1 335 2 159 1 107 1 60 1 346 1 275 1 276 1 114 1 347 2 255 2 
40 1 238 2 95 1 19 2 4 1 44 1 218 2 359 1 24 1 362 2 177 3 7 1 102 1 13 1 335 2 159 2 60 1 346 1 275 1 276 1 114 2 347 2 255 2 210 1 
40 1 67 1 95 1 19 3 240 1 98 1 22 2 217 1 357 1 177 4 102 1 126 1 182 1 30 2 335 1 159 3 60 1 275 1 276 1 234 1 114 3 255 1 62 1 
40 1 30 2 182 1 67 1 224 1 95 1 335 1 19 3 98 1 240 1 159 3 22 2 217 1 60 1 275 1 276 1 177 4 255 1 114 3 102 1 62 1 126 1 
60 1 40 1 223 1 114 1 19 1 159 1 
332 1 39 1 104 1 40 2 223 1 225 1 19 7 335 2 159 7 315 1 217 2 60 3 16 1 149 1 177 3 114 6 255 1 246 1 330 1 77 1 259 1 
280 2 192 2 40 1 238 1 170 1 19 1 99 2 4 1 74 1 215 2 196 1 218 1 360 2 359 1 24 1 177 1 362 2 330 1 8 5 79 2 28 1 80 2 267 1 130 4 290 1 134 2 335 1 160 2 159 1 107 1 274 3 58 1 60 1 316 1 87 1 140 2 317 1 346 2 254 2 255 1 347 2 114 1 93 1 
67 1 19 1 98 1 240 1 71 2 302 2 22 3 75 1 217 1 151 1 243 1 177 2 154 1 126 1 333 1 81 1 30 3 182 1 56 1 224 1 365 2 334 1 159 1 367 1 111 1 59 2 114 1 62 2 
190 1 40 1 182 1 223 1 19 1 335 1 159 1 60 2 177 2 114 1 255 1 77 1 266 1 
40 1 19 4 335 1 159 4 161 1 217 1 76 1 60 1 177 1 114 4 256 1 102 1 330 1 
315 1 60 2 40 1 307 1 95 1 177 1 244 1 255 1 114 2 335 1 153 1 19 2 159 2 259 1 
46 1 217 1 60 1 40 1 34 1 114 1 19 1 159 1 78 1 138 1 
211 1 104 1 40 1 19 2 335 1 159 2 60 1 16 1 177 1 114 2 330 1 
332 1 40 2 95 1 19 5 335 2 159 5 161 1 217 1 76 1 60 2 16 1 177 3 256 1 114 4 330 1 246 1 
332 1 40 2 95 1 261 1 19 5 335 2 159 5 161 1 217 1 76 1 60 2 16 1 177 3 256 1 114 4 330 1 
40 1 238 1 335 1 19 1 159 1 4 1 217 1 60 1 218 1 346 1 359 1 24 1 177 1 362 2 255 1 347 2 114 1 210 1 
40 1 95 1 19 1 335 1 159 1 315 1 60 2 149 1 177 1 114 1 255 1 77 1 259 1 
208 1 343 1 238 1 121 1 61 1 158 1 362 1 347 1 2 1 
343 1 68 1 296 1 
343 1 113 1 346 1 61 1 158 1 
238 1 171 1 68 1 240 1 98 1 21 1 44 2 22 2 218 1 151 1 24 1 48 1 362 1 7 1 126 1 203 1 30 2 158 1 13 1 83 1 292 1 311 1 31 1 343 1 113 1 61 1 347 1 296 1 
15 1 
369 1 283 1 222 1 84 1 363 1 20 1 163 1 
36 1 270 1 163 1 
283 1 54 2 222 1 84 1 338 1 20 1 163 3 369 3 368 1 89 1 167 1 363 1 
247 1 252 1 369 2 283 1 222 1 84 1 363 1 20 1 163 2 
222 1 301 1 20 1 163 1 230 1 369 1 34 1 88 1 167 1 363 1 78 1 
369 1 283 1 222 1 167 1 363 1 20 1 163 1 
369 1 283 2 222 1 84 1 167 1 20 1 163 1 
283 1 222 2 20 2 163 2 369 2 233 1 115 1 167 1 363 1 27 1 
247 2 283 1 222 1 84 1 20 1 163 3 207 1 230 1 369 3 122 1 167 1 186 1 363 2 
247 1 283 1 220 1 222 1 84 1 20 1 138 1 163 2 369 2 34 1 262 1 88 1 167 1 363 1 78 2 
247 2 283 1 222 2 84 1 20 2 163 4 5 1 207 1 230 1 369 4 252 1 167 1 363 2 
369 1 283 1 222 1 84 1 167 1 363 1 20 1 163 1 
247 2 283 2 54 1 222 1 84 2 338 1 20 1 163 4 207 1 230 1 368 1 369 4 258 1 363 3 
247 1 10 1 369 2 283 1 222 1 84 1 321 1 167 1 363 1 20 1 119 1 163 2 
283 1 54 2 222 1 118 1 84 1 338 1 20 1 163 3 369 3 368 2 167 1 363 1 
253 2 308 1 363 2 51 1 
38 1 369 1 222 1 167 1 20 1 163 1 
247 1 369 2 283 1 222 1 122 1 84 1 167 1 363 1 20 1 163 2 
326 1 
369 1 283 1 222 1 84 1 167 1 363 1 20 1 163 1 
247 1 369 3 283 1 54 1 222 1 122 1 84 1 167 1 363 1 20 1 163 3 
230 1 258 1 363 1 207 1 
283 1 363 1 

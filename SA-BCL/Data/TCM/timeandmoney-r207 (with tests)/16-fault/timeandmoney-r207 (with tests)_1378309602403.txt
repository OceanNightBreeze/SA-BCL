#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 207 (127,257,316) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 107 139 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 107 139 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 107 139 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 107 139 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 107 139 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) (42,110) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (42,110) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) (42,110) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (16,36,134,324) (16,36,134,324) (16,36,134,324) 309 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 271 158 34 255 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 271 158 34 255 7 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 271 158 34 255 7 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 7 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 180 270 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 103 34 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 107 (151,238) (151,238) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
96 1 120 1 129 1 
154 2 120 1 240 1 
172 2 247 1 176 1 210 2 320 2 190 2 59 2 81 2 
162 1 163 1 247 1 165 1 8 1 210 2 251 1 128 1 215 2 10 1 291 1 131 1 296 1 171 2 172 3 135 1 176 1 101 1 222 2 58 1 59 2 141 1 15 1 183 1 308 1 310 2 109 1 190 2 69 1 146 2 318 1 197 1 320 2 276 1 203 1 204 1 81 3 
232 1 86 1 172 1 247 1 210 1 320 1 190 1 220 1 59 1 81 1 
40 1 62 1 86 1 210 1 167 1 249 1 45 1 96 1 195 1 133 1 172 1 120 1 140 1 81 1 
282 1 86 2 247 1 167 1 210 2 249 1 96 1 133 2 172 2 220 1 59 2 140 2 62 1 190 2 232 1 195 1 320 2 120 1 81 2 
295 1 185 1 133 1 235 1 140 1 
96 1 295 1 133 2 235 1 285 1 120 1 33 1 140 2 
133 1 235 1 140 1 
282 1 86 1 247 1 210 1 190 1 295 1 232 1 133 1 172 1 320 1 220 1 59 1 140 1 81 1 
120 1 
96 1 295 1 133 2 235 1 76 1 120 1 33 1 140 2 
111 2 192 1 26 1 265 1 293 1 96 1 295 2 294 1 269 2 52 1 234 1 133 5 53 2 30 1 235 2 120 1 33 1 39 1 140 5 
176 1 129 1 
61 1 210 2 190 1 72 1 172 2 320 1 176 2 59 1 81 2 
317 1 196 1 100 1 
205 1 163 1 308 1 165 1 109 1 146 1 128 1 291 1 318 1 171 1 172 1 176 1 222 1 15 1 204 1 81 1 
163 1 308 1 109 1 165 1 210 1 190 1 230 1 128 1 146 1 291 1 318 1 171 1 196 1 172 2 272 1 320 1 222 1 204 1 15 1 81 2 
172 3 176 1 210 3 320 3 190 3 230 1 59 1 81 3 
232 1 86 1 172 1 210 1 320 1 190 1 81 1 
61 1 86 1 172 1 210 1 320 1 190 1 72 1 59 1 81 1 
162 1 163 1 86 1 247 1 165 1 8 1 210 3 167 1 249 1 128 1 215 2 291 1 10 1 131 1 296 1 133 1 171 1 172 4 176 1 222 1 58 1 59 2 141 1 15 1 140 1 183 1 308 1 61 1 62 1 310 1 65 1 109 1 190 3 69 1 230 1 146 1 268 1 318 1 195 1 320 3 272 1 276 1 204 1 81 4 
40 1 172 2 176 1 210 2 320 1 190 1 230 1 94 1 81 2 
0 1 61 1 62 1 86 1 210 3 167 1 190 3 249 1 230 2 268 1 195 1 133 1 172 3 120 1 272 1 320 3 59 1 140 1 81 3 
317 1 61 1 196 1 172 2 210 2 320 2 190 2 230 1 59 1 81 2 
163 1 308 1 165 1 109 1 146 1 128 1 291 1 318 1 171 1 172 1 176 1 222 1 15 1 204 1 81 1 
106 1 308 1 165 1 109 1 146 1 128 1 318 1 171 1 319 1 172 1 176 1 222 1 15 1 204 1 81 1 
280 1 248 1 166 1 8 1 215 2 131 1 296 1 97 1 98 1 100 2 141 1 183 2 310 4 311 1 261 1 69 1 73 1 317 2 115 1 196 2 197 2 276 1 277 1 80 1 
86 1 210 1 190 1 249 1 116 1 172 1 320 1 81 1 
40 1 61 1 210 5 211 1 190 4 230 2 94 1 172 5 320 4 176 1 272 1 78 1 59 1 81 5 
232 1 116 1 86 1 172 2 210 2 320 2 190 2 81 2 
127 1 29 1 
127 1 29 1 
257 1 207 1 
257 1 207 1 
257 1 207 1 
257 1 127 1 29 1 207 1 
316 1 127 1 29 1 
127 1 217 1 29 1 
127 1 217 1 29 1 
127 1 217 1 29 1 
20 1 127 1 29 1 
20 1 127 1 29 1 
20 1 127 1 29 1 
83 1 127 2 108 2 23 1 6 1 88 2 67 3 71 1 288 2 44 2 130 2 29 2 133 2 198 1 77 1 155 1 120 1 140 2 159 1 
127 1 88 1 210 2 212 1 288 1 289 1 214 1 130 1 133 1 172 2 301 1 176 1 140 1 307 1 184 1 108 1 67 1 190 2 231 1 316 1 29 1 77 1 320 2 81 2 
191 1 274 1 290 1 
274 1 325 1 290 1 
54 1 219 1 191 2 274 3 325 1 239 1 
54 1 219 1 191 1 274 2 56 1 325 1 
54 1 219 2 191 1 274 2 325 1 
82 1 248 1 295 4 96 1 48 1 97 1 133 5 301 1 53 1 179 1 140 5 184 1 307 1 311 1 66 1 261 1 111 1 68 1 192 2 25 1 26 3 148 1 269 1 234 1 117 2 235 1 154 3 120 2 322 2 33 1 202 2 240 1 
281 1 82 2 3 5 248 3 295 7 96 1 298 1 97 3 133 9 53 2 138 1 140 9 224 1 307 4 185 5 225 1 311 3 66 2 261 3 68 1 111 2 192 6 265 1 26 8 148 3 269 2 234 1 235 6 154 9 120 5 322 6 33 1 202 6 240 3 243 1 
82 1 248 1 96 1 295 2 48 1 97 1 133 3 53 1 140 3 307 1 66 1 311 1 261 1 111 1 192 2 25 1 265 1 26 3 148 1 269 1 117 1 154 4 120 3 322 2 202 2 240 2 
281 1 82 1 248 2 96 1 295 3 298 1 48 1 97 2 133 4 53 1 138 1 140 4 307 2 66 1 311 2 261 2 111 1 192 4 265 1 25 1 26 5 148 2 269 1 117 2 154 7 120 4 322 4 202 4 240 3 
28 1 308 1 129 1 
308 1 180 1 
153 1 
308 1 109 1 
28 2 318 1 308 3 63 1 2 1 109 1 
318 1 308 1 109 1 
19 1 308 1 
107 1 50 1 310 1 197 1 139 1 
107 1 50 1 310 1 197 1 139 1 
107 1 50 1 310 1 197 1 139 1 95 1 
107 1 50 1 310 1 197 1 139 1 
107 1 50 1 310 1 197 1 139 1 
126 1 134 1 309 1 36 1 16 1 
126 1 42 1 134 1 36 1 16 1 
126 1 110 1 324 1 36 1 
126 1 42 1 134 1 36 1 16 1 
126 1 134 1 309 1 36 1 16 1 
315 1 
86 1 89 1 165 2 91 1 167 1 249 1 11 1 171 2 172 1 173 1 181 1 15 1 109 1 111 1 192 2 114 1 26 2 27 1 267 1 269 1 195 1 33 2 273 1 37 3 123 1 40 1 210 1 43 1 128 1 45 1 47 1 216 1 297 1 133 4 53 1 221 1 222 2 140 4 227 1 308 1 62 1 64 1 66 1 146 2 233 1 234 1 152 1 235 4 154 1 79 1 240 1 242 1 81 1 
40 1 227 1 62 1 86 1 64 1 167 1 210 1 249 1 114 1 45 1 11 1 233 1 195 1 133 3 172 1 76 1 235 2 33 1 221 1 37 2 140 3 81 1 
40 1 86 1 210 1 167 1 249 1 45 1 96 1 133 3 172 1 221 1 140 3 227 1 62 1 64 1 114 1 27 1 195 1 233 1 235 1 76 1 120 1 33 1 37 3 81 1 
40 1 86 1 210 1 167 1 249 1 45 1 96 1 11 1 133 3 172 1 221 1 140 3 227 1 62 1 64 1 114 1 27 1 195 1 233 1 76 1 235 2 120 1 33 1 37 3 242 1 81 1 
40 1 284 1 86 1 89 2 91 2 43 1 210 1 167 1 250 1 287 1 249 1 45 1 96 5 11 4 133 5 53 1 172 1 221 1 181 1 140 5 227 1 62 1 64 1 189 1 111 1 192 1 114 1 26 1 27 4 269 1 233 1 195 1 234 1 152 2 235 7 76 1 120 5 33 3 79 2 37 6 240 2 241 1 242 4 81 1 
86 1 89 2 167 1 91 2 249 1 96 1 11 2 172 1 181 1 111 1 114 1 192 1 26 1 27 2 195 1 269 1 120 2 33 2 37 4 40 1 123 1 43 1 210 1 45 1 133 4 53 1 221 1 140 4 227 1 62 1 64 1 233 1 234 1 152 2 235 4 154 2 79 2 240 2 242 2 81 1 
40 1 86 1 284 1 89 2 91 2 43 1 210 1 167 1 250 1 249 1 45 1 96 1 11 2 133 4 53 1 172 1 221 1 181 1 140 4 227 1 62 1 64 1 111 1 192 1 114 1 26 1 27 2 195 1 233 1 269 1 234 1 235 4 152 2 120 1 33 2 79 2 37 4 240 2 242 2 241 1 81 1 
40 1 86 1 284 1 89 2 91 2 43 1 210 1 167 1 250 1 249 1 45 1 96 1 11 2 133 4 53 1 172 1 221 1 181 1 140 4 227 1 62 1 64 1 111 1 192 1 114 1 26 1 27 2 195 1 233 1 269 1 234 1 235 4 152 2 120 1 33 2 79 2 37 4 240 2 242 2 241 1 81 1 
40 1 85 2 86 1 91 2 210 1 167 1 250 1 249 1 45 1 96 1 11 2 133 4 53 1 172 1 221 1 102 1 137 1 181 1 140 4 227 1 62 1 64 1 260 2 112 1 111 1 192 1 114 1 26 1 27 2 195 1 233 1 269 1 234 1 235 4 154 2 120 1 33 2 79 2 37 4 242 2 81 1 
40 1 86 1 284 1 89 2 91 2 43 1 210 1 167 1 250 1 249 1 287 1 45 1 96 1 11 3 133 4 53 1 172 1 221 1 181 1 140 4 227 1 62 1 64 1 111 1 192 1 114 1 26 1 27 3 269 1 195 1 233 1 234 1 152 2 235 5 120 1 33 2 79 2 37 5 240 2 241 1 242 3 81 1 
40 1 86 1 284 1 89 2 91 2 43 1 210 1 167 1 250 1 249 1 287 1 45 1 96 1 11 3 133 4 53 1 172 1 221 1 181 1 140 4 227 1 62 1 64 1 111 1 192 1 114 1 26 1 27 3 269 1 195 1 233 1 234 1 152 2 235 5 120 1 33 2 79 2 37 5 240 2 241 1 242 3 81 1 
123 1 40 1 85 2 86 1 91 2 210 1 167 1 249 1 45 1 96 1 11 2 133 4 53 1 172 1 221 1 181 1 140 4 227 1 62 1 64 1 260 2 111 1 112 1 192 1 114 1 26 1 27 2 233 1 269 1 195 1 234 1 235 4 154 2 120 1 33 2 79 2 37 4 242 2 81 1 
183 2 280 1 107 1 310 5 24 1 311 1 8 1 69 1 73 1 129 1 215 2 131 1 314 1 296 1 97 1 197 3 151 1 175 1 176 1 238 1 276 1 277 1 141 1 
125 3 208 1 90 1 248 1 8 2 215 4 131 2 296 2 97 1 135 1 176 1 55 1 100 11 136 1 58 1 141 2 183 6 226 1 21 1 310 14 311 2 312 1 261 2 69 2 73 1 148 2 317 4 196 11 271 3 197 8 276 1 277 2 158 1 
205 1 163 1 4 1 165 1 8 1 210 1 128 1 215 2 291 1 131 1 296 1 171 1 172 2 135 1 176 1 222 1 58 1 15 1 141 1 183 1 308 1 310 2 109 1 312 1 190 1 69 1 230 1 146 1 75 1 318 1 317 1 197 1 320 1 272 1 276 1 204 1 81 2 279 1 
162 2 163 2 165 1 248 2 8 3 252 2 171 1 97 3 172 3 12 2 175 1 176 1 100 6 15 2 183 9 107 1 24 1 109 2 261 2 190 1 113 1 196 6 197 10 272 1 276 3 277 3 204 2 210 1 128 2 215 6 291 2 131 3 296 3 135 1 303 2 222 1 58 1 141 3 308 2 310 19 144 1 311 3 312 1 69 3 230 1 146 1 73 3 314 1 148 2 318 2 149 2 317 6 151 1 320 1 238 1 81 3 
280 1 165 2 210 1 8 2 168 1 128 2 215 4 47 1 131 2 296 2 171 7 172 1 135 1 222 8 58 1 15 2 141 2 17 1 183 1 308 3 310 2 188 1 109 2 190 1 264 1 69 2 230 1 146 8 313 1 267 1 31 1 197 1 118 1 320 1 199 1 201 1 276 2 203 2 81 1 
1 1 248 1 8 1 210 1 215 2 131 1 296 1 97 1 172 1 100 1 59 1 141 1 183 2 61 1 310 3 311 1 312 1 261 1 190 1 69 1 73 1 148 1 317 1 196 1 197 1 320 1 276 1 277 1 81 1 
280 1 310 2 311 1 8 1 261 1 69 1 215 2 131 1 317 1 296 1 115 1 196 1 197 2 55 1 100 1 276 1 277 1 141 1 
280 1 183 2 310 2 248 1 8 1 166 1 69 1 73 1 215 2 131 1 317 1 296 1 97 1 196 1 100 1 276 1 277 1 141 1 
280 1 248 1 8 1 215 2 131 1 296 1 97 1 100 2 55 1 141 1 183 2 310 4 311 1 261 1 69 1 73 1 148 1 317 2 196 2 197 2 276 1 277 2 
310 2 311 1 8 1 261 1 69 1 215 2 131 1 317 1 296 1 115 1 196 1 197 2 55 1 100 1 199 1 276 1 277 1 141 1 
183 2 310 2 248 1 8 1 166 1 69 1 73 1 215 2 131 1 317 1 296 1 97 1 196 1 100 1 199 1 276 1 277 1 141 1 
248 1 8 1 215 2 131 1 296 1 97 1 100 2 55 1 141 1 183 2 310 4 311 1 261 1 69 1 73 1 148 1 317 2 196 2 197 2 199 1 276 1 277 2 
248 1 8 1 215 2 131 1 296 1 97 1 100 2 55 1 141 1 183 2 310 4 311 1 261 1 69 1 73 1 148 1 317 2 196 2 197 2 276 1 277 2 
162 1 163 1 165 1 8 1 128 1 215 2 291 1 131 1 296 1 171 1 172 1 135 1 176 1 222 1 58 1 15 1 141 1 183 1 308 1 310 2 109 1 69 1 146 1 318 1 197 1 276 1 204 1 81 1 
165 1 8 1 128 1 215 2 131 1 296 1 171 1 172 1 135 1 176 1 222 1 58 1 15 1 141 1 106 1 183 1 308 1 310 2 109 1 69 1 146 1 318 1 319 1 197 1 156 1 276 1 204 1 81 1 
248 1 8 1 215 2 131 1 296 1 97 1 100 2 55 1 141 1 183 2 310 4 311 1 261 1 312 1 69 1 73 1 148 1 317 2 196 2 197 2 276 1 277 2 
162 1 163 1 248 1 8 1 128 1 215 2 291 1 131 1 296 1 97 1 171 1 172 1 303 1 55 1 100 2 222 1 15 1 141 1 183 2 308 1 310 4 311 1 109 1 261 1 264 1 69 1 73 1 146 1 148 1 317 2 318 1 196 2 197 2 276 1 277 2 204 1 81 1 
248 1 8 1 210 1 215 2 169 1 131 1 296 1 97 1 172 1 55 1 100 1 59 1 141 1 183 1 61 1 310 3 311 1 312 1 261 1 190 1 69 1 148 1 317 1 196 1 197 2 320 1 276 1 277 1 81 1 
161 1 125 1 7 1 248 3 8 2 215 4 296 2 97 3 254 2 255 1 55 3 14 2 141 2 60 1 18 1 183 10 226 1 186 1 258 1 310 19 311 3 261 3 69 2 73 3 266 1 148 3 271 2 197 9 277 6 158 1 
125 1 183 3 310 5 258 1 7 1 8 1 69 1 266 1 215 2 296 1 271 2 197 2 254 1 255 2 34 1 158 2 141 1 60 2 
125 2 7 1 248 2 8 2 215 4 296 2 97 2 254 2 255 1 55 2 14 1 141 2 60 2 18 1 183 10 226 1 186 1 258 1 310 18 311 2 261 2 229 1 69 2 73 1 266 1 148 2 271 4 197 8 34 1 277 3 158 3 
125 2 7 1 248 2 8 2 215 4 296 2 97 2 254 2 255 1 55 2 14 1 141 2 60 2 18 1 183 10 226 1 186 1 258 1 310 18 311 2 261 2 229 1 69 2 73 2 266 1 148 2 271 4 197 8 34 1 277 4 158 3 
125 1 183 4 107 1 310 9 258 1 24 1 7 1 311 1 8 1 69 1 73 1 266 1 215 2 314 1 296 1 97 1 151 1 197 5 271 1 175 1 254 1 255 1 238 1 277 1 141 1 158 1 60 1 
83 1 127 1 29 1 108 1 88 1 155 1 71 1 70 1 288 1 130 1 
316 1 231 1 
246 1 127 1 29 1 142 1 108 1 88 1 288 1 213 1 130 1 
83 1 127 1 108 1 23 1 6 1 88 1 67 2 71 1 288 1 44 1 130 1 133 1 29 1 77 1 155 1 120 1 140 1 159 1 
83 1 127 1 108 1 23 1 6 1 88 1 67 2 71 1 288 1 44 1 130 1 133 1 29 1 77 1 155 1 120 1 140 1 159 1 
83 1 127 1 108 1 23 1 6 1 88 1 67 2 71 1 288 1 44 1 130 1 133 1 29 1 77 1 155 1 120 1 140 1 159 1 
217 1 84 1 300 1 
217 1 84 1 300 1 
20 1 74 1 
20 1 300 1 74 1 
289 1 214 1 
127 1 88 1 210 2 212 1 44 1 288 1 289 1 214 1 130 1 295 1 133 1 172 2 301 1 99 1 176 1 140 1 307 1 184 1 108 1 67 1 190 2 231 1 316 1 29 1 320 2 159 1 81 2 
217 1 84 1 
20 1 300 1 74 1 
206 1 8 1 210 2 168 1 128 1 215 2 131 1 296 1 171 2 172 2 174 1 135 1 218 1 222 2 58 1 15 1 141 1 183 1 310 2 312 1 263 1 69 1 146 2 197 1 276 1 203 2 245 1 81 2 
228 1 5 1 286 1 191 1 264 1 290 1 128 1 146 2 170 1 171 2 253 1 118 1 274 2 325 1 222 2 38 1 239 1 105 1 15 1 
283 1 228 1 5 1 286 1 191 1 290 1 146 1 128 1 170 1 171 1 118 1 274 2 325 1 222 1 239 1 105 1 15 1 
308 1 22 1 109 1 165 1 128 1 146 1 47 1 267 1 171 1 253 1 178 1 222 1 105 1 15 1 
228 1 5 1 286 1 191 1 290 1 146 1 128 1 170 1 171 1 253 1 118 1 274 2 325 1 222 1 38 1 239 1 105 1 15 1 
193 1 
96 1 52 1 30 1 120 1 192 1 26 1 129 1 
89 1 43 1 96 1 133 1 53 1 140 1 111 1 192 1 26 1 269 1 234 1 152 1 235 1 154 1 120 2 33 1 240 1 
308 1 63 1 109 1 165 1 111 1 262 1 128 1 146 1 318 1 269 1 270 1 234 1 171 1 53 1 222 1 180 1 15 1 
125 1 248 2 92 1 97 2 53 1 304 1 103 1 311 2 261 2 111 1 192 5 26 6 148 2 269 1 234 1 271 1 154 6 120 3 322 5 34 1 323 1 202 5 240 3 158 1 
282 1 86 1 247 1 210 1 133 1 97 1 172 1 53 1 175 1 220 1 59 1 140 1 24 1 311 2 111 1 190 1 192 2 26 2 314 1 232 1 269 1 234 1 237 1 320 1 35 2 241 1 81 1 244 1 
111 1 192 1 26 1 96 1 269 1 52 1 234 1 53 1 30 1 120 1 
311 2 248 2 261 2 192 5 26 5 148 2 252 1 97 2 154 10 237 1 120 5 322 5 35 2 202 5 240 5 
96 1 133 1 235 1 120 1 33 1 140 1 
165 2 128 1 9 1 47 1 216 1 297 2 171 4 133 3 53 2 302 1 222 4 15 1 140 3 308 1 143 2 109 1 66 2 111 2 146 4 192 2 265 1 26 2 267 1 269 2 234 1 235 4 273 1 33 2 157 1 
162 1 163 1 247 1 165 1 210 2 8 1 128 1 215 2 10 1 291 1 131 1 296 1 171 1 172 3 176 1 222 1 58 1 59 2 141 1 15 1 183 1 308 1 310 1 109 1 190 2 69 1 146 1 318 1 320 2 276 1 204 1 81 3 
107 1 66 1 111 1 192 2 26 1 96 1 269 1 297 1 234 1 53 1 154 2 120 2 322 1 202 1 240 1 
108 1 155 1 321 1 288 1 214 1 
108 1 32 1 288 1 
108 1 32 1 288 1 
108 1 32 1 288 1 
108 1 275 1 288 1 
108 1 275 1 288 1 
108 1 275 1 288 1 
108 1 288 1 
127 1 29 1 
183 3 107 1 310 7 24 1 311 1 8 2 69 2 73 1 215 4 314 1 296 2 97 1 197 4 151 1 175 1 55 1 13 1 238 1 277 2 141 2 
183 2 107 1 310 5 24 1 311 1 73 1 129 1 314 1 97 1 151 1 197 3 175 1 238 1 277 1 
183 2 310 4 248 1 311 1 8 1 261 1 69 1 73 1 147 1 215 2 148 1 296 1 97 1 197 2 55 1 277 2 141 1 
183 4 125 1 226 1 310 7 248 1 311 1 261 1 73 1 148 1 97 1 271 2 197 3 55 1 277 2 158 1 
125 2 248 2 8 1 215 2 296 1 97 3 175 1 55 1 13 1 136 1 141 1 183 8 226 1 107 1 310 17 21 1 24 1 311 3 261 2 69 1 73 2 314 1 148 2 151 1 197 9 271 2 238 1 277 3 
183 1 310 1 271 1 
125 1 310 1 197 1 
183 3 310 6 311 1 248 1 8 1 261 1 69 1 73 2 215 2 147 1 148 1 252 1 296 1 97 1 197 3 55 1 277 3 141 1 
125 1 248 2 8 3 92 1 215 6 296 3 97 2 304 1 55 2 13 2 103 1 141 3 183 7 310 14 258 1 311 2 261 2 69 3 73 2 148 2 271 1 197 7 34 1 323 1 277 4 158 1 
183 3 310 6 24 1 311 1 73 1 314 1 97 1 197 3 175 1 55 1 277 2 
183 2 310 3 24 1 8 1 69 1 73 1 215 2 314 1 296 1 150 1 197 1 151 1 55 1 13 1 238 1 277 2 141 1 
183 5 258 1 310 10 24 2 311 2 8 1 69 1 73 3 215 2 314 2 296 1 97 2 197 5 175 1 55 2 277 5 141 1 244 1 
258 1 310 2 311 1 8 1 261 1 69 1 215 2 296 1 197 2 55 1 277 1 141 1 
183 2 258 1 310 4 248 1 311 1 8 1 261 1 69 1 73 1 215 2 148 1 296 1 97 1 197 2 55 1 277 2 141 1 
183 2 186 1 310 3 258 1 24 1 8 3 69 3 73 1 215 6 314 1 296 3 150 1 197 1 13 1 55 1 277 2 141 3 
125 3 248 2 8 4 209 1 215 8 296 4 132 1 97 3 175 1 13 1 55 2 104 1 141 4 183 10 107 1 186 1 258 1 310 21 24 1 311 3 261 2 69 4 73 2 147 1 314 1 148 2 151 1 271 3 197 11 238 1 277 4 158 1 
183 3 125 1 107 1 258 1 310 7 24 1 311 1 8 1 69 1 73 1 215 2 314 1 296 1 97 1 151 1 197 4 271 1 175 1 34 1 238 1 277 1 141 1 158 1 
125 1 8 2 215 4 296 2 97 1 175 1 55 1 141 2 183 4 226 1 107 1 310 10 258 1 24 1 311 2 261 1 69 2 73 1 147 1 314 1 148 1 151 1 271 2 197 6 34 1 238 1 277 2 158 1 
125 1 248 2 8 3 92 1 215 6 296 3 97 3 175 1 304 1 13 1 55 3 103 1 141 3 183 8 107 1 310 18 258 1 24 1 311 3 261 2 69 3 73 1 147 1 314 1 148 2 151 1 271 1 197 10 34 1 238 1 323 1 277 4 158 1 
125 1 248 1 8 3 92 1 215 6 296 3 97 2 175 1 304 1 55 1 13 1 103 1 141 3 183 7 107 1 310 16 258 1 24 1 311 3 261 2 69 3 73 3 147 1 314 1 148 2 151 1 271 1 197 9 34 1 238 1 323 1 277 4 158 1 
183 3 125 1 107 1 258 1 310 7 24 1 311 1 8 1 69 1 73 1 215 2 314 1 296 1 97 1 151 1 197 4 271 1 175 1 34 1 238 1 277 1 141 1 158 1 
125 1 248 2 8 3 92 1 215 6 296 3 97 2 304 1 55 2 13 2 103 1 141 3 183 7 310 14 258 1 311 2 261 2 69 3 73 2 148 2 271 1 197 7 34 1 323 1 277 4 158 1 
125 1 183 4 258 1 310 10 248 1 311 2 261 2 8 2 92 1 69 2 215 4 147 1 148 2 296 2 97 1 197 6 271 1 304 1 34 1 103 1 323 1 141 2 158 1 
125 1 183 4 186 1 258 1 310 10 248 1 311 2 261 2 8 2 92 1 69 2 73 1 215 4 148 2 296 2 97 1 197 6 271 1 304 1 55 1 34 1 103 1 323 1 277 2 141 2 158 1 
183 4 310 7 24 3 311 1 73 3 314 3 97 1 151 1 197 3 175 1 55 3 238 2 277 6 
125 1 183 4 186 1 258 1 310 10 248 1 311 2 261 2 8 2 92 1 69 2 215 4 148 2 296 2 97 1 197 6 271 1 304 1 34 1 103 1 323 1 141 2 158 1 
40 1 172 1 176 1 210 1 145 1 94 1 81 1 
40 1 187 1 210 1 145 1 94 1 46 1 172 1 236 1 176 1 57 1 160 1 81 1 
267 1 308 1 171 1 109 1 165 1 222 1 128 1 146 1 129 1 15 1 47 1 
308 1 109 1 165 1 210 1 190 1 230 1 146 1 128 1 291 1 318 1 171 1 172 2 176 1 320 1 222 1 204 1 15 1 81 2 
124 1 86 1 210 2 167 1 249 1 128 1 291 1 171 1 172 2 176 1 222 1 15 1 19 1 308 3 143 1 109 2 190 1 230 1 146 1 318 2 320 2 204 1 81 2 
124 1 86 1 210 2 167 1 249 1 128 1 171 2 172 2 176 1 222 2 15 1 106 1 19 1 308 3 143 1 109 2 190 1 230 1 146 2 318 2 320 2 204 1 278 1 81 2 
282 1 86 1 247 1 210 1 96 1 51 1 171 1 133 1 172 1 220 1 222 1 180 1 59 1 140 1 308 1 143 1 190 1 146 1 232 1 120 1 320 1 81 1 
282 1 86 1 247 1 210 1 96 1 299 1 171 1 133 1 172 1 220 1 222 1 180 1 59 1 140 1 308 1 143 1 190 1 146 1 232 1 120 1 320 1 81 1 
171 1 31 1 222 1 128 1 146 1 15 1 
308 3 63 1 188 1 87 1 165 2 109 2 264 1 146 7 128 2 313 1 318 1 171 6 31 1 118 1 201 1 122 1 222 7 256 1 203 1 15 3 17 1 
162 1 163 1 8 2 210 1 128 1 215 4 291 1 131 2 296 2 97 1 171 1 172 2 12 1 175 1 218 1 303 1 176 1 222 1 15 1 141 2 183 2 107 1 308 1 310 5 24 1 311 1 109 1 312 1 190 1 69 2 264 1 230 1 73 1 146 1 314 1 318 1 197 3 151 1 320 1 238 1 276 2 277 1 204 1 81 2 
86 1 247 1 165 1 93 1 96 2 171 1 97 2 172 1 175 1 177 1 180 1 24 1 111 2 190 1 192 5 26 4 194 1 269 2 30 1 120 2 33 1 35 2 282 1 210 1 295 1 52 1 299 1 133 2 53 2 220 1 222 1 59 1 140 2 308 1 311 2 146 1 314 1 232 1 234 2 235 1 237 1 320 1 157 1 244 1 81 1 
308 1 63 1 109 1 262 1 146 1 128 1 28 1 318 1 171 1 31 1 153 1 222 1 15 1 
308 1 165 1 109 1 264 1 146 4 128 1 47 1 267 1 171 4 222 4 15 1 182 1 278 1 
41 1 308 1 143 1 87 1 109 1 146 2 128 1 318 1 171 2 119 1 122 1 222 2 15 2 306 1 
171 1 5 1 165 1 274 1 325 1 222 1 290 1 128 1 146 1 15 1 
171 2 118 1 263 1 264 1 222 2 128 1 146 2 15 1 
308 3 143 1 188 1 165 1 109 2 264 1 146 5 128 2 313 1 47 1 267 1 171 4 222 5 15 2 182 1 17 1 
308 3 143 1 165 1 109 2 264 1 146 5 128 2 313 1 47 1 267 1 49 1 171 4 222 5 15 2 182 1 17 1 
106 1 308 1 109 1 165 1 210 1 190 1 230 1 146 1 128 1 318 1 171 1 172 2 176 1 320 1 222 1 204 1 15 1 81 2 
308 1 63 1 143 1 87 1 109 1 146 1 128 1 318 1 171 1 122 1 222 1 256 1 15 2 
172 1 206 1 164 1 174 1 210 1 121 1 305 1 81 1 245 1 
259 1 121 1 200 1 
164 1 176 1 121 1 305 1 223 1 
282 1 164 2 86 2 247 1 210 1 167 1 249 1 292 1 295 1 96 1 133 2 172 1 176 1 220 1 305 2 223 2 59 1 140 2 62 1 259 1 190 1 232 1 268 1 195 1 320 1 121 1 120 1 200 1 81 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (102,111) 339 (170,182) (170,182) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (102,111) 339 (170,182) (170,182) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (102,111) 339 (170,182) (170,182) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (102,111) 339 (170,182) (170,182) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 237 54 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (223,338) (223,338) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (223,338) 184 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (223,338) (223,338) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 148 1 118 1 141 1 102 1 182 1 312 1 170 1 356 1 267 1 296 1 
339 1 148 1 118 1 141 1 102 1 182 1 312 1 170 1 356 1 267 1 296 1 
339 1 148 1 118 1 141 1 102 1 182 1 312 1 170 1 356 1 267 1 296 1 
339 1 148 1 118 1 141 1 102 1 182 1 312 1 170 1 356 1 267 1 296 1 
0 1 141 1 236 2 312 1 296 4 51 1 23 1 373 2 78 1 148 4 177 3 128 1 137 1 82 1 365 1 321 1 267 1 270 3 
141 1 168 1 311 1 347 1 312 1 296 2 51 1 23 1 148 2 118 1 128 1 321 1 267 1 356 1 245 1 270 1 
111 1 141 2 236 1 312 2 296 3 51 1 148 3 78 1 118 1 177 1 128 1 267 1 270 2 
111 1 0 1 312 2 118 1 137 1 321 1 365 1 340 1 141 2 236 4 212 1 296 9 51 1 372 1 23 1 373 2 78 3 148 9 177 7 265 1 128 1 82 1 267 1 270 5 
111 1 0 1 312 2 118 1 137 1 321 1 365 1 340 1 141 2 236 4 212 1 296 9 51 1 372 1 23 1 373 2 78 3 148 9 177 7 265 1 128 1 82 1 267 1 270 5 
107 1 97 1 8 1 
228 1 97 1 326 2 
90 1 227 2 26 2 205 2 75 2 50 1 351 2 298 2 
134 1 60 1 2 1 335 1 114 1 34 2 188 1 359 1 90 1 91 1 227 2 92 1 66 1 253 1 205 3 364 1 257 2 17 1 341 1 209 1 233 1 294 2 143 2 75 2 174 1 50 1 351 3 298 2 215 1 125 2 327 1 264 1 305 1 26 2 354 1 110 1 157 1 
216 1 227 1 345 1 26 1 205 1 75 1 15 1 50 1 351 1 298 1 
309 1 198 1 258 1 345 1 142 1 287 1 75 1 50 1 194 1 298 1 8 1 351 2 300 1 227 2 216 2 26 1 205 2 355 1 28 1 15 1 97 1 
258 1 345 1 142 2 287 1 75 2 50 1 194 1 8 1 298 2 351 2 300 1 227 2 216 2 26 2 205 2 355 2 28 1 15 1 97 1 
334 1 142 1 355 1 64 1 131 1 
299 1 286 1 334 1 142 2 355 2 97 1 131 1 8 1 
142 1 355 1 131 1 
258 1 334 1 345 1 142 1 75 1 50 1 298 1 351 1 216 1 227 1 26 1 355 1 205 1 15 1 
97 1 
299 1 24 1 334 1 142 2 355 2 97 1 131 1 8 1 
30 1 191 2 334 2 142 5 123 1 288 1 8 1 299 1 53 1 151 2 282 1 80 1 355 5 155 2 244 1 97 1 83 1 131 2 292 1 
222 1 209 1 233 1 324 1 2 1 335 1 174 1 75 1 48 1 298 1 351 2 34 1 359 1 125 1 327 1 227 1 92 1 354 1 205 2 257 1 
90 1 107 1 
29 1 63 1 75 1 351 2 298 1 227 2 90 2 26 1 205 2 
222 1 201 1 247 1 
209 1 233 1 2 1 44 1 335 1 174 1 351 1 34 1 359 1 125 1 327 1 90 1 92 1 354 1 205 1 257 1 
324 1 90 1 227 3 26 1 205 3 75 3 351 3 298 3 
216 1 227 1 345 1 205 1 75 1 351 1 298 1 
29 1 216 1 227 1 26 1 205 1 63 1 75 1 351 1 298 1 
2 1 60 1 335 1 287 1 66 1 253 1 205 4 257 1 17 1 209 1 294 2 211 1 75 3 174 1 298 3 351 4 300 1 215 1 125 1 216 2 305 1 26 2 354 1 27 1 355 1 28 1 29 1 34 1 358 1 359 1 188 1 227 3 92 1 91 1 90 1 364 1 324 1 233 1 142 1 143 1 48 1 50 1 194 1 327 1 157 1 
309 1 324 1 90 1 227 2 135 1 205 2 75 1 351 2 298 1 
29 1 324 2 142 1 287 1 86 1 75 3 48 1 194 1 298 3 351 3 358 1 300 1 216 1 227 3 26 1 355 1 205 3 28 1 97 1 
29 1 222 1 227 1 26 1 205 1 75 1 351 1 298 1 
209 1 233 1 2 1 335 1 174 1 351 1 34 1 359 1 125 1 327 1 90 1 92 1 354 1 205 1 257 1 
209 1 233 1 343 1 2 1 335 1 351 1 34 1 359 1 125 1 327 1 90 1 119 1 354 1 205 1 257 1 
17 1 222 1 294 2 100 1 60 1 143 2 247 1 77 1 188 1 149 1 91 1 150 1 66 1 305 2 95 1 157 1 
300 1 216 1 227 1 200 1 205 1 75 1 351 1 298 1 
309 1 29 1 324 2 135 1 172 1 75 4 48 1 298 4 351 5 227 5 90 1 26 1 205 5 16 1 
216 1 227 2 200 1 345 1 205 2 75 2 351 2 298 2 
81 1 246 1 
81 1 246 1 
87 1 
87 1 
87 1 
81 1 246 1 47 1 
81 1 246 1 57 1 
158 1 120 1 81 1 246 1 87 1 
81 1 246 1 47 1 
81 1 246 1 47 1 
333 1 81 1 246 1 
333 1 81 1 246 1 
333 1 81 1 246 1 
273 1 43 1 167 1 69 1 70 2 142 2 246 2 262 1 88 1 35 2 251 1 353 2 241 3 81 2 106 1 355 2 97 1 285 2 330 2 
246 1 357 1 35 1 90 1 227 2 164 1 205 2 231 1 20 1 70 1 142 1 22 1 75 2 298 2 351 2 214 1 353 1 241 1 81 1 106 1 355 1 57 1 285 1 271 1 
137 1 321 1 23 1 
347 1 321 1 23 1 
252 1 370 1 178 1 137 2 347 1 321 3 
252 1 178 1 137 1 347 1 321 2 33 1 
252 2 137 1 178 1 347 1 321 2 
334 4 113 1 62 1 288 1 186 1 8 1 227 1 362 1 363 1 205 1 39 1 15 1 97 1 190 1 166 1 191 1 258 1 345 1 142 5 144 1 22 1 123 1 75 1 326 1 50 1 351 1 298 1 299 1 216 1 151 1 282 2 26 1 355 5 283 1 155 1 243 2 131 1 
334 4 113 1 288 1 64 2 186 1 8 1 227 1 362 1 363 1 205 1 39 1 15 1 97 1 190 1 166 1 191 1 258 1 345 1 142 5 144 1 22 1 123 1 75 1 326 1 50 1 351 1 298 1 299 1 126 1 151 1 216 1 282 2 105 2 26 1 355 5 129 1 155 1 131 3 
334 2 113 2 62 1 288 3 186 1 8 1 227 1 228 1 362 1 205 1 363 1 15 1 39 1 97 2 190 1 292 1 258 1 191 1 345 1 142 3 144 2 22 1 75 1 326 3 50 1 77 1 351 1 298 1 216 1 151 1 150 1 282 2 26 1 283 1 355 3 243 1 155 1 
334 2 113 4 62 1 288 5 8 1 205 1 15 1 292 1 121 1 258 1 295 1 345 1 22 2 75 1 350 1 77 2 351 1 298 1 216 1 26 1 355 3 186 1 227 1 228 2 362 2 363 1 39 2 97 3 190 2 191 1 142 3 144 4 326 6 50 1 151 1 150 2 282 4 283 1 155 1 243 1 
359 1 107 1 238 1 
359 1 237 1 
67 1 
359 1 2 1 
359 3 301 1 2 1 335 1 242 1 238 2 
359 1 2 1 335 1 
359 1 203 1 
341 4 325 1 3 1 143 7 71 1 32 1 260 3 239 1 150 1 361 2 305 3 152 1 318 1 14 1 39 1 139 2 221 1 
341 4 325 1 3 1 143 7 71 1 32 1 260 3 239 1 150 1 361 2 305 3 152 1 318 1 14 1 39 1 139 2 221 1 
341 4 325 1 3 1 143 7 71 1 32 1 260 3 49 1 239 1 150 1 361 2 305 3 152 1 318 1 14 1 39 1 139 2 221 1 
3 2 4 1 32 2 248 4 188 1 36 1 66 1 361 3 318 1 362 3 14 5 254 1 39 4 139 5 190 3 207 1 17 1 368 3 341 16 294 2 325 1 71 1 143 31 260 10 77 3 239 2 374 1 352 1 150 4 305 15 152 2 307 1 221 1 157 1 
3 1 4 1 32 1 188 2 226 1 66 2 361 2 14 1 39 1 139 3 17 2 341 5 294 4 143 9 71 1 325 1 260 4 239 1 150 1 152 1 305 4 56 1 157 2 221 1 
115 1 312 1 65 1 34 1 118 1 137 1 94 1 189 1 255 1 321 2 257 1 68 1 370 1 141 1 169 1 347 1 74 1 296 2 51 1 23 1 148 2 125 1 375 1 327 1 177 1 217 1 128 1 354 1 267 1 270 1 
115 1 312 1 34 1 118 1 137 1 189 1 255 1 321 2 257 1 68 1 370 1 141 1 169 1 193 1 347 1 74 1 213 1 296 3 51 1 23 1 148 3 124 1 125 1 375 1 327 1 177 2 217 1 128 1 354 1 270 1 
115 1 34 1 118 1 137 1 255 1 321 2 257 1 68 1 370 1 347 1 74 1 213 1 296 2 51 1 23 1 148 2 124 1 125 1 375 1 327 1 177 2 217 1 128 1 354 1 270 1 
209 1 2 1 141 1 61 1 193 1 115 2 312 1 46 1 74 2 296 1 148 1 34 1 359 1 263 1 125 1 327 1 118 2 376 1 354 1 219 1 255 2 257 1 367 1 
68 1 370 1 141 1 169 1 347 1 115 1 312 1 74 1 296 1 213 1 23 1 65 1 148 1 34 1 375 1 125 1 327 1 118 1 217 1 137 1 354 1 189 1 255 1 321 2 267 1 257 1 
199 1 
198 1 2 1 5 2 287 1 6 1 288 2 336 4 8 3 11 1 13 1 205 1 257 2 208 1 209 2 344 2 123 1 173 2 297 1 351 1 299 3 300 1 125 2 127 1 216 1 354 1 355 5 28 1 131 6 84 1 309 1 181 2 313 1 34 2 359 1 227 1 228 2 363 1 322 1 97 4 278 2 191 1 142 5 46 1 145 2 326 2 194 1 52 2 195 1 327 1 151 1 282 2 376 1 155 1 328 1 196 1 
309 1 84 1 198 1 287 1 336 2 8 2 227 1 11 1 205 1 322 1 97 2 278 1 142 3 194 1 351 1 299 1 300 1 24 1 127 1 216 1 355 3 28 1 196 1 131 2 
84 1 309 1 198 1 142 2 287 1 145 1 336 3 194 1 8 2 351 1 300 1 127 1 216 1 11 1 227 1 355 2 205 1 28 1 322 1 97 2 196 1 
309 1 84 1 198 1 287 1 336 3 8 3 227 1 11 1 205 1 322 1 97 3 278 1 142 3 173 1 145 1 194 1 351 1 299 1 300 1 24 1 127 1 216 1 355 3 28 1 196 1 131 2 
198 1 5 2 287 1 6 1 288 1 336 5 8 4 290 1 11 1 163 1 205 2 15 1 208 1 258 1 344 2 345 1 123 1 75 1 173 4 298 1 351 2 300 1 299 3 24 1 127 1 216 2 26 1 355 5 28 1 131 7 84 1 309 1 181 2 227 2 228 2 322 1 97 4 278 4 140 1 191 1 142 5 192 1 145 3 50 1 194 1 52 2 151 1 282 1 155 1 196 1 329 1 
198 1 5 2 287 1 6 1 288 1 336 4 8 3 11 1 205 1 208 1 344 2 123 1 173 2 351 1 300 1 299 2 127 1 216 1 355 4 28 1 131 4 309 1 84 1 181 2 313 1 227 1 228 2 322 1 97 4 278 2 191 1 142 4 145 2 326 2 194 1 52 2 151 1 282 1 155 1 196 1 
309 1 84 1 198 1 5 2 181 2 287 1 6 1 288 1 336 4 8 3 290 1 227 1 11 1 228 2 205 1 322 1 97 3 278 2 140 1 208 1 191 1 344 2 142 4 123 1 145 2 173 2 194 1 52 2 351 1 299 2 300 1 127 1 151 1 216 1 282 1 355 4 28 1 155 1 131 4 196 1 329 1 
309 1 84 1 198 1 5 2 181 2 287 1 6 1 288 1 336 4 8 3 290 1 227 1 11 1 228 2 205 1 322 1 97 3 278 2 140 1 208 1 191 1 344 2 142 4 123 1 145 2 173 2 194 1 52 2 351 1 299 2 300 1 127 1 151 1 216 1 282 1 355 4 28 1 155 1 131 4 196 1 329 1 
309 1 84 1 198 1 5 2 287 1 7 1 288 1 336 4 8 3 162 1 227 1 11 1 205 1 322 1 97 3 323 1 278 2 140 1 208 1 191 1 344 2 142 4 123 1 145 2 173 2 326 2 194 1 351 1 299 2 300 1 127 1 151 1 216 1 282 1 355 4 28 1 155 1 268 2 131 4 196 1 179 2 
309 1 84 1 198 1 5 2 181 2 287 1 6 1 288 1 336 5 8 3 290 1 227 1 11 1 163 1 228 2 205 1 322 1 97 3 140 1 278 3 208 1 191 1 344 2 142 4 123 1 145 3 173 3 194 1 52 2 351 1 299 2 300 1 127 1 151 1 216 1 282 1 355 4 155 1 28 1 329 1 196 1 131 5 
309 1 84 1 198 1 5 2 181 2 287 1 6 1 288 1 336 5 8 3 290 1 227 1 11 1 163 1 228 2 205 1 322 1 97 3 140 1 278 3 208 1 191 1 344 2 142 4 123 1 145 3 173 3 194 1 52 2 351 1 299 2 300 1 127 1 151 1 216 1 282 1 355 4 155 1 28 1 329 1 196 1 131 5 
198 1 5 2 287 1 288 1 336 4 8 3 11 1 205 1 208 1 344 2 123 1 173 2 351 1 300 1 299 2 127 1 216 1 355 4 28 1 268 2 131 4 179 2 309 1 84 1 313 1 227 1 322 1 97 3 323 1 278 2 191 1 142 4 145 2 326 2 194 1 151 1 282 1 155 1 196 1 
222 1 60 1 3 1 201 1 247 1 32 1 188 1 91 1 90 2 66 1 361 1 95 1 139 2 39 1 17 1 341 3 294 2 71 1 325 1 143 6 260 2 150 1 305 3 107 1 221 1 157 1 
331 1 222 7 60 1 247 7 201 6 248 2 161 1 188 2 90 1 91 2 66 2 362 2 14 1 39 2 190 2 42 1 17 2 368 2 341 6 232 1 294 4 369 1 143 9 260 1 215 1 216 1 305 3 27 1 307 1 157 2 
2 1 60 1 335 1 85 1 201 1 314 1 34 1 359 1 188 1 90 1 92 1 91 1 227 1 66 1 205 2 257 1 17 1 341 1 209 1 233 1 324 1 369 1 294 2 44 1 143 2 174 1 371 1 75 1 48 1 351 2 298 1 215 1 125 1 327 1 305 1 354 1 110 1 157 1 
60 1 34 1 188 1 91 1 227 1 66 1 165 1 205 1 257 1 17 1 209 1 210 1 324 1 369 1 294 2 143 2 348 1 75 1 48 1 76 1 351 1 298 1 215 1 125 1 305 2 157 1 
1 1 134 2 60 2 2 2 289 1 34 7 9 1 359 3 188 2 227 1 91 2 66 2 94 1 95 1 205 1 96 1 230 1 257 8 17 2 341 1 209 2 324 1 294 4 21 1 143 2 46 1 75 1 213 1 351 1 298 1 215 1 125 8 327 2 305 1 376 1 354 2 59 1 110 1 157 2 
29 1 222 1 60 1 201 1 247 1 188 1 91 1 227 1 66 1 362 1 205 1 256 1 139 1 39 1 190 1 17 1 341 1 294 2 369 1 143 3 260 1 75 1 77 1 298 1 351 1 150 1 305 2 26 1 157 1 
17 1 341 2 222 1 294 2 60 1 143 2 247 1 188 1 281 1 91 1 66 1 95 1 39 1 190 1 157 1 
17 1 222 1 294 2 60 1 143 2 247 1 77 1 188 1 149 1 91 1 150 1 66 1 305 2 95 1 157 1 
17 1 341 2 222 1 294 2 60 1 143 2 247 1 188 1 91 1 66 1 362 1 95 1 39 1 190 1 157 1 
17 1 341 2 222 1 294 2 60 1 143 2 247 1 188 1 281 1 91 1 66 1 230 1 39 1 190 1 157 1 
17 1 222 1 294 2 60 1 143 2 247 1 77 1 188 1 149 1 91 1 150 1 66 1 305 2 230 1 157 1 
17 1 341 2 222 1 294 2 60 1 143 2 247 1 188 1 91 1 66 1 362 1 230 1 39 1 190 1 157 1 
17 1 341 2 222 1 294 2 60 1 143 2 247 1 188 1 91 1 66 1 362 1 39 1 190 1 157 1 
2 1 60 1 335 1 34 1 359 1 188 1 90 1 92 1 91 1 66 1 364 1 205 1 257 1 17 1 341 1 209 1 233 1 294 2 143 2 174 1 351 1 215 1 125 1 327 1 305 1 354 1 110 1 157 1 
2 1 60 1 335 1 34 1 359 1 188 1 90 1 91 1 119 1 66 1 205 1 257 1 17 1 341 1 209 1 233 1 343 1 294 2 143 2 351 1 215 1 125 1 327 1 305 1 354 1 153 1 110 1 157 1 
17 1 341 2 222 1 369 1 294 2 60 1 143 2 247 1 188 1 91 1 66 1 362 1 39 1 190 1 157 1 
222 1 2 1 60 1 335 1 247 1 34 1 359 1 188 1 92 1 91 1 66 1 362 1 94 1 364 1 205 1 39 1 190 1 257 1 17 1 341 2 233 1 294 2 143 2 174 1 261 1 351 1 125 1 327 1 354 1 157 1 
29 1 222 1 60 1 247 1 201 1 188 1 91 1 227 1 66 1 362 1 14 1 205 1 366 1 39 1 190 1 17 1 341 2 294 2 369 1 143 2 260 1 75 1 298 1 351 1 26 1 157 1 
180 1 248 5 159 1 315 1 136 1 188 2 360 1 66 2 362 3 14 2 38 2 139 2 39 3 190 3 207 3 17 2 368 3 341 13 19 1 18 1 294 4 101 1 143 28 260 4 77 3 150 3 25 4 305 15 130 1 56 1 307 2 157 2 
180 1 248 5 159 1 315 1 136 1 188 2 360 1 66 2 362 3 14 2 38 2 139 3 39 3 190 3 207 3 17 2 368 3 341 13 19 1 18 1 294 4 101 1 143 28 260 5 77 3 150 3 25 4 305 15 130 1 56 1 307 2 157 2 
180 1 3 3 32 3 248 3 159 1 315 1 136 1 188 1 360 1 361 3 66 1 362 3 14 3 38 1 139 6 39 6 190 3 207 2 17 1 232 1 368 3 341 22 18 1 294 2 101 1 325 3 71 3 143 41 260 9 77 3 150 6 25 4 305 19 56 1 307 1 221 3 157 1 
180 1 248 4 159 1 315 1 136 1 188 2 360 1 66 2 362 4 14 3 38 1 139 4 39 4 190 4 207 2 17 2 368 2 341 14 18 2 294 4 101 1 143 30 260 7 77 4 280 1 150 4 25 4 305 16 130 1 56 1 307 2 157 2 
248 1 159 1 315 1 136 1 188 1 360 2 66 1 362 1 38 2 39 1 190 1 207 1 17 1 341 5 368 1 18 1 294 2 143 10 77 1 150 1 25 2 305 5 56 1 157 1 
273 1 35 1 251 1 69 1 353 1 70 1 81 1 246 1 349 1 285 1 
57 1 271 1 
35 1 112 1 277 1 353 1 70 1 81 1 246 1 175 1 285 1 
273 1 43 1 167 1 69 1 70 1 142 1 246 1 88 1 35 1 251 1 353 1 241 2 81 1 106 1 355 1 97 1 285 1 330 1 
273 1 43 1 167 1 69 1 70 1 142 1 246 1 88 1 35 1 251 1 353 1 241 2 81 1 106 1 355 1 97 1 285 1 330 1 
273 1 43 1 167 1 69 1 70 1 142 1 246 1 88 1 35 1 251 1 353 1 241 2 81 1 106 1 355 1 97 1 285 1 330 1 
120 1 47 1 249 1 
120 1 47 1 249 1 
333 1 291 1 
120 1 333 1 291 1 
231 1 357 1 
334 1 202 1 246 1 357 1 35 1 90 1 164 1 227 2 205 2 231 1 167 1 20 1 70 1 142 1 22 1 75 2 351 2 214 1 298 2 353 1 241 1 81 1 355 1 57 1 285 1 330 1 271 1 
47 1 249 1 
120 1 333 1 291 1 
134 2 2 1 60 1 31 1 185 1 289 1 34 2 359 1 188 1 91 1 227 2 66 1 205 2 257 2 17 1 341 1 369 1 294 2 21 1 143 2 72 1 351 2 215 1 125 2 303 1 327 1 305 1 354 1 110 1 272 1 157 1 
68 1 370 1 234 1 169 1 259 1 347 1 213 1 23 1 337 1 34 2 125 2 375 1 327 1 137 1 354 1 94 1 255 1 321 2 257 2 
68 1 370 1 169 1 347 1 213 1 23 1 337 1 34 1 187 1 125 1 375 1 327 1 137 1 354 1 255 1 321 2 257 1 
209 1 2 1 259 1 183 1 46 1 34 1 359 1 125 1 263 1 327 1 376 1 354 1 255 1 257 1 
68 1 370 1 234 1 169 1 259 1 347 1 213 1 23 1 337 1 34 1 125 1 375 1 327 1 137 1 354 1 255 1 321 2 257 1 
284 1 
30 1 282 1 107 1 288 1 97 1 83 1 8 1 
181 1 6 1 288 1 8 1 228 1 97 2 191 1 142 1 123 1 326 1 52 1 299 1 151 1 282 1 355 1 155 1 131 1 
209 1 191 1 2 1 335 1 45 1 237 1 123 1 34 1 359 1 125 1 54 1 327 1 151 1 354 1 242 1 155 1 257 1 
197 2 274 1 310 1 180 1 113 5 248 1 288 8 8 2 250 1 13 1 228 3 362 2 363 1 39 2 97 5 190 2 207 1 368 1 191 2 142 1 144 5 123 2 326 6 147 1 77 2 176 1 302 1 299 1 151 2 150 2 282 5 55 1 355 1 155 2 131 1 
197 2 3 1 32 1 288 2 10 1 227 1 205 1 39 2 15 1 191 1 258 1 345 1 142 1 325 1 123 1 75 1 50 1 351 1 298 1 302 1 216 1 151 1 150 1 282 2 26 1 355 1 155 1 329 1 
30 1 191 1 123 1 288 1 8 1 151 1 282 1 155 1 97 1 83 1 
197 2 210 1 113 5 144 5 288 5 326 10 77 2 302 1 150 2 282 5 228 5 362 2 39 2 97 5 190 2 
299 1 142 1 355 1 97 1 131 1 8 1 
2 1 288 2 34 4 359 1 13 2 319 2 363 2 206 1 257 4 292 1 209 2 191 2 346 1 142 3 123 1 46 1 299 2 195 1 125 4 327 1 151 2 282 2 376 1 354 1 355 3 155 2 328 1 220 1 131 4 
2 1 60 1 335 1 34 1 359 1 188 1 90 1 227 2 92 1 91 1 66 1 253 1 205 3 364 1 257 1 17 1 209 1 233 1 294 2 143 1 75 2 174 1 50 1 351 3 298 2 215 1 125 1 327 1 305 1 26 2 354 1 157 1 
191 1 113 2 144 2 123 1 288 1 326 4 8 2 151 1 361 1 228 2 282 2 13 1 363 1 155 1 97 4 
35 1 104 1 285 1 
35 1 251 1 357 1 285 1 41 1 
35 1 104 1 285 1 
35 1 104 1 285 1 
332 1 35 1 285 1 
332 1 35 1 285 1 
332 1 35 1 285 1 
35 1 285 1 
81 1 246 1 
180 1 3 1 248 1 32 1 188 1 361 1 66 1 39 1 139 2 207 1 17 1 368 1 341 4 294 2 143 8 71 1 325 1 260 2 150 1 305 4 56 1 157 1 221 1 
180 1 3 1 32 1 248 2 188 2 361 1 66 2 362 1 14 1 139 2 39 2 190 1 207 1 17 2 368 1 341 6 294 4 325 1 71 1 143 11 260 3 150 1 305 5 154 1 56 1 307 1 221 1 157 2 
274 1 310 1 180 1 3 1 4 1 32 1 248 1 188 3 361 1 66 3 362 2 14 1 39 3 139 3 190 2 207 1 17 3 368 1 341 9 294 6 325 1 71 1 143 19 260 4 147 1 77 2 150 3 305 10 154 1 55 1 56 1 221 1 157 3 
274 1 310 1 180 1 3 1 4 1 32 1 248 1 188 3 361 1 66 3 362 2 14 2 39 3 139 3 190 2 207 1 17 3 368 1 341 10 294 6 325 1 71 1 143 17 260 5 147 1 77 1 150 2 305 7 154 1 55 1 56 1 221 1 157 3 
180 1 3 1 248 1 32 1 188 1 361 1 66 1 39 1 139 2 207 1 17 1 368 1 341 4 294 2 143 8 71 1 325 1 260 2 150 1 305 4 56 1 157 1 221 1 
274 1 310 1 180 1 248 1 188 1 66 1 362 2 14 1 39 2 139 1 190 2 207 1 17 1 368 1 341 6 294 2 143 12 260 2 147 1 77 2 150 2 305 6 55 1 56 1 157 1 
274 1 310 1 180 1 3 1 4 2 32 1 248 1 188 4 361 1 66 4 362 2 14 2 39 3 139 3 190 2 207 1 17 4 368 1 341 10 294 8 325 1 71 1 143 18 260 5 147 1 77 1 150 2 305 8 55 1 154 1 56 1 221 1 157 4 
274 1 310 1 180 1 4 2 248 1 188 4 66 4 362 3 14 3 39 3 139 3 190 3 207 1 17 4 368 1 341 9 294 8 143 16 260 6 147 1 77 2 150 2 305 7 55 1 130 1 56 1 157 4 
341 3 143 7 71 1 3 3 325 1 32 3 260 6 150 1 305 4 14 3 139 3 39 1 221 2 
274 1 310 1 180 1 3 1 4 2 32 1 248 1 188 4 361 1 66 4 362 2 14 1 39 3 139 3 190 2 207 1 17 4 368 1 341 10 294 8 325 1 71 1 143 18 260 4 147 1 77 1 150 2 305 8 55 1 130 1 56 1 221 1 157 4 
17 2 341 4 294 4 325 1 143 8 71 1 3 1 4 1 32 1 260 3 188 2 150 1 361 1 66 2 305 4 14 1 39 1 139 2 157 2 221 1 
341 3 150 1 361 1 305 3 143 6 325 1 3 1 71 1 32 1 107 1 260 2 39 1 139 2 221 1 
17 1 341 2 294 2 143 4 260 2 77 1 188 1 150 1 66 1 305 2 362 1 14 1 154 1 139 1 39 1 190 1 157 1 
368 1 341 3 143 7 248 2 260 2 77 1 150 1 305 4 362 1 14 1 139 1 39 1 307 1 190 1 207 1 
3 2 4 2 32 2 248 2 161 1 188 2 361 1 66 2 362 2 14 4 39 3 139 5 190 2 17 2 341 11 368 2 232 1 294 4 325 1 71 1 143 23 260 9 77 2 279 1 150 3 305 12 307 1 221 1 157 2 
305 1 143 1 248 1 
341 1 368 1 143 1 
17 1 341 3 210 1 294 2 143 6 260 3 77 1 188 1 150 1 66 1 305 3 362 1 14 1 154 1 39 1 139 2 190 1 157 1 
274 1 310 1 180 1 248 1 188 1 66 1 362 2 14 1 39 2 139 1 190 2 207 1 17 1 368 1 341 6 294 2 143 12 260 2 147 1 77 2 150 2 305 6 55 1 56 1 157 1 
341 3 325 1 143 6 3 1 32 1 260 2 150 1 305 3 14 1 39 1 139 1 
17 1 341 1 294 2 3 1 143 3 71 1 4 1 32 1 260 2 279 1 188 1 66 1 305 2 14 1 139 1 221 1 157 1 
17 1 341 5 294 2 3 2 143 10 325 1 32 2 260 5 188 1 10 1 150 2 66 1 305 5 14 2 56 1 139 3 39 2 157 1 
17 1 341 2 294 2 143 2 260 1 188 1 66 1 14 1 56 1 39 1 190 1 157 1 
17 1 341 2 294 2 143 4 260 2 77 1 188 1 150 1 66 1 305 2 362 1 14 1 56 1 139 1 39 1 190 1 157 1 
17 3 341 1 294 6 143 3 3 1 4 1 32 1 260 2 279 1 188 3 66 3 305 2 14 1 130 1 56 1 139 1 157 3 
3 3 4 2 32 3 248 4 188 5 361 1 66 5 362 3 254 1 14 5 39 5 139 7 190 3 207 1 17 5 368 3 341 16 294 10 325 2 71 1 143 34 260 12 279 1 77 3 374 1 352 1 150 5 305 18 154 1 130 1 56 1 307 1 221 1 157 5 
309 1 90 1 227 1 135 1 205 1 269 1 351 1 
293 1 309 1 135 1 235 1 276 1 146 1 351 1 90 1 227 1 205 1 269 1 109 1 
34 1 359 1 125 1 209 1 327 1 2 1 376 1 354 1 107 1 46 1 257 1 
209 1 233 1 324 1 2 1 335 1 75 1 174 1 298 1 351 2 34 1 359 1 125 1 327 1 90 1 227 1 354 1 205 2 257 1 
2 2 335 2 203 1 34 1 359 3 90 1 227 2 319 1 205 2 257 1 324 1 233 1 174 1 75 2 194 1 351 2 298 1 300 1 125 1 327 1 216 1 304 1 354 1 
2 2 335 2 203 1 34 2 359 3 117 1 90 1 227 2 319 1 205 2 257 2 324 1 233 1 343 1 75 2 194 1 351 2 298 1 300 1 125 2 327 1 216 1 304 1 354 1 
2 1 335 1 116 1 287 1 203 1 8 1 34 1 359 4 227 1 319 1 205 1 15 1 97 1 257 1 258 1 345 1 142 2 238 1 237 1 75 1 50 1 351 1 298 1 125 1 240 1 327 1 216 1 304 1 26 1 354 1 355 2 131 1 
8 1 34 1 359 1 227 1 319 1 205 1 15 1 97 1 257 1 258 1 345 1 142 1 237 1 75 1 50 1 298 1 351 1 125 1 216 1 266 1 26 1 355 1 
34 1 125 1 327 1 354 1 96 1 257 1 
209 1 2 1 335 1 223 1 338 1 34 1 359 1 125 1 327 1 79 1 354 2 242 1 257 1 
60 1 3 1 32 1 34 1 10 1 188 1 90 1 91 1 227 1 66 1 14 1 94 1 205 1 165 1 39 2 139 2 257 1 17 1 341 4 324 1 369 1 294 2 143 8 325 1 71 1 260 3 75 1 351 1 298 1 125 1 216 1 150 2 305 4 27 1 272 1 157 1 221 1 
197 2 334 1 3 1 288 4 8 2 10 1 205 1 15 1 257 1 209 1 258 1 345 1 123 2 75 1 298 1 351 1 302 1 299 1 125 1 216 1 266 1 218 1 26 1 355 2 220 1 83 1 131 1 30 1 32 1 34 1 359 1 227 1 138 1 39 2 97 2 191 2 142 2 325 1 237 1 50 1 151 2 150 2 282 5 108 1 155 2 
2 1 335 1 45 1 238 1 34 1 359 1 125 1 327 1 354 1 67 1 242 1 96 1 257 1 
209 1 2 1 46 1 34 4 316 1 359 1 117 1 125 4 327 1 376 1 354 1 94 1 257 4 
34 1 359 1 125 1 327 1 79 1 2 1 275 1 335 1 93 1 354 2 184 1 257 1 338 1 
34 1 375 1 125 1 209 1 327 1 354 1 347 1 321 1 23 1 257 1 
2 1 21 1 72 1 213 1 34 2 359 1 125 2 327 1 354 1 94 1 257 2 
209 1 1 1 2 2 21 1 46 1 34 4 316 1 359 3 9 1 125 5 327 2 376 1 354 2 319 1 94 1 257 5 
209 1 2 2 21 1 46 1 171 1 34 4 316 1 359 3 9 1 125 5 327 2 376 1 354 2 319 1 94 1 257 5 
209 1 233 1 324 1 343 1 2 1 335 1 75 1 298 1 351 2 34 1 359 1 125 1 327 1 90 1 227 1 354 1 205 2 257 1 
2 1 335 1 223 1 338 1 34 1 359 1 125 1 327 1 79 1 354 2 319 1 242 1 257 1 
132 1 31 1 185 1 225 1 351 1 303 1 227 1 205 1 156 1 
89 1 320 1 156 1 
132 1 90 1 225 1 156 1 308 1 
132 1 334 1 287 1 225 1 8 1 358 1 89 1 227 1 205 1 320 1 15 1 97 1 258 1 342 1 345 1 142 2 75 1 50 1 194 1 351 1 298 1 300 1 216 2 26 1 355 2 28 1 156 1 308 1 
128 1 107 1 51 1 270 1 
148 1 128 1 141 1 312 1 296 1 51 1 270 1 
148 1 118 1 115 1 
133 1 141 1 312 1 296 3 51 1 148 3 128 1 229 1 267 1 40 1 245 2 270 1 
148 2 177 1 128 1 141 1 312 1 296 2 51 1 270 1 373 1 
141 1 236 1 312 1 296 1 23 1 148 1 137 1 82 1 321 1 267 1 270 1 
148 1 141 1 312 1 267 1 296 1 51 1 270 1 
148 1 128 1 141 1 312 1 267 1 296 1 51 2 
141 2 224 1 312 2 73 1 296 2 51 1 148 2 317 1 267 1 270 1 
141 1 236 1 312 1 212 1 296 3 51 1 148 3 78 1 265 1 177 2 128 1 267 1 270 2 
370 1 141 1 347 1 312 1 296 2 51 1 23 1 160 1 148 2 177 1 128 1 137 1 321 2 267 1 270 1 
141 2 236 1 312 2 296 4 51 1 373 1 148 4 78 1 177 2 128 1 365 1 267 1 270 2 
148 1 128 1 141 1 312 1 267 1 296 1 51 1 270 1 
133 1 141 1 236 1 103 1 312 1 296 4 51 2 148 4 78 1 177 2 128 2 229 1 245 1 270 3 
141 1 312 1 296 2 51 1 372 1 148 2 204 1 177 1 128 1 267 1 99 1 270 1 
148 3 133 2 128 1 141 1 229 1 312 1 267 1 245 2 98 1 296 3 51 1 270 1 
12 1 37 2 58 1 270 2 
148 1 141 1 312 1 267 1 306 1 296 1 
148 2 177 1 265 1 128 1 141 1 312 1 267 1 296 2 51 1 270 1 
122 1 
148 1 128 1 141 1 312 1 267 1 296 1 51 1 270 1 
141 1 312 1 296 3 51 1 148 3 177 1 265 1 128 1 267 1 245 1 270 1 
78 1 236 1 103 1 270 1 
51 1 270 1 

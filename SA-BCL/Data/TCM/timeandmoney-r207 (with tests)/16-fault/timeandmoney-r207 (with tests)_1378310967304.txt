#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (110,275) 195 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (110,275) 195 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 12 (163,175) (163,175) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 12 (163,175) (163,175) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 12 (163,175) (163,175) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 12 (163,175) (163,175) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 12 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 238 (10,327,352) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 192 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 335 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 335 108 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 174 129 145 324 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 174 129 145 324 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 316 206 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 174 129 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 174 129 145 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 354 (48,99) 77 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 219 193 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (40,93,228,336) (40,93,228,336) 19 161 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 1 93 1 110 1 195 1 336 1 228 1 278 1 266 1 
158 1 93 1 110 1 195 1 336 1 228 1 278 1 266 1 
93 7 158 6 259 2 249 1 116 1 313 2 124 1 40 4 61 1 292 1 163 1 175 1 12 1 110 1 275 1 336 2 228 2 348 2 19 1 266 1 76 1 207 2 66 1 78 1 
93 7 158 6 259 2 249 1 116 1 313 2 124 1 40 4 61 1 292 1 163 1 175 1 12 1 110 1 275 1 336 2 228 2 348 2 19 1 266 1 76 1 207 2 66 1 78 1 
93 7 158 6 259 2 249 1 116 1 313 2 124 1 40 4 61 1 292 1 163 1 175 1 12 1 110 1 275 1 336 2 228 2 348 2 19 1 266 1 76 1 207 2 66 1 78 1 
93 7 158 6 259 2 249 1 116 1 313 2 124 1 40 4 61 1 292 1 163 1 175 1 12 1 110 1 275 1 336 2 228 2 348 2 19 1 266 1 76 1 207 2 66 1 78 1 
158 1 93 2 336 1 228 1 40 1 19 1 266 1 12 1 
93 2 158 2 259 1 187 1 249 1 124 1 252 1 253 1 336 1 228 1 348 1 113 1 266 1 267 1 76 1 66 1 
93 3 158 3 259 1 313 1 40 1 110 1 336 2 228 2 113 1 348 2 266 1 267 1 207 1 
254 1 190 1 184 1 
263 2 315 1 190 1 
73 1 227 2 179 2 2 2 197 2 107 1 62 2 18 2 
156 1 91 1 185 1 159 1 95 1 311 2 94 2 0 1 24 1 49 1 314 1 2 2 162 1 214 1 239 2 73 1 8 1 320 2 168 1 279 1 121 1 146 1 171 1 342 1 197 2 43 1 107 1 325 1 62 3 344 1 11 1 345 2 227 3 179 2 45 1 18 2 21 1 
147 1 73 1 227 1 179 1 224 1 2 1 197 1 337 1 62 1 18 1 
147 1 38 1 60 1 300 1 2 1 119 1 62 1 227 1 104 1 190 1 229 1 75 1 20 1 184 1 
147 1 38 1 60 2 300 2 197 1 2 1 119 1 62 1 179 1 227 1 104 1 190 1 18 1 75 1 184 1 
302 1 
302 1 
60 1 300 1 212 1 
302 1 
190 1 
302 1 
157 1 60 1 1 1 300 1 268 1 302 1 182 1 
22 1 227 3 179 3 2 3 197 3 18 1 107 1 62 3 
147 1 227 1 179 1 2 1 197 1 337 1 62 1 
147 1 227 1 179 1 2 1 197 1 42 1 62 1 18 1 130 1 
156 1 258 1 91 1 159 1 22 1 185 1 95 1 0 1 311 1 94 1 24 1 2 3 162 1 119 1 214 1 239 1 73 1 104 1 338 1 320 2 75 1 321 1 121 1 146 1 147 1 38 1 171 1 60 1 342 1 300 1 197 3 43 1 107 1 325 1 62 4 344 1 11 1 345 1 227 4 179 3 45 1 18 2 130 1 21 1 
22 1 227 2 179 1 232 1 2 2 197 1 107 1 62 2 20 1 
147 1 22 2 38 1 60 1 300 1 197 3 2 3 119 1 62 3 304 1 179 3 227 3 104 1 190 1 338 1 18 1 321 1 75 1 130 1 
22 1 227 2 179 2 2 2 197 2 286 1 62 2 18 1 150 1 130 1 
156 1 159 1 311 1 94 1 171 1 342 1 162 1 107 1 62 1 344 1 11 1 239 1 227 1 45 1 121 1 
147 1 311 1 94 1 171 1 342 1 160 1 162 1 83 1 107 1 62 1 344 1 11 1 239 1 177 1 227 1 45 1 121 1 
91 1 95 1 24 1 96 2 49 2 214 2 293 1 71 1 240 1 320 2 169 1 58 1 250 1 43 1 286 2 325 1 287 1 64 1 150 2 345 4 308 1 349 1 331 1 21 1 
147 1 72 1 38 1 227 1 179 1 2 1 197 1 62 1 
254 1 107 1 
2 2 197 1 42 1 62 2 107 2 227 2 179 1 18 1 130 1 
96 1 286 1 150 1 
81 1 156 1 159 1 311 1 94 1 171 1 342 1 162 1 107 1 62 1 344 1 11 1 239 1 227 1 45 1 121 1 
156 1 159 1 22 1 311 1 94 1 171 1 342 1 197 1 2 1 162 1 62 2 344 1 150 1 11 1 239 1 179 1 227 2 45 1 338 1 121 1 
22 2 232 1 197 4 2 5 317 1 62 5 107 1 179 4 227 5 338 1 295 1 18 1 20 1 130 1 
147 1 72 1 227 2 179 2 2 2 197 2 337 1 62 2 
90 1 10 1 133 1 
90 1 10 1 133 1 
90 1 10 1 
90 1 10 1 
238 1 327 1 
238 1 327 1 
238 1 327 1 
90 1 245 1 10 1 
90 1 245 1 10 1 
90 1 245 1 10 1 
90 1 10 1 133 1 
238 1 90 1 10 1 327 1 
90 1 10 1 352 1 
80 2 144 1 90 2 170 3 10 2 231 1 132 2 60 2 285 1 300 2 198 2 148 1 347 2 112 2 289 1 190 1 241 1 242 1 79 1 
90 1 231 1 132 1 2 2 291 1 70 1 273 1 80 1 170 1 10 1 60 1 82 1 300 1 197 2 251 1 107 1 62 2 179 2 347 1 227 2 112 1 205 1 89 1 352 1 
116 1 124 1 76 1 
187 1 124 1 76 1 
282 1 53 1 187 1 116 2 225 1 76 3 
282 1 53 1 187 1 116 1 172 1 76 2 
53 1 282 2 187 1 116 1 76 2 
192 1 302 1 
288 1 103 1 302 2 201 1 
157 1 203 1 247 1 60 1 1 1 300 1 302 1 301 1 268 1 182 1 335 1 215 1 
157 1 247 1 60 1 1 1 300 1 301 1 268 1 335 1 215 1 108 1 203 1 182 1 
45 1 121 1 
152 1 171 1 45 3 277 1 121 1 128 2 
254 1 45 1 128 1 
45 1 265 1 
333 1 
171 1 45 1 121 1 
45 1 204 1 
57 1 250 3 49 4 118 1 290 1 173 1 214 3 106 1 234 1 69 2 345 7 330 1 44 1 240 2 339 1 169 1 331 1 
57 1 250 3 49 4 118 1 290 1 173 1 214 3 106 1 234 1 69 2 345 7 330 1 44 1 240 2 339 1 169 1 331 1 
57 1 250 3 49 4 118 1 290 1 173 1 214 3 106 1 234 1 69 2 345 7 330 1 138 1 44 1 240 2 339 1 169 1 331 1 
332 1 91 1 67 1 95 1 49 16 290 2 118 5 214 15 234 2 29 3 69 3 237 1 137 3 219 1 220 1 240 5 339 1 320 2 296 1 169 4 34 1 57 2 250 10 173 1 106 1 43 1 287 3 326 4 345 31 330 1 44 2 308 3 331 4 21 1 
91 2 67 1 95 2 49 5 290 1 118 1 214 4 234 1 69 2 240 3 320 4 339 1 169 1 340 1 57 1 250 4 43 2 106 1 345 9 330 1 44 1 183 1 331 1 21 2 
271 1 158 2 93 2 259 1 94 1 311 1 187 1 116 1 162 1 52 1 239 1 336 1 140 1 266 1 267 1 33 1 143 1 76 2 342 1 124 1 40 1 225 1 200 1 180 1 228 1 16 1 348 1 113 1 88 1 155 1 
271 1 158 3 93 3 259 1 94 1 311 1 187 1 116 1 162 1 188 1 52 1 239 1 336 1 140 1 74 1 267 1 33 1 143 1 76 2 283 1 342 1 124 1 40 2 225 1 200 1 228 1 16 1 348 1 113 1 88 1 
271 1 259 1 158 2 93 2 94 1 311 1 187 1 116 1 162 1 188 1 52 1 239 1 140 1 267 1 143 1 76 2 283 1 342 1 124 1 40 2 225 1 200 1 16 1 348 1 113 1 
271 2 259 2 93 1 158 1 186 1 311 1 94 1 342 1 39 1 162 1 344 1 127 1 52 2 239 1 336 1 228 1 45 1 139 1 140 2 74 1 141 1 121 1 243 1 
271 1 158 1 93 1 259 1 94 1 311 1 187 1 116 1 162 1 188 1 52 1 239 1 336 1 140 1 266 1 33 1 143 1 76 2 342 1 124 1 225 1 200 1 180 1 228 1 16 1 88 1 
299 1 
157 1 334 1 1 1 47 1 2 1 233 1 212 1 213 1 119 1 27 1 101 1 215 1 104 1 297 3 75 1 122 1 145 1 147 1 38 1 60 2 300 2 268 1 303 1 125 1 62 1 324 1 63 1 174 1 176 1 227 1 153 1 305 1 229 1 255 1 129 1 20 1 310 1 
157 1 334 1 1 1 47 1 2 1 233 1 212 1 213 1 119 1 27 1 101 1 215 1 104 1 297 3 75 1 122 1 147 1 145 1 38 1 60 2 300 2 268 1 303 1 125 1 62 1 324 1 63 1 174 1 176 1 227 1 153 1 305 1 229 1 255 1 129 1 20 1 310 1 
1 1 47 2 2 2 233 1 50 1 104 1 190 1 147 2 60 4 197 1 62 2 63 2 153 1 18 1 255 1 20 1 157 1 115 1 334 2 212 4 119 1 120 1 215 1 73 1 263 2 337 1 297 4 75 1 122 1 38 1 223 2 224 1 300 4 268 1 303 1 125 2 174 1 269 2 176 1 179 1 227 2 305 2 306 2 229 1 184 1 310 1 
239 1 122 1 157 1 203 1 94 1 311 1 60 1 1 1 300 1 268 1 316 1 206 1 344 1 215 1 
147 1 38 1 60 2 300 2 2 1 212 1 125 1 303 1 119 1 62 1 176 1 227 1 153 1 104 1 229 1 297 2 255 1 75 1 20 1 310 1 
2 1 212 1 119 1 104 1 190 1 297 3 75 1 147 1 38 1 60 3 300 3 303 1 62 1 63 1 149 1 176 1 227 1 153 1 306 1 229 1 255 1 20 1 184 1 310 1 
2 1 212 2 119 1 104 1 297 3 75 1 147 1 38 1 60 3 300 3 303 1 125 1 62 1 63 1 149 1 176 1 227 1 153 1 305 1 306 1 229 1 255 1 20 1 310 1 
115 1 2 2 212 2 119 1 73 1 104 1 337 1 190 1 32 1 297 3 75 1 147 2 38 1 60 3 224 1 300 3 197 1 303 1 125 1 63 1 62 2 149 1 176 1 179 1 227 2 153 1 305 1 306 1 229 1 18 1 255 1 20 1 184 1 310 1 
157 1 334 1 1 1 47 1 2 1 233 1 119 1 27 1 101 1 215 1 104 1 297 2 75 1 122 1 147 1 38 1 60 2 300 2 268 1 303 1 62 1 174 1 176 1 227 1 153 1 229 1 255 1 20 1 310 1 
157 1 334 1 1 1 47 1 2 1 233 1 119 1 213 1 27 1 101 1 215 1 104 1 297 2 75 1 122 1 147 1 145 1 38 1 60 2 300 2 268 1 303 1 62 1 174 1 176 1 227 1 153 1 229 1 255 1 129 1 20 1 310 1 
157 1 334 1 1 1 47 1 2 1 233 1 119 1 213 1 27 1 101 1 215 1 104 1 297 2 75 1 122 1 147 1 145 1 38 1 60 2 300 2 268 1 303 1 62 1 174 1 176 1 227 1 153 1 229 1 255 1 129 1 20 1 310 1 
1 1 47 2 2 2 233 1 97 1 50 1 104 1 190 1 147 2 60 4 197 1 62 2 63 2 153 1 18 1 255 1 20 1 157 1 115 1 334 2 212 4 119 1 28 1 215 1 73 1 263 2 337 1 297 4 75 1 122 1 38 1 223 2 224 1 300 4 268 1 303 1 125 2 174 1 269 2 176 1 179 1 227 2 305 2 306 2 229 1 129 1 184 1 310 1 
91 1 95 1 24 1 96 1 250 1 49 2 118 1 286 1 43 1 325 1 287 1 150 1 345 2 71 1 320 2 349 1 169 1 21 1 
91 1 95 1 24 1 96 1 250 1 286 1 43 1 214 2 325 1 150 1 293 1 345 2 71 1 240 1 320 2 308 1 331 1 21 1 
91 1 95 1 24 1 96 2 250 2 49 2 118 1 214 2 286 2 43 1 325 1 287 1 150 2 345 4 71 1 137 1 240 1 320 2 308 1 169 1 331 1 21 1 
91 1 95 1 24 1 96 1 250 1 49 2 118 1 286 1 43 1 325 1 287 1 150 1 345 2 87 1 320 2 349 1 169 1 21 1 
91 1 95 1 24 1 96 1 250 1 286 1 43 1 214 2 325 1 150 1 293 1 345 2 240 1 87 1 320 2 308 1 331 1 21 1 
91 1 95 1 24 1 96 2 250 2 49 2 118 1 214 2 286 2 43 1 325 1 287 1 150 2 345 4 137 1 240 1 87 1 320 2 308 1 169 1 331 1 21 1 
91 1 95 1 24 1 96 2 250 2 49 2 118 1 214 2 286 2 43 1 325 1 287 1 150 2 345 4 137 1 240 1 320 2 308 1 169 1 331 1 21 1 
156 1 159 1 91 1 0 1 94 1 311 1 95 1 24 1 49 1 162 1 214 1 239 1 320 2 168 1 121 1 146 1 171 1 342 1 43 1 107 1 62 1 325 1 344 1 11 1 345 2 227 1 45 1 21 1 
91 1 94 1 311 1 95 1 24 1 160 1 162 1 214 1 51 1 239 1 320 2 121 1 147 1 146 1 171 1 342 1 83 1 43 1 107 1 62 1 325 1 344 1 11 1 345 1 177 1 227 1 45 1 21 1 
23 1 91 1 95 1 24 1 96 2 250 2 49 2 118 1 214 2 286 2 43 1 325 1 287 1 150 2 345 4 137 1 240 1 320 2 308 1 169 1 331 1 21 1 
156 1 159 1 91 1 0 1 94 1 311 1 95 1 24 1 96 2 49 2 118 1 162 1 214 2 164 1 239 1 137 1 240 1 320 2 169 1 121 1 171 1 342 1 250 2 286 2 43 1 287 1 62 1 325 1 150 2 11 1 345 4 227 1 45 1 308 1 331 1 155 1 21 1 
91 1 23 1 95 1 24 1 96 1 2 1 49 2 118 1 214 1 137 1 6 1 320 2 169 1 250 1 197 1 43 1 286 1 325 1 62 1 287 1 150 1 345 3 179 1 227 1 308 1 18 1 331 1 130 1 21 1 
91 1 95 1 24 1 96 1 49 3 214 3 234 1 69 1 71 1 240 2 320 2 339 1 169 1 57 1 250 2 286 1 106 1 43 1 325 1 107 2 150 1 345 6 254 1 330 1 331 1 21 1 
91 2 23 1 95 2 24 2 96 11 49 8 118 1 214 6 318 1 29 3 137 2 219 1 240 1 320 4 296 1 168 1 169 2 146 1 59 1 250 2 43 2 286 4 107 1 325 1 287 2 326 3 150 11 328 1 345 14 14 1 308 1 331 1 21 2 
156 1 159 1 91 1 23 1 22 1 114 1 94 1 311 1 95 1 312 1 24 1 2 1 49 1 162 1 214 1 239 1 338 1 320 2 168 1 121 1 81 1 146 1 171 1 342 1 197 1 343 1 286 1 43 1 107 1 325 1 62 2 344 1 11 1 345 2 227 2 179 1 45 1 21 1 
91 3 94 3 311 3 95 3 0 2 96 7 2 1 48 2 49 10 136 2 234 1 188 1 239 3 137 2 240 6 320 6 57 1 146 1 197 1 250 10 106 1 286 7 107 2 62 3 325 3 287 2 11 2 150 7 330 1 331 3 21 3 156 2 209 2 22 1 23 1 159 2 24 3 162 2 118 4 261 1 214 10 69 1 164 2 338 1 339 1 168 1 169 3 121 2 341 1 171 2 342 2 43 3 344 1 345 20 179 1 227 3 45 2 308 2 230 1 
22 1 91 2 94 8 311 8 95 2 24 2 25 1 2 1 49 1 314 2 162 2 214 1 100 1 188 1 239 7 71 1 102 1 139 1 320 4 168 1 121 2 146 1 342 2 39 1 197 1 43 2 62 1 325 2 344 2 345 2 227 1 179 1 65 1 45 3 87 1 46 1 350 1 155 1 21 2 
91 1 23 1 95 1 24 1 96 1 2 1 49 1 214 2 137 1 240 1 320 2 169 1 37 1 250 1 197 1 286 1 43 1 325 1 62 1 287 1 150 1 345 3 179 1 227 1 18 1 308 1 331 1 130 1 21 1 
91 2 95 2 49 9 98 1 118 3 214 10 3 2 29 1 137 3 264 1 219 1 240 3 320 4 296 1 280 1 169 3 340 1 250 6 126 2 43 2 199 1 287 3 326 2 329 1 345 19 86 1 308 3 270 1 331 3 21 2 
67 2 91 3 95 3 49 14 98 1 118 2 214 12 3 4 29 2 236 1 137 3 55 1 219 2 240 2 320 6 280 1 169 3 340 1 322 1 193 1 250 4 126 1 43 3 199 2 287 3 326 2 202 1 345 26 86 1 308 2 270 2 331 2 351 1 21 3 
91 3 95 3 49 20 98 1 3 4 234 1 236 1 137 4 55 1 240 4 320 6 280 1 322 1 57 1 193 1 250 8 106 1 287 4 199 1 326 4 202 1 330 1 331 5 21 3 67 1 118 4 214 21 29 3 69 1 264 1 219 3 296 1 339 1 169 5 340 1 126 1 43 3 345 41 178 1 86 1 308 4 270 2 351 1 
67 2 91 4 95 4 49 20 98 1 118 3 214 18 3 4 234 1 69 1 29 3 236 1 137 4 264 1 55 1 219 3 240 4 339 1 320 8 296 1 280 1 169 5 340 1 322 1 57 1 193 1 250 7 126 1 106 1 43 4 199 1 287 4 326 4 202 1 345 38 178 1 330 1 86 1 308 3 270 2 351 1 331 4 21 4 
67 1 91 2 95 2 49 27 98 1 118 7 214 25 3 4 234 1 69 1 318 2 29 4 236 1 137 7 55 1 219 2 240 7 339 1 320 4 296 2 280 1 169 8 340 1 322 1 57 1 193 1 250 14 126 1 106 1 43 2 199 1 287 7 326 4 202 1 345 52 330 1 86 1 308 7 270 1 351 1 331 8 21 2 
23 1 92 1 91 1 94 2 311 2 95 1 24 1 2 2 49 1 314 2 162 1 214 1 239 2 222 1 320 2 168 1 121 1 146 1 342 1 43 1 325 1 62 2 84 1 345 2 109 1 227 2 181 1 45 1 46 1 350 1 21 1 
187 1 311 2 94 2 116 1 342 1 124 1 225 1 162 1 262 1 200 1 188 1 239 2 54 1 16 1 294 1 140 1 76 2 155 1 33 1 
187 1 311 1 94 1 116 1 284 1 342 1 124 1 225 1 162 1 200 1 188 1 239 1 16 1 294 1 140 1 76 2 33 1 
311 1 94 1 186 1 68 1 342 1 39 1 162 1 344 1 262 1 239 1 45 1 140 1 139 1 121 1 
187 1 311 1 94 1 116 1 342 1 124 1 225 1 162 1 262 1 200 1 188 1 239 1 54 1 16 1 294 1 140 1 76 2 33 1 
13 1 
35 1 122 1 157 1 203 1 1 1 268 1 233 1 215 1 
254 1 233 1 190 1 17 1 184 1 226 1 215 1 
122 1 157 1 1 1 268 1 233 1 27 1 101 1 215 1 
122 1 157 1 311 1 94 1 171 1 342 1 1 1 268 1 162 2 99 1 344 1 215 1 239 1 203 1 265 1 45 2 277 1 121 1 77 1 354 1 256 1 
122 1 157 1 193 1 1 1 219 1 268 1 233 1 29 1 326 1 215 1 
122 1 157 1 57 1 60 1 248 1 1 1 117 1 300 1 268 1 233 2 213 1 234 1 215 1 166 2 339 1 169 2 331 1 
122 1 157 1 1 1 268 1 233 1 226 1 190 1 184 1 
137 1 56 1 233 2 287 1 169 1 298 1 
239 1 94 1 311 1 344 1 
36 1 80 1 132 1 
36 1 80 1 132 1 
80 1 132 1 
90 1 10 1 
80 1 189 1 132 1 
80 1 189 1 132 1 
80 1 189 1 132 1 
36 1 80 1 132 1 
80 1 132 1 221 1 291 1 242 1 
57 1 91 2 67 1 95 2 49 4 250 3 118 1 214 4 43 2 106 1 234 1 69 1 345 8 330 1 240 2 339 1 320 4 169 1 331 1 21 2 
57 1 250 2 49 3 214 3 106 1 234 1 69 1 345 6 254 1 330 1 240 2 339 1 169 1 331 1 
91 1 95 1 250 2 49 2 118 1 214 2 43 1 287 1 272 1 345 4 137 1 240 1 320 2 308 1 169 1 331 1 21 1 
49 3 250 2 118 1 214 4 287 1 326 2 29 1 345 7 137 1 219 1 240 1 296 1 308 1 169 1 331 1 
67 2 91 2 95 2 210 1 49 11 118 4 214 12 234 2 69 1 29 2 318 1 137 2 240 5 339 1 296 1 320 4 169 3 57 2 59 1 250 9 106 1 43 2 287 2 326 2 345 23 330 1 308 2 331 3 21 2 
345 1 214 1 326 1 
345 1 49 1 29 1 
209 1 91 1 95 1 49 3 250 2 118 1 43 1 214 3 287 1 272 1 345 6 137 1 240 1 320 2 308 1 169 1 331 1 21 1 
91 1 95 1 49 6 118 1 214 6 29 1 236 1 137 2 55 1 219 1 240 1 320 2 169 2 340 1 193 1 250 2 43 1 287 2 326 1 202 1 345 12 308 2 351 1 331 2 21 1 
57 1 49 3 250 2 118 1 214 3 234 1 345 6 240 1 339 1 169 1 331 1 
57 1 67 1 91 1 210 1 95 1 49 1 250 2 118 1 214 2 43 1 106 1 234 1 345 3 330 1 240 1 320 2 21 1 
57 2 91 1 95 1 117 1 250 5 49 5 118 2 43 1 214 5 234 2 345 10 240 3 320 2 339 1 169 2 340 1 331 2 21 1 
91 1 95 1 49 2 250 1 118 1 43 1 287 1 345 2 320 2 169 1 340 1 21 1 
91 1 95 1 250 2 49 2 118 1 214 2 43 1 287 1 345 4 137 1 240 1 320 2 308 1 169 1 331 1 340 1 21 1 
57 1 67 1 91 3 210 1 95 3 250 2 49 1 118 1 214 2 43 3 234 1 345 3 264 1 240 1 320 6 340 1 21 3 
332 1 67 2 91 5 210 1 95 5 49 16 118 5 214 18 234 3 69 1 29 3 272 1 237 1 137 3 264 1 219 1 220 1 240 7 339 2 320 10 296 1 169 5 340 1 57 3 250 12 106 1 43 5 287 3 326 4 345 34 330 1 308 3 331 5 21 5 
91 1 95 1 49 4 214 4 234 1 69 1 29 1 219 1 240 2 320 2 339 1 169 1 340 1 57 1 193 1 250 2 43 1 106 1 326 1 345 8 330 1 331 1 21 1 
91 2 95 2 49 6 118 1 214 5 234 1 69 1 29 1 272 1 137 1 219 1 240 2 339 1 320 4 296 1 169 2 340 1 57 1 193 1 250 3 106 1 43 2 287 1 326 2 345 11 330 1 331 1 21 2 
91 3 67 1 95 3 49 9 118 1 214 10 234 1 69 1 29 1 272 1 236 1 137 2 55 1 219 1 240 3 339 1 320 6 169 3 340 1 57 1 193 1 250 4 106 1 43 3 287 2 326 1 202 1 345 19 330 1 308 2 351 1 331 3 21 3 
67 1 91 3 95 3 49 10 118 2 214 7 234 1 69 1 29 1 272 1 236 1 137 2 55 1 219 1 240 3 339 1 320 6 169 3 340 1 57 1 193 1 250 5 106 1 43 3 287 2 326 1 202 1 345 17 330 1 308 1 351 1 331 2 21 3 
91 1 95 1 49 4 214 4 234 1 69 1 29 1 219 1 240 2 320 2 339 1 169 1 340 1 57 1 193 1 250 2 43 1 106 1 326 1 345 8 330 1 331 1 21 1 
91 1 95 1 49 6 118 1 214 6 29 1 236 1 137 2 55 1 219 1 240 1 320 2 169 2 340 1 193 1 250 2 43 1 287 2 326 1 202 1 345 12 308 2 351 1 331 2 21 1 
91 4 67 2 95 4 49 10 118 2 214 8 234 1 69 1 29 1 272 1 236 1 137 2 55 1 219 1 240 3 339 1 320 8 169 3 340 1 57 1 193 1 250 5 106 1 43 4 287 2 326 1 202 1 345 18 330 1 308 1 351 1 331 2 21 4 
91 4 67 2 95 4 49 9 118 3 214 7 29 1 236 1 137 3 264 1 55 1 219 1 240 3 320 8 169 3 340 1 193 1 250 6 43 4 287 3 326 1 202 1 345 16 308 2 351 1 331 2 21 4 
57 3 250 6 49 3 118 3 214 4 106 1 234 3 345 7 330 2 240 3 339 1 169 1 331 1 
91 4 67 2 95 4 49 10 118 1 214 8 234 1 69 1 29 1 236 1 137 2 264 1 55 1 219 1 240 3 339 1 320 8 169 3 340 1 57 1 193 1 250 4 106 1 43 4 287 2 326 1 202 1 345 18 330 1 308 1 351 1 331 2 21 4 
227 1 111 1 232 1 2 1 107 1 62 1 20 1 
191 1 134 1 232 1 2 1 107 1 62 1 274 1 227 1 111 1 307 1 281 1 20 1 
239 1 254 1 94 1 311 1 342 1 39 1 45 1 162 1 139 1 344 1 121 1 
22 1 159 1 311 1 94 1 171 1 342 1 197 1 2 1 162 1 107 1 62 2 344 1 11 1 239 1 179 1 227 2 45 1 121 1 
131 1 159 1 22 1 94 1 311 1 2 2 162 1 239 1 104 1 121 2 147 1 38 1 171 2 342 1 197 1 107 1 62 2 11 1 227 2 179 2 45 3 204 1 309 1 
131 1 22 1 94 1 311 1 160 1 2 2 162 1 239 1 104 1 121 2 147 2 38 1 171 2 342 1 197 1 83 1 107 1 62 2 11 1 227 2 179 2 45 3 204 1 309 1 
131 1 208 1 94 3 311 3 212 1 135 1 162 1 119 1 239 3 265 1 190 1 121 1 60 2 171 1 342 1 300 2 344 1 85 1 128 1 45 4 204 1 309 1 184 1 
131 1 311 3 94 3 171 1 60 2 342 1 300 2 41 1 212 1 119 1 162 1 344 1 85 1 128 1 239 3 265 1 45 4 190 1 204 1 121 1 184 1 309 1 
239 1 94 1 311 1 342 1 162 1 100 1 
239 1 94 1 311 1 344 1 353 1 
91 2 0 1 94 1 311 1 95 2 96 1 48 1 2 1 49 3 234 1 239 1 240 2 320 4 57 1 197 1 250 2 286 1 106 1 62 2 325 2 107 2 11 1 150 1 330 1 155 1 331 1 21 2 156 1 159 1 22 1 23 1 24 2 162 1 214 3 69 1 164 1 339 1 169 1 121 1 171 1 342 1 43 2 345 6 179 1 227 2 181 1 45 1 
302 1 
311 2 94 2 171 1 342 1 162 2 100 1 128 1 239 2 45 2 277 1 155 1 121 1 256 1 
311 4 94 4 39 1 342 1 162 1 344 1 85 1 239 4 217 1 45 1 139 1 155 1 121 1 
311 2 94 2 341 1 171 1 246 1 342 1 162 2 239 2 218 1 45 1 319 1 154 1 121 1 309 1 
239 1 187 1 94 1 311 1 342 1 124 1 162 1 344 1 76 1 200 1 
311 2 94 2 342 1 162 1 188 1 84 1 239 2 45 1 350 1 155 1 121 1 
311 5 94 5 39 1 342 2 162 2 344 1 239 4 217 1 102 1 65 1 45 3 139 1 350 1 155 1 121 2 309 1 
311 5 94 5 39 1 342 2 162 2 344 1 239 4 217 1 65 1 45 3 139 1 167 1 350 1 155 1 121 2 309 1 
22 1 94 1 311 1 160 1 2 1 162 1 239 1 121 1 147 1 171 1 342 1 197 1 83 1 62 2 107 1 344 1 11 1 227 2 179 1 45 1 
239 1 94 1 311 1 353 1 309 1 
92 1 2 1 62 1 4 1 109 1 227 1 31 1 222 1 244 1 
257 1 5 1 4 1 
31 1 107 1 4 1 244 1 151 1 
257 1 115 1 2 1 119 1 4 1 73 1 5 1 104 1 31 1 337 1 75 1 321 1 244 1 147 2 38 1 196 1 60 1 300 1 224 1 197 1 302 1 62 1 151 1 227 1 179 1 18 1 
158 3 93 3 336 1 228 1 40 1 348 1 113 1 292 1 266 1 267 1 66 1 
194 1 313 1 348 1 207 1 
348 1 113 1 
254 1 348 1 113 1 267 1 
158 1 93 1 336 1 228 1 348 1 113 1 267 1 
259 1 158 1 52 1 
93 3 158 3 323 1 26 1 276 1 336 1 228 1 348 1 113 1 266 1 267 1 66 2 
158 1 93 2 336 1 228 1 40 1 19 1 
158 1 93 1 116 1 336 1 124 1 228 1 348 1 266 1 76 1 207 1 105 1 
158 1 93 1 336 1 228 1 348 1 113 1 266 1 
158 1 93 1 336 1 228 1 113 2 266 1 267 1 
93 2 158 2 211 1 15 1 336 2 228 2 7 1 348 1 113 1 266 1 
93 3 158 3 313 1 40 2 292 1 336 1 228 1 113 1 348 2 266 1 267 1 207 1 78 1 
93 2 158 2 123 1 187 1 116 1 124 1 40 1 225 1 336 1 228 1 348 1 113 1 266 1 267 1 76 2 
158 1 93 2 336 1 228 1 40 1 161 1 19 1 266 1 
158 1 93 1 336 1 228 1 348 1 113 1 266 1 267 1 
323 1 93 4 158 4 194 1 313 1 40 2 276 1 336 1 228 1 113 2 348 3 267 2 66 1 207 1 
93 1 158 1 194 1 260 1 336 1 228 1 113 1 278 1 266 1 267 1 9 1 
93 3 158 3 323 2 235 1 276 1 336 1 228 1 348 1 113 1 266 1 267 1 66 2 
216 1 30 1 348 2 142 2 
165 1 158 1 93 1 336 1 228 1 266 1 
158 2 93 2 336 1 228 1 40 1 348 1 113 1 292 1 266 1 267 1 
346 1 
158 1 93 1 336 1 228 1 348 1 113 1 266 1 267 1 

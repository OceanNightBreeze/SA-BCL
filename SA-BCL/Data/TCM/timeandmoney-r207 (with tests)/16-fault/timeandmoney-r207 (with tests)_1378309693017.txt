#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 117 15 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) 188 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (227,284) 166 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 207 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) 188 217 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 0 334 174 (12,236) 63 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (227,284) 166 343 277 (227,284) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (28,73) (152,275) (152,275) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 338 200 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 0 334 171 58 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 0 334 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 0 348 4 (293,313) (189,299) (189,299) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 0 348 4 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 0 348 4 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (227,284) 166 343 165 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (227,284) 166 295 247 110 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 207 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) (120,226) (68,97) 6 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (227,284) 166 79 176 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (227,284) 166 343 277 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (227,284) 166 79 165 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (227,284) 166 79 176 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (227,284) 166 343 277 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (227,284) 166 79 165 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (227,284) 166 79 165 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 0 334 174 (12,236) 63 232 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (227,284) 166 79 165 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) (120,226) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (227,284) 166 79 165 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (28,73) (28,73) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 214 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (28,73) (152,275) (152,275) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (28,73) (152,275) (152,275) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (28,73) (152,275) (152,275) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 338 200 318 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 0 348 4 (293,313) (293,313) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 0 348 4 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 0 334 171 109 162 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) 188 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 0 348 4 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 0 334 145 82 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 0 173 108 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 0 173 107 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 0 173 266 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 0 334 174 (12,236) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 310 (12,236) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 310 (56,95) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 0 334 171 329 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 0 334 174 (56,95) 9 (120,226) (120,226) (68,97) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 310 (56,95) 100 160 (68,97) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 0 334 171 109 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 0 334 174 (12,236) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 0 334 171 329 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
330 2 81 1 164 1 159 1 20 1 248 1 320 3 304 2 47 1 272 2 1 1 241 1 296 3 
330 1 288 1 159 1 320 1 272 1 296 1 
330 1 288 1 159 1 320 1 272 1 296 1 
330 1 288 1 159 1 320 1 272 1 296 1 
330 1 288 1 159 1 320 1 272 1 296 1 
330 1 81 1 164 1 185 1 320 4 233 1 72 1 304 3 1 1 296 4 111 1 134 1 159 1 123 2 20 2 43 1 272 1 241 3 
330 1 81 1 164 1 320 2 221 1 248 1 72 1 304 1 296 2 111 1 349 1 253 1 159 1 352 1 42 1 272 1 
330 2 81 1 248 1 1 3 16 1 296 9 111 1 134 1 61 1 159 1 20 4 43 1 164 1 185 1 320 9 233 1 72 1 47 1 304 5 30 1 324 1 123 2 272 2 241 7 
330 2 81 1 248 1 1 3 16 1 296 9 111 1 134 1 61 1 159 1 20 4 43 1 164 1 185 1 320 9 233 1 72 1 47 1 304 5 30 1 324 1 123 2 272 2 241 7 
136 1 44 1 26 1 197 1 187 1 138 1 180 1 36 1 279 1 154 1 340 1 193 1 270 1 319 1 
308 1 
154 1 280 1 44 2 148 1 10 1 26 2 39 1 308 1 
154 1 117 1 102 1 44 2 149 1 263 1 26 2 129 1 15 1 
10 1 55 1 308 1 
84 2 3 1 308 1 
340 2 197 2 270 2 138 1 180 2 36 2 289 1 319 2 
52 1 147 1 54 2 197 1 180 1 334 1 36 1 0 1 182 1 340 1 229 1 319 1 95 1 67 2 137 2 138 1 188 1 120 1 9 1 270 1 78 1 105 1 174 1 
136 1 340 1 197 1 193 1 270 1 138 1 180 1 36 1 279 1 319 1 
261 1 136 1 44 1 26 1 332 1 180 1 36 1 308 1 17 1 10 1 340 1 104 1 49 1 23 1 
261 1 136 1 44 2 26 2 197 1 332 1 180 1 36 1 308 1 17 1 10 1 340 1 270 1 23 1 319 1 
154 1 44 1 26 1 39 1 71 1 
154 1 44 2 148 1 10 1 339 1 26 2 39 1 308 1 
44 1 26 1 39 1 
147 1 95 1 54 1 67 1 345 1 197 1 137 1 180 1 334 1 36 1 0 1 92 1 9 1 340 1 270 1 174 1 105 1 78 1 
14 1 197 1 180 2 36 2 289 2 340 2 270 1 215 1 319 1 
284 1 166 1 
147 1 95 1 54 1 9 1 67 1 137 1 334 1 174 1 105 1 78 1 207 1 0 1 
55 1 289 1 
345 1 340 3 197 3 270 3 180 3 36 3 289 1 319 1 
136 1 340 1 197 1 193 1 270 1 180 1 36 1 
136 1 14 1 340 1 197 1 270 1 215 1 180 1 36 1 319 1 
147 1 217 1 54 1 197 3 315 1 332 1 180 3 334 1 36 3 0 1 17 1 92 1 340 3 23 1 319 2 261 1 95 1 136 1 44 1 67 1 345 1 26 1 137 1 138 1 188 1 120 1 9 1 270 3 215 1 174 1 105 1 78 1 
143 1 345 1 340 2 197 1 270 1 104 1 180 2 36 2 289 1 
261 1 44 1 136 1 345 2 26 1 197 3 332 1 315 1 180 3 36 3 308 1 17 1 92 1 340 3 270 3 215 1 65 1 23 1 319 1 
242 1 284 1 345 1 197 2 180 2 36 2 340 2 270 2 215 1 319 1 
147 1 95 1 54 1 9 1 67 1 137 1 334 1 174 1 105 1 78 1 0 1 
147 1 54 1 236 1 67 1 137 1 63 1 334 1 174 1 105 1 78 1 0 1 
284 1 343 1 166 1 277 1 34 1 35 1 220 1 306 1 234 1 251 1 122 1 74 2 91 2 227 1 41 1 50 2 
136 1 340 1 197 1 314 1 270 1 180 1 36 1 23 1 
196 1 345 2 197 4 278 1 180 5 36 5 289 1 92 1 143 1 340 5 270 4 104 1 215 1 319 1 
136 1 314 1 340 2 197 2 193 1 270 2 180 2 36 2 
190 1 106 1 184 1 
190 2 32 1 301 1 11 1 131 1 184 2 
190 1 184 1 
190 1 184 1 
301 1 11 1 
301 1 11 1 
301 1 11 1 
190 1 184 1 216 1 
190 1 184 1 216 1 
190 1 184 1 216 1 
190 1 274 1 184 1 
190 1 274 1 184 1 
190 1 274 1 184 1 
116 2 135 1 44 2 275 1 26 2 28 1 85 2 152 1 60 1 308 1 317 1 101 2 146 2 312 2 
135 1 116 1 44 1 26 1 197 1 85 1 180 1 36 1 181 1 250 1 200 1 101 1 338 1 340 1 270 1 155 1 146 1 312 1 
133 2 111 2 253 1 264 1 43 1 
111 1 72 1 43 1 
111 1 253 1 72 1 
133 1 111 3 253 1 19 1 264 1 43 2 
133 1 111 2 253 1 264 1 43 1 175 1 
79 1 243 1 149 1 148 1 84 3 129 1 151 1 181 1 250 1 154 4 113 1 201 1 39 1 155 1 3 1 183 1 114 1 259 2 161 2 342 1 343 1 44 5 263 1 165 1 26 5 210 2 287 3 306 1 307 1 308 2 309 2 10 1 
79 3 243 2 148 1 149 2 84 9 129 2 249 1 181 4 154 7 113 3 201 2 39 6 158 1 3 3 259 6 208 1 66 1 342 1 343 3 44 9 263 2 165 3 26 9 210 6 287 8 71 5 306 3 347 1 307 1 308 5 309 6 350 1 102 1 10 1 239 5 
79 1 243 1 149 1 84 4 129 1 181 1 154 2 113 1 201 1 3 2 114 1 183 1 259 2 161 1 343 1 44 3 263 1 165 1 26 3 210 2 287 3 306 1 308 3 309 2 102 1 10 1 
79 2 243 1 149 1 84 7 129 1 181 2 154 3 113 2 201 1 3 3 114 1 183 1 259 4 208 1 161 2 66 1 343 2 44 4 263 1 165 2 26 4 210 4 287 5 306 2 308 4 309 4 350 1 102 1 10 1 
5 1 
55 1 273 1 
310 1 
0 1 
171 1 58 1 334 1 0 1 
334 1 0 1 
64 1 
80 3 53 1 118 1 198 1 265 1 306 1 321 2 99 1 346 1 235 2 132 1 168 1 112 1 91 2 323 1 74 5 113 1 18 3 
79 3 80 10 53 1 178 1 35 1 245 1 198 2 87 1 251 1 295 4 132 2 37 1 112 2 91 14 18 15 113 4 256 3 41 1 343 3 231 1 165 3 344 1 118 5 265 2 139 1 99 1 321 3 306 4 346 1 234 1 235 5 323 1 74 29 50 2 
80 4 178 1 35 2 198 1 251 2 90 1 132 1 252 1 112 1 91 3 113 1 18 4 41 2 118 1 265 1 306 1 321 2 99 1 346 1 234 2 235 3 74 7 323 1 50 4 
80 3 53 1 118 1 198 1 265 1 306 1 321 2 99 1 346 1 235 2 132 1 112 1 91 2 74 5 323 1 113 1 18 3 
80 3 53 1 118 1 198 1 265 1 306 1 321 2 99 1 346 1 235 2 132 1 112 1 91 2 74 5 323 1 113 1 18 3 
313 1 330 1 54 1 67 1 137 1 248 2 320 1 189 1 0 1 348 1 296 1 121 2 169 2 299 1 300 1 21 1 311 2 78 1 4 1 272 1 
24 1 147 1 330 1 54 1 67 1 286 1 331 1 137 1 248 1 320 1 72 1 222 1 296 1 121 1 111 2 31 1 253 1 19 1 169 1 159 1 105 1 22 1 311 1 43 1 353 1 272 1 
147 1 330 1 81 1 54 1 331 1 248 1 222 1 296 2 111 2 253 1 19 1 159 1 22 1 43 1 24 1 164 1 67 1 137 1 286 1 70 1 320 2 72 1 304 1 121 1 169 1 311 1 105 1 272 1 353 1 241 1 
147 1 330 1 81 1 54 1 276 1 331 1 248 1 222 1 296 3 111 2 253 1 19 1 21 1 22 1 43 1 164 1 67 1 137 1 286 1 320 3 72 1 304 1 121 1 31 1 169 1 311 1 105 1 272 1 353 1 241 2 
147 1 81 1 54 1 276 1 331 1 248 1 296 2 111 2 253 1 19 1 22 1 43 1 164 1 67 1 137 1 286 1 320 2 72 1 304 1 121 1 31 1 169 1 311 1 105 1 241 2 
240 1 
342 1 44 2 54 2 148 1 263 1 149 1 67 2 26 2 137 2 287 1 129 1 153 1 0 1 348 1 103 1 201 1 325 1 39 2 259 1 78 2 4 1 
148 1 83 1 332 1 180 1 199 1 36 1 223 2 17 1 280 1 255 1 340 1 39 2 23 1 261 1 44 3 136 1 26 3 98 1 140 1 144 1 104 1 49 1 
83 1 148 1 332 1 180 1 36 1 223 3 17 1 280 1 255 1 340 1 39 1 23 1 261 1 44 3 136 1 26 3 186 1 98 1 140 1 308 1 144 1 10 1 104 1 49 1 
261 1 136 1 44 2 83 1 26 2 119 1 332 1 98 1 140 1 199 1 180 1 36 1 223 2 17 1 255 1 144 1 340 1 39 1 104 1 49 1 23 1 
83 1 128 1 129 1 180 2 36 2 223 4 279 1 280 1 38 2 39 7 94 1 3 2 228 1 282 1 319 1 136 2 44 5 186 2 187 1 138 1 98 1 287 1 140 1 322 2 10 1 144 1 193 1 104 1 49 1 148 3 149 1 197 1 332 1 199 4 17 1 255 1 340 2 258 1 259 1 23 1 260 2 261 1 342 1 209 2 263 1 26 5 27 1 119 4 308 1 170 1 270 1 
83 1 84 2 129 1 180 2 36 2 223 3 279 1 38 2 39 2 3 2 282 1 319 1 136 2 44 3 186 1 187 1 138 1 98 1 287 1 140 1 322 2 144 1 10 1 193 1 104 1 49 1 195 1 149 1 148 1 197 1 332 1 199 1 17 1 255 1 340 2 259 1 23 1 260 1 261 1 342 1 209 2 263 1 26 3 119 1 308 3 170 1 270 1 
83 1 128 1 129 1 180 2 36 2 223 4 279 1 38 2 39 4 3 2 228 1 282 1 319 1 136 2 44 4 186 2 187 1 138 1 98 1 287 1 140 1 322 2 144 1 10 1 193 1 104 1 49 1 149 1 148 2 197 1 332 1 199 2 17 1 255 1 340 2 259 1 23 1 260 2 342 1 261 1 209 2 263 1 26 4 27 1 119 2 308 1 170 1 270 1 
83 1 128 1 129 1 180 2 36 2 223 4 279 1 38 2 39 4 3 2 228 1 282 1 319 1 136 2 44 4 186 2 187 1 138 1 98 1 287 1 140 1 322 2 144 1 10 1 193 1 104 1 49 1 149 1 148 2 197 1 332 1 199 2 17 1 255 1 340 2 259 1 23 1 260 2 342 1 261 1 209 2 263 1 26 4 27 1 119 2 308 1 170 1 270 1 
218 1 83 1 128 1 84 2 129 1 180 2 36 2 223 4 279 1 38 2 39 4 319 1 136 2 44 4 186 2 187 1 138 1 98 1 287 1 140 1 141 1 144 1 10 1 193 1 104 1 49 1 13 2 149 1 148 2 197 1 332 1 199 2 17 1 255 1 340 2 259 1 204 2 23 1 342 1 261 1 209 2 263 1 26 4 119 2 308 1 170 1 269 1 270 1 
83 1 128 1 129 1 180 2 36 2 223 4 279 1 38 2 39 5 94 1 3 2 228 1 282 1 319 1 136 2 44 4 186 2 187 1 138 1 98 1 287 1 140 1 322 2 144 1 10 1 193 1 104 1 49 1 149 1 148 2 197 1 332 1 199 3 17 1 255 1 340 2 259 1 23 1 260 2 261 1 342 1 209 2 263 1 26 4 27 1 119 3 308 1 170 1 270 1 
83 1 128 1 129 1 180 2 36 2 223 4 279 1 38 2 39 5 94 1 3 2 228 1 282 1 319 1 136 2 44 4 186 2 187 1 138 1 98 1 287 1 140 1 322 2 144 1 10 1 193 1 104 1 49 1 149 1 148 2 197 1 332 1 199 3 17 1 255 1 340 2 259 1 23 1 260 2 261 1 342 1 209 2 263 1 26 4 27 1 119 3 308 1 170 1 270 1 
83 1 84 2 129 1 180 2 36 2 223 3 279 1 38 2 39 4 319 1 136 2 44 4 186 1 187 1 138 1 98 1 287 1 140 1 144 1 10 1 193 1 104 1 49 1 195 1 13 2 149 1 148 2 197 1 332 1 199 2 17 1 255 1 340 2 259 1 204 2 23 1 261 1 342 1 209 2 263 1 26 4 119 2 308 1 170 1 269 1 270 1 
54 2 67 2 137 2 211 1 34 1 35 1 167 1 0 1 348 1 234 1 251 1 182 1 122 1 91 1 74 2 18 1 2 1 41 1 78 1 4 1 283 1 50 2 
79 1 197 1 35 1 34 1 180 1 36 1 88 1 251 1 91 2 113 1 18 1 340 1 41 1 319 1 284 1 343 1 165 1 166 1 306 1 234 1 122 1 74 3 270 1 215 1 50 2 327 1 
80 2 55 1 35 1 34 1 198 1 220 1 251 1 91 2 113 1 18 2 41 1 284 1 166 1 265 1 99 1 306 1 321 1 289 1 346 1 234 1 235 2 122 1 323 1 74 4 50 2 
284 1 166 1 34 1 35 1 247 1 88 1 234 1 251 1 110 1 295 1 122 1 74 1 91 1 41 1 50 2 
242 1 147 1 54 1 197 1 34 1 35 1 333 1 179 1 180 1 334 1 36 1 0 1 88 1 251 1 92 1 91 1 18 1 340 1 41 1 283 1 207 1 95 1 67 1 345 1 137 1 167 1 234 1 122 1 74 2 9 1 270 1 174 1 105 1 78 1 271 1 50 2 
147 1 54 1 197 1 34 1 35 1 180 1 334 1 36 1 0 1 88 1 251 1 92 1 91 1 226 1 340 1 41 1 283 1 95 1 67 1 345 1 137 1 68 1 6 1 120 1 234 1 122 1 74 1 9 1 270 1 174 1 105 1 78 1 50 2 
176 1 79 1 284 1 166 1 34 1 35 1 220 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
284 1 343 1 166 1 277 1 34 1 35 1 220 1 306 1 234 1 251 1 122 1 74 2 91 2 41 1 50 2 
79 1 284 1 165 1 166 1 34 1 35 1 220 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
176 1 79 1 284 1 166 1 211 1 34 1 35 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
284 1 343 1 166 1 277 1 211 1 34 1 35 1 306 1 234 1 251 1 122 1 74 2 91 2 41 1 50 2 
79 1 284 1 165 1 166 1 211 1 34 1 35 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
79 1 284 1 165 1 166 1 34 1 35 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
147 1 95 1 54 1 9 1 67 1 137 1 334 1 174 1 105 1 78 1 120 1 0 1 
147 1 54 1 236 1 67 1 137 1 63 1 232 1 334 1 174 1 105 1 78 1 0 1 
79 1 284 1 165 1 166 1 34 1 35 1 88 1 234 1 251 1 122 1 74 2 113 1 18 2 41 1 50 2 
147 1 95 1 54 1 9 1 226 1 67 1 137 1 70 1 334 1 174 1 105 1 120 1 0 1 
79 1 284 1 165 1 166 1 197 1 34 1 35 1 180 1 36 1 88 1 234 1 251 1 122 1 74 2 297 1 18 2 113 1 340 1 270 1 215 1 41 1 50 2 319 1 
79 3 80 6 127 1 35 2 295 2 89 1 336 1 224 1 251 2 90 1 37 1 91 10 18 9 113 3 256 1 257 2 41 2 343 3 285 1 231 1 165 3 118 3 306 3 213 1 234 2 235 3 74 19 238 2 50 4 51 1 
79 3 80 1 178 1 291 1 35 2 86 1 89 2 336 2 224 1 251 2 295 2 90 1 337 1 91 11 18 13 113 3 256 2 257 3 341 1 41 2 262 1 343 2 231 2 165 3 118 1 306 2 213 1 234 2 74 24 192 1 238 1 50 4 51 1 
79 4 80 4 291 1 35 2 86 1 295 4 89 2 336 1 224 1 251 2 337 1 90 1 37 1 91 17 18 15 113 4 256 3 257 3 341 1 41 2 205 1 262 1 343 4 285 1 231 3 165 4 118 3 306 4 213 1 234 2 235 1 74 32 192 1 238 1 50 4 51 1 
79 4 80 5 178 1 291 1 35 3 86 1 295 4 89 2 336 1 224 1 251 3 337 1 90 1 37 1 91 16 18 17 113 4 256 3 257 4 341 1 41 3 205 1 262 1 343 3 285 1 231 3 165 4 118 3 306 3 213 1 234 3 235 2 74 33 192 1 238 1 50 6 51 1 
79 7 80 14 178 1 291 1 35 2 198 1 86 1 59 2 295 4 89 1 336 1 224 1 251 2 337 1 90 1 37 2 91 24 18 26 113 8 256 4 257 4 341 1 41 2 262 1 343 7 231 2 165 7 118 7 265 1 321 1 99 1 306 8 346 1 213 1 234 2 235 7 323 1 74 50 192 1 238 1 50 4 51 1 
116 1 101 1 28 1 85 1 73 1 312 1 
338 1 
116 1 101 1 85 1 312 1 214 1 
135 1 116 1 44 1 275 1 26 1 28 1 85 1 152 1 60 1 308 1 317 1 101 1 146 2 312 1 
135 1 116 1 44 1 275 1 26 1 28 1 85 1 152 1 60 1 308 1 317 1 101 1 146 2 312 1 
135 1 116 1 44 1 275 1 26 1 28 1 85 1 152 1 60 1 308 1 317 1 101 1 146 2 312 1 
29 1 
29 1 
62 1 
62 1 
96 1 303 1 
116 1 44 1 26 1 85 1 181 1 250 1 60 1 154 1 200 1 317 1 101 1 338 1 155 1 146 1 312 1 318 1 
29 1 
62 1 
93 1 340 1 219 1 180 1 36 1 7 1 
313 1 54 1 67 1 137 1 302 1 293 1 0 1 348 1 78 1 311 1 4 1 
147 1 54 1 67 1 137 1 286 1 302 1 294 1 72 1 222 1 111 2 31 1 253 1 19 1 191 1 311 1 22 1 105 1 43 1 
147 1 54 2 67 2 137 2 286 1 70 1 302 1 294 1 72 1 222 1 111 2 31 1 253 1 19 1 191 1 105 1 311 1 22 1 43 1 
147 1 54 1 67 1 137 1 286 1 294 1 72 1 222 1 111 2 31 1 253 1 19 1 290 1 311 1 22 1 105 1 43 1 
298 1 
342 1 75 1 149 1 263 1 10 1 287 1 129 1 259 1 130 1 308 1 
79 2 343 2 163 2 165 2 292 1 210 5 84 10 287 5 306 2 308 5 309 5 113 2 202 1 3 5 259 5 
44 1 148 1 10 1 26 1 39 1 308 1 
54 2 149 1 148 1 129 1 153 1 0 1 201 1 39 2 259 1 4 1 342 1 44 1 263 1 67 2 137 2 26 1 287 1 267 1 348 1 103 1 325 1 78 2 
75 1 10 1 55 1 287 1 259 1 130 1 308 1 
149 1 148 1 84 1 129 1 39 1 3 1 259 1 282 1 260 1 342 1 44 1 263 1 26 1 287 1 322 1 308 2 10 1 
342 1 162 1 54 1 263 1 149 1 67 1 137 1 109 1 129 1 334 1 0 1 171 1 78 1 
79 2 149 1 291 1 84 6 129 1 295 1 337 1 113 2 256 1 3 3 341 1 259 4 342 1 262 1 343 2 263 1 231 1 165 2 210 5 287 7 306 2 308 4 309 5 10 1 192 1 
177 1 149 1 197 1 292 1 198 1 129 1 180 1 36 1 279 1 113 2 340 1 228 1 259 2 319 1 342 1 163 2 136 1 44 1 263 1 26 1 187 1 287 2 138 1 265 1 306 1 346 1 193 1 270 1 
147 1 95 1 54 1 67 1 197 1 137 1 138 1 180 1 334 1 36 1 188 1 120 1 0 1 9 1 340 1 270 1 174 1 105 1 78 1 319 1 
342 1 263 1 149 1 210 2 84 4 287 1 129 1 321 1 308 4 309 2 201 1 10 2 103 1 3 2 259 2 
116 1 96 1 281 1 156 1 85 1 
116 1 76 1 85 1 
116 1 76 1 85 1 
116 1 76 1 85 1 
116 1 85 1 115 1 
116 1 85 1 115 1 
116 1 85 1 115 1 
116 1 85 1 
190 1 184 1 
177 1 80 4 35 1 118 2 198 1 265 1 306 2 346 1 234 1 251 1 90 1 235 2 74 8 91 4 18 4 113 2 41 1 50 2 
79 1 90 1 80 1 74 2 18 2 113 1 118 1 35 1 41 1 50 2 234 1 251 1 
79 1 343 1 80 2 165 1 35 1 118 1 306 1 234 1 251 1 235 1 90 1 91 2 74 4 113 1 18 2 41 1 50 2 
80 2 178 1 285 1 35 3 118 1 198 1 265 1 234 3 251 3 90 1 235 1 91 2 74 3 18 1 41 3 50 6 126 1 
79 3 80 11 178 2 245 1 35 5 198 2 295 4 251 5 90 1 37 1 91 16 18 14 113 5 256 3 41 5 230 1 343 3 344 1 231 1 285 1 165 3 118 5 265 2 139 1 321 1 99 1 306 5 346 2 234 5 235 6 323 1 74 30 50 10 126 1 
80 2 35 1 198 1 295 1 251 1 337 1 90 1 91 3 113 1 18 3 256 1 41 1 231 1 265 1 321 1 306 1 99 1 346 1 234 1 235 2 74 6 323 1 50 2 
79 1 80 3 35 2 198 1 295 2 251 2 337 1 90 1 37 1 91 4 18 5 113 2 256 1 41 2 230 1 231 1 165 1 118 1 265 1 321 1 306 1 99 1 346 1 234 2 235 2 323 1 74 9 50 4 
79 2 80 1 291 1 35 2 295 1 251 2 337 1 90 1 91 7 18 6 113 2 256 1 341 1 41 2 230 1 262 1 343 2 231 1 165 2 118 1 306 2 234 2 74 13 192 1 50 4 
79 2 80 5 178 1 291 1 35 3 198 1 295 1 251 3 337 1 90 1 91 6 18 9 113 3 256 1 341 1 41 3 230 1 262 1 343 1 231 1 165 2 118 2 265 1 321 1 99 1 306 2 346 1 234 3 235 3 323 1 74 15 192 1 50 6 
80 2 35 1 198 1 295 1 251 1 337 1 90 1 91 3 113 1 18 3 256 1 41 1 231 1 265 1 321 1 306 1 99 1 346 1 234 1 235 2 74 6 323 1 50 2 
79 2 80 2 291 1 35 1 295 1 251 1 337 1 90 1 91 6 18 6 113 2 256 1 341 1 41 1 262 1 343 2 231 1 165 2 118 1 306 2 234 1 235 1 74 12 192 1 50 2 
79 2 80 1 178 1 291 1 35 3 295 1 251 3 337 1 90 1 91 5 18 7 113 2 256 1 341 1 41 3 230 1 262 1 343 1 231 1 165 2 118 1 306 1 234 3 74 12 192 1 50 6 
79 2 80 4 178 1 291 1 35 3 295 1 251 3 337 1 90 1 91 5 18 7 113 2 256 1 341 1 41 3 262 1 343 1 231 1 285 1 165 2 118 2 306 1 234 3 235 2 74 12 192 1 50 6 
177 1 80 7 118 3 198 2 265 2 321 1 306 3 99 1 346 2 235 4 91 4 74 9 323 1 113 3 18 5 
79 2 80 1 178 1 291 1 35 3 295 1 251 3 337 1 90 1 91 5 18 7 113 2 256 1 341 1 41 3 262 1 343 1 231 1 285 1 165 2 118 1 306 1 234 3 74 12 192 1 50 6 
80 3 178 1 118 1 35 2 198 1 265 1 321 1 306 1 99 1 346 1 234 2 251 2 235 2 91 3 74 6 323 1 113 1 18 3 41 2 50 4 
80 2 55 1 198 1 265 1 321 1 99 1 306 1 346 1 235 2 91 2 323 1 74 4 113 1 18 2 
79 1 343 1 80 2 165 1 35 1 118 1 306 1 234 1 251 1 235 1 91 2 74 4 113 1 18 2 41 1 230 1 50 2 
79 1 343 1 80 2 231 1 165 1 118 1 306 1 295 2 235 1 37 1 91 4 74 7 18 3 113 1 256 1 
79 2 80 9 178 2 35 2 198 2 247 1 59 1 295 2 251 2 37 1 91 11 113 3 18 10 256 2 41 2 343 2 165 2 118 4 265 2 321 1 99 1 306 3 346 1 234 2 235 5 323 1 74 21 50 4 126 1 
74 1 91 1 295 1 
74 1 18 1 256 1 
79 1 343 1 80 3 165 1 35 1 118 1 306 1 234 1 251 1 235 2 91 3 74 6 113 1 18 3 202 1 41 1 50 2 230 1 
79 2 80 2 291 1 35 1 295 1 251 1 337 1 90 1 91 6 18 6 113 2 256 1 341 1 41 1 262 1 343 2 231 1 165 2 118 1 306 2 234 1 235 1 74 12 192 1 50 2 
91 1 74 2 18 1 113 1 306 1 346 1 
80 2 178 1 118 1 35 1 198 1 265 1 99 1 234 1 251 1 235 1 323 1 91 2 74 3 18 1 41 1 50 2 126 1 
143 1 340 1 104 1 180 1 36 1 289 1 305 1 
69 1 180 1 36 1 289 1 46 1 316 1 305 1 143 1 340 1 40 1 104 1 77 1 
54 2 67 2 137 2 70 1 78 1 4 1 0 1 348 1 
82 1 54 1 67 1 137 1 145 1 326 1 334 1 0 1 
111 1 147 1 253 1 54 1 67 1 137 1 72 1 105 1 22 1 78 1 
108 1 31 1 54 2 67 2 137 2 70 1 173 1 0 1 
54 2 67 2 137 2 70 1 173 1 78 1 107 1 0 1 
54 2 67 2 137 2 70 1 173 1 266 1 78 1 0 1 
54 1 67 1 55 1 137 1 78 1 4 1 0 1 348 1 
147 1 95 1 54 1 67 1 345 1 197 1 137 1 180 1 334 1 36 1 0 1 340 1 270 1 174 1 78 1 105 1 
147 1 95 1 33 1 54 1 67 1 345 1 197 1 137 1 180 1 334 1 36 1 0 1 340 1 270 1 174 1 105 1 
147 1 33 1 54 1 67 1 345 1 197 1 137 1 180 1 334 1 36 1 0 1 236 1 340 1 270 1 174 1 105 1 
33 1 54 1 44 1 67 1 137 1 26 1 310 1 12 1 
33 1 54 1 44 1 67 1 137 1 26 1 56 1 310 1 
147 1 54 1 67 1 137 1 105 1 124 1 
329 1 54 1 67 1 137 1 171 1 334 1 78 1 0 1 
147 1 54 1 197 1 34 1 35 1 180 1 334 1 36 1 0 1 88 1 251 1 226 1 340 1 41 1 95 1 67 1 345 1 137 1 68 1 70 1 120 1 234 1 122 1 237 1 9 1 270 1 174 1 105 1 50 2 
342 1 54 1 44 1 263 1 149 1 67 1 97 1 26 1 137 1 56 1 129 1 267 1 100 1 154 1 310 1 160 1 78 1 
54 1 67 1 137 1 171 1 109 1 334 1 124 1 0 1 
147 1 54 1 67 1 345 1 197 1 137 1 180 1 334 1 36 1 0 1 236 1 340 1 270 1 174 1 78 1 105 1 
329 1 33 1 54 1 67 1 137 1 171 1 334 1 0 1 
93 1 212 1 219 1 150 1 125 1 7 1 
8 1 212 1 45 1 
212 1 150 1 125 1 289 1 268 1 
261 1 136 1 44 2 26 2 332 1 212 1 315 1 150 2 289 1 45 1 308 1 268 2 154 1 17 1 142 1 8 1 10 1 125 2 23 1 
330 1 81 1 164 1 159 1 320 1 304 1 272 1 296 1 
330 1 81 2 164 2 57 1 320 3 304 2 1 1 296 3 225 1 254 2 20 1 272 1 241 2 
330 1 81 1 164 1 244 1 320 2 304 1 296 2 61 1 159 1 194 1 272 1 241 1 
328 1 330 1 81 1 164 1 57 1 320 1 296 1 254 1 159 1 272 1 
25 1 304 2 206 1 48 2 
330 1 157 1 159 1 320 1 272 1 296 1 
330 1 81 1 324 1 164 1 159 1 320 2 304 1 272 1 241 1 296 2 
246 1 
330 1 81 1 164 1 159 1 320 1 304 1 272 1 296 1 
81 1 164 1 55 1 304 1 
330 1 81 1 164 1 320 1 304 1 272 1 296 1 
248 1 121 1 296 1 
330 1 81 1 164 1 57 1 320 1 296 1 254 1 225 1 159 1 272 1 
330 1 81 1 164 1 123 1 320 2 304 1 272 1 241 1 296 2 
111 1 134 1 330 1 159 1 20 1 320 1 72 1 43 1 304 1 272 1 296 1 
330 1 164 1 159 1 320 1 304 1 272 1 296 1 
330 1 81 1 164 2 159 1 320 1 272 1 296 1 
330 2 164 1 172 1 351 1 159 1 320 2 335 1 304 1 272 2 296 2 
330 1 81 1 164 1 320 3 304 2 30 1 1 1 296 3 324 1 159 1 20 1 272 1 241 2 
330 1 81 1 164 1 320 2 72 1 304 1 296 2 111 2 253 1 19 1 159 1 203 1 43 1 272 1 241 1 
330 2 81 1 164 1 185 1 320 4 304 2 1 1 296 4 159 1 123 1 20 1 272 2 241 2 
330 1 81 1 164 1 320 3 304 1 296 3 324 1 159 1 42 1 272 1 241 1 
254 1 20 1 304 1 1 1 
164 1 304 1 

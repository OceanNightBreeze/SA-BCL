#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) (164,202) (164,202) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) (164,202) (164,202) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) (164,202) (164,202) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) (164,202) (164,202) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) 35 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (73,155) 35 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 305 (236,271,310) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 305 55 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 305 55 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (12,300) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (12,300) 239 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (12,300) 239 118 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 305 (236,271,310) 289 33 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 188 179 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 305 55 264 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 305 55 264 295 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 281 324 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 46 1 161 1 175 1 273 1 9 1 
253 1 73 1 74 1 32 1 161 2 100 1 164 1 78 1 9 1 93 1 46 1 202 1 247 1 155 1 175 2 273 1 
253 1 73 1 74 1 32 1 161 2 100 1 164 1 78 1 9 1 93 1 46 1 202 1 247 1 155 1 175 2 273 1 
253 1 73 1 74 1 32 1 161 2 100 1 164 1 78 1 9 1 93 1 46 1 202 1 247 1 155 1 175 2 273 1 
253 1 73 1 74 1 32 1 161 2 100 1 164 1 78 1 9 1 93 1 46 1 202 1 247 1 155 1 175 2 273 1 
235 2 74 1 240 1 161 4 100 1 36 3 108 1 9 1 146 2 79 1 69 1 46 1 187 3 247 1 123 1 249 1 175 4 273 1 
74 1 32 1 161 2 137 1 36 1 78 1 7 1 89 1 9 1 93 1 46 1 247 1 123 1 249 1 175 2 273 1 
73 1 46 1 187 1 161 2 35 1 175 2 198 1 273 1 9 1 
73 1 46 1 187 1 161 2 35 1 175 2 198 1 273 1 9 1 
224 1 310 1 165 1 
275 1 40 1 165 1 62 1 220 1 80 1 115 1 169 1 172 1 310 1 231 1 24 1 233 1 
180 1 
114 1 115 1 224 1 186 1 310 2 180 1 165 2 196 1 
177 1 132 2 299 1 180 1 320 1 321 2 165 5 196 1 322 1 112 1 185 1 114 1 115 2 224 2 328 1 310 5 125 1 72 2 50 1 
114 1 117 1 180 1 
297 2 180 1 10 1 
170 1 275 2 231 2 40 2 24 1 233 2 220 2 62 2 
208 1 301 2 140 1 303 1 60 2 261 1 220 3 62 2 8 1 65 1 147 2 66 1 148 1 309 1 150 1 20 1 229 1 231 2 232 2 24 1 190 1 272 1 233 3 234 1 158 1 317 1 276 1 275 2 318 1 277 1 40 2 110 2 82 1 170 1 48 1 246 1 204 1 
275 1 40 1 62 1 220 1 169 1 172 1 231 1 24 1 233 1 
236 1 305 1 
275 1 180 1 40 1 165 2 62 1 220 1 323 1 114 1 201 1 310 2 271 1 230 1 231 1 126 1 233 1 
115 1 224 1 98 1 310 1 165 1 
114 1 115 1 224 1 266 1 310 2 180 1 165 2 196 1 
275 2 40 1 220 2 62 1 307 1 170 2 231 1 27 1 233 2 
95 1 31 1 304 1 
318 1 277 1 140 1 110 1 60 1 220 1 261 1 8 1 66 1 147 1 148 1 82 1 265 1 170 1 233 1 234 1 
117 1 170 1 
95 1 275 1 277 1 318 1 140 1 40 1 110 1 60 1 261 1 220 2 8 1 223 1 66 1 147 1 148 1 15 1 82 1 231 1 233 2 234 1 
55 1 275 4 34 1 40 4 305 1 220 4 62 1 223 1 15 2 170 1 49 1 231 4 27 1 233 4 
275 1 172 1 231 1 40 1 233 1 220 1 
15 1 170 1 275 3 231 3 40 3 62 1 233 3 220 3 
275 1 172 1 231 1 40 1 233 1 220 1 
307 1 275 1 231 1 40 1 27 1 233 1 220 1 62 1 323 1 
0 1 208 1 301 2 140 1 260 1 303 1 60 1 261 1 62 2 220 4 8 1 65 1 223 1 66 1 147 1 148 1 15 1 309 1 20 1 310 1 271 1 230 1 231 3 232 1 27 1 24 1 190 1 272 1 233 4 234 1 158 1 317 1 276 1 275 3 277 1 318 1 40 3 110 1 165 1 323 1 201 1 82 1 170 1 126 1 
55 1 15 1 275 1 231 1 40 1 305 1 233 1 220 1 
0 1 275 3 180 1 40 3 165 1 62 1 220 3 323 1 223 1 201 1 15 2 18 1 310 1 271 1 230 1 231 3 126 1 27 1 233 3 
95 1 31 1 275 2 40 2 62 1 220 2 15 1 231 2 27 1 233 2 
318 1 277 1 140 1 110 1 60 1 220 1 261 1 8 1 66 1 147 1 148 1 82 1 170 1 233 1 234 1 
87 1 277 1 140 1 110 1 60 1 220 1 261 1 66 1 147 1 148 1 82 1 170 1 288 1 233 1 234 1 
158 1 95 1 208 1 31 1 276 1 101 1 301 2 59 1 304 1 262 1 145 1 65 1 47 1 20 1 128 1 232 1 272 1 190 1 
275 1 230 1 231 1 217 1 40 1 233 1 220 1 323 1 
12 1 269 1 
12 1 269 1 
300 1 330 1 
300 1 330 1 
300 1 330 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 269 1 
12 1 239 1 269 1 228 1 
12 1 118 1 239 1 269 1 310 1 228 1 165 1 
74 1 100 1 247 1 
74 1 137 1 247 1 
74 3 100 2 137 1 163 1 291 1 52 1 
113 1 74 2 100 1 137 1 163 1 52 1 
74 2 100 1 137 1 163 1 52 2 
297 3 88 1 132 1 180 2 10 1 145 1 306 1 14 1 90 1 185 2 224 1 16 1 310 5 312 1 152 2 26 1 156 2 72 1 192 2 279 1 319 1 38 1 321 1 320 1 165 5 196 1 112 2 115 4 114 1 325 1 129 1 
297 9 88 3 177 1 132 2 180 5 10 3 145 3 306 4 90 2 185 5 224 6 310 9 270 1 152 6 26 1 156 6 72 2 98 5 102 1 319 3 103 1 243 1 193 1 38 2 320 1 321 2 165 9 196 1 112 6 115 7 114 1 116 5 203 1 129 3 
88 1 297 4 132 1 177 1 180 3 10 2 145 1 306 1 14 1 90 1 185 2 16 1 310 3 152 2 72 1 192 1 156 2 319 1 38 1 321 1 165 3 112 2 114 1 115 2 129 1 
297 7 88 2 132 1 177 1 180 4 10 3 145 2 306 2 14 1 90 1 185 3 16 1 310 4 270 1 152 4 156 4 72 1 192 2 319 2 243 1 38 1 321 1 165 4 112 4 114 1 115 3 203 1 129 2 
124 1 
117 1 82 1 252 1 
82 1 188 1 
82 1 140 1 261 1 
82 1 205 1 
82 1 261 1 
82 3 268 1 149 1 140 1 252 2 261 1 
158 3 176 1 88 1 256 1 56 1 5 1 259 1 262 2 63 1 91 2 17 1 229 4 23 1 128 3 127 1 232 7 25 1 292 1 
54 1 176 2 130 1 256 1 208 1 88 4 301 2 5 1 259 1 63 1 262 5 145 3 65 1 91 3 17 5 229 16 23 2 232 28 25 2 190 1 272 1 94 3 158 12 241 1 319 3 111 1 81 1 285 1 250 1 290 4 127 2 128 10 129 3 292 1 
130 1 176 1 88 1 208 2 256 1 301 4 6 1 5 1 262 3 63 1 65 2 91 2 17 1 229 5 23 1 232 9 25 1 190 2 272 2 158 4 77 1 127 1 128 4 292 1 
158 3 176 1 88 1 256 1 5 1 259 1 262 2 63 1 91 2 17 1 229 4 23 1 128 3 127 1 232 7 25 1 292 1 
158 3 176 1 88 1 256 1 5 1 259 1 262 2 63 1 91 2 17 1 229 4 23 1 128 3 127 1 232 7 25 1 292 1 
255 1 131 1 210 2 1 2 2 1 178 1 60 1 261 1 147 1 66 1 148 1 92 1 273 1 32 2 161 1 97 2 277 1 110 1 167 1 200 1 46 1 82 1 175 1 
133 1 209 1 210 1 1 1 137 1 60 1 9 1 13 1 147 1 148 1 273 1 316 1 32 1 74 2 100 1 97 1 161 1 278 1 277 1 76 1 107 1 110 1 46 1 247 1 291 1 175 1 
209 1 210 1 1 1 137 1 60 1 9 1 13 1 147 1 148 1 70 1 187 1 273 1 316 1 32 1 74 2 100 1 97 1 161 2 278 1 277 1 76 1 36 1 107 1 110 1 46 1 247 1 123 1 249 1 291 1 175 2 
133 1 209 1 210 1 1 1 137 1 60 1 13 1 147 1 148 1 187 2 273 1 316 1 32 1 74 2 100 1 97 1 161 3 278 1 277 1 36 1 107 1 110 1 200 1 46 1 247 1 123 1 249 1 291 1 175 3 293 1 
133 1 210 1 1 1 137 1 60 1 147 1 148 1 187 2 316 1 32 1 74 2 97 1 161 2 278 1 277 1 100 1 36 1 107 1 110 1 247 1 123 1 249 1 291 1 175 2 293 1 
41 1 
131 1 132 1 57 1 178 1 60 2 305 1 261 1 147 2 66 2 185 1 148 1 224 2 310 2 189 1 72 1 28 1 29 1 236 1 33 1 277 1 38 1 110 2 321 1 320 1 165 2 196 1 112 1 82 1 326 1 289 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 224 1 326 1 186 1 33 1 310 2 289 1 165 2 305 1 196 1 
29 1 236 1 132 1 33 1 320 1 321 1 165 1 305 1 326 1 310 1 289 1 72 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 326 1 33 1 310 1 289 1 165 1 305 1 
29 1 236 1 132 1 33 1 320 1 321 1 165 1 305 1 326 1 310 1 289 1 72 1 
95 1 208 1 88 1 31 1 276 1 301 2 219 1 304 1 65 1 17 1 47 1 20 1 229 2 128 1 232 2 129 1 272 1 190 1 
158 1 95 1 208 1 31 1 276 1 301 2 59 1 304 1 262 1 145 1 65 1 47 1 20 1 128 1 232 1 272 1 190 1 
158 1 95 2 208 1 88 1 31 2 276 1 301 2 319 1 304 2 262 1 145 1 65 1 17 1 47 1 20 1 229 2 128 2 232 3 129 1 272 1 190 1 
95 1 208 1 88 1 31 1 276 1 301 2 219 1 304 1 65 1 17 1 20 1 227 1 229 2 128 1 232 2 129 1 272 1 190 1 
158 1 95 1 208 1 31 1 276 1 301 2 59 1 304 1 262 1 145 1 65 1 20 1 227 1 128 1 232 1 272 1 190 1 
95 1 208 1 88 1 31 1 276 1 301 2 319 1 304 1 65 1 17 1 20 1 227 1 229 2 128 1 232 2 129 1 272 1 190 1 
95 1 208 1 88 1 31 1 276 1 301 2 319 1 304 1 65 1 17 1 20 1 229 2 128 1 232 2 129 1 272 1 190 1 
208 1 301 2 140 1 60 1 303 1 261 1 220 1 8 1 65 1 147 1 66 1 148 1 309 1 20 1 229 1 232 2 233 1 272 1 190 1 234 1 158 1 276 1 277 1 318 1 110 1 82 1 170 1 48 1 
87 1 208 1 301 2 140 1 60 1 303 1 261 1 220 1 65 1 147 1 66 1 148 1 20 1 229 1 232 2 233 1 272 1 190 1 234 1 158 1 276 1 277 1 110 1 197 1 82 1 170 1 48 1 288 1 
95 1 208 1 88 1 31 1 276 1 301 2 319 1 302 1 304 1 65 1 17 1 20 1 229 2 128 1 232 2 129 1 272 1 190 1 
88 1 208 1 138 1 301 2 140 1 60 1 304 1 261 1 220 1 8 1 65 1 147 1 148 1 309 1 70 1 17 1 20 1 229 2 232 2 233 1 272 1 190 1 234 1 95 1 31 1 276 1 277 1 318 1 319 1 110 1 82 1 128 1 129 1 
208 1 88 1 301 2 302 1 62 1 220 1 304 1 65 1 17 1 20 1 229 2 231 1 232 2 27 1 190 1 272 1 233 1 95 1 276 1 275 1 31 1 319 1 40 1 128 1 251 1 129 1 
208 1 301 2 140 1 302 1 60 1 303 1 261 1 220 2 8 1 65 1 223 1 147 1 66 1 148 1 15 1 265 1 20 1 229 1 231 1 232 2 272 1 233 2 190 1 234 1 158 1 96 1 31 1 276 1 275 1 277 1 318 1 110 1 40 1 45 1 82 1 170 1 48 1 329 1 
88 1 261 1 8 1 262 1 15 1 17 2 20 2 190 2 272 2 95 2 275 1 276 2 31 2 277 1 110 1 40 1 199 1 128 3 129 1 51 1 208 2 301 4 138 1 302 1 140 1 303 1 60 1 141 1 220 2 304 2 223 1 65 2 147 1 66 1 148 1 309 1 229 3 231 1 232 5 233 2 234 1 158 2 318 1 319 1 166 1 82 1 
207 1 208 2 131 1 133 1 301 4 178 1 60 8 303 1 220 1 261 2 11 1 65 2 147 8 66 2 15 1 148 2 70 1 150 2 20 2 227 1 229 1 231 1 232 2 233 1 190 2 272 2 158 1 160 1 275 1 276 2 277 2 40 1 110 7 281 1 82 3 47 1 171 1 48 1 84 1 
208 1 88 1 301 2 302 1 62 1 220 1 304 1 262 1 144 1 145 1 65 1 20 1 229 1 231 1 232 2 27 1 190 1 272 1 233 1 158 1 95 1 31 1 276 1 275 1 319 1 40 1 128 1 129 1 
176 1 256 1 208 1 88 1 301 2 5 1 304 1 63 1 262 2 65 1 91 1 20 1 229 3 23 1 232 6 190 1 272 1 158 3 95 1 31 1 276 1 117 1 47 1 170 2 128 2 292 1 
208 2 88 3 58 1 301 4 302 1 303 1 304 12 142 1 65 2 17 2 20 2 229 10 232 15 190 2 272 2 94 3 158 5 95 12 276 1 31 3 75 1 104 1 319 3 285 2 170 1 48 1 250 1 290 4 128 2 129 3 
208 2 88 4 213 1 301 4 214 2 6 1 182 1 221 1 183 1 262 1 145 4 65 2 263 1 308 1 267 1 17 3 151 1 229 15 232 27 313 1 190 2 272 2 94 3 158 12 319 4 242 1 195 3 244 1 283 1 43 1 285 1 250 3 290 4 128 4 129 4 
130 1 208 3 88 4 213 1 301 6 214 2 6 1 182 1 221 1 183 1 262 2 145 3 65 3 263 1 308 1 267 1 17 3 151 1 229 17 232 29 313 1 190 3 272 3 94 3 158 12 319 4 242 1 195 4 244 1 283 1 43 1 285 1 250 3 290 4 128 5 129 4 
176 1 130 2 256 1 208 3 88 8 213 1 301 6 5 1 214 1 6 1 182 1 63 1 221 1 183 1 262 8 145 7 65 3 91 1 263 1 308 1 17 7 151 1 229 27 23 1 232 46 313 1 190 3 272 3 94 4 158 19 104 2 319 7 242 1 195 4 244 1 43 1 285 2 250 2 290 4 128 15 129 7 292 1 
208 2 88 3 211 1 301 4 214 1 6 1 182 1 183 1 262 3 145 3 65 2 308 1 267 1 17 3 229 9 232 16 190 2 272 2 94 1 158 7 319 3 195 2 244 2 43 1 285 1 250 1 290 2 128 6 129 3 
130 1 208 2 88 3 301 4 213 1 214 2 6 1 182 1 221 1 183 2 145 2 65 2 263 1 308 1 17 1 151 1 229 13 232 21 313 1 190 2 272 2 94 2 158 8 319 3 242 1 195 3 244 1 43 1 250 2 290 2 128 1 129 3 
208 1 301 2 302 1 216 1 60 2 303 1 261 1 220 2 11 1 65 1 147 2 148 1 150 2 20 1 21 1 229 1 232 2 191 1 233 2 272 1 190 1 158 1 276 1 275 2 277 1 110 2 281 1 82 1 327 1 48 1 206 1 
53 1 131 1 258 1 277 1 97 1 178 1 110 1 60 1 261 1 167 1 66 1 147 1 148 1 82 1 
133 1 74 2 258 1 100 1 137 1 97 1 278 1 277 1 110 1 60 1 13 1 147 1 148 1 68 1 247 1 173 1 291 1 316 1 
133 1 74 2 258 1 100 1 137 1 277 1 97 1 278 1 110 2 60 2 13 1 147 2 148 1 70 1 68 1 247 1 173 1 291 1 316 1 
133 1 74 2 100 1 137 1 97 1 278 1 277 1 110 1 60 1 13 1 147 1 148 1 247 1 120 1 173 1 291 1 316 1 
294 1 
297 1 132 1 134 1 4 1 180 2 215 1 320 1 321 1 165 1 196 1 10 1 112 1 114 1 185 1 224 1 310 1 72 1 
132 1 277 1 179 1 140 1 320 1 321 1 110 1 60 1 261 1 66 1 147 1 148 2 82 1 268 1 188 1 72 1 157 1 
297 6 88 2 132 1 213 1 180 3 10 3 145 2 185 4 263 1 152 5 151 1 313 1 156 5 72 1 94 1 319 2 242 1 321 1 320 1 112 4 250 1 290 1 129 2 
176 1 88 2 132 1 3 2 5 1 220 1 62 1 185 2 67 1 310 1 23 1 231 1 24 1 233 1 72 1 275 1 321 1 320 1 40 1 165 1 112 2 80 1 169 1 172 1 248 1 331 1 292 1 
132 1 180 1 320 1 321 1 322 1 112 1 114 1 185 1 328 1 72 1 
88 2 297 10 3 2 319 2 180 5 10 5 112 5 145 2 199 1 185 3 248 1 152 5 129 2 156 5 
114 1 224 1 310 1 180 1 165 1 196 1 
131 1 177 1 132 2 57 1 136 2 178 1 60 2 218 1 261 1 184 1 147 2 66 2 185 2 148 1 224 4 310 3 22 1 189 1 72 2 28 2 277 1 38 2 321 2 320 1 110 2 165 3 196 2 112 2 82 1 
112 1 185 1 114 1 117 1 328 1 180 1 322 1 
208 1 301 2 140 1 303 1 60 1 220 3 62 2 261 1 8 1 65 1 147 1 66 1 148 1 309 1 20 1 231 2 232 1 24 1 190 1 272 1 233 3 234 1 158 1 317 1 275 2 276 1 318 1 277 1 110 1 40 2 82 1 170 1 
297 4 132 1 180 4 38 1 320 1 321 1 10 2 112 2 91 1 185 1 114 2 152 2 156 2 72 1 28 1 
64 1 121 1 181 1 
64 1 121 1 181 1 
64 1 121 1 181 1 
64 1 181 1 85 1 
64 1 181 1 85 1 
64 1 181 1 85 1 
64 1 181 1 
12 1 269 1 
64 1 99 1 181 1 105 1 61 1 
176 1 88 1 208 1 256 1 301 2 6 1 5 1 63 1 262 2 65 1 91 1 263 1 229 4 23 1 232 8 190 1 272 1 94 1 158 4 250 1 290 1 128 2 292 1 
176 1 256 1 208 2 88 2 301 4 5 1 6 1 262 2 63 1 65 2 91 1 263 1 17 1 229 6 23 1 232 11 190 2 272 2 94 1 158 5 319 1 44 1 285 1 250 1 290 2 128 3 129 1 292 1 
208 2 88 2 301 4 213 1 6 1 145 2 65 2 263 1 17 1 229 6 151 1 232 10 313 1 190 2 272 2 94 1 158 4 319 2 242 1 44 1 250 1 290 1 128 1 129 2 
130 2 208 4 88 2 301 8 213 1 6 1 262 2 145 1 65 4 263 1 17 1 229 7 151 1 232 11 313 1 190 4 272 4 94 1 158 4 319 2 242 1 44 1 250 1 290 1 128 3 129 2 
176 1 88 1 208 1 256 1 301 2 6 1 5 1 63 1 262 2 65 1 91 1 263 1 229 4 23 1 232 8 190 1 272 1 94 1 158 4 250 1 290 1 128 2 292 1 
130 1 208 2 88 2 301 4 213 1 6 1 262 2 145 2 65 2 263 1 17 1 229 6 151 1 232 11 313 1 190 2 272 2 94 1 158 5 319 2 242 1 250 1 290 1 128 3 129 2 
130 1 208 3 88 2 301 6 213 1 6 1 145 1 65 3 263 1 17 1 229 7 151 1 232 10 313 1 190 3 272 3 94 1 158 3 319 2 242 1 44 1 250 1 290 1 128 1 129 2 
130 1 208 3 88 2 301 6 213 1 6 1 262 1 145 1 65 3 263 1 17 2 267 1 229 7 151 1 232 10 313 1 190 3 272 3 94 1 158 3 319 2 242 1 250 1 290 1 128 3 129 2 
158 4 176 3 256 2 88 1 5 1 63 1 262 3 17 3 229 3 23 3 232 7 128 6 292 1 
130 1 208 3 88 2 301 6 213 1 6 1 145 1 65 3 263 1 267 1 17 1 229 7 151 1 232 10 313 1 190 3 272 3 94 1 158 3 319 2 242 1 250 1 290 1 128 1 129 2 
158 5 176 2 208 1 88 2 301 2 6 1 5 1 262 3 65 1 17 2 229 5 23 2 128 5 232 10 190 1 272 1 331 1 292 2 
208 1 88 1 301 2 6 1 65 1 17 1 229 2 232 2 128 1 129 1 272 1 190 1 
158 1 208 1 88 1 301 2 6 1 319 1 262 1 145 1 65 1 17 1 229 2 128 2 232 3 129 1 272 1 190 1 
158 2 130 1 176 1 208 3 237 1 301 6 6 1 262 1 65 3 267 1 17 1 229 1 23 1 232 3 128 2 272 3 190 3 
54 1 176 3 130 2 256 1 208 5 88 5 301 10 5 2 6 1 63 1 262 7 145 3 65 5 91 1 267 1 17 5 229 16 23 3 232 31 190 5 272 5 94 3 158 15 237 1 241 1 319 3 44 1 81 1 285 1 250 1 290 4 128 12 129 3 292 2 
158 4 130 1 176 1 88 1 208 2 256 1 301 4 5 1 262 2 63 1 65 2 91 1 17 1 229 4 23 1 232 8 128 3 292 1 272 2 190 2 
158 3 176 1 256 1 88 1 5 1 63 1 262 2 91 1 117 1 229 3 23 1 128 2 232 6 292 1 
158 1 208 1 88 1 301 2 319 1 262 1 145 1 65 1 44 1 17 1 229 2 128 2 232 3 129 1 272 1 190 1 
158 3 88 1 319 1 262 1 145 1 285 1 17 1 250 1 229 3 290 2 232 6 128 2 129 1 94 1 
176 2 130 2 256 1 88 3 208 2 58 1 301 4 5 1 63 1 262 5 145 2 65 2 91 1 17 4 229 11 23 2 232 21 272 2 190 2 94 2 158 10 237 1 319 2 104 1 285 1 290 2 128 9 129 2 292 1 
158 1 290 1 232 1 
229 1 232 1 94 1 
158 2 208 1 88 1 301 2 319 1 262 2 145 1 65 1 44 1 199 1 17 1 229 3 232 5 128 3 129 1 190 1 272 1 
130 1 208 2 88 2 301 4 213 1 6 1 262 2 145 2 65 2 263 1 17 1 229 6 151 1 232 11 313 1 190 2 272 2 94 1 158 5 319 2 242 1 250 1 290 1 128 3 129 2 
158 3 176 1 88 1 5 1 262 1 17 1 229 3 23 1 232 6 128 2 292 1 
158 2 176 1 130 1 256 1 208 1 237 1 301 2 262 1 63 1 65 1 17 1 229 1 23 1 128 2 232 3 272 1 190 1 
55 1 264 1 305 1 
168 1 295 1 55 1 264 1 274 1 19 1 305 1 315 1 
275 1 277 1 140 1 40 1 110 1 60 1 261 1 220 2 8 1 66 1 147 1 148 1 15 1 82 1 170 1 231 1 233 2 234 1 
15 1 275 1 136 1 231 1 40 1 233 1 220 1 
15 1 275 1 136 1 231 1 40 1 233 1 220 1 
136 1 310 1 165 1 
136 1 310 1 165 1 
147 1 148 1 160 1 277 1 60 1 110 1 
207 1 133 1 30 1 160 1 277 2 139 1 140 1 110 6 60 7 281 1 261 2 66 2 147 7 148 3 70 1 82 3 150 1 268 1 171 1 84 1 174 1 
176 1 256 1 88 1 5 1 261 1 8 1 262 2 91 1 15 1 20 2 23 1 190 2 191 1 272 2 95 1 31 1 275 1 276 2 277 1 110 1 40 1 128 2 292 1 208 2 138 1 301 4 302 1 140 1 60 1 141 1 220 2 304 1 63 1 65 2 147 1 148 1 309 1 70 1 229 3 231 1 232 6 233 2 234 1 158 3 318 1 82 1 170 2 
132 2 180 1 60 1 222 1 184 1 185 1 147 1 66 1 224 2 188 1 310 3 72 2 238 1 37 1 110 1 321 2 320 2 165 3 196 1 322 1 112 1 114 1 115 1 201 1 82 2 328 1 286 1 252 1 
160 1 277 1 140 1 110 1 60 1 261 1 147 1 148 2 82 1 268 1 124 1 252 1 157 1 
298 1 131 1 277 1 178 1 110 4 60 4 261 1 42 1 66 1 147 4 148 1 70 1 82 1 
30 1 136 1 277 1 139 1 140 1 110 1 60 1 261 1 147 1 148 2 82 1 245 1 225 1 86 1 
147 1 66 1 148 1 74 1 137 1 277 1 278 1 247 1 60 1 110 1 
147 2 148 1 133 1 82 1 70 1 277 1 216 1 60 2 110 2 261 1 281 1 
298 1 131 1 136 1 277 2 178 1 110 3 60 4 281 1 261 2 66 1 147 4 148 2 70 1 82 3 171 1 84 1 
298 1 131 1 136 1 277 2 178 1 110 3 60 4 281 1 261 2 66 1 147 4 324 1 148 2 70 1 82 3 171 1 
131 1 147 1 66 1 148 1 117 1 82 1 277 1 178 1 60 1 110 1 261 1 
275 1 277 1 140 1 40 1 110 1 60 1 261 1 220 2 66 1 147 1 148 1 15 1 82 1 170 1 288 1 231 1 233 2 234 1 
136 1 
296 1 170 1 83 1 122 1 194 1 
0 1 296 1 280 1 180 1 165 2 194 2 323 1 114 1 115 1 201 1 170 1 287 1 310 2 122 2 83 2 153 1 271 1 230 1 126 1 
296 1 275 1 194 1 220 1 327 1 122 1 21 1 206 1 233 1 
296 1 287 1 280 1 
46 1 161 1 123 1 249 1 36 1 175 1 273 1 9 1 
254 1 161 4 240 1 36 3 143 1 146 1 93 1 119 1 46 1 187 2 123 2 249 2 175 4 273 1 
161 2 162 1 36 1 39 1 9 1 198 1 46 1 187 1 123 1 249 1 175 2 273 1 
254 2 161 3 36 1 143 1 9 1 282 1 46 1 93 2 123 1 249 1 175 3 273 1 
311 1 36 2 109 1 154 2 
46 1 161 1 71 1 175 1 273 1 9 1 
257 1 46 1 187 1 161 2 123 1 249 1 36 1 175 2 273 1 9 1 
314 1 
46 1 161 1 123 1 249 1 36 1 175 1 273 1 9 1 
117 1 123 1 249 1 36 1 
46 1 161 1 123 1 249 1 36 1 175 1 273 1 
32 1 1 1 161 1 
254 1 93 2 46 1 135 1 161 3 123 1 249 1 36 1 175 3 143 1 273 1 9 1 
235 1 46 1 187 1 161 2 123 1 249 1 36 1 175 2 273 1 
74 1 161 1 100 1 36 1 9 1 146 1 79 1 46 1 247 1 175 1 273 1 
46 1 161 1 249 1 36 1 175 1 273 1 9 1 
46 1 161 1 123 1 249 2 175 1 273 1 9 1 
212 1 161 2 36 1 106 1 9 1 46 2 284 1 249 1 175 2 273 2 
159 1 257 1 161 3 240 1 36 2 9 1 146 1 46 1 187 2 123 1 249 1 175 3 273 1 
74 2 137 1 161 2 100 1 36 1 9 1 46 1 187 1 226 1 247 1 123 1 249 1 291 1 175 2 273 1 
235 1 161 4 240 1 36 2 9 1 146 1 46 2 69 1 187 2 123 1 249 1 175 4 273 2 
257 1 161 3 36 1 9 1 46 1 93 1 187 1 123 1 249 1 175 3 273 1 
146 1 119 1 240 1 36 1 
249 1 36 1 

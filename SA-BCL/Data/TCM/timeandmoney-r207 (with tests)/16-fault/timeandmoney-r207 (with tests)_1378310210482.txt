#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (94,135) (94,135) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (94,135) (94,135) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (94,135) (94,135) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (94,135) (94,135) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 115 295 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 115 295 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 194 29 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 194 29 200 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 147 121 18 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 147 121 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 147 121 18 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 147 121 18 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 147 121 18 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 52 338 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 1 273 1 160 1 106 1 26 1 151 1 30 1 135 1 230 1 
94 1 273 1 160 1 106 1 26 1 151 1 30 1 135 1 230 1 
94 1 273 1 160 1 106 1 26 1 151 1 30 1 135 1 230 1 
94 1 273 1 160 1 106 1 26 1 151 1 30 1 135 1 230 1 
336 3 113 1 151 1 26 4 258 1 73 1 103 3 153 1 319 2 273 1 106 4 59 2 60 1 274 1 306 1 66 1 230 1 207 1 
336 1 160 1 151 1 26 2 165 1 30 1 258 1 73 1 154 1 273 1 106 2 306 1 118 1 230 1 66 1 23 1 
336 2 160 1 113 1 151 2 26 3 115 1 258 1 103 1 319 1 273 2 106 3 306 1 230 1 
0 1 273 1 106 1 26 1 151 1 295 1 115 1 230 1 
0 1 273 1 106 1 26 1 151 1 295 1 115 1 230 1 
275 1 167 1 11 1 
253 1 
123 2 28 2 39 2 127 2 20 1 9 1 316 2 282 2 
24 1 191 1 270 1 62 1 218 1 28 2 177 1 292 2 48 1 195 1 197 1 32 2 93 1 199 1 35 2 9 1 158 1 14 1 123 3 39 2 166 2 316 2 186 1 282 3 260 1 238 1 168 1 283 1 323 2 244 1 169 1 264 1 127 2 20 1 171 1 267 1 111 1 
301 1 123 1 28 1 39 1 127 1 37 1 9 1 316 1 299 1 282 1 
130 1 123 1 90 1 225 1 316 1 282 1 7 1 275 1 328 1 37 1 343 1 335 1 11 1 120 1 
130 2 39 1 28 1 123 1 90 1 225 2 316 1 282 1 275 1 127 1 37 1 343 1 335 1 11 1 120 1 
130 1 45 1 225 1 124 1 97 1 
130 2 275 1 249 1 220 1 225 2 124 1 97 1 11 1 
130 1 225 1 124 1 
130 1 301 1 123 1 28 1 39 1 127 1 37 1 9 1 225 1 316 1 299 1 282 1 97 1 325 1 
11 1 
208 1 130 2 275 1 249 1 225 2 124 1 97 1 11 1 
174 2 1 1 130 5 122 1 250 1 249 1 291 1 224 1 225 5 309 1 124 2 275 1 298 1 297 1 38 1 333 2 97 2 11 1 247 2 
20 1 167 1 
123 2 39 1 28 1 316 2 282 2 51 1 107 1 127 1 20 2 
234 1 215 1 137 1 
14 1 270 1 62 1 123 1 177 1 48 1 195 1 186 1 282 1 32 1 35 1 323 1 310 1 20 1 158 1 267 1 
14 1 62 1 270 1 39 1 28 1 123 2 177 1 40 1 48 1 195 1 186 1 316 1 282 2 137 1 32 1 35 1 323 1 80 1 158 1 267 1 
80 1 127 1 123 3 28 3 39 3 20 1 316 3 282 3 
301 1 123 1 28 1 39 1 37 1 316 1 282 1 
51 1 107 1 123 1 28 1 39 1 127 1 37 1 316 1 282 1 
24 1 191 1 130 1 62 1 270 1 218 1 28 3 177 1 292 2 48 1 195 1 90 1 225 1 91 1 32 1 35 1 37 1 9 1 158 1 335 1 120 1 14 1 123 4 39 3 40 1 166 1 186 1 316 3 282 4 168 1 238 1 107 1 323 1 109 1 244 1 80 1 169 1 264 1 127 2 20 1 171 1 267 1 343 1 111 1 
7 1 80 1 123 2 28 1 39 1 20 1 236 1 316 2 282 2 
130 1 39 3 28 3 123 3 40 1 225 1 90 1 316 3 282 3 91 1 107 1 80 2 127 1 157 1 37 1 343 1 335 1 11 1 120 1 
107 1 80 1 123 2 28 2 39 2 127 1 316 2 215 1 282 2 137 1 
14 1 270 1 62 1 123 1 177 1 48 1 195 1 186 1 282 1 32 1 35 1 323 1 20 1 267 1 158 1 
14 1 62 1 123 1 221 1 177 1 48 1 186 1 282 1 32 1 35 1 323 1 77 1 20 1 267 1 158 1 
24 1 191 1 218 1 292 2 293 1 327 1 137 2 199 2 337 1 56 1 166 4 234 2 210 1 105 1 143 1 304 1 239 1 244 1 264 1 171 1 22 1 215 2 266 1 111 2 
123 1 28 1 39 1 302 1 37 1 316 1 282 1 120 1 
39 4 28 4 123 5 40 1 236 1 316 5 282 5 7 1 107 1 156 1 80 2 127 1 128 1 20 1 
301 1 302 1 123 2 28 2 39 2 37 1 316 2 282 2 
192 1 237 1 
192 1 237 1 
222 1 139 1 
222 1 139 1 
222 1 139 1 
192 1 203 1 237 1 
192 1 237 1 12 1 
192 2 36 1 222 1 139 1 74 1 237 2 
192 1 203 1 237 1 
192 1 203 1 237 1 
192 1 237 1 10 1 
192 1 237 1 10 1 
192 1 237 1 10 1 
192 1 256 1 29 1 251 1 194 1 237 1 
200 1 130 1 192 1 256 1 29 1 251 1 194 1 225 1 237 1 
73 1 66 1 207 1 
73 1 118 1 66 1 
81 1 89 1 73 3 118 1 68 1 207 2 
305 1 89 1 73 2 118 1 68 1 207 1 
89 2 73 2 118 1 68 1 207 1 
174 1 150 1 130 5 250 3 249 1 28 1 152 1 63 1 225 5 309 2 327 1 275 1 37 1 9 1 119 1 333 1 299 1 253 1 97 4 54 1 11 1 300 2 13 2 301 1 122 1 337 1 99 1 123 1 39 1 316 1 124 1 282 1 210 1 304 1 342 1 127 1 265 2 247 1 325 1 129 1 326 1 
174 1 150 1 130 5 250 3 249 1 114 1 28 1 152 1 63 1 225 5 309 2 327 1 275 1 37 1 9 1 119 1 333 1 206 1 299 1 253 1 97 4 11 1 13 2 122 1 301 1 337 1 99 1 39 1 123 1 124 3 316 1 282 1 210 1 304 1 45 2 127 1 265 2 247 1 345 2 325 1 129 1 326 1 
174 1 130 3 250 3 28 1 152 1 225 3 63 1 309 2 327 1 275 1 329 1 37 1 297 1 9 1 299 1 333 1 119 1 97 2 253 3 11 2 54 1 300 1 13 2 301 1 337 1 123 1 39 1 316 1 282 1 210 1 304 1 342 1 127 1 265 2 325 1 247 1 326 1 
174 1 130 4 225 4 309 4 275 1 9 1 53 1 97 3 54 1 11 3 13 4 316 1 282 1 61 1 247 1 325 1 326 1 250 5 28 1 152 2 63 2 327 2 329 2 37 1 297 1 119 1 333 1 299 1 253 6 300 2 301 1 337 2 39 1 123 1 210 2 304 2 342 1 127 1 265 4 86 1 
240 1 158 1 167 1 
228 1 158 1 
2 1 
14 1 158 1 
240 2 14 1 177 1 158 3 136 1 324 1 
14 1 177 1 158 1 
108 1 158 1 
88 1 257 1 131 1 166 7 303 1 31 1 50 2 327 1 143 3 199 4 304 1 83 1 332 1 266 2 111 3 98 1 173 1 
88 1 257 1 131 1 166 7 303 1 31 1 50 2 327 1 143 3 199 4 304 1 83 1 332 1 266 2 111 3 98 1 173 1 
88 1 257 1 131 1 166 7 303 1 31 1 50 2 327 1 143 3 76 1 199 4 304 1 83 1 332 1 266 2 111 3 98 1 173 1 
199 1 182 1 83 1 166 1 50 1 173 1 98 2 
112 1 191 2 88 1 218 2 131 1 292 4 50 2 31 1 327 1 199 5 183 1 332 1 98 1 257 1 166 9 303 1 19 1 143 4 304 1 244 2 264 2 83 1 266 3 111 4 
26 2 151 1 62 1 272 1 133 1 32 1 273 1 35 1 116 1 118 1 66 1 230 1 207 1 336 1 159 1 160 1 258 1 235 1 73 2 103 1 17 1 259 1 211 1 323 1 106 2 81 1 306 1 213 1 170 1 267 1 
26 3 151 1 62 1 272 1 133 1 92 1 32 1 273 1 35 1 65 1 116 1 118 1 66 1 207 1 336 1 159 1 160 1 258 1 235 1 73 2 57 1 103 2 17 1 259 1 323 1 106 3 81 1 306 1 213 1 267 1 
26 2 62 1 272 1 133 1 92 1 32 1 35 1 65 1 118 1 66 1 207 1 336 1 159 1 160 1 258 1 235 1 73 2 103 2 17 1 323 1 106 2 81 1 306 1 213 1 267 1 
87 1 160 2 14 1 151 1 26 1 62 1 48 1 235 2 178 1 57 1 6 1 17 2 32 1 273 1 106 1 35 1 323 1 330 1 213 2 245 1 267 1 158 1 277 1 
26 1 151 1 62 1 272 1 133 1 32 1 273 1 35 1 65 1 116 1 118 1 66 1 230 1 207 1 159 1 160 1 235 1 73 2 17 1 259 1 211 1 323 1 106 1 81 1 213 1 267 1 
25 1 
174 1 47 1 130 5 3 2 219 2 48 2 225 5 90 1 309 2 6 1 7 1 275 1 11 2 232 1 14 1 142 1 104 1 316 1 282 1 322 2 323 2 58 1 188 1 145 2 247 1 249 3 250 2 62 1 196 1 64 1 32 2 198 4 33 1 35 2 328 1 329 2 330 1 37 1 119 1 333 1 158 1 253 2 335 1 120 1 161 1 122 1 123 1 339 2 124 6 261 2 43 1 262 2 214 1 267 1 343 1 
130 3 249 1 3 1 225 3 90 1 64 1 198 2 7 1 328 1 37 1 335 1 120 1 208 1 123 1 316 1 104 1 124 2 282 1 43 1 58 1 214 1 343 1 
130 3 249 1 225 3 90 1 64 1 198 3 7 1 328 1 275 1 37 1 335 1 120 1 11 1 208 1 123 1 339 1 124 1 316 1 104 1 282 1 43 1 58 1 214 1 343 1 
130 3 249 1 3 1 219 1 225 3 90 1 64 1 198 3 7 1 328 1 275 1 37 1 335 1 120 1 11 1 208 1 123 1 339 1 316 1 104 1 124 2 282 1 43 1 58 1 214 1 343 1 
174 1 47 1 130 5 3 4 219 4 90 1 225 5 309 1 7 1 275 5 11 5 232 1 314 1 104 1 316 1 282 1 241 1 58 1 322 2 145 2 246 1 247 1 249 3 250 1 64 1 198 6 328 1 329 2 37 1 333 1 335 1 120 1 162 1 208 1 122 1 123 1 339 4 124 7 43 1 261 2 262 2 214 1 343 1 268 1 
47 1 174 1 130 4 3 2 219 2 90 1 225 4 309 1 7 1 275 1 11 1 232 1 316 1 104 1 282 1 58 1 322 2 145 2 247 1 250 1 249 2 196 1 64 1 198 4 328 1 329 2 37 1 333 1 335 1 253 2 120 1 122 1 123 1 339 2 124 4 43 1 261 2 262 2 214 1 343 1 
47 1 174 1 130 4 249 2 250 1 3 2 219 2 225 4 90 1 309 1 64 1 198 4 7 1 275 1 328 1 329 2 37 1 333 1 335 1 11 1 120 1 232 1 122 1 314 1 123 1 339 2 124 4 316 1 104 1 282 1 241 1 322 2 261 2 43 1 58 1 262 2 145 2 214 1 343 1 268 1 247 1 
47 1 174 1 130 4 249 2 250 1 3 2 219 2 225 4 90 1 309 1 64 1 198 4 7 1 275 1 328 1 329 2 37 1 333 1 335 1 11 1 120 1 232 1 122 1 314 1 123 1 339 2 124 4 316 1 104 1 282 1 241 1 322 2 261 2 43 1 58 1 262 2 145 2 214 1 343 1 268 1 247 1 
174 1 130 4 249 2 250 1 3 2 219 2 225 4 90 1 309 1 64 1 198 4 7 1 275 1 328 1 37 1 117 1 333 1 253 2 335 1 11 1 120 1 232 1 122 1 314 1 123 1 339 2 340 2 102 1 124 4 317 1 316 1 104 1 282 1 261 2 43 1 58 1 262 2 212 2 214 1 343 1 247 1 
47 1 174 1 130 4 249 2 250 1 3 3 219 3 225 4 90 1 309 1 64 1 198 5 7 1 275 1 328 1 329 2 37 1 333 1 335 1 11 1 120 1 232 1 122 1 314 1 123 1 339 3 316 1 104 1 124 5 282 1 241 1 322 2 261 2 43 1 58 1 262 2 145 2 214 1 343 1 246 1 268 1 247 1 
47 1 174 1 130 4 249 2 250 1 3 3 219 3 225 4 90 1 309 1 64 1 198 5 7 1 275 1 328 1 329 2 37 1 333 1 335 1 11 1 120 1 232 1 122 1 314 1 123 1 339 3 316 1 104 1 124 5 282 1 241 1 322 2 261 2 43 1 58 1 262 2 145 2 214 1 343 1 246 1 268 1 247 1 
174 1 130 2 250 1 196 1 225 2 90 1 309 1 64 1 198 2 7 1 328 1 37 1 333 1 253 1 335 1 120 1 232 1 122 1 123 1 340 1 104 1 316 1 317 1 282 1 261 1 43 1 58 1 262 1 214 1 343 1 247 1 
24 1 191 1 88 1 131 1 218 1 292 2 50 1 137 1 327 1 199 3 332 1 257 1 56 1 166 6 234 1 303 1 167 1 143 2 304 1 244 1 264 1 20 2 171 1 215 1 266 2 111 3 
24 1 175 3 191 2 218 2 152 2 292 4 49 1 31 1 197 1 252 1 137 11 327 1 199 8 294 1 205 1 311 1 278 1 312 1 337 2 166 14 234 11 210 1 143 2 304 2 244 2 169 1 264 2 20 1 171 2 266 1 215 4 111 6 248 3 
24 1 191 1 62 1 270 1 218 1 28 1 177 1 48 1 292 2 195 1 197 1 32 1 199 1 35 1 201 1 310 1 205 1 158 1 279 1 14 1 141 1 123 2 39 1 40 1 166 2 186 1 316 1 282 2 323 1 80 1 244 1 264 1 169 1 20 1 171 1 267 1 215 1 111 1 
24 1 191 1 218 1 28 1 292 2 48 1 226 1 179 1 32 1 35 1 205 1 123 1 39 1 40 1 166 2 316 1 282 1 320 1 323 1 79 1 80 1 244 1 264 1 169 1 171 1 111 2 
24 2 191 2 290 1 62 2 132 1 28 1 218 2 48 2 292 4 6 1 197 1 32 8 199 1 35 7 65 1 330 1 140 1 158 3 14 2 123 1 39 1 56 1 233 1 166 2 316 1 41 1 282 1 260 2 125 1 323 8 80 1 244 2 264 2 169 1 170 1 171 2 267 2 344 1 111 1 
24 1 191 1 176 1 218 1 28 1 152 1 292 2 137 1 327 1 199 1 205 1 337 1 39 1 123 1 234 1 166 3 316 1 282 1 210 1 143 1 304 1 107 1 244 1 127 1 264 1 171 1 266 1 215 1 111 2 
24 1 191 1 337 1 218 1 56 1 292 2 234 1 166 2 31 1 137 1 143 1 199 2 239 1 304 1 244 1 264 1 171 1 215 1 
24 1 191 1 218 1 56 1 292 2 234 1 166 2 137 1 327 1 210 1 143 1 244 1 264 1 171 1 266 1 215 1 22 1 111 2 
24 1 191 1 218 1 152 1 292 2 31 1 137 2 327 1 199 2 337 1 56 1 166 4 234 2 210 1 143 2 304 1 244 1 264 1 171 1 215 2 266 1 111 2 
24 1 191 1 337 1 218 1 292 2 234 1 166 2 31 1 137 1 143 1 199 2 239 1 304 1 244 1 264 1 171 1 215 1 344 1 
24 1 191 1 218 1 292 2 234 1 166 2 137 1 327 1 210 1 143 1 244 1 264 1 171 1 266 1 215 1 344 1 22 1 111 2 
24 1 191 1 218 1 152 1 292 2 31 1 137 2 327 1 199 2 337 1 166 4 234 2 210 1 143 2 304 1 244 1 264 1 171 1 344 1 215 2 266 1 111 2 
24 1 191 1 218 1 152 1 292 2 31 1 137 2 327 1 199 2 337 1 166 4 234 2 210 1 143 2 304 1 244 1 264 1 171 1 215 2 266 1 111 2 
24 1 191 1 62 1 270 1 218 1 177 1 48 1 292 2 195 1 197 1 32 1 199 1 35 1 158 1 14 1 123 1 166 2 186 1 282 1 168 1 323 1 244 1 264 1 169 1 20 1 171 1 267 1 111 1 
24 1 191 1 62 1 221 1 218 1 177 1 48 1 292 2 197 1 32 1 199 1 35 1 158 1 14 1 123 1 280 1 166 2 186 1 282 1 77 1 323 1 244 1 264 1 169 1 20 1 171 1 267 1 111 1 
24 1 191 1 218 1 152 1 292 2 31 1 137 2 327 1 199 2 205 1 337 1 166 4 234 2 210 1 143 2 304 1 244 1 264 1 171 1 215 2 266 1 111 2 
24 1 191 1 62 1 270 1 218 1 177 1 152 1 292 2 195 1 31 1 327 1 137 2 32 1 199 2 35 1 158 1 14 1 337 1 123 1 234 2 166 4 186 1 282 1 210 1 143 2 168 1 304 1 323 1 110 1 244 1 264 1 170 1 171 1 266 1 215 2 267 1 111 2 
24 1 191 1 218 1 28 1 152 1 292 2 31 1 327 1 137 1 199 2 205 1 71 1 337 1 39 1 123 1 166 3 234 1 316 1 282 1 210 1 143 1 304 1 107 1 244 1 127 1 264 1 171 1 215 1 111 1 
191 1 121 1 218 1 292 2 166 2 134 1 19 1 18 1 199 1 244 1 296 1 264 1 147 1 111 1 
191 1 121 2 218 1 292 2 166 2 134 1 19 1 18 1 199 1 244 1 296 1 264 1 147 2 111 1 
191 1 121 1 218 1 292 2 166 2 134 1 19 1 18 1 199 1 244 1 296 1 264 1 147 1 111 1 
191 1 121 1 218 1 292 2 166 2 134 1 19 1 18 1 199 1 244 1 296 1 264 1 147 1 111 1 
191 1 121 1 218 1 292 2 166 2 134 1 19 1 18 1 199 1 244 1 296 1 264 1 147 1 111 1 
24 1 191 1 290 1 62 1 218 1 193 1 292 2 197 1 32 2 199 1 35 2 205 1 331 1 158 1 140 1 67 1 14 1 123 2 166 2 316 2 282 2 260 2 323 2 78 1 244 1 82 1 264 1 169 1 171 1 267 1 111 1 
159 1 62 1 133 1 73 2 17 1 32 2 187 1 35 2 323 2 263 1 81 1 65 1 116 1 170 1 118 1 184 1 66 1 267 1 207 1 
159 1 62 1 133 1 73 2 17 1 32 1 35 1 323 1 202 1 81 1 65 1 116 1 118 1 184 1 66 1 267 1 207 1 
14 1 62 1 48 1 178 1 17 1 6 1 32 1 187 1 318 1 35 1 323 1 330 1 267 1 158 1 
159 1 62 1 133 1 73 2 17 1 32 1 187 1 35 1 323 1 263 1 81 1 65 1 116 1 118 1 184 1 66 1 267 1 207 1 
308 1 
250 1 275 1 298 1 224 1 309 1 167 1 11 1 
47 1 174 1 130 1 250 1 249 1 225 1 309 1 275 1 329 1 333 1 253 1 11 1 122 1 124 1 322 1 145 1 247 1 
174 2 130 2 249 1 250 2 62 2 271 1 152 1 177 1 48 1 225 2 90 1 309 3 179 1 136 1 32 1 35 1 228 2 181 1 204 1 276 1 333 2 158 4 119 1 253 2 231 1 13 2 70 1 14 1 122 2 337 1 124 2 304 1 240 1 321 1 323 1 265 2 267 1 247 2 
174 1 175 2 150 2 288 1 250 11 152 4 309 7 49 1 327 4 294 1 333 1 253 5 13 8 312 1 255 1 122 1 337 4 164 1 315 1 210 4 304 4 265 8 247 1 190 1 248 2 
174 1 150 2 130 1 250 2 131 1 28 1 225 1 309 2 327 1 37 1 9 1 333 1 299 1 301 1 122 1 123 1 257 1 39 1 316 1 303 1 282 1 341 1 241 1 304 2 127 1 247 1 325 1 129 1 
174 1 122 1 250 1 224 1 309 1 275 1 298 1 333 1 247 1 11 1 
13 1 304 1 337 1 152 1 265 1 309 2 253 1 
130 1 275 1 249 1 225 1 124 1 11 1 
174 2 269 1 130 3 250 2 249 2 62 3 27 1 177 1 48 2 225 3 309 2 6 1 32 4 33 1 35 4 297 1 330 1 8 1 158 2 333 2 119 2 209 1 161 1 254 1 14 2 313 1 122 1 124 4 323 4 284 1 188 2 44 2 267 2 247 2 
24 1 191 1 270 1 62 1 28 2 218 1 177 1 292 2 48 1 195 1 32 1 35 1 9 1 158 1 14 1 123 3 39 2 166 1 316 2 186 1 282 3 238 1 168 1 323 1 244 1 169 1 264 1 127 2 20 1 171 1 267 1 111 1 
174 1 122 1 250 1 309 1 275 1 188 1 265 1 333 1 119 1 253 1 247 1 11 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
256 1 194 1 
192 1 237 1 
191 2 88 1 218 2 131 1 257 1 292 4 166 8 50 1 303 1 31 1 327 1 143 3 199 4 304 1 244 2 264 2 183 1 332 1 266 2 111 4 
88 1 131 1 257 1 166 6 50 1 303 1 167 1 327 1 143 2 199 3 304 1 332 1 266 2 111 3 
191 1 337 1 218 1 152 1 292 2 166 4 31 1 327 1 210 1 143 2 199 2 304 1 244 1 264 1 21 1 266 1 111 2 
175 1 312 1 337 1 152 1 166 7 31 1 327 1 210 1 143 2 199 3 294 1 304 1 266 1 111 4 248 2 
216 1 175 2 191 2 88 1 131 2 218 2 152 2 292 4 49 1 50 1 31 4 327 3 199 11 294 1 183 2 332 1 278 1 337 2 257 2 166 23 303 1 210 2 143 9 304 3 244 2 264 2 266 5 111 12 248 2 
166 1 111 1 248 1 
199 1 175 1 166 1 
191 1 337 1 218 1 152 1 292 2 166 6 179 1 31 1 327 1 210 1 143 3 199 3 304 1 244 1 264 1 21 1 266 2 111 3 
175 1 191 1 288 1 218 1 152 2 292 2 31 1 327 2 199 6 312 1 255 1 337 2 164 1 166 12 315 1 19 1 210 2 143 2 304 2 244 1 264 1 266 1 111 6 248 1 190 1 
131 1 257 1 166 6 303 1 31 1 327 1 143 2 199 3 304 1 266 1 111 3 
216 1 191 1 88 1 257 1 131 1 218 1 292 2 166 3 31 1 143 2 199 1 244 1 183 1 264 1 332 1 266 1 111 2 
131 2 257 2 166 12 31 3 303 1 327 2 143 6 341 1 199 6 304 2 266 3 111 6 
191 1 337 1 218 1 292 2 166 2 31 1 19 1 143 1 199 2 304 1 244 1 264 1 
191 1 337 1 218 1 152 1 292 2 166 4 31 1 327 1 19 1 210 1 143 2 199 2 304 1 244 1 264 1 266 1 111 2 
216 1 191 3 218 3 131 1 257 1 292 6 166 3 31 1 19 1 143 2 199 1 244 3 183 1 264 3 266 1 189 1 111 2 
216 1 175 3 191 5 88 1 131 3 218 5 152 3 292 10 50 1 31 5 327 5 199 16 294 1 183 2 332 1 312 1 337 3 257 3 166 34 303 2 19 1 210 3 143 12 304 5 144 1 243 1 244 5 264 5 21 1 146 1 266 7 111 18 189 1 248 4 
175 1 191 1 88 1 218 1 131 1 292 2 50 1 327 1 199 4 332 1 312 1 255 1 257 1 166 8 303 1 19 1 143 2 304 1 244 1 264 1 266 2 111 4 248 1 
175 1 191 2 88 1 131 1 218 2 152 1 292 4 50 1 31 1 327 1 199 6 294 1 332 1 312 1 255 1 337 1 257 1 166 11 303 1 19 1 143 3 304 2 244 2 264 2 21 1 266 2 111 5 248 2 
175 1 191 3 288 1 88 1 131 1 218 3 152 2 292 6 50 1 31 1 327 3 199 9 183 1 332 1 312 1 255 1 337 2 257 1 164 1 166 19 315 1 303 1 19 1 210 2 143 4 304 3 244 3 264 3 21 1 266 3 111 10 190 1 248 1 
175 1 191 3 288 1 88 1 131 1 218 3 152 2 292 6 50 1 31 2 327 2 199 10 183 1 332 1 312 1 255 1 337 2 257 1 164 1 166 17 315 1 303 1 19 1 210 1 143 5 304 3 244 3 264 3 21 1 266 3 111 7 248 1 190 1 
175 1 191 1 88 1 218 1 131 1 292 2 50 1 327 1 199 4 332 1 312 1 255 1 257 1 166 8 303 1 19 1 143 2 304 1 244 1 264 1 266 2 111 4 248 1 
175 1 191 1 288 1 218 1 152 2 292 2 31 1 327 2 199 6 312 1 255 1 337 2 164 1 166 12 315 1 19 1 210 2 143 2 304 2 244 1 264 1 266 1 111 6 248 1 190 1 
175 1 191 4 288 1 88 1 131 1 218 4 152 2 292 8 50 1 31 2 327 2 199 10 183 2 332 1 312 1 255 1 337 2 257 1 164 1 166 18 315 1 303 1 19 1 210 1 143 5 304 3 244 4 264 4 21 1 266 3 111 8 190 1 248 1 
175 1 191 4 288 1 218 4 152 3 292 8 31 3 327 2 199 9 183 2 312 1 255 1 337 3 164 1 166 16 315 1 19 1 210 2 143 6 304 3 244 4 264 4 266 3 111 7 189 1 190 1 248 1 
88 2 131 3 257 3 166 7 31 3 303 1 327 1 143 6 199 3 304 1 332 1 266 3 111 4 
175 1 191 4 288 1 88 1 131 1 218 4 152 2 292 8 50 1 31 1 327 2 199 10 183 2 332 1 312 1 255 1 337 2 257 1 164 1 166 18 315 1 303 1 19 1 210 1 143 4 304 3 244 4 264 4 266 3 111 8 189 1 190 1 248 1 
7 1 52 1 123 1 20 1 316 1 236 1 282 1 
52 1 338 1 5 1 307 1 84 1 148 1 
14 1 323 1 35 1 62 1 330 1 48 1 267 1 158 1 6 1 167 1 32 1 
14 1 62 1 270 1 39 1 28 1 123 2 177 1 48 1 186 1 316 1 282 2 32 1 35 1 323 1 80 1 20 1 158 1 267 1 
14 2 62 1 270 1 39 1 28 2 123 2 177 2 186 1 316 2 282 2 32 1 96 1 35 1 323 1 108 1 80 1 44 1 37 1 20 1 343 1 158 3 267 1 120 1 
62 1 4 1 221 1 28 2 177 2 32 2 35 2 96 1 37 1 158 3 120 1 14 2 123 2 39 1 316 2 186 1 282 2 323 2 108 1 80 1 44 1 20 1 267 1 343 1 
14 1 15 1 130 2 217 1 62 1 4 1 177 1 48 1 90 1 225 2 124 1 32 3 240 1 96 1 35 3 323 3 108 1 228 1 275 1 44 1 158 4 267 1 11 1 
14 1 130 2 62 1 4 1 177 1 48 1 90 1 225 2 124 1 32 3 240 1 96 1 35 3 323 3 108 1 228 1 275 1 44 1 276 1 158 4 267 1 11 1 
323 1 35 1 62 1 233 1 267 1 32 1 
269 1 14 1 62 2 177 1 48 1 136 1 32 1 180 1 35 1 323 1 8 1 158 1 267 1 
24 1 289 1 191 1 88 1 131 1 218 1 28 1 292 2 31 1 327 2 32 1 199 4 35 1 37 1 205 1 332 1 257 1 123 1 39 1 166 8 316 1 303 1 282 1 143 3 341 1 304 2 320 1 78 1 323 1 80 1 244 1 264 1 170 1 20 1 171 1 266 2 111 4 
174 2 130 3 250 1 249 1 271 1 224 1 48 1 225 3 90 1 309 1 32 1 35 1 181 1 228 1 275 1 298 1 276 1 333 2 158 2 97 1 11 1 122 2 124 2 240 1 323 1 321 1 284 1 247 2 
240 1 14 1 323 2 35 2 62 2 177 1 170 1 233 1 267 1 158 2 136 1 32 2 231 1 
14 1 323 4 35 4 62 1 4 1 330 1 170 1 48 1 267 1 158 1 6 1 32 4 46 1 
209 1 269 1 14 1 313 1 62 2 177 1 32 1 35 1 323 1 8 1 158 1 267 1 85 1 
323 1 35 1 62 1 133 1 48 1 73 1 118 1 66 1 267 1 32 1 
14 1 62 1 32 2 35 2 323 2 65 1 170 1 140 1 158 1 267 1 67 1 
14 2 62 2 132 1 48 1 6 1 32 5 125 1 35 4 323 5 44 1 330 1 170 1 140 1 158 3 267 2 46 1 
14 2 62 2 48 1 6 1 32 5 125 1 35 4 323 5 44 1 330 1 170 1 140 1 158 3 267 2 172 1 46 1 
14 1 62 1 39 1 28 1 123 2 221 1 177 1 48 1 186 1 316 1 282 2 32 1 35 1 323 1 80 1 20 1 158 1 267 1 
269 1 14 1 62 2 177 1 136 1 32 1 180 1 35 1 323 1 44 1 8 1 158 1 267 1 
42 1 185 1 20 1 75 1 227 1 
69 1 149 1 130 2 185 2 90 1 225 2 75 2 91 1 227 2 42 1 275 1 37 1 20 1 343 1 97 1 335 1 11 1 120 1 286 1 
42 1 123 1 193 1 82 1 331 1 185 1 316 1 282 1 75 1 
69 1 42 1 286 1 
336 1 306 1 258 1 167 1 
336 1 273 1 106 1 26 1 151 1 306 1 258 1 
160 1 106 1 235 1 
336 1 151 1 26 3 223 1 16 1 258 1 273 1 126 1 106 3 306 1 230 1 23 2 
336 1 273 1 59 1 106 2 26 2 151 1 306 1 258 1 103 1 
336 1 273 1 106 1 26 1 151 1 274 1 73 1 66 1 230 1 207 1 319 1 
336 1 273 1 106 1 26 1 151 1 258 1 230 1 
273 1 106 1 26 1 151 1 306 1 258 2 230 1 
336 1 163 1 151 2 26 2 258 1 281 1 273 2 95 1 106 2 230 1 
336 2 273 1 113 1 155 1 106 3 26 3 151 1 306 1 258 1 103 2 230 1 334 1 319 1 
336 1 151 1 26 2 258 1 73 2 103 1 273 1 106 2 81 1 306 1 138 1 118 1 230 1 66 1 207 1 
336 2 273 2 113 1 59 1 106 4 26 4 151 2 306 1 258 1 103 2 153 1 230 1 319 1 
336 1 273 1 106 1 26 1 151 1 306 1 258 1 230 1 
336 3 113 1 26 4 151 1 55 1 223 1 258 2 103 2 319 1 273 1 126 1 106 4 306 2 23 1 
287 1 0 1 151 1 26 1 55 1 100 1 258 1 273 1 106 1 306 1 230 1 
336 1 151 1 26 3 223 1 101 1 258 1 273 1 126 2 106 3 306 1 230 1 23 2 
336 2 242 1 229 2 285 1 
273 1 106 1 26 1 151 1 230 1 34 1 
336 1 273 1 155 1 106 2 26 2 151 1 306 1 258 1 103 1 230 1 
72 1 
336 1 273 1 106 1 26 1 151 1 306 1 258 1 230 1 
336 1 273 1 155 1 106 3 26 3 151 1 306 1 258 1 103 1 230 1 23 1 
336 1 113 1 55 1 319 1 
336 1 258 1 

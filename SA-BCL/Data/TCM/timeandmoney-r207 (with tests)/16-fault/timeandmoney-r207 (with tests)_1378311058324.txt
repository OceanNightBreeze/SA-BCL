#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) (296,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (296,310) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) (296,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (1,27,247,251) (1,27,247,251) (1,27,247,251) 52 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 235 221 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 235 221 253 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 235 221 253 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 235 221 253 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 75 23 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 293 261 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 208 (45,191) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (45,191) 187 328 (104,230) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
157 1 264 1 78 1 
9 2 78 1 29 1 
72 1 33 2 136 2 185 2 11 1 305 2 306 2 165 2 
197 1 80 1 45 1 289 2 165 3 50 1 82 2 168 1 170 1 123 1 51 1 257 1 176 1 11 1 179 1 16 1 305 2 306 2 207 1 263 1 267 1 136 2 137 2 183 1 185 3 225 1 315 1 103 1 106 1 72 1 33 2 109 1 111 1 194 1 38 2 76 2 79 1 
71 1 33 1 136 1 185 1 11 1 303 1 305 1 306 1 277 1 165 1 
136 1 242 1 185 1 99 1 270 1 165 1 318 1 70 1 151 1 302 1 303 1 264 1 209 1 78 1 
136 1 242 2 185 1 99 1 165 1 318 2 70 1 33 1 302 1 303 1 306 1 305 1 264 1 209 1 78 1 
242 1 272 1 318 1 195 1 107 1 
242 2 321 1 272 1 318 2 264 1 78 1 77 1 107 1 
242 1 272 1 318 1 
71 1 33 1 136 1 242 1 185 1 11 1 96 1 303 1 305 1 306 1 277 1 165 1 318 1 107 1 
78 1 
242 2 321 1 178 1 272 1 318 2 264 1 78 1 107 1 
242 5 226 1 102 1 272 2 318 5 292 2 3 1 169 1 190 1 107 2 321 1 192 1 324 2 156 1 128 1 264 1 78 1 131 2 265 1 
72 1 157 1 
213 1 136 2 185 2 165 2 72 2 124 1 33 1 306 1 305 1 
199 1 112 1 144 1 
197 1 137 1 185 1 45 1 315 1 165 1 103 1 82 1 170 1 123 1 72 1 179 1 73 1 16 1 76 1 263 1 
197 1 136 1 137 1 185 2 45 1 315 1 165 2 103 1 120 1 82 1 170 1 171 1 123 1 33 1 112 1 179 1 16 1 305 1 76 1 263 1 
72 1 33 3 136 3 185 3 306 1 305 3 165 3 120 1 
71 1 33 1 136 1 185 1 303 1 305 1 165 1 
213 1 124 1 33 1 136 1 185 1 303 1 305 1 306 1 165 1 
197 1 242 1 80 1 45 1 47 1 289 1 165 4 120 1 50 1 82 1 170 1 171 1 123 1 51 1 11 1 179 1 302 1 303 1 16 1 306 2 305 3 207 1 263 1 209 1 213 1 92 1 136 3 137 1 185 4 99 1 225 1 315 1 103 1 318 1 106 1 70 1 72 1 33 3 109 1 111 1 194 1 38 2 76 1 79 1 
297 1 72 1 151 1 33 1 136 2 185 2 305 1 165 2 120 1 
213 1 242 1 136 3 185 3 99 1 47 1 165 3 120 2 318 1 171 1 70 1 33 3 259 1 303 1 302 1 306 1 305 3 209 1 78 1 
213 1 33 2 136 2 199 1 185 2 112 1 305 2 306 1 165 2 120 1 
197 1 137 1 185 1 45 1 315 1 165 1 103 1 82 1 170 1 123 1 72 1 179 1 16 1 76 1 263 1 
133 1 197 1 137 1 185 1 165 1 103 1 82 1 170 1 123 1 72 1 175 1 179 1 16 1 76 1 263 1 
196 1 199 2 80 1 289 4 50 1 201 1 294 1 176 2 14 1 207 1 129 1 56 1 212 1 134 1 218 1 225 1 144 2 111 1 112 2 194 1 38 2 79 2 
33 1 136 1 185 1 303 1 302 1 15 1 305 1 165 1 
266 1 213 1 136 5 185 5 165 5 120 2 67 1 171 1 297 1 72 1 151 1 33 4 305 4 306 1 
71 1 33 2 136 2 185 2 15 1 303 1 305 2 165 2 
301 1 35 1 
301 1 35 1 
154 1 211 1 
154 1 211 1 
154 1 211 1 
172 1 301 1 35 1 
301 1 143 1 35 1 
301 2 154 1 224 1 35 2 249 1 211 1 
172 1 301 1 35 1 
172 1 301 1 35 1 
10 1 301 1 35 1 
10 1 301 1 35 1 
10 1 301 1 35 1 
217 1 135 2 242 2 95 1 244 2 312 2 224 1 318 2 85 1 31 1 236 1 275 2 301 2 237 1 35 2 37 3 20 1 329 2 78 1 
214 1 135 1 136 2 242 1 185 2 312 1 223 1 143 1 165 2 229 1 167 1 318 1 72 1 31 1 33 2 174 1 260 1 275 1 301 1 35 1 305 2 37 1 21 1 329 1 
41 1 65 1 40 1 
41 1 58 1 40 1 
41 3 58 1 24 1 65 2 283 1 116 1 
41 2 58 1 24 1 125 1 65 1 283 1 
41 2 58 1 24 1 65 1 283 2 
196 1 242 5 290 1 167 1 292 1 169 2 9 3 260 1 300 2 14 1 128 1 129 1 264 1 131 1 218 1 93 1 138 1 186 2 272 1 229 1 318 5 28 2 105 1 29 1 107 4 273 1 321 1 324 1 156 3 279 1 158 1 78 2 
196 3 242 9 288 1 246 5 163 1 290 1 292 2 169 6 9 9 300 6 14 3 262 1 128 1 129 3 264 1 131 2 309 1 218 3 138 2 226 1 145 1 186 6 188 1 229 4 272 6 318 9 105 2 29 3 107 7 273 3 321 1 324 2 156 8 195 5 78 5 
196 1 242 3 292 1 169 2 9 4 300 2 14 1 264 1 129 1 131 1 218 1 138 1 226 1 186 2 229 1 318 3 28 1 105 1 29 2 107 2 273 1 324 1 156 3 279 1 158 1 78 3 
196 2 242 4 288 1 292 1 169 4 9 7 300 4 14 2 262 1 264 1 129 2 131 1 218 2 138 1 226 1 186 4 188 1 229 2 318 4 28 2 105 1 29 3 107 3 273 2 324 1 156 5 279 1 158 1 78 4 
197 1 161 1 157 1 
197 1 75 1 
114 1 
197 1 16 1 
123 1 197 3 161 2 16 1 206 1 122 1 
123 1 197 1 16 1 
197 1 234 1 
196 1 218 1 162 1 141 1 142 1 289 7 293 1 30 1 110 4 176 3 274 3 13 1 36 1 276 1 39 1 57 2 79 4 
196 1 218 1 162 1 142 1 141 1 289 8 293 1 30 1 110 4 176 3 274 3 13 1 276 1 36 1 39 1 57 2 79 5 
196 1 285 1 218 1 162 1 141 1 142 1 289 7 293 1 30 1 110 4 176 3 274 3 13 1 276 1 36 1 39 1 57 2 79 4 
219 1 110 1 274 1 141 2 36 1 289 1 57 1 79 1 
196 1 218 1 142 1 80 1 141 1 225 1 119 1 289 8 50 1 293 1 30 1 110 3 176 3 274 3 34 1 276 1 36 1 38 2 194 1 39 1 57 2 79 5 
52 1 247 1 251 1 291 1 27 1 
310 1 247 1 251 1 291 1 27 1 
296 1 1 1 291 1 27 1 
310 1 247 1 251 1 291 1 27 1 
52 1 247 1 251 1 291 1 27 1 
177 1 
240 1 242 5 166 1 165 1 83 1 82 2 169 2 170 1 4 1 9 2 87 1 16 1 264 1 263 1 94 1 269 2 185 1 99 1 270 1 103 2 272 6 29 2 108 2 193 1 281 2 198 1 197 1 46 1 200 4 292 1 302 1 303 1 304 2 128 1 209 1 130 1 131 1 216 2 137 2 136 1 138 1 317 2 318 5 66 1 70 1 151 1 320 2 321 3 323 1 153 1 324 1 156 2 76 2 78 2 159 1 
242 3 46 1 200 2 165 1 4 1 178 1 302 1 303 1 209 1 136 1 94 1 185 1 99 1 270 1 317 1 272 2 66 1 318 3 70 1 151 1 321 1 153 1 
242 3 46 1 200 3 165 1 4 1 178 1 302 1 303 1 209 1 264 1 136 1 94 1 185 1 99 1 270 1 272 1 66 1 318 3 70 1 151 1 320 1 321 1 153 1 78 1 
242 3 46 1 200 3 165 1 4 1 178 1 302 1 303 1 304 1 209 1 264 1 136 1 94 1 185 1 99 1 270 1 317 1 272 2 66 1 318 3 70 1 151 1 320 1 321 1 153 1 78 1 
242 5 46 1 200 6 164 1 166 1 165 1 292 1 169 1 4 1 173 1 178 1 302 1 303 1 304 4 128 1 264 5 209 1 131 1 216 2 136 1 184 1 94 1 269 2 185 1 99 1 63 1 270 1 272 7 317 4 66 1 318 5 29 2 108 2 70 1 151 1 320 4 323 1 321 3 153 1 324 1 113 1 156 1 281 2 78 5 
242 4 165 1 166 1 169 1 4 1 9 2 87 1 264 1 94 1 185 1 269 2 99 1 270 1 272 4 29 2 108 2 281 2 200 4 46 1 292 1 303 1 302 1 304 2 128 1 209 1 131 1 216 2 136 1 317 2 318 4 66 1 70 1 151 1 320 2 323 1 321 2 153 1 324 1 156 1 78 2 
242 4 46 1 200 4 164 1 166 1 165 1 292 1 169 1 4 1 173 1 302 1 303 1 304 2 128 1 264 1 209 1 131 1 216 2 136 1 94 1 269 2 185 1 99 1 270 1 317 2 272 4 66 1 318 4 29 2 108 2 70 1 151 1 320 2 321 2 323 1 153 1 324 1 113 1 156 1 78 1 281 2 
242 4 46 1 200 4 164 1 166 1 165 1 292 1 169 1 4 1 173 1 302 1 303 1 304 2 128 1 264 1 209 1 131 1 216 2 136 1 94 1 269 2 185 1 99 1 270 1 317 2 272 4 66 1 318 4 29 2 108 2 70 1 151 1 320 2 321 2 323 1 153 1 324 1 113 1 156 1 78 1 281 2 
242 4 46 1 200 4 166 1 165 1 292 1 169 1 295 2 4 1 9 2 173 1 302 1 303 1 304 2 19 1 18 1 54 1 128 1 264 1 209 1 131 1 136 1 94 1 269 2 185 1 99 1 270 1 316 2 317 2 272 4 66 1 318 4 108 2 70 1 151 1 320 2 321 2 153 1 324 1 156 1 78 1 
242 4 46 1 200 5 164 1 166 1 165 1 292 1 169 1 4 1 173 1 302 1 303 1 304 3 128 1 264 1 209 1 131 1 216 2 136 1 94 1 184 1 269 2 185 1 99 1 270 1 317 3 272 5 66 1 318 4 29 2 108 2 70 1 151 1 320 3 321 2 323 1 153 1 324 1 113 1 156 1 78 1 281 2 
242 4 46 1 200 5 164 1 166 1 165 1 292 1 169 1 4 1 173 1 302 1 303 1 304 3 128 1 264 1 209 1 131 1 216 2 136 1 94 1 184 1 269 2 185 1 99 1 270 1 317 3 272 5 66 1 318 4 29 2 108 2 70 1 151 1 320 3 321 2 323 1 153 1 324 1 113 1 156 1 78 1 281 2 
242 4 46 1 200 4 166 1 165 1 292 1 169 1 295 2 4 1 9 2 87 1 302 1 303 1 304 2 19 1 128 1 264 1 209 1 131 1 136 1 94 1 269 2 185 1 99 1 270 1 316 2 317 2 272 4 66 1 318 4 108 2 70 1 151 1 320 2 321 2 153 1 324 1 156 1 78 1 
196 1 218 1 199 1 80 1 142 1 225 1 144 1 289 7 50 1 293 1 72 2 30 1 110 2 176 3 274 2 111 1 112 1 276 1 38 2 194 1 157 1 207 1 39 1 57 1 56 1 79 4 
196 1 42 1 162 1 199 4 245 3 80 2 289 14 50 2 8 1 176 8 203 3 14 1 126 1 207 1 129 2 308 1 218 2 183 1 60 1 222 1 225 2 144 11 106 1 72 1 273 2 110 1 111 2 112 11 194 2 38 4 239 1 79 6 
197 1 199 1 45 1 80 1 48 1 289 2 165 2 120 1 82 1 50 1 170 1 171 1 123 1 88 1 176 1 179 1 16 1 305 1 89 1 207 1 263 1 308 1 137 1 136 1 183 1 185 2 315 1 225 1 103 1 106 1 72 1 33 1 111 1 73 1 38 2 194 1 76 1 79 1 
80 2 165 2 82 1 170 1 171 1 7 1 176 3 179 1 14 1 16 1 263 1 185 2 103 1 271 1 104 1 106 1 273 1 33 1 110 1 111 2 274 1 112 3 194 2 38 4 197 1 196 1 199 3 45 1 289 7 120 1 50 2 51 1 123 1 305 1 207 2 129 1 308 1 218 1 137 1 136 1 225 2 315 1 144 3 319 1 325 1 76 1 79 4 
117 1 197 3 80 2 250 1 289 2 165 1 120 1 82 8 50 2 83 1 170 2 86 1 202 1 257 2 176 1 16 2 305 1 207 2 263 2 56 1 136 1 137 8 183 1 185 1 97 1 225 2 103 2 106 1 33 1 322 1 111 2 238 1 326 1 194 2 38 4 76 7 280 1 79 1 159 1 
196 1 199 1 118 1 80 1 289 3 165 1 50 1 176 1 14 1 306 1 305 1 207 1 129 1 308 1 213 1 218 1 136 1 185 1 225 1 144 1 273 1 33 1 111 1 112 1 194 1 38 2 79 2 
218 1 162 1 199 1 80 1 225 1 144 1 289 2 50 1 201 1 110 1 111 1 176 2 112 1 38 2 194 1 207 1 129 1 56 1 
196 1 199 1 80 1 225 1 144 1 289 2 50 1 111 1 112 1 14 1 38 2 194 1 207 1 56 1 212 1 79 2 
196 1 218 1 199 2 80 1 225 1 144 2 289 4 50 1 273 1 111 1 176 2 14 1 112 2 38 2 194 1 207 1 129 1 56 1 79 2 
218 1 162 1 199 1 97 1 80 1 225 1 144 1 289 2 50 1 201 1 110 1 111 1 176 2 112 1 38 2 194 1 207 1 129 1 
196 1 199 1 97 1 80 1 225 1 144 1 289 2 50 1 111 1 112 1 14 1 38 2 194 1 207 1 212 1 79 2 
196 1 218 1 162 1 199 2 97 1 80 1 225 1 144 2 289 4 50 1 273 1 110 1 111 1 176 2 14 1 112 2 38 2 194 1 207 1 129 1 79 2 
196 1 218 1 199 2 80 1 225 1 144 2 289 4 50 1 273 1 111 1 176 2 14 1 112 2 38 2 194 1 207 1 129 1 79 2 
197 1 45 1 80 1 289 2 165 1 82 1 50 1 170 1 123 1 51 1 176 1 179 1 16 1 207 1 263 1 137 1 183 1 185 1 315 1 225 1 103 1 106 1 72 1 111 1 38 2 194 1 76 1 79 1 
197 1 80 1 289 2 165 1 82 1 50 1 170 1 123 1 176 1 175 1 179 1 12 1 16 1 207 1 263 1 133 1 137 1 183 1 185 1 225 1 103 1 106 1 72 1 111 1 38 2 194 1 76 1 79 1 
196 1 218 1 199 2 80 1 225 1 144 2 289 4 50 1 273 1 111 1 176 2 14 1 112 2 38 2 194 1 207 1 129 1 308 1 79 2 
196 1 197 1 199 2 45 1 80 1 289 4 165 1 82 1 50 1 170 1 123 1 51 1 86 1 7 1 176 2 14 1 179 1 16 1 207 1 129 1 263 1 218 1 137 1 185 1 315 1 225 1 144 2 273 1 111 1 112 2 38 2 194 1 76 1 79 2 
196 1 162 1 199 1 80 1 289 3 165 1 50 1 176 2 14 1 17 1 306 1 305 1 207 1 129 1 308 1 213 1 218 1 136 1 185 1 225 1 144 1 273 1 33 1 110 1 111 1 112 1 194 1 38 2 79 1 
196 2 162 1 245 2 80 2 289 13 50 2 253 1 254 1 8 1 176 6 203 1 14 2 307 1 55 1 129 2 218 2 221 1 139 1 222 1 314 1 225 2 69 1 273 2 110 1 34 1 194 2 38 4 79 7 
221 2 139 2 245 1 80 1 225 1 289 6 50 1 253 1 69 1 8 1 235 1 176 3 203 1 34 1 38 2 194 1 55 2 79 3 
196 2 162 2 245 3 80 2 289 19 50 2 253 1 254 1 8 2 176 9 203 2 14 2 307 1 55 2 129 2 218 2 221 1 139 3 222 1 62 1 225 2 69 1 233 1 273 2 110 2 235 1 34 1 194 2 38 4 79 10 
196 2 162 2 245 3 80 2 289 19 50 2 253 1 254 1 8 2 176 9 203 2 14 2 307 1 55 2 129 2 218 2 221 1 139 3 222 1 62 1 225 2 69 1 233 1 273 2 110 2 235 1 34 1 194 2 38 4 79 10 
196 2 245 2 80 1 289 18 50 1 293 1 253 1 8 1 176 8 203 1 14 1 55 1 129 1 57 1 218 2 221 1 139 2 222 1 142 1 225 1 69 1 273 1 30 1 110 2 235 1 274 2 34 1 276 1 194 1 38 2 39 1 79 10 
135 1 236 1 312 1 140 1 301 1 275 1 224 1 35 1 329 1 85 1 
174 1 143 1 
284 1 135 1 312 1 313 1 301 1 275 1 35 1 64 1 329 1 
217 1 135 1 242 1 244 1 312 1 224 1 318 1 85 1 31 1 236 1 275 1 301 1 237 1 35 1 37 2 20 1 329 1 78 1 
217 1 135 1 242 1 244 1 312 1 224 1 318 1 85 1 31 1 236 1 275 1 301 1 237 1 35 1 37 2 20 1 329 1 78 1 
217 1 135 1 242 1 244 1 312 1 224 1 318 1 85 1 31 1 236 1 275 1 301 1 237 1 35 1 37 2 20 1 329 1 78 1 
172 1 44 1 249 1 
172 1 44 1 249 1 
255 1 10 1 
255 1 10 1 249 1 
214 1 21 1 
242 1 244 1 165 2 121 1 167 1 174 1 260 1 301 1 305 2 20 1 21 1 214 1 135 1 136 2 185 2 312 1 223 1 143 1 229 1 318 1 107 1 72 1 33 2 275 1 35 1 37 1 329 1 
172 1 44 1 
255 1 10 1 249 1 
197 1 43 1 80 1 289 2 165 2 82 2 50 1 170 1 6 1 202 1 298 1 257 2 176 1 16 1 207 1 263 1 308 1 137 2 136 2 183 1 185 2 225 1 106 1 68 1 231 1 111 1 38 2 194 1 76 2 280 1 79 1 
41 2 215 1 58 1 241 1 137 2 65 1 82 2 170 1 86 1 258 1 32 1 322 1 204 1 76 2 115 1 40 1 263 1 180 1 116 1 
41 2 215 1 58 1 241 1 137 1 65 1 82 1 170 1 232 1 258 1 32 1 322 1 76 1 115 1 40 1 263 1 116 1 
197 1 137 1 100 1 103 1 82 1 83 1 170 1 258 1 16 1 155 1 76 1 263 1 180 1 159 1 
41 2 215 1 58 1 241 1 137 1 65 1 82 1 170 1 258 1 32 1 322 1 204 1 76 1 115 1 40 1 263 1 180 1 116 1 
127 1 
156 1 157 1 264 1 3 1 78 1 169 1 190 1 
242 1 292 1 169 1 9 1 128 1 264 1 131 1 216 1 272 1 318 1 29 1 323 1 321 1 324 1 156 1 78 2 281 1 
197 1 23 1 137 1 103 1 292 1 82 1 170 1 122 1 123 1 324 1 16 1 75 1 278 1 128 1 76 1 263 1 131 1 
245 2 165 1 169 3 8 1 9 7 11 1 14 1 264 1 182 1 96 1 185 1 186 4 29 4 273 1 33 1 193 1 277 1 196 1 292 1 300 4 203 1 303 1 306 1 305 1 128 1 129 1 131 1 218 1 136 1 138 1 311 1 222 1 146 1 71 1 150 1 324 1 156 5 78 4 
242 1 318 1 292 1 169 1 293 1 150 1 324 1 113 1 261 1 156 1 128 1 39 1 131 1 
292 1 3 1 169 1 190 1 324 1 156 1 128 1 264 1 78 1 131 1 
196 1 218 1 186 2 169 2 29 2 273 1 9 4 300 2 14 1 156 2 129 1 78 2 
242 1 321 1 272 1 318 1 264 1 78 1 
197 1 198 1 242 3 243 2 248 1 292 2 82 4 83 1 170 1 169 2 16 1 128 1 263 1 130 1 131 2 137 4 138 2 226 1 103 2 147 1 272 4 318 3 321 2 324 2 193 2 156 2 74 1 76 4 159 1 
197 1 80 1 45 1 289 1 165 3 50 1 82 1 170 1 51 1 123 1 11 1 179 1 16 1 305 2 306 2 207 1 263 1 137 1 136 2 185 3 315 1 225 1 103 1 106 1 72 1 33 2 109 1 111 1 194 1 38 2 76 1 79 1 
292 1 169 1 9 4 300 2 128 1 264 1 57 1 131 1 138 1 186 2 29 2 150 1 324 1 193 1 156 2 78 3 
98 1 312 1 329 1 
214 1 181 1 236 1 312 1 329 1 
98 1 312 1 329 1 
98 1 312 1 329 1 
312 1 329 1 282 1 
312 1 329 1 282 1 
312 1 329 1 282 1 
312 1 329 1 
301 1 35 1 
162 1 80 2 142 1 225 2 50 2 293 1 110 2 274 1 299 1 276 1 38 4 194 2 39 1 
196 1 218 1 142 1 289 7 293 1 30 1 110 2 274 2 176 3 276 1 157 1 39 1 57 1 79 4 
196 1 218 1 162 1 80 1 225 1 289 4 2 1 50 1 273 1 110 1 176 2 14 1 38 2 194 1 129 1 79 2 
196 1 218 1 162 1 245 2 222 1 289 7 8 1 273 1 110 1 176 3 14 1 203 1 129 1 79 4 
196 5 162 4 245 2 80 1 289 28 50 1 293 2 176 14 299 1 14 2 203 2 126 1 261 1 129 2 57 1 218 5 60 1 222 1 142 1 225 1 273 2 30 2 110 8 274 4 276 1 38 2 194 1 39 2 79 14 
245 1 289 1 79 1 
176 1 203 1 289 1 
196 1 218 1 162 1 289 6 271 1 273 1 110 2 176 3 274 1 14 1 129 1 79 3 
196 2 162 1 245 1 80 2 289 13 50 2 256 1 8 1 176 6 299 1 203 1 14 2 129 2 218 2 59 1 25 1 311 1 225 2 148 1 273 2 110 2 274 1 34 1 194 2 38 4 79 7 
196 1 218 1 30 1 110 2 162 1 274 1 176 3 289 6 39 1 293 1 79 3 
162 1 80 1 142 1 101 1 225 1 289 1 50 1 293 1 110 2 274 1 299 1 276 1 38 2 194 1 39 1 79 1 
196 2 218 2 162 2 80 1 225 1 289 10 50 1 293 1 30 1 110 4 274 2 176 5 34 1 261 1 194 1 38 2 39 1 79 5 
218 1 162 1 80 1 225 1 289 2 50 1 110 1 176 2 34 1 38 2 194 1 129 1 
196 1 218 1 80 1 225 1 289 4 50 1 273 1 176 2 14 1 34 1 38 2 194 1 129 1 79 2 
80 1 225 1 289 2 50 1 293 1 110 1 274 1 176 1 34 1 38 2 194 1 39 1 79 1 
196 3 287 1 162 4 245 3 80 4 289 24 2 1 50 4 84 1 293 2 8 1 299 1 176 13 203 3 14 1 261 1 307 1 129 2 210 1 218 4 142 1 225 4 273 2 30 1 110 7 274 3 34 1 276 1 194 4 38 8 39 2 79 11 
196 1 218 1 311 1 245 1 142 1 80 1 225 1 289 9 50 1 293 1 8 1 30 1 110 2 274 2 176 4 203 1 34 1 276 1 38 2 194 1 39 1 57 1 79 5 
196 1 162 1 245 2 80 2 289 12 2 1 50 2 293 1 8 1 176 6 203 1 129 1 57 1 218 2 311 1 222 1 142 1 225 2 273 1 30 1 110 3 274 2 34 1 276 1 194 2 38 4 39 1 79 6 
196 3 162 1 245 1 80 3 289 20 2 1 50 3 293 1 256 1 8 1 176 9 299 1 203 1 14 2 129 2 57 1 218 3 59 1 25 1 311 1 142 1 225 3 148 1 273 2 30 1 110 4 274 3 34 1 276 1 194 3 38 6 39 1 79 11 
196 1 162 1 245 1 80 4 289 12 2 1 50 4 256 1 8 1 176 7 299 2 203 1 14 1 129 2 218 2 59 1 25 1 311 1 225 4 148 1 273 2 110 2 274 1 34 1 194 4 38 8 79 5 
196 1 218 1 311 1 245 1 142 1 80 1 225 1 289 9 50 1 293 1 8 1 30 1 110 2 274 2 176 4 203 1 34 1 276 1 38 2 194 1 39 1 57 1 79 5 
196 2 162 1 245 1 80 2 289 13 50 2 256 1 8 1 176 6 299 1 203 1 14 2 129 2 218 2 59 1 25 1 311 1 225 2 148 1 273 2 110 2 274 1 34 1 194 2 38 4 79 7 
196 2 162 2 245 1 80 4 289 19 2 1 50 4 293 1 256 1 8 1 176 10 299 2 203 1 14 1 129 2 57 1 218 3 59 1 25 1 311 1 142 1 225 4 148 1 273 2 30 1 110 5 274 3 34 1 276 1 194 4 38 8 39 1 79 9 
196 2 162 3 245 1 80 4 289 16 50 4 256 1 8 1 176 9 299 2 203 1 14 2 307 1 129 3 218 3 59 1 25 1 311 1 225 4 148 1 273 3 110 4 274 1 34 1 194 4 38 8 79 7 
162 2 142 1 289 4 293 2 110 4 274 2 176 2 276 2 39 2 79 2 
196 2 162 1 245 1 80 4 289 19 50 4 293 1 256 1 8 1 176 10 299 2 203 1 14 1 307 1 129 2 57 1 218 3 59 1 25 1 311 1 142 1 225 4 148 1 273 2 30 1 110 4 274 3 34 1 276 1 194 4 38 8 39 1 79 9 
297 1 72 1 151 1 136 1 185 1 327 1 165 1 
132 1 136 1 220 1 61 1 185 1 26 1 165 1 81 1 297 1 72 1 151 1 327 1 
197 1 137 1 16 1 157 1 103 1 83 1 82 1 76 1 263 1 170 1 159 1 
197 1 136 1 137 1 185 2 45 1 165 2 103 1 120 1 82 1 170 1 123 1 72 1 33 1 179 1 16 1 305 1 76 1 263 1 
197 3 136 2 137 1 243 1 185 2 45 1 165 2 120 1 82 1 170 1 70 1 123 2 72 1 33 1 234 1 179 1 303 1 302 1 16 2 305 2 76 1 208 1 263 1 
197 3 243 1 165 2 120 1 82 2 170 1 123 2 175 1 179 1 302 1 303 1 16 2 305 2 263 1 208 1 137 2 136 2 185 2 228 1 70 1 72 1 33 1 234 1 76 2 
197 1 136 1 242 1 137 1 243 1 268 1 185 1 96 1 165 1 318 1 82 1 71 1 33 1 11 1 303 1 305 1 306 1 277 1 75 1 76 1 264 1 78 1 
197 4 161 1 242 1 137 1 243 1 318 1 82 1 170 1 123 1 234 1 191 1 16 1 75 1 76 1 208 1 263 1 
137 1 238 1 82 1 76 1 263 1 170 1 
117 1 197 3 160 1 137 7 250 1 103 2 227 1 82 7 122 1 170 2 86 1 123 1 257 1 202 1 322 1 238 1 326 1 16 2 53 1 76 6 263 3 
196 1 197 1 199 1 80 2 45 1 289 7 165 2 120 1 50 2 82 1 293 1 170 1 123 1 86 1 51 1 298 1 7 1 176 3 179 1 16 1 305 1 207 2 263 1 57 1 308 1 218 1 136 1 137 1 185 2 142 1 225 2 315 1 144 1 104 1 72 2 30 1 33 1 110 2 274 2 111 2 112 1 276 1 38 4 194 2 76 1 39 1 79 4 
197 2 161 1 242 1 137 1 187 1 103 1 82 1 318 1 292 1 230 1 107 1 191 1 324 1 328 1 75 1 74 1 128 1 76 1 131 1 
197 1 161 1 137 1 82 1 122 1 170 1 123 1 238 1 16 1 114 1 278 1 76 1 263 1 
197 1 137 4 103 1 228 1 252 1 82 4 83 1 170 1 86 1 16 1 76 4 263 1 159 1 
197 1 160 1 137 2 0 1 243 1 82 2 170 1 5 1 123 1 16 1 53 1 90 1 76 2 263 2 
41 1 215 1 58 1 137 1 103 1 82 1 76 1 40 1 263 1 170 1 
86 1 197 1 202 1 137 2 322 1 16 1 82 2 76 2 263 1 170 1 68 1 
197 3 117 1 137 5 243 1 103 1 252 1 83 1 82 5 170 2 86 1 202 1 326 1 16 2 76 4 263 2 159 1 
197 3 117 1 137 5 286 1 243 1 103 1 252 1 83 1 82 5 170 2 86 1 202 1 16 2 76 4 263 2 159 1 
197 1 136 1 137 1 185 2 165 2 103 1 120 1 82 1 170 1 123 1 72 1 33 1 175 1 179 1 16 1 305 1 76 1 263 1 
197 1 160 1 137 1 243 1 227 1 82 1 122 1 170 1 123 1 16 1 53 1 76 1 263 2 
149 1 72 1 49 1 91 1 22 1 
242 2 99 1 47 1 49 2 318 2 189 1 107 1 70 1 149 1 72 1 152 1 303 1 302 1 205 1 264 1 91 2 209 1 78 1 22 2 
6 1 149 1 136 1 43 1 185 1 165 1 91 1 231 1 22 1 
149 1 152 1 205 1 

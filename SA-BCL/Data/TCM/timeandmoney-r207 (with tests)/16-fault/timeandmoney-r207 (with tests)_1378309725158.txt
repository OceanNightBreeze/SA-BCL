#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (97,107) 307 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (16,48) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (14,128,256) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (16,48) (16,48) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (84,94) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (84,94) 50 185 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (84,94) 50 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (16,48) (16,48) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (16,48) (16,48) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (16,48) (16,48) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (14,128,256) (14,128,256) 1 278 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 238 164 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (97,107) (97,107) (208,210) 81 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 220 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (97,107) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (97,107) (97,107) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 288 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (97,107) 307 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 243 (242,251) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 243 (242,251) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 243 (59,96) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (16,48) (16,48) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 243 (59,96) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 1 122 9 85 2 190 9 45 1 233 1 88 1 162 2 131 2 56 3 18 2 245 1 246 1 247 1 22 1 249 2 301 5 174 2 258 1 259 4 72 1 77 1 30 1 215 1 308 1 116 1 34 2 313 6 
223 1 122 9 85 2 190 9 45 1 233 1 88 1 162 2 131 2 56 3 245 1 18 2 246 1 247 1 22 1 249 2 301 5 174 2 258 1 259 4 72 1 77 1 30 1 215 1 308 1 116 1 34 2 313 6 
223 1 122 10 85 2 190 10 45 1 233 1 88 1 162 2 131 2 56 4 245 1 18 2 246 1 247 1 22 1 249 2 301 6 174 2 258 1 259 5 72 1 77 1 30 1 215 1 308 1 116 1 34 2 313 7 
223 1 122 7 85 2 190 7 45 1 233 1 88 1 162 2 131 2 56 2 245 1 18 1 247 1 22 1 249 2 301 4 174 2 258 1 259 3 72 1 77 1 30 1 215 1 308 1 116 1 34 2 313 4 
246 1 247 1 122 4 22 1 301 3 249 1 174 1 190 4 45 1 162 1 259 2 77 1 30 1 131 1 56 1 34 1 18 2 313 3 
247 1 122 2 85 1 301 1 174 1 190 2 233 1 162 1 77 1 110 1 263 1 30 1 131 1 308 1 34 1 295 1 
247 1 122 3 85 1 301 2 174 2 190 3 259 1 77 1 30 1 215 1 56 1 34 2 313 1 
223 1 122 9 85 1 190 9 45 1 88 1 162 1 131 1 56 3 18 2 246 1 247 1 22 1 301 5 249 1 174 2 259 4 77 1 181 1 30 1 215 1 269 1 34 2 313 7 
223 1 122 9 85 1 190 9 45 1 88 1 162 1 131 1 56 3 18 2 246 1 247 1 22 1 301 5 249 1 174 2 259 4 77 1 181 1 30 1 215 1 269 1 34 2 313 7 
123 1 7 1 37 1 
187 2 7 1 312 1 
287 2 225 2 216 1 231 2 68 2 
300 1 225 1 205 1 231 1 68 1 177 2 107 1 109 2 287 1 307 1 197 1 216 1 168 1 200 2 
287 1 48 1 225 1 216 1 231 1 68 1 
225 1 128 1 256 1 57 1 
287 1 225 1 128 1 231 1 68 1 
14 1 276 1 248 1 277 1 32 1 
236 1 14 2 248 2 277 1 292 1 32 1 7 1 37 1 
14 1 248 1 277 1 
287 1 48 1 225 1 14 1 248 1 216 1 231 1 32 1 16 1 68 1 
7 1 
236 1 14 2 248 2 277 1 125 1 32 1 7 1 37 1 
83 1 224 1 226 1 137 2 248 5 86 2 277 2 279 1 44 2 7 1 160 1 91 1 76 1 236 1 14 5 266 1 32 2 37 1 121 1 
123 1 
287 1 225 2 147 1 231 1 68 1 296 1 
300 1 287 1 225 1 126 1 219 1 200 1 68 1 177 1 109 1 
287 4 13 1 225 5 126 2 6 1 231 1 26 1 219 1 68 4 57 1 296 1 
287 1 225 1 68 1 
287 3 225 3 126 1 231 1 68 3 
287 1 225 1 68 1 
287 1 225 1 147 1 231 1 68 1 296 1 
287 2 225 2 126 1 231 1 219 1 68 2 296 1 
287 1 13 1 225 2 126 1 68 1 57 1 
287 1 225 1 126 1 219 1 68 1 
287 1 225 1 231 1 68 1 296 1 
300 1 200 1 177 1 109 1 
300 1 200 1 177 1 109 1 
228 1 25 1 230 1 217 1 268 1 114 1 294 2 17 1 
287 1 225 1 68 1 119 1 
21 1 94 1 
21 1 94 1 
84 1 167 1 
84 1 167 1 
84 1 167 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 94 1 
21 1 50 1 94 1 14 1 248 1 185 1 280 1 
21 1 50 1 94 1 280 1 
131 1 249 1 162 1 
131 1 295 1 162 1 
214 1 249 2 131 3 295 1 184 1 89 1 
214 1 249 1 131 2 295 1 184 1 273 1 
214 1 249 1 131 2 295 1 184 2 
83 2 86 1 229 1 277 1 187 3 44 1 7 2 160 1 283 1 285 1 12 1 236 1 14 5 129 2 130 1 53 2 133 1 170 1 102 1 136 1 137 1 171 1 248 5 138 1 112 1 262 1 266 3 32 4 152 2 117 1 312 1 222 1 37 1 
225 1 248 2 276 1 277 1 231 1 7 1 68 1 287 1 48 1 14 2 290 1 149 1 216 1 32 2 16 1 182 1 37 1 
83 2 225 1 86 1 229 1 279 1 187 4 231 1 44 1 7 3 11 1 12 1 287 1 48 1 14 3 129 2 53 2 16 1 133 1 170 1 102 1 136 1 137 1 171 1 248 3 138 1 68 1 262 1 112 1 216 1 266 3 32 2 152 1 117 1 312 2 37 1 
83 4 225 1 86 1 229 2 187 7 279 1 231 1 44 1 7 4 161 1 11 1 12 2 287 1 48 1 14 4 129 4 53 4 16 1 133 2 60 1 170 2 102 1 136 1 137 1 171 2 248 4 138 1 68 1 75 1 262 1 112 2 216 1 266 5 32 3 152 2 117 2 312 3 37 1 
123 1 281 1 71 1 
71 1 134 1 
3 1 
157 1 270 1 71 1 
234 1 71 1 
270 1 71 1 
157 1 281 2 270 1 191 1 71 3 179 1 
61 1 204 3 2 1 206 1 159 1 66 4 282 1 305 2 47 2 112 1 237 3 151 1 79 1 133 1 35 1 36 1 20 7 
61 1 204 3 2 1 206 1 159 1 66 4 282 1 305 2 47 2 112 1 237 3 151 1 79 1 133 1 35 1 36 1 20 7 
61 1 204 3 2 1 40 1 206 1 159 1 66 4 282 1 305 2 47 2 112 1 237 3 151 1 79 1 133 1 35 1 36 1 20 7 
2 1 124 1 228 1 159 2 282 2 47 1 12 1 51 2 127 1 237 4 294 2 133 1 101 1 20 11 204 6 206 1 171 1 25 1 252 1 106 1 66 5 305 2 261 1 112 1 217 1 268 1 79 1 117 1 35 1 80 1 
2 1 228 2 159 1 282 1 47 2 237 4 55 1 294 4 133 1 20 9 61 1 204 4 206 1 25 2 66 5 305 3 112 1 217 2 151 1 268 2 79 1 309 1 80 1 36 1 
122 2 85 1 5 1 190 2 189 1 194 1 89 1 162 1 240 1 131 2 200 1 295 1 247 1 207 1 105 1 301 1 249 1 174 1 304 1 177 1 109 1 77 1 30 1 31 1 218 1 271 1 118 1 310 1 34 1 313 1 
122 3 85 1 190 3 189 1 194 1 89 1 162 1 240 1 131 2 200 1 201 1 295 1 207 1 105 1 301 1 249 1 174 1 304 1 177 1 109 1 213 1 77 1 30 1 31 1 218 1 183 1 271 1 310 1 34 1 313 2 
122 2 85 1 190 2 189 1 194 1 89 1 162 1 240 1 131 2 200 1 201 1 295 1 207 1 105 1 301 1 249 1 177 1 109 1 77 1 30 1 218 1 183 1 271 1 310 1 313 2 
122 1 85 2 190 1 189 1 90 1 92 1 240 2 200 1 169 1 300 1 105 1 207 2 174 1 177 1 71 1 257 1 109 1 213 1 143 1 270 1 34 1 310 2 311 1 
122 1 85 1 190 1 189 1 194 1 89 1 162 1 240 1 131 2 200 1 295 1 247 1 207 1 105 1 249 1 174 1 304 1 177 1 109 1 31 1 218 1 183 1 271 1 118 1 310 1 34 1 
104 1 
83 1 157 1 86 1 277 2 189 2 44 1 160 1 286 1 14 2 236 1 200 2 102 1 300 2 137 1 105 3 248 2 255 1 177 2 71 2 257 1 109 2 146 1 111 1 113 1 266 1 270 2 311 1 272 1 274 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 248 2 125 1 277 1 278 1 256 1 235 1 14 2 236 1 128 1 115 1 57 1 
1 1 225 1 137 1 248 1 86 1 278 1 44 1 256 1 160 1 235 1 14 1 128 1 115 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 235 1 14 1 128 1 248 1 278 1 115 1 256 1 57 1 
1 1 225 1 137 1 248 1 86 1 278 1 44 1 256 1 160 1 235 1 14 1 128 1 115 1 57 1 
61 1 2 1 123 1 228 1 230 1 25 1 66 2 47 1 305 1 112 1 237 1 151 1 217 1 114 1 268 1 79 1 294 2 17 1 36 1 20 2 
204 1 228 1 230 1 25 1 66 1 175 1 164 1 51 1 261 1 238 1 217 1 114 1 268 1 294 2 20 2 
204 1 225 1 228 1 126 1 230 1 25 1 209 1 66 1 175 1 68 1 287 1 198 1 217 1 132 1 114 1 268 1 219 1 294 2 120 1 20 2 
225 1 228 1 126 1 230 1 287 1 97 1 132 1 294 2 200 1 20 1 300 1 204 1 25 1 208 1 175 1 68 1 177 1 107 1 109 1 217 1 268 1 114 1 219 1 81 1 
300 1 228 1 230 1 25 1 209 1 66 1 177 1 109 1 217 1 114 1 268 1 294 2 200 1 220 1 82 1 20 1 
225 1 228 1 230 1 231 1 12 1 287 1 294 2 133 1 296 1 20 2 204 1 171 1 25 1 175 1 66 1 68 1 112 1 264 1 217 1 268 1 114 1 117 1 
299 1 228 1 230 1 25 1 66 1 112 1 217 1 114 1 268 1 294 2 17 1 117 1 20 1 
204 1 228 1 171 1 230 1 25 1 217 1 114 1 268 1 294 2 17 1 133 1 135 1 20 1 
204 1 228 1 171 1 230 1 25 1 66 1 12 1 112 1 217 1 114 1 268 1 294 2 133 1 17 1 117 1 20 2 
299 1 228 1 230 1 25 1 66 1 112 1 217 1 114 1 268 1 294 2 117 1 82 1 20 1 
204 1 228 1 171 1 230 1 25 1 217 1 114 1 268 1 294 2 133 1 82 1 135 1 20 1 
204 1 228 1 171 1 230 1 25 1 66 1 12 1 112 1 217 1 114 1 268 1 294 2 133 1 117 1 82 1 20 2 
204 1 228 1 171 1 230 1 25 1 66 1 12 1 112 1 217 1 114 1 268 1 294 2 133 1 117 1 20 2 
300 1 200 1 177 1 107 1 109 1 
300 1 158 1 200 1 177 1 109 1 
204 1 228 1 171 1 230 1 25 1 175 1 66 1 12 1 112 1 217 1 114 1 268 1 294 2 133 1 117 1 20 2 
97 1 5 1 200 1 177 1 107 1 109 1 
225 1 228 1 230 1 231 1 12 1 287 1 294 2 133 1 296 1 203 1 20 2 204 1 171 1 25 1 175 1 66 1 68 1 112 1 217 1 268 1 114 1 117 1 
124 1 228 2 41 1 42 1 8 1 282 3 12 3 51 2 237 6 166 2 294 4 133 3 101 1 20 19 204 10 171 3 25 2 253 2 66 9 176 1 305 3 180 1 261 1 112 3 217 2 268 2 117 3 309 1 154 1 275 1 
228 3 124 2 41 1 8 1 282 2 195 1 12 3 51 2 237 4 166 1 54 1 15 1 294 6 133 2 20 26 298 1 204 12 171 2 25 3 253 4 66 14 176 2 305 2 28 1 261 2 112 3 217 3 268 3 117 3 80 2 309 1 154 2 275 1 155 1 
2 1 124 3 228 3 41 1 42 1 8 1 282 4 47 1 195 1 12 4 51 4 237 8 166 1 54 1 15 1 294 6 133 5 101 1 20 41 61 1 298 1 204 21 171 4 25 3 253 4 66 20 176 1 212 1 305 4 28 1 261 3 112 5 151 1 217 3 268 3 79 1 117 4 80 1 309 1 154 2 36 1 155 1 275 1 
2 1 124 3 228 4 41 1 42 1 8 1 282 3 47 1 195 1 12 4 51 4 237 7 166 1 54 1 15 1 294 8 133 4 101 1 20 38 61 1 298 1 204 18 171 3 25 4 253 4 66 20 176 1 212 1 305 4 28 1 261 3 112 5 151 1 217 4 268 4 79 1 117 4 80 2 309 1 154 2 36 1 155 1 275 1 
2 1 124 2 228 2 41 1 8 1 192 2 282 7 47 1 195 1 12 7 51 4 237 14 166 1 54 1 15 1 294 4 133 8 101 2 20 52 61 1 298 1 204 25 171 7 25 2 253 4 66 27 176 1 305 7 28 1 261 4 112 8 151 1 217 2 268 2 79 1 117 7 80 1 309 1 154 1 36 1 155 1 275 1 
225 2 239 1 64 1 33 1 
105 1 249 1 5 1 189 1 177 2 193 1 69 1 194 1 89 1 162 1 109 2 49 1 131 2 31 1 183 1 200 2 271 1 295 1 310 1 
0 1 105 1 249 1 189 1 177 1 69 1 194 1 89 1 162 1 109 1 131 2 31 1 183 1 200 1 271 1 295 1 310 1 
300 1 105 1 189 1 211 1 177 1 193 1 71 1 257 1 109 1 90 1 270 1 200 1 310 1 311 1 
105 1 249 1 189 1 177 1 193 1 69 1 194 1 89 1 162 1 109 1 49 1 131 2 31 1 183 1 200 1 271 1 295 1 310 1 
199 1 
83 1 123 1 226 1 266 1 7 1 37 1 121 1 
83 1 137 1 248 1 86 1 277 1 187 1 44 1 7 2 160 1 142 1 14 1 236 1 266 1 98 1 153 1 312 1 37 1 
300 1 137 1 105 2 157 1 86 1 189 1 44 1 160 1 177 1 71 2 179 1 109 1 288 1 150 1 270 1 200 1 134 1 
83 5 124 1 86 2 277 1 187 6 44 2 7 5 160 2 11 2 286 1 195 1 12 2 14 1 236 1 51 1 129 5 53 5 54 1 15 1 133 2 102 1 170 1 63 1 137 2 248 1 171 2 65 1 28 1 261 1 112 2 266 8 117 2 312 3 37 2 155 1 
2 1 137 1 248 1 86 1 44 1 160 1 11 1 260 1 14 1 196 1 79 1 
83 1 137 1 226 1 86 1 44 1 7 1 160 1 266 1 37 1 121 1 
83 2 170 1 171 1 187 4 7 2 11 1 12 1 112 1 129 2 266 2 53 2 117 1 133 1 312 2 
14 1 236 1 248 1 277 1 7 1 37 1 
83 1 157 1 86 1 277 2 189 2 44 1 160 1 286 1 236 1 14 1 200 2 102 1 300 2 137 1 105 3 248 1 255 1 177 2 71 2 257 1 109 2 74 1 146 1 111 1 113 1 266 1 270 2 311 1 272 1 274 1 
300 1 287 1 225 1 307 1 216 1 231 1 200 1 68 1 177 1 107 1 109 1 
83 1 102 1 137 1 86 1 187 2 44 1 7 2 160 1 286 1 53 1 266 1 312 1 37 1 
95 1 244 1 293 1 
95 1 244 1 293 1 
95 1 244 1 293 1 
23 1 186 1 244 1 293 1 46 1 
244 1 293 1 297 1 
244 1 293 1 297 1 
244 1 293 1 297 1 
244 1 293 1 
21 1 94 1 
61 1 204 4 2 1 228 2 25 2 66 4 282 1 47 1 305 2 112 1 237 3 151 1 217 2 268 2 79 1 294 4 133 1 80 1 36 1 20 8 
61 1 204 3 2 1 123 1 66 3 47 1 305 2 237 2 112 1 151 1 79 1 133 1 36 1 20 6 
204 2 62 1 228 1 171 1 25 1 66 2 282 1 305 1 12 1 237 2 112 1 217 1 268 1 294 2 133 1 117 1 20 4 
204 4 124 1 171 1 66 3 282 1 305 1 12 1 51 2 261 1 112 1 237 2 133 1 117 1 101 1 20 7 
2 2 228 2 282 4 192 1 47 1 12 2 51 2 237 9 238 1 294 4 133 3 101 1 20 23 61 1 204 12 171 2 25 2 106 1 66 11 305 5 112 3 261 2 151 1 217 2 268 2 79 2 117 2 80 2 36 1 
204 1 51 1 20 1 
261 1 66 1 20 1 
204 3 228 1 62 1 171 1 25 1 66 3 282 1 10 1 12 1 305 2 112 1 237 3 217 1 268 1 294 2 117 1 133 1 20 6 
124 1 228 1 282 1 195 1 12 2 51 1 237 2 54 1 15 1 294 2 133 2 20 12 204 6 171 2 25 1 66 6 305 1 28 1 261 1 112 2 217 1 268 1 117 2 309 1 155 1 
204 3 2 1 66 3 282 1 305 1 112 1 237 2 151 1 79 1 133 1 20 6 
61 1 2 1 204 2 228 1 25 1 106 1 66 1 282 1 305 1 237 2 217 1 268 1 79 1 294 2 80 1 36 1 20 3 
2 1 196 1 237 1 79 1 305 1 
228 1 25 1 66 2 282 1 112 1 237 1 217 1 268 1 294 2 117 1 309 1 20 2 
204 2 228 1 171 1 25 1 66 2 282 1 305 1 12 1 237 2 112 1 217 1 268 1 294 2 133 1 117 1 309 1 20 4 
204 2 2 1 228 3 42 1 25 3 106 1 66 1 282 1 305 1 237 2 217 3 268 3 79 1 294 6 80 1 309 1 20 3 
2 3 124 1 228 4 42 1 282 4 196 1 51 1 237 8 294 8 133 2 20 17 61 1 204 9 62 1 25 4 252 1 106 1 66 8 305 4 112 2 261 1 151 1 217 4 268 4 79 3 309 1 80 1 36 1 
2 1 124 1 228 1 47 1 195 1 51 1 237 2 294 2 133 1 20 8 61 1 204 4 25 1 66 4 305 2 112 1 261 1 217 1 151 1 268 1 79 1 309 1 36 1 
2 1 124 1 228 2 282 1 47 1 195 1 12 1 51 2 237 3 294 4 133 1 101 1 20 11 61 1 204 5 62 1 25 2 66 6 305 2 261 1 112 2 151 1 217 2 268 2 79 1 117 1 309 1 36 1 
2 1 124 1 228 3 282 1 47 1 195 1 12 2 51 1 237 4 54 1 15 1 294 6 133 3 20 19 61 1 204 10 62 1 171 2 25 3 66 9 305 3 28 1 261 1 112 3 151 1 217 3 268 3 79 1 117 2 309 1 80 1 36 1 155 1 
2 1 124 1 228 3 282 2 47 1 195 1 12 2 51 1 237 5 54 1 15 1 294 6 133 2 20 17 61 1 204 7 62 1 171 1 25 3 66 10 305 3 28 1 261 1 112 3 151 1 217 3 268 3 79 1 117 2 80 1 309 1 36 1 155 1 
2 1 124 1 228 1 47 1 195 1 51 1 237 2 294 2 133 1 20 8 61 1 204 4 25 1 66 4 305 2 112 1 261 1 217 1 151 1 268 1 79 1 309 1 36 1 
124 1 228 1 282 1 195 1 12 2 51 1 237 2 54 1 15 1 294 2 133 2 20 12 204 6 171 2 25 1 66 6 305 1 28 1 261 1 112 2 217 1 268 1 117 2 309 1 155 1 
2 1 124 1 228 4 282 2 47 1 195 1 12 2 51 1 237 5 54 1 15 1 294 8 133 2 20 18 61 1 204 8 62 1 171 1 25 4 66 10 305 3 28 1 261 1 112 3 151 1 217 4 268 4 79 1 117 2 309 1 80 2 36 1 155 1 
124 1 228 4 42 1 282 3 195 1 12 3 51 1 237 6 54 1 15 1 294 8 133 2 20 16 204 7 171 2 25 4 66 9 305 3 28 1 261 1 112 3 217 4 268 4 117 3 309 1 80 2 155 1 
61 2 204 4 2 3 66 3 282 3 305 3 237 6 112 1 151 1 79 3 133 1 36 1 20 7 
2 1 124 1 228 4 42 1 282 1 47 1 195 1 12 2 51 1 237 4 54 1 15 1 294 8 133 2 20 18 61 1 204 8 171 1 25 4 66 10 305 3 28 1 261 1 112 3 151 1 217 4 268 4 79 1 117 2 309 1 80 2 36 1 155 1 
225 1 13 1 148 1 306 1 52 1 291 1 57 1 
103 1 225 1 87 1 70 1 145 1 13 1 148 1 306 1 52 1 291 1 241 1 57 1 
300 1 123 1 105 1 189 1 270 1 200 1 177 1 71 1 311 1 257 1 109 1 
300 1 225 1 157 1 105 1 126 1 251 1 189 1 68 1 177 1 71 1 109 1 287 1 243 1 270 1 200 1 
225 1 157 1 105 1 126 1 251 1 189 1 232 1 68 1 177 1 71 1 109 1 287 1 243 1 270 1 200 1 
225 1 157 1 105 1 126 1 189 1 232 1 68 1 177 1 71 1 109 1 287 1 243 1 270 1 200 1 59 1 
300 1 156 1 157 1 105 1 248 2 277 1 189 1 7 1 281 1 232 1 67 1 177 3 71 4 141 1 109 3 234 1 14 2 96 1 270 1 200 3 37 1 19 1 134 1 
225 1 156 1 248 2 277 1 231 1 7 1 281 1 232 1 68 1 177 1 71 2 109 1 287 1 48 1 14 2 216 1 242 1 16 1 200 1 37 1 134 1 
105 1 165 1 189 1 200 1 177 1 109 1 
300 2 39 1 157 1 105 3 173 1 5 1 189 2 177 7 27 1 179 1 71 3 109 7 289 1 93 1 111 1 197 1 165 1 113 1 183 1 270 2 200 6 
287 1 225 1 126 1 68 1 
83 1 226 1 227 1 156 1 86 2 277 2 44 2 7 1 281 1 160 2 14 3 236 1 242 1 200 1 134 1 300 1 137 2 248 3 210 1 177 1 178 1 71 2 109 1 74 1 266 1 32 1 37 1 121 1 
105 2 157 1 150 1 165 1 5 1 189 1 281 1 270 1 200 2 177 2 71 2 179 1 109 2 
300 1 105 1 5 1 189 1 303 1 177 4 71 1 141 1 257 1 109 4 270 1 200 4 311 1 
157 1 105 2 189 1 232 1 255 1 177 2 71 1 109 2 146 1 111 1 29 1 113 1 270 1 200 2 
300 1 105 1 131 1 189 1 200 1 177 1 295 1 194 1 162 1 109 1 
39 1 105 1 24 1 5 1 189 1 270 1 183 1 200 2 177 2 71 1 109 2 
300 1 39 1 105 2 173 1 5 1 189 2 303 1 232 1 177 5 71 3 257 1 109 5 289 1 270 2 200 4 311 1 
300 1 39 1 105 2 173 1 5 1 302 1 189 2 303 1 232 1 177 5 71 3 257 1 109 5 270 2 200 4 311 1 
300 1 225 1 157 1 105 1 126 1 189 1 68 1 177 1 71 1 109 1 287 1 243 1 270 1 200 1 59 1 
157 1 105 2 189 1 232 1 177 1 179 1 71 1 109 1 93 1 111 1 113 1 270 1 200 1 
78 1 172 1 265 1 38 1 
73 1 14 1 78 1 248 1 172 1 250 1 265 1 32 1 140 1 38 1 
225 1 78 1 239 1 64 1 172 1 265 1 33 1 
73 1 265 1 140 1 
123 1 77 1 301 1 30 1 
122 1 77 1 301 1 30 1 174 1 190 1 34 1 
85 1 207 1 190 1 
247 1 122 3 301 1 174 1 190 3 108 1 77 1 30 1 308 2 202 1 34 1 221 1 
122 2 77 1 301 1 30 1 174 1 190 2 18 1 34 1 313 1 
247 1 122 1 301 1 249 1 174 1 190 1 45 1 162 1 259 1 131 1 34 1 
122 1 247 1 77 1 301 1 174 1 190 1 34 1 
122 1 247 1 77 2 30 1 174 1 190 1 34 1 
247 1 122 2 301 1 174 2 190 2 188 1 163 1 144 1 77 1 34 2 
223 1 247 1 122 3 301 2 174 1 190 3 88 1 259 1 77 1 30 1 56 1 34 1 313 2 
247 1 122 2 301 1 249 1 174 1 190 2 89 1 162 1 77 1 30 1 131 2 267 1 295 1 34 1 313 1 
246 1 247 1 122 4 301 2 174 2 190 4 259 1 77 1 30 1 56 1 34 2 18 1 313 2 
122 1 247 1 77 1 301 1 30 1 174 1 190 1 34 1 
122 4 301 3 174 1 190 4 9 1 259 1 77 2 30 2 308 1 56 1 202 1 34 1 313 2 221 1 
247 1 122 2 301 1 174 1 190 2 254 1 77 1 181 1 30 1 99 1 34 1 313 1 
247 1 122 3 4 1 301 1 174 1 190 3 77 1 30 1 308 2 202 1 34 1 221 2 
301 2 139 2 100 1 58 1 
122 1 247 1 174 1 190 1 34 1 284 1 
223 1 122 2 247 1 77 1 301 1 30 1 174 1 190 2 34 1 313 1 
43 1 
122 1 247 1 77 1 301 1 30 1 174 1 190 1 34 1 
223 1 122 3 247 1 77 1 301 1 30 1 174 1 190 3 308 1 34 1 313 1 
259 1 301 1 56 1 9 1 
77 1 301 1 

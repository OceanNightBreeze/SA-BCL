#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (65,169) (65,169) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (65,169) (65,169) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (65,169) (65,169) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (65,169) (65,169) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 258 275 74 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 258 275 74 64 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 258 275 74 (85,199) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 258 275 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 258 275 74 (85,199) (85,199) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 30 254 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 30 254 6 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 258 275 74 (85,199) (85,199) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 171 132 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 258 275 74 (85,199) (85,199) 61 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 258 275 74 64 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 30 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 258 249 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 258 249 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 258 249 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 258 249 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 258 249 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 1 264 1 235 1 31 1 181 1 142 1 169 1 9 1 257 1 103 1 284 1 191 1 81 1 
65 1 264 1 235 1 31 1 181 1 142 1 169 1 9 1 257 1 284 1 103 1 191 1 81 1 
65 1 264 1 235 1 31 1 181 1 142 1 169 1 9 1 257 1 284 1 103 1 191 1 81 1 
65 1 264 1 235 1 31 1 181 1 142 1 169 1 9 1 257 1 284 1 103 1 191 1 81 1 
84 1 264 1 68 1 1 2 31 1 178 1 141 1 181 4 222 3 112 1 239 3 257 4 228 1 103 1 191 1 81 1 21 2 82 1 
84 1 260 1 264 1 86 1 31 1 181 2 112 1 18 1 239 1 149 1 9 1 257 2 228 1 284 1 191 1 81 1 
84 1 264 2 1 1 141 1 181 3 222 1 239 2 257 3 228 1 284 1 191 1 81 2 285 1 
68 1 1 4 31 1 178 1 141 3 181 9 222 7 112 1 39 1 255 1 257 9 228 1 81 2 191 1 82 1 84 1 264 2 50 1 238 1 239 5 284 1 103 1 21 2 285 1 
68 1 1 4 31 1 178 1 141 3 181 9 222 7 112 1 39 1 255 1 257 9 228 1 81 2 191 1 82 1 84 1 264 2 50 1 238 1 239 5 284 1 103 1 21 2 285 1 
261 1 99 1 53 1 
99 1 72 2 36 1 
258 1 74 1 275 1 
258 1 74 1 275 1 64 1 
85 1 258 1 74 1 275 1 
261 1 263 1 209 1 138 1 70 1 269 1 92 1 143 1 146 1 99 1 131 1 8 1 170 1 229 1 
258 1 275 1 
76 1 209 1 100 1 92 1 226 1 
261 1 210 1 209 2 99 1 154 1 100 1 92 2 226 1 
209 1 100 1 92 1 
85 1 209 1 199 1 92 1 226 1 258 1 74 1 275 1 
99 1 
261 1 210 1 209 2 99 1 278 1 100 1 92 2 226 1 
261 1 210 1 209 5 119 1 153 1 192 2 90 1 92 5 110 1 147 1 252 2 99 1 100 2 226 2 102 1 45 1 63 1 105 1 230 2 
212 1 136 1 
212 1 136 1 
38 1 7 1 
38 1 7 1 
38 1 7 1 
237 1 212 1 136 1 
38 1 212 2 7 1 193 1 78 1 136 2 
212 1 265 1 136 1 
212 1 265 1 136 1 
212 1 265 1 136 1 
212 1 247 1 136 1 
212 1 247 1 136 1 
212 1 247 1 136 1 
212 1 30 1 254 1 256 1 190 1 136 1 
209 1 212 1 6 1 30 1 254 1 92 1 256 1 190 1 136 1 
112 1 31 1 103 1 
260 1 112 1 31 1 
260 1 120 1 139 1 31 3 225 1 103 2 
260 1 120 1 113 1 139 1 31 2 103 1 
260 1 120 1 139 2 31 2 103 1 
0 1 210 1 209 5 72 3 246 1 219 1 36 1 37 2 144 1 252 1 40 2 224 1 226 4 43 1 230 1 261 1 119 2 192 1 153 1 88 1 234 1 266 1 92 5 158 2 272 1 271 1 164 1 99 2 100 1 200 1 242 1 102 3 
85 1 261 1 209 2 92 2 74 1 275 1 76 1 59 1 199 1 99 1 100 1 128 1 226 2 258 1 205 1 
0 1 209 3 246 1 72 4 219 1 36 2 37 2 252 1 224 1 40 1 226 2 43 1 45 1 230 1 261 1 192 1 119 2 234 1 92 3 272 1 271 1 158 2 164 1 99 3 242 1 102 3 
0 2 209 4 72 7 246 2 219 2 36 3 37 4 252 1 224 2 40 2 226 3 42 1 43 1 45 1 230 1 261 1 192 1 119 4 13 1 234 2 92 4 158 4 272 1 271 1 164 1 99 4 242 2 102 5 104 1 
67 1 213 1 53 1 218 1 179 1 
216 1 179 1 
253 1 
77 1 179 1 
67 2 277 1 253 1 77 1 20 1 217 1 179 3 
77 1 20 1 179 1 
179 1 250 1 
0 1 137 1 47 3 207 1 87 7 28 3 234 1 194 1 32 1 111 1 160 1 95 1 130 2 114 1 135 1 24 2 151 4 
0 1 137 1 47 3 207 1 87 7 28 3 234 1 194 1 32 1 111 1 160 1 95 1 130 2 114 1 135 1 24 2 151 4 
0 1 137 1 47 3 207 1 87 7 28 3 234 1 194 1 32 1 111 1 95 1 160 1 60 1 130 2 114 1 135 1 24 2 151 4 
137 1 0 4 207 2 106 3 28 10 140 1 32 1 246 3 219 3 111 1 184 2 185 1 41 1 227 1 114 2 151 16 262 1 47 15 87 31 234 4 267 1 268 1 156 1 194 5 95 1 160 2 96 4 17 1 166 1 168 1 130 5 242 3 135 2 24 3 
0 3 137 1 207 2 28 9 140 1 4 1 111 2 184 4 114 1 151 9 118 1 47 7 87 16 234 3 267 2 156 2 194 4 160 1 95 1 166 2 168 2 130 5 61 1 24 2 135 2 
29 1 31 2 2 1 181 2 222 1 112 1 225 1 80 1 257 2 228 1 81 1 191 1 83 1 84 1 117 1 260 1 46 1 264 1 49 1 121 1 16 2 274 1 98 1 165 1 279 2 281 1 239 1 282 1 103 1 284 1 172 2 
208 1 31 2 2 1 181 3 222 2 112 1 225 1 80 1 257 3 228 1 81 1 116 1 83 1 84 1 117 1 260 1 46 1 264 1 49 1 16 1 124 1 274 1 98 1 165 1 279 1 281 1 239 1 103 1 284 1 172 1 
208 1 31 2 2 1 181 2 222 2 112 1 225 1 80 1 257 2 228 1 116 1 83 1 84 1 117 1 260 1 46 1 16 1 274 1 165 1 279 1 281 1 239 1 284 1 103 1 172 1 
176 1 179 1 181 1 109 1 148 1 77 1 80 2 257 1 81 1 10 1 117 1 46 2 264 1 16 1 124 1 94 1 165 1 125 1 279 1 281 2 203 1 284 2 172 1 
31 2 2 1 181 1 112 1 225 1 80 1 257 1 81 1 191 1 116 1 83 1 117 1 260 1 46 1 264 1 49 1 16 1 274 1 98 1 165 1 279 1 281 1 282 1 103 1 284 1 172 1 
69 1 
173 1 209 3 210 1 138 1 70 1 245 1 179 1 109 1 143 1 146 1 252 1 77 1 8 1 259 1 43 1 229 1 230 1 117 1 263 1 192 1 153 1 119 1 155 1 269 1 16 2 92 3 159 1 165 1 125 2 279 2 100 2 280 1 131 1 132 1 203 1 170 1 171 1 102 1 172 2 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 3 210 1 138 1 155 1 70 1 269 1 92 3 159 1 143 1 146 1 278 1 100 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 153 1 192 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 252 1 131 1 8 1 132 1 170 1 171 1 229 1 230 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 131 1 132 1 8 1 170 1 171 1 229 1 
173 1 263 1 209 2 138 1 153 1 192 1 155 1 70 1 269 1 92 2 159 1 143 1 146 1 252 1 131 1 8 1 132 1 170 1 171 1 229 1 230 1 
0 1 106 1 28 2 174 1 175 1 246 1 219 1 184 4 41 1 151 4 118 1 47 5 262 1 232 1 87 9 234 1 267 2 122 1 156 2 194 1 196 1 96 2 166 2 168 2 201 1 127 1 130 1 240 1 242 1 
0 1 106 1 28 2 174 1 175 1 246 1 219 1 184 4 41 1 151 4 118 1 47 5 262 1 232 1 87 9 234 1 267 2 122 1 156 2 194 1 196 1 96 2 166 2 168 2 201 1 127 1 130 1 240 1 242 1 
137 1 0 7 207 1 26 1 106 4 66 1 28 12 174 1 140 1 246 6 73 1 219 6 111 1 184 4 41 2 189 2 151 24 118 1 47 22 262 2 48 1 232 1 87 46 234 7 267 2 122 1 156 2 194 6 196 3 95 1 96 4 166 2 168 2 201 1 127 1 202 1 130 6 240 1 242 6 24 1 135 1 206 1 
0 1 106 1 28 2 174 1 175 1 246 1 219 1 184 4 41 1 150 1 151 4 118 1 47 5 262 1 232 1 87 9 234 1 267 2 156 2 194 1 196 1 96 2 166 2 168 2 201 1 127 1 130 1 240 1 242 1 
0 1 26 1 106 2 66 1 28 2 174 2 140 2 246 2 73 1 219 2 184 6 41 2 151 11 118 1 47 9 48 1 232 1 87 20 234 2 267 3 122 1 194 1 156 3 196 3 96 2 166 3 168 3 201 1 127 1 130 1 202 1 240 2 242 1 206 1 
89 1 269 1 283 1 8 1 170 1 3 1 
260 1 117 1 49 1 121 1 31 2 16 2 2 1 274 1 58 1 112 1 165 1 279 2 225 1 80 1 79 1 101 1 103 1 116 1 172 2 
260 1 117 1 49 1 31 2 16 1 2 1 274 1 221 1 112 1 165 1 279 1 225 1 80 1 79 1 103 1 116 1 172 1 
117 1 91 1 16 1 179 1 109 1 165 1 125 1 279 1 77 1 148 1 80 1 203 1 101 1 172 1 
260 1 117 1 49 1 31 2 16 1 2 1 274 1 58 1 112 1 165 1 279 1 225 1 80 1 79 1 101 1 103 1 116 1 172 1 
56 1 
261 1 119 1 99 1 53 1 102 1 105 1 110 1 
261 1 209 1 210 1 153 1 192 1 119 1 14 1 92 1 72 1 180 1 36 1 145 1 252 1 99 2 100 1 102 1 230 1 
0 2 209 5 210 3 67 2 216 3 217 1 72 12 219 2 220 2 143 2 77 3 230 4 153 4 234 2 16 3 92 5 158 6 97 2 165 4 99 8 100 5 20 3 102 9 242 2 23 2 172 3 105 1 33 1 246 2 248 2 179 10 108 2 36 6 110 1 250 2 37 6 251 1 252 4 43 2 117 3 261 2 192 4 119 8 121 1 51 2 52 2 123 1 55 2 273 1 125 1 126 1 279 3 280 1 62 2 
0 2 106 1 209 1 210 1 211 1 66 1 72 6 246 2 248 1 73 1 219 2 36 3 37 5 252 2 41 1 43 1 230 2 11 1 261 2 48 1 192 2 153 2 119 5 234 2 92 1 158 5 96 1 99 5 280 1 100 1 202 1 102 8 242 2 23 2 206 1 
0 1 85 1 207 1 209 1 119 1 153 1 192 1 234 1 92 1 74 1 275 1 111 1 252 1 199 1 61 1 258 1 102 2 135 1 23 2 152 1 230 1 
261 1 153 1 192 1 119 1 110 1 252 1 99 1 102 1 230 1 105 1 
0 2 119 5 234 2 55 1 246 2 72 10 158 5 248 1 219 2 36 5 37 5 99 5 242 2 102 5 23 2 
261 1 209 1 210 1 99 1 100 1 92 1 
210 2 209 3 177 1 245 1 33 2 35 1 179 1 109 1 252 2 77 1 259 1 43 2 45 1 230 2 117 1 192 2 153 1 119 2 16 4 92 3 273 1 165 1 125 2 279 4 100 4 280 2 203 1 102 2 172 4 
258 1 74 1 275 1 64 1 
261 2 119 2 153 1 192 1 72 4 158 2 36 2 37 2 252 1 99 4 280 1 43 1 102 1 24 1 230 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
30 1 190 1 
212 1 136 1 
0 1 137 1 106 1 207 1 28 2 111 1 184 2 41 1 151 4 118 1 47 4 87 8 234 1 267 1 156 1 95 1 96 1 166 1 168 1 130 2 24 1 135 1 206 1 
0 1 137 1 207 1 106 1 28 3 246 1 219 1 111 1 184 4 41 1 151 6 118 1 47 5 262 1 87 11 234 2 267 2 156 2 194 1 95 1 96 2 166 2 168 2 130 2 129 1 24 1 135 1 206 1 
137 1 0 3 207 1 106 1 66 1 28 4 140 1 246 2 73 1 219 2 111 1 184 6 41 1 151 9 118 1 47 10 48 1 87 19 234 3 267 3 194 1 156 3 95 1 96 1 166 3 168 3 129 1 202 1 130 3 242 2 24 1 135 1 206 1 
137 1 0 2 207 1 106 1 66 1 28 5 140 1 246 2 219 2 73 1 111 1 184 6 41 1 151 10 118 1 47 7 48 1 87 17 234 3 267 3 194 2 156 3 95 1 96 1 166 3 168 3 129 1 202 1 130 3 242 1 24 1 135 1 206 1 
0 1 137 1 106 1 207 1 28 2 111 1 184 2 41 1 151 4 118 1 47 4 87 8 234 1 267 1 156 1 95 1 96 1 166 1 168 1 130 2 24 1 135 1 206 1 
0 2 106 1 66 1 28 2 246 2 219 2 73 1 184 2 41 1 151 6 118 1 47 6 48 1 87 12 234 2 267 1 194 1 156 1 96 1 166 1 168 1 202 1 130 1 242 2 206 1 
137 1 0 2 207 1 106 1 66 1 28 5 140 2 246 2 73 1 219 2 111 1 184 8 41 1 151 10 118 1 47 8 48 1 87 18 234 3 267 4 194 2 156 4 95 1 96 1 166 4 168 4 129 1 202 1 130 3 242 1 24 1 135 1 206 1 
0 2 106 1 66 1 28 6 175 1 140 2 246 3 73 1 219 3 184 8 41 1 151 9 118 1 47 7 48 1 87 16 234 3 267 4 194 3 156 4 96 1 166 4 168 4 202 1 130 3 242 2 206 1 
0 1 137 1 47 4 207 3 87 7 28 6 234 1 194 3 95 2 111 1 130 3 135 3 151 3 
137 1 0 2 207 1 106 1 66 1 28 4 175 1 140 2 246 2 73 1 219 2 111 1 184 8 41 1 151 10 118 1 47 8 48 1 87 18 234 3 267 4 194 1 156 4 95 1 96 1 166 4 168 4 202 1 130 3 242 1 24 1 135 1 206 1 
0 1 137 1 47 4 207 1 87 8 28 3 234 1 267 2 140 1 194 1 156 2 111 1 95 1 168 2 166 2 184 4 130 2 24 1 151 4 135 1 
137 1 0 1 47 3 207 1 87 6 28 2 234 1 53 1 95 1 111 1 130 2 24 1 135 1 151 3 
0 1 47 2 87 4 28 2 234 1 267 1 156 1 194 1 246 1 219 1 168 1 166 1 184 2 130 1 129 1 242 1 151 2 
0 1 47 4 106 1 262 1 87 7 28 2 234 1 194 1 246 1 219 1 96 2 130 1 41 1 242 1 151 3 
137 1 0 3 207 2 106 2 28 9 140 2 246 2 219 2 111 1 182 1 184 4 189 1 151 11 262 1 47 12 87 23 234 3 267 2 194 4 156 2 236 1 95 1 96 2 168 2 166 2 130 5 242 2 24 1 135 2 
47 1 96 1 87 1 
106 1 87 1 151 1 
0 1 47 3 87 6 28 3 234 1 267 1 156 1 194 1 55 1 246 1 219 1 166 1 168 1 184 2 129 1 130 2 242 1 151 3 
0 2 106 1 66 1 28 2 246 2 219 2 73 1 184 2 41 1 151 6 118 1 47 6 48 1 87 12 234 2 267 1 194 1 156 1 96 1 166 1 168 1 202 1 130 1 242 2 206 1 
0 1 111 1 207 1 47 3 87 6 28 2 234 1 194 1 130 1 135 1 151 3 
137 1 207 1 47 2 87 3 28 2 140 1 267 1 194 1 156 1 236 1 95 1 168 1 166 1 184 2 130 1 151 1 135 1 
118 1 0 2 207 2 47 5 87 10 28 5 234 2 267 1 156 1 194 2 111 1 166 1 168 1 184 2 130 3 61 1 135 2 151 5 
118 1 87 2 28 1 234 1 267 1 156 1 194 1 246 1 168 1 166 1 184 2 151 2 
0 1 118 1 47 2 87 4 28 2 234 1 267 1 156 1 194 1 246 1 219 1 168 1 166 1 184 2 130 1 242 1 151 2 
118 1 47 2 207 1 87 3 28 2 140 1 175 1 267 3 156 3 194 1 236 1 168 3 166 3 184 6 130 1 135 1 151 1 
137 1 0 5 207 3 106 3 28 12 140 2 175 1 246 3 219 3 111 2 185 1 184 10 41 1 151 16 118 1 47 18 262 1 87 34 234 5 267 5 268 1 156 5 194 5 236 1 95 1 96 4 17 1 166 5 168 5 129 1 130 7 242 3 24 1 135 3 
146 1 269 1 215 1 8 1 170 1 57 1 134 1 
231 1 157 1 215 1 269 1 54 1 57 1 161 1 146 1 8 1 170 1 134 1 204 1 
117 1 165 1 125 1 279 1 77 1 53 1 16 1 203 1 179 1 109 1 172 1 
258 1 249 1 
258 1 249 1 
258 1 249 1 
209 2 67 1 216 1 33 1 34 1 179 4 250 1 143 1 183 1 77 1 117 1 261 1 52 1 16 3 92 2 163 1 165 1 125 1 279 3 99 1 100 1 20 1 172 3 
117 1 261 1 209 2 67 1 52 1 33 1 16 3 216 1 92 2 108 1 179 4 250 1 163 1 143 1 125 1 165 1 99 1 279 3 100 1 77 1 20 1 172 3 
117 1 165 1 279 1 19 1 16 1 172 1 
117 2 27 1 29 1 16 6 217 1 179 3 162 1 75 1 125 2 165 3 198 1 19 1 279 6 20 1 77 2 243 1 115 1 22 1 116 1 172 5 
258 1 249 1 
209 3 210 1 67 1 216 1 108 1 179 2 220 1 110 1 143 1 252 2 226 1 230 2 261 1 119 1 192 2 153 2 16 1 92 3 273 1 125 1 97 1 99 1 279 1 100 2 62 1 102 1 172 1 105 1 
117 1 67 1 121 1 16 2 217 1 179 2 126 1 165 2 19 1 279 2 20 1 77 1 172 2 
117 1 121 1 16 4 179 1 109 1 163 1 165 1 125 1 279 4 77 1 203 1 188 1 172 4 
117 1 33 1 16 2 179 1 5 1 165 2 198 1 279 2 20 1 77 1 133 1 243 1 172 2 25 1 
260 1 117 1 112 1 165 1 125 1 279 1 31 1 16 1 2 1 172 1 
117 1 162 1 165 1 279 2 77 1 121 1 16 2 93 1 179 1 116 1 172 2 
117 2 27 1 121 1 33 1 16 5 179 3 109 1 162 1 125 1 165 2 279 5 77 2 203 1 188 1 172 4 22 1 
117 2 27 1 121 1 15 1 33 1 16 5 179 3 109 1 162 1 125 1 165 2 279 5 77 2 203 1 188 1 172 4 
258 1 249 1 
117 1 33 1 16 1 217 1 179 1 165 2 198 1 279 1 20 1 77 1 243 1 115 1 172 1 
84 1 239 1 53 1 228 1 
84 1 264 1 239 1 257 1 228 1 81 1 181 1 
46 1 257 1 284 1 
84 1 264 1 181 3 197 1 276 1 18 2 239 1 257 3 241 1 228 1 191 1 81 1 
84 1 222 1 264 1 239 1 257 2 228 1 21 1 81 1 181 2 
264 1 68 1 1 1 31 1 181 1 112 1 239 1 257 1 103 1 191 1 81 1 
84 1 264 1 239 1 257 1 81 1 191 1 181 1 
84 2 264 1 257 1 228 1 81 1 191 1 181 1 
84 1 264 2 12 1 167 1 233 1 239 1 257 2 81 2 191 1 181 2 
84 1 264 1 1 1 141 1 181 3 222 2 39 1 239 2 255 1 257 3 228 1 191 1 81 1 
84 1 260 1 264 1 31 2 181 2 222 1 112 1 239 1 225 1 257 2 228 1 103 1 191 1 81 1 44 1 
84 1 264 2 1 1 141 1 181 4 222 2 239 2 257 4 228 1 191 1 81 2 21 1 82 1 
84 1 264 1 239 1 257 1 228 1 81 1 191 1 181 1 
84 2 264 1 1 1 141 1 181 4 197 1 222 2 18 1 239 3 186 1 257 4 241 1 228 2 81 1 
84 1 264 1 71 1 270 1 181 2 222 1 238 1 239 1 257 2 228 1 191 1 81 1 
84 1 264 1 214 1 181 3 197 1 18 2 239 1 257 3 241 2 228 1 191 1 81 1 
244 1 239 2 187 2 107 1 
264 1 195 1 257 1 81 1 191 1 181 1 
84 1 222 1 264 1 39 1 239 1 257 2 228 1 81 1 191 1 181 2 
223 1 
84 1 264 1 239 1 257 1 228 1 81 1 191 1 181 1 
84 1 264 1 181 3 222 1 18 1 39 1 239 1 257 3 228 1 191 1 81 1 
1 1 239 1 186 1 141 1 
84 1 239 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (97,201) (97,201) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (97,201) (97,201) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (97,201) (97,201) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (97,201) (97,201) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 312 168 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 312 168 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (50,206,287) (49,102,311) (49,102,311) (49,102,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (50,206,287) (49,102,311) (49,102,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (50,206,287) (49,102,311) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (50,206,287) (49,102,311) (49,102,311) (49,102,311) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (50,206,287) (50,206,287) (50,206,287) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (50,206,287) (50,206,287) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (50,206,287) (50,206,287) (50,206,287) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 1 355 1 30 1 258 1 191 1 250 1 239 1 169 1 55 1 67 1 201 1 97 1 
130 1 355 1 30 1 258 1 191 1 250 1 239 1 169 1 55 1 67 1 201 1 97 1 
130 1 355 1 30 1 258 1 191 1 250 1 239 1 169 1 55 1 67 1 201 1 97 1 
130 1 355 1 30 1 258 1 191 1 250 1 239 1 169 1 55 1 67 1 201 1 97 1 
130 2 118 1 296 1 258 2 250 1 239 1 169 1 360 1 136 1 55 1 88 1 312 1 
191 1 23 1 239 1 283 1 2 1 204 1 130 2 118 1 258 2 182 1 250 1 5 1 279 1 87 1 55 1 67 1 
331 1 23 1 239 1 242 1 360 1 2 1 130 3 118 2 296 1 258 3 250 2 55 2 67 1 
331 2 71 1 239 1 242 1 360 3 312 1 130 7 118 3 296 5 258 7 250 2 168 1 169 1 350 1 136 1 55 2 88 1 67 1 271 1 
331 2 71 1 239 1 242 1 360 3 312 1 130 7 118 3 296 5 258 7 250 2 168 1 169 1 350 1 136 1 55 2 88 1 67 1 271 1 
140 1 101 1 181 1 
332 1 366 2 181 1 
212 2 266 1 370 2 316 1 72 2 54 2 41 2 180 2 
212 2 43 1 218 1 72 2 221 1 52 2 149 2 315 1 316 1 229 1 27 1 357 1 54 3 29 2 153 1 174 1 319 1 262 1 339 1 13 1 31 2 243 1 180 2 35 1 17 1 266 1 18 1 249 1 370 2 184 1 373 1 20 1 302 1 303 1 107 1 138 2 41 3 
212 1 216 1 370 1 316 1 320 1 72 1 54 1 334 1 41 1 180 1 
69 1 334 1 285 1 181 1 180 1 276 1 368 1 356 1 348 1 54 1 101 1 171 1 173 1 41 1 
212 1 72 1 334 1 181 1 180 1 276 2 368 1 370 1 356 1 348 1 54 1 101 1 171 2 173 1 41 1 
276 1 171 1 16 1 270 1 84 1 
213 1 276 2 38 1 101 1 171 2 16 1 181 1 270 1 
276 1 171 1 16 1 
212 1 216 1 320 1 72 1 334 1 104 1 180 1 276 1 316 1 370 1 54 1 171 1 270 1 41 1 
181 1 
276 2 38 1 240 1 101 1 171 2 16 1 181 1 270 1 
141 1 1 1 78 1 60 1 222 1 94 1 16 2 181 1 3 2 98 1 276 5 105 2 132 2 158 1 38 1 231 1 101 1 171 5 270 2 
212 1 319 1 11 1 218 1 221 1 333 1 31 1 243 1 115 1 180 1 149 1 315 1 18 1 370 1 184 1 54 2 29 1 153 1 174 1 41 2 
266 1 140 1 
212 1 261 1 72 1 180 2 266 2 370 1 298 1 54 2 41 2 
371 1 333 1 193 1 
319 1 218 1 221 1 31 1 243 1 149 1 315 1 266 1 18 1 184 1 54 1 29 1 153 1 174 1 41 1 160 1 
212 3 266 1 370 3 72 1 54 3 115 1 41 3 180 3 
212 1 216 1 370 1 54 1 334 1 41 1 180 1 
212 1 261 1 370 1 72 1 298 1 54 1 334 1 41 1 180 1 
212 3 43 1 218 1 72 2 221 1 334 1 115 1 52 1 315 1 276 1 149 1 229 1 316 1 27 1 356 1 298 1 54 4 29 1 153 1 171 1 121 1 173 1 174 1 319 1 11 1 339 1 31 1 243 1 180 3 35 1 17 1 85 1 266 1 368 1 18 1 249 1 370 3 184 1 348 1 373 1 302 1 107 1 138 2 41 4 
212 1 266 1 370 1 54 2 115 1 285 1 122 1 41 2 180 2 
212 3 11 1 72 1 145 1 334 1 115 2 181 1 180 3 276 1 368 1 370 3 356 1 298 1 348 1 54 3 171 1 173 1 121 1 41 3 
212 2 370 2 72 1 298 1 333 1 54 2 193 1 115 1 41 2 180 2 
319 1 218 1 221 1 31 1 243 1 149 1 315 1 266 1 18 1 184 1 54 1 29 1 153 1 174 1 41 1 
319 1 218 1 221 1 31 1 243 1 149 1 150 1 266 1 301 1 18 1 184 1 54 1 29 1 153 1 41 1 
272 1 189 1 43 1 92 1 45 1 333 2 193 2 313 1 52 4 56 1 262 2 339 1 126 1 35 1 17 1 246 1 345 1 346 1 249 1 371 2 302 2 351 1 107 1 138 2 
212 1 370 1 348 1 99 1 54 1 334 1 41 1 180 1 
212 4 42 1 11 1 72 1 115 2 285 1 180 5 266 1 370 4 298 1 54 5 337 1 122 1 41 5 
212 2 216 1 370 2 99 1 54 2 334 1 41 2 180 2 
233 1 127 1 
233 1 127 1 
188 1 
188 1 
188 1 
195 1 233 1 127 1 
188 1 152 1 244 1 233 1 127 1 
131 1 233 1 127 1 
195 1 233 1 127 1 
195 1 233 1 127 1 
309 1 233 1 127 1 
309 1 233 1 127 1 
309 1 233 1 127 1 
215 1 70 1 300 1 144 1 305 2 281 1 164 2 178 3 62 1 181 1 127 2 314 2 276 2 247 1 196 1 171 2 330 2 233 2 159 2 
212 2 113 1 305 1 164 1 73 1 314 1 276 1 54 2 196 1 171 1 233 1 154 1 178 1 127 1 180 2 157 1 324 1 266 1 131 1 36 1 370 2 134 1 330 1 41 2 
169 1 
182 1 5 1 279 1 
148 1 182 1 169 2 5 1 
143 1 369 1 235 1 182 1 169 1 5 1 128 1 
143 2 128 1 369 1 182 1 169 1 5 1 
253 1 141 3 254 1 113 1 219 1 332 1 92 1 47 1 313 1 3 1 276 5 231 2 170 1 171 5 101 1 198 2 56 1 154 1 78 1 155 2 366 3 16 1 181 2 245 2 246 1 132 1 105 1 344 1 134 1 38 1 290 1 270 4 
253 1 141 8 217 1 44 1 332 3 92 3 313 3 3 2 276 9 231 6 170 3 171 9 101 1 198 6 56 3 154 4 103 5 78 1 177 1 362 1 366 9 16 6 82 1 181 5 245 6 84 5 246 3 105 2 132 2 344 2 158 1 38 1 290 2 66 1 270 7 
141 3 254 1 332 2 92 1 47 1 313 1 3 1 276 3 231 2 101 1 171 3 170 1 198 2 56 1 154 1 155 1 366 4 181 3 245 2 132 1 105 1 246 1 344 1 158 1 290 1 270 2 
141 5 254 1 217 1 332 3 92 2 47 1 313 2 3 1 276 4 231 4 101 1 171 4 170 2 198 4 56 2 154 2 177 1 155 2 366 7 181 4 82 1 245 4 132 1 105 1 246 2 344 1 158 1 290 1 270 3 
140 1 221 1 129 1 
91 1 221 1 
375 1 
221 1 243 1 
89 1 18 1 22 1 221 3 243 1 129 2 
18 1 221 1 243 1 
221 1 120 1 
294 1 189 1 262 1 14 1 340 1 225 1 52 1 117 1 53 1 345 2 167 1 40 1 327 1 
294 1 189 1 262 1 14 1 340 1 225 1 52 1 117 1 53 1 345 2 167 1 40 1 327 1 
294 1 189 1 262 1 14 1 340 1 225 1 52 1 117 1 53 1 345 2 167 1 327 1 40 1 39 1 
0 1 214 1 142 4 294 5 189 4 43 1 92 3 310 1 225 2 313 3 52 25 53 1 117 2 167 1 6 3 170 3 56 3 262 13 339 1 14 2 340 2 264 1 265 1 246 3 345 9 249 1 325 1 327 1 40 2 302 12 107 1 108 1 138 2 
214 1 294 1 189 2 262 2 339 2 43 2 352 1 14 1 340 1 225 1 52 3 53 1 117 1 345 3 249 2 327 1 40 1 302 1 251 1 107 2 138 4 
218 1 165 1 49 1 96 1 311 1 148 1 149 1 258 1 169 1 5 1 29 1 153 1 55 1 10 1 102 1 12 1 239 1 31 1 203 1 286 1 130 1 206 1 182 1 250 1 67 1 
218 1 306 1 165 1 353 1 96 1 311 1 148 1 149 1 296 1 258 2 169 1 5 1 29 1 153 1 55 1 102 1 12 1 282 1 31 1 203 1 286 1 130 2 206 1 182 1 250 1 67 1 
12 1 218 1 306 1 282 1 31 1 165 1 203 1 96 1 148 1 206 1 130 1 149 1 296 1 258 1 182 1 169 1 5 1 29 1 153 1 67 1 102 1 
319 1 12 2 218 1 59 1 221 1 353 1 31 1 165 2 32 1 243 1 363 1 96 2 130 1 149 1 228 1 258 1 250 1 29 1 153 1 137 1 55 1 200 1 67 2 
218 1 306 1 165 1 49 1 96 1 311 1 148 1 149 1 258 1 169 1 5 1 29 1 153 1 55 1 102 1 12 1 239 1 31 1 203 1 286 1 130 1 206 1 182 1 250 1 67 1 
109 1 
141 2 332 2 256 2 3 1 149 2 153 1 199 1 299 2 260 2 263 1 61 2 156 1 16 6 105 1 347 1 65 1 110 1 218 1 221 1 114 1 227 2 276 4 277 2 75 1 278 2 231 2 29 2 171 4 319 2 78 1 236 2 31 2 32 1 243 1 361 1 363 1 323 1 366 2 181 1 132 1 38 3 290 1 
276 2 347 1 75 1 38 1 240 1 256 1 171 2 156 1 16 2 
276 1 236 1 277 1 347 1 75 1 171 1 156 1 
236 1 240 1 256 1 156 1 16 2 276 2 277 1 75 1 347 1 38 1 171 2 299 1 
141 1 90 1 332 2 93 1 334 1 256 4 3 1 54 1 101 2 299 4 260 2 263 1 61 2 156 1 16 7 341 1 104 1 105 1 347 1 65 1 212 1 216 1 112 1 72 1 227 2 276 4 277 3 316 1 75 1 278 2 231 1 171 4 78 1 236 3 320 1 240 1 181 2 180 1 132 1 289 1 370 1 38 3 41 1 
110 1 141 1 332 2 256 2 3 1 227 2 276 3 277 2 75 1 278 2 231 1 101 1 171 3 299 2 260 2 263 1 236 2 78 1 61 2 156 1 16 4 366 2 181 2 132 1 105 1 347 1 38 2 65 1 
141 1 90 1 112 1 332 2 93 1 256 2 3 1 227 2 276 3 277 2 75 1 278 2 231 1 101 1 171 3 299 2 260 2 263 1 236 2 78 1 61 2 156 1 16 4 181 1 132 1 105 1 347 1 38 2 65 1 
141 1 90 1 112 1 332 2 93 1 256 2 3 1 227 2 276 3 277 2 75 1 278 2 231 1 101 1 171 3 299 2 260 2 263 1 236 2 78 1 61 2 156 1 16 4 181 1 132 1 105 1 347 1 38 2 65 1 
141 1 112 1 256 2 3 1 276 3 119 2 277 2 4 1 75 1 231 1 101 1 171 3 299 2 260 2 263 1 236 2 78 1 61 2 156 1 16 4 366 2 181 1 132 1 105 1 207 1 326 2 106 1 347 1 38 2 
141 1 90 1 112 1 332 2 93 1 256 3 227 2 3 1 276 3 277 3 75 1 278 2 231 1 101 1 171 3 299 3 260 2 263 1 236 3 78 1 61 2 156 1 16 5 181 1 105 1 132 1 289 1 347 1 38 2 65 1 
141 1 90 1 112 1 332 2 93 1 256 3 227 2 3 1 276 3 277 3 75 1 278 2 231 1 101 1 171 3 299 3 260 2 263 1 236 3 78 1 61 2 156 1 16 5 181 1 105 1 132 1 289 1 347 1 38 2 65 1 
110 1 141 1 256 2 3 1 276 3 119 2 277 2 75 1 231 1 101 1 171 3 299 2 260 2 263 1 236 2 78 1 61 2 156 1 366 2 16 4 181 1 207 1 132 1 105 1 347 1 326 2 38 2 
189 1 272 1 140 1 339 1 43 1 14 1 225 1 17 1 35 1 53 1 345 1 249 1 327 1 107 1 138 2 
294 1 189 1 142 3 190 1 43 2 92 1 333 11 193 4 274 1 313 1 52 14 27 1 6 3 170 2 123 1 56 2 262 8 339 2 35 2 17 1 265 1 266 1 246 2 345 2 249 2 371 11 185 1 20 1 302 6 292 1 107 2 108 1 138 4 
212 1 43 1 218 1 221 1 193 1 115 1 26 1 52 2 315 1 149 1 27 1 54 2 29 1 153 1 174 1 123 1 319 1 262 1 11 1 339 1 280 1 79 1 31 1 243 1 180 1 35 1 17 1 266 1 18 1 249 1 370 1 184 1 302 1 20 1 107 1 160 1 41 2 138 2 
212 1 43 1 46 1 115 1 52 1 149 1 27 1 54 1 29 1 123 1 319 1 11 1 339 1 31 1 180 1 35 1 17 1 249 1 370 1 302 1 107 1 41 1 138 2 
212 1 272 1 21 1 43 2 218 2 162 1 306 1 221 3 115 1 52 2 149 7 27 1 358 1 54 1 29 8 153 2 10 1 319 2 262 1 339 2 13 2 31 8 63 1 32 1 243 2 81 1 15 1 363 1 33 1 180 1 35 2 17 2 370 1 249 2 20 1 302 1 107 2 41 1 138 4 
212 1 189 1 43 1 72 1 92 1 333 1 193 1 147 1 313 1 52 3 298 1 54 1 170 1 123 1 56 1 262 1 339 1 180 1 35 1 17 1 246 1 345 1 370 1 249 1 371 1 302 2 107 1 138 2 41 1 
56 1 294 1 272 1 262 2 339 1 43 1 333 1 193 1 126 1 17 1 35 1 52 2 246 1 345 1 249 1 371 1 107 1 138 2 
189 1 272 1 339 1 43 1 92 1 333 1 193 1 313 1 17 1 35 1 52 2 345 1 249 1 371 1 302 2 107 1 351 1 138 2 
56 1 189 1 294 1 272 1 262 2 339 1 43 1 92 1 333 2 193 2 313 1 17 1 35 1 52 4 246 1 345 2 249 1 371 2 302 2 107 1 170 1 138 2 
56 1 294 1 262 2 339 1 43 1 333 1 193 1 63 1 126 1 17 1 35 1 52 2 246 1 345 1 249 1 371 1 107 1 138 2 
189 1 339 1 43 1 92 1 333 1 193 1 63 1 313 1 17 1 35 1 52 2 345 1 249 1 371 1 302 2 107 1 351 1 138 2 
56 1 189 1 294 1 262 2 339 1 43 1 92 1 333 2 193 2 63 1 313 1 17 1 35 1 52 4 246 1 345 2 249 1 371 2 302 2 107 1 170 1 138 2 
56 1 189 1 294 1 262 2 339 1 43 1 92 1 333 2 193 2 313 1 17 1 35 1 52 4 246 1 345 2 249 1 371 2 302 2 107 1 170 1 138 2 
43 1 218 1 221 1 52 2 315 1 149 1 229 1 27 1 54 1 29 1 153 1 174 1 319 1 262 1 339 1 31 1 243 1 17 1 35 1 266 1 18 1 249 1 184 1 20 1 302 1 107 1 41 1 138 2 
43 1 218 1 221 1 52 2 150 1 149 1 27 1 54 1 29 1 153 1 319 1 262 1 339 1 31 1 243 1 17 1 35 1 367 1 266 1 18 1 301 1 249 1 184 1 20 1 302 1 107 1 41 1 138 2 
56 1 189 1 294 1 262 2 339 1 43 1 92 1 333 2 193 2 313 1 17 1 35 1 52 4 246 1 345 2 249 1 371 2 302 2 107 1 170 1 138 2 123 1 
189 1 294 1 43 1 218 1 92 1 221 1 333 2 308 1 193 2 313 1 52 4 315 1 149 1 229 1 54 1 29 1 153 1 170 1 174 1 10 1 56 1 262 2 339 1 31 1 243 1 17 1 35 1 246 1 345 2 18 1 249 1 371 2 184 1 302 2 107 1 41 1 138 2 
212 1 294 1 43 1 72 1 92 1 24 1 333 1 193 1 313 1 52 3 298 1 54 1 170 1 123 1 56 1 262 2 339 1 180 1 35 1 17 1 246 1 345 1 370 1 249 1 371 1 302 1 107 1 138 2 41 1 
294 4 142 4 189 3 43 3 92 4 192 1 95 4 52 36 194 1 53 1 297 1 151 1 6 3 56 4 262 17 339 3 14 1 265 3 345 7 208 1 302 19 107 3 108 1 214 1 220 2 225 1 275 1 313 4 226 1 76 1 170 4 172 1 124 1 80 1 246 4 249 3 135 1 327 1 251 1 138 6 187 1 
294 3 142 4 189 4 43 4 92 3 192 1 95 4 52 33 194 1 53 1 297 1 151 1 6 3 56 4 262 17 339 4 14 1 265 3 345 7 208 1 302 16 107 4 108 1 214 2 220 2 225 1 275 1 313 3 226 1 76 1 170 4 172 1 124 1 80 1 246 4 249 4 327 1 135 1 251 1 138 8 187 1 
214 1 189 6 142 4 294 7 43 2 192 1 220 1 92 7 95 4 274 2 225 1 275 1 226 1 313 7 194 1 52 47 53 1 297 1 151 1 172 1 6 4 170 7 56 7 262 24 339 2 124 1 14 1 80 1 265 2 246 7 208 1 345 13 249 2 327 1 251 1 302 23 107 2 108 2 187 1 138 4 
189 3 142 2 294 3 43 2 220 1 92 3 95 2 275 2 226 1 313 3 52 19 297 1 76 1 6 1 170 3 56 3 262 9 339 2 124 1 80 1 265 1 246 3 345 6 249 2 251 1 302 10 268 1 107 2 108 1 138 4 
214 2 294 2 189 2 142 2 43 3 192 1 92 2 220 2 95 4 275 1 226 1 313 2 52 26 194 1 297 1 151 1 6 2 172 1 170 3 56 3 262 14 339 3 124 1 80 2 265 2 246 3 208 1 345 4 249 3 302 12 251 1 107 3 187 1 138 6 
215 1 144 1 305 1 164 1 62 1 233 1 330 1 314 1 127 1 34 1 
131 1 36 1 
209 1 305 1 291 1 164 1 233 1 330 1 205 1 314 1 127 1 
215 1 70 1 300 1 144 1 305 1 281 1 164 1 178 2 62 1 181 1 127 1 314 1 276 1 196 1 171 1 330 1 233 1 159 1 
215 1 70 1 300 1 144 1 305 1 281 1 164 1 178 2 62 1 181 1 127 1 314 1 276 1 196 1 171 1 330 1 233 1 159 1 
215 1 70 1 300 1 144 1 305 1 281 1 164 1 178 2 62 1 181 1 127 1 314 1 276 1 196 1 171 1 330 1 233 1 159 1 
195 1 37 1 244 1 
195 1 37 1 244 1 
309 1 241 1 
309 1 241 1 244 1 
73 1 324 1 
212 2 70 1 113 1 305 1 164 1 73 1 314 1 276 1 54 2 171 1 233 1 154 1 359 1 178 1 127 1 180 2 157 1 324 1 266 1 131 1 36 1 370 2 134 1 159 1 330 1 41 2 270 1 
195 1 37 1 
309 1 241 1 244 1 
68 1 43 1 218 1 162 1 221 1 146 1 257 1 52 2 149 2 27 1 54 2 29 2 153 1 123 1 77 1 262 1 339 1 13 2 31 2 243 1 15 1 180 2 35 1 17 1 249 1 267 1 20 1 302 1 107 1 41 2 138 2 
12 1 218 1 306 1 31 2 50 1 203 1 286 1 287 1 148 1 206 1 149 2 182 1 336 1 169 1 5 1 29 2 153 1 10 1 
57 1 12 1 218 1 306 1 31 1 203 1 286 1 287 1 148 1 206 1 149 1 182 1 169 1 5 1 29 1 153 1 
319 1 12 1 218 1 59 1 221 1 31 1 32 1 243 1 363 1 149 1 336 1 328 1 29 1 153 1 
12 1 218 1 306 1 31 1 50 1 203 1 286 1 287 1 148 1 206 1 149 1 182 1 336 1 169 1 5 1 29 1 153 1 
197 1 
141 1 140 1 1 1 231 1 101 1 181 1 98 1 
141 1 332 1 227 1 3 1 276 1 278 1 231 1 171 1 101 1 78 1 366 1 16 1 181 2 132 1 105 1 38 1 65 1 
319 1 141 2 78 1 338 1 91 1 218 1 22 1 221 2 31 1 166 1 243 1 3 1 295 1 149 1 105 1 132 1 18 1 290 1 100 1 29 1 153 2 8 1 
141 8 142 1 332 3 92 2 48 2 3 2 313 2 194 1 276 1 151 1 231 5 232 1 171 1 6 1 172 1 170 2 101 2 198 5 317 1 56 2 78 2 361 1 16 1 366 6 181 5 245 5 265 1 132 2 105 2 246 2 208 1 372 1 290 1 38 1 187 1 
78 1 93 1 14 1 48 1 225 1 3 1 276 1 105 1 132 1 211 1 171 1 
141 1 1 1 78 1 3 1 181 1 98 1 105 1 132 1 231 1 101 1 
56 2 141 5 338 1 332 5 92 2 366 10 181 5 313 2 245 5 246 2 231 5 170 2 198 5 
276 1 38 1 101 1 171 1 16 1 181 1 
141 2 218 1 221 1 3 2 149 4 276 3 230 2 29 4 231 2 7 1 153 1 171 3 199 1 319 2 78 1 238 1 31 4 32 1 243 1 361 2 179 1 363 1 323 1 16 4 132 2 105 2 158 1 290 2 38 2 
212 2 43 1 218 1 72 2 221 1 52 1 149 1 315 1 316 1 229 1 27 1 54 3 29 1 153 1 174 1 319 1 339 1 31 1 243 1 180 2 17 1 35 1 266 1 18 1 249 1 370 2 184 1 373 1 302 1 107 1 138 2 41 3 
141 1 78 1 332 1 361 1 366 2 3 1 181 2 105 1 132 1 290 1 231 1 101 1 198 1 
164 1 125 1 314 1 
215 1 164 1 293 1 314 1 324 1 
164 1 125 1 314 1 
164 1 125 1 314 1 
288 1 164 1 314 1 
288 1 164 1 314 1 
288 1 164 1 314 1 
164 1 314 1 
233 1 127 1 
189 1 262 1 142 1 339 1 43 1 14 1 225 1 265 1 52 2 53 1 345 1 249 1 151 1 327 1 251 1 302 1 107 1 6 1 138 2 
189 1 142 2 294 1 43 2 225 1 52 5 53 1 151 1 6 1 170 1 56 1 262 3 339 2 14 1 265 1 86 1 246 1 345 2 249 2 327 1 302 2 251 1 107 2 108 1 138 4 
214 1 294 1 142 1 189 2 43 3 92 2 225 1 313 2 52 13 194 1 53 1 151 1 6 1 172 1 170 2 56 2 262 6 339 3 14 1 265 1 86 1 246 2 208 1 345 3 249 3 327 1 302 7 251 1 107 3 138 6 187 1 
214 1 294 2 142 1 189 2 43 3 92 1 225 1 313 1 52 11 194 1 53 1 151 1 6 1 172 1 170 2 56 2 262 7 339 3 14 1 265 1 86 1 246 2 345 4 208 1 249 3 327 1 302 4 251 1 107 3 138 6 187 1 
189 1 262 1 142 1 339 1 43 1 14 1 225 1 265 1 52 2 53 1 345 1 249 1 151 1 327 1 251 1 302 1 107 1 6 1 138 2 
294 1 142 1 189 1 43 1 92 2 313 2 52 12 194 1 151 1 6 1 172 1 170 2 56 2 262 6 339 1 265 1 246 2 345 2 208 1 249 1 302 6 251 1 107 1 138 2 187 1 
214 2 294 2 142 1 189 2 43 4 92 1 225 1 313 1 52 12 194 1 53 1 151 1 6 1 172 1 170 2 56 2 262 7 339 4 14 1 265 1 86 1 246 2 208 1 345 4 249 4 327 1 302 5 251 1 107 4 187 1 138 8 
214 2 294 3 142 1 189 3 43 4 92 2 313 2 52 16 194 1 76 1 151 1 6 1 172 1 170 3 56 3 262 9 339 4 265 1 246 3 208 1 345 6 249 4 302 7 251 1 107 4 187 1 138 8 
189 2 294 2 262 1 14 2 225 2 52 2 53 1 345 4 327 2 302 1 
214 2 294 1 142 1 189 2 43 4 92 1 225 1 313 1 52 12 194 1 53 1 76 1 151 1 6 1 172 1 170 2 56 2 262 7 339 4 14 1 265 1 246 2 208 1 345 3 249 4 327 1 302 5 251 1 107 4 187 1 138 8 
214 1 262 1 294 1 189 1 339 2 43 2 14 1 225 1 52 2 53 1 345 2 249 2 327 1 302 1 107 2 138 4 
53 1 189 1 140 1 345 1 14 1 327 1 225 1 
56 1 189 1 262 2 294 1 339 1 43 1 92 1 313 1 52 4 86 1 246 1 345 2 249 1 302 2 107 1 170 1 138 2 
56 1 189 1 142 2 262 3 294 1 92 1 313 1 265 1 52 7 246 1 345 2 302 4 6 1 170 1 108 1 
214 2 142 2 189 8 294 7 43 2 92 5 274 1 225 5 313 2 52 37 53 1 170 2 6 2 56 5 262 18 339 2 14 5 340 1 246 2 345 15 249 2 211 1 185 1 374 2 327 1 349 1 302 19 107 2 108 1 138 4 
52 1 142 1 302 1 
52 1 262 1 6 1 
56 1 262 3 294 1 189 2 43 1 339 1 338 1 92 1 313 1 52 6 86 1 246 1 345 3 249 1 302 3 107 1 170 1 138 2 
294 1 142 1 189 1 43 1 92 2 313 2 52 12 194 1 151 1 6 1 172 1 170 2 56 2 262 6 339 1 265 1 246 2 345 2 208 1 249 1 302 6 251 1 107 1 138 2 187 1 
56 1 262 3 189 1 294 1 92 1 14 1 225 1 52 6 345 2 374 1 302 3 
214 1 189 5 294 5 43 1 92 3 225 4 52 22 53 1 56 3 262 11 339 1 14 4 340 1 345 10 249 1 211 1 349 1 327 1 374 2 302 11 107 1 138 2 
189 1 345 1 211 1 14 1 225 1 
56 1 262 2 294 1 339 1 43 1 52 2 246 1 345 1 249 1 251 1 107 1 138 2 
56 1 189 1 262 2 294 1 339 1 43 1 92 1 313 1 52 4 246 1 345 2 249 1 302 2 251 1 107 1 170 1 138 2 
214 1 189 1 294 1 262 1 339 3 43 3 14 1 225 1 52 3 345 2 249 3 76 1 349 1 302 2 251 1 107 3 138 6 
0 1 214 2 142 4 294 5 189 6 43 5 92 4 310 1 225 3 313 3 52 28 53 1 76 1 6 3 170 3 56 4 262 13 339 5 14 3 265 1 86 1 246 3 345 11 325 1 249 5 374 1 327 1 349 1 302 15 251 1 107 5 108 1 138 10 
266 1 54 1 284 1 285 1 122 1 41 1 180 1 
202 1 176 1 307 1 284 1 285 1 180 1 342 1 266 1 248 1 54 1 122 1 41 1 
319 1 149 1 140 1 218 1 221 1 29 1 31 1 32 1 153 1 243 1 363 1 
212 1 319 1 218 1 221 1 31 1 243 1 115 1 180 1 149 1 266 1 18 1 370 1 184 1 54 2 29 1 153 1 174 1 41 2 
212 2 304 1 218 1 221 3 334 2 115 1 149 1 230 1 120 1 54 2 29 1 153 1 174 1 31 1 243 2 364 1 180 2 266 1 368 1 18 2 370 1 184 1 348 1 41 2 
212 2 304 1 218 1 221 3 334 2 115 1 149 1 230 1 120 1 54 2 29 1 153 1 31 1 243 2 364 1 180 2 266 1 368 1 301 1 18 2 370 1 184 1 348 1 41 2 
212 1 216 1 91 1 72 1 221 1 334 1 149 1 276 1 316 1 230 1 54 1 29 1 101 1 171 1 320 1 31 1 104 1 181 1 180 1 343 1 370 1 41 1 
212 1 216 1 91 1 72 1 221 1 334 1 149 1 276 1 316 1 230 1 54 1 29 1 101 1 171 1 175 1 320 1 31 1 104 1 181 1 180 1 370 1 41 1 
149 1 218 1 358 1 29 1 31 1 153 1 
319 1 111 1 218 1 22 1 221 1 31 1 243 1 51 1 149 1 354 1 18 1 29 1 153 2 
212 1 189 1 43 2 218 1 221 1 308 1 115 1 225 1 53 1 149 1 315 1 229 1 54 2 29 1 153 1 174 1 123 1 10 1 339 2 14 1 31 1 243 1 180 1 35 2 17 2 345 1 18 1 19 1 249 2 370 1 184 1 267 1 327 1 107 2 41 2 138 4 
1 1 48 1 225 1 3 1 98 1 149 1 276 1 29 1 100 1 171 1 319 1 78 1 238 1 14 1 31 1 132 1 105 1 211 1 270 1 
218 1 22 1 221 2 31 2 243 1 129 1 149 2 18 1 358 1 29 2 8 1 153 2 10 1 
319 1 218 1 221 1 31 4 32 1 243 1 363 1 149 4 29 4 153 1 9 1 139 1 10 1 
111 1 58 1 218 1 221 1 31 1 243 1 149 1 354 1 133 1 18 1 28 1 29 1 153 2 
319 1 149 1 182 1 218 1 5 1 29 1 31 1 279 1 153 1 203 1 
77 1 218 1 306 1 221 1 31 2 243 1 15 1 149 2 29 2 153 1 10 1 
319 1 218 2 221 3 31 5 32 1 243 2 363 1 15 1 81 1 33 1 149 4 230 1 29 5 153 2 139 1 10 1 
319 1 218 2 221 3 31 5 32 1 322 1 243 2 363 1 15 1 81 1 149 4 230 1 29 5 153 2 139 1 10 1 
212 1 319 1 218 1 221 1 31 1 243 1 115 1 180 1 149 1 266 1 18 1 301 1 370 1 184 1 54 2 29 1 153 1 41 2 
111 1 218 1 22 1 221 1 31 1 243 1 51 1 149 1 354 1 18 1 230 1 29 1 153 2 
68 1 163 1 54 1 146 1 257 1 41 1 180 1 161 1 83 1 
252 1 365 1 161 1 
266 1 163 1 269 1 83 1 161 1 
234 1 163 2 334 1 365 1 181 1 83 2 276 2 266 1 368 1 356 1 348 1 101 1 171 2 252 1 173 1 269 2 121 1 270 1 161 1 
118 1 140 1 23 1 2 1 
130 1 118 1 258 1 23 1 250 1 2 1 55 1 
258 1 165 1 67 1 
237 1 239 1 23 1 321 1 335 1 2 1 130 3 118 1 258 3 250 1 87 2 55 1 
130 2 118 1 296 1 258 2 23 1 250 1 2 1 55 1 88 1 
130 1 118 1 258 1 250 1 239 1 169 1 360 1 136 1 55 1 
130 1 118 1 258 1 250 1 239 1 2 1 55 1 
130 1 258 1 23 1 250 1 239 1 2 2 55 1 
318 1 239 1 223 1 2 1 130 2 118 1 258 2 250 2 329 1 55 2 
331 1 71 1 23 1 239 1 360 1 2 1 130 3 296 2 118 2 258 3 250 1 350 1 55 1 
148 1 130 1 258 1 182 1 250 1 239 1 169 1 5 1 55 1 64 1 
331 1 23 1 239 1 25 1 360 1 2 1 130 4 296 2 118 2 258 4 250 2 55 2 88 1 
130 1 118 1 258 1 23 1 250 1 239 1 2 1 55 1 
331 1 23 2 321 1 335 1 360 1 2 2 130 4 296 2 118 3 258 4 74 1 250 1 87 1 55 1 
239 1 23 1 273 1 2 1 116 1 130 2 118 1 296 1 258 2 250 1 55 1 271 1 
239 1 23 1 321 2 335 1 255 1 2 1 130 3 118 1 258 3 250 1 87 2 55 1 
118 2 183 1 210 1 224 2 
130 1 258 1 259 1 250 1 239 1 55 1 
130 2 118 1 296 1 258 2 23 1 250 1 239 1 350 1 2 1 55 1 
186 1 
130 1 118 1 258 1 23 1 250 1 239 1 2 1 55 1 
239 1 23 1 2 1 130 3 296 1 118 1 258 3 250 1 350 1 87 1 55 1 
118 1 331 1 74 1 360 1 
118 1 2 1 

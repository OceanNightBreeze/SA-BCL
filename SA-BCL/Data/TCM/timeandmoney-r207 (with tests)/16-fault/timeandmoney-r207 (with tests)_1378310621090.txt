#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (103,160) 213 (28,31) (28,31) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (103,160) 213 (28,31) (28,31) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (103,160) 213 (28,31) (28,31) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (103,160) 213 (28,31) (28,31) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 257 17 259 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 204 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (89,152) (89,152) (97,120) 107 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 309 124 303 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 309 124 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (112,277) 328 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (112,277) 189 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (112,277) 189 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (112,277) 328 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 345 77 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 1 28 1 1 1 347 1 123 1 162 1 213 1 286 1 167 1 31 1 190 1 
103 1 28 1 1 1 347 1 123 1 162 1 213 1 286 1 167 1 31 1 190 1 
103 1 28 1 1 1 347 1 123 1 162 1 213 1 286 1 167 1 31 1 190 1 
103 1 28 1 1 1 347 1 123 1 162 1 213 1 286 1 167 1 31 1 190 1 
319 1 1 4 99 1 162 1 206 1 286 1 343 1 101 1 154 1 7 1 63 1 74 2 209 2 347 1 212 1 79 3 300 3 190 4 
319 1 1 2 162 1 206 1 180 1 353 1 286 1 7 1 63 1 167 1 347 1 123 1 23 1 300 1 350 1 190 2 
319 1 1 3 162 1 286 2 101 1 7 1 209 1 347 2 123 1 79 1 300 2 160 1 190 3 
319 1 1 9 99 1 271 1 256 1 343 1 101 3 154 1 5 1 7 1 74 2 347 2 79 7 160 1 190 9 162 1 206 1 286 2 63 1 209 4 123 1 333 1 212 1 300 5 
319 1 1 9 99 1 271 1 256 1 343 1 101 3 154 1 5 1 7 1 74 2 347 2 79 7 160 1 190 9 162 1 206 1 286 2 63 1 209 4 123 1 333 1 212 1 300 5 
204 1 287 1 175 1 
234 1 174 2 175 1 
306 2 56 2 357 1 151 2 254 2 84 1 136 2 249 2 
337 1 177 2 339 1 151 2 132 1 254 2 153 1 102 1 181 1 237 1 306 3 56 2 104 1 312 2 136 2 187 1 279 1 221 1 205 1 110 1 313 2 35 1 84 1 207 2 85 1 86 1 39 1 89 1 357 1 295 1 122 1 25 1 359 1 26 2 249 3 301 1 27 1 
217 1 306 1 56 1 357 1 352 1 151 1 254 1 127 1 136 1 249 1 
139 1 262 1 14 1 109 1 29 1 287 1 266 1 56 1 306 1 127 1 220 1 249 1 214 1 175 1 
262 1 14 1 109 2 151 1 254 1 29 1 287 1 56 1 306 1 136 1 127 1 220 2 249 1 214 1 175 1 
109 1 65 1 185 1 220 1 68 1 
109 2 65 1 106 1 185 1 287 1 220 2 175 1 318 1 
109 1 65 1 220 1 
109 1 352 1 151 1 131 1 254 1 217 1 357 1 56 1 306 1 127 1 185 1 136 1 220 1 249 1 
175 1 
109 2 197 1 65 1 185 1 287 1 220 2 175 1 318 1 
257 1 241 1 109 3 105 1 17 1 259 1 261 1 185 2 220 3 326 1 
84 1 204 1 
151 1 254 1 84 2 315 1 56 2 306 2 32 1 136 1 249 2 
57 1 325 1 49 1 
177 1 339 1 84 1 153 1 85 1 86 1 102 1 181 1 306 1 295 1 324 1 312 1 26 1 249 1 205 1 27 1 
151 1 254 2 84 1 315 1 355 1 56 2 306 2 127 1 95 1 317 1 136 2 249 2 
217 1 306 2 56 2 254 2 127 1 136 2 236 1 249 2 
177 1 312 1 153 1 26 1 355 1 
306 3 56 3 151 1 254 3 84 1 317 1 136 3 249 3 
217 1 306 1 56 1 254 1 127 1 136 1 249 1 
306 1 56 1 32 1 151 1 254 1 127 1 136 1 315 1 249 1 
306 1 56 1 151 1 254 1 136 1 315 1 249 1 355 1 
306 2 56 2 139 1 254 1 341 1 84 1 136 1 317 1 249 2 
355 1 
151 1 254 2 315 1 56 2 306 2 57 1 317 1 136 2 325 1 249 2 
177 1 339 1 84 1 153 1 86 1 85 1 102 1 181 1 306 1 295 1 312 1 26 1 249 1 205 1 27 1 
177 1 253 1 339 1 84 1 153 1 86 1 85 1 102 1 181 1 306 1 295 1 312 1 125 1 26 1 249 1 
110 1 313 2 132 1 207 2 285 1 265 1 39 1 118 1 275 1 90 1 57 1 104 2 94 1 25 1 219 1 325 1 187 1 221 1 49 1 
306 1 56 1 14 1 254 1 127 1 136 1 249 1 236 1 
98 1 146 1 
98 1 146 1 
316 1 311 1 
316 1 311 1 
316 1 311 1 
98 1 348 1 146 1 
98 1 348 1 146 1 
98 1 10 1 146 1 
98 2 316 1 311 1 112 1 349 1 146 2 
98 1 348 1 146 1 
327 1 98 1 146 1 
327 1 98 1 146 1 
327 1 98 1 146 1 
304 1 98 1 71 1 254 2 305 1 155 1 56 2 306 2 76 1 10 1 136 2 220 1 161 1 109 1 84 1 267 1 211 1 66 1 67 1 146 1 232 1 198 1 249 2 47 1 
98 2 304 2 109 2 283 1 113 1 320 1 227 1 141 2 305 2 155 2 116 1 267 2 277 1 146 2 232 1 220 2 280 1 161 3 175 1 
99 1 206 1 63 1 
206 1 353 1 63 1 
99 2 128 1 58 1 353 1 63 3 240 1 
99 1 58 1 353 1 195 1 63 2 240 1 
99 1 58 1 353 1 63 2 240 2 
234 1 151 1 56 1 105 1 11 2 60 1 109 5 241 1 287 1 118 1 210 1 65 1 247 1 172 1 248 1 334 1 127 1 174 3 249 1 175 2 131 1 254 1 75 2 306 1 217 1 76 1 78 1 185 4 261 1 136 1 220 5 352 1 38 2 354 1 265 1 357 1 268 3 45 2 269 1 318 1 
151 1 131 1 254 1 100 1 217 1 56 1 306 1 185 2 136 1 220 2 109 2 352 1 287 1 289 1 357 1 65 1 127 1 249 1 68 1 48 1 175 1 
234 1 151 1 131 1 254 1 75 1 217 1 306 1 56 1 76 1 105 1 11 2 136 1 185 2 261 1 220 3 60 1 326 1 241 1 109 3 352 1 38 2 354 1 287 1 265 1 118 1 357 1 210 1 268 3 247 1 172 1 248 1 45 2 127 1 269 1 174 3 249 1 175 2 
234 3 255 1 75 2 134 1 76 2 105 1 11 4 261 1 185 3 220 4 60 1 326 1 241 1 109 4 38 4 354 1 287 1 265 2 118 2 210 1 268 5 247 1 172 2 248 2 45 4 174 7 269 2 361 1 175 4 
80 1 204 1 85 1 
85 1 345 1 
30 1 
339 1 85 1 102 1 
22 1 85 1 
339 1 85 1 
64 1 339 1 80 2 85 3 102 1 156 1 
191 1 2 1 216 1 53 1 207 7 265 1 73 1 19 1 8 1 275 2 92 1 104 3 203 2 172 1 94 3 359 4 108 1 
191 1 2 1 216 1 53 1 207 7 265 1 73 1 19 1 8 1 275 2 92 1 104 3 203 2 172 1 94 3 359 4 108 1 
191 1 2 1 216 1 53 1 207 7 265 1 73 1 19 1 8 1 275 2 92 1 104 3 203 2 172 1 94 3 359 4 108 1 50 1 
2 2 216 1 53 1 340 1 8 1 182 1 275 2 104 6 203 1 187 1 108 1 221 1 222 1 110 1 313 2 243 1 207 11 265 1 39 1 118 1 291 1 40 2 92 2 170 1 172 1 298 1 248 1 94 4 359 5 269 1 
2 1 216 1 53 1 340 1 73 1 275 3 104 4 203 2 278 1 187 2 221 2 108 1 110 2 313 4 16 1 191 1 207 9 265 1 19 1 39 2 92 1 172 1 94 4 359 5 
319 1 149 1 1 2 99 1 128 1 177 1 181 1 7 1 307 1 347 1 312 1 79 1 12 1 190 2 223 1 34 1 284 1 162 1 206 1 353 1 286 1 329 1 86 1 63 2 123 1 42 1 300 1 26 1 233 1 46 1 
319 1 149 1 1 3 99 1 128 1 177 1 181 1 7 1 274 1 347 1 312 1 310 1 79 2 12 1 190 3 223 1 34 1 284 1 206 1 353 1 165 1 286 1 329 1 86 1 63 2 123 1 42 1 300 1 26 1 233 1 
319 1 149 1 1 2 128 1 99 1 177 1 181 1 7 1 274 1 312 1 79 2 12 1 190 2 223 1 284 1 206 1 353 1 165 1 86 1 63 2 123 1 42 1 300 1 26 1 233 1 
223 2 1 1 149 2 282 1 177 1 339 1 153 1 86 1 85 1 142 1 286 1 181 1 20 1 91 1 347 1 239 1 123 2 310 1 312 1 358 1 12 2 26 1 190 1 
149 1 1 1 99 1 128 1 177 1 181 1 307 1 347 1 312 1 12 1 190 1 223 1 34 1 284 1 162 1 206 1 353 1 165 1 286 1 329 1 86 1 63 2 123 1 42 1 26 1 233 1 
168 1 
0 1 153 2 56 1 105 1 239 1 13 1 109 3 241 1 14 1 18 1 62 1 208 1 117 1 20 1 210 1 294 1 121 1 296 1 171 1 65 2 126 1 334 1 127 1 26 2 249 1 214 1 177 2 339 1 338 1 29 1 181 1 306 1 312 2 261 1 220 3 139 1 262 1 85 1 86 1 266 1 268 2 41 1 43 1 45 2 201 2 318 1 
0 1 29 1 306 1 56 1 220 3 139 1 109 3 262 1 14 1 224 1 18 1 266 1 296 1 197 1 65 2 43 1 126 1 127 1 249 1 201 2 214 1 318 1 
0 1 150 1 29 1 306 1 56 1 220 3 139 1 109 3 262 1 14 1 18 1 287 1 266 1 296 1 197 1 65 1 43 1 126 1 127 1 249 1 201 3 214 1 175 1 318 1 
0 1 130 1 150 1 29 1 306 1 56 1 220 3 139 1 109 3 262 1 14 1 224 1 18 1 287 1 266 1 296 1 197 1 65 2 43 1 126 1 127 1 249 1 201 3 214 1 318 1 175 1 
0 1 3 1 151 1 56 2 105 1 159 1 13 2 14 1 109 3 241 1 18 1 62 1 287 1 119 1 296 1 171 1 121 2 65 3 126 1 334 1 127 2 249 2 214 1 175 1 130 2 131 1 254 1 29 1 217 1 306 2 136 1 261 1 220 3 224 2 262 1 139 1 352 1 266 1 357 1 268 1 145 1 197 1 43 1 45 1 199 1 201 2 318 1 
0 1 29 1 56 1 306 1 105 1 261 1 220 2 13 1 241 1 109 2 139 1 262 1 14 1 18 1 62 1 117 1 266 1 268 1 121 1 296 1 171 1 43 1 45 1 126 1 334 1 127 1 249 1 201 2 214 1 
0 1 3 1 151 1 131 1 254 1 29 1 217 1 306 2 56 2 105 1 136 1 261 1 220 2 13 2 139 1 109 2 262 1 14 1 241 1 352 1 18 1 287 1 62 1 266 1 119 1 357 1 268 1 121 2 171 1 296 1 43 1 45 1 126 1 334 1 127 2 199 1 249 2 201 2 214 1 175 1 
0 1 3 1 151 1 131 1 254 1 29 1 217 1 306 2 56 2 105 1 136 1 261 1 220 2 13 2 139 1 109 2 262 1 14 1 241 1 352 1 18 1 287 1 62 1 266 1 119 1 357 1 268 1 121 2 171 1 296 1 43 1 45 1 126 1 334 1 127 2 199 1 249 2 201 2 214 1 175 1 
0 1 302 1 151 1 131 1 254 1 29 1 217 1 306 2 56 2 105 1 136 1 261 1 220 2 13 2 139 1 109 2 262 1 14 1 241 1 352 1 192 1 18 1 287 1 62 1 266 1 119 1 357 1 268 1 121 2 296 1 43 1 45 1 126 1 334 1 127 2 249 2 201 2 214 1 175 1 176 1 
0 1 3 1 150 1 151 1 56 2 105 1 13 2 14 1 109 2 241 1 18 1 62 1 287 1 119 1 296 1 171 1 121 2 65 1 126 1 334 1 127 2 249 2 214 1 175 1 130 1 131 1 254 1 29 1 217 1 306 2 136 1 261 1 220 2 224 1 262 1 139 1 352 1 266 1 357 1 268 1 145 1 43 1 45 1 199 1 201 3 
0 1 3 1 150 1 151 1 56 2 105 1 13 2 14 1 109 2 241 1 18 1 62 1 287 1 119 1 296 1 171 1 121 2 65 1 126 1 334 1 127 2 249 2 214 1 175 1 130 1 131 1 254 1 29 1 217 1 306 2 136 1 261 1 220 2 224 1 262 1 139 1 352 1 266 1 357 1 268 1 145 1 43 1 45 1 199 1 201 3 
0 1 29 1 56 1 306 1 105 1 261 1 220 2 13 1 241 1 109 2 139 1 262 1 14 1 192 1 18 1 62 1 117 1 266 1 268 1 121 1 296 1 43 1 45 1 126 1 334 1 127 1 249 1 201 2 214 1 
53 1 132 1 73 1 275 2 57 1 104 3 203 1 204 1 325 1 187 1 108 1 221 1 110 1 191 1 313 2 207 6 84 2 265 1 19 1 39 1 90 1 172 1 94 2 25 1 359 3 49 1 
337 1 4 1 2 2 132 2 182 1 57 3 9 1 104 7 187 2 325 13 221 2 222 2 110 2 313 4 35 1 84 1 164 1 207 17 265 1 39 2 118 1 291 3 40 4 331 1 172 3 231 1 248 3 94 2 25 1 359 10 269 3 49 13 
110 1 337 1 313 2 61 1 35 1 132 1 207 2 322 1 355 1 39 1 104 1 231 1 25 1 359 1 187 1 221 1 
97 1 110 1 313 2 177 1 35 1 132 1 152 1 207 1 153 1 355 1 39 1 89 1 104 1 312 1 107 1 231 1 25 1 187 1 26 1 221 1 
51 1 72 1 337 1 177 8 339 2 254 1 132 2 153 2 181 2 202 1 306 1 56 1 59 1 104 1 312 7 239 1 136 1 187 2 221 2 281 1 110 2 313 4 35 1 264 1 207 2 165 1 86 2 85 3 39 2 20 1 196 1 90 1 25 2 317 1 359 1 26 8 46 1 249 1 301 2 
151 1 132 1 254 1 275 1 56 1 306 1 57 1 104 2 136 1 325 1 187 1 221 1 138 1 110 1 313 2 207 3 315 1 265 1 39 1 118 1 172 1 94 1 231 1 248 1 25 1 359 1 269 1 249 1 49 1 
110 1 313 2 252 1 2 1 132 1 207 2 39 1 90 1 57 1 172 1 94 1 25 1 359 2 269 1 325 1 187 1 221 1 49 1 
110 1 313 2 132 1 207 2 285 1 265 1 39 1 118 1 275 1 90 1 57 1 104 2 94 1 25 1 325 1 187 1 221 1 49 1 
2 1 132 1 275 1 57 2 104 2 187 1 325 2 221 1 110 1 313 2 207 4 265 1 39 1 118 1 90 1 172 1 248 1 94 2 25 1 359 2 269 1 49 2 
51 1 110 1 313 2 252 1 2 1 132 1 207 2 39 1 57 1 172 1 94 1 25 1 359 2 269 1 325 1 187 1 221 1 49 1 
51 1 110 1 313 2 132 1 207 2 285 1 265 1 39 1 118 1 275 1 57 1 104 2 94 1 25 1 325 1 187 1 221 1 49 1 
51 1 110 1 313 2 2 1 132 1 207 2 39 1 57 1 172 1 94 1 248 1 25 1 359 2 269 1 325 1 187 1 221 1 49 1 
110 1 313 2 2 1 132 1 207 2 39 1 57 1 172 1 94 1 248 1 25 1 359 2 269 1 325 1 187 1 221 1 49 1 
337 1 177 1 339 1 132 1 153 1 102 1 181 1 306 1 104 1 312 1 187 1 205 1 221 1 110 1 313 2 35 1 84 1 207 2 86 1 85 1 39 1 89 1 295 1 25 1 359 1 26 1 249 1 27 1 
337 1 253 1 177 1 339 1 132 1 153 1 102 1 181 1 306 1 104 1 312 1 187 1 221 1 110 1 313 2 35 1 84 1 207 2 228 1 86 1 85 1 39 1 295 1 125 1 25 1 359 1 26 1 249 1 
110 1 313 2 2 1 132 1 207 2 39 1 57 1 172 1 94 1 231 1 248 1 25 1 359 2 269 1 325 1 187 1 221 1 49 1 
2 1 177 1 339 1 132 1 152 1 102 1 181 1 306 1 57 1 312 1 325 1 187 1 205 1 221 1 110 1 313 2 207 2 86 1 85 1 39 1 89 1 295 1 172 1 94 1 248 1 25 1 359 2 269 1 26 1 46 1 249 1 49 1 27 1 
2 1 151 1 132 1 254 1 56 1 306 1 57 1 136 1 187 1 325 1 221 1 110 1 313 2 207 2 315 1 39 1 172 1 94 1 231 1 248 1 25 1 336 1 359 2 269 1 249 1 49 1 
303 1 2 1 272 1 182 1 275 1 104 5 81 1 187 2 221 2 222 1 110 2 313 4 16 1 82 1 207 9 265 1 39 2 118 1 291 1 40 2 297 1 124 1 172 1 248 1 94 2 359 4 270 1 269 1 
303 1 2 1 272 1 182 1 275 1 104 5 81 1 187 2 221 2 222 1 110 2 313 4 16 1 82 1 207 9 265 1 39 2 118 1 291 1 40 2 297 1 124 1 172 1 248 1 94 2 359 4 270 1 269 1 
303 1 52 1 2 3 53 1 340 1 272 1 73 1 182 2 275 4 309 1 104 14 203 1 187 2 108 1 221 2 222 1 110 2 191 1 313 4 16 1 82 2 207 32 166 1 144 1 265 4 19 1 39 2 118 3 291 3 40 3 331 1 297 1 332 1 124 1 172 5 24 1 248 4 94 7 359 18 269 4 
303 1 2 2 272 1 182 1 275 2 104 7 81 1 187 2 221 2 222 1 110 2 313 4 16 1 82 1 83 1 207 13 265 2 39 2 118 2 291 1 244 1 40 2 297 1 124 1 172 2 248 2 94 4 359 6 270 1 269 2 
303 1 52 1 2 1 340 1 272 2 182 2 309 1 104 8 187 2 221 2 110 2 313 4 16 1 82 2 207 18 166 1 265 1 144 1 39 2 118 1 291 2 40 2 297 1 332 1 124 2 172 2 94 1 24 1 248 2 359 10 269 2 
304 1 98 1 277 1 227 1 163 1 305 1 146 1 155 1 116 1 267 1 
10 1 67 1 
245 1 304 1 98 1 263 1 305 1 146 1 155 1 346 1 267 1 
348 1 189 1 
327 1 112 1 328 1 
109 1 98 1 304 1 113 1 320 1 227 1 141 1 305 1 155 1 116 1 267 1 277 1 232 1 146 1 220 1 280 1 161 2 175 1 
109 1 98 1 304 1 113 1 320 1 227 1 141 1 305 1 155 1 116 1 267 1 277 1 232 1 146 1 220 1 280 1 161 2 175 1 
109 1 98 1 304 1 113 1 320 1 227 1 141 1 305 1 155 1 116 1 267 1 277 1 232 1 146 1 220 1 280 1 161 2 175 1 
348 1 112 1 189 1 
348 1 112 1 189 1 
327 1 328 1 
327 1 112 1 328 1 
71 1 66 1 
304 1 98 1 71 1 320 1 254 2 305 1 54 1 155 1 306 2 56 2 76 1 10 1 185 1 136 2 220 1 161 1 109 1 84 1 141 1 267 1 211 1 66 1 67 1 146 1 198 1 249 2 47 1 
306 1 56 1 249 1 69 1 
99 1 128 1 177 2 284 1 36 1 206 1 353 1 86 1 165 1 329 1 181 1 63 2 312 2 260 1 12 1 299 1 26 2 233 1 46 1 
99 1 128 1 177 1 284 1 206 1 353 1 165 1 329 1 86 1 181 1 63 2 258 1 312 1 12 1 299 1 26 1 233 1 
282 1 177 1 339 1 36 1 153 1 86 1 85 1 181 1 88 1 20 1 312 1 239 1 12 1 26 1 
99 1 128 1 177 1 284 1 36 1 206 1 353 1 165 1 329 1 86 1 181 1 63 2 312 1 260 1 12 1 299 1 26 1 233 1 
225 1 
268 1 21 1 45 1 204 1 287 1 157 1 175 1 
234 1 105 1 261 1 220 1 241 1 109 1 314 1 287 1 288 1 268 1 171 1 65 1 45 1 334 1 174 1 175 2 318 1 
241 1 177 1 339 1 179 1 153 1 86 1 85 1 102 1 156 1 181 2 345 1 77 1 105 1 312 1 334 1 261 1 26 1 
52 1 234 3 182 1 105 1 11 5 261 1 241 1 38 5 166 1 144 1 265 2 287 1 118 2 291 1 268 7 40 1 332 1 172 2 24 1 45 4 248 2 334 1 174 6 269 2 175 4 
70 1 3 1 53 1 151 1 131 1 254 1 217 1 306 1 56 1 105 1 261 1 136 1 220 1 108 1 241 1 109 1 352 1 226 2 265 1 19 1 330 1 357 1 268 2 172 2 45 2 334 1 127 1 249 1 
241 1 287 1 157 1 268 1 21 1 105 1 45 1 334 1 261 1 175 1 
70 1 234 5 226 2 38 5 265 2 118 2 268 5 276 1 172 2 248 2 45 5 11 5 269 2 174 10 175 5 
109 1 65 1 287 1 220 1 175 1 318 1 
177 4 339 1 338 1 153 2 181 1 344 1 183 2 105 2 135 1 312 4 239 1 218 1 261 2 220 3 326 1 241 2 109 3 86 1 85 1 208 2 20 1 210 2 268 2 41 1 65 4 45 2 334 1 26 4 318 2 
177 1 151 2 339 1 254 2 132 1 153 1 102 1 181 1 306 3 56 2 104 1 312 1 136 2 187 1 221 1 205 1 110 1 313 2 35 1 84 1 207 1 86 1 85 1 39 1 89 1 357 1 295 1 122 1 25 1 26 1 249 3 27 1 
241 1 234 2 38 2 287 2 208 1 210 1 268 1 105 1 203 1 11 2 45 2 334 1 261 1 174 4 175 4 
304 1 129 1 305 1 
304 1 129 1 305 1 
71 1 304 1 305 1 6 1 116 1 
304 1 129 1 305 1 
304 1 305 1 133 1 
304 1 305 1 133 1 
304 1 305 1 133 1 
304 1 305 1 
98 1 146 1 
52 1 53 1 73 1 182 1 275 2 104 4 203 1 187 1 221 1 108 1 110 1 313 2 16 1 191 1 207 8 265 1 19 1 39 1 291 1 40 1 172 1 94 2 359 4 
52 1 2 1 53 1 73 1 182 1 275 2 104 5 203 1 184 1 187 2 108 1 221 2 222 1 110 2 191 1 16 1 313 4 207 11 265 1 19 1 39 2 291 1 40 2 172 2 248 1 94 3 359 6 269 1 
52 1 2 1 182 1 104 7 184 1 187 2 221 2 110 2 313 4 16 1 207 13 166 1 144 1 265 2 39 2 118 2 291 1 40 1 332 1 172 2 248 2 24 1 94 1 359 6 269 2 
52 1 2 2 53 1 340 1 73 1 182 1 275 3 104 7 203 1 184 1 187 3 108 1 221 3 110 3 191 1 313 6 16 1 207 17 166 1 144 1 265 2 19 1 39 3 118 1 291 1 40 1 332 1 172 3 248 2 94 5 24 1 359 10 269 2 
52 1 53 1 73 1 182 1 275 2 104 4 203 1 187 1 221 1 108 1 110 1 313 2 16 1 191 1 207 8 265 1 19 1 39 1 291 1 40 1 172 1 94 2 359 4 
52 1 2 1 182 1 275 1 104 6 187 1 221 1 110 1 313 2 16 1 207 12 166 1 144 1 265 2 39 1 118 2 291 1 40 1 332 1 172 2 248 2 94 2 24 1 359 6 269 2 
52 1 2 1 340 1 182 1 104 5 184 1 187 3 221 3 110 3 313 6 16 1 207 12 166 1 144 1 265 1 39 3 118 1 291 1 40 1 332 1 172 2 94 1 248 2 24 1 359 7 269 2 
52 1 2 2 340 1 182 1 275 2 104 5 187 3 81 1 221 3 110 3 16 1 313 6 207 12 166 1 144 1 265 1 39 3 118 1 291 1 40 1 332 1 172 2 248 2 94 4 24 1 359 7 269 2 
191 1 2 3 53 3 207 7 265 1 73 2 19 1 275 3 104 4 172 1 94 6 359 3 108 3 
52 1 2 1 340 1 182 1 104 5 187 3 81 1 221 3 110 3 16 1 313 6 207 12 166 1 144 1 265 1 39 3 118 1 291 1 40 1 332 1 172 2 94 1 248 2 24 1 359 7 269 2 
110 2 313 4 191 1 2 1 53 1 340 1 207 8 265 1 73 1 19 1 39 2 275 2 104 4 203 1 172 1 94 3 359 4 187 2 221 2 108 1 
275 2 191 1 104 3 203 1 53 1 172 1 94 2 207 6 359 3 204 1 265 1 73 1 19 1 108 1 
110 1 313 2 2 1 207 4 265 1 39 1 118 1 275 1 104 2 184 1 172 1 94 2 248 1 359 2 269 1 187 1 221 1 
40 1 104 1 359 1 207 2 182 1 291 1 
2 4 53 2 340 1 73 1 275 4 104 12 203 1 187 1 108 2 221 1 222 1 110 1 313 2 191 1 207 25 164 1 265 5 19 2 39 1 330 1 118 2 291 2 40 2 331 1 172 5 248 2 94 8 359 13 269 2 
40 1 104 1 207 1 
207 1 359 1 291 1 
110 1 313 2 2 1 207 6 265 1 39 1 118 1 275 2 276 1 104 3 184 1 172 1 248 1 94 3 359 3 269 1 187 1 221 1 
52 1 2 1 182 1 275 1 104 6 187 1 221 1 110 1 313 2 16 1 207 12 166 1 144 1 265 2 39 1 118 2 291 1 40 1 332 1 172 2 248 2 94 2 24 1 359 6 269 2 
2 1 53 1 207 6 265 1 19 1 275 1 104 3 172 1 94 2 359 3 108 1 
110 1 313 2 191 1 2 1 53 1 340 1 207 3 73 1 39 1 275 1 170 1 104 2 94 2 359 1 187 1 108 1 221 1 
110 1 313 2 16 1 2 2 53 2 207 10 265 2 19 1 39 1 330 1 275 3 104 5 172 2 94 5 359 5 187 1 221 1 108 2 
110 1 16 1 313 2 2 1 207 2 39 1 172 1 94 1 359 2 269 1 187 1 221 1 
110 1 16 1 313 2 2 1 207 4 265 1 39 1 118 1 275 1 104 2 172 1 94 2 248 1 359 2 269 1 187 1 221 1 
110 3 16 1 313 6 2 1 53 1 340 1 207 3 39 3 275 1 170 1 104 2 94 2 359 1 81 1 187 3 221 3 108 1 
2 3 53 2 340 1 73 1 182 1 275 3 104 8 184 1 81 1 187 4 221 4 108 2 110 4 313 8 16 1 191 1 243 1 207 15 265 2 19 1 39 4 330 1 291 1 40 1 170 1 172 2 94 6 359 7 
306 1 56 1 139 1 115 1 341 1 84 1 249 1 
306 1 56 1 139 1 229 1 230 1 115 1 341 1 37 1 84 1 249 1 188 1 250 1 
239 1 177 1 312 1 339 1 204 1 153 1 86 1 85 1 26 1 181 1 20 1 
177 1 339 1 254 1 84 1 153 1 85 1 86 1 102 1 181 1 56 1 306 2 295 1 312 1 317 1 136 1 26 1 249 2 27 1 
14 1 262 1 177 1 339 2 254 2 84 1 85 3 86 1 102 2 181 1 183 1 56 2 306 2 295 1 22 1 312 1 127 1 317 1 136 1 26 1 249 2 360 1 27 1 
253 1 177 2 339 2 254 2 273 1 102 2 181 1 183 1 306 2 56 2 312 2 136 1 262 1 14 1 84 1 86 1 85 3 295 1 22 1 317 1 127 1 26 2 249 2 360 1 
177 3 339 1 153 1 273 1 102 1 181 1 183 1 345 1 312 3 80 1 220 2 111 1 109 2 86 1 85 4 287 1 65 1 22 1 93 1 26 3 360 1 214 1 175 1 
109 2 177 3 339 1 153 1 273 1 85 4 86 1 287 1 102 1 181 1 183 1 345 1 22 1 312 3 65 1 80 1 220 2 26 3 360 1 214 1 175 1 251 1 
177 1 312 1 264 1 86 1 26 1 181 1 
147 1 72 1 178 1 177 7 339 2 153 2 102 1 156 1 181 3 202 1 59 1 312 6 264 1 86 2 85 3 165 1 356 1 196 1 26 7 46 1 301 1 
97 1 2 1 53 2 152 1 102 1 56 1 275 4 57 1 104 7 203 1 325 1 205 1 108 2 110 2 207 14 19 2 330 1 295 1 172 3 25 2 127 1 26 1 249 2 27 1 177 1 339 1 254 1 132 2 73 1 181 1 306 2 312 1 136 1 187 2 33 1 221 2 313 4 191 1 84 3 86 1 85 1 265 3 39 2 89 1 231 1 94 5 95 1 317 1 359 7 46 1 49 1 
177 1 153 1 157 1 345 1 105 2 312 1 135 1 80 1 261 2 185 1 220 3 241 2 109 3 194 1 85 2 287 1 87 1 268 1 21 1 120 1 65 2 45 1 334 2 26 1 214 1 175 1 251 1 318 1 
177 1 339 1 179 1 264 1 85 1 86 1 156 1 102 1 181 2 30 1 312 1 80 1 26 1 
177 4 339 1 153 1 273 1 85 1 86 1 181 1 20 1 246 1 312 4 239 1 26 4 46 1 
147 1 15 1 177 2 339 1 85 1 86 1 102 1 181 2 183 1 356 1 312 2 44 1 26 2 96 1 
177 1 312 1 284 1 206 1 353 1 153 1 86 1 26 1 181 1 63 1 
59 1 177 2 312 2 339 1 342 1 86 1 85 1 165 1 26 2 181 1 46 1 
72 1 177 5 339 2 153 1 85 3 86 2 181 2 183 1 20 1 202 1 246 1 59 1 239 1 312 4 26 5 46 1 
72 1 177 5 339 2 153 1 85 3 86 2 181 2 183 1 20 1 246 1 59 1 239 1 312 4 173 1 26 5 46 1 
177 1 253 1 339 1 254 1 84 1 153 1 85 1 86 1 102 1 181 1 56 1 306 2 295 1 312 1 317 1 136 1 26 1 249 2 
147 1 177 1 178 1 339 1 85 1 86 1 156 1 102 1 181 2 183 1 356 1 312 1 26 1 
293 1 158 1 186 1 169 1 
293 1 109 1 158 1 185 1 186 1 321 1 143 1 220 1 169 1 215 1 
293 1 186 1 69 1 169 1 
186 1 321 1 143 1 
319 1 300 1 204 1 7 1 
319 1 1 1 347 1 300 1 286 1 7 1 190 1 
223 1 123 1 190 1 
148 1 319 1 1 3 140 1 162 1 114 1 286 1 7 1 347 1 300 1 350 2 190 3 
319 1 1 2 347 1 79 1 300 1 286 1 7 1 74 1 190 2 
1 1 347 1 99 1 162 1 206 1 300 1 343 1 286 1 63 1 209 1 190 1 
319 1 1 1 347 1 162 1 300 1 286 1 190 1 
319 2 1 1 347 1 162 1 286 1 7 1 190 1 
319 1 1 2 193 1 162 1 286 2 55 1 323 1 347 2 300 1 190 2 
319 1 1 3 347 1 333 1 79 2 162 1 300 2 256 1 286 1 101 1 7 1 209 1 190 3 
319 1 1 2 128 1 99 1 162 1 206 1 353 1 286 1 7 1 63 2 347 1 79 1 300 1 351 1 190 2 
319 1 1 4 347 2 79 2 162 1 300 2 286 2 101 1 154 1 7 1 209 1 74 1 190 4 
319 1 1 1 347 1 162 1 300 1 286 1 7 1 190 1 
148 1 319 2 1 4 235 1 114 1 286 1 101 1 7 2 209 1 347 1 79 2 350 1 300 3 190 4 
319 1 1 2 162 1 286 1 5 1 7 1 347 1 79 1 300 1 335 1 200 1 190 2 
148 1 319 1 1 3 162 1 114 2 286 1 7 1 347 1 238 1 300 1 350 2 190 3 
292 2 308 1 300 2 290 1 
1 1 347 1 162 1 137 1 286 1 190 1 
319 1 1 2 347 1 79 1 162 1 300 1 256 1 286 1 7 1 190 2 
242 1 
319 1 1 1 347 1 162 1 300 1 286 1 7 1 190 1 
319 1 1 3 162 1 256 1 286 1 7 1 347 1 79 1 350 1 300 1 190 3 
235 1 300 1 101 1 209 1 
319 1 300 1 

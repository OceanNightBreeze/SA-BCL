#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) (62,118) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) (62,118) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 190 116 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 190 116 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 334 72 68 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 334 28 68 156 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 334 72 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 334 72 68 156 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 294 41 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (231,270) 208 259 (115,240) 266 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 334 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 334 28 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 334 28 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 42 45 (231,270) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 42 45 (91,242) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (231,270) 208 259 (115,240) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 294 41 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (1,80,125,248) (1,80,125,248) (1,80,125,248) 83 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
263 1 311 1 40 1 
163 1 263 1 312 2 
100 2 161 1 217 2 137 2 124 2 200 2 202 1 181 2 
134 1 217 2 137 2 178 1 299 1 301 2 181 3 139 1 184 2 226 1 56 1 310 1 100 3 231 1 315 1 145 1 267 1 269 1 268 1 22 1 23 1 66 2 67 1 200 2 202 1 203 1 34 1 247 1 36 1 283 2 161 1 124 2 43 1 211 2 332 1 212 1 45 1 
239 1 100 1 161 1 217 1 137 1 124 1 200 1 245 1 181 1 254 1 
137 1 181 1 245 1 308 1 100 1 38 1 263 1 311 1 314 1 18 1 189 1 103 1 168 1 27 1 
217 1 137 1 200 1 181 1 245 1 308 1 100 1 38 1 263 1 311 1 314 2 124 1 103 1 168 1 27 2 
324 1 314 1 165 1 150 1 27 1 
263 1 311 1 257 1 314 2 165 1 303 1 150 1 27 2 
314 1 150 1 27 1 
239 1 217 1 137 1 200 1 245 1 181 1 161 1 100 1 314 1 124 1 165 1 105 1 254 1 27 1 
263 1 
263 1 311 1 257 1 314 2 177 1 165 1 150 1 27 2 
217 1 174 2 257 1 92 1 137 1 181 1 96 1 50 2 182 2 98 1 140 2 100 1 263 1 311 1 314 5 105 1 150 2 27 5 239 1 273 1 200 1 33 1 158 1 245 1 78 1 79 4 120 2 161 1 121 4 284 1 124 1 165 2 130 2 254 1 131 1 255 1 86 1 336 1 
40 1 202 1 
217 1 137 2 200 1 181 2 202 2 100 2 124 1 101 1 148 1 
215 1 160 1 151 1 
134 1 202 1 181 1 203 1 226 1 56 1 283 1 310 1 100 1 250 1 231 1 267 1 145 1 211 1 66 1 45 1 
134 1 217 1 137 1 181 2 203 1 160 1 226 1 56 1 310 1 9 1 283 1 100 2 124 1 231 1 145 1 267 1 330 1 211 1 66 1 45 1 
100 3 217 3 137 3 124 3 200 1 202 1 181 3 330 1 
239 1 100 1 217 1 137 1 124 1 245 1 181 1 
100 1 217 1 137 1 124 1 101 1 200 1 245 1 181 1 148 1 
134 1 217 3 137 3 301 2 181 4 139 1 184 1 226 1 56 1 310 1 9 1 308 1 100 4 313 1 314 1 13 1 231 1 315 1 145 1 267 1 269 1 103 1 148 1 23 1 66 1 67 1 27 1 200 2 202 1 203 1 245 1 247 1 34 1 283 1 161 1 38 1 124 3 43 1 330 1 211 1 332 1 212 1 168 1 45 1 
100 2 217 1 137 2 124 1 202 1 189 1 181 2 330 1 132 1 
217 3 137 3 200 1 245 1 181 3 308 1 9 1 100 3 58 1 38 1 263 1 314 1 313 1 124 3 148 1 103 1 330 2 168 1 27 1 
217 2 137 2 200 1 181 2 160 1 100 2 124 2 148 1 330 1 151 1 
134 1 202 1 181 1 203 1 226 1 56 1 283 1 310 1 100 1 231 1 267 1 145 1 211 1 66 1 45 1 
134 1 242 1 198 1 245 1 202 1 181 1 226 1 321 1 56 1 283 1 310 1 100 1 267 1 145 1 211 1 66 1 45 1 
215 2 174 1 299 2 301 2 139 1 184 4 228 1 315 1 269 1 23 1 106 1 151 2 67 1 194 1 71 1 276 1 114 1 199 1 32 1 244 1 160 2 43 1 130 1 332 2 
100 1 38 1 217 1 137 1 124 1 245 1 181 1 238 1 
217 4 137 5 200 1 181 5 202 1 9 1 100 5 123 1 124 4 326 1 189 1 148 1 330 2 132 1 
239 1 100 2 217 2 137 2 124 2 245 1 181 2 238 1 
176 1 180 1 
176 1 180 1 
141 1 155 1 
141 1 155 1 
141 1 155 1 
176 1 180 1 104 1 
141 1 176 2 15 1 155 1 180 2 224 1 
164 1 176 1 180 1 
176 1 180 1 104 1 
176 1 180 1 104 1 
176 1 180 1 84 1 
176 1 180 1 84 1 
176 1 180 1 84 1 
195 1 87 3 30 1 136 1 176 2 258 1 222 2 180 2 7 2 224 1 162 1 263 1 39 2 314 2 188 1 147 2 191 2 107 1 27 2 
87 1 217 2 176 1 137 2 180 1 222 1 7 1 181 2 99 1 260 1 54 1 100 2 314 1 17 1 191 1 107 1 27 1 202 1 318 1 164 1 39 1 124 2 251 1 333 1 
110 1 49 1 185 1 
110 1 229 1 185 1 
292 1 110 3 229 1 256 1 49 2 335 1 
110 2 229 1 256 1 49 1 329 1 335 1 
110 2 229 1 256 1 49 1 335 2 
174 1 90 1 257 1 50 1 305 1 54 1 260 1 140 1 59 2 311 1 263 2 312 3 314 5 150 1 27 5 71 1 112 2 276 1 246 2 120 1 119 1 79 3 121 2 163 1 323 1 165 4 286 1 130 1 287 1 331 1 333 1 86 1 
174 3 257 1 48 5 50 2 305 3 304 1 260 4 140 2 309 1 311 1 263 5 312 9 314 9 150 6 237 1 27 9 69 1 241 1 71 3 112 6 276 3 246 6 120 2 79 8 121 6 163 3 284 1 323 2 324 5 165 7 128 1 286 1 130 3 331 2 86 1 
174 1 50 1 305 1 260 1 140 1 59 1 311 1 263 3 314 3 312 4 27 3 71 1 276 1 112 2 246 2 119 1 120 1 79 3 121 2 163 2 284 1 323 1 165 2 287 1 331 1 130 1 
174 2 50 1 305 2 260 2 140 1 309 1 59 2 311 1 263 4 312 7 314 4 27 4 241 1 71 2 112 4 276 2 246 4 120 1 119 1 79 5 121 4 163 3 284 1 323 1 165 3 128 1 287 1 331 1 130 2 
40 1 56 1 193 1 
74 1 56 1 
196 1 
145 1 56 1 
145 1 234 1 186 1 193 2 56 3 310 1 
145 1 56 1 310 1 
113 1 56 1 
273 1 174 1 218 1 277 1 199 1 299 3 184 6 282 1 82 1 207 1 102 1 64 1 130 1 106 2 332 3 255 1 336 1 
273 1 174 1 218 1 277 1 199 1 299 3 184 6 282 1 82 1 207 1 102 1 64 1 130 1 106 2 332 3 255 1 336 1 
273 1 174 1 218 1 277 1 199 1 299 3 184 6 282 1 81 1 82 1 207 1 102 1 64 1 130 1 106 2 332 3 255 1 336 1 
47 1 218 2 174 5 92 1 298 4 301 2 299 17 139 1 305 3 184 34 307 1 142 1 315 1 64 2 102 7 106 13 67 1 273 3 277 1 276 3 71 3 199 6 282 1 82 1 207 1 126 3 43 1 166 1 167 1 130 5 332 17 334 1 255 1 169 1 336 3 
47 1 174 1 218 1 301 4 299 4 139 2 184 8 315 2 64 1 102 1 106 3 67 2 273 1 277 1 199 2 243 1 282 1 207 1 43 2 130 1 332 4 255 1 46 1 336 1 
125 1 83 1 248 1 80 1 
125 1 248 1 118 1 80 1 
292 1 1 2 221 2 138 1 49 1 226 1 185 1 227 1 57 1 229 1 11 1 62 1 267 1 25 1 235 1 66 1 110 2 272 1 76 1 80 2 283 1 249 1 285 1 211 1 133 1 
125 1 248 1 118 1 80 1 
125 1 83 1 248 1 80 1 
262 1 
88 1 257 3 181 1 100 1 263 2 267 1 18 1 189 1 103 1 24 2 27 5 271 1 35 1 117 1 120 1 283 2 121 2 38 1 206 2 211 2 290 1 134 2 293 2 296 2 220 2 137 1 223 1 50 1 51 1 53 1 226 1 55 1 140 1 56 1 308 1 311 1 60 1 312 2 314 5 230 1 145 1 150 6 66 2 236 1 316 2 154 4 75 1 317 1 245 1 79 2 163 2 253 2 331 1 168 1 86 1 
88 1 293 1 257 1 154 2 137 1 177 1 245 1 181 1 117 1 308 1 100 1 38 1 314 3 230 1 18 1 189 1 103 1 150 2 168 1 27 3 290 1 271 1 
88 1 296 1 257 1 137 1 177 1 181 1 308 1 100 1 311 1 263 1 230 1 314 3 18 1 103 1 189 1 150 1 27 3 271 1 154 3 245 1 117 1 38 1 168 1 290 1 
88 1 293 1 257 1 296 1 137 1 177 1 181 1 308 1 100 1 311 1 263 1 230 1 314 3 18 1 103 1 189 1 150 2 27 3 271 1 154 3 245 1 117 1 38 1 206 1 168 1 290 1 
88 1 257 3 177 1 181 1 100 1 263 5 18 1 103 1 189 1 190 1 24 2 26 1 27 5 271 1 116 1 117 1 120 1 121 1 38 1 206 4 289 1 290 1 293 4 296 4 137 1 220 2 50 1 51 1 140 1 308 1 143 1 311 5 314 5 230 1 150 7 316 2 154 6 75 1 245 1 79 1 163 2 253 2 168 1 86 1 
88 1 257 2 181 1 100 1 263 2 18 1 103 1 189 1 24 2 27 4 271 1 117 1 120 1 121 1 38 1 206 2 290 1 293 2 296 2 137 1 220 2 223 1 50 1 51 1 140 1 308 1 311 1 314 4 230 1 312 2 150 4 316 2 154 4 75 1 245 1 79 1 163 2 253 2 168 1 86 1 
88 1 293 2 296 2 257 2 220 2 137 1 181 1 50 1 51 1 140 1 308 1 100 1 143 1 263 1 311 1 230 1 314 4 18 1 103 1 189 1 190 1 24 2 26 1 150 4 316 2 27 4 271 1 154 4 75 1 245 1 117 1 79 1 120 1 121 1 163 2 38 1 206 2 253 2 168 1 290 1 86 1 
88 1 293 2 296 2 257 2 220 2 137 1 181 1 50 1 51 1 140 1 308 1 100 1 143 1 263 1 311 1 230 1 314 4 18 1 103 1 189 1 190 1 24 2 26 1 150 4 316 2 27 4 271 1 154 4 75 1 245 1 117 1 79 1 120 1 121 1 163 2 38 1 206 2 253 2 168 1 290 1 86 1 
88 1 293 2 296 2 257 2 2 2 137 1 181 1 50 1 51 1 8 1 140 1 308 1 100 1 263 1 311 1 312 2 230 1 314 4 18 1 103 1 189 1 24 2 26 1 150 4 27 4 271 1 275 2 154 4 157 1 279 1 245 1 117 1 79 1 120 1 121 1 38 1 206 2 253 2 168 1 290 1 86 1 
88 1 293 1 296 1 154 3 137 1 116 1 245 1 181 1 117 1 308 1 100 1 38 1 206 1 314 2 230 1 18 1 190 1 189 1 103 1 150 1 168 1 27 2 290 1 271 1 
88 1 293 1 296 1 154 3 137 1 116 1 245 1 181 1 117 1 308 1 100 1 38 1 206 1 314 2 230 1 18 1 190 1 189 1 103 1 150 1 168 1 27 2 290 1 271 1 
88 1 293 2 296 2 257 2 2 2 137 1 223 1 50 1 181 1 51 1 140 1 308 1 100 1 263 1 311 1 312 2 230 1 314 4 18 1 189 1 103 1 24 2 150 4 27 4 271 1 275 2 154 4 279 1 245 1 117 1 79 1 120 1 121 1 38 1 206 2 253 2 168 1 290 1 86 1 
273 1 174 1 277 1 199 1 299 2 301 2 202 2 139 1 184 5 282 1 315 1 40 1 269 1 43 1 23 1 130 1 106 1 332 3 67 1 255 1 336 1 194 1 
215 11 174 1 297 1 298 3 301 4 299 8 139 2 305 2 184 14 142 1 102 1 315 2 233 1 269 1 23 2 106 2 151 4 67 2 29 1 31 1 274 1 276 2 71 1 199 1 202 1 160 11 36 1 126 3 43 2 130 2 212 1 332 6 334 1 
134 1 216 1 217 1 137 1 301 2 299 1 181 2 139 1 184 2 226 1 56 1 310 1 9 1 100 2 231 1 145 1 267 1 315 1 269 1 23 1 66 1 151 1 67 1 29 1 202 1 203 1 36 1 283 1 250 1 124 1 43 1 328 1 330 1 211 1 212 1 332 1 45 1 291 1 
134 1 217 1 153 1 137 1 301 2 181 1 139 1 184 1 283 1 9 1 100 1 124 1 315 1 269 1 43 1 330 1 23 1 211 1 332 1 212 1 66 1 67 1 29 1 
134 2 217 1 294 1 137 1 179 1 301 4 299 1 181 1 139 2 225 1 184 2 226 2 56 3 100 1 60 1 19 1 267 2 315 2 145 2 146 1 269 2 22 2 23 2 66 8 67 2 194 1 70 1 317 1 36 1 283 8 124 1 210 1 43 2 330 1 211 7 213 1 212 1 332 1 133 1 
215 1 217 1 174 1 137 1 301 2 299 1 181 1 139 1 305 1 184 3 100 1 315 1 269 1 148 1 23 1 106 1 151 1 67 1 29 1 276 1 71 1 199 1 200 1 160 1 205 1 124 1 43 1 130 1 332 2 
215 1 276 1 32 1 301 2 299 2 160 1 139 1 184 2 102 1 315 1 269 1 43 1 23 1 106 1 130 1 151 1 67 1 194 1 
215 1 174 1 71 1 114 1 199 1 301 2 160 1 139 1 184 2 315 1 269 1 43 1 23 1 106 1 151 1 332 2 67 1 194 1 
215 2 174 1 299 2 301 2 305 1 139 1 184 4 315 1 102 1 269 1 23 1 106 2 151 2 67 1 194 1 276 1 71 1 199 1 160 2 43 1 130 1 332 2 
215 1 276 1 32 1 301 2 299 2 160 1 139 1 184 2 225 1 102 1 315 1 269 1 43 1 23 1 106 1 130 1 151 1 67 1 
215 1 174 1 71 1 114 1 199 1 301 2 160 1 139 1 184 2 225 1 315 1 269 1 43 1 23 1 106 1 151 1 332 2 67 1 
215 2 174 1 299 2 301 2 305 1 139 1 225 1 184 4 315 1 102 1 269 1 23 1 106 2 151 2 67 1 276 1 71 1 199 1 160 2 43 1 130 1 332 2 
215 2 174 1 299 2 301 2 305 1 139 1 184 4 315 1 102 1 269 1 23 1 106 2 151 2 67 1 276 1 71 1 199 1 160 2 43 1 130 1 332 2 
134 1 299 1 301 2 181 1 139 1 184 2 226 1 56 1 310 1 100 1 231 1 145 1 267 1 315 1 269 1 23 1 66 1 67 1 202 1 203 1 247 1 36 1 283 1 43 1 211 1 212 1 332 1 45 1 
134 1 301 2 181 1 183 1 139 1 184 1 226 1 56 1 310 1 100 1 145 1 267 1 315 1 269 1 23 1 66 1 67 1 242 1 198 1 245 1 202 1 321 1 283 1 43 1 211 1 212 1 332 1 45 1 
215 2 174 1 299 2 301 2 305 1 139 1 184 4 315 1 102 1 269 1 23 1 106 2 151 2 67 1 29 1 276 1 71 1 199 1 160 2 43 1 130 1 332 2 
215 2 174 1 299 2 301 2 181 1 139 1 305 1 184 4 226 1 56 1 310 1 100 1 231 1 102 1 267 1 145 1 315 1 269 1 23 1 106 2 151 2 66 1 67 1 71 1 276 1 199 1 203 1 160 2 247 1 204 1 283 1 210 1 43 1 130 1 211 1 332 2 45 1 
215 1 174 1 217 1 137 1 301 2 299 2 181 1 139 1 305 1 184 3 100 1 102 1 315 1 269 1 148 1 23 1 106 1 151 1 67 1 29 1 111 1 71 1 276 1 200 1 160 1 124 1 43 1 130 1 332 1 
174 3 298 2 301 4 299 9 97 1 139 2 305 3 184 19 142 1 265 2 315 2 102 3 106 6 67 2 68 1 276 3 71 3 72 1 199 3 156 1 243 1 159 2 126 1 43 2 130 3 332 10 288 1 334 1 170 1 214 1 
72 2 156 1 298 1 243 1 299 2 301 2 159 1 139 1 184 4 315 1 126 1 43 1 332 2 334 1 67 1 170 1 68 2 
174 2 5 1 298 4 301 4 299 10 97 1 139 2 305 2 184 21 142 1 265 1 315 2 102 2 106 3 28 1 67 2 68 1 276 2 71 2 72 2 199 1 156 1 243 1 159 3 126 3 43 2 130 2 332 11 334 3 170 1 214 1 
174 2 5 1 298 3 301 4 299 8 97 1 139 2 305 2 184 17 142 1 265 1 315 2 102 2 106 4 67 2 68 1 276 2 71 2 72 2 199 2 156 1 243 1 159 2 126 2 43 2 130 2 332 9 334 2 170 1 214 1 
174 1 298 1 301 2 299 4 139 1 184 9 315 1 106 1 67 1 68 1 273 1 277 1 72 1 156 1 199 1 243 1 159 1 282 1 126 1 43 1 130 1 332 5 334 1 170 1 255 1 336 1 
294 1 3 1 137 2 179 1 301 2 299 1 181 2 139 1 184 2 100 2 315 1 269 1 22 2 23 1 149 1 66 2 67 1 29 1 197 1 278 1 36 1 283 2 41 1 43 1 211 2 212 1 332 1 
292 1 110 2 89 1 172 1 272 1 93 1 73 1 49 1 185 1 226 1 283 2 227 1 229 1 285 1 267 1 210 1 211 2 66 2 133 1 
292 1 110 2 172 1 272 1 73 1 49 1 185 1 226 1 283 1 227 1 229 1 285 1 267 1 209 1 211 1 66 1 133 1 
134 1 89 1 173 1 317 1 226 1 56 1 283 1 60 1 16 1 285 1 267 1 145 1 211 1 66 1 
292 1 110 2 89 1 172 1 272 1 93 1 73 1 49 1 185 1 226 1 283 1 227 1 229 1 285 1 267 1 211 1 66 1 133 1 
122 1 
40 1 131 1 78 1 
257 1 220 1 50 1 140 1 263 2 311 1 312 1 314 1 150 1 316 1 27 1 75 1 79 1 120 1 121 1 163 1 86 1 
134 1 259 1 300 1 50 1 186 1 226 1 140 1 56 4 310 1 266 1 145 1 267 2 270 1 66 1 193 1 74 2 115 1 120 1 79 1 283 1 208 1 211 1 331 1 86 1 
217 1 137 1 298 1 181 1 50 1 182 1 53 1 140 1 100 1 311 1 263 2 312 2 63 1 105 1 28 1 239 1 112 2 200 1 33 1 245 1 246 2 79 2 120 1 161 1 121 2 163 1 124 1 126 1 331 1 254 1 334 1 86 1 
174 1 217 1 92 1 137 1 181 1 50 1 182 2 140 1 100 1 143 1 314 1 105 1 27 1 239 1 273 1 200 1 33 1 245 1 120 1 79 2 121 2 161 1 124 1 130 2 254 1 86 1 255 1 336 1 
50 1 131 1 120 1 140 1 86 1 
174 2 276 2 112 5 71 2 33 1 246 5 182 2 305 2 79 5 121 5 163 5 61 1 263 5 312 10 130 2 
263 1 311 1 257 1 314 1 150 1 27 1 
134 2 295 1 0 1 257 2 95 1 50 2 226 2 53 2 56 2 55 1 140 2 310 1 60 1 314 3 187 1 267 3 145 2 236 1 66 4 150 4 27 3 317 1 280 2 319 1 320 1 120 2 79 2 283 4 121 2 284 1 129 1 211 4 331 2 86 1 
134 1 217 2 137 2 301 2 181 3 139 1 184 1 226 1 56 1 310 1 100 3 231 1 315 1 267 1 145 1 269 1 23 1 66 1 67 1 200 2 202 1 203 1 34 1 247 1 283 1 161 1 124 2 43 1 211 1 332 1 212 1 45 1 
112 2 246 2 50 1 53 1 140 1 120 1 79 1 121 2 163 2 311 2 263 4 312 4 207 1 331 1 86 1 
135 1 7 1 191 1 
258 1 17 1 201 1 7 1 191 1 
135 1 7 1 191 1 
135 1 7 1 191 1 
7 1 191 1 306 1 
7 1 191 1 306 1 
7 1 191 1 306 1 
7 1 191 1 
176 1 180 1 
47 1 273 1 174 1 277 1 199 1 299 3 301 4 139 2 184 7 282 1 102 1 315 2 43 2 130 1 106 2 332 4 67 2 255 1 336 1 
273 1 174 1 277 1 199 1 299 2 184 5 282 1 40 1 106 1 130 1 332 3 255 1 336 1 
174 1 71 1 276 1 199 1 301 2 299 2 139 1 305 1 184 4 325 1 315 1 102 1 43 1 106 2 130 1 332 2 67 1 
298 1 299 1 126 1 184 2 332 1 334 1 
47 1 174 3 298 2 299 8 301 2 305 2 139 1 184 17 142 1 102 1 315 1 233 1 106 3 67 1 273 1 31 1 277 1 71 2 276 2 199 2 282 1 126 2 43 1 130 3 332 9 255 1 336 1 
298 1 184 1 332 1 
299 1 126 1 184 1 
174 1 276 1 71 1 199 2 301 2 299 3 139 1 305 1 184 6 61 1 325 1 315 1 102 1 43 1 130 1 106 3 332 3 67 1 
243 1 298 1 299 1 301 2 139 1 184 2 315 1 126 1 43 1 332 1 67 1 28 1 334 1 
273 1 174 1 199 1 299 3 184 6 102 1 130 1 106 2 332 3 255 1 336 1 
47 1 273 1 277 1 199 1 299 1 301 2 139 1 184 3 282 1 12 1 102 1 315 1 43 1 106 2 332 2 67 1 336 1 
273 2 174 2 92 1 199 3 243 1 301 2 299 5 139 1 184 10 315 1 102 2 43 1 106 5 130 2 332 5 67 1 255 1 336 2 
276 1 243 1 301 2 299 2 139 1 184 2 315 1 102 1 43 1 130 1 106 1 67 1 
174 1 71 1 276 1 199 1 243 1 301 2 299 2 139 1 305 1 184 4 315 1 102 1 43 1 106 2 130 1 332 2 67 1 
47 1 273 1 199 1 243 1 301 6 299 1 139 3 184 3 12 1 315 3 102 1 43 3 106 2 332 2 67 3 214 1 336 1 
47 2 174 5 298 4 301 10 299 15 139 5 305 3 184 33 307 1 142 1 12 1 315 5 102 5 106 11 67 5 273 3 277 1 276 3 71 3 199 6 243 1 282 1 325 1 126 3 43 5 167 1 130 5 332 18 334 1 255 2 169 1 336 3 214 1 
47 1 174 4 92 1 298 1 301 4 299 13 139 2 305 2 184 24 261 1 14 1 102 4 315 2 106 8 28 1 67 2 273 2 277 1 276 2 71 1 199 4 243 1 77 1 282 1 322 1 126 1 43 2 130 5 332 11 334 1 255 2 336 2 
47 1 174 2 298 2 301 6 299 11 139 3 305 3 184 19 261 1 142 1 14 1 315 3 102 2 106 4 28 1 67 3 273 1 277 1 276 3 71 1 199 2 243 1 77 1 282 1 322 1 325 1 126 1 43 3 130 4 332 8 334 1 255 1 336 1 
243 1 298 1 299 1 301 2 139 1 184 2 315 1 126 1 43 1 332 1 67 1 28 1 334 1 
174 3 92 1 298 1 301 4 299 7 139 2 184 15 102 3 315 2 106 6 28 1 67 2 273 2 277 1 199 3 243 1 282 1 325 1 126 1 43 2 130 3 332 8 334 1 255 2 336 2 
47 1 174 4 92 1 298 1 301 4 299 13 139 2 305 2 184 24 261 1 14 1 102 4 315 2 106 8 28 1 67 2 273 2 277 1 276 2 71 1 199 4 243 1 77 1 282 1 322 1 126 1 43 2 130 5 332 11 334 1 255 2 336 2 
243 1 298 1 299 1 301 2 139 1 184 2 315 1 126 1 43 1 332 1 67 1 28 1 334 1 
243 1 298 1 299 1 301 4 139 2 184 2 325 1 315 2 126 1 43 2 332 1 67 2 28 1 334 1 
243 1 298 1 299 1 301 4 139 2 184 2 315 2 126 1 43 2 332 1 67 2 28 1 334 1 214 1 
273 4 174 2 92 1 277 1 199 5 299 5 184 10 282 1 207 1 102 4 106 9 130 2 332 5 255 2 336 4 
243 1 298 1 299 1 301 4 139 2 184 2 315 2 126 1 43 2 332 1 67 2 28 1 334 1 214 1 
100 1 175 1 137 1 202 1 181 1 189 1 132 1 
175 1 137 1 202 1 181 1 100 1 327 1 21 1 20 1 189 1 44 1 132 1 171 1 
134 1 60 1 267 1 145 1 40 1 317 1 211 1 66 1 226 1 56 1 283 1 
134 1 217 1 137 1 202 1 181 2 226 1 56 1 310 1 283 1 100 2 124 1 231 1 145 1 267 1 330 1 211 1 66 1 45 1 
217 1 113 1 137 1 181 1 280 1 226 1 56 3 310 2 283 1 100 1 124 1 231 1 145 2 267 1 42 1 330 1 211 1 66 1 45 1 
217 1 242 1 113 1 137 1 181 1 280 1 226 1 56 3 310 2 283 1 100 1 124 1 145 2 267 1 42 1 330 1 211 1 66 1 45 1 
217 1 91 1 137 1 181 1 56 1 100 1 311 1 263 1 314 1 105 1 66 1 27 1 239 1 74 1 200 1 245 1 280 1 283 1 161 1 124 1 211 1 254 1 
217 1 137 1 181 1 56 1 100 1 311 1 263 1 314 1 105 1 270 1 66 1 27 1 239 1 74 1 200 1 245 1 280 1 283 1 161 1 124 1 211 1 254 1 
267 1 211 1 66 1 213 1 226 1 283 1 
134 2 70 1 294 1 219 1 186 1 226 2 56 3 283 7 310 1 187 1 19 1 145 2 267 3 146 1 22 1 210 1 129 1 211 6 213 1 66 7 133 1 
174 1 217 1 137 1 299 2 301 4 181 2 139 2 184 5 226 1 56 1 310 1 100 2 231 1 145 1 267 1 315 2 269 2 23 2 106 1 66 1 67 2 29 1 197 1 240 1 273 1 277 1 199 1 202 2 203 1 247 1 204 1 282 1 283 1 124 1 43 2 210 1 330 1 130 1 211 1 332 3 255 1 45 1 336 1 
134 1 74 1 115 1 259 1 95 1 50 1 56 2 140 1 120 1 283 1 314 1 208 1 165 1 211 1 270 1 66 1 27 1 193 1 86 1 
300 1 186 1 226 1 56 2 283 2 310 1 145 1 267 2 210 1 211 2 213 1 66 2 193 1 
134 1 4 1 317 1 226 1 56 1 283 4 60 1 252 1 267 1 145 1 210 1 211 4 66 4 
280 1 319 1 320 1 226 1 56 1 283 2 310 1 187 1 145 1 267 2 129 1 211 2 66 2 192 1 
110 1 134 1 229 1 267 1 211 1 66 1 185 1 226 1 227 1 283 1 
294 1 41 1 210 1 211 2 66 2 133 1 283 2 
134 1 294 1 4 1 317 1 280 1 226 2 56 3 283 5 60 1 19 1 145 2 267 2 146 1 210 1 211 4 66 5 
134 1 294 1 4 1 317 1 280 1 281 1 226 2 56 3 283 5 60 1 145 2 267 2 146 1 210 1 211 4 66 5 
134 1 217 1 137 1 181 2 226 1 56 1 310 1 100 2 267 1 145 1 66 1 242 1 198 1 202 1 245 1 283 1 124 1 330 1 211 1 45 1 
219 1 280 1 186 1 226 1 56 1 283 1 310 1 187 1 145 1 267 2 129 1 211 1 66 1 
278 1 3 1 137 1 181 1 100 1 37 1 144 1 149 1 109 1 
144 1 127 1 108 1 
37 1 144 1 302 1 202 1 109 1 
302 2 202 1 245 1 308 1 38 1 37 2 263 1 311 1 314 2 313 1 144 1 165 1 127 1 103 1 168 1 108 1 85 1 27 2 109 2 
249 1 138 1 40 1 235 1 
125 1 248 1 80 1 
57 1 11 1 221 1 
125 1 83 1 248 1 80 1 
125 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 6 1 248 1 80 1 
125 1 83 1 248 1 80 1 
110 1 229 1 125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
1 1 221 1 125 1 248 1 65 1 80 2 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
249 2 264 1 232 2 94 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
10 1 
125 1 83 1 248 1 80 1 
125 1 83 1 248 1 80 1 
249 1 152 1 52 1 65 1 
249 1 235 1 

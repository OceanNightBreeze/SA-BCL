#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) 99 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 192 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) 99 1 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 270 21 254 (154,222) 218 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (49,240) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (49,240) 60 132 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (49,240) 60 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 270 21 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 270 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 270 21 146 188 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 270 89 187 (71,280) (13,141) (13,141) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 270 89 187 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 192 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) (112,206) (125,334) 339 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 270 89 187 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 270 21 254 (154,222) 218 197 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) (112,206) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 174 304 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 174 304 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 174 304 115 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 174 304 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 270 249 70 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 270 89 187 (71,280) (71,280) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) 99 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 127 61 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 270 89 187 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 309 274 106 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 309 274 106 186 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 270 21 254 (154,222) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 331 (154,222) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 331 (25,45) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 270 21 146 181 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 270 21 254 (25,45) 233 (112,206) (112,206) (125,334) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 331 (25,45) 120 208 (125,334) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 270 89 187 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 270 21 147 155 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 270 249 70 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 270 249 267 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 270 249 219 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 270 21 254 (154,222) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 270 21 146 181 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 1 303 1 148 1 2 3 151 9 189 1 107 1 235 1 195 2 12 1 160 1 241 1 317 1 275 1 23 2 211 1 169 7 325 1 215 5 82 9 84 1 338 2 142 4 298 1 
51 1 303 1 148 1 2 3 151 9 189 1 107 1 235 1 195 2 12 1 160 1 241 1 317 1 275 1 23 2 211 1 169 7 325 1 215 5 82 9 84 1 338 2 142 4 298 1 
51 1 303 2 148 1 2 3 151 9 189 2 107 2 195 2 12 1 160 1 241 1 23 2 275 1 324 1 211 1 325 1 169 6 29 1 215 5 82 9 84 1 137 1 38 1 338 2 220 1 142 4 297 1 298 2 
51 1 303 2 148 1 2 3 151 9 189 2 107 2 195 2 12 1 160 1 241 1 23 2 275 1 324 1 211 1 325 1 169 6 29 1 215 5 82 9 84 1 137 1 38 1 338 2 220 1 142 4 297 1 298 2 
51 1 303 2 148 1 2 4 151 10 189 2 107 2 195 2 12 1 160 1 241 1 23 2 275 1 324 1 211 1 325 1 169 7 29 1 215 6 82 10 84 1 137 1 38 1 338 2 220 1 142 5 297 1 298 2 
51 1 303 2 148 1 2 2 151 7 189 2 107 2 195 1 12 1 160 1 241 1 23 2 275 1 324 1 325 1 169 4 29 1 215 4 82 7 84 1 137 1 38 1 338 2 220 1 142 3 297 1 298 2 
23 1 148 1 211 1 2 1 325 1 169 3 189 1 151 4 215 3 107 1 82 4 195 2 338 1 12 1 142 2 160 1 241 1 298 1 
23 1 320 1 324 1 303 1 148 1 325 1 215 1 151 2 189 1 107 1 82 2 338 1 220 1 160 1 226 1 255 1 
23 2 275 1 303 1 148 1 325 1 2 1 169 1 151 3 215 2 82 3 338 2 142 1 160 1 
163 1 129 1 123 1 
68 1 5 2 163 1 
257 2 293 1 40 2 42 2 101 2 77 2 184 1 204 2 
257 1 99 1 98 1 101 1 56 1 233 1 193 1 11 2 119 2 270 1 204 1 18 1 21 1 206 1 277 1 25 1 77 1 293 1 40 1 41 1 42 1 254 1 143 2 
257 1 264 1 175 1 319 1 293 1 40 1 42 1 101 1 77 1 204 1 
257 1 163 1 126 1 228 1 247 1 101 1 309 1 79 1 175 1 123 1 122 1 204 1 47 1 66 1 
257 1 163 1 126 1 228 1 101 1 77 1 79 1 175 1 40 1 42 1 123 1 122 1 66 2 204 1 47 2 
202 1 55 1 14 1 66 1 47 1 
163 1 315 1 202 1 55 1 123 1 248 1 66 2 47 2 
55 1 66 1 47 1 
257 1 96 1 319 1 101 1 77 1 264 1 175 1 293 1 40 1 42 1 202 1 47 1 66 1 204 1 
163 1 
163 1 315 1 27 1 202 1 55 1 123 1 66 2 47 2 
257 1 96 1 185 1 101 1 55 2 152 1 264 1 109 5 236 2 314 2 315 1 62 1 202 2 123 2 204 1 66 5 17 1 162 1 319 1 165 1 163 2 283 1 30 4 77 1 33 1 332 1 216 2 333 1 175 1 337 2 293 1 292 2 252 1 40 1 42 1 221 1 256 2 47 5 
257 1 18 1 21 1 25 1 101 1 233 1 193 1 234 1 41 1 40 1 254 1 42 1 11 1 119 1 270 1 143 1 272 1 204 1 
129 1 184 1 
257 2 302 1 101 2 308 1 77 1 40 1 42 1 184 2 204 2 
173 1 0 1 91 1 
233 1 18 1 192 1 193 1 21 1 25 1 41 1 254 1 119 1 11 1 270 1 143 1 
257 5 274 1 101 5 261 1 308 1 77 1 309 1 172 1 234 2 40 4 42 4 184 1 204 5 272 1 
257 2 175 1 319 1 74 1 40 2 42 2 101 2 204 2 
257 3 234 1 40 3 42 3 101 3 77 1 184 1 204 3 
257 1 175 1 319 1 40 1 42 1 101 1 204 1 
257 1 175 1 302 1 40 1 42 1 101 1 77 1 308 1 204 1 
257 3 1 1 228 1 99 1 101 3 308 1 233 1 193 1 234 1 110 1 11 1 119 1 270 1 122 1 204 3 272 1 66 1 18 1 21 1 206 1 126 1 25 1 77 2 79 1 175 1 293 1 41 1 40 3 254 1 42 3 143 1 47 1 
257 2 234 1 274 1 40 1 42 1 101 2 184 1 309 1 204 2 
257 3 163 1 126 1 228 1 52 1 101 3 77 1 308 1 79 1 175 1 234 2 40 3 42 3 110 1 122 1 66 1 47 1 272 1 204 3 
257 2 101 2 308 1 77 1 173 1 234 1 91 1 40 2 42 2 204 2 
233 1 18 1 193 1 21 1 25 1 41 1 254 1 119 1 11 1 270 1 143 1 
18 1 193 1 21 1 218 1 41 1 254 1 222 1 119 1 11 1 270 1 143 1 
301 1 0 2 103 1 191 1 57 2 266 1 7 1 314 1 114 2 203 1 164 1 244 1 75 1 170 1 76 1 330 4 32 1 173 2 134 1 335 2 337 1 91 2 140 1 46 1 
257 1 175 1 74 1 40 1 42 1 101 1 122 1 204 1 
49 1 35 1 
49 1 35 1 
135 1 240 1 
135 1 240 1 
135 1 240 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 35 1 
49 1 132 1 35 1 81 1 60 1 66 1 47 1 
49 1 35 1 81 1 60 1 
189 1 107 1 298 1 
189 1 255 1 107 1 
269 1 229 1 150 1 255 1 298 2 107 3 
269 1 150 1 341 1 255 1 298 1 107 2 
269 1 150 2 255 1 298 1 107 2 
54 2 104 1 55 1 105 1 58 1 5 3 311 1 109 2 59 1 199 1 314 1 62 1 315 1 202 4 123 1 66 5 68 1 243 1 164 1 163 2 276 1 209 1 212 2 30 3 32 1 285 2 216 1 291 1 337 1 292 1 256 1 47 5 
257 1 96 1 101 1 260 1 264 1 6 1 5 3 109 2 199 1 202 5 14 3 123 1 204 1 276 1 212 2 30 3 32 1 285 2 216 1 131 1 291 1 293 1 292 1 40 1 42 1 47 6 55 4 58 1 314 1 315 1 62 1 66 6 68 1 243 2 164 1 163 3 319 1 171 3 77 1 175 1 337 1 256 1 
54 1 58 1 5 4 109 2 59 1 314 1 202 2 123 1 66 3 68 2 243 1 164 1 163 3 276 1 209 1 212 2 30 3 32 1 285 2 216 1 333 1 291 1 337 1 292 1 256 1 47 3 
54 2 58 2 5 7 109 4 59 1 314 2 202 3 123 1 64 1 66 4 68 3 243 2 164 2 163 4 276 1 209 1 212 4 30 5 32 2 285 4 216 1 333 1 250 1 291 1 337 2 292 1 92 1 256 1 47 4 
238 1 129 1 
331 1 
200 1 
21 1 270 1 
329 1 
270 1 
21 1 146 1 270 1 188 1 
17 1 318 1 282 2 3 1 330 7 190 1 310 1 332 1 335 3 337 1 252 1 156 1 314 1 111 1 114 4 203 3 140 2 
17 1 318 1 282 2 3 1 330 7 190 1 310 1 332 1 335 3 337 1 252 1 156 1 314 1 111 1 114 4 203 3 140 2 
17 1 318 1 282 2 3 1 330 7 310 1 190 1 332 1 231 1 335 3 337 1 252 1 156 1 314 1 111 1 114 4 203 3 140 2 
227 1 318 1 156 2 114 1 282 1 330 1 
301 1 3 1 310 1 57 2 266 1 156 1 111 1 314 3 114 8 203 4 162 1 17 2 318 1 244 1 282 2 330 14 332 2 134 1 335 6 337 3 252 2 253 1 138 1 140 3 
303 1 148 1 259 1 229 1 262 1 189 1 151 2 107 2 193 1 196 1 119 1 11 1 160 1 23 1 169 1 326 1 325 1 31 1 215 1 288 1 82 2 178 1 37 1 338 1 41 1 295 1 139 1 143 1 255 1 298 1 
48 1 303 1 148 1 229 1 262 1 189 1 151 3 107 2 193 1 196 1 119 1 11 1 160 1 69 1 23 1 168 1 326 1 169 2 31 1 215 1 82 3 178 1 37 1 338 1 41 1 295 1 139 1 143 1 255 1 298 1 
303 1 148 1 229 1 151 2 189 1 107 2 193 1 196 1 119 1 11 1 160 1 69 1 168 1 326 1 169 2 31 1 215 1 82 2 178 1 37 1 41 1 295 1 143 1 255 1 298 1 
48 1 18 1 23 1 303 2 280 1 326 2 187 1 151 1 82 1 290 1 37 2 89 1 338 1 295 2 11 1 119 1 270 1 141 1 13 1 143 1 
303 1 259 1 229 1 262 1 189 1 151 1 107 2 193 1 196 1 119 1 11 1 23 1 168 1 326 1 325 1 31 1 82 1 178 1 37 1 338 1 41 1 295 1 139 1 143 1 255 1 298 1 
213 1 
257 1 100 2 101 1 263 2 4 1 109 1 268 1 113 1 122 1 123 1 204 1 126 1 207 2 279 3 214 1 30 1 216 1 136 3 292 1 224 2 47 4 228 1 230 1 307 5 55 5 309 1 62 1 315 2 316 3 66 4 68 2 163 1 323 1 72 1 247 1 79 1 175 1 177 1 85 1 88 1 90 1 256 1 
257 1 228 1 100 2 101 1 230 1 307 5 263 2 55 5 4 1 309 1 109 1 268 1 315 2 62 1 113 1 316 3 123 1 122 1 204 1 66 4 68 2 163 1 126 1 207 2 323 1 72 1 279 3 247 1 214 1 30 1 79 1 216 1 175 1 177 1 85 1 136 3 292 1 88 1 90 1 224 2 256 1 47 4 
257 1 228 1 100 1 101 1 306 1 307 2 55 1 309 1 5 1 109 1 315 1 62 1 113 1 117 1 122 1 66 3 204 1 22 1 126 1 323 1 72 1 247 1 214 1 30 1 79 1 216 1 175 1 177 1 292 1 90 1 224 1 95 1 256 1 47 3 
18 2 276 1 187 1 30 1 55 2 216 1 109 1 89 1 292 1 315 1 62 1 63 1 11 2 119 2 118 1 270 1 143 2 16 1 47 2 66 2 256 1 
257 1 228 1 101 1 307 2 55 2 309 1 315 1 316 1 122 1 204 1 66 3 126 1 323 1 72 1 247 1 214 1 27 1 79 1 175 1 177 1 90 1 47 3 
257 1 228 1 101 1 307 3 55 1 309 1 315 1 122 1 123 1 204 1 66 3 126 1 163 1 323 1 72 1 279 1 247 1 214 1 27 1 79 1 175 1 177 1 90 1 47 3 
257 1 228 1 101 1 307 3 55 2 309 1 315 1 316 1 122 1 123 1 204 1 66 3 126 1 163 1 323 1 72 1 279 1 247 1 27 1 214 1 79 1 175 1 177 1 136 1 90 1 47 3 
257 1 100 2 101 1 263 2 4 1 109 1 268 1 113 1 122 1 123 5 204 1 20 1 126 1 207 2 279 4 27 1 214 1 30 1 216 1 136 4 292 1 224 2 47 5 228 1 230 1 307 6 55 7 309 1 315 3 62 1 316 4 66 5 68 2 163 5 323 1 72 1 247 1 79 1 175 1 177 1 85 1 88 1 90 1 256 1 
257 1 100 2 101 1 263 2 5 2 109 1 113 1 122 1 123 1 204 1 126 1 207 2 279 2 214 1 30 1 216 1 136 2 292 1 224 2 47 4 228 1 230 1 307 4 55 4 309 1 62 1 315 2 316 2 66 4 68 2 163 2 323 1 72 1 247 1 79 1 175 1 177 1 90 1 256 1 95 1 
257 1 228 1 100 2 101 1 230 1 307 4 55 4 263 2 309 1 4 1 109 1 268 1 315 2 62 1 113 1 316 2 123 1 122 1 204 1 66 4 68 2 163 1 126 1 207 2 323 1 72 1 279 2 247 1 214 1 30 1 79 1 216 1 175 1 177 1 85 1 136 2 292 1 90 1 224 2 47 4 256 1 
257 1 228 1 100 2 101 1 230 1 307 4 55 4 263 2 309 1 4 1 109 1 268 1 315 2 62 1 113 1 316 2 123 1 122 1 204 1 66 4 68 2 163 1 126 1 207 2 323 1 72 1 279 2 247 1 214 1 30 1 79 1 216 1 175 1 177 1 85 1 136 2 292 1 90 1 224 2 47 4 256 1 
257 2 96 1 100 2 101 2 264 1 5 2 109 1 113 1 117 2 122 1 123 1 204 2 126 1 22 2 214 1 30 1 216 1 293 1 292 1 40 1 42 1 224 2 47 4 228 1 306 1 307 2 55 2 309 1 62 1 315 2 66 4 319 1 163 1 323 1 72 1 247 1 327 1 77 1 79 1 175 2 177 1 85 1 180 1 90 1 256 1 
301 1 0 1 3 1 310 1 57 2 266 1 7 1 314 1 114 3 203 2 17 1 244 1 75 1 129 1 282 1 330 6 332 1 173 1 134 1 335 3 337 1 91 1 252 1 140 2 184 2 46 1 
301 2 0 11 53 1 57 4 58 2 266 2 7 2 111 1 314 1 114 8 203 2 271 3 273 3 164 1 322 1 244 2 166 1 75 1 284 1 330 14 32 2 34 1 173 4 335 6 134 2 337 2 91 11 140 1 94 1 182 1 296 1 225 1 184 1 
257 1 301 1 53 1 101 1 57 2 233 1 192 1 193 1 234 1 265 1 266 1 7 1 114 1 116 1 119 1 11 1 270 1 204 1 272 1 18 1 21 1 244 1 322 1 25 1 75 1 284 1 330 2 173 1 134 1 335 1 41 1 40 1 254 1 42 1 143 1 144 1 
257 1 301 1 101 1 57 2 233 1 193 1 234 1 266 1 7 1 112 1 11 1 119 1 270 1 204 1 272 1 18 1 21 1 206 1 244 1 322 1 25 1 75 1 284 1 330 1 334 1 134 1 335 1 41 1 40 1 339 1 254 1 42 1 143 1 
18 1 205 1 301 1 322 1 244 1 277 1 75 1 53 1 187 1 330 2 57 2 335 1 134 1 217 1 266 1 89 1 7 1 114 1 11 2 119 2 270 1 143 2 
257 1 0 1 301 1 101 1 308 1 57 2 58 1 266 1 7 1 314 1 114 1 203 1 158 1 204 1 164 1 244 1 75 1 284 1 77 1 32 1 330 3 173 1 134 1 335 2 337 1 91 1 40 1 42 1 140 1 
0 1 301 1 244 1 75 1 330 2 32 1 191 1 57 2 173 1 134 1 266 1 337 1 91 1 7 1 111 1 114 2 203 1 46 1 
0 1 301 1 164 1 244 1 75 1 330 2 76 1 57 2 173 1 134 1 335 2 266 1 91 1 7 1 314 1 203 1 140 1 46 1 
301 1 0 2 58 1 57 2 266 1 7 1 111 1 314 1 114 2 203 2 164 1 244 1 75 1 32 1 330 4 173 2 134 1 335 2 337 1 91 2 140 1 46 1 
0 1 301 1 244 1 75 1 330 2 32 1 191 1 57 2 173 1 134 1 217 1 266 1 337 1 91 1 7 1 111 1 114 2 203 1 
0 1 301 1 164 1 244 1 75 1 330 2 76 1 57 2 173 1 134 1 335 2 217 1 266 1 91 1 7 1 314 1 203 1 140 1 
301 1 0 2 58 1 57 2 266 1 7 1 111 1 314 1 114 2 203 2 164 1 244 1 75 1 32 1 330 4 173 2 134 1 335 2 217 1 337 1 91 2 140 1 
164 1 0 2 301 1 244 1 75 1 32 1 330 4 57 2 58 1 173 2 335 2 134 1 266 1 337 1 91 2 7 1 314 1 111 1 114 2 203 2 140 1 
233 1 18 1 193 1 21 1 206 1 25 1 41 1 254 1 119 1 11 1 270 1 143 1 
18 1 193 1 21 1 218 1 197 1 41 1 254 1 222 1 119 1 11 1 270 1 143 1 
301 1 0 2 58 1 57 2 266 1 7 1 111 1 314 1 114 2 203 2 164 1 244 1 75 1 284 1 32 1 330 4 173 2 134 1 335 2 337 1 91 2 140 1 
233 1 193 1 288 1 21 1 206 1 25 1 41 1 254 1 112 1 119 1 11 1 270 1 143 1 
257 1 301 1 0 1 101 1 308 1 57 2 58 1 266 1 7 1 314 1 111 1 114 2 203 1 204 1 164 1 244 1 75 1 284 1 77 1 32 1 330 3 173 1 335 1 134 1 337 1 91 1 40 1 42 1 223 1 
301 3 304 1 57 6 58 3 232 1 266 3 198 1 237 2 313 1 111 2 314 3 115 1 114 12 203 4 121 1 271 4 273 3 164 3 244 3 278 1 130 1 330 27 32 3 133 1 174 1 134 3 335 15 176 1 179 3 337 3 138 1 140 2 296 1 225 3 
301 3 304 1 57 6 58 3 232 1 266 3 198 1 237 2 313 1 111 2 314 3 115 1 114 12 203 5 121 1 271 4 273 3 164 3 244 3 278 1 130 1 330 27 32 3 133 1 174 1 134 3 335 15 176 1 179 3 337 3 138 1 140 3 296 1 225 3 
50 1 301 2 304 1 3 1 310 1 57 4 58 6 266 2 198 1 237 1 313 1 111 6 314 6 115 1 114 23 203 11 271 4 17 1 273 4 164 5 24 1 244 2 282 1 330 42 32 6 332 1 133 1 174 1 134 2 335 19 176 1 179 2 337 7 252 1 138 1 140 5 182 2 296 2 225 2 
301 2 304 1 57 4 58 3 266 2 198 1 237 1 111 3 314 3 115 1 114 9 203 6 121 1 271 2 273 1 164 3 244 2 278 2 281 1 130 1 330 19 32 3 134 2 335 10 179 2 337 3 138 1 140 3 296 1 225 1 
273 2 164 1 301 2 244 2 304 2 32 1 330 14 58 1 57 4 133 1 174 1 134 2 335 8 176 1 266 2 337 1 179 2 198 1 237 2 313 1 314 1 114 6 138 1 115 1 203 1 140 1 271 2 225 2 
257 2 301 1 53 1 101 2 57 2 266 1 7 1 9 1 114 1 119 2 11 2 270 1 204 2 205 1 70 1 244 1 322 1 277 2 75 1 128 1 284 1 330 2 249 1 80 1 134 1 335 1 86 1 143 2 
300 1 168 1 326 1 229 1 102 1 305 1 31 1 189 1 107 2 193 1 288 1 178 1 41 1 139 1 11 2 119 2 255 1 143 2 298 1 
168 1 326 1 229 1 305 1 31 1 189 1 107 2 193 1 178 1 41 1 157 1 139 1 11 1 119 1 255 1 143 1 298 1 
300 1 18 1 89 1 71 1 280 1 326 1 187 1 119 1 11 1 270 1 143 1 
300 1 168 1 326 1 229 1 102 1 305 1 31 1 189 1 107 2 193 1 178 1 41 1 139 1 11 1 119 1 255 1 143 1 298 1 
245 1 
257 1 18 1 21 1 206 1 25 1 99 1 101 1 77 1 233 1 193 1 293 1 41 1 40 1 254 1 42 1 11 1 119 1 270 1 143 1 204 1 
68 2 276 1 163 4 212 2 282 1 30 1 285 2 216 1 5 4 109 2 292 1 62 1 63 1 123 2 256 1 
109 1 163 1 221 1 129 1 30 1 123 1 33 1 
230 1 263 1 55 1 5 1 109 1 62 1 315 1 123 1 66 1 68 1 163 2 207 1 30 1 216 1 292 1 256 1 47 1 
18 1 127 1 216 1 193 1 292 1 61 1 41 1 62 1 11 1 119 1 143 1 256 1 
55 1 58 3 5 10 109 5 236 3 313 1 315 1 62 2 314 3 123 1 271 2 66 1 68 5 273 2 163 6 164 3 212 7 30 10 32 3 285 7 216 2 133 1 174 1 337 3 292 2 294 1 296 1 182 1 225 1 47 1 256 2 
257 1 96 1 185 1 101 1 4 1 264 1 109 2 236 2 62 1 314 1 204 1 66 1 162 1 17 1 319 1 30 2 77 1 332 1 216 1 175 1 337 2 292 1 293 1 252 1 40 1 42 1 256 1 47 1 
163 1 30 1 33 1 216 1 109 1 292 1 221 1 62 1 123 1 256 1 
68 5 163 5 164 2 185 1 212 5 149 1 30 5 32 2 285 5 58 2 5 10 109 5 337 2 236 2 314 2 
163 1 315 1 55 1 123 1 66 1 47 1 
18 2 124 1 276 1 187 1 30 1 55 2 216 1 109 1 89 1 292 1 315 1 62 1 63 1 11 2 119 2 118 1 270 1 143 2 66 1 47 1 256 1 16 1 
43 1 10 1 65 1 
161 1 26 1 251 1 43 1 10 1 
43 1 10 1 65 1 
43 1 10 1 65 1 
336 1 43 1 10 1 
336 1 43 1 10 1 
336 1 43 1 10 1 
43 1 10 1 
49 1 35 1 
17 1 301 2 244 2 282 1 3 1 330 8 310 1 57 4 332 1 335 4 134 2 176 1 266 2 337 1 252 1 314 1 111 1 114 4 203 3 140 2 
17 1 282 1 129 1 3 1 330 6 310 1 332 1 335 3 337 1 252 1 314 1 114 3 203 2 140 2 
164 1 301 1 244 1 32 1 330 4 57 2 58 1 335 2 287 1 134 1 266 1 337 1 314 1 111 1 114 2 203 2 140 1 
273 1 164 1 330 7 32 1 58 1 335 4 337 1 314 1 111 1 114 3 203 2 140 1 296 1 225 1 271 2 
301 2 258 1 3 1 310 1 58 2 57 4 266 2 111 4 314 3 114 11 203 9 271 2 17 1 273 2 164 2 244 2 282 1 32 2 330 23 332 2 34 1 335 12 134 2 176 2 337 3 252 2 140 5 296 1 182 1 
335 1 330 1 271 1 
273 1 114 1 330 1 
301 1 164 1 244 1 149 1 330 6 32 1 57 2 58 1 134 1 287 1 335 3 266 1 337 1 111 1 314 1 114 3 203 3 140 2 
50 1 301 1 57 2 58 2 266 1 313 1 111 1 314 2 114 6 203 2 271 1 273 1 164 2 244 1 24 1 330 12 32 2 133 1 335 6 174 1 134 1 337 2 138 1 140 1 225 1 
17 1 330 6 332 1 335 3 337 1 252 1 314 1 111 1 114 3 203 2 140 1 
301 1 244 1 258 1 3 1 330 3 310 1 332 1 57 2 335 2 134 1 176 1 266 1 252 1 111 1 114 1 203 2 140 1 
273 1 301 1 244 1 330 2 57 2 134 1 174 1 335 1 266 1 114 1 138 1 225 1 271 1 
273 1 301 2 244 2 32 1 330 5 58 1 57 4 287 1 134 2 174 1 335 2 266 2 337 1 111 1 114 3 138 1 203 1 296 1 225 1 271 2 
273 1 164 1 301 2 244 2 32 1 330 8 58 1 57 4 133 1 134 2 174 1 335 5 176 1 266 2 337 1 313 1 314 1 114 3 138 1 203 1 140 1 225 1 271 1 
50 1 273 1 164 1 301 2 24 1 244 2 32 2 330 11 58 2 57 4 133 1 134 2 174 1 335 4 176 1 266 2 337 2 313 1 111 1 314 1 114 7 138 1 203 1 225 1 271 1 
273 1 301 1 244 1 330 2 57 2 134 1 174 1 335 1 266 1 114 1 138 1 225 1 271 1 
50 1 273 1 164 2 301 1 24 1 244 1 32 2 330 12 58 2 57 2 133 1 134 1 174 1 335 6 266 1 337 2 313 1 111 1 314 2 114 6 138 1 203 1 225 1 271 1 
273 1 164 1 301 3 244 3 32 1 330 8 58 1 57 6 133 1 134 3 287 1 174 1 335 5 176 1 266 3 337 1 313 1 314 1 114 3 138 1 203 1 140 1 225 1 271 1 
273 1 164 1 301 3 244 3 32 1 130 1 330 8 58 1 57 6 133 1 134 3 174 1 335 5 176 1 266 3 337 1 313 1 314 1 114 3 138 1 203 2 140 2 225 1 271 1 
17 1 3 1 330 7 310 2 332 3 335 4 337 1 252 3 314 1 111 3 114 3 203 6 140 3 
273 1 164 1 301 3 244 3 32 1 130 1 330 8 58 1 57 6 133 1 134 3 174 1 335 5 176 1 266 3 337 1 313 1 314 1 114 3 138 1 203 1 140 1 225 1 271 1 
162 1 17 1 301 1 244 1 330 10 57 2 332 2 134 1 335 5 266 1 337 2 252 2 111 2 314 2 138 1 114 5 203 5 140 3 
301 1 244 1 32 1 330 2 57 2 134 1 266 1 337 1 111 1 138 1 114 2 203 1 
164 1 301 1 244 1 32 1 330 4 57 2 58 1 335 2 134 1 266 1 337 1 314 1 111 1 138 1 114 2 203 2 140 1 
301 3 244 3 258 1 130 1 330 3 57 6 332 1 335 2 134 3 176 1 266 3 252 1 111 1 138 1 114 1 203 2 140 1 
301 5 258 1 3 1 310 1 57 10 58 3 194 1 266 5 111 5 314 5 114 16 203 12 271 4 17 2 273 3 321 1 164 3 244 5 282 1 130 1 330 34 32 3 332 3 335 18 287 1 134 5 176 2 337 5 252 3 138 1 44 1 140 7 296 1 225 1 
274 1 309 1 106 1 
286 1 153 1 274 1 83 1 186 1 309 1 106 1 78 1 
18 1 89 1 129 1 187 1 119 1 11 1 270 1 143 1 
257 1 18 1 21 1 25 1 101 1 234 1 193 1 41 1 40 1 254 1 42 1 11 1 119 1 270 1 143 1 204 1 
257 1 21 1 25 1 101 1 28 1 234 1 193 1 41 1 40 1 254 1 42 1 11 1 119 1 270 1 143 1 204 1 
257 1 21 1 101 1 28 1 234 1 193 1 41 1 40 1 254 1 42 1 222 1 11 1 119 1 270 1 143 1 204 1 
154 1 28 1 119 1 11 1 331 1 143 1 66 1 47 1 
28 1 119 1 11 1 331 1 45 1 143 1 66 1 47 1 
193 1 41 1 201 1 119 1 11 1 143 1 
18 1 21 1 146 1 181 1 119 1 11 1 270 1 143 1 
257 1 301 1 101 1 57 2 233 1 193 1 234 1 266 1 7 1 112 1 9 1 11 1 119 1 270 1 204 1 21 1 206 1 244 1 25 1 75 1 284 1 334 1 134 1 288 1 41 1 40 1 254 1 42 1 143 1 
124 1 18 1 125 1 208 1 331 1 216 1 292 1 62 1 202 1 119 1 11 1 120 1 45 1 143 1 47 1 66 1 256 1 
193 1 41 1 127 1 201 1 119 1 11 1 143 1 
18 1 288 1 89 1 187 1 119 2 11 2 270 1 143 2 
19 1 21 1 147 1 155 1 119 1 11 1 270 1 143 1 
18 1 193 1 41 1 119 1 11 1 31 1 189 1 255 1 143 1 107 1 
288 1 70 1 168 1 119 2 11 2 270 1 143 2 249 1 
18 1 288 1 267 1 119 2 11 2 270 1 143 2 249 1 
18 1 288 1 219 1 119 2 11 2 270 1 143 2 249 1 
257 1 18 1 21 1 101 1 234 1 193 1 41 1 40 1 254 1 42 1 222 1 11 1 119 1 270 1 143 1 204 1 
21 1 146 1 181 1 28 1 119 1 11 1 270 1 143 1 
289 1 167 1 39 1 328 1 184 1 
163 1 126 1 228 1 167 1 328 2 79 1 175 1 36 1 289 2 39 2 110 1 93 1 202 1 159 1 184 1 123 1 122 1 47 2 66 2 
257 1 80 1 289 1 167 1 86 1 39 1 128 1 101 1 204 1 
36 1 167 1 159 1 
51 1 23 1 324 1 148 1 169 1 325 1 151 3 215 1 82 3 338 1 160 1 
2 1 142 1 183 1 215 1 
215 1 160 1 
148 1 129 1 215 1 160 1 
82 1 23 1 148 1 338 1 215 1 160 1 151 1 
82 1 303 1 295 1 
23 1 324 2 210 1 148 1 325 1 215 1 151 3 82 3 312 1 338 1 160 1 299 1 
82 2 23 1 195 1 148 1 338 1 169 1 215 1 160 1 151 2 
23 1 325 1 151 1 215 1 189 1 107 1 82 1 338 1 142 1 241 1 298 1 
82 1 23 1 338 1 325 1 215 1 160 1 151 1 
82 1 23 1 148 1 338 1 325 1 160 2 151 1 
23 2 145 1 73 1 325 1 215 1 151 2 82 2 338 2 340 1 160 1 
51 1 23 1 148 1 325 1 169 2 2 1 151 3 215 2 82 3 84 1 338 1 142 1 160 1 
23 1 148 1 325 1 169 1 229 1 215 1 151 2 189 1 107 2 108 1 82 2 338 1 160 1 255 1 298 1 
23 2 148 1 211 1 325 1 169 2 2 1 151 4 215 2 82 4 195 1 338 2 142 1 160 1 
82 1 23 1 148 1 338 1 325 1 215 1 160 1 151 1 
23 1 324 1 210 1 148 2 169 2 2 1 151 4 215 3 82 4 312 1 338 1 142 1 160 2 183 1 
23 1 148 1 325 1 169 1 215 1 151 2 82 2 235 1 87 1 338 1 8 1 160 1 
23 1 324 2 210 2 148 1 325 1 215 1 151 3 82 3 312 1 338 1 15 1 160 1 
67 1 246 1 239 2 215 2 
82 1 23 1 338 1 325 1 242 1 151 1 
51 1 82 2 23 1 148 1 338 1 169 1 325 1 215 1 160 1 151 2 
97 1 
82 1 23 1 148 1 338 1 325 1 215 1 160 1 151 1 

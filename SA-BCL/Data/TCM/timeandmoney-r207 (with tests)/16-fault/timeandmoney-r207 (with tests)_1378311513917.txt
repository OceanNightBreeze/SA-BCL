#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (62,298) 31 (137,317) (137,317) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (62,298) 31 (137,317) (137,317) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (62,298) 31 (137,317) (137,317) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (62,298) 31 (137,317) (137,317) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (10,164) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (10,164) 207 80 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (10,164) 207 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 159 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (94,272) (94,272) (166,181) 46 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 161 179 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 321 226 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 321 226 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 321 226 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 321 226 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 321 226 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 161 179 284 212 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (58,268) (58,268) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (58,268) 301 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (58,268) (58,268) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 162 1 306 1 241 1 137 1 267 1 62 1 116 1 317 1 75 1 271 1 
31 1 162 1 306 1 241 1 137 1 267 1 62 1 116 1 317 1 75 1 271 1 
31 1 162 1 306 1 241 1 137 1 267 1 62 1 116 1 317 1 75 1 271 1 
31 1 162 1 306 1 241 1 137 1 267 1 62 1 116 1 317 1 75 1 271 1 
84 1 219 3 24 1 115 1 141 2 75 1 77 2 335 1 306 1 162 4 32 3 283 1 241 4 15 1 264 1 267 1 130 1 79 1 
320 1 42 1 67 1 84 1 115 1 116 1 75 1 335 1 306 1 162 2 32 1 241 2 15 1 267 1 248 1 271 1 
219 1 298 1 115 1 116 1 141 1 75 2 306 1 162 3 32 2 241 3 15 1 264 1 267 2 
219 7 84 1 298 1 141 4 306 1 15 1 264 3 267 2 325 1 231 1 24 1 115 1 116 1 75 2 158 1 77 2 335 1 162 9 32 5 283 1 241 9 130 1 79 1 342 1 
219 7 84 1 298 1 141 4 306 1 15 1 264 3 267 2 325 1 231 1 24 1 115 1 116 1 75 2 158 1 77 2 335 1 162 9 32 5 283 1 241 9 130 1 79 1 342 1 
87 1 234 1 333 1 
138 1 12 2 333 1 
43 2 237 1 229 1 201 2 86 2 88 2 289 2 124 2 
43 2 85 1 86 2 177 1 5 2 88 3 136 1 9 1 94 1 13 1 185 1 223 1 56 1 311 2 60 1 187 2 314 1 63 1 188 1 66 1 108 1 229 1 68 1 277 1 331 1 196 1 124 2 125 2 237 1 240 1 201 2 78 1 245 1 172 2 289 3 211 1 40 1 
43 1 237 1 201 1 86 1 203 1 88 1 289 1 257 1 259 1 124 1 
191 1 87 1 88 1 329 1 333 1 332 1 30 1 279 1 280 1 201 1 339 1 203 1 168 1 289 1 
43 1 86 1 87 1 88 1 333 1 332 1 124 1 30 1 280 2 279 1 201 1 339 1 203 1 168 2 289 1 
280 1 218 1 168 1 247 1 65 1 
43 1 86 1 87 1 6 1 88 1 257 1 259 1 65 1 19 1 276 1 333 1 124 1 280 2 237 1 201 1 168 2 203 1 247 1 289 1 
280 1 168 1 65 1 
43 1 86 1 88 1 257 1 259 1 124 1 280 1 237 1 201 1 203 1 168 1 247 1 289 1 19 1 
333 1 
280 2 87 1 6 1 89 1 168 2 247 1 65 1 333 1 
293 1 20 1 1 1 87 1 6 1 258 1 235 1 333 1 53 1 236 2 280 5 282 1 145 1 168 5 167 2 61 2 104 1 247 2 65 2 
229 1 234 1 
132 1 43 1 229 2 86 1 88 2 124 1 201 2 340 1 289 2 
2 1 255 1 304 1 
229 1 5 1 88 1 136 1 9 1 331 1 185 1 261 1 311 1 60 1 245 1 314 1 172 1 63 1 289 1 66 1 
43 2 132 1 229 1 86 1 22 1 88 2 11 1 124 2 201 2 203 1 34 1 289 2 
43 2 201 2 203 1 88 2 102 1 289 2 259 1 124 2 
5 1 311 1 136 1 34 1 172 1 
43 3 229 1 86 1 201 3 22 1 88 3 289 3 124 3 
43 1 201 1 203 1 88 1 289 1 259 1 124 1 
43 1 132 1 201 1 86 1 340 1 203 1 88 1 289 1 124 1 
43 1 132 1 201 1 86 1 88 1 34 1 289 1 124 1 
43 1 229 1 201 2 22 1 88 2 329 1 173 1 289 2 124 1 
34 1 
132 1 43 2 2 1 86 1 22 1 88 2 304 1 124 2 201 2 289 2 
229 1 5 1 88 1 136 1 9 1 331 1 185 1 311 1 60 1 245 1 314 1 172 1 63 1 289 1 66 1 
229 1 217 1 5 1 88 1 136 1 9 1 182 1 331 1 311 1 60 1 314 1 172 1 63 1 289 1 66 1 
2 1 85 2 47 1 255 1 304 1 95 1 13 1 223 1 97 1 56 1 187 2 106 1 319 1 188 1 18 1 108 1 68 1 150 1 193 1 326 1 196 1 161 1 125 3 169 1 
43 1 201 1 339 1 203 1 88 1 102 1 289 1 124 1 
303 1 10 1 
303 1 10 1 
164 1 256 1 
164 1 256 1 
164 1 256 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
303 1 10 1 
280 1 80 1 251 1 168 1 303 1 207 1 10 1 
251 1 303 1 207 1 10 1 
84 1 130 1 335 1 
84 1 248 1 335 1 
199 1 297 1 130 2 327 1 248 1 335 3 
199 1 297 1 302 1 130 1 248 1 335 2 
199 1 297 2 130 1 248 1 335 2 
293 1 1 1 220 1 87 1 6 1 47 1 179 1 12 1 97 1 146 1 61 1 103 1 104 3 65 1 149 1 192 1 71 1 152 1 326 1 25 2 195 1 117 1 236 1 333 1 161 1 280 5 167 1 168 5 243 1 128 1 247 4 
293 3 1 1 218 5 220 4 87 1 178 1 6 1 47 3 179 3 258 1 12 3 183 1 97 3 61 2 104 8 65 6 270 1 149 3 322 5 192 2 71 3 152 2 326 3 73 1 159 1 333 2 236 2 161 3 280 9 168 9 167 2 243 1 247 7 292 1 
43 1 293 1 86 1 220 1 87 1 88 1 47 1 138 1 179 1 257 1 12 2 258 1 259 1 97 1 146 1 61 1 104 3 19 1 149 1 192 1 152 1 71 1 326 1 25 1 117 1 333 2 236 1 124 1 161 1 237 1 280 3 201 1 203 1 167 1 168 3 247 2 289 1 
293 1 220 1 47 1 138 1 179 1 12 2 258 1 97 1 146 1 61 1 104 3 149 1 192 1 71 1 152 1 326 1 25 1 117 1 159 1 333 1 236 1 161 1 280 2 167 1 168 2 247 1 
234 1 331 1 142 1 
91 1 331 1 
202 1 
60 1 9 1 331 1 
93 1 331 1 
60 1 331 1 
215 1 60 1 9 1 331 3 118 1 142 2 
176 1 85 3 193 2 112 1 326 1 28 1 96 1 97 1 223 4 125 7 308 1 186 1 266 1 208 2 246 1 106 3 290 1 
176 1 85 3 193 2 112 1 326 1 28 1 96 1 97 1 223 4 125 7 308 1 186 1 266 1 208 2 246 1 106 3 290 1 
176 1 85 3 193 2 112 1 326 1 28 1 96 1 160 1 97 1 223 4 125 7 308 1 186 1 266 1 208 2 246 1 106 3 290 1 
176 2 85 13 83 1 47 2 179 2 96 2 13 2 260 1 223 12 97 3 308 2 186 1 266 1 147 3 187 4 106 5 227 1 188 2 108 2 68 2 193 3 112 2 72 1 154 3 326 3 28 1 157 1 278 1 161 2 125 25 35 2 246 1 208 3 290 2 
176 1 85 4 13 2 50 1 96 1 97 1 223 5 308 1 262 1 266 1 186 1 187 4 106 4 188 2 108 2 68 2 193 3 112 1 326 1 125 9 35 1 208 2 246 1 290 1 
0 1 219 1 84 1 5 1 139 1 306 1 98 1 311 1 15 1 263 1 267 1 314 1 63 1 105 1 318 1 148 1 70 1 115 1 116 1 327 1 75 1 123 1 335 2 162 2 32 1 241 2 341 1 130 1 172 1 248 1 
0 1 84 1 219 2 5 1 98 1 311 1 15 1 267 1 314 1 63 1 105 1 318 1 148 1 70 1 115 1 116 1 327 1 75 1 197 1 123 1 335 2 162 3 32 1 337 1 241 3 341 1 130 1 172 1 248 1 174 1 
0 1 219 2 84 1 5 1 98 1 311 1 15 1 314 1 63 1 105 1 318 1 115 1 116 1 327 1 123 1 335 2 162 2 32 1 337 1 241 2 341 1 130 1 172 1 248 1 174 1 
81 1 0 2 21 1 323 1 5 1 136 1 116 2 75 1 331 1 197 1 162 1 281 1 126 1 241 1 204 1 311 1 60 1 341 2 267 1 314 1 63 1 172 1 105 2 
0 1 84 1 5 1 306 1 98 1 311 1 263 1 267 1 314 1 63 1 105 1 318 1 148 1 70 1 116 1 327 1 75 1 123 1 335 2 162 1 337 1 241 1 341 1 130 1 172 1 248 1 
252 1 
1 1 249 1 4 1 5 2 87 1 6 3 88 1 253 1 180 1 12 2 184 1 99 2 17 2 104 2 191 1 21 1 119 4 30 1 280 5 279 1 281 1 201 1 203 1 288 1 289 1 41 2 293 2 294 2 135 1 136 2 138 2 140 1 143 1 311 2 60 1 313 2 61 1 314 1 63 1 65 6 316 1 230 2 152 1 329 1 330 1 331 1 333 2 236 1 332 1 239 1 338 2 339 1 168 5 167 1 172 2 
294 1 249 1 191 1 4 1 6 1 89 1 88 1 253 1 329 1 119 2 332 1 30 1 280 3 279 1 239 1 201 1 339 1 203 1 168 3 65 2 288 1 289 1 
249 1 4 1 87 1 88 1 89 1 6 1 253 1 65 1 191 1 329 1 332 1 119 3 333 1 30 1 279 1 280 3 239 1 201 1 338 1 339 1 168 3 203 1 289 1 288 1 
249 1 294 1 4 1 87 1 6 1 89 1 88 1 253 1 65 2 191 1 329 1 332 1 119 3 333 1 30 1 279 1 280 3 239 1 201 1 338 1 339 1 168 3 203 1 289 1 288 1 41 1 
43 1 249 1 294 1 4 1 86 1 87 1 6 1 89 1 88 2 253 1 257 1 259 1 65 2 19 1 191 1 329 1 76 1 333 1 332 1 119 2 124 1 30 1 237 1 280 3 279 1 239 1 201 2 339 1 168 3 203 2 288 1 289 2 41 1 
1 1 249 1 4 1 87 1 88 1 6 2 253 1 180 1 12 2 184 1 99 2 17 2 104 1 191 1 119 4 30 1 279 1 280 4 201 1 203 1 289 1 288 1 41 2 293 1 294 2 135 1 138 2 61 1 313 2 65 4 230 2 329 1 332 1 236 1 333 2 239 1 338 2 339 1 168 4 167 1 
293 1 294 2 249 1 1 1 4 1 87 1 6 2 88 1 135 1 253 1 49 1 138 2 180 1 99 2 100 1 313 2 61 1 17 2 104 1 65 4 191 1 109 1 230 2 329 1 333 1 236 1 332 1 119 4 30 1 279 1 280 4 239 1 338 2 201 1 339 1 168 4 203 1 167 1 289 1 288 1 41 2 
293 1 294 2 249 1 1 1 4 1 87 1 6 2 88 1 135 1 253 1 49 1 138 2 180 1 99 2 100 1 313 2 61 1 17 2 104 1 65 4 191 1 109 1 230 2 329 1 333 1 236 1 332 1 119 4 30 1 279 1 280 4 239 1 338 2 201 1 339 1 168 4 203 1 167 1 289 1 288 1 41 2 
293 1 294 2 249 1 1 1 4 1 87 1 221 2 6 2 88 1 135 1 253 1 49 1 12 2 99 2 313 2 61 1 104 1 65 4 190 1 191 1 153 2 329 1 333 1 236 1 332 1 119 4 30 1 279 1 280 4 239 1 338 2 201 1 339 1 168 4 203 1 167 1 287 1 289 1 288 1 213 1 41 2 
293 1 1 1 249 1 294 3 4 1 87 1 6 2 88 1 135 1 253 1 49 1 138 2 180 1 222 1 99 2 100 1 313 2 61 1 17 2 104 1 65 5 191 1 109 1 230 2 329 1 333 1 236 1 332 1 119 5 30 1 279 1 280 4 239 1 201 1 338 3 339 1 167 1 168 4 203 1 289 1 288 1 41 3 
293 1 1 1 249 1 294 3 4 1 87 1 6 2 88 1 135 1 253 1 49 1 138 2 180 1 222 1 99 2 100 1 313 2 61 1 17 2 104 1 65 5 191 1 109 1 230 2 329 1 333 1 236 1 332 1 119 5 30 1 279 1 280 4 239 1 201 1 338 3 339 1 167 1 168 4 203 1 289 1 288 1 41 3 
293 1 294 2 249 1 1 1 4 1 87 1 221 2 6 2 88 1 135 1 253 1 12 2 184 1 99 2 313 2 61 1 104 1 65 4 191 1 190 1 153 2 329 1 333 1 236 1 332 1 119 4 30 1 280 4 279 1 239 1 338 2 201 1 339 1 167 1 168 4 203 1 288 1 289 1 41 2 
108 1 176 1 2 1 229 2 85 3 68 1 193 2 255 1 326 1 304 1 234 1 13 1 196 1 97 1 223 3 125 6 56 1 308 1 169 1 186 1 266 1 208 1 187 2 246 1 106 2 188 1 
2 10 85 8 7 1 47 2 255 10 179 2 304 2 13 2 223 6 97 2 56 2 147 3 187 4 106 1 188 2 108 2 229 1 69 1 68 2 193 1 151 1 154 3 326 2 155 1 157 1 277 1 196 1 161 2 163 1 125 14 240 1 170 1 
108 1 85 1 68 1 277 1 13 1 196 1 223 1 125 2 163 1 56 1 57 1 240 1 34 1 187 2 188 1 107 1 
108 1 85 1 68 1 5 1 46 1 136 1 181 1 94 1 13 1 196 1 125 1 163 1 56 1 240 1 311 1 34 1 187 2 172 1 188 1 272 1 
43 1 175 1 295 1 85 1 5 8 88 1 136 2 139 1 13 2 223 1 56 2 311 8 60 2 16 1 314 2 187 4 63 2 188 2 108 2 68 2 21 1 111 1 22 1 74 1 277 1 331 3 196 2 124 1 125 2 281 1 337 1 201 1 240 1 242 1 169 1 129 1 172 7 289 1 40 2 
108 1 132 1 43 1 68 1 86 1 88 1 232 1 326 1 179 1 13 1 196 1 223 2 161 1 124 1 125 2 163 1 56 1 201 1 187 2 289 1 188 1 
108 1 68 1 150 1 326 1 13 1 196 1 161 1 223 1 125 1 56 1 169 1 187 2 188 1 
108 1 2 1 68 1 85 2 193 1 47 1 255 1 304 1 13 1 196 1 97 1 125 2 56 1 169 1 187 2 106 1 188 1 319 1 
2 1 85 2 47 1 255 1 179 1 304 1 13 1 223 1 97 1 56 1 187 2 106 1 188 1 108 1 68 1 193 1 326 1 196 1 161 1 125 3 169 1 
175 1 108 1 68 1 150 1 326 1 13 1 196 1 161 1 223 1 125 1 56 1 187 2 188 1 
175 1 108 1 2 1 68 1 85 2 193 1 47 1 255 1 304 1 13 1 196 1 97 1 125 2 56 1 187 2 106 1 188 1 319 1 
175 1 2 1 85 2 47 1 255 1 179 1 304 1 13 1 223 1 97 1 56 1 187 2 106 1 188 1 108 1 68 1 193 1 326 1 196 1 161 1 125 3 
2 1 85 2 47 1 255 1 179 1 304 1 13 1 223 1 97 1 56 1 187 2 106 1 188 1 108 1 68 1 193 1 326 1 196 1 161 1 125 3 
85 1 5 1 88 1 136 1 9 1 94 1 13 1 185 1 223 1 56 1 311 1 60 1 314 1 187 2 63 1 66 1 188 1 108 1 229 1 68 1 277 1 331 1 196 1 125 2 240 1 245 1 172 1 289 1 
217 1 85 1 5 1 88 1 136 1 9 1 13 1 182 1 223 1 56 1 311 1 60 1 314 1 187 2 63 1 66 1 188 1 273 1 108 1 229 1 68 1 277 1 331 1 196 1 125 2 240 1 172 1 289 1 
2 1 85 2 47 1 255 1 179 1 304 1 13 1 223 1 97 1 56 1 187 2 106 1 188 1 108 1 68 1 193 1 326 1 196 1 161 1 163 1 125 3 
2 1 85 2 5 1 88 1 47 1 255 1 139 1 179 1 304 1 9 1 94 1 13 1 185 1 97 1 223 1 56 1 311 1 60 1 314 1 187 2 63 1 106 1 66 1 188 1 272 1 108 1 68 1 193 1 326 1 331 1 196 1 161 1 125 3 245 1 172 1 289 1 
43 1 132 1 85 1 86 1 88 1 47 1 179 1 13 1 223 1 97 1 56 1 187 2 188 1 108 1 68 1 326 1 196 1 124 1 161 1 163 1 336 1 125 2 201 1 289 1 
108 1 216 1 321 1 68 1 226 1 187 2 13 1 50 1 188 1 
108 1 216 1 321 1 68 1 226 1 187 2 13 1 50 1 188 1 
108 1 216 1 321 1 68 1 226 1 187 2 13 1 50 1 188 1 
108 1 216 1 321 1 68 1 226 1 187 2 13 1 50 1 188 1 
108 1 216 1 321 1 68 1 226 1 187 2 13 1 50 1 188 1 
296 1 85 1 5 2 88 2 13 1 223 1 56 1 311 2 60 1 314 1 315 1 187 2 63 1 188 1 108 1 68 1 111 1 114 1 277 1 331 1 196 1 163 1 125 2 201 2 240 1 242 1 172 2 289 2 38 1 40 2 291 1 
0 1 189 1 84 1 5 2 139 1 327 1 335 2 123 1 98 1 337 1 311 2 33 1 130 1 314 1 63 1 172 2 248 1 343 1 148 1 
0 1 84 1 5 1 327 1 335 2 224 1 123 1 98 1 337 1 311 1 130 1 314 1 172 1 63 1 248 1 343 1 148 1 
0 1 21 1 5 1 136 1 331 1 281 1 126 1 311 1 60 1 33 1 101 1 314 1 63 1 172 1 
0 1 189 1 84 1 5 1 327 1 335 2 123 1 98 1 337 1 311 1 33 1 130 1 314 1 172 1 63 1 248 1 343 1 148 1 
134 1 
293 1 20 1 87 1 104 1 234 1 333 1 53 1 
293 1 1 1 87 1 6 1 138 1 180 1 12 1 61 1 17 1 104 1 65 1 230 1 236 1 333 2 280 1 167 1 168 1 
1 3 5 1 87 1 6 3 91 3 179 2 9 1 12 8 97 2 104 8 274 2 113 2 194 2 280 5 200 1 206 2 215 1 293 5 45 1 47 2 136 1 138 4 140 1 52 2 142 2 311 1 60 1 61 3 314 2 63 1 65 5 149 4 152 2 71 4 326 2 331 6 236 3 332 2 333 5 161 2 166 2 167 3 168 5 171 1 244 2 172 1 
293 3 1 1 110 1 71 3 326 1 154 1 179 1 138 2 157 1 12 4 333 2 236 1 161 1 284 1 167 1 61 1 147 1 104 2 212 1 149 3 
176 1 293 2 43 1 1 1 86 1 88 1 257 1 259 1 52 2 97 1 308 1 310 1 100 1 61 1 186 1 104 2 19 1 326 2 236 1 124 1 280 1 237 1 201 1 203 1 167 1 168 1 289 1 214 1 
20 1 293 1 1 1 87 1 236 1 53 1 333 1 167 1 61 1 104 1 
293 1 71 1 47 1 326 1 179 1 138 1 12 2 52 1 333 1 161 1 97 1 104 2 149 1 
280 1 87 1 168 1 6 1 65 1 333 1 
293 2 1 1 44 1 5 4 6 2 136 2 140 2 258 1 143 1 311 4 60 1 61 2 314 1 63 1 104 2 269 1 65 4 21 1 152 2 233 1 331 1 330 1 120 2 236 2 280 3 281 1 167 2 168 3 172 4 
43 2 85 1 5 1 86 2 88 3 136 1 94 1 9 1 13 1 185 1 56 1 311 1 60 1 187 2 314 1 63 1 188 1 66 1 108 1 229 1 68 1 331 1 196 1 124 2 125 1 237 1 240 1 201 2 245 1 172 1 289 3 211 1 
293 2 1 1 71 2 152 1 87 2 138 2 140 1 12 4 236 1 333 4 167 1 61 1 208 1 104 1 149 2 
165 1 309 1 250 1 
54 1 165 1 250 1 127 1 14 1 
165 1 309 1 250 1 
165 1 309 1 250 1 
228 1 165 1 250 1 
228 1 165 1 250 1 
228 1 165 1 250 1 
165 1 250 1 
303 1 10 1 
176 1 85 4 13 1 50 1 97 1 223 4 308 1 266 1 186 1 147 1 187 2 106 2 188 1 108 1 68 1 193 2 326 1 154 1 157 1 125 8 208 1 246 1 212 1 
3 1 85 6 47 2 179 2 50 1 13 2 223 4 97 2 147 1 187 4 106 1 188 2 108 2 68 2 193 1 110 1 154 1 326 2 157 1 29 1 161 2 125 10 284 1 285 1 212 1 
176 1 3 1 85 10 47 2 179 2 13 3 50 1 223 7 97 3 308 1 186 1 266 1 147 1 187 6 106 3 188 3 108 3 68 3 193 3 110 1 154 1 326 3 157 1 29 1 161 2 125 17 284 1 285 1 35 1 208 1 246 1 212 1 
3 1 85 6 47 2 179 2 13 2 50 1 223 4 97 2 147 1 187 4 106 1 188 2 108 2 68 2 193 1 110 1 154 1 326 2 157 1 161 2 29 1 125 10 284 1 285 1 212 1 
176 1 85 4 13 1 50 1 97 1 223 4 308 1 266 1 186 1 147 1 187 2 106 2 188 1 108 1 68 1 193 2 326 1 154 1 157 1 125 8 208 1 246 1 212 1 
85 6 47 2 179 2 13 1 50 1 223 4 97 2 147 1 187 2 106 1 188 1 108 1 68 1 193 1 110 1 154 1 326 2 157 1 161 2 29 1 125 10 284 1 285 1 212 1 
3 1 85 7 47 2 179 2 13 3 50 1 223 4 97 2 147 1 187 6 106 1 188 3 108 3 68 3 193 1 110 1 154 1 326 2 157 1 29 1 161 2 125 11 285 1 284 1 35 1 212 1 
85 7 47 2 179 2 50 1 13 3 223 4 97 2 147 1 187 6 106 2 188 3 108 3 68 3 193 2 110 1 154 1 326 2 156 1 157 1 29 1 161 2 125 11 285 1 284 1 35 1 212 1 
176 3 85 4 193 3 112 3 326 1 97 1 223 3 125 7 308 3 266 2 186 1 246 1 106 6 
85 7 47 2 179 2 50 1 13 3 223 4 97 2 147 1 187 6 106 1 188 3 108 3 68 3 193 1 110 1 154 1 326 2 156 1 157 1 29 1 161 2 125 11 285 1 284 1 35 1 212 1 
108 2 176 1 85 4 68 2 193 2 112 1 326 1 13 2 97 1 223 4 125 8 308 1 186 1 35 1 266 1 208 1 187 4 246 1 106 3 188 2 
176 1 85 3 193 2 326 1 234 1 223 3 97 1 125 6 308 1 266 1 186 1 208 1 246 1 106 2 
108 1 3 1 85 2 68 1 193 1 47 1 326 1 179 1 13 1 97 1 161 1 223 1 125 3 187 2 106 1 188 1 
125 2 85 1 154 1 147 1 157 1 223 1 
176 2 85 12 47 2 179 2 13 2 97 3 223 9 308 2 186 1 266 1 147 2 187 4 106 7 188 2 108 2 68 2 151 1 193 5 112 2 72 1 326 3 154 2 155 1 161 2 125 21 170 1 35 2 208 1 246 1 
125 1 85 1 154 1 
125 1 147 1 223 1 
108 1 3 1 274 1 68 1 85 3 193 2 47 1 326 1 179 1 13 1 161 1 223 2 97 1 125 5 187 2 106 2 188 1 
85 6 47 2 179 2 13 1 50 1 223 4 97 2 147 1 187 2 106 1 188 1 108 1 68 1 193 1 110 1 154 1 326 2 157 1 161 2 29 1 125 10 284 1 285 1 212 1 
176 1 85 3 193 1 112 1 326 1 223 3 97 1 125 6 308 1 186 1 106 2 
176 1 108 1 85 2 68 1 193 1 112 1 72 1 13 1 223 1 125 3 308 1 266 1 35 1 187 2 246 1 106 2 188 1 
108 1 176 2 68 1 85 5 193 3 112 2 326 2 13 1 50 1 223 5 97 2 125 10 308 2 310 1 186 1 187 2 106 5 188 1 
108 1 68 1 326 1 50 1 13 1 161 1 223 1 125 1 187 2 188 1 
108 1 85 2 68 1 193 1 47 1 326 1 179 1 50 1 13 1 97 1 161 1 223 1 125 3 187 2 106 1 188 1 
108 3 176 1 85 2 68 3 193 1 72 1 112 1 156 1 50 1 13 3 223 1 125 3 308 1 35 1 187 6 106 2 188 3 
176 3 3 1 85 16 47 2 179 2 13 5 50 1 260 1 223 13 97 4 308 3 186 2 266 1 147 3 187 10 106 7 227 1 188 5 108 5 68 5 193 4 112 3 72 1 154 3 326 4 156 1 157 1 278 1 161 2 125 29 35 2 208 1 246 1 
229 1 201 1 88 1 300 1 289 1 329 1 173 1 
229 1 324 1 88 1 300 1 8 1 329 1 51 1 334 1 201 1 36 1 173 1 289 1 
281 1 21 1 5 1 311 1 60 1 136 1 314 1 63 1 234 1 172 1 331 1 
43 1 229 1 5 1 22 1 88 2 136 1 9 1 331 1 124 1 201 1 311 1 60 1 314 1 245 1 172 1 63 1 289 2 66 1 
43 1 229 1 5 1 22 1 88 2 93 1 9 2 331 3 120 1 30 1 124 2 55 1 201 2 339 1 203 1 311 1 60 2 314 1 245 1 172 1 63 1 289 2 66 1 
43 1 217 1 5 2 88 2 9 2 93 1 55 1 311 2 60 2 314 1 63 1 66 1 229 1 22 1 331 3 120 1 122 1 124 2 30 1 201 2 339 1 203 1 172 2 289 2 
43 1 86 1 5 2 87 1 88 1 136 1 91 1 9 1 93 1 257 1 259 1 142 1 55 1 311 2 60 1 265 1 314 1 63 1 65 1 19 1 27 1 331 4 120 1 332 1 333 1 124 1 237 1 280 2 201 1 203 1 168 2 172 2 289 1 
5 3 87 1 113 1 136 1 91 1 93 1 9 1 331 4 333 1 332 1 120 1 142 1 122 1 280 2 55 1 168 2 311 3 60 1 314 1 172 3 63 1 65 1 
5 1 311 1 314 1 63 1 172 1 74 1 
215 1 5 1 136 1 9 1 331 1 58 1 311 1 60 1 205 1 268 1 314 2 172 1 63 1 
176 1 2 1 85 3 5 1 88 2 255 1 181 1 94 1 9 1 13 2 185 1 97 1 266 1 186 1 187 4 106 2 188 2 272 1 108 2 193 2 22 1 196 2 124 1 125 6 201 1 208 1 289 2 38 1 43 1 139 1 304 1 223 3 56 2 308 1 311 1 60 1 314 1 63 1 66 1 68 2 229 2 326 1 331 1 163 1 245 1 246 1 172 1 
293 1 1 2 44 1 5 1 87 1 6 1 136 1 91 1 53 1 142 1 311 1 61 2 104 1 65 2 20 1 113 1 194 1 331 2 333 1 236 2 332 1 280 3 166 1 167 2 168 3 244 1 172 1 247 1 
215 1 5 2 311 2 60 1 171 1 139 1 314 2 63 1 9 1 172 2 74 1 331 2 142 1 
21 1 5 4 90 1 136 1 139 1 331 1 122 1 281 1 311 4 60 1 314 1 172 4 63 1 
305 1 133 1 5 1 311 1 60 1 205 1 301 1 314 2 268 1 63 1 9 1 172 1 331 1 
98 1 84 1 5 1 311 1 136 1 314 1 63 1 172 1 248 1 335 1 
296 1 5 2 111 1 139 1 331 1 337 1 311 2 60 1 314 1 172 2 63 1 
21 1 5 5 111 1 90 1 136 1 139 1 331 3 120 1 281 1 311 5 60 2 16 1 314 2 129 1 172 4 63 2 
21 1 5 5 111 1 90 1 136 1 139 1 331 3 120 1 281 1 311 5 60 2 209 1 314 2 129 1 172 4 63 2 
43 1 229 1 217 1 5 1 22 1 88 2 136 1 9 1 331 1 124 1 201 1 311 1 60 1 314 1 172 1 63 1 289 2 66 1 
215 1 5 1 9 1 331 1 120 1 58 1 311 1 60 1 205 1 268 1 314 2 172 1 63 1 
198 1 275 1 23 1 286 1 
43 1 86 1 87 1 88 1 48 1 257 1 259 1 59 1 19 1 275 1 333 1 124 1 280 1 237 1 201 1 168 1 203 1 247 1 37 1 289 1 
201 1 88 1 275 1 114 1 23 1 286 1 315 1 289 1 291 1 
59 1 275 1 48 1 
32 1 15 1 115 1 234 1 
162 1 32 1 241 1 15 1 267 1 115 1 75 1 
162 1 341 1 116 1 
320 2 82 1 26 1 115 1 75 1 306 1 162 3 144 1 32 1 241 3 15 1 267 1 
162 2 32 1 219 1 241 2 15 1 267 1 115 1 75 1 77 1 
84 1 141 1 75 1 335 1 306 1 162 1 32 1 241 1 267 1 130 1 79 1 
162 1 306 1 32 1 241 1 15 1 267 1 75 1 
162 1 306 1 241 1 15 2 267 1 115 1 75 1 
299 1 75 2 306 1 162 2 32 1 241 2 15 1 312 1 267 2 131 1 
219 2 231 1 115 1 141 1 75 1 158 1 306 1 162 3 32 2 241 3 15 1 264 1 267 1 
84 1 219 1 115 1 327 1 75 1 328 1 335 2 306 1 162 2 32 1 241 2 15 1 267 1 130 1 248 1 
219 2 24 1 115 1 141 1 75 2 77 1 306 1 162 4 32 2 241 4 15 1 264 1 267 2 
162 1 306 1 32 1 241 1 15 1 267 1 115 1 75 1 
320 1 82 1 219 2 115 2 141 1 75 1 144 1 162 4 32 3 241 4 15 2 264 1 267 1 39 1 
219 1 115 1 75 1 306 1 162 2 32 1 238 1 241 2 15 1 267 1 64 1 342 1 
320 2 82 1 115 1 75 1 306 1 162 3 225 1 144 2 32 1 241 3 15 1 267 1 
32 2 254 2 210 1 121 1 
162 1 306 1 307 1 241 1 267 1 75 1 
162 2 306 1 32 1 219 1 241 2 15 1 267 1 115 1 158 1 75 1 
92 1 
162 1 306 1 32 1 241 1 15 1 267 1 115 1 75 1 
320 1 162 3 306 1 32 1 219 1 241 3 15 1 267 1 115 1 158 1 75 1 
32 1 264 1 141 1 39 1 
32 1 15 1 

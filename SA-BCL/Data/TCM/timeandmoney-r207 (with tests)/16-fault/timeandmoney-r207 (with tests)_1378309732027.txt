#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (23,38) 117 (26,180) (26,180) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (23,38) 117 (26,180) (26,180) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (23,38) 117 (26,180) (26,180) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (23,38) 117 (26,180) (26,180) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (65,75,217,298) (65,75,217,298) 64 119 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (65,75,217,298) (65,75,217,298) 64 119 42 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (65,75,217,298) (65,75,217,298) 64 119 42 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (76,148) 337 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (228,323) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (182,187,318) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (228,323) (228,323) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (228,323) (228,323) 321 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 93 173 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 93 173 269 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (228,323) (228,323) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (228,323) (228,323) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (228,323) (228,323) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 316 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 52 205 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (76,148) (76,148) (170,287) 147 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (76,148) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (76,148) (76,148) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (228,323) (228,323) 321 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (76,148) 337 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 68 (183,216) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 68 (183,216) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 82 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 179 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (65,75,217,298) (65,75,217,298) 64 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (65,75,217,298) (65,75,217,298) 64 7 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 1 117 1 217 1 180 1 23 1 197 1 298 1 224 1 26 1 246 1 175 1 
65 1 117 1 217 1 180 1 23 1 197 1 298 1 224 1 26 1 246 1 175 1 
65 1 117 1 217 1 180 1 23 1 197 1 298 1 224 1 26 1 246 1 175 1 
65 1 117 1 217 1 180 1 23 1 197 1 298 1 224 1 26 1 246 1 175 1 
75 1 64 1 65 1 119 1 217 1 197 1 298 2 246 1 
65 1 259 1 41 1 217 1 197 2 297 1 298 2 200 1 157 1 224 1 246 1 175 1 8 1 81 1 255 1 164 1 
65 2 217 2 171 1 197 3 297 1 298 3 157 1 224 1 246 1 75 1 164 2 83 1 38 1 
64 1 65 2 42 1 217 2 171 2 197 6 298 7 224 1 246 1 75 5 229 1 119 1 98 1 164 2 83 2 15 1 38 1 
64 1 65 2 42 1 217 2 171 2 197 6 298 7 224 1 246 1 75 5 229 1 119 1 98 1 164 2 83 2 15 1 38 1 
179 1 
22 2 290 1 335 1 
177 1 84 2 110 2 
190 2 84 1 148 1 43 1 110 1 112 1 177 1 95 1 34 2 125 1 100 2 337 1 
177 1 84 1 228 1 110 1 
218 1 318 1 114 1 226 1 283 1 142 1 210 1 182 1 333 1 187 1 271 1 335 1 338 1 339 1 
84 1 110 1 182 1 
232 1 107 1 318 1 333 1 27 1 
325 1 107 1 240 1 318 2 333 2 27 1 335 1 338 1 
107 1 318 1 333 1 
177 1 84 1 228 1 110 1 318 1 333 1 27 1 323 1 
335 1 
325 1 107 1 318 2 97 1 333 2 27 1 335 1 338 1 
84 1 44 1 87 2 91 1 177 1 10 1 228 1 55 1 63 1 236 2 106 1 110 1 107 2 149 1 21 1 318 5 319 3 277 4 27 2 321 1 323 1 28 1 325 1 120 1 208 2 32 1 123 2 333 5 291 2 335 2 338 2 
179 1 
84 1 218 1 110 1 135 1 114 1 201 1 285 1 210 1 101 1 339 1 
84 3 110 1 188 1 
84 1 
84 1 110 1 285 1 135 1 
84 2 110 1 109 1 285 1 188 1 
40 1 84 1 218 1 114 1 201 1 210 1 271 1 188 1 339 1 
84 1 109 1 188 1 
84 1 110 1 285 1 
190 1 43 1 34 1 100 1 
190 1 43 1 34 1 100 1 
54 2 80 1 45 1 262 1 211 1 278 1 300 1 322 1 
103 1 84 1 
190 1 84 1 43 1 109 1 34 1 100 1 188 1 
40 1 84 4 218 1 110 1 109 1 114 1 201 1 299 1 30 1 285 1 210 1 271 1 188 2 339 1 
84 1 
49 1 241 1 
49 1 241 1 
161 1 289 1 
161 1 289 1 
161 1 289 1 
49 1 241 1 73 1 
49 1 241 1 73 1 
49 1 241 1 73 1 
105 1 49 1 241 1 
49 2 161 1 241 2 289 1 336 1 189 1 
49 1 241 1 280 1 
49 1 241 1 280 1 
49 1 241 1 280 1 
49 1 92 1 93 1 241 1 308 1 173 1 
49 1 92 1 93 1 241 1 318 1 269 1 308 1 173 1 333 1 
4 1 81 1 200 1 
41 1 81 1 200 1 
47 1 41 1 251 1 4 2 220 1 200 3 
47 1 41 1 4 1 220 1 200 2 59 1 
47 1 41 1 4 1 220 2 200 2 
84 1 86 1 130 2 134 1 172 1 87 1 177 1 50 2 228 1 55 1 268 1 13 1 186 1 236 1 314 1 110 1 107 1 149 1 22 3 318 5 152 1 319 2 277 3 320 1 27 4 279 2 323 1 325 1 208 1 123 1 333 5 290 1 335 2 338 1 
84 1 86 1 296 1 130 2 134 1 172 1 87 1 177 1 50 2 228 1 55 1 13 1 186 1 312 1 232 2 236 1 107 3 110 1 149 1 22 3 318 5 152 1 319 2 277 3 320 1 27 4 323 1 325 1 208 1 123 1 333 5 290 1 257 2 335 2 338 1 
84 1 130 2 134 1 172 1 87 1 91 1 177 1 50 2 228 1 268 1 13 1 186 1 236 1 314 1 110 1 149 1 318 3 22 3 152 1 319 2 320 1 277 3 27 2 279 1 323 1 208 1 123 1 333 3 290 1 335 2 338 1 
130 4 134 2 172 2 223 1 87 1 91 1 50 4 268 1 13 2 186 2 14 1 236 2 314 1 149 2 22 7 318 4 152 1 319 4 320 1 277 5 27 3 279 2 208 1 123 1 165 1 333 4 290 3 335 4 338 1 
179 1 
129 1 221 1 
248 1 
129 1 9 1 
129 3 9 1 178 2 77 1 18 1 254 1 
129 1 9 1 18 1 
129 1 16 1 
168 1 236 1 108 3 149 1 153 2 24 1 264 1 158 1 74 1 176 3 120 1 207 1 32 1 184 2 309 4 61 7 63 1 
168 1 236 1 108 3 149 1 153 2 24 1 264 1 158 1 74 1 176 3 120 1 207 1 32 1 184 2 309 4 61 7 63 1 
168 1 236 1 108 3 149 1 153 2 24 1 264 1 115 1 158 1 74 1 176 3 120 1 207 1 32 1 184 2 309 4 61 7 63 1 
168 4 39 1 134 3 300 1 176 11 54 2 184 1 309 11 186 3 13 3 270 1 61 22 63 1 191 1 236 3 195 1 108 7 316 1 149 3 153 3 158 1 322 1 206 4 249 1 250 3 207 1 80 1 32 1 211 1 167 1 
168 1 236 1 108 4 149 1 150 1 153 3 264 1 301 1 300 2 74 1 158 1 322 2 176 4 120 1 207 1 80 2 54 4 32 1 211 2 184 2 270 1 309 5 61 9 63 1 
41 1 217 1 4 1 297 1 298 2 224 1 265 1 48 1 11 1 181 1 144 1 100 1 65 1 190 1 238 1 237 1 69 1 197 2 242 1 72 1 200 2 157 1 246 1 75 1 251 1 327 1 81 1 34 1 164 1 126 1 
41 1 217 1 4 1 297 1 298 3 224 1 265 1 48 1 94 1 11 1 181 1 96 1 144 1 100 1 65 1 190 1 276 1 237 1 197 3 242 1 72 1 200 2 157 1 75 2 251 1 327 1 81 1 34 1 164 1 126 1 
41 1 4 1 297 1 298 2 224 1 48 1 94 1 11 1 181 1 96 1 144 1 100 1 190 1 237 1 197 2 72 1 200 2 157 1 75 2 251 1 327 1 81 1 34 1 164 1 126 1 
129 1 215 1 260 1 217 1 43 1 219 1 298 1 224 2 9 1 48 2 181 2 144 1 100 1 65 1 190 1 276 1 67 1 237 1 111 1 197 1 327 2 34 1 258 1 
41 1 217 1 4 1 298 1 224 1 265 1 48 1 11 1 181 1 96 1 144 1 100 1 65 1 190 1 238 1 237 1 197 1 242 1 72 1 200 2 246 1 251 1 327 1 81 1 34 1 126 1 
324 1 
87 1 174 2 89 1 9 1 182 1 100 2 187 1 271 1 272 1 190 2 193 1 107 6 22 2 114 1 277 2 208 1 283 1 122 1 210 1 33 1 123 1 34 2 36 2 290 2 212 1 128 1 129 1 43 2 218 1 131 2 222 1 226 1 51 1 53 2 55 1 56 2 142 1 144 1 67 1 237 1 239 2 318 5 319 2 320 1 160 2 247 1 325 3 326 4 328 1 331 1 333 5 335 2 258 1 338 1 339 1 
218 1 226 1 51 1 56 1 142 1 182 1 97 1 271 1 187 1 193 1 107 2 318 3 114 1 325 1 326 2 283 1 328 1 210 1 122 1 331 1 333 3 339 1 
218 1 226 1 51 1 53 1 142 1 182 1 97 1 271 1 187 1 193 1 107 1 318 3 114 1 325 1 326 3 283 1 328 1 210 1 122 1 331 1 333 3 335 1 339 1 338 1 
218 1 131 1 226 1 51 1 53 1 56 1 142 1 97 1 182 1 271 1 187 1 193 1 107 2 318 3 114 1 325 1 326 3 283 1 328 1 210 1 122 1 331 1 333 3 335 1 339 1 338 1 
218 1 131 4 133 1 87 1 174 2 225 1 226 1 51 1 53 4 55 1 56 4 142 1 97 1 182 1 99 1 271 1 187 1 193 1 239 2 107 7 318 5 319 1 114 1 277 1 160 2 203 1 325 3 326 6 208 1 283 1 329 1 328 1 210 1 122 1 33 1 123 1 331 1 36 2 333 5 290 2 335 5 128 1 338 5 339 1 
218 1 131 2 87 1 174 2 226 1 51 1 53 2 55 1 56 2 142 1 182 1 187 1 271 1 193 1 107 4 239 2 22 2 318 4 319 1 114 1 277 1 160 2 325 2 326 4 208 1 283 1 328 1 122 1 210 1 33 1 123 1 331 1 36 2 333 4 290 2 335 2 212 1 338 1 339 1 128 1 
218 1 131 2 87 1 174 2 225 1 226 1 51 1 53 2 55 1 56 2 142 1 182 1 99 1 271 1 187 1 193 1 107 4 239 2 318 4 319 1 114 1 277 1 160 2 325 2 326 4 283 1 208 1 328 1 329 1 210 1 122 1 33 1 123 1 331 1 36 2 333 4 290 2 335 1 338 1 128 1 339 1 
218 1 131 2 87 1 174 2 225 1 226 1 51 1 53 2 55 1 56 2 142 1 182 1 99 1 271 1 187 1 193 1 107 4 239 2 318 4 319 1 114 1 277 1 160 2 325 2 326 4 283 1 208 1 328 1 329 1 210 1 122 1 33 1 123 1 331 1 36 2 333 4 290 2 335 1 338 1 128 1 339 1 
85 2 218 1 131 2 87 1 46 1 226 1 51 1 53 2 55 1 56 2 142 1 230 1 182 1 99 1 271 1 187 1 193 1 107 4 239 2 22 2 318 4 319 1 114 1 277 1 325 2 282 1 326 4 283 1 208 1 328 1 210 1 122 1 33 1 123 1 288 2 331 1 36 2 333 4 335 1 338 1 339 1 
218 1 131 3 133 1 87 1 174 2 225 1 226 1 51 1 53 3 55 1 56 3 142 1 182 1 99 1 271 1 187 1 193 1 239 2 107 5 318 4 319 1 114 1 277 1 160 2 325 2 326 5 208 1 283 1 329 1 328 1 210 1 122 1 33 1 123 1 331 1 36 2 333 4 290 2 335 1 338 1 128 1 339 1 
218 1 131 3 133 1 87 1 174 2 225 1 226 1 51 1 53 3 55 1 56 3 142 1 182 1 99 1 271 1 187 1 193 1 239 2 107 5 318 4 319 1 114 1 277 1 160 2 325 2 326 5 208 1 283 1 329 1 328 1 210 1 122 1 33 1 123 1 331 1 36 2 333 4 290 2 335 1 338 1 128 1 339 1 
85 2 218 1 131 2 87 1 226 1 51 1 53 2 55 1 56 2 142 1 182 1 187 1 271 1 193 1 107 4 239 2 22 2 318 4 319 1 114 1 277 1 325 2 282 1 326 4 208 1 283 1 328 1 122 1 210 1 33 1 123 1 288 2 331 1 36 2 333 4 335 1 212 1 338 1 339 1 
54 2 80 1 179 1 45 1 262 1 211 1 278 1 300 1 322 1 
1 1 45 1 278 1 300 1 322 1 176 1 205 1 206 1 250 1 80 1 54 2 52 1 211 1 309 1 61 2 
213 1 1 1 84 1 109 1 70 1 45 1 278 1 300 1 244 1 322 1 176 1 80 1 54 2 211 1 124 1 309 1 61 2 188 1 
147 1 190 1 1 1 170 1 84 1 148 1 109 1 43 1 45 1 278 1 300 1 322 1 176 1 76 1 80 1 54 2 211 1 124 1 34 1 100 1 61 1 188 1 
213 1 190 1 43 1 45 1 278 1 300 1 322 1 78 1 80 1 54 2 211 1 34 1 306 1 309 1 100 1 61 1 
1 1 84 1 45 1 134 1 300 1 6 1 176 1 54 2 186 1 309 1 13 1 61 2 236 1 110 1 149 1 278 1 322 1 80 1 285 1 211 1 
149 1 45 1 262 1 278 1 300 1 322 1 252 1 80 1 54 2 211 1 186 1 309 1 61 1 
236 1 45 1 262 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 13 1 61 1 146 1 
236 1 149 1 45 1 262 1 134 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 13 1 186 1 309 1 61 2 
149 1 45 1 278 1 300 1 322 1 252 1 80 1 54 2 211 1 306 1 186 1 309 1 61 1 
236 1 45 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 306 1 13 1 61 1 146 1 
236 1 149 1 45 1 134 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 306 1 13 1 186 1 309 1 61 2 
236 1 149 1 45 1 134 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 13 1 186 1 309 1 61 2 
190 1 148 1 43 1 34 1 100 1 
234 1 190 1 43 1 34 1 100 1 
1 1 236 1 149 1 45 1 134 1 278 1 300 1 322 1 176 1 80 1 54 2 211 1 13 1 186 1 309 1 61 2 
190 1 76 1 148 1 69 1 34 1 100 1 
1 1 236 1 84 1 110 1 149 1 45 1 134 1 278 1 300 1 322 1 176 1 80 1 54 2 285 1 211 1 13 1 309 1 186 1 37 1 61 2 
168 4 3 1 132 2 134 4 264 1 136 1 300 3 301 1 304 1 176 21 141 1 54 6 184 1 57 1 270 1 309 20 186 4 13 4 61 41 63 1 233 1 236 5 195 3 108 8 19 1 149 5 151 1 71 1 153 4 245 1 74 1 322 3 281 1 206 4 250 3 120 1 80 3 121 1 284 4 32 1 162 1 211 3 167 1 
168 3 3 1 132 2 134 4 264 1 136 1 300 4 301 1 304 1 176 18 141 1 54 8 184 1 57 1 270 2 309 20 186 4 13 3 61 38 63 1 233 1 236 4 195 3 108 7 19 1 149 5 151 1 71 1 153 4 245 1 74 1 322 4 281 1 206 4 250 3 120 1 80 4 121 1 284 4 32 1 162 1 211 4 167 1 
168 7 3 1 132 1 134 7 264 1 136 1 300 2 301 1 304 1 176 25 141 1 54 4 184 1 57 1 270 1 307 2 309 27 186 7 13 7 61 52 63 1 233 1 236 8 195 2 108 14 19 1 149 8 151 1 71 1 153 7 74 1 322 2 281 1 206 4 250 4 120 1 80 2 284 4 32 1 162 1 211 2 167 2 
168 3 132 1 134 3 300 2 301 1 304 2 176 10 141 1 54 4 57 1 309 9 186 3 13 3 61 19 236 3 195 1 108 6 149 3 151 1 71 1 153 3 245 1 322 2 118 1 206 2 250 1 80 2 284 2 211 2 167 1 
168 2 3 1 132 2 134 3 300 3 301 1 136 1 304 1 176 12 141 1 54 6 57 1 270 2 309 14 186 3 13 2 61 26 233 1 236 2 108 4 195 2 19 1 149 3 151 2 71 1 153 2 322 3 281 1 206 2 250 2 80 3 284 4 162 1 211 3 
129 1 213 1 1 1 261 1 218 2 45 1 300 1 9 1 176 1 54 2 144 1 185 1 309 1 100 2 61 2 313 1 190 2 237 1 17 1 25 1 114 2 278 1 204 1 322 1 78 1 80 1 210 2 211 1 34 2 124 1 125 2 
41 1 190 2 237 1 4 1 69 1 242 1 200 2 267 1 251 1 11 1 81 1 181 1 144 1 96 1 163 1 34 2 332 1 100 2 126 1 
41 1 190 1 2 1 237 1 4 1 242 1 200 2 251 1 11 1 81 1 181 1 96 1 144 1 34 1 332 1 100 1 126 1 
129 1 190 1 215 1 67 1 194 1 237 1 43 1 9 1 267 1 181 1 144 1 34 1 100 1 258 1 
41 1 190 1 237 1 4 1 242 1 200 2 267 1 251 1 11 1 81 1 181 1 96 1 163 1 144 1 34 1 332 1 100 1 126 1 
12 1 
179 1 
87 1 174 1 55 1 107 1 22 1 318 1 319 1 277 1 160 1 325 1 208 1 123 1 333 1 290 1 335 2 128 1 338 1 
87 4 266 2 9 3 10 1 178 2 186 2 13 2 100 3 16 2 104 2 274 2 190 3 107 5 18 3 20 1 22 12 113 2 277 9 28 1 208 4 287 2 123 4 34 3 290 6 291 2 292 2 129 10 43 1 295 1 221 3 130 6 134 2 222 1 137 2 139 1 226 2 50 6 55 4 144 3 143 1 231 1 60 2 236 2 237 4 149 2 69 1 318 5 319 8 320 2 77 1 325 3 333 5 335 8 338 2 
3 1 130 5 134 2 222 1 87 2 136 1 50 5 55 2 186 2 13 2 274 1 66 1 233 1 236 2 107 1 195 1 19 1 149 2 318 1 22 6 199 1 319 5 320 1 277 8 281 1 206 1 325 1 250 1 208 2 123 2 333 1 290 3 291 2 335 5 338 2 
84 1 236 1 110 1 149 1 318 1 319 1 277 2 87 1 321 1 323 1 177 1 228 1 120 1 55 1 208 1 329 1 32 1 123 1 333 1 291 2 63 1 
319 1 87 1 277 1 28 1 10 1 55 1 208 1 123 1 335 1 338 1 
274 1 236 2 149 2 22 10 130 5 134 2 319 5 277 5 266 1 50 5 186 2 13 2 290 5 291 2 335 5 
325 1 107 1 318 1 333 1 335 1 338 1 
129 1 43 2 222 2 87 2 139 2 89 1 91 1 9 1 55 1 144 1 231 1 100 4 272 1 190 4 67 1 237 1 107 4 318 3 319 2 155 1 320 2 277 2 325 2 253 1 208 2 123 2 34 4 333 3 258 1 
177 1 190 1 84 1 148 1 43 1 110 1 34 1 100 1 337 1 
22 4 130 2 319 2 222 1 87 1 320 1 277 1 50 2 55 1 208 1 123 1 184 1 290 2 335 4 338 2 
92 1 93 1 
92 1 93 1 
92 1 93 1 
92 1 93 1 
92 1 93 1 
92 1 93 1 
92 1 93 1 
92 1 93 1 
49 1 241 1 
236 1 108 2 195 1 149 1 153 2 264 1 301 1 300 1 74 1 322 1 281 1 176 4 206 1 250 1 120 1 80 1 54 2 32 1 211 1 184 1 309 4 61 8 63 1 
168 1 134 1 264 1 301 1 300 2 176 5 54 4 184 1 309 6 186 1 61 11 63 1 236 1 195 1 108 3 149 2 153 2 74 1 322 2 281 1 206 2 250 1 120 1 80 2 32 1 211 2 334 1 167 1 
168 1 3 1 134 2 264 1 300 3 301 1 136 1 176 10 54 6 184 1 309 9 186 2 13 2 270 1 61 19 63 1 233 1 236 3 195 1 108 4 149 3 19 1 153 3 74 1 322 3 281 1 206 1 250 1 120 1 80 3 32 1 211 3 334 1 
168 2 3 1 134 2 264 1 300 3 301 1 136 1 176 7 54 6 184 1 270 1 309 10 186 2 13 1 61 17 63 1 233 1 236 2 195 1 108 5 149 3 19 1 153 3 74 1 322 3 281 1 206 1 250 1 120 1 80 3 32 1 211 3 334 1 
236 1 108 2 195 1 149 1 153 2 264 1 301 1 300 1 74 1 322 1 281 1 176 4 206 1 250 1 120 1 80 1 54 2 32 1 211 1 184 1 309 4 61 8 63 1 
168 1 3 1 134 2 300 1 301 1 136 1 176 6 54 2 309 6 186 2 13 2 61 12 233 1 236 2 195 1 108 2 149 2 19 1 153 1 322 1 281 1 206 1 250 1 80 1 211 1 
168 2 3 1 134 2 264 1 300 4 301 1 136 1 176 8 54 8 184 1 309 10 186 2 13 1 270 2 61 18 63 1 233 1 236 2 195 1 108 5 19 1 149 3 153 3 74 1 322 4 281 1 206 1 250 1 120 1 80 4 32 1 211 4 334 1 
168 3 3 1 134 3 301 1 300 4 136 1 176 7 54 8 309 9 186 3 13 2 270 2 61 16 233 1 236 2 195 1 108 6 19 1 149 3 153 3 245 1 322 4 281 1 206 1 250 1 80 4 211 4 
168 3 236 1 108 6 149 1 153 3 264 2 74 1 176 4 120 1 32 3 309 3 61 7 63 3 
168 1 3 1 134 2 264 1 301 1 300 4 136 1 176 8 54 8 184 1 309 10 186 2 13 1 270 2 61 18 63 1 233 1 236 2 195 1 108 4 19 1 149 3 153 3 74 1 245 1 322 4 281 1 206 1 250 1 120 1 80 4 32 1 211 4 
168 1 236 1 108 3 149 1 153 2 264 1 300 2 74 1 322 2 176 4 120 1 80 2 54 4 32 1 211 2 184 1 309 4 270 1 61 8 63 1 
179 1 
168 1 236 1 108 2 149 1 153 1 134 1 300 1 322 1 176 2 80 1 54 2 211 1 13 1 186 1 309 2 334 1 61 4 
168 1 236 1 195 1 108 2 149 1 153 1 134 1 176 4 206 2 250 1 13 1 309 3 186 1 61 7 167 1 
168 4 134 2 264 1 300 2 303 1 176 12 52 1 54 4 184 1 186 2 309 11 13 2 307 1 270 2 61 23 63 2 236 3 108 9 149 3 153 5 74 1 322 2 206 2 250 2 120 1 80 2 32 2 211 2 167 1 
176 1 206 1 61 1 
250 1 309 1 61 1 
168 1 236 1 108 3 149 1 134 1 153 2 300 1 266 1 322 1 176 3 54 2 80 1 211 1 186 1 309 3 13 1 334 1 61 6 
168 1 3 1 134 2 300 1 301 1 136 1 176 6 54 2 309 6 186 2 13 2 61 12 233 1 236 2 195 1 108 2 149 2 19 1 153 1 322 1 281 1 206 1 250 1 80 1 211 1 
168 1 236 1 108 2 149 1 153 1 176 3 120 1 32 1 309 3 61 6 63 1 
168 1 108 2 153 1 264 1 300 1 74 1 303 1 322 1 176 2 80 1 54 2 32 1 211 1 309 1 270 1 61 3 63 1 
168 2 236 2 108 5 149 2 153 3 300 1 301 1 321 1 322 1 176 5 54 2 80 1 120 1 32 2 211 1 309 5 61 10 63 2 
168 1 108 1 149 1 301 1 300 1 322 1 80 1 54 2 211 1 186 1 309 2 61 2 
168 1 236 1 108 2 149 1 153 1 134 1 301 1 300 1 322 1 176 2 80 1 54 2 211 1 13 1 186 1 309 2 61 4 
168 1 108 2 153 1 301 1 300 3 245 1 303 1 322 3 176 2 80 3 54 6 32 1 211 3 270 1 309 1 61 3 63 1 
168 5 39 1 134 3 264 1 300 4 301 1 176 15 54 8 184 1 270 1 309 14 186 3 13 3 61 29 63 2 191 1 236 4 195 1 108 10 149 4 153 5 74 1 245 1 322 4 206 4 249 1 250 3 120 1 80 4 32 2 211 4 334 1 167 1 
40 1 214 1 218 1 210 1 114 1 101 1 271 1 
214 1 40 1 293 1 218 1 114 1 159 1 227 1 210 1 330 1 101 1 271 1 310 1 
190 1 179 1 43 1 34 1 100 1 
29 1 190 1 84 1 43 1 34 1 100 1 188 1 
29 1 190 1 84 1 34 1 100 1 139 1 188 1 
129 1 190 1 84 1 237 1 68 1 18 1 139 1 9 1 144 1 34 1 183 1 100 1 188 1 
129 4 216 1 43 1 221 1 139 1 226 1 9 1 178 1 144 1 100 3 16 1 104 1 190 3 237 1 107 1 18 1 318 2 154 1 286 1 34 3 333 2 335 1 338 1 
104 1 129 4 190 3 237 1 43 1 107 1 18 1 318 2 221 1 139 1 226 1 9 1 178 1 286 1 144 1 34 3 333 2 100 3 335 1 338 1 16 1 292 1 
190 1 237 1 144 1 34 1 100 1 140 1 
129 3 169 1 43 2 9 2 144 2 96 1 58 1 100 5 102 1 190 6 237 3 315 1 17 1 18 1 69 1 77 1 31 1 34 6 125 1 127 1 
84 1 188 1 
129 2 43 1 221 1 87 2 137 1 226 1 10 1 178 1 55 2 231 1 100 1 60 1 190 1 107 2 318 3 319 1 277 1 27 1 28 1 325 1 208 2 287 1 123 2 34 1 333 3 335 1 338 1 292 1 
129 2 190 2 237 2 20 1 18 1 69 1 140 1 9 1 178 1 77 1 144 1 34 2 100 2 
129 1 190 4 67 1 237 1 43 1 69 1 5 1 9 1 286 1 144 1 34 4 100 4 258 1 
273 1 129 1 190 2 237 2 315 1 18 1 263 1 139 1 202 1 9 1 144 1 34 2 100 2 102 1 
41 1 190 1 237 1 43 1 81 1 144 1 34 1 200 1 126 1 100 1 
129 1 9 1 313 1 190 2 237 1 17 1 69 1 144 1 96 1 34 2 100 2 
129 3 67 1 190 5 237 2 43 1 17 1 69 1 5 1 139 1 9 2 31 1 144 2 34 5 100 4 127 1 258 1 
129 3 67 1 190 5 237 2 43 1 17 1 317 1 69 1 5 1 139 1 9 2 144 2 34 5 100 4 127 1 258 1 
129 1 190 1 84 1 237 1 43 1 68 1 18 1 9 1 144 1 34 1 183 1 100 1 188 1 
129 1 190 1 237 2 315 1 18 1 139 1 9 1 77 1 144 1 34 1 58 1 100 1 102 1 
192 1 0 1 261 1 218 1 210 1 114 1 185 1 90 1 204 1 
302 1 82 1 90 1 
235 1 192 1 0 1 90 1 
235 1 192 1 0 1 79 1 318 1 333 1 302 1 82 1 27 1 90 1 
179 1 
65 1 217 1 197 1 297 1 298 1 164 1 157 1 
48 1 197 1 224 1 
65 1 217 1 294 1 197 3 243 1 298 3 297 1 157 1 246 1 255 2 164 1 311 1 
75 1 64 1 65 1 217 1 197 1 298 2 
65 1 217 1 4 1 171 1 81 1 197 1 298 1 200 1 164 1 166 1 246 1 
65 1 217 1 197 1 298 1 164 1 157 1 246 1 
65 1 217 1 197 1 297 1 298 1 157 2 246 1 
65 2 217 2 197 2 198 1 298 2 157 1 156 1 246 1 88 1 164 1 
65 1 217 1 171 1 197 3 297 1 298 3 157 1 246 1 75 2 98 1 164 2 83 1 15 1 
65 1 41 1 217 1 4 1 197 2 297 1 298 2 200 2 157 1 138 1 246 1 75 1 251 1 81 1 164 1 
75 1 64 1 65 1 217 1 197 1 298 2 246 1 7 1 
65 1 217 1 197 1 297 1 298 1 164 1 157 1 246 1 
65 1 275 1 217 1 294 1 171 1 197 4 297 2 298 4 157 2 75 2 255 1 164 3 83 1 311 1 
65 1 217 1 197 2 298 2 297 1 157 1 246 1 75 1 229 1 305 1 164 1 256 1 
65 1 217 1 294 1 197 3 298 3 297 1 157 1 246 1 255 2 164 1 62 1 311 2 
196 1 209 1 35 2 164 2 
65 1 217 1 197 1 298 1 145 1 246 1 
75 1 65 1 217 1 197 2 98 1 297 1 298 2 164 1 157 1 246 1 
116 1 
65 1 217 1 197 1 297 1 298 1 164 1 157 1 246 1 
65 1 217 1 197 3 298 3 297 1 157 1 246 1 75 1 98 1 255 1 164 1 
275 1 171 1 164 1 83 1 
164 1 157 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (104,245) 0 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (51,300) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 176 (15,147,173) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (51,300) (51,300) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (51,300) (51,300) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (104,245) 0 49 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 176 253 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 176 253 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) (31,43) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (31,43) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) (31,43) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (10,61,95,255) (10,61,95,255) (10,61,95,255) 260 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 176 (15,147,173) 172 109 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 262 196 37 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (104,245) 0 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (51,300) (51,300) 187 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 176 253 276 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 176 253 276 296 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (51,300) (51,300) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (51,300) (51,300) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 262 196 37 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (51,300) (51,300) 187 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (51,300) (51,300) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
268 1 303 1 52 1 
246 1 
71 1 289 1 58 1 32 1 11 1 257 1 14 1 169 1 21 1 91 1 
38 1 0 1 104 1 290 2 127 2 132 2 68 1 237 1 21 1 197 1 
21 1 51 1 
176 1 173 1 
271 1 71 1 157 1 58 1 32 1 209 2 257 1 14 1 147 2 15 1 164 1 300 1 169 1 268 1 21 1 51 1 91 1 52 1 
102 1 147 1 248 1 85 1 209 1 
102 1 147 2 248 1 268 1 209 2 293 1 110 1 52 1 
102 1 147 1 209 1 
147 1 248 1 300 1 209 1 21 1 51 1 
268 1 
102 1 147 2 225 1 248 1 268 1 209 2 293 1 52 1 
248 2 209 5 160 2 121 1 293 1 144 1 102 2 12 1 147 5 242 2 263 1 244 1 268 1 20 1 50 1 283 1 133 2 52 1 247 1 
289 1 303 1 
71 1 289 2 205 1 32 2 14 2 279 1 257 1 169 1 91 2 
287 1 18 1 9 1 
111 1 23 1 289 1 290 1 54 1 138 1 190 1 32 1 193 1 4 1 120 1 254 1 38 1 14 1 127 1 132 1 
14 3 257 3 71 3 289 1 2 1 169 1 32 3 91 3 
14 1 257 1 71 1 58 1 34 1 32 1 91 1 
14 1 257 1 71 1 279 1 205 1 58 1 169 1 32 1 91 1 
271 1 0 1 2 1 58 1 209 1 104 1 279 1 14 2 147 1 15 1 16 1 21 1 71 2 290 1 157 1 191 1 32 2 38 1 257 2 164 1 169 1 127 1 132 1 49 1 91 2 
14 1 257 1 71 1 253 1 2 1 176 1 32 1 91 1 
271 1 71 3 157 1 2 2 58 1 191 1 32 3 140 1 209 1 279 1 147 1 257 3 14 3 15 1 164 1 16 1 169 1 268 1 91 3 
287 1 71 2 2 1 32 2 279 1 257 2 14 2 18 1 169 1 91 2 
111 1 23 1 289 1 290 1 54 1 190 1 32 1 193 1 4 1 120 1 254 1 38 1 14 1 127 1 132 1 
111 1 23 1 288 1 289 1 290 1 54 1 190 1 32 1 120 1 254 1 38 1 14 1 167 1 127 1 132 1 
92 2 286 1 287 2 134 1 231 1 113 1 29 1 226 1 99 1 216 1 9 2 103 2 145 2 163 1 18 2 261 1 86 1 186 1 47 4 170 1 130 1 48 1 151 1 131 1 
271 1 14 1 257 1 71 1 58 1 32 1 229 1 91 1 
23 1 111 1 71 1 54 1 290 1 190 1 2 1 191 1 193 1 32 2 4 1 120 1 254 1 38 1 257 1 14 2 18 1 127 1 132 1 91 1 
71 4 289 1 75 1 253 1 2 2 191 1 176 1 32 4 257 4 14 4 279 1 169 1 220 1 91 4 
14 2 257 2 71 2 58 1 34 1 32 2 229 1 91 2 
184 1 236 1 
184 1 236 1 
114 1 192 1 
114 1 192 1 
114 1 192 1 
184 1 77 1 236 1 
114 1 184 2 88 1 192 1 211 1 236 2 
184 1 236 1 36 1 
184 1 77 1 236 1 
184 1 77 1 236 1 
184 1 236 1 240 1 
184 1 236 1 240 1 
184 1 236 1 240 1 
153 3 24 1 25 2 56 1 30 2 96 2 141 1 234 2 209 2 233 1 5 1 236 2 213 1 122 1 178 2 147 2 184 2 88 1 268 1 
135 1 234 1 209 1 233 1 210 1 236 1 178 1 218 1 147 1 14 2 148 1 184 1 153 1 71 2 25 1 289 1 73 1 30 1 158 1 32 2 80 1 36 1 257 2 91 2 
199 1 230 1 171 1 
199 1 161 1 171 1 
40 1 156 1 107 1 230 2 161 1 171 3 
156 1 107 1 230 1 161 1 8 1 171 2 
156 1 107 2 230 1 161 1 171 2 
134 1 231 1 275 1 210 1 209 5 99 1 143 2 144 2 102 1 147 5 242 1 219 1 148 1 66 2 152 1 246 3 248 4 28 1 158 1 78 1 118 1 160 1 293 1 198 2 42 1 263 3 86 1 129 1 268 2 50 1 133 1 52 1 
134 3 231 3 55 1 275 2 209 9 99 3 143 6 144 6 102 6 180 5 217 1 147 9 242 2 219 2 246 9 247 1 248 7 158 4 115 1 117 1 78 1 118 3 160 2 293 1 198 6 84 1 166 1 85 5 263 8 86 3 129 3 268 5 50 1 133 2 52 1 
134 1 231 1 275 1 209 3 99 1 143 2 144 2 147 3 242 1 219 1 66 1 152 1 246 4 247 1 248 2 158 1 118 2 160 1 198 2 42 1 263 3 86 1 268 3 129 1 133 1 52 1 
134 2 231 2 55 1 275 1 209 4 99 2 143 4 144 4 147 4 242 1 219 1 66 2 152 1 246 7 247 1 248 3 158 2 115 1 118 3 160 1 198 4 42 1 166 1 263 5 86 2 268 4 129 2 133 1 52 1 
175 1 303 1 
17 1 120 1 
298 1 
120 1 254 1 
23 1 175 2 251 1 201 1 120 3 254 1 
23 1 120 1 254 1 
204 1 120 1 
92 4 134 1 232 1 194 1 99 1 214 1 103 3 125 1 87 1 264 2 126 1 186 2 46 1 47 7 151 3 19 1 70 1 
92 4 134 1 232 1 194 1 99 1 214 1 103 3 125 1 87 1 264 2 126 1 186 2 46 1 47 7 151 3 19 1 70 1 
92 4 134 1 232 1 194 1 99 1 214 1 103 3 125 1 87 1 126 1 264 2 186 2 202 1 46 1 47 7 151 3 19 1 70 1 
92 3 112 1 113 1 232 1 29 1 249 1 116 1 226 1 214 1 123 1 145 2 103 3 295 1 125 1 83 1 183 1 264 1 186 1 46 1 170 1 47 6 151 2 19 1 
92 5 134 1 113 2 232 1 249 1 29 2 226 2 99 1 214 1 103 4 145 4 125 1 256 1 41 1 87 1 126 1 264 2 186 3 46 1 47 9 170 2 151 4 19 1 70 1 
10 1 260 1 95 1 269 1 61 1 
10 1 43 1 95 1 269 1 61 1 
10 1 31 1 269 1 255 1 
10 1 43 1 95 1 269 1 61 1 
10 1 260 1 95 1 269 1 61 1 
60 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 242 1 139 1 176 1 209 1 160 1 109 1 50 1 133 1 173 1 172 1 
54 1 139 1 176 1 209 2 144 1 102 2 147 2 242 1 219 1 106 1 67 1 109 1 111 1 290 2 252 1 120 1 160 1 293 1 254 1 124 1 38 2 44 1 200 1 263 1 127 2 132 2 50 1 133 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 102 1 147 2 225 1 139 1 176 1 209 2 109 1 293 1 173 1 172 1 
124 1 147 1 242 1 139 1 176 1 209 1 160 1 109 1 50 1 133 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
124 1 147 1 139 1 176 1 209 1 109 1 173 1 172 1 
145 2 113 1 163 1 29 1 126 1 303 1 170 1 226 1 131 1 216 1 70 1 
92 13 134 2 231 4 57 2 208 2 99 4 214 2 216 1 9 16 103 9 145 4 146 1 181 1 183 4 18 16 186 2 65 1 151 4 222 1 112 4 72 1 287 6 113 2 289 1 29 2 116 1 226 2 163 2 86 2 128 1 170 2 47 22 129 4 
92 1 54 1 138 1 2 1 4 1 235 1 216 1 177 1 145 2 103 1 181 1 14 2 222 1 23 1 111 1 287 1 71 1 113 1 289 1 290 1 29 1 190 1 191 1 193 1 32 2 226 1 120 1 254 1 38 1 257 1 163 1 127 1 128 1 301 1 170 1 47 2 132 1 91 1 
92 10 231 2 232 1 2 1 4 2 6 2 99 3 9 7 103 10 13 1 14 3 181 1 104 2 243 1 18 7 245 2 186 4 111 2 23 2 113 3 29 3 190 2 191 1 32 3 193 2 195 2 120 2 254 2 38 1 257 1 264 1 126 1 128 1 127 3 46 1 47 20 129 2 132 3 134 3 54 2 207 2 214 4 216 3 145 6 151 8 222 1 70 1 71 1 287 7 289 2 290 3 159 1 226 3 228 1 163 3 87 1 86 2 170 3 91 1 
92 1 54 2 2 1 59 1 237 1 216 2 145 4 103 1 14 1 67 1 69 1 222 1 111 2 71 1 113 2 290 5 29 2 292 1 32 1 226 2 196 1 120 3 254 2 37 1 294 1 38 2 257 1 259 1 163 2 200 1 262 1 127 5 128 1 170 2 47 2 131 1 132 4 91 1 
92 1 134 1 231 1 99 1 216 1 9 1 145 2 103 2 279 1 181 1 14 1 18 1 186 1 151 1 287 1 71 1 113 1 29 1 74 1 32 1 226 1 257 1 163 1 86 1 169 1 170 1 129 1 47 3 91 1 
92 2 287 1 113 1 231 1 29 1 226 1 99 1 214 1 216 1 9 1 145 2 163 1 18 1 47 2 170 1 151 1 131 1 48 1 
287 1 134 1 113 1 29 1 226 1 216 1 9 1 145 2 103 2 163 1 18 1 86 1 186 1 47 2 170 1 130 1 151 1 131 1 
92 2 134 1 287 2 113 1 231 1 29 1 226 1 99 1 214 1 216 1 9 2 103 2 145 2 163 1 18 2 86 1 186 1 47 4 170 1 129 1 151 2 131 1 
92 2 287 1 113 1 231 1 29 1 292 1 226 1 99 1 214 1 216 1 9 1 145 2 163 1 18 1 47 2 170 1 151 1 48 1 
287 1 134 1 113 1 29 1 292 1 226 1 216 1 9 1 145 2 103 2 163 1 18 1 86 1 186 1 47 2 170 1 130 1 151 1 
92 2 134 1 287 2 113 1 231 1 29 1 292 1 226 1 99 1 214 1 216 1 9 2 103 2 145 2 163 1 18 2 86 1 186 1 47 4 170 1 129 1 151 2 
92 2 134 1 287 2 113 1 231 1 29 1 226 1 99 1 214 1 216 1 9 2 103 2 145 2 163 1 18 2 86 1 186 1 170 1 129 1 47 4 151 2 
92 1 54 1 4 1 216 1 145 2 103 1 104 1 14 1 222 1 23 1 111 1 113 1 289 1 290 1 29 1 190 1 193 1 32 1 226 1 120 1 254 1 38 1 163 1 127 1 128 1 47 2 170 1 132 1 
92 1 54 1 216 1 145 2 103 1 14 1 222 1 23 1 111 1 288 1 113 1 289 1 290 1 29 1 190 1 32 1 226 1 120 1 254 1 38 1 165 1 163 1 167 1 127 1 128 1 47 2 170 1 132 1 
92 2 134 1 287 2 113 1 231 1 29 1 226 1 99 1 214 1 216 1 9 2 103 2 145 2 181 1 163 1 18 2 86 1 186 1 47 4 170 1 129 1 151 2 
92 2 134 1 231 1 54 1 4 1 99 1 214 1 216 1 9 2 103 2 145 2 104 1 14 1 18 2 245 1 186 1 151 2 69 1 23 1 111 1 287 2 113 1 290 1 29 1 190 1 193 1 32 1 226 1 120 1 254 1 163 1 86 1 127 1 47 4 170 1 129 1 132 1 
92 2 134 1 231 1 99 1 214 1 216 1 9 1 103 1 145 2 279 1 181 1 14 1 18 1 151 1 71 1 287 1 113 1 29 1 32 1 226 1 35 1 257 1 163 1 86 1 169 1 170 1 129 1 47 3 91 1 
92 17 134 4 231 3 232 1 206 1 94 1 99 4 214 3 238 1 7 1 145 8 103 16 183 2 149 1 186 2 151 5 22 1 221 1 70 1 284 1 112 2 113 4 249 2 29 4 116 2 33 1 119 1 226 4 79 3 256 1 87 1 86 3 264 1 126 1 302 1 46 1 170 4 47 33 129 3 90 1 53 1 
92 24 134 6 231 7 94 1 57 2 208 2 99 7 7 1 238 1 214 4 103 22 145 6 280 1 183 4 149 1 186 4 151 8 22 2 221 2 284 1 112 4 113 3 249 2 29 3 116 2 33 1 79 4 119 1 226 3 256 1 86 6 302 1 170 3 47 46 129 7 53 1 
92 33 231 7 232 2 94 1 99 9 238 1 7 1 103 27 183 5 186 6 22 1 112 5 113 4 29 4 249 2 116 3 33 1 119 1 256 1 126 2 264 2 129 7 47 60 46 2 53 1 134 7 57 2 208 2 214 7 145 8 280 1 149 1 151 13 221 2 70 2 284 1 226 4 79 4 227 1 86 5 87 2 302 1 170 4 90 1 
92 18 134 4 231 3 232 1 94 1 99 4 214 3 238 1 7 1 145 8 103 17 280 1 183 2 149 1 186 2 151 5 22 1 221 1 70 1 284 1 112 2 113 4 249 2 29 4 116 2 33 1 119 1 226 4 79 4 256 1 87 1 86 3 264 1 126 1 302 1 46 1 170 4 47 35 129 3 90 1 53 1 
92 22 134 5 231 5 232 1 94 1 57 1 208 1 99 6 7 1 238 1 214 3 145 6 103 20 280 1 183 3 149 1 186 5 151 8 22 1 221 1 70 1 284 1 112 3 113 3 249 2 29 3 116 2 33 1 79 4 119 1 226 3 256 1 87 1 86 4 264 1 126 1 302 1 46 1 170 3 47 42 129 5 53 1 
92 1 54 1 212 1 237 2 216 1 179 1 145 2 103 1 181 1 14 2 105 1 222 1 111 1 113 1 290 2 26 1 29 1 32 2 226 1 120 1 254 1 294 1 163 1 262 1 127 2 128 1 170 1 47 2 304 1 132 2 91 2 
111 1 54 1 290 2 273 1 274 1 3 1 98 1 161 1 101 1 81 1 40 1 258 1 199 1 243 1 127 2 230 1 132 2 69 1 171 2 
111 1 290 1 54 1 273 1 274 1 98 1 161 1 101 1 81 1 40 1 199 1 63 1 243 1 127 1 230 1 132 1 171 2 
111 1 54 1 290 1 120 1 254 1 38 1 101 1 258 1 200 1 127 1 150 1 67 1 132 1 282 1 
111 1 54 1 290 1 273 1 274 1 3 1 98 1 161 1 101 1 81 1 40 1 258 1 199 1 243 1 127 1 230 1 132 1 171 2 
1 1 
38 1 0 1 104 1 290 1 127 1 132 1 21 1 
252 1 160 1 143 1 144 1 242 1 219 1 263 1 268 1 50 1 246 1 133 1 52 1 
12 1 244 1 303 1 
209 1 144 1 102 1 147 1 242 1 185 1 246 1 291 1 118 1 160 1 293 1 263 1 299 1 268 1 50 1 133 1 52 1 
203 1 134 1 231 1 54 2 137 1 209 1 99 1 6 1 142 1 143 3 278 1 144 3 102 1 147 1 241 1 242 2 219 1 17 2 246 6 23 1 111 1 154 1 285 1 290 1 118 3 160 2 120 3 293 1 254 1 198 3 38 1 263 4 86 1 201 1 127 1 129 1 268 3 132 1 50 2 133 2 
134 4 231 4 57 1 208 1 99 4 143 8 238 1 7 1 144 7 242 1 183 2 149 1 246 5 112 2 116 1 33 1 160 1 198 8 263 11 86 4 302 1 129 4 50 1 133 1 
134 1 232 1 209 1 99 1 160 1 144 1 147 1 242 1 263 2 87 1 300 1 45 2 46 1 187 1 21 1 108 1 50 1 51 1 133 1 
160 1 144 1 12 1 242 1 263 1 244 1 268 1 50 1 133 1 52 1 
134 1 231 1 118 2 99 1 143 2 144 2 198 2 263 2 86 1 129 1 268 2 246 4 
102 1 147 1 268 1 209 1 293 1 52 1 
54 1 209 3 97 1 100 2 144 2 102 4 147 3 242 2 219 2 106 1 67 1 247 1 111 1 290 4 252 2 120 1 160 2 293 2 254 1 82 1 38 2 44 1 200 1 168 1 263 2 127 4 132 4 50 1 133 2 
25 1 224 1 178 1 
162 1 25 1 73 1 297 1 178 1 
25 1 224 1 178 1 
25 1 224 1 178 1 
25 1 174 1 178 1 
25 1 174 1 178 1 
25 1 174 1 178 1 
25 1 178 1 
184 1 236 1 
92 4 134 1 113 2 232 1 29 2 249 1 226 2 99 1 214 1 103 4 145 4 87 1 264 1 126 1 186 2 47 8 170 2 46 1 151 3 70 1 
126 1 303 1 70 1 
92 2 134 1 113 1 231 1 29 1 226 1 99 1 214 1 103 2 145 2 86 1 186 1 170 1 129 1 47 4 151 2 188 1 
92 6 112 2 134 2 231 2 116 1 57 1 208 1 99 2 214 1 103 6 183 2 86 2 186 1 47 12 129 2 151 2 
92 11 134 3 231 2 232 2 57 1 208 1 99 3 214 4 103 12 145 4 183 2 65 1 186 5 151 9 70 1 112 2 113 2 249 2 29 2 226 2 295 1 87 1 86 2 264 1 126 1 46 2 129 2 47 23 170 2 
103 1 112 1 47 1 
92 1 183 1 47 1 
92 3 134 1 113 1 231 1 29 1 226 1 6 1 99 1 214 1 145 2 103 3 86 1 186 2 170 1 47 6 129 1 151 3 188 1 
92 11 134 4 231 4 57 1 208 1 99 4 238 1 214 2 7 1 103 11 145 2 183 2 149 1 186 2 151 4 112 2 113 1 29 1 116 1 33 1 226 1 256 1 86 4 302 1 47 22 170 1 129 4 
92 3 134 1 232 1 99 1 214 1 103 3 87 1 186 1 47 6 46 1 151 2 
92 1 113 1 232 1 249 1 29 1 226 1 214 1 295 1 103 2 145 2 126 1 186 1 46 1 47 3 170 1 151 2 70 1 
92 5 134 2 113 1 232 2 29 1 226 1 99 2 214 2 145 2 103 5 256 1 87 1 186 3 170 1 46 2 47 10 187 1 151 5 
92 2 113 1 231 1 29 1 226 1 99 1 214 1 145 2 256 1 170 1 47 2 151 1 
92 2 134 1 113 1 231 1 29 1 226 1 99 1 214 1 103 2 145 2 256 1 86 1 186 1 170 1 129 1 47 4 151 2 
92 1 113 3 232 1 249 1 29 3 226 3 214 1 295 1 103 2 145 6 256 1 186 1 47 3 170 3 46 1 151 2 90 1 
92 7 134 2 232 2 99 2 214 3 103 8 145 8 183 1 186 3 187 1 151 6 188 1 70 1 112 1 113 4 29 4 249 1 116 1 226 4 123 1 295 1 256 1 87 1 126 1 170 4 47 15 46 2 90 1 
92 14 134 4 231 2 232 2 99 5 214 4 238 1 7 1 103 10 145 4 183 1 149 1 186 5 187 1 151 9 70 1 112 1 113 2 249 1 29 2 116 1 33 1 226 2 256 1 87 2 86 1 264 1 126 1 302 1 46 2 47 24 170 2 129 2 
92 10 134 2 231 2 232 1 99 3 214 1 238 1 7 1 103 7 145 6 183 1 149 1 186 3 151 4 188 1 70 1 112 1 113 3 249 1 29 3 116 1 33 1 226 3 256 1 87 1 86 1 264 1 126 1 302 1 46 1 47 17 170 3 129 2 
92 14 134 5 231 4 232 1 57 1 208 1 99 5 238 1 214 2 7 1 103 15 145 6 183 2 149 1 186 4 151 6 188 1 70 1 112 2 113 3 249 1 29 3 116 1 33 1 226 3 256 1 87 1 86 4 264 1 126 1 302 1 46 1 47 29 170 3 129 4 
92 15 134 4 231 4 232 1 57 1 208 1 99 5 238 1 214 3 7 1 103 12 145 6 183 2 149 1 186 4 151 7 188 1 70 1 112 2 113 3 249 1 29 3 116 1 33 1 226 3 256 1 87 1 86 3 264 1 126 1 302 1 46 1 47 27 170 3 129 4 
92 14 134 4 231 2 232 2 99 5 214 4 238 1 7 1 103 10 145 4 183 1 149 1 186 5 187 1 151 9 70 1 112 1 113 2 249 1 29 2 116 1 33 1 226 2 256 1 87 2 86 1 264 1 126 1 302 1 46 2 47 24 170 2 129 2 
92 11 134 4 231 4 57 1 208 1 99 4 238 1 214 2 7 1 103 11 145 2 183 2 149 1 186 2 151 4 112 2 113 1 29 1 116 1 33 1 226 1 256 1 86 4 302 1 47 22 170 1 129 4 
92 15 134 4 231 4 232 1 57 1 208 1 99 5 7 1 238 1 214 3 103 13 145 8 183 2 149 1 186 4 151 7 188 1 70 1 112 2 113 4 249 2 29 4 116 1 33 1 226 4 256 1 87 1 86 3 264 1 126 1 302 1 46 1 47 28 170 4 129 4 
92 3 134 1 231 1 57 1 99 1 238 1 103 4 145 4 183 1 186 1 151 1 112 2 113 2 29 2 116 1 226 2 256 1 86 1 47 7 170 2 129 1 90 1 
92 3 134 1 232 3 99 1 214 3 103 4 87 1 126 2 186 3 47 7 46 3 151 6 70 1 
92 3 134 1 231 1 57 1 99 1 238 1 103 4 145 4 183 1 186 1 151 1 112 2 113 2 29 2 116 1 226 2 256 1 86 1 47 7 170 2 129 1 90 1 
253 1 176 1 276 1 
155 1 296 1 253 1 76 1 176 1 276 1 267 1 277 1 
38 1 290 1 200 1 127 1 303 1 132 1 
23 1 111 1 71 1 289 1 54 1 290 1 190 1 2 1 32 2 193 1 120 1 254 1 38 1 257 1 14 2 127 1 132 1 91 1 
271 1 54 1 204 1 2 1 58 1 239 1 100 1 14 2 111 1 23 2 71 1 289 1 290 1 157 1 190 1 193 1 32 2 120 3 254 2 257 2 127 1 132 1 91 2 
271 1 54 1 204 1 2 1 58 1 239 1 100 1 14 2 111 1 23 2 71 1 288 1 289 1 290 2 157 1 190 1 32 2 120 3 254 2 257 2 127 2 266 1 132 2 91 2 
270 1 54 1 175 1 204 1 209 2 239 1 100 1 102 1 147 2 17 1 281 1 21 1 111 1 23 1 290 1 120 4 254 1 164 1 300 1 127 1 268 1 132 1 51 1 52 1 
203 1 290 1 209 1 120 1 100 1 147 1 17 1 300 1 127 1 268 1 21 1 132 1 51 1 52 1 
259 1 
23 1 111 2 290 4 54 3 250 1 59 1 196 1 120 3 254 2 37 1 38 2 259 1 262 1 201 1 127 4 89 1 132 3 69 1 223 1 
92 3 232 1 2 1 4 1 99 1 9 1 103 3 104 1 14 2 181 1 18 1 245 1 186 2 111 1 23 1 113 2 29 2 190 1 193 1 32 2 120 1 254 1 257 1 126 1 264 1 127 1 46 1 47 6 132 1 134 1 54 1 207 1 216 2 145 4 151 2 69 1 70 1 287 1 71 1 290 1 289 2 226 2 163 2 87 1 170 2 304 1 91 1 
203 1 134 2 232 1 137 1 209 2 97 1 99 1 142 1 144 3 102 1 12 1 147 2 241 1 242 2 17 1 244 1 187 1 21 1 290 1 248 1 160 2 120 1 293 1 38 1 263 4 87 1 300 1 45 2 127 1 46 1 268 2 132 1 50 2 51 1 133 2 52 2 
259 1 
111 1 54 1 290 4 189 1 120 1 254 1 38 1 200 1 127 4 266 1 67 1 132 4 69 1 
23 1 111 1 290 2 54 2 250 1 120 1 254 1 100 1 39 1 13 1 64 1 127 2 132 2 223 1 
111 1 38 1 199 1 54 1 290 1 274 1 127 1 161 1 132 1 171 1 
111 1 54 1 290 2 243 1 262 1 105 1 127 2 120 1 132 2 69 1 254 1 
111 2 290 5 54 2 189 1 59 1 196 1 120 3 254 2 100 1 38 1 200 1 262 1 127 5 67 1 132 4 69 1 
111 2 290 5 54 2 189 1 93 1 59 1 120 3 254 2 100 1 38 1 200 1 262 1 127 5 67 1 132 4 69 1 
23 1 111 1 71 1 288 1 289 1 54 1 290 1 190 1 2 1 32 2 120 1 254 1 38 1 257 1 14 2 127 1 132 1 91 1 
23 1 111 1 290 1 54 2 250 1 120 1 254 1 100 1 201 1 127 1 89 1 132 1 223 1 
26 1 27 1 32 1 212 1 179 1 14 1 182 1 265 1 91 1 
62 1 272 1 265 1 
289 1 182 1 27 1 265 1 215 1 
271 1 248 1 157 1 136 1 27 1 272 1 58 1 209 2 215 1 147 2 62 1 15 1 164 1 182 1 16 1 300 1 265 1 268 1 21 1 51 1 52 1 

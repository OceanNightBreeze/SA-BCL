#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (6,204) (6,204) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (6,204) (6,204) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (6,204) (6,204) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 (6,204) (6,204) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 250 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 74 250 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) 84 261 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) 84 179 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (46,209) 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 185 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) (1,76,163) 69 192 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 343 288 110 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 295 88 332 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 295 88 332 255 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (46,209) (46,209) 248 (136,211) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (46,209) (46,209) 248 (28,126) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 27 141 (28,126) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (46,209) (46,209) (1,76,163) 84 64 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
182 1 327 1 107 2 186 2 30 1 154 9 6 1 217 9 90 2 354 1 134 2 314 1 195 1 14 6 74 1 162 1 298 3 171 4 200 2 345 2 273 2 121 1 301 1 80 4 23 1 204 1 
182 1 327 1 107 2 186 2 30 1 154 9 6 1 217 9 90 2 354 1 314 1 134 2 195 1 14 6 74 1 162 1 298 3 171 4 200 2 345 2 273 2 121 1 301 1 80 4 23 1 204 1 
182 1 327 1 107 2 186 2 30 1 154 9 6 1 217 9 90 2 354 1 314 1 134 2 195 1 14 6 74 1 162 1 298 3 171 4 200 2 345 2 273 2 121 1 301 1 80 4 23 1 204 1 
182 1 327 1 107 2 186 2 30 1 154 7 6 1 217 7 90 2 354 1 314 1 134 1 195 1 14 4 74 1 162 1 298 2 171 3 200 2 345 2 273 2 301 1 80 3 23 1 204 1 
134 2 195 1 14 3 74 1 182 1 186 1 298 1 171 2 200 1 345 1 273 1 154 4 121 1 80 2 217 4 90 1 
257 1 195 1 162 1 147 1 107 1 186 1 171 1 97 1 300 1 345 1 273 1 30 1 308 1 154 2 217 2 90 1 
195 1 14 1 327 1 107 1 97 1 298 1 171 2 300 1 273 2 154 3 80 1 217 3 90 2 
354 1 134 2 314 1 195 1 14 7 182 1 74 1 327 1 127 1 186 1 107 1 171 4 298 3 200 1 345 1 250 1 273 2 154 9 121 1 80 4 217 9 90 2 
354 1 134 2 314 1 195 1 14 7 182 1 74 1 327 1 127 1 186 1 107 1 171 4 298 3 200 1 345 1 250 1 273 2 154 9 121 1 80 4 217 9 90 2 
125 1 33 1 185 1 
278 1 
324 2 13 2 87 1 94 2 264 2 37 2 96 1 114 2 
324 2 284 1 286 1 180 1 235 2 184 1 51 2 330 1 210 1 187 1 260 1 211 1 237 1 85 2 87 1 264 3 290 1 268 2 114 2 353 1 57 1 91 1 245 1 13 3 36 1 94 2 356 1 37 2 248 1 96 1 170 1 77 1 222 1 279 1 177 2 231 1 361 1 
324 1 13 1 94 1 15 1 264 1 37 1 258 1 21 1 96 1 114 1 
13 1 15 1 209 1 163 1 264 1 46 1 295 1 76 1 114 1 
324 1 13 1 94 1 15 1 209 1 163 1 264 1 37 1 46 1 114 1 
1 1 100 1 293 1 329 1 331 1 
324 1 125 1 13 1 1 2 94 1 15 1 37 1 258 1 357 1 293 1 96 1 329 1 297 1 83 1 100 2 33 1 264 1 21 1 114 1 
1 1 100 1 293 1 
324 1 1 1 13 1 94 1 15 1 258 1 37 1 357 1 329 1 96 1 100 1 264 1 21 1 114 1 
33 1 
324 1 125 1 13 1 1 2 94 1 15 1 37 1 258 1 357 1 293 1 96 1 329 1 83 1 100 2 336 1 33 1 264 1 21 1 114 1 
125 1 313 1 256 2 1 5 293 2 236 2 329 2 3 1 42 1 83 1 33 1 100 5 190 1 144 2 65 1 113 1 71 1 303 1 244 1 
87 1 185 1 
11 1 324 1 13 2 94 1 37 1 95 1 87 2 264 2 114 2 
153 1 219 1 49 1 
91 1 245 1 13 1 180 1 248 1 51 1 170 1 187 1 211 1 77 1 85 1 87 1 264 1 177 1 243 1 231 1 
324 1 13 3 87 1 94 3 264 3 37 3 267 1 114 3 
13 1 94 1 15 1 264 1 37 1 21 1 114 1 
11 1 324 1 13 1 94 1 15 1 264 1 37 1 95 1 114 1 
304 1 324 1 13 2 94 2 15 1 209 1 37 2 163 1 95 1 261 1 84 1 264 2 46 1 267 1 114 2 
13 2 87 1 88 1 94 1 264 2 37 1 295 1 267 1 114 2 
304 1 13 1 179 1 94 1 15 1 37 1 163 1 209 1 84 1 264 1 46 1 267 1 114 1 
324 1 13 2 94 2 37 2 219 1 95 1 153 1 264 2 267 1 114 2 
91 1 245 1 13 1 180 1 248 1 51 1 170 1 187 1 211 1 77 1 85 1 87 1 264 1 177 1 231 1 
91 1 13 1 180 1 248 1 51 1 126 1 170 1 187 1 77 1 155 1 85 1 87 1 264 1 177 1 231 1 
284 2 286 1 235 2 184 1 287 1 330 1 129 1 151 1 130 1 31 1 153 2 268 4 57 1 36 1 356 2 219 2 198 1 17 1 320 1 299 1 174 1 99 1 49 2 361 1 
307 1 13 1 94 1 15 1 264 1 37 1 46 1 114 1 
304 1 91 1 245 1 13 2 180 1 94 1 37 1 219 1 248 1 51 1 170 1 187 1 211 1 77 1 85 1 264 2 267 1 177 1 231 1 114 1 
304 1 324 1 13 4 207 1 94 4 15 1 37 4 95 1 317 1 87 1 264 4 54 1 267 2 114 4 
307 1 13 2 94 2 15 1 264 2 37 2 21 1 114 2 
164 1 7 1 
164 1 7 1 
81 1 143 1 
81 1 143 1 
81 1 143 1 
178 1 164 1 7 1 
178 1 164 1 7 1 
164 1 18 1 7 1 
276 1 81 1 143 1 164 2 7 2 78 1 
178 1 164 1 7 1 
202 1 164 1 7 1 
202 1 164 1 7 1 
202 1 164 1 7 1 
324 1 1 2 258 1 259 1 150 2 128 1 214 1 264 1 240 1 194 1 7 2 114 1 115 2 13 1 161 1 94 1 15 1 37 1 357 1 166 1 164 2 165 2 96 1 359 1 98 2 100 2 21 1 347 2 205 1 
1 1 150 1 289 1 87 1 264 2 311 1 7 1 339 1 114 2 115 1 13 2 161 1 342 1 247 1 94 2 37 2 164 1 165 1 169 1 18 1 98 1 100 1 347 1 230 1 
186 1 200 1 345 1 
308 1 186 1 345 1 
308 1 216 1 41 1 139 1 200 2 345 3 
308 1 216 1 41 1 200 1 89 1 345 2 
308 1 216 2 41 1 200 1 345 2 
125 1 256 1 1 5 236 1 329 4 287 1 350 1 151 1 83 1 33 2 190 3 157 1 351 1 266 2 71 2 291 1 311 1 8 1 244 1 342 1 247 1 293 1 167 1 198 1 271 1 99 1 100 5 278 3 144 1 229 1 281 2 122 2 124 1 
125 1 326 1 256 2 1 9 236 2 52 1 329 7 149 1 287 3 331 5 350 1 151 3 83 1 33 5 338 1 190 8 351 3 266 6 71 6 291 2 8 3 244 1 313 1 342 4 293 6 198 3 99 3 20 5 100 9 278 9 144 2 322 1 229 3 281 6 103 1 124 2 
324 1 125 1 256 1 1 3 258 1 236 1 329 2 287 1 151 1 33 2 264 1 190 3 351 1 266 2 291 1 71 2 8 1 114 1 313 1 13 1 342 1 94 1 15 1 37 1 357 1 96 1 167 1 198 1 271 1 99 1 100 3 278 3 21 1 144 1 229 1 122 1 281 2 124 1 
125 1 324 1 1 4 236 1 329 3 52 1 287 2 190 5 338 1 291 1 8 2 13 1 342 2 94 1 15 1 96 1 198 2 99 2 100 4 21 1 144 1 256 1 258 1 149 1 151 2 33 3 264 1 351 2 266 4 71 4 114 1 313 1 37 1 357 1 167 1 271 1 278 6 229 2 122 2 281 4 124 1 
224 1 185 1 
82 1 231 1 
131 1 
187 1 231 1 
180 1 181 1 187 1 274 1 224 2 131 1 231 1 
180 1 187 1 231 1 
315 1 231 1 
0 1 284 3 50 1 356 3 287 1 40 1 138 2 60 1 320 4 299 2 151 1 188 1 309 1 158 2 268 6 352 1 72 2 
0 1 284 3 50 1 356 3 287 1 40 1 138 2 60 1 320 4 299 2 151 1 188 1 309 1 158 2 268 6 352 1 72 2 
0 1 325 1 284 3 50 1 356 3 287 1 40 1 138 2 60 1 320 4 299 2 151 1 188 1 309 1 158 2 268 6 352 1 72 2 
0 1 284 19 286 2 50 1 235 4 208 4 183 2 305 1 184 2 330 2 287 5 108 1 152 1 151 5 188 1 309 2 158 3 159 4 268 38 352 2 72 6 92 1 356 19 117 1 40 1 198 4 138 3 60 2 118 1 320 12 299 6 99 4 101 1 229 4 361 2 323 1 
0 1 284 4 286 2 50 1 235 4 183 1 184 2 287 1 330 2 151 1 337 1 309 1 34 1 158 2 268 8 352 1 72 1 356 4 40 1 138 2 60 1 320 4 299 3 361 2 
25 1 67 1 51 1 186 1 107 1 308 1 154 2 85 1 217 2 292 1 90 1 10 1 14 1 195 1 294 1 170 1 171 1 97 1 172 1 139 1 200 1 199 1 77 1 300 1 272 1 345 2 273 1 120 1 22 1 177 1 
66 1 25 1 51 1 328 1 186 1 107 1 308 1 154 3 85 1 217 3 292 1 90 1 10 1 14 2 316 1 294 1 170 1 171 1 97 1 139 1 172 1 200 1 199 1 77 1 300 1 272 1 345 2 273 1 22 1 177 1 
66 1 51 1 328 1 107 1 186 1 308 1 154 2 85 1 217 2 292 1 10 1 14 2 294 1 170 1 171 1 97 1 139 1 199 1 200 1 77 1 300 1 272 1 345 2 22 1 177 1 
91 1 12 1 58 1 316 1 51 1 170 1 187 1 107 2 199 2 77 1 63 1 272 2 273 1 154 1 85 1 226 1 79 1 22 2 177 1 217 1 231 1 123 1 90 1 
66 1 25 1 51 1 186 1 107 1 308 1 154 1 85 1 217 1 292 1 90 1 10 1 195 1 294 1 170 1 172 1 139 1 200 1 199 1 77 1 272 1 345 2 273 1 120 1 22 1 177 1 
5 1 
256 1 1 2 106 1 209 1 51 2 236 1 187 1 83 1 69 1 85 2 264 1 190 1 192 1 291 1 71 1 114 1 244 1 91 2 13 1 15 1 163 1 293 2 295 1 170 1 76 1 77 1 173 1 100 2 226 1 46 1 144 1 176 1 177 2 231 1 123 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 2 13 1 15 1 209 1 163 1 293 1 295 1 76 1 83 1 69 1 100 2 336 1 264 1 46 1 192 1 114 1 
256 1 13 1 1 1 15 1 209 1 163 1 236 1 295 1 76 1 69 1 100 1 264 1 46 1 144 1 192 1 244 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
1 1 13 1 15 1 163 1 209 1 295 1 76 1 69 1 100 1 264 1 46 1 192 1 114 1 
256 1 13 1 1 1 15 1 209 1 163 1 236 1 295 1 76 1 69 1 100 1 264 1 46 1 144 1 192 1 244 1 114 1 
57 1 0 1 284 2 286 1 50 1 36 1 235 2 356 3 184 1 185 1 287 1 40 1 17 1 330 1 138 2 320 2 299 2 151 1 87 2 158 2 268 5 361 1 
284 8 286 2 235 4 208 3 184 2 330 2 287 2 210 1 153 4 151 1 87 1 159 3 268 14 72 1 57 2 36 1 356 6 219 11 117 1 198 1 320 2 118 1 44 1 299 1 222 1 99 2 225 1 254 1 229 2 49 11 145 1 323 1 361 2 
304 1 284 1 286 1 180 1 235 2 184 1 51 1 330 1 187 1 210 1 211 1 262 1 153 1 85 1 87 1 264 2 241 1 267 1 243 1 268 2 114 1 245 1 91 1 57 1 13 2 36 1 94 1 37 1 356 1 248 1 170 1 77 1 44 1 222 1 45 1 177 1 231 1 361 1 
0 1 284 9 286 3 180 2 50 1 235 6 184 3 51 3 330 3 287 3 187 2 237 2 85 3 87 2 56 1 91 1 57 3 245 2 13 3 94 1 197 1 248 2 198 2 138 2 299 4 99 2 346 2 304 1 66 1 210 1 211 2 151 3 153 6 264 3 158 2 267 1 268 19 35 1 114 1 72 4 73 2 36 3 356 10 37 1 219 6 40 1 170 2 320 8 44 1 77 2 222 1 275 2 277 2 177 3 229 2 49 6 231 2 361 3 
66 1 284 1 67 1 286 2 235 4 2 1 184 2 51 8 330 2 210 1 187 2 212 1 53 1 85 7 264 1 70 1 267 1 268 2 114 1 91 2 57 2 13 1 94 1 36 2 37 1 356 1 75 1 17 1 170 2 77 2 222 1 142 1 226 1 280 1 177 8 279 2 231 3 123 1 361 2 
324 1 284 1 286 1 235 2 184 1 330 1 287 1 153 1 151 1 264 1 268 3 114 1 57 1 13 1 36 1 94 1 37 1 356 2 219 1 95 1 198 1 249 1 320 1 44 1 299 1 99 1 229 1 49 1 361 1 
57 1 284 2 286 1 36 1 235 2 219 1 184 1 17 1 330 1 287 1 320 1 129 1 153 1 99 1 49 1 268 2 72 1 361 1 
57 1 286 1 36 1 235 2 356 2 219 1 184 1 17 1 330 1 198 1 320 1 299 1 153 1 130 1 151 1 49 1 268 2 361 1 
57 1 284 2 286 1 36 1 235 2 356 2 219 2 184 1 198 1 17 1 330 1 287 1 320 2 299 1 151 1 153 2 99 1 229 1 49 2 268 4 72 1 361 1 
57 1 284 2 286 1 36 1 235 2 219 1 184 1 330 1 287 1 320 1 129 1 153 1 99 1 70 1 49 1 268 2 72 1 361 1 
57 1 286 1 36 1 235 2 356 2 219 1 184 1 330 1 198 1 153 1 130 1 151 1 70 1 49 1 268 2 361 1 
57 1 284 2 286 1 36 1 235 2 356 2 219 2 184 1 198 1 330 1 287 1 151 1 153 2 99 1 70 1 229 1 49 2 268 4 361 1 
57 1 284 2 286 1 36 1 235 2 356 2 219 2 184 1 198 1 330 1 287 1 320 2 299 1 151 1 153 2 99 1 229 1 49 2 268 4 72 1 361 1 
284 1 286 1 180 1 235 2 184 1 51 1 330 1 210 1 187 1 211 1 237 1 85 1 87 1 264 1 268 2 245 1 91 1 57 1 13 1 36 1 356 1 248 1 170 1 77 1 222 1 177 1 231 1 361 1 
284 1 286 1 180 1 235 2 184 1 51 1 126 1 330 1 210 1 187 1 155 1 85 1 87 1 264 1 268 2 91 1 57 1 13 1 36 1 356 1 248 1 170 1 77 1 222 1 360 1 177 1 231 1 361 1 
57 1 284 2 286 1 36 1 235 2 356 2 219 2 184 1 198 1 330 1 287 1 320 2 44 1 299 1 151 1 153 2 99 1 229 1 49 2 268 4 72 1 361 1 
284 2 67 1 286 1 180 1 235 2 184 1 51 1 287 1 330 1 187 1 211 1 237 1 151 1 153 2 85 1 264 1 268 4 72 1 245 1 57 1 13 1 36 1 356 2 219 2 248 1 198 1 170 1 320 2 77 1 299 1 99 1 277 1 177 1 229 1 49 2 231 1 361 1 
324 1 284 2 286 1 235 2 184 1 330 1 287 1 151 1 153 1 264 1 268 3 72 1 114 1 57 1 13 1 36 1 94 1 356 1 37 1 219 1 95 1 198 1 137 1 320 1 44 1 99 1 229 1 49 1 361 1 
0 1 104 1 233 1 284 27 286 4 50 1 183 2 235 8 208 4 184 4 330 4 287 8 306 1 288 1 68 3 110 1 334 1 151 7 265 1 158 2 55 1 34 1 159 4 268 53 72 8 355 1 269 1 93 1 343 1 356 26 117 2 40 1 198 6 138 2 118 2 320 16 299 8 99 7 321 1 229 7 323 2 361 4 
0 1 104 1 233 1 284 28 286 4 50 1 183 2 235 8 208 4 184 4 330 4 287 8 306 1 288 1 68 4 110 1 334 1 151 7 265 1 158 2 55 1 34 1 159 4 268 55 72 8 355 1 269 1 93 1 343 1 356 27 117 2 40 1 198 6 138 2 118 2 320 16 299 8 99 7 321 1 229 7 323 2 361 4 
0 1 104 1 233 1 284 26 286 2 50 1 183 1 235 4 208 4 184 2 330 2 287 8 306 1 288 1 68 4 110 1 334 1 151 8 265 1 158 2 55 1 34 1 159 4 268 52 72 7 355 1 93 1 343 1 356 26 117 2 40 1 198 7 138 2 118 2 320 15 299 8 99 7 321 1 229 7 323 2 361 2 
0 1 233 1 284 27 286 4 50 1 183 2 235 8 208 4 184 4 4 1 330 4 287 8 306 1 288 1 68 3 110 1 334 1 151 7 265 1 158 2 55 1 34 1 159 4 268 53 72 9 355 1 269 1 93 1 343 1 356 26 117 2 40 1 198 6 138 2 118 2 320 17 299 8 99 7 321 1 229 7 323 2 361 4 
104 1 233 2 284 14 286 3 183 2 235 6 208 2 184 3 330 3 287 3 306 1 288 1 68 4 334 1 110 1 151 2 265 1 55 1 34 1 159 2 268 26 72 2 355 1 93 2 343 1 356 12 198 2 320 4 299 2 99 3 321 1 229 3 361 3 323 2 
133 1 115 1 160 1 276 1 164 1 165 1 270 1 150 1 98 1 7 1 
169 1 18 1 
115 1 340 1 164 1 165 1 59 1 102 1 150 1 98 1 7 1 
324 1 1 1 258 1 259 1 150 1 128 1 214 1 264 1 240 1 194 1 7 1 114 1 115 1 13 1 161 1 94 1 15 1 37 1 357 1 166 1 164 1 165 1 96 1 359 1 98 1 100 1 21 1 347 2 205 1 
324 1 1 1 258 1 259 1 150 1 128 1 214 1 264 1 240 1 194 1 7 1 114 1 115 1 13 1 161 1 94 1 15 1 37 1 357 1 166 1 164 1 165 1 96 1 359 1 98 1 100 1 21 1 347 2 205 1 
324 1 1 1 258 1 259 1 150 1 128 1 214 1 264 1 240 1 194 1 7 1 114 1 115 1 13 1 161 1 94 1 15 1 37 1 357 1 166 1 164 1 165 1 96 1 359 1 98 1 100 1 21 1 347 2 205 1 
178 1 156 1 78 1 
178 1 156 1 78 1 
116 1 202 1 
116 1 202 1 78 1 
289 1 339 1 
1 1 329 1 150 1 238 1 289 1 87 1 264 2 240 1 311 1 7 1 339 1 114 2 115 1 13 2 342 1 247 1 94 2 37 2 166 1 164 1 165 1 169 1 18 1 98 1 100 1 347 1 230 1 
178 1 156 1 
116 1 202 1 78 1 
284 1 286 1 235 2 184 1 51 2 330 1 187 1 210 1 212 1 53 1 85 2 264 2 268 2 114 2 57 1 13 2 36 1 218 1 356 1 39 1 170 1 344 1 61 1 77 1 44 1 222 1 177 2 279 2 24 1 231 1 361 1 
66 1 25 1 67 1 51 2 170 1 186 1 139 1 200 1 221 1 199 1 77 1 345 2 62 1 119 1 308 1 85 2 177 2 292 1 10 1 
66 1 25 1 51 1 170 1 186 1 139 1 200 1 199 1 77 1 345 2 62 1 175 1 308 1 85 1 177 1 292 1 10 1 
91 1 58 1 51 1 170 1 187 1 221 1 199 1 77 1 85 1 215 1 226 1 177 1 231 1 123 1 
66 1 25 1 51 1 170 1 186 1 139 1 200 1 221 1 199 1 77 1 345 2 62 1 119 1 308 1 85 1 177 1 292 1 10 1 
111 1 
125 1 33 1 190 1 185 1 65 1 71 1 303 1 
256 1 236 1 43 1 33 1 278 1 190 1 47 1 144 1 351 1 71 1 244 1 
125 1 285 2 1 5 180 3 181 1 82 3 236 3 51 1 287 2 187 3 335 1 83 3 85 1 190 8 291 2 193 1 244 3 91 1 135 2 246 2 293 5 136 2 198 2 99 2 100 5 346 2 144 3 302 2 256 3 106 1 27 2 151 2 263 2 33 7 351 6 266 6 71 7 170 4 77 3 224 2 278 12 177 1 229 2 281 6 282 1 231 6 
125 1 256 2 1 1 208 1 236 2 287 1 288 1 110 1 83 1 151 1 33 4 265 1 190 5 351 3 266 4 71 3 159 1 8 1 244 2 355 1 343 1 293 1 198 1 220 1 99 1 100 1 278 6 144 2 229 1 281 4 323 1 
324 1 256 1 1 1 258 1 236 1 287 2 151 1 86 1 264 1 190 2 71 2 158 1 8 2 244 1 114 1 13 1 94 1 15 1 37 1 357 1 96 1 40 1 138 1 319 1 100 1 21 1 144 1 232 1 
125 1 256 1 236 1 33 1 190 1 144 1 65 1 71 1 303 1 244 1 
287 1 198 1 99 1 151 1 33 1 278 3 190 2 351 1 266 2 71 2 229 1 8 1 281 2 
125 1 83 1 1 1 33 1 100 1 293 1 
256 2 1 3 106 2 236 2 51 4 187 1 83 2 85 4 239 2 190 2 291 2 71 2 244 1 313 1 91 2 196 1 38 1 293 4 170 1 296 1 77 1 173 1 100 3 226 1 144 2 176 1 177 4 231 1 123 1 
324 2 286 1 180 1 235 2 184 1 51 1 330 1 187 1 211 1 237 1 85 1 87 1 264 3 290 1 268 1 114 2 91 1 245 1 57 1 13 3 94 2 36 1 356 1 37 2 248 1 96 1 170 1 77 1 222 1 177 1 231 1 361 1 
125 2 256 1 106 1 236 1 60 1 33 4 278 4 190 1 351 2 144 1 266 2 71 2 291 1 281 2 244 1 
191 1 150 1 98 1 
191 1 150 1 98 1 
133 1 289 1 150 1 98 1 109 1 
191 1 150 1 98 1 
213 1 150 1 98 1 
213 1 150 1 98 1 
213 1 150 1 98 1 
150 1 98 1 
164 1 7 1 
0 1 284 3 286 1 50 1 208 1 235 2 184 1 287 1 330 1 110 1 151 1 34 1 158 2 159 1 268 7 356 4 40 1 138 2 320 2 299 2 323 1 361 1 
0 1 284 5 286 2 50 1 235 4 208 1 184 2 330 2 287 2 110 1 151 1 158 2 34 1 159 2 268 10 72 1 356 5 16 1 40 1 138 2 118 1 320 3 299 2 99 1 229 1 323 1 361 2 
0 1 284 8 286 3 50 1 208 1 235 6 183 1 184 3 330 3 287 3 288 1 110 1 151 3 265 1 158 2 34 1 159 1 268 18 72 1 355 1 16 1 343 1 356 10 40 1 198 2 138 2 320 5 299 4 99 2 229 2 323 1 361 3 
0 1 284 9 286 3 50 1 183 1 208 1 235 6 184 3 330 3 287 3 288 1 110 1 151 2 265 1 158 2 34 1 159 1 268 16 72 3 355 1 16 1 356 7 343 1 40 1 198 1 138 2 320 5 299 2 99 2 229 2 323 1 361 3 
0 1 284 3 286 1 50 1 208 1 235 2 184 1 287 1 330 1 110 1 151 1 34 1 158 2 159 1 268 7 356 4 40 1 138 2 320 2 299 2 323 1 361 1 
284 6 286 1 208 1 235 2 184 1 330 1 287 2 288 1 110 1 151 2 265 1 34 1 159 1 268 12 72 1 355 1 356 6 343 1 198 2 320 2 299 1 99 2 229 2 323 1 361 1 
0 1 284 9 286 4 50 1 235 8 208 1 183 2 184 4 330 4 287 3 288 1 110 1 151 2 265 1 158 2 34 1 159 1 268 17 72 3 355 1 343 1 356 8 16 1 40 1 198 1 138 2 320 6 299 3 99 2 229 2 323 1 361 4 
284 7 286 3 183 1 235 6 208 1 184 3 330 3 287 2 288 1 110 1 151 1 265 1 34 1 159 1 268 11 72 2 355 1 269 1 356 4 343 1 198 1 320 2 99 2 229 2 323 1 361 3 
0 2 284 3 50 1 356 4 40 1 287 1 138 2 320 4 299 2 151 1 158 2 268 7 72 2 
0 1 284 9 286 4 50 1 235 8 208 1 183 2 184 4 330 4 287 3 288 1 110 1 151 2 265 1 158 2 34 1 159 1 268 17 72 1 355 1 269 1 343 1 356 8 40 1 198 1 138 2 320 4 299 3 99 2 229 2 323 1 361 4 
0 1 284 4 286 2 50 1 235 4 183 1 356 5 184 2 287 1 40 1 330 2 138 2 320 4 299 2 151 1 158 2 268 9 72 2 361 2 
0 1 151 1 284 2 50 1 356 3 185 1 287 1 40 1 158 2 138 2 268 5 320 2 299 2 
284 2 286 1 235 2 356 2 16 1 184 1 330 1 287 1 198 1 320 1 299 1 151 1 99 1 229 1 268 4 361 1 
284 6 208 2 356 6 117 1 198 2 287 2 118 1 320 4 299 2 151 2 99 2 229 2 159 2 268 12 323 1 72 2 
0 1 284 13 286 2 50 1 208 2 183 2 235 4 184 2 287 4 330 2 151 4 86 1 158 4 159 2 268 29 72 5 92 1 356 16 117 1 40 2 198 2 138 4 320 11 118 1 299 6 99 2 225 1 229 2 361 2 
356 1 159 1 268 1 
284 1 208 1 268 1 
284 3 286 1 235 2 16 1 356 3 184 1 330 1 287 1 198 1 320 3 299 1 99 1 151 1 346 1 229 1 268 6 361 1 72 2 
284 6 286 1 208 1 235 2 184 1 330 1 287 2 288 1 110 1 151 2 265 1 34 1 159 1 268 12 72 1 355 1 356 6 343 1 198 2 320 2 299 1 99 2 229 2 323 1 361 1 
284 2 356 2 40 1 287 1 138 1 320 1 299 1 151 1 158 1 268 4 
0 1 284 1 286 1 92 1 50 1 183 1 235 2 356 2 184 1 330 1 138 1 320 2 299 1 158 1 268 3 72 1 361 1 
284 2 356 3 40 1 287 1 138 2 320 2 299 2 151 1 86 1 158 2 268 5 
284 2 286 1 235 2 184 1 330 1 287 1 320 1 99 1 34 1 268 2 361 1 72 1 
284 2 286 1 235 2 356 2 184 1 198 1 330 1 287 1 320 2 299 1 151 1 99 1 34 1 229 1 268 4 361 1 72 1 
284 1 286 3 92 1 183 1 269 1 235 6 356 2 184 3 330 3 138 1 320 2 299 1 34 1 158 1 268 3 361 3 72 1 
0 1 284 19 286 5 50 1 183 2 235 10 208 4 305 1 184 5 330 5 287 6 108 1 151 6 158 3 34 1 159 4 268 40 72 7 92 1 269 1 356 21 16 1 117 1 40 2 198 4 138 3 118 1 320 13 299 6 99 4 101 1 229 4 323 1 361 5 
88 1 295 1 332 1 
206 1 201 1 88 1 252 1 295 1 332 1 255 1 312 1 
91 1 85 1 226 1 185 1 51 1 170 1 187 1 177 1 77 1 231 1 123 1 
91 1 13 2 180 1 94 1 37 1 248 1 51 1 170 1 187 1 211 1 77 1 85 1 87 1 264 2 267 1 177 1 231 1 114 1 
13 1 180 1 94 1 15 1 209 1 37 1 248 1 51 1 170 1 187 1 211 1 77 1 85 1 264 1 46 1 239 1 267 1 177 1 231 1 114 1 
13 1 180 1 94 1 15 1 209 1 37 1 248 1 51 1 126 1 170 1 187 1 77 1 85 1 264 1 46 1 239 1 267 1 177 1 231 1 114 1 
1 1 180 1 315 1 27 1 28 1 82 1 51 1 170 1 187 1 141 1 77 1 100 1 85 1 224 1 239 1 177 1 231 3 
91 1 125 1 1 2 135 1 180 1 315 1 27 1 82 1 293 1 51 3 136 1 29 1 170 1 187 1 77 1 33 1 100 2 85 3 224 1 239 1 177 3 231 3 
142 1 85 1 51 1 170 1 177 1 77 1 
91 1 26 1 180 1 181 1 51 1 170 2 187 1 77 1 223 1 85 1 48 1 177 1 231 1 
0 1 284 2 286 2 67 1 180 1 50 1 235 4 184 2 51 1 287 1 330 2 187 1 211 1 237 1 151 1 85 1 87 2 264 2 158 2 267 1 268 5 114 1 57 2 245 1 73 1 13 2 36 2 94 1 356 3 37 1 248 1 40 1 170 1 138 2 61 1 320 2 77 1 44 1 299 2 277 1 177 1 231 1 361 2 
125 1 256 2 285 1 1 3 180 1 27 1 82 1 51 1 236 2 329 1 187 1 83 1 33 1 85 1 190 1 71 1 244 2 91 1 135 1 246 1 196 1 293 2 136 1 170 1 77 1 100 3 224 1 144 2 65 1 177 1 302 1 303 1 231 2 
180 1 181 1 51 1 170 2 187 1 77 1 335 1 142 1 224 1 85 1 177 1 131 1 231 1 
91 1 67 1 51 4 29 1 170 1 187 1 77 1 85 4 226 1 228 1 177 4 123 1 231 1 
180 1 197 1 51 1 170 2 187 1 140 1 77 1 223 1 85 1 48 1 310 1 177 1 231 1 
91 1 308 1 85 1 51 1 170 1 186 1 177 1 292 1 77 1 345 1 
66 1 67 1 85 2 51 2 170 1 344 1 187 1 177 2 77 1 231 1 212 1 
91 1 67 1 2 1 51 5 170 2 187 2 77 2 212 1 85 4 226 1 239 1 228 1 177 5 280 1 123 1 231 3 
91 1 67 1 51 5 170 2 187 2 77 2 212 1 85 4 226 1 239 1 227 1 228 1 177 5 280 1 123 1 231 3 
91 1 13 2 180 1 94 1 37 1 248 1 51 1 126 1 170 1 187 1 77 1 85 1 87 1 264 2 267 1 177 1 231 1 114 1 
26 1 180 1 181 1 51 1 170 2 187 1 77 1 223 1 85 1 239 1 48 1 177 1 231 1 
132 1 283 1 87 1 189 1 168 1 
283 1 132 1 1 1 105 1 15 1 209 1 163 1 329 1 168 1 32 1 84 1 100 1 64 1 189 1 46 1 
283 1 13 1 218 1 39 1 168 1 189 1 264 1 24 1 114 1 
105 1 64 1 189 1 
185 1 171 1 97 1 300 1 
273 1 154 1 171 1 97 1 217 1 90 1 300 1 
154 1 107 1 272 1 
195 1 162 2 318 1 349 1 171 1 97 1 300 1 273 1 154 3 217 3 90 1 146 1 
273 1 134 1 14 1 154 2 171 1 97 1 217 2 90 1 300 1 
273 1 154 1 195 1 182 1 186 1 80 1 171 1 217 1 200 1 90 1 345 1 
273 1 154 1 195 1 171 1 217 1 90 1 300 1 
273 1 154 1 195 1 97 1 217 1 90 1 300 2 
195 1 19 1 171 1 300 1 273 2 154 2 242 1 217 2 9 1 90 2 
354 1 314 1 195 1 14 2 97 1 298 1 171 2 300 1 273 1 154 3 80 1 217 3 90 1 
195 1 14 1 186 1 171 1 97 1 139 1 200 1 300 1 345 2 273 1 308 1 154 2 112 1 217 2 90 1 
134 1 195 1 14 2 97 1 298 1 171 2 300 1 273 2 154 4 121 1 80 1 217 4 90 2 
273 1 154 1 195 1 171 1 97 1 217 1 90 1 300 1 
14 2 162 1 349 1 97 2 298 1 171 3 300 2 273 1 154 4 203 1 80 1 217 4 146 1 90 1 
195 1 14 1 148 1 127 1 171 1 97 1 333 1 300 1 273 1 154 2 217 2 90 1 
195 1 162 2 349 2 171 1 97 1 300 1 273 1 154 3 217 3 146 1 90 1 348 1 
341 2 251 1 358 1 171 2 
273 1 234 1 154 1 195 1 217 1 90 1 
273 1 314 1 14 1 154 2 195 1 171 1 97 1 217 2 90 1 300 1 
253 1 
273 1 154 1 195 1 171 1 97 1 217 1 90 1 300 1 
314 1 14 1 195 1 162 1 97 1 171 1 300 1 273 1 154 3 217 3 90 1 
203 1 80 1 171 1 298 1 
171 1 300 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (63,345) (63,345) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (63,345) (63,345) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (63,345) (63,345) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (63,345) (63,345) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 157 245 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 162 1 270 2 81 1 327 2 196 1 312 1 226 1 111 2 377 3 331 3 308 1 75 1 
357 1 63 1 162 1 377 1 331 1 270 1 84 1 327 1 345 1 312 1 20 1 
357 1 63 1 162 1 377 1 331 1 270 1 84 1 327 1 345 1 312 1 20 1 
357 1 63 1 162 1 377 1 331 1 270 1 84 1 327 1 345 1 312 1 20 1 
357 1 63 1 162 1 377 1 331 1 270 1 84 1 327 1 345 1 312 1 20 1 
3 1 81 1 270 1 233 1 327 1 196 1 312 1 261 1 36 1 316 2 111 3 318 1 377 4 331 4 275 1 308 2 74 1 75 3 
3 1 162 1 64 1 270 1 327 1 196 1 312 1 36 1 111 1 377 2 331 2 306 1 84 1 230 1 74 1 355 1 
3 1 162 1 52 1 81 3 233 1 312 1 261 1 36 1 213 1 284 1 316 2 318 1 270 2 327 2 196 1 226 1 111 5 25 1 377 9 331 9 275 1 308 4 74 1 75 7 
3 1 162 1 52 1 81 3 233 1 312 1 261 1 36 1 213 1 284 1 316 2 318 1 270 2 327 2 196 1 226 1 111 5 25 1 377 9 331 9 275 1 308 4 74 1 75 7 
100 1 151 2 115 1 
365 1 110 2 349 2 80 2 163 1 372 2 71 2 134 2 
0 1 95 1 80 2 253 2 163 1 139 2 82 1 99 2 232 1 236 1 365 1 145 1 286 1 59 1 319 1 41 1 291 1 171 1 292 1 216 1 149 1 267 1 325 1 127 1 372 2 344 1 22 1 110 3 349 2 373 1 71 2 176 2 134 3 116 1 76 1 138 2 161 1 
190 1 110 1 349 1 80 1 163 1 372 1 71 1 200 1 134 1 212 1 
128 1 372 1 212 1 154 1 100 1 110 1 166 1 46 1 199 1 102 1 353 1 134 1 42 1 28 1 
128 1 80 1 372 1 212 1 154 1 100 1 349 1 110 1 166 1 46 1 102 2 199 1 353 2 71 1 134 1 
340 1 118 1 102 1 353 1 6 1 
100 1 118 1 102 2 353 2 6 1 154 1 10 1 183 1 
102 1 353 1 6 1 
190 1 118 1 80 1 163 1 372 1 328 1 212 1 349 1 110 1 102 1 353 1 71 1 200 1 134 1 
100 1 
100 1 118 1 102 2 353 2 6 1 154 1 10 1 15 1 
118 2 252 2 298 1 140 1 6 2 154 1 10 1 100 1 47 1 102 5 341 1 264 1 353 5 376 1 186 2 40 1 113 1 247 1 123 2 
100 1 159 1 154 1 
124 1 80 1 372 2 110 2 198 1 349 1 365 2 71 1 134 2 
191 1 320 1 302 1 
325 1 139 1 232 1 236 1 365 1 110 1 373 1 176 1 134 1 291 1 171 1 216 1 324 1 138 1 161 1 76 1 
325 1 80 1 191 1 372 1 139 1 232 1 236 1 110 2 373 1 71 1 176 1 134 2 291 1 171 1 137 1 216 1 76 1 161 1 172 1 138 1 
365 1 159 1 
365 1 349 1 198 1 110 5 5 1 80 4 372 5 71 4 135 1 134 5 137 1 28 1 223 1 172 2 
110 2 80 2 372 2 71 2 200 1 134 2 212 1 260 1 
349 1 365 1 110 3 80 3 372 3 71 3 134 3 172 1 
110 1 80 1 372 1 71 1 200 1 134 1 212 1 
110 1 349 1 198 1 124 1 80 1 372 1 71 1 134 1 212 1 
0 1 95 1 80 3 253 1 163 1 139 1 82 1 99 2 232 1 212 1 236 1 365 1 145 1 166 1 102 1 319 1 41 1 291 1 171 1 292 1 216 1 172 1 267 1 325 1 125 1 127 1 128 1 268 1 372 3 22 1 349 2 198 1 110 4 46 1 373 1 199 1 353 1 71 3 176 1 134 4 137 1 76 1 161 1 138 1 
365 1 110 2 5 1 80 1 372 2 71 1 134 2 28 1 172 1 
125 1 128 1 80 3 372 3 212 1 349 1 198 1 100 1 110 3 166 1 46 1 102 1 262 1 199 1 353 1 71 3 134 3 137 1 172 2 
80 2 191 1 372 2 198 1 349 1 110 2 320 1 71 2 134 2 172 1 
325 1 139 1 232 1 236 1 365 1 110 1 373 1 176 1 134 1 171 1 291 1 216 1 138 1 161 1 76 1 
139 1 98 1 212 1 365 1 39 1 176 1 216 1 138 1 
231 1 253 4 55 1 56 1 99 2 145 1 317 1 319 1 41 1 320 2 62 1 292 1 105 1 267 1 127 1 191 2 107 1 302 2 132 1 241 1 22 2 72 1 178 1 116 2 
110 1 128 1 80 1 372 1 71 1 134 1 212 1 260 1 
248 1 227 1 17 1 
248 2 122 1 90 1 147 1 17 2 277 1 
248 1 17 1 
248 1 17 1 
122 1 147 1 
122 1 147 1 
122 1 147 1 
248 1 17 1 266 1 
248 1 17 1 266 1 
248 1 17 1 266 1 
117 1 248 1 17 1 
117 1 248 1 17 1 
117 1 248 1 17 1 
248 1 360 1 279 1 80 2 337 1 282 1 364 1 235 1 365 1 102 1 61 1 323 1 14 1 239 1 372 2 109 1 17 1 242 1 244 1 110 2 227 1 353 1 71 2 134 2 
43 2 248 2 250 1 239 2 256 1 282 2 109 2 17 2 272 1 242 1 235 2 143 1 225 1 244 3 120 1 100 1 102 2 353 2 90 1 
64 1 233 1 219 1 221 2 74 2 
36 1 233 1 74 1 
36 1 64 1 74 1 
65 1 64 1 219 1 233 2 221 1 74 3 
64 1 343 1 219 1 233 1 221 1 74 2 
2 1 281 1 55 1 6 1 56 1 10 1 100 2 102 5 186 1 188 1 150 1 190 1 105 1 151 3 154 1 349 1 110 1 352 1 353 5 71 1 113 2 200 1 115 1 118 4 360 1 77 2 80 1 252 1 163 1 212 1 121 2 215 1 123 1 372 1 328 1 224 2 47 3 376 1 134 1 178 1 
94 1 118 2 358 1 80 1 163 1 6 1 7 1 212 1 340 1 100 1 102 2 190 1 372 1 328 1 154 1 110 1 349 1 353 2 71 1 200 1 134 1 
118 2 2 1 360 1 77 1 80 1 163 1 252 1 55 1 56 1 212 1 100 2 102 3 121 2 186 1 215 1 188 1 150 1 123 1 190 1 105 1 151 3 372 1 328 1 154 1 224 2 110 1 349 1 47 3 352 1 353 3 71 1 113 2 200 1 134 1 178 1 115 1 247 1 
2 1 55 2 56 2 100 4 102 4 186 1 188 1 150 1 190 1 105 2 151 7 154 1 110 1 349 1 156 1 352 2 353 4 113 4 71 1 200 1 115 3 307 1 247 1 118 3 360 2 77 2 80 1 252 1 163 1 212 1 214 1 121 4 215 1 123 1 372 1 328 1 224 4 47 5 134 1 178 2 
101 1 291 1 
96 1 
54 1 291 1 159 1 
291 1 76 1 236 1 
371 1 291 1 
291 1 76 1 
296 1 54 2 332 1 291 3 76 1 236 1 
361 1 326 2 253 9 55 1 56 1 131 1 141 1 197 1 22 4 348 1 157 1 62 3 72 2 114 1 276 1 187 1 116 5 148 1 
201 1 31 1 361 3 255 1 253 34 55 5 141 1 99 2 56 5 35 1 165 1 145 1 319 1 62 13 187 1 148 7 105 3 267 1 326 1 127 1 131 2 197 2 245 1 87 4 346 3 45 1 22 17 352 3 157 3 177 1 114 1 72 6 276 1 178 3 116 17 
361 1 253 11 55 1 56 1 99 4 141 1 145 2 319 2 62 4 187 1 321 1 148 1 267 2 326 2 127 2 131 1 197 1 69 1 45 1 22 5 157 1 72 3 276 1 116 6 
361 1 326 2 253 9 55 1 56 1 131 1 141 1 197 1 22 4 157 1 62 3 72 2 114 1 276 1 187 1 116 5 148 1 
361 1 326 2 253 9 55 1 56 1 131 1 141 1 197 1 22 4 157 1 62 3 72 2 114 1 276 1 187 1 116 5 148 1 
93 1 162 2 139 1 362 1 210 1 232 1 168 2 291 1 216 1 369 1 270 1 108 1 18 2 327 1 67 2 377 1 89 1 26 1 331 1 176 1 161 1 138 1 76 1 
162 1 336 1 139 1 233 1 232 1 312 1 36 1 168 1 60 1 295 1 64 1 65 1 270 1 67 1 18 1 327 1 174 1 21 1 274 1 377 1 331 1 176 1 74 2 138 1 334 1 161 1 
3 1 162 1 336 1 139 1 233 1 232 1 312 1 36 1 168 1 60 1 173 1 295 1 64 1 65 1 270 1 67 1 18 1 327 1 196 1 174 1 21 1 111 1 274 1 377 2 331 2 176 1 74 2 75 1 138 1 161 1 
3 1 162 1 336 1 139 1 233 1 232 1 36 1 168 1 60 1 65 1 64 1 270 1 108 1 67 1 18 1 327 1 196 1 329 1 174 1 21 1 111 1 274 1 377 3 331 3 176 1 74 2 138 1 334 1 75 2 161 1 
3 1 162 1 139 1 232 1 233 1 36 1 168 1 64 1 65 1 67 1 18 1 196 1 329 1 174 1 21 1 111 1 274 1 377 2 331 2 176 1 74 2 138 1 334 1 75 2 161 1 
207 1 
278 1 139 2 6 6 232 1 234 1 142 1 10 3 100 1 11 1 102 4 103 2 186 1 291 1 189 1 151 2 300 1 350 1 155 2 353 4 113 2 73 1 115 2 76 1 161 1 359 2 78 1 252 1 206 1 362 1 257 2 210 1 83 1 37 1 315 2 215 1 216 2 123 1 47 2 376 1 50 2 176 2 133 2 179 2 138 2 
278 1 206 1 300 1 6 2 234 1 10 1 350 1 102 2 103 1 353 2 15 1 
350 1 278 1 155 1 102 1 353 1 50 1 206 1 300 1 234 1 
278 1 359 1 206 1 300 1 6 2 234 1 10 1 350 1 155 1 102 2 103 1 353 2 50 1 15 1 
278 1 359 2 80 1 206 1 163 1 6 3 164 1 212 1 234 1 10 1 100 1 102 2 103 2 85 1 15 1 190 1 372 1 300 1 328 1 154 1 110 1 350 1 349 1 353 2 71 1 200 1 134 1 
278 1 359 2 78 1 206 1 252 1 257 2 6 4 234 1 10 2 100 2 37 1 315 2 102 3 103 2 186 1 123 1 151 2 300 1 154 1 350 1 155 2 47 1 353 3 50 2 376 1 113 1 133 2 73 1 115 2 179 2 
278 1 359 2 78 1 252 1 206 1 257 2 6 4 234 1 10 2 100 1 37 1 237 1 315 2 102 3 103 2 186 1 123 1 300 1 16 1 154 1 350 1 155 2 303 1 47 1 353 3 50 2 376 1 113 1 133 2 115 2 179 2 
278 1 359 2 78 1 252 1 206 1 257 2 6 4 234 1 10 2 100 1 37 1 237 1 315 2 102 3 103 2 186 1 123 1 300 1 16 1 154 1 350 1 155 2 303 1 47 1 353 3 50 2 376 1 113 1 133 2 115 2 179 2 
350 1 278 1 102 1 353 1 206 1 193 1 300 1 234 1 
278 1 359 3 78 1 206 1 252 1 257 2 6 5 234 1 10 2 100 1 315 2 237 1 37 1 102 3 103 3 186 1 85 1 123 1 300 1 16 1 154 1 350 1 155 3 303 1 47 1 353 3 50 3 376 1 113 1 133 2 115 2 179 2 
278 1 359 3 78 1 206 1 252 1 257 2 6 5 234 1 10 2 100 1 315 2 237 1 37 1 102 3 103 3 186 1 85 1 123 1 300 1 16 1 154 1 350 1 155 3 303 1 47 1 353 3 50 3 376 1 113 1 133 2 115 2 179 2 
278 1 359 2 78 1 206 1 252 1 257 2 6 4 234 1 283 1 10 2 100 1 315 2 102 3 103 2 186 1 123 1 151 2 271 2 300 1 154 1 350 1 155 2 47 1 353 3 50 2 376 1 375 2 113 1 73 1 
80 1 253 2 338 1 139 1 82 1 232 1 99 2 236 1 339 1 365 1 145 1 265 1 59 1 319 1 320 1 41 1 291 1 171 1 292 1 216 1 324 1 172 1 325 1 267 1 127 1 372 1 110 2 22 1 24 1 373 1 176 1 71 1 134 2 137 1 116 1 76 1 161 1 138 1 
95 2 139 3 55 3 141 1 99 6 232 2 56 3 236 2 145 3 59 1 62 8 187 1 291 2 292 3 148 4 105 2 66 2 191 7 302 7 22 11 110 3 24 1 352 2 157 1 71 1 72 4 116 11 161 2 76 2 361 1 80 1 253 22 33 2 82 1 365 3 319 3 41 3 320 7 170 1 169 2 171 2 216 1 172 1 267 3 325 2 326 1 127 3 44 2 372 1 222 1 373 2 176 3 134 3 276 1 178 2 137 1 333 1 334 1 138 3 
356 1 80 1 253 2 139 8 362 1 82 1 210 1 232 2 99 4 211 1 145 2 317 1 238 1 59 1 319 2 41 2 290 1 291 3 292 2 216 2 172 1 366 1 173 1 267 2 127 2 372 1 194 1 344 2 220 1 110 1 22 1 71 1 176 7 134 1 116 1 334 1 161 2 138 8 76 2 
32 1 80 1 253 3 55 1 99 2 56 1 145 1 319 1 62 1 320 1 41 1 292 1 105 1 267 1 127 1 191 1 372 1 302 1 349 1 198 1 110 1 22 2 24 1 352 1 71 1 72 1 134 1 178 1 116 1 
361 1 253 8 55 1 141 1 99 2 56 1 145 1 365 3 317 1 319 1 320 1 41 1 62 2 187 1 292 1 267 1 326 1 127 1 191 1 302 1 22 4 157 1 72 2 276 1 159 1 116 4 
201 2 31 1 202 1 253 17 82 1 55 1 99 4 56 3 365 1 145 2 58 1 167 1 59 1 319 2 62 2 41 1 320 4 292 2 148 1 13 1 105 3 267 2 127 2 191 13 302 13 87 4 346 3 22 7 24 1 352 3 72 1 178 1 116 10 
231 1 105 1 267 1 127 1 253 2 191 1 302 1 99 2 56 1 145 1 317 1 319 1 62 1 320 1 41 1 292 1 116 2 148 1 
267 1 127 1 253 2 191 1 302 1 55 1 99 2 241 1 145 1 22 2 317 1 319 1 62 1 320 1 41 1 72 1 178 1 292 1 
253 4 55 1 56 1 99 2 145 1 317 1 319 1 41 1 320 2 62 2 292 1 148 1 105 1 267 1 127 1 191 2 302 2 22 2 352 1 72 1 178 1 116 2 
231 1 105 1 267 1 127 1 253 2 191 1 302 1 99 2 56 1 211 1 145 1 319 1 62 1 320 1 41 1 292 1 116 2 148 1 
267 1 127 1 253 2 191 1 302 1 55 1 99 2 211 1 241 1 145 1 22 2 319 1 62 1 320 1 41 1 72 1 178 1 292 1 
253 4 55 1 56 1 99 2 211 1 145 1 319 1 41 1 320 2 62 2 292 1 148 1 105 1 267 1 127 1 191 2 302 2 22 2 352 1 72 1 178 1 116 2 
105 1 267 1 127 1 253 4 191 2 55 1 302 2 99 2 56 1 22 2 145 1 352 1 319 1 62 2 320 2 41 1 72 1 178 1 292 1 116 2 148 1 
95 1 253 2 139 1 82 1 232 1 99 2 236 1 365 1 145 1 59 1 319 1 41 1 171 1 291 1 292 1 216 1 325 1 267 1 127 1 110 1 22 1 373 1 176 1 134 1 116 1 76 1 161 1 138 1 
267 1 127 1 253 1 139 1 98 1 82 1 99 2 212 1 365 1 22 1 145 1 229 1 319 1 39 1 176 1 41 1 292 1 216 1 138 1 
253 4 55 1 56 1 99 2 145 1 319 1 41 1 320 2 62 2 292 1 148 1 105 1 267 1 127 1 191 2 302 2 22 2 24 1 352 1 72 1 178 1 116 2 
95 1 253 4 33 1 139 1 55 1 56 1 232 1 99 2 236 1 145 1 319 1 62 2 320 2 41 1 171 1 291 1 292 1 148 1 173 1 105 1 325 1 267 1 127 1 191 2 302 2 22 2 110 1 373 1 352 1 176 1 72 1 134 1 178 1 116 2 161 1 138 1 76 1 
80 1 253 3 55 1 99 2 56 1 145 1 263 1 319 1 62 1 41 1 320 1 292 1 148 1 105 1 267 1 127 1 191 1 372 1 302 1 22 1 349 1 198 1 110 1 24 1 352 1 71 1 134 1 178 1 116 2 
201 1 204 1 31 1 205 1 253 9 311 1 97 1 55 1 99 4 56 1 8 1 314 1 145 2 319 2 62 2 148 1 105 1 267 2 127 2 87 2 69 1 346 1 22 5 112 1 352 1 72 1 246 1 178 1 116 4 
204 3 31 2 205 1 253 20 55 1 99 6 56 2 8 2 314 1 145 3 319 3 62 2 148 1 105 2 267 3 127 3 195 1 273 1 243 1 69 1 87 2 45 2 346 2 347 1 22 9 112 1 352 2 374 1 51 1 72 1 246 2 178 1 91 1 116 11 
201 1 204 1 31 1 205 1 253 9 311 1 55 1 99 4 56 1 8 1 314 1 145 2 319 2 62 2 148 1 105 1 267 2 127 2 87 2 69 1 346 1 22 5 112 1 352 1 374 1 72 1 246 1 178 1 116 4 
201 1 204 1 31 1 205 1 253 9 311 1 55 1 99 4 56 1 8 1 314 1 145 2 319 2 62 2 148 1 105 1 267 2 127 2 87 2 69 1 346 1 22 5 112 1 352 1 374 1 72 1 246 1 178 1 116 4 
201 2 204 3 202 2 31 2 361 1 205 1 253 48 55 7 141 1 99 4 56 7 8 1 314 1 145 2 319 2 62 12 187 1 148 6 105 6 267 2 326 1 127 2 195 1 273 1 243 1 87 4 69 1 45 1 347 1 346 4 22 23 112 1 352 6 157 1 374 1 51 1 72 6 276 1 246 1 178 6 91 1 116 25 
249 1 248 1 239 1 256 1 282 1 90 1 109 1 17 1 272 1 235 1 
227 1 61 1 
368 1 248 1 119 1 239 1 282 1 109 1 17 1 27 1 235 1 
367 1 266 1 
117 1 305 1 277 1 
43 1 248 1 250 1 239 1 256 1 282 1 109 1 17 1 272 1 242 1 235 1 225 1 244 2 120 1 100 1 102 1 353 1 90 1 
43 1 248 1 250 1 239 1 256 1 282 1 109 1 17 1 272 1 242 1 235 1 225 1 244 2 120 1 100 1 102 1 353 1 90 1 
43 1 248 1 250 1 239 1 256 1 282 1 109 1 17 1 272 1 242 1 235 1 225 1 244 2 120 1 100 1 102 1 353 1 90 1 
367 1 277 1 266 1 
367 1 277 1 266 1 
117 1 305 1 
117 1 305 1 277 1 
279 1 14 1 
118 1 248 1 360 1 279 1 80 2 337 1 282 1 364 1 235 1 120 1 365 1 102 1 61 1 323 1 14 1 43 1 239 1 372 2 109 1 17 1 244 1 110 2 227 1 48 1 353 1 71 2 134 2 
356 1 203 1 253 2 139 2 82 1 232 1 99 2 313 1 145 1 59 1 319 1 41 1 291 1 293 1 292 1 267 1 127 1 240 1 372 2 194 1 344 2 110 2 22 1 24 1 176 2 134 2 116 1 354 1 161 1 76 1 138 2 
139 1 362 1 210 1 232 1 67 1 68 1 175 1 26 1 176 1 291 1 216 1 161 1 76 1 138 1 
336 1 106 1 65 1 64 1 139 1 233 1 232 1 67 1 68 1 36 1 174 1 21 1 176 1 180 1 74 2 161 1 334 1 138 1 
173 1 336 1 106 1 65 1 64 1 139 2 233 1 232 1 67 1 68 1 36 1 174 1 21 1 176 2 180 1 74 2 161 1 334 1 138 2 
336 1 106 1 65 1 64 1 139 1 233 1 232 1 67 1 36 1 174 1 21 1 88 1 176 1 74 2 334 1 138 1 161 1 
136 1 
252 1 6 1 10 1 100 2 37 1 102 1 186 1 123 1 151 1 154 1 47 1 353 1 376 1 113 1 133 1 115 1 179 1 
4 2 53 2 184 1 139 3 54 2 140 1 6 5 55 2 232 3 56 2 236 3 10 3 101 3 100 8 11 1 102 5 186 4 291 10 151 12 105 2 296 1 154 2 23 2 304 1 352 2 353 5 113 8 115 6 161 4 76 3 309 2 252 4 363 1 258 2 264 1 121 6 215 2 169 2 216 1 86 1 123 4 173 1 126 2 130 1 371 2 224 6 47 9 46 2 228 2 376 4 176 3 178 2 92 2 138 3 
31 1 252 2 53 2 6 1 55 2 56 2 10 1 100 5 11 1 102 1 121 5 186 2 215 1 123 2 370 1 151 6 105 2 273 1 243 1 224 5 87 1 154 2 346 1 347 1 47 8 228 1 352 2 353 1 376 2 51 1 113 5 178 2 91 1 115 3 182 1 
47 1 102 1 361 1 157 1 353 1 252 1 376 1 53 1 186 1 113 1 16 1 245 1 123 1 
252 1 140 1 154 1 100 1 47 1 264 1 376 1 186 1 113 1 123 1 
105 2 151 10 53 2 55 2 56 2 224 5 100 5 47 5 228 1 352 2 121 5 113 5 169 1 178 2 115 5 
100 1 102 1 353 1 6 1 154 1 10 1 
252 2 139 4 362 1 6 4 210 1 232 2 363 1 259 1 142 1 236 1 10 2 83 1 11 2 102 3 287 1 186 2 12 1 215 2 291 2 216 2 104 1 123 2 130 2 47 2 70 1 353 3 376 1 176 4 113 2 247 1 335 1 161 3 76 2 138 4 
100 1 47 1 264 1 113 1 140 1 159 1 154 1 
0 1 95 1 80 2 253 1 163 1 139 1 82 1 99 2 232 1 236 1 365 1 145 1 319 1 41 1 171 1 291 1 292 1 216 1 325 1 267 1 127 1 372 2 22 1 110 3 349 2 373 1 176 1 71 2 134 3 138 1 161 1 76 1 
151 4 326 1 252 1 224 2 154 2 100 4 47 1 11 1 121 2 376 1 186 1 113 2 215 1 115 2 123 1 
239 1 256 1 34 1 14 1 235 1 
239 1 310 1 235 1 
239 1 310 1 235 1 
239 1 310 1 235 1 
57 1 239 1 235 1 
57 1 239 1 235 1 
57 1 239 1 235 1 
239 1 235 1 
248 1 17 1 
267 1 361 1 127 1 253 10 55 2 99 2 56 2 69 1 245 1 145 1 22 5 157 1 319 1 62 4 72 2 276 1 116 5 148 2 
105 1 267 1 127 1 253 2 99 2 56 1 69 1 145 1 319 1 62 1 116 2 148 1 
105 1 267 1 127 1 253 4 55 1 99 2 56 1 69 1 22 2 145 1 352 1 319 1 62 2 72 1 178 1 116 2 148 1 
267 1 361 1 127 1 253 2 99 2 69 1 22 1 145 1 157 1 319 1 62 1 72 1 116 1 
201 1 31 1 361 3 253 26 311 1 55 4 141 1 99 10 56 4 35 1 165 1 145 5 342 1 319 5 62 11 187 1 294 1 148 5 105 3 267 5 127 5 87 4 69 1 45 2 346 3 22 14 352 3 157 3 177 1 72 6 276 1 178 3 116 12 
201 1 31 1 361 1 253 13 55 1 99 2 56 2 141 1 145 1 319 1 62 2 187 1 105 1 267 1 326 1 127 1 87 2 69 1 346 1 22 6 352 1 157 1 72 2 276 1 91 1 116 7 
201 1 31 1 361 1 253 13 55 1 141 1 99 4 56 2 145 2 319 2 342 1 62 3 187 1 148 1 105 1 267 2 326 1 127 2 87 2 69 1 346 1 22 6 352 1 157 1 72 2 276 1 91 1 116 7 
31 1 361 1 253 21 55 3 141 1 99 6 56 3 145 3 342 1 319 3 62 4 187 1 148 1 105 2 267 3 326 1 127 3 273 1 243 1 87 1 69 1 346 1 347 1 45 1 22 11 352 2 157 1 51 1 72 3 276 1 178 2 91 1 116 10 
31 1 361 1 253 19 55 2 141 1 99 6 56 3 145 3 342 1 319 3 62 5 187 1 148 2 105 2 267 3 326 1 127 3 273 1 243 1 87 1 69 1 45 1 346 1 347 1 22 8 352 2 157 1 51 1 72 3 276 1 178 1 91 1 116 11 
201 1 31 1 361 1 253 13 55 1 99 2 56 2 141 1 145 1 319 1 62 2 187 1 105 1 267 1 326 1 127 1 87 2 69 1 346 1 22 6 352 1 157 1 72 2 276 1 91 1 116 7 
31 1 253 12 55 2 99 2 56 2 145 1 319 1 62 2 148 1 105 2 267 1 127 1 273 1 243 1 87 1 69 1 346 1 347 1 22 6 352 2 51 1 72 1 178 2 91 1 116 6 
31 1 361 1 253 20 55 2 141 1 99 8 56 3 145 4 342 1 319 4 62 5 187 1 148 2 105 2 267 4 326 1 127 4 273 1 243 1 87 1 69 1 346 1 347 1 45 2 22 9 352 2 157 1 51 1 72 3 276 1 178 1 91 1 116 11 
31 1 253 16 311 1 55 2 99 8 56 3 145 4 319 4 62 6 148 3 105 3 267 4 127 4 273 1 243 1 87 1 69 1 346 1 347 1 45 2 22 7 352 3 51 1 72 3 178 2 91 1 116 9 
361 2 253 4 141 1 22 2 157 2 62 4 72 2 187 2 116 2 148 2 
31 1 361 1 253 20 311 1 55 2 141 1 99 8 56 3 145 4 319 4 62 4 187 1 148 1 105 2 267 4 326 1 127 4 273 1 243 1 87 1 69 1 346 1 347 1 45 2 22 9 352 2 157 1 51 1 72 3 276 1 178 1 91 1 116 11 
267 2 361 1 127 2 99 4 141 1 45 1 145 2 157 1 319 2 62 2 72 1 187 1 148 1 
326 1 361 1 253 8 55 1 141 1 56 1 22 4 157 1 62 2 72 2 187 1 276 1 159 1 116 4 
105 1 267 1 127 1 253 4 55 1 99 2 56 1 22 2 145 1 352 1 342 1 319 1 62 2 72 1 178 1 116 2 148 1 
201 1 31 1 105 1 253 7 55 1 56 1 87 2 346 1 22 4 352 1 62 2 72 1 178 1 116 3 148 1 
201 1 202 1 361 2 253 21 55 3 141 1 56 3 99 4 145 2 167 1 319 2 62 9 187 1 294 1 148 4 105 2 267 2 326 1 127 2 87 2 346 2 45 2 22 11 352 2 157 2 72 5 276 1 178 2 116 10 
22 1 253 1 87 1 
346 1 253 1 116 1 
105 1 267 1 127 1 253 6 55 1 99 2 56 1 145 1 22 3 352 1 319 1 342 1 62 3 169 1 72 2 178 1 116 3 148 1 
31 1 253 12 55 2 99 2 56 2 145 1 319 1 62 2 148 1 105 2 267 1 127 1 273 1 243 1 87 1 69 1 346 1 347 1 22 6 352 2 51 1 72 1 178 2 91 1 116 6 
361 1 253 6 55 1 56 1 22 3 157 1 62 2 72 1 276 1 116 3 148 1 
267 1 361 1 127 1 253 1 99 2 141 1 45 1 22 1 145 1 157 1 319 1 62 2 72 1 187 1 294 1 148 1 
5 1 218 1 372 1 98 1 185 1 212 1 365 1 110 1 289 1 134 1 322 1 28 1 160 1 30 1 
5 1 372 1 98 1 212 1 110 1 365 1 134 1 28 1 30 1 
80 1 372 1 139 1 232 1 236 1 365 1 110 2 373 1 71 1 176 1 134 2 291 1 171 1 216 1 76 1 161 1 172 1 138 1 
80 1 139 1 232 1 212 1 236 2 365 1 171 1 291 3 172 1 126 1 128 1 130 1 371 1 372 2 110 2 373 1 199 1 176 1 71 2 134 2 138 1 161 1 76 2 
80 1 139 1 98 1 232 1 212 2 236 2 365 1 291 3 172 1 126 1 128 1 130 1 371 1 372 2 110 2 351 1 373 1 199 1 176 1 71 2 134 2 138 1 161 1 76 2 
280 1 80 1 163 1 139 1 212 1 101 1 100 1 102 1 291 1 190 1 130 1 372 1 328 1 154 1 349 1 110 1 353 1 176 1 71 1 200 1 134 1 138 1 
126 1 130 1 371 1 139 3 54 1 301 1 6 1 232 1 154 1 236 1 100 1 101 1 46 1 23 1 102 2 353 2 176 3 291 4 216 1 76 1 161 1 138 3 
139 1 176 1 232 1 220 1 161 1 138 1 
366 1 173 1 296 1 139 7 344 1 194 1 220 1 232 2 153 1 236 1 238 1 176 6 290 1 291 3 216 2 104 1 334 1 138 7 76 2 335 1 161 3 
173 1 129 1 139 4 362 1 301 1 210 1 232 1 176 4 291 1 216 1 161 1 138 4 76 1 
130 1 139 2 232 1 222 1 236 1 70 1 287 1 176 2 291 1 104 1 138 2 76 1 335 1 161 2 
36 1 21 1 64 1 139 1 176 1 232 1 216 1 74 1 161 1 138 1 
173 1 139 2 194 1 232 1 176 2 291 1 293 1 138 2 334 1 76 1 161 1 
173 1 366 1 129 1 130 1 362 1 139 5 210 1 194 1 232 2 176 4 290 1 291 3 216 1 138 5 76 2 161 2 
173 1 152 1 129 1 130 1 362 1 139 5 210 1 194 1 232 2 176 4 290 1 291 3 216 1 138 5 76 2 161 2 
362 1 139 1 176 1 210 1 232 1 291 1 159 1 216 1 161 1 76 1 138 1 
80 1 139 1 98 1 232 1 212 1 236 1 365 1 291 1 216 1 172 1 372 1 110 2 351 1 373 1 176 1 71 1 134 2 138 1 161 1 76 1 
130 1 296 1 139 1 232 1 153 1 236 1 176 1 291 1 104 1 138 1 76 1 335 1 161 2 
95 1 139 1 55 1 99 4 232 1 141 1 56 1 236 1 145 2 62 2 291 1 187 1 292 2 240 1 66 1 191 1 302 1 110 2 22 4 24 1 157 1 71 1 72 2 116 4 161 1 76 1 361 1 80 1 253 8 33 1 365 3 319 2 320 1 41 2 171 1 172 1 173 1 325 1 267 2 326 1 127 2 372 1 373 1 176 1 134 2 276 1 138 1 
118 1 4 1 309 1 252 2 139 1 54 1 140 1 6 2 363 1 10 1 100 1 101 1 102 3 264 1 186 2 291 2 216 1 123 2 154 1 47 1 23 1 46 1 353 3 376 2 113 1 176 1 138 1 92 1 
173 1 296 1 54 1 139 2 220 1 232 1 236 1 304 1 176 2 291 2 138 2 76 1 161 2 
365 1 146 1 269 1 209 1 19 1 
118 1 125 1 128 1 269 2 209 1 299 1 212 1 154 1 9 1 19 2 365 1 100 1 166 1 46 1 199 1 102 2 146 2 38 1 353 2 
203 1 269 1 209 1 372 1 19 1 313 1 110 1 134 1 354 1 
38 1 299 1 209 1 
3 1 111 1 377 1 331 1 270 1 327 1 196 1 312 1 
3 2 217 1 192 1 270 1 81 1 327 1 196 2 111 3 377 4 288 1 331 4 230 1 308 1 75 2 
3 1 111 1 251 1 25 1 158 1 377 2 331 2 270 1 327 1 196 1 312 1 75 1 
3 1 217 2 254 1 270 1 327 1 312 1 196 1 111 1 377 3 288 1 331 3 230 2 
1 1 285 2 111 2 181 1 
377 1 331 1 270 1 327 1 312 1 144 1 
3 1 111 1 52 1 377 2 331 2 270 1 327 1 196 1 312 1 75 1 
330 1 
3 1 111 1 377 1 331 1 270 1 327 1 196 1 312 1 
3 1 111 1 377 1 331 1 270 1 327 1 196 1 
162 1 168 1 377 1 
3 1 111 1 79 1 217 1 377 3 288 1 331 3 270 1 327 1 196 1 230 2 312 1 
3 1 316 1 111 1 377 2 331 2 270 1 327 1 196 1 75 1 
270 1 233 1 327 1 312 1 36 1 111 1 318 1 377 1 331 1 308 1 74 1 
3 1 111 1 377 1 331 1 270 1 327 1 312 1 
3 2 377 1 331 1 270 1 327 1 196 1 312 1 
3 1 297 1 270 2 327 2 312 1 111 1 49 1 377 2 331 2 29 1 
3 1 52 1 270 1 81 1 327 1 196 1 312 1 284 1 111 2 377 3 331 3 308 1 75 2 
3 1 64 1 65 1 270 1 208 1 233 1 327 1 196 1 312 1 36 1 111 1 377 2 331 2 74 2 75 1 
3 1 270 2 81 1 327 2 196 1 312 1 261 1 316 1 111 2 377 4 331 4 308 1 75 2 
3 1 111 1 159 1 196 1 
3 1 52 1 111 1 377 3 331 3 270 1 327 1 196 1 230 1 312 1 75 1 
111 1 192 1 81 1 308 1 
3 1 111 1 

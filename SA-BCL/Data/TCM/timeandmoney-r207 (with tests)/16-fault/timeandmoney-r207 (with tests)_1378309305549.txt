#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) 256 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) 256 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) (46,152) (46,152) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) (46,152) (46,152) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) (46,152) (46,152) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) (46,152) (46,152) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 352 (54,194,275,342) 304 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 352 208 (229,285) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (153,367) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 15 259 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (239,273) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (153,367) 350 68 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 15 259 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (12,291) (12,291) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (153,367) 350 137 (193,233) (193,233) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (12,291) 103 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (12,291) (12,291) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 352 (54,194,275,342) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 352 208 355 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 352 208 155 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 352 208 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
353 1 285 1 208 1 138 1 40 1 119 3 256 1 268 1 323 1 194 1 81 2 43 3 371 2 352 1 
353 1 285 1 208 1 138 1 40 1 119 3 256 1 268 1 323 1 194 1 81 2 43 3 371 2 352 1 
285 1 208 1 46 1 102 1 177 1 76 1 138 1 40 2 4 1 369 1 119 3 268 1 323 1 229 1 81 2 43 3 152 1 121 1 371 2 352 1 
285 1 208 1 46 1 102 1 177 1 76 1 138 1 40 2 4 1 369 1 119 3 268 1 323 1 229 1 81 2 43 3 152 1 121 1 371 2 352 1 
285 1 208 1 46 1 102 1 177 1 76 1 138 1 40 2 4 1 369 1 119 3 268 1 323 1 229 1 81 2 43 3 152 1 121 1 371 2 352 1 
285 1 208 1 46 1 102 1 177 1 76 1 138 1 40 2 4 1 369 1 119 3 268 1 323 1 229 1 81 2 43 3 152 1 121 1 371 2 352 1 
353 1 119 2 54 1 268 1 323 1 319 1 43 2 81 1 304 1 371 1 352 1 138 1 
347 1 177 1 76 1 138 1 40 1 222 1 369 1 119 2 268 1 323 1 8 1 81 1 43 2 121 1 302 1 371 1 365 1 
285 1 208 1 119 2 268 1 323 1 43 2 81 2 371 2 352 1 138 1 40 1 
329 1 105 1 160 1 
329 1 162 2 146 1 
86 2 79 2 71 2 73 2 166 1 123 2 327 2 228 1 
70 1 125 1 236 1 356 1 218 1 71 2 73 2 360 1 49 1 289 2 78 1 204 1 149 1 79 2 224 1 185 2 113 1 246 1 86 2 320 1 56 1 166 1 228 1 141 1 211 1 143 1 145 2 258 2 195 2 280 1 123 2 303 1 327 2 
86 1 55 1 42 1 79 1 71 1 73 1 56 1 123 1 327 1 228 1 
86 1 329 1 274 1 160 1 191 1 287 1 71 1 27 1 203 1 56 1 180 1 181 1 205 1 327 1 
86 1 329 1 274 2 160 1 191 1 287 1 71 1 73 1 27 1 203 1 56 1 181 2 79 1 123 1 327 1 
181 1 29 1 41 1 274 1 312 1 
86 1 329 1 274 2 55 1 160 1 331 1 71 1 73 1 56 1 38 1 228 1 181 2 130 1 29 1 42 1 79 1 312 1 123 1 327 1 
181 1 29 1 274 1 
86 1 274 1 55 1 331 1 71 1 73 1 56 1 228 1 181 1 42 1 79 1 312 1 123 1 327 1 
329 1 
86 1 329 1 274 2 55 1 160 1 331 1 251 1 71 1 73 1 56 1 38 1 228 1 181 2 29 1 42 1 79 1 312 1 123 1 327 1 
124 1 329 2 331 1 219 1 71 1 73 1 181 5 29 2 107 1 241 2 79 1 339 1 51 1 311 1 9 2 312 2 341 1 157 4 86 1 274 5 55 1 160 2 344 2 93 1 35 2 56 1 38 1 228 1 300 1 255 2 42 1 257 1 60 5 351 1 123 1 96 1 327 1 44 2 
86 1 367 1 71 1 73 1 360 1 368 1 141 1 145 1 258 1 195 1 83 1 123 1 327 1 113 1 
105 1 166 1 
86 2 71 2 73 1 166 2 79 1 123 1 327 2 188 1 85 1 
273 1 350 1 367 1 
56 1 166 1 360 1 49 1 141 1 145 1 258 1 195 1 113 1 114 1 
86 5 99 1 71 5 73 4 166 1 227 1 368 1 180 1 79 1 144 1 83 2 123 4 327 5 188 1 
86 2 55 1 263 1 71 2 73 2 56 1 123 2 327 2 
86 3 79 1 71 3 83 1 73 3 166 1 123 3 327 3 
86 1 55 1 71 1 73 1 56 1 123 1 327 1 
86 1 79 1 71 1 73 1 56 1 123 1 327 1 188 1 85 1 
287 1 262 1 125 1 236 1 356 1 71 3 73 3 47 1 27 1 203 1 360 1 289 2 78 1 181 1 149 1 79 2 83 1 224 1 185 1 113 1 246 1 188 1 86 3 274 1 191 1 166 1 56 1 368 1 228 1 141 1 211 1 145 1 258 1 195 1 280 1 303 1 123 3 327 3 
86 2 180 1 71 2 73 1 83 1 166 1 123 1 327 2 227 1 
86 3 329 1 274 1 287 1 191 1 71 3 73 3 47 1 56 1 27 1 203 1 368 1 181 1 79 1 83 2 123 3 327 3 135 1 188 1 
273 1 86 2 367 1 71 2 73 2 79 1 83 1 123 2 327 2 188 1 
56 1 166 1 360 1 49 1 141 1 145 1 258 1 195 1 113 1 
190 1 366 1 71 1 74 1 166 1 167 1 5 1 59 1 141 1 120 1 145 1 258 1 195 1 327 1 186 1 
70 2 125 1 45 1 356 1 236 2 307 1 3 1 359 1 289 2 239 1 149 1 9 1 153 1 224 1 185 4 156 1 273 2 344 1 367 2 253 1 169 1 350 2 280 1 303 1 
86 1 263 1 71 1 73 1 56 1 203 1 123 1 327 1 
23 1 122 1 
23 1 122 1 
116 1 64 1 
116 1 64 1 
116 1 64 1 
23 1 122 1 324 1 
23 1 122 1 324 1 
23 1 122 1 129 1 
53 1 116 1 23 2 64 1 122 2 325 1 
23 1 122 1 324 1 
23 1 206 1 122 1 
23 1 206 1 122 1 
23 1 206 1 122 1 
23 1 71 2 73 2 358 1 129 1 265 1 266 1 181 1 10 1 247 1 86 2 189 1 274 1 249 1 295 1 136 1 209 1 166 1 37 1 39 1 279 1 122 1 123 2 327 2 
329 1 274 2 189 3 200 1 23 2 126 1 209 1 37 2 308 2 290 1 181 2 140 1 269 1 10 2 122 2 279 2 325 1 187 1 247 2 
102 1 177 1 121 1 
347 1 177 1 121 1 
182 1 277 1 164 1 102 2 347 1 121 3 
106 1 182 1 164 1 102 1 347 1 121 2 
182 1 164 2 102 1 347 1 121 2 
329 2 69 2 331 1 100 1 25 1 71 1 3 1 73 1 48 1 359 1 265 1 181 5 29 1 131 1 241 1 79 1 9 1 312 4 157 3 86 1 274 5 55 1 160 1 162 3 344 1 346 2 165 1 56 1 38 1 298 2 228 1 255 1 60 2 42 1 146 1 351 1 123 1 327 1 372 1 44 1 
199 1 329 1 331 1 71 1 73 1 181 2 29 1 79 1 312 2 245 1 86 1 274 2 55 1 160 1 92 1 56 1 228 1 41 1 42 1 123 1 327 1 
124 1 329 2 69 1 331 1 100 1 25 1 71 1 73 1 3 1 48 1 359 1 265 1 181 3 241 1 131 1 79 1 9 1 312 2 157 3 86 1 274 3 55 1 160 1 344 1 162 3 346 2 56 1 298 2 228 1 255 1 42 1 60 2 146 1 123 1 327 1 44 1 372 1 
124 1 329 4 69 2 100 1 25 1 26 1 3 2 48 1 359 2 265 2 181 4 241 1 131 2 9 2 312 3 157 5 274 4 160 1 162 7 344 2 346 4 94 1 298 4 118 1 255 1 60 4 146 3 44 1 372 1 
105 1 190 1 117 1 
190 1 284 1 
72 1 
190 1 167 1 186 1 
190 1 168 1 
190 1 186 1 
190 3 171 1 117 2 88 1 167 1 186 1 
70 4 344 1 250 1 137 2 45 2 236 3 307 3 93 1 348 1 322 1 17 1 193 1 9 1 233 1 96 1 341 1 185 7 
70 4 344 1 250 1 137 2 45 2 236 3 307 3 93 1 348 1 322 1 17 1 193 1 9 1 233 1 96 1 341 1 185 7 
70 4 344 1 250 1 137 2 45 2 236 3 307 3 93 1 348 1 128 1 322 1 17 1 193 1 9 1 233 1 96 1 341 1 185 7 
70 1 137 1 250 2 348 1 185 1 77 1 
70 5 201 1 45 3 356 2 236 4 307 4 289 4 267 1 149 2 9 1 224 2 341 1 185 9 344 1 137 2 250 1 348 1 93 1 17 1 193 1 233 1 280 2 173 1 96 1 
353 1 97 1 102 1 177 1 127 1 74 1 7 1 244 1 81 1 133 1 313 1 365 1 158 1 347 1 138 1 40 1 119 2 19 1 323 1 277 1 120 1 145 1 195 1 258 1 43 2 121 2 302 1 234 1 371 1 283 1 
353 2 97 1 102 1 177 1 74 1 7 1 244 1 151 1 81 1 133 1 313 1 365 1 158 1 347 1 192 1 40 1 119 3 323 1 277 1 120 1 145 1 195 1 258 1 43 3 121 2 302 1 234 1 371 1 283 1 215 1 
353 2 97 1 102 1 177 1 74 1 7 1 244 1 151 1 313 1 365 1 158 1 347 1 192 1 40 1 119 2 323 1 277 1 120 1 145 1 195 1 258 1 43 2 121 2 302 1 234 1 
74 1 244 2 81 1 225 1 186 1 158 2 31 1 317 1 190 1 226 1 40 2 119 1 141 1 230 1 120 1 145 1 195 1 258 1 43 1 234 2 371 1 215 1 373 1 
97 1 102 1 177 1 74 1 7 1 244 1 151 1 81 1 133 1 313 1 158 1 347 1 138 1 40 1 119 1 19 1 277 1 120 1 145 1 195 1 258 1 43 1 121 2 234 1 371 1 283 1 
20 1 
329 1 287 1 331 1 203 1 6 1 241 1 150 1 205 1 111 2 11 1 157 1 55 1 161 1 160 1 14 3 56 2 255 1 60 1 301 1 63 1 62 2 260 1 351 1 123 1 67 2 24 1 71 2 73 1 75 1 27 1 220 2 181 4 180 1 29 5 79 1 132 1 310 3 82 1 86 2 274 4 191 1 38 2 228 1 42 1 146 2 196 4 327 2 44 1 198 2 
329 1 287 1 331 1 71 2 73 1 27 1 203 1 180 1 181 2 6 1 29 1 79 1 132 1 205 1 150 1 310 1 82 1 11 1 86 2 274 2 55 1 160 1 191 1 14 1 56 2 228 1 42 1 196 3 260 1 123 1 327 2 198 1 
329 1 287 1 331 1 203 1 6 1 240 2 241 1 150 1 205 1 111 2 11 1 157 1 55 1 160 1 162 2 14 2 297 1 56 2 255 1 60 1 351 1 123 1 71 2 73 1 75 1 27 1 220 2 180 1 181 4 29 4 79 1 132 1 310 2 82 1 363 2 86 2 274 4 191 1 38 2 228 1 42 1 196 4 326 1 327 2 44 1 198 2 
274 2 38 1 15 1 181 2 29 2 255 1 60 1 241 1 141 1 278 1 145 1 258 1 195 1 259 1 351 1 44 1 
86 1 274 2 287 1 191 1 14 1 71 1 56 1 203 1 27 1 181 2 180 1 29 1 6 1 132 1 150 1 205 1 82 1 11 1 196 2 327 1 
329 1 287 1 71 1 27 1 203 1 180 1 181 3 29 1 6 1 132 1 205 1 150 1 82 1 11 1 86 1 274 3 191 1 160 1 251 1 56 1 38 1 196 3 327 1 198 1 
86 1 274 2 287 1 191 1 14 1 71 1 56 1 203 1 27 1 181 2 180 1 29 1 6 1 132 1 150 1 205 1 310 1 82 1 11 1 196 2 327 1 
329 1 287 1 331 1 71 2 73 1 27 1 203 1 180 1 181 3 29 2 6 1 108 1 79 1 132 1 205 1 150 1 310 1 82 1 11 1 86 2 274 3 55 1 160 1 191 1 251 1 14 1 56 2 38 1 228 1 42 1 196 3 123 1 327 2 198 1 
329 2 287 1 203 1 6 1 241 1 150 1 205 1 111 2 11 1 157 1 160 1 162 2 14 1 56 1 255 1 60 1 301 1 62 2 351 1 67 1 71 1 75 1 27 1 220 2 180 1 181 3 29 2 132 1 310 1 82 1 86 1 274 3 191 1 38 1 146 2 196 3 326 1 327 1 44 1 198 1 
329 1 287 1 24 1 71 1 75 1 27 1 203 1 220 2 180 1 181 4 29 4 6 1 241 1 132 1 205 1 150 1 310 2 111 2 82 1 11 1 157 1 86 1 274 4 160 1 191 1 161 1 14 2 56 1 38 2 255 1 60 1 301 1 62 2 63 1 146 2 196 4 351 1 67 2 327 1 44 1 198 2 
329 1 287 1 331 1 203 1 6 1 241 1 150 1 205 1 111 2 11 1 157 1 55 1 161 1 160 1 14 2 56 2 255 1 60 1 301 1 63 1 62 2 351 1 123 1 67 2 24 1 71 2 73 1 75 1 27 1 220 2 181 4 180 1 29 4 79 1 132 1 310 2 82 1 86 2 274 4 191 1 38 2 228 1 42 1 146 2 196 4 327 2 44 1 198 2 
329 1 287 1 331 1 203 1 6 1 240 2 241 1 150 1 205 1 111 2 11 1 52 1 157 1 55 1 160 1 162 2 14 2 297 1 56 2 255 1 60 1 351 1 123 1 24 1 71 2 73 1 75 1 27 1 220 2 181 4 180 1 29 4 79 1 132 1 310 2 82 1 363 2 86 2 274 4 191 1 89 1 38 2 228 1 42 1 196 4 327 2 44 1 198 2 
70 3 125 1 45 2 356 1 307 2 236 3 289 2 105 1 149 1 9 1 341 1 224 1 185 6 156 1 273 1 344 1 137 1 367 1 93 1 166 2 193 1 350 1 233 1 280 1 303 1 96 1 
70 8 45 1 125 2 307 2 236 6 101 3 356 2 288 3 3 1 359 2 289 4 131 2 149 2 80 1 9 1 224 2 185 14 246 1 84 1 343 1 273 4 248 1 344 2 367 11 33 1 166 1 17 1 350 11 143 1 280 2 175 1 21 1 303 1 
70 1 125 1 356 1 236 1 71 1 73 1 360 1 289 2 238 1 149 1 83 1 224 1 113 1 185 2 114 1 246 1 273 1 86 1 296 1 166 1 254 1 368 1 141 1 143 1 145 1 195 1 258 1 280 1 175 1 303 1 123 1 327 1 
68 1 70 3 45 1 125 2 307 1 356 2 236 4 357 1 71 1 3 1 333 1 73 1 359 1 360 1 289 4 131 1 149 2 9 1 83 1 224 2 113 1 185 7 246 1 273 3 86 1 344 1 367 3 368 1 349 1 350 3 141 1 211 1 145 1 213 1 258 1 195 1 280 2 175 1 303 2 123 1 327 1 
235 1 70 1 217 1 125 2 356 2 236 1 127 1 71 1 73 1 74 2 289 4 204 2 104 1 149 2 151 1 154 1 364 1 83 1 224 2 185 2 186 2 246 1 156 1 87 1 86 1 190 3 226 1 141 2 120 2 143 1 145 8 195 8 258 7 65 1 280 2 123 1 303 2 327 1 373 1 
70 1 45 1 125 1 307 1 356 1 236 2 71 1 73 1 3 1 359 1 289 2 131 1 79 1 149 1 9 1 224 1 185 3 188 1 273 1 86 1 344 1 367 1 350 1 95 1 280 1 175 1 123 1 303 1 327 1 
273 1 70 2 344 1 125 1 307 1 367 1 356 1 359 1 169 1 289 2 17 1 350 1 149 1 280 1 303 1 224 1 185 2 156 1 
273 1 45 1 125 1 307 1 367 1 356 1 236 2 3 1 253 1 289 2 350 1 149 1 9 1 280 1 303 1 224 1 185 2 156 1 
70 2 125 1 45 1 356 1 307 2 236 2 3 1 359 1 289 2 131 1 149 1 9 1 224 1 185 4 156 1 273 2 344 1 367 2 17 1 350 2 280 1 303 1 
273 1 235 1 70 2 344 1 125 1 307 1 367 1 356 1 359 1 169 1 289 2 17 1 350 1 149 1 280 1 303 1 224 1 185 2 
273 1 235 1 45 1 125 1 307 1 367 1 356 1 236 2 3 1 253 1 289 2 350 1 149 1 9 1 280 1 303 1 224 1 185 2 
235 1 70 2 125 1 45 1 356 1 307 2 236 2 3 1 359 1 289 2 131 1 149 1 9 1 224 1 185 4 273 2 344 1 367 2 17 1 350 2 280 1 303 1 
70 2 125 1 45 1 356 1 307 2 236 2 3 1 359 1 289 2 131 1 149 1 9 1 224 1 185 4 273 2 344 1 367 2 17 1 350 2 280 1 303 1 
70 1 125 1 356 1 236 1 360 1 49 1 289 2 149 1 224 1 113 1 185 2 246 1 166 1 56 1 141 1 211 1 143 1 145 1 195 1 258 1 280 1 303 1 
70 1 125 1 356 1 236 1 71 1 74 1 289 2 5 1 149 1 224 1 185 2 186 1 246 1 30 1 190 1 366 1 166 1 167 1 59 1 141 1 120 1 143 1 145 1 195 1 258 1 280 1 303 1 327 1 
70 2 125 1 45 1 356 1 307 2 236 2 3 1 359 1 289 2 131 1 149 1 9 1 224 1 185 4 273 2 344 1 367 2 17 1 350 2 280 1 175 1 303 1 
70 1 45 1 125 1 307 1 356 1 236 2 127 1 3 1 359 1 360 1 289 2 131 1 149 1 9 1 224 1 113 1 185 3 273 1 344 1 367 1 349 1 350 1 211 1 145 1 195 1 258 1 280 1 303 1 
70 2 125 1 236 1 307 1 356 1 71 1 3 1 73 1 359 1 289 2 361 1 131 1 79 1 149 1 9 1 224 1 185 3 188 1 86 1 273 1 344 1 367 1 17 1 350 1 280 1 175 1 123 1 303 1 327 1 
1 1 70 9 45 3 101 2 356 2 236 10 307 6 288 1 3 3 359 3 289 4 131 3 362 1 149 2 242 2 9 3 293 1 224 2 185 19 294 1 272 2 13 1 91 1 344 3 33 1 17 3 280 2 173 1 21 1 22 1 
330 1 201 1 70 13 45 1 307 2 236 10 356 2 101 2 202 1 288 2 3 2 359 3 289 4 338 1 131 3 362 2 149 2 242 1 110 1 243 1 9 2 293 2 224 2 185 23 272 3 13 1 91 1 163 1 344 3 17 1 280 2 173 1 21 2 22 1 
1 1 330 1 70 15 45 2 101 4 356 2 236 16 307 5 202 1 288 3 3 4 359 4 289 4 338 1 131 4 362 1 149 2 242 1 243 1 110 1 9 4 293 2 224 2 185 31 272 3 13 1 91 1 163 1 344 4 33 1 17 3 280 2 173 1 21 3 305 1 22 1 
1 1 330 1 201 1 70 17 45 3 101 4 356 3 236 15 307 6 202 1 288 3 3 3 359 4 289 6 338 1 131 4 362 1 149 3 242 1 243 1 110 1 9 3 293 2 224 3 185 32 272 4 13 1 91 1 163 1 344 4 33 1 17 3 280 3 173 1 21 3 305 1 22 1 
330 1 201 1 70 27 45 7 101 4 356 2 236 25 307 15 202 1 288 4 3 7 359 7 289 4 338 1 131 7 362 1 149 2 242 1 243 1 110 1 9 8 293 1 341 1 224 2 185 52 272 4 343 2 13 1 91 1 137 1 163 1 344 8 33 2 93 1 17 8 193 1 233 1 280 2 173 1 96 1 21 2 22 1 
23 1 90 1 126 1 10 1 279 1 122 1 325 1 37 1 187 1 247 1 
129 1 266 1 
2 1 23 1 318 1 10 1 279 1 122 1 321 1 37 1 247 1 
324 1 316 1 
53 1 212 1 206 1 
329 1 274 1 189 2 200 1 23 1 126 1 209 1 37 1 308 1 181 1 140 1 269 1 10 1 122 1 279 1 325 1 187 1 247 1 
329 1 274 1 189 2 200 1 23 1 126 1 209 1 37 1 308 1 181 1 140 1 269 1 10 1 122 1 279 1 325 1 187 1 247 1 
329 1 274 1 189 2 200 1 23 1 126 1 209 1 37 1 308 1 181 1 140 1 269 1 10 1 122 1 279 1 325 1 187 1 247 1 
53 1 324 1 316 1 
53 1 324 1 316 1 
212 1 206 1 
53 1 212 1 206 1 
295 1 136 1 
200 1 23 1 71 2 237 1 358 1 73 2 308 1 129 1 265 1 266 1 181 1 10 1 312 1 247 1 86 2 274 1 189 1 249 1 295 1 136 1 166 1 37 1 39 1 279 1 122 1 123 2 327 2 
70 1 125 1 356 1 236 1 71 2 74 1 289 2 204 2 104 1 309 1 149 1 224 1 186 1 185 2 246 1 86 2 190 1 170 1 139 1 120 1 143 1 145 2 195 2 258 2 65 1 280 1 261 1 175 1 303 1 147 1 327 2 
97 1 0 1 159 1 102 1 347 1 177 1 127 1 74 1 277 1 7 1 120 1 151 1 145 2 258 2 195 2 121 2 315 1 234 1 283 1 
97 1 0 1 102 1 347 1 177 1 74 1 109 1 277 1 7 1 120 1 151 1 145 1 258 1 195 1 121 2 234 1 283 1 
31 1 190 1 226 1 74 1 334 1 141 1 120 1 145 1 258 1 195 1 315 1 234 1 186 1 373 1 
97 1 0 1 159 1 102 1 347 1 177 1 74 1 277 1 7 1 120 1 151 1 145 1 258 1 195 1 121 2 315 1 234 1 283 1 
276 1 
125 1 356 1 236 1 71 2 73 2 360 1 78 1 289 2 79 2 149 1 224 1 185 1 113 1 246 1 86 2 166 1 228 1 141 1 211 1 145 1 195 1 258 1 280 1 123 2 303 1 327 2 
329 4 160 2 137 1 162 4 346 2 298 2 255 1 60 2 241 1 278 1 146 2 351 1 44 1 372 1 157 1 
329 1 105 1 160 1 60 1 311 1 51 1 157 1 
329 2 181 1 29 1 241 1 157 1 274 1 160 1 162 1 38 1 255 1 60 1 301 1 62 1 146 1 351 1 67 1 44 1 
329 3 287 1 3 1 241 2 9 1 157 4 117 1 162 6 344 1 346 3 167 1 298 3 255 2 171 1 60 3 120 1 258 1 351 2 354 1 68 1 74 2 359 1 181 2 29 2 131 1 223 1 271 1 186 1 190 4 274 2 35 1 36 1 38 1 141 1 142 1 145 1 232 1 195 1 146 3 281 1 372 1 284 2 44 2 
329 3 101 1 202 1 288 1 3 2 359 2 338 1 241 1 131 2 110 1 243 1 9 2 157 6 162 6 163 1 344 2 346 5 35 1 298 5 255 1 60 4 146 3 351 1 21 1 44 1 
331 1 219 1 71 1 73 1 181 1 107 1 241 1 79 1 9 1 341 1 157 2 86 1 274 1 55 1 161 1 344 2 93 1 35 2 56 1 228 1 255 1 60 2 42 1 351 1 96 1 123 1 327 1 44 1 
329 1 160 1 255 1 241 1 60 1 51 1 311 1 351 1 44 1 157 1 
68 1 329 5 344 2 162 10 346 5 219 1 3 2 35 2 359 2 298 5 131 2 60 5 146 5 9 2 157 5 
86 1 329 1 274 1 55 1 160 1 331 1 71 1 73 1 56 1 38 1 228 1 181 1 29 1 42 1 79 1 123 1 327 1 
274 1 178 1 38 1 15 1 181 1 29 2 255 1 60 1 141 1 241 1 278 1 145 1 258 1 195 1 259 1 351 1 44 1 
279 1 270 1 247 1 
279 1 270 1 247 1 
136 1 172 1 126 1 279 1 247 1 
279 1 270 1 247 1 
279 1 112 1 247 1 
279 1 112 1 247 1 
279 1 112 1 247 1 
279 1 247 1 
23 1 122 1 
70 4 201 1 137 1 344 1 45 2 236 4 307 3 356 2 93 1 289 4 17 1 193 1 149 2 9 1 233 1 280 2 224 2 341 1 96 1 185 8 
70 3 137 1 344 1 45 2 236 3 307 2 93 1 105 1 193 1 9 1 233 1 341 1 96 1 185 6 
70 2 148 1 344 1 45 1 236 2 307 2 356 1 3 1 359 1 289 2 17 1 131 1 149 1 9 1 280 1 224 1 185 4 
70 3 344 1 45 1 101 2 236 4 33 1 307 2 288 1 3 1 359 1 17 1 131 1 9 1 21 1 185 7 
70 11 201 2 45 5 307 9 236 12 101 2 356 2 288 2 3 2 359 2 289 4 131 2 149 2 9 3 341 2 224 2 185 23 343 1 248 1 137 1 344 3 33 1 93 1 17 4 193 1 233 1 280 2 96 2 306 1 
236 1 101 1 185 1 
70 1 288 1 185 1 
68 1 70 3 148 1 344 1 45 2 356 1 236 3 307 3 3 1 359 1 289 2 17 1 131 1 149 1 9 1 280 1 224 1 185 6 
70 6 45 1 236 6 101 1 356 1 307 2 288 1 202 1 3 2 359 2 289 2 131 2 338 1 149 1 110 1 243 1 9 2 224 1 185 12 163 1 344 2 17 1 280 1 173 1 21 1 
70 3 344 1 45 1 236 3 307 2 93 1 17 1 9 1 341 1 96 1 185 6 
70 1 201 1 45 1 307 2 236 2 356 1 289 2 17 1 193 1 149 1 233 1 280 1 96 1 341 1 224 1 185 3 306 1 
70 5 344 2 45 3 356 1 307 5 236 5 93 1 289 2 17 2 107 1 149 1 9 2 280 1 173 1 224 1 341 2 96 2 185 10 
70 2 344 1 356 1 307 1 359 1 289 2 17 1 149 1 173 1 280 1 224 1 185 2 
70 2 344 1 45 1 236 2 307 2 356 1 3 1 359 1 289 2 17 1 131 1 149 1 9 1 173 1 280 1 224 1 185 4 
1 1 201 1 70 1 45 1 236 2 356 3 307 2 289 6 17 1 149 3 173 1 280 3 224 3 341 1 96 1 185 3 306 1 
1 1 201 2 70 16 148 1 45 7 236 18 101 4 356 5 307 12 288 3 332 1 3 3 359 3 289 10 131 3 149 5 9 5 207 1 341 3 224 5 185 34 137 1 344 5 33 1 93 2 17 5 193 1 233 1 280 5 173 1 96 3 21 1 306 1 328 1 
70 4 45 2 236 4 101 1 356 1 307 2 288 1 289 2 149 1 110 1 9 1 224 1 341 1 185 8 137 1 344 1 93 1 193 1 233 1 280 1 173 1 21 1 96 1 
70 6 148 1 45 2 236 5 101 2 356 2 307 3 288 1 359 1 289 4 131 1 149 2 110 1 9 1 341 1 224 2 185 11 137 1 344 2 33 1 93 1 17 1 193 1 233 1 173 1 280 2 96 1 21 1 
70 6 148 1 45 1 236 6 101 1 356 2 307 2 288 1 202 1 3 2 359 2 289 4 131 2 338 1 149 2 110 1 243 1 9 2 224 2 185 12 163 1 344 2 17 1 280 2 173 1 21 1 
201 1 70 10 148 1 45 2 236 7 101 1 356 3 307 4 288 1 202 1 3 1 359 2 289 6 131 2 338 1 149 3 110 1 243 1 9 2 341 1 224 3 185 17 137 1 163 1 344 3 93 1 17 2 193 1 233 1 280 3 173 1 96 1 21 1 
70 4 45 2 236 4 101 1 356 1 307 2 288 1 289 2 149 1 110 1 9 1 224 1 341 1 185 8 137 1 344 1 93 1 193 1 233 1 280 1 173 1 21 1 96 1 
70 6 236 6 101 1 356 1 307 1 288 1 202 1 3 2 359 2 289 2 131 2 338 1 149 1 110 1 243 1 9 2 224 1 185 12 163 1 344 2 17 1 280 1 173 1 21 1 
201 1 70 7 148 1 45 1 236 4 101 1 356 3 307 2 288 1 202 1 3 1 359 2 289 6 338 1 131 2 149 3 110 1 243 1 9 1 224 3 185 11 163 1 344 2 17 1 280 3 173 1 21 1 
1 1 70 9 201 2 45 3 236 7 101 1 356 4 307 6 202 1 288 1 3 2 359 3 289 8 338 1 131 3 149 4 110 1 243 1 9 2 224 4 185 16 163 1 344 3 17 3 173 1 280 4 21 1 
70 3 344 1 45 3 236 4 307 6 93 1 17 3 193 1 9 1 233 2 341 3 96 3 185 7 
1 1 70 10 201 2 45 4 236 8 101 1 356 4 307 5 202 1 288 1 3 1 359 2 289 8 338 1 131 2 149 4 110 1 243 1 9 2 341 1 224 4 185 18 137 1 163 1 344 3 93 1 17 1 193 1 233 1 173 1 280 4 96 1 21 1 
86 1 336 1 180 1 71 1 166 1 327 1 227 1 
86 1 115 1 32 1 71 1 166 1 50 1 227 1 336 1 180 1 61 1 282 1 327 1 
105 1 190 1 226 1 141 1 120 1 145 1 195 1 258 1 74 1 186 1 373 1 
86 1 71 1 73 1 56 1 166 1 360 1 49 1 141 1 145 1 258 1 195 1 83 1 123 1 327 1 
86 1 71 1 73 1 56 1 166 1 360 1 49 1 28 1 145 1 258 1 195 1 83 1 123 1 327 1 
216 1 71 2 73 2 74 1 203 1 28 1 5 1 83 1 186 2 86 2 190 3 366 1 191 1 166 1 167 2 56 1 168 1 18 1 120 1 145 2 195 2 258 2 123 1 327 2 
329 1 216 1 287 1 331 1 71 1 264 1 73 1 74 1 28 1 181 2 29 1 79 1 186 1 86 1 190 4 274 2 55 1 117 1 160 1 56 1 167 1 168 1 228 1 42 1 120 1 145 1 195 1 258 1 123 1 327 1 284 1 197 1 
329 1 216 1 287 1 331 1 71 1 73 1 74 1 28 1 181 2 29 1 79 1 186 1 86 1 190 4 274 2 55 1 117 1 160 1 56 1 167 1 168 1 228 1 42 1 120 1 142 1 145 1 195 1 258 1 123 1 327 1 284 1 
87 1 120 1 145 1 195 1 258 1 74 1 
190 1 12 1 74 2 57 1 167 1 291 1 171 1 141 1 120 1 145 1 258 1 195 1 186 1 
70 3 45 1 125 2 236 2 307 1 356 2 71 1 127 1 73 1 333 1 360 1 289 4 149 2 9 1 83 1 341 1 224 2 185 5 113 1 86 1 137 1 344 1 367 1 93 1 166 2 349 1 170 1 350 1 193 1 211 1 145 1 258 1 195 1 233 1 280 2 175 1 96 1 303 2 123 1 327 1 
329 2 287 1 331 1 107 1 241 2 51 1 9 2 341 1 157 4 55 1 117 1 160 2 344 2 56 1 255 2 60 5 258 1 351 2 123 1 354 1 219 1 71 1 178 1 73 1 181 3 29 2 79 1 311 1 312 1 86 1 190 2 274 3 93 1 35 2 36 1 38 1 228 1 141 1 42 1 142 1 145 1 195 1 281 1 96 1 327 1 284 1 44 2 
87 1 190 2 117 1 127 1 74 2 167 1 171 1 120 1 145 2 232 1 258 2 195 2 186 1 
190 1 226 1 345 1 127 1 74 1 18 1 141 1 120 1 145 4 258 4 195 4 186 1 373 1 
98 1 190 1 12 1 74 2 57 1 167 1 103 1 120 1 145 1 258 1 195 1 66 1 186 1 
97 1 141 1 120 1 145 1 347 1 195 1 258 1 177 1 121 1 74 1 
190 1 120 1 151 1 145 2 195 2 258 2 127 1 74 1 65 1 261 1 186 1 
190 3 226 1 217 1 345 1 127 1 74 2 28 1 141 1 120 2 145 5 258 4 195 5 154 1 65 1 186 2 373 1 
190 3 226 1 217 1 345 1 127 1 74 2 28 1 210 1 141 1 120 2 145 5 258 4 195 5 65 1 186 2 373 1 
86 1 190 1 366 1 71 2 74 1 73 1 166 1 167 1 5 1 141 1 120 1 145 1 258 1 195 1 83 1 123 1 186 1 327 2 
190 1 12 1 74 2 57 1 167 1 28 1 291 1 171 1 120 1 145 1 258 1 195 1 186 1 
16 1 299 1 179 1 166 1 176 1 
329 1 274 2 160 1 287 1 191 1 179 2 47 1 166 1 56 1 203 1 27 1 299 1 16 2 181 2 292 1 312 1 184 1 176 2 214 1 
86 1 299 1 16 1 139 1 309 1 71 1 179 1 327 1 147 1 
299 1 292 1 184 1 
353 1 369 1 119 3 323 1 231 1 43 3 81 1 302 1 371 1 138 1 365 1 
353 1 119 1 208 1 323 1 43 1 352 1 
323 1 302 1 
105 1 323 1 302 1 365 1 
119 1 323 1 43 1 81 1 302 1 371 1 365 1 
158 1 119 1 40 1 
58 1 369 2 119 3 323 1 43 3 81 1 370 1 302 1 34 1 371 1 138 1 365 1 
353 1 119 2 323 1 319 1 43 2 81 1 302 1 371 1 365 1 
119 1 54 1 268 1 323 1 43 1 81 1 371 1 352 1 138 1 
119 1 323 1 43 1 81 1 302 1 371 1 138 1 
119 1 43 1 81 1 302 2 371 1 138 1 365 1 
252 1 138 1 119 2 323 1 81 2 43 2 314 1 302 1 174 1 371 2 
353 1 208 1 355 1 119 2 268 1 323 1 231 1 43 2 81 1 371 1 352 1 138 1 
353 1 347 1 102 1 177 1 138 1 337 1 119 2 323 1 277 1 81 1 43 2 121 2 302 1 371 1 365 1 
353 1 208 1 119 2 268 1 323 1 319 1 43 2 81 1 155 1 371 1 352 1 138 1 
119 1 323 1 43 1 81 1 302 1 371 1 138 1 365 1 
353 1 208 1 119 2 323 1 268 2 81 1 43 2 371 1 352 1 
353 1 275 1 119 2 323 1 194 1 43 2 81 1 302 1 342 1 371 1 138 1 365 1 
58 1 369 2 119 3 323 1 43 3 81 1 302 1 34 2 340 1 371 1 138 1 365 1 
335 1 286 1 323 2 183 2 
119 1 43 1 81 1 371 1 221 1 138 1 
353 1 119 2 323 1 231 1 43 2 81 1 302 1 371 1 138 1 365 1 
134 1 
119 1 323 1 43 1 81 1 302 1 371 1 138 1 365 1 

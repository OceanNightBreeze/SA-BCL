#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (237,239) (237,239) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (237,239) (237,239) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (237,239) (237,239) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (237,239) (237,239) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 2 (107,186) 88 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 2 19 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 4 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 290 (122,250,255) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (110,321) (160,273) (160,273) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (55,257,288) (63,184,265) (63,184,265) (63,184,265) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (55,257,288) (63,184,265) (63,184,265) (63,184,265) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (55,257,288) (63,184,265) (63,184,265) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (55,257,288) (63,184,265) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 145 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 159 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 2 19 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 2 (107,186) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 162 40 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 2 (107,186) (107,186) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 318 97 147 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 318 97 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 318 97 147 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 318 97 147 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 318 97 147 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (110,321) (110,321) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (55,257,288) (55,257,288) (55,257,288) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (55,257,288) (55,257,288) (55,257,288) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (55,257,288) (55,257,288) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 2 (107,186) 88 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 306 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
219 1 238 1 222 1 202 3 240 1 300 2 299 3 153 1 42 1 108 2 252 1 304 1 161 2 
1 1 237 1 108 1 202 1 222 1 327 1 252 1 239 1 106 1 299 1 300 1 
1 1 237 1 108 1 202 1 222 1 327 1 252 1 239 1 106 1 299 1 300 1 
1 1 237 1 108 1 202 1 222 1 327 1 252 1 239 1 106 1 299 1 300 1 
1 1 237 1 108 1 202 1 222 1 327 1 252 1 239 1 106 1 299 1 300 1 
141 1 219 3 261 1 52 2 238 1 222 1 202 4 57 1 240 1 300 1 299 4 153 1 108 1 187 1 115 1 304 2 161 3 124 1 
261 1 1 1 238 1 222 1 202 2 240 1 300 1 299 2 301 1 272 1 325 1 108 1 252 1 161 1 307 1 124 1 
238 1 202 9 37 1 240 1 299 9 300 2 42 1 252 1 304 4 219 7 141 1 261 1 52 2 222 1 57 1 319 1 322 1 151 1 153 3 108 2 187 1 115 1 161 5 124 1 
238 1 202 9 37 1 240 1 299 9 300 2 42 1 252 1 304 4 219 7 141 1 261 1 52 2 222 1 57 1 319 1 322 1 151 1 153 3 108 2 187 1 115 1 161 5 124 1 
81 1 262 1 200 1 54 1 131 1 149 1 269 1 207 1 247 1 211 1 111 1 213 1 44 1 140 1 
177 1 
54 1 249 1 36 1 277 1 93 1 207 2 269 2 177 1 
85 1 54 2 36 1 294 2 18 1 296 1 269 5 207 5 244 2 41 1 152 2 277 1 214 1 215 1 232 1 11 1 93 2 177 1 284 1 
36 1 306 1 177 1 
274 1 166 2 177 1 
262 2 200 2 247 1 111 2 213 2 282 1 44 2 140 2 
236 1 262 1 200 1 2 1 128 1 88 1 204 1 107 1 323 1 247 1 276 2 111 1 213 1 44 1 140 1 
262 1 200 1 247 1 211 1 111 1 213 1 131 1 44 1 149 1 140 1 
81 1 262 2 200 1 83 1 221 1 291 1 36 1 131 1 149 2 247 1 211 1 326 1 111 1 213 2 74 1 44 2 177 1 140 1 
81 1 262 2 200 2 83 1 221 1 36 1 291 1 131 1 149 2 269 1 207 1 247 1 211 1 111 2 213 2 44 2 177 1 140 2 
171 1 54 1 93 1 207 1 269 1 
54 1 36 1 277 1 27 1 93 1 207 2 269 2 177 1 
93 1 207 1 269 1 
262 2 200 1 179 1 111 1 213 2 44 2 282 2 308 1 140 1 
235 1 102 1 169 1 
236 1 2 1 276 1 19 1 
210 1 236 1 262 1 200 1 2 1 276 1 213 1 315 1 44 1 140 1 
282 1 306 1 
262 3 200 3 111 1 213 3 315 1 282 1 44 3 140 3 
262 1 200 1 211 1 213 1 44 1 149 1 140 1 
262 1 200 1 179 1 111 1 213 1 44 1 149 1 308 1 140 1 
262 2 83 1 200 2 221 1 179 1 291 1 315 1 149 1 210 1 111 1 213 2 158 1 44 2 140 2 198 1 
262 2 200 1 213 2 10 1 315 1 74 1 282 1 44 2 140 1 
210 1 262 1 83 1 200 1 221 1 291 1 213 1 315 1 158 1 4 1 44 1 149 1 140 1 
235 1 262 2 200 2 179 1 315 1 169 1 111 1 213 2 44 2 140 2 
236 1 2 1 276 1 
236 1 276 1 162 1 
235 2 35 1 89 1 295 1 169 2 248 1 136 1 12 1 309 1 178 1 102 2 223 1 62 1 224 1 324 1 225 4 275 2 190 2 70 1 117 1 328 1 32 1 287 2 123 1 
262 1 83 1 200 1 213 1 241 1 44 1 149 1 140 1 
262 5 200 4 84 1 179 1 315 2 210 1 111 1 213 5 229 1 10 1 74 1 44 5 282 1 140 4 
262 2 200 2 211 1 213 2 241 1 44 2 149 1 140 2 
51 1 290 1 255 1 122 1 
51 1 250 1 255 1 
51 1 255 1 
51 1 255 1 
290 1 122 1 
290 1 122 1 
290 1 122 1 
51 1 255 1 47 1 
51 1 255 1 47 1 
51 1 255 1 47 1 
51 1 58 1 255 1 
51 1 58 1 255 1 
51 1 58 1 255 1 
96 1 310 3 51 2 266 1 316 2 317 2 320 1 269 2 207 2 279 2 231 1 255 2 118 2 120 1 76 2 135 1 195 1 330 1 177 1 
200 2 207 1 206 1 7 1 250 1 213 2 255 1 135 1 44 2 45 1 217 1 140 2 310 1 51 1 262 2 53 1 314 1 316 1 317 1 269 1 73 1 118 1 282 1 76 1 
272 1 187 1 69 2 9 1 124 2 
261 1 187 1 124 1 
272 1 261 1 124 1 
272 1 187 2 227 1 69 1 9 1 124 3 
272 1 187 1 69 1 9 1 137 1 124 2 
166 3 85 1 36 1 294 1 130 2 89 1 295 1 207 5 244 1 246 1 7 1 251 1 43 1 215 3 11 2 45 1 93 1 136 1 217 1 177 2 259 1 54 4 98 2 269 5 152 1 65 2 274 1 228 1 277 1 70 1 29 1 285 1 
166 9 85 1 167 1 36 1 294 2 130 6 89 3 295 3 296 1 207 9 244 2 246 2 171 5 251 3 172 1 215 8 11 6 93 6 136 3 217 4 258 5 177 5 259 1 54 7 143 1 269 9 152 2 23 1 65 6 274 3 277 1 70 3 192 1 29 2 79 1 
166 4 36 1 294 1 130 2 89 1 295 1 296 1 207 3 244 1 246 1 43 1 251 1 215 3 11 2 217 1 136 1 177 3 54 2 98 1 269 3 152 1 65 2 274 2 228 1 70 1 29 1 
166 7 36 1 294 1 130 4 89 2 295 2 296 1 207 4 244 1 246 1 43 1 251 2 215 5 11 4 217 2 136 2 177 4 98 2 54 3 269 4 152 1 65 4 23 1 274 3 228 1 70 2 192 1 29 1 79 1 
281 1 
72 1 168 1 306 1 
72 1 286 1 
226 1 72 1 
144 1 168 2 271 1 226 1 72 2 281 1 49 1 
226 1 144 1 72 1 
72 1 180 1 
126 1 103 1 127 1 201 2 56 1 89 1 181 1 224 2 22 1 225 7 185 1 67 1 275 4 157 1 70 1 78 1 12 3 287 3 
126 2 201 1 35 1 132 1 303 1 254 1 139 1 12 2 101 1 103 1 181 1 21 1 62 1 224 1 225 6 324 1 67 1 156 1 275 3 190 2 157 1 78 1 287 3 32 1 
199 1 126 1 103 1 201 2 35 2 56 1 89 1 181 1 60 1 21 1 62 2 22 1 224 3 225 9 324 2 185 1 275 5 157 1 190 4 70 1 78 1 12 4 287 4 32 2 
126 1 103 1 201 2 56 1 89 1 181 1 224 2 22 1 225 7 185 1 67 1 275 4 157 1 70 1 78 1 12 3 287 3 
126 1 103 1 201 2 56 1 89 1 181 1 224 2 22 1 225 7 185 1 67 1 275 4 157 1 70 1 78 1 12 3 287 3 
236 1 165 2 202 1 104 2 59 2 270 1 300 1 299 1 90 1 273 1 108 1 276 1 110 1 252 2 160 1 
165 1 222 1 202 1 265 1 203 1 104 1 59 1 20 1 63 1 300 1 299 1 184 1 108 1 276 1 252 1 257 1 
165 1 222 1 202 1 265 1 203 1 104 1 59 1 63 1 300 1 299 1 183 1 184 1 108 1 276 1 252 1 257 1 
219 1 50 1 165 1 202 2 265 1 203 1 104 1 59 1 20 1 63 1 300 1 299 2 90 1 108 1 276 1 252 1 257 1 
219 1 50 1 165 1 276 1 202 1 265 1 104 1 252 1 59 1 20 1 257 1 299 1 
212 1 
236 2 83 1 85 1 166 2 242 2 6 1 244 1 246 1 253 1 173 1 174 2 11 2 93 6 95 1 177 1 14 1 262 1 260 2 16 1 17 2 269 4 274 2 109 1 276 2 277 3 112 1 114 1 193 2 283 1 34 2 291 1 294 1 207 4 298 1 297 2 213 1 215 2 44 1 218 1 221 1 61 2 149 1 152 1 326 1 74 1 
218 1 260 1 262 1 83 1 221 1 291 1 149 1 269 2 207 2 6 1 109 1 249 1 326 1 277 1 213 1 253 1 74 1 44 1 93 2 95 1 
218 1 262 1 34 1 83 1 221 1 291 1 61 1 149 1 269 1 207 1 6 1 109 1 326 1 213 1 253 1 74 1 44 1 95 1 
83 1 34 1 291 1 207 2 6 1 249 1 213 1 253 1 44 1 93 2 95 1 218 1 262 1 260 1 221 1 61 1 149 1 269 2 109 1 326 1 277 1 74 1 193 1 
81 1 83 1 85 1 87 1 242 2 6 1 244 1 247 1 249 1 253 1 174 2 11 1 93 7 95 1 177 1 260 4 262 2 16 1 17 2 269 4 274 2 109 1 111 1 277 3 112 1 193 4 200 1 34 2 291 1 36 1 38 1 294 1 131 1 207 4 297 2 211 1 213 2 215 1 44 2 140 1 218 1 142 1 221 1 61 2 149 2 152 1 155 1 326 1 74 1 75 1 
34 2 83 1 166 2 85 1 36 1 291 1 294 1 242 2 207 3 297 2 6 1 244 1 213 1 253 1 215 1 174 2 44 1 11 1 93 4 95 1 177 2 218 1 14 1 260 2 262 1 16 1 221 1 17 2 61 2 149 1 269 3 152 1 274 2 109 1 326 1 277 2 112 1 193 2 74 1 
81 1 83 1 85 1 87 1 242 2 6 1 244 1 247 1 253 1 174 2 11 1 93 4 95 1 177 1 262 2 260 2 16 1 17 2 269 3 274 2 109 1 111 1 277 2 112 1 193 2 200 1 34 2 291 1 36 1 294 1 131 1 207 3 297 2 211 1 213 2 215 1 44 2 140 1 218 1 142 1 221 1 61 2 149 2 152 1 326 1 74 1 75 1 
81 1 83 1 85 1 87 1 242 2 6 1 244 1 247 1 253 1 174 2 11 1 93 4 95 1 177 1 262 2 260 2 16 1 17 2 269 3 274 2 109 1 111 1 277 2 112 1 193 2 200 1 34 2 291 1 36 1 294 1 131 1 207 3 297 2 211 1 213 2 215 1 44 2 140 1 218 1 142 1 221 1 61 2 149 2 152 1 326 1 74 1 75 1 
218 1 262 1 83 1 221 1 145 1 291 1 149 1 269 1 207 1 6 1 109 1 326 1 213 1 253 1 74 1 44 1 95 1 
81 1 83 1 85 1 87 1 242 2 6 1 244 1 247 1 253 1 174 2 11 1 93 5 95 1 177 1 260 3 262 2 16 1 17 2 269 3 274 2 109 1 111 1 277 2 112 1 193 3 200 1 34 3 291 1 36 1 38 1 294 1 131 1 207 3 297 2 211 1 213 2 215 1 44 2 140 1 218 1 142 1 221 1 61 3 149 2 152 1 326 1 74 1 75 1 
81 1 83 1 85 1 87 1 242 2 6 1 244 1 247 1 253 1 174 2 11 1 93 5 95 1 177 1 260 3 262 2 16 1 17 2 269 3 274 2 109 1 111 1 277 2 112 1 193 3 200 1 34 3 291 1 36 1 38 1 294 1 131 1 207 3 297 2 211 1 213 2 215 1 44 2 140 1 218 1 142 1 221 1 61 3 149 2 152 1 326 1 74 1 75 1 
34 2 83 1 166 2 85 1 36 1 291 1 293 2 294 1 5 2 242 2 207 3 6 1 244 1 213 1 253 1 215 1 44 1 11 1 93 4 95 1 177 1 13 1 218 1 14 1 260 2 262 1 16 1 221 1 17 2 61 2 149 1 269 3 152 1 109 1 326 1 277 2 193 2 74 1 
236 2 200 1 35 2 245 1 213 1 44 1 94 1 176 1 140 1 262 1 178 1 315 1 223 2 62 2 323 1 183 1 324 2 225 2 276 4 275 1 190 4 188 1 117 2 159 1 32 2 287 1 
235 1 200 1 35 1 295 1 89 1 169 1 213 1 251 1 175 1 44 1 136 1 12 1 140 1 220 1 262 1 179 1 102 1 223 1 62 1 224 1 324 1 225 3 275 1 111 1 190 2 70 1 117 1 32 1 287 2 
235 1 35 1 201 1 89 1 169 1 306 1 12 2 178 1 103 1 102 1 56 1 223 1 62 1 22 1 224 2 324 1 225 6 185 1 275 3 190 2 157 1 70 1 117 1 282 2 32 1 287 3 
324 1 35 1 190 2 117 1 223 1 175 1 62 1 256 1 32 1 
125 1 236 1 235 1 200 1 2 1 35 1 210 1 245 1 213 1 175 1 44 1 140 1 262 1 315 1 19 1 223 1 62 1 268 1 324 1 225 2 276 1 275 1 190 2 188 1 117 1 32 1 80 1 287 1 
236 1 262 1 200 1 35 1 315 1 223 1 62 1 225 1 324 1 210 1 276 1 188 1 190 2 213 1 216 1 175 1 117 1 44 1 287 1 32 1 140 1 
235 1 178 1 102 1 35 1 223 1 169 1 62 1 225 2 324 1 275 2 190 2 70 1 117 1 328 1 78 1 136 1 12 1 32 1 
235 1 178 1 102 1 35 1 223 1 295 1 89 1 169 1 62 1 224 1 225 2 324 1 248 1 190 2 117 1 12 1 32 1 287 2 
235 2 178 1 102 2 35 1 89 1 295 1 223 1 169 2 62 1 224 1 225 4 324 1 275 2 190 2 251 1 70 1 117 1 78 1 136 1 12 2 287 2 32 1 
235 1 102 1 35 1 223 1 169 1 62 1 225 2 324 1 275 2 190 2 70 1 117 1 328 1 78 1 94 1 136 1 12 1 32 1 
235 1 102 1 35 1 223 1 295 1 89 1 169 1 62 1 224 1 225 2 324 1 248 1 190 2 117 1 94 1 12 1 32 1 287 2 
235 2 102 2 35 1 89 1 295 1 223 1 169 2 62 1 224 1 225 4 324 1 275 2 190 2 251 1 70 1 117 1 78 1 94 1 136 1 12 2 287 2 32 1 
235 2 102 2 35 1 89 1 295 1 223 1 169 2 62 1 224 1 324 1 225 4 275 2 190 2 251 1 70 1 117 1 78 1 136 1 12 2 287 2 32 1 
236 1 2 1 276 1 107 1 
236 1 276 1 40 1 162 1 
235 2 102 2 35 1 89 1 295 1 223 1 169 2 62 1 224 1 225 4 324 1 275 2 190 2 251 1 70 1 175 1 117 1 78 1 136 1 12 2 287 2 32 1 
183 1 186 1 2 1 276 1 107 1 
235 1 200 1 35 1 89 1 295 1 169 1 213 1 251 1 175 1 44 1 136 1 12 1 140 1 262 1 179 1 102 1 223 1 62 1 324 1 225 3 66 1 275 2 111 1 190 2 70 1 117 1 78 1 287 1 32 1 
97 1 199 1 35 1 147 1 318 1 62 1 225 2 324 1 275 1 190 2 194 1 138 1 32 1 287 1 
97 2 199 1 35 1 147 1 318 2 62 1 225 2 324 1 275 1 190 2 194 1 138 1 32 1 287 1 
97 1 199 1 35 1 147 1 318 1 62 1 225 2 324 1 275 1 190 2 194 1 138 1 32 1 287 1 
97 1 199 1 35 1 147 1 318 1 62 1 225 2 324 1 275 1 190 2 194 1 138 1 32 1 287 1 
97 1 199 1 35 1 147 1 318 1 62 1 225 2 324 1 275 1 190 2 194 1 138 1 32 1 287 1 
262 2 0 1 35 1 223 1 62 1 170 1 323 2 225 2 324 1 245 1 276 2 275 1 134 1 188 1 190 2 189 1 213 2 175 1 117 1 44 2 176 1 287 1 32 1 
236 1 276 1 110 1 8 1 59 1 321 1 
55 1 276 1 8 1 203 1 59 1 20 1 257 1 288 1 
183 1 55 1 276 2 8 1 203 1 59 1 20 1 257 1 288 1 
100 1 276 1 203 1 59 1 20 1 257 1 288 1 
39 1 
85 1 36 1 294 1 244 1 152 1 41 1 215 1 232 1 11 1 177 1 
289 2 166 10 130 5 295 2 89 2 209 1 65 5 274 5 251 2 70 2 215 5 329 1 11 5 136 2 177 5 
36 1 277 1 93 1 207 1 269 1 177 1 
236 2 99 1 85 1 205 2 294 2 296 1 207 3 269 3 298 1 244 2 152 2 246 2 276 4 277 2 113 1 114 2 215 2 119 1 11 2 93 4 283 1 
41 1 36 1 215 1 232 1 11 1 306 1 177 1 
85 1 166 1 36 1 294 1 207 1 297 1 244 1 215 1 174 1 11 1 93 1 177 2 269 1 152 1 274 1 277 1 112 1 
152 1 236 1 85 1 276 1 294 1 148 1 244 1 
289 2 164 1 166 6 85 2 36 2 294 2 130 5 295 2 89 2 132 1 207 1 244 2 246 1 251 2 303 1 215 8 254 1 11 5 93 1 136 2 48 1 177 5 311 1 269 1 64 1 152 2 65 5 274 3 277 1 114 1 70 2 191 1 329 1 30 1 163 1 
289 2 81 1 200 1 85 1 87 1 294 1 131 1 89 1 207 1 244 1 247 1 211 1 213 1 215 2 44 1 11 2 140 1 262 1 103 1 56 1 149 1 269 1 152 1 111 1 157 1 278 1 70 2 329 1 
236 1 262 1 200 1 247 1 2 1 276 1 111 1 213 1 88 1 44 1 107 1 140 1 
166 4 85 1 201 1 36 2 294 1 130 2 244 1 152 1 65 2 274 2 246 1 114 1 215 1 11 2 177 4 
317 1 118 1 195 1 206 1 197 1 
116 1 317 1 118 1 
116 1 317 1 118 1 
116 1 317 1 118 1 
129 1 317 1 118 1 
129 1 317 1 118 1 
129 1 317 1 118 1 
317 1 118 1 
51 1 255 1 
199 1 35 1 103 2 56 1 89 2 62 1 224 3 324 1 225 10 275 5 190 2 278 1 157 2 70 2 78 2 12 5 32 1 287 5 
199 1 35 1 62 1 324 1 225 2 275 2 190 2 70 1 78 1 136 1 12 1 32 1 
199 1 35 1 89 1 295 1 62 1 224 1 324 1 225 4 275 2 190 2 251 1 70 1 78 1 136 1 12 2 287 2 32 1 
199 1 35 3 103 1 3 1 21 1 62 3 224 1 225 3 324 3 156 1 275 1 190 6 157 1 78 1 12 2 287 2 32 3 
199 1 35 4 3 1 89 2 132 1 303 1 254 1 12 6 139 1 103 2 56 1 62 4 21 1 22 1 224 3 324 4 225 15 185 1 275 7 156 1 278 1 190 8 157 2 70 2 71 1 78 3 287 8 32 4 
164 1 199 1 201 1 35 2 295 1 89 4 132 1 251 2 303 1 254 1 136 2 12 9 48 1 103 2 56 2 21 1 62 2 22 1 224 5 225 24 324 2 185 1 275 14 278 1 157 2 190 4 70 5 191 1 78 4 30 1 287 10 32 2 163 1 
164 1 199 1 201 1 35 3 295 1 89 2 132 1 251 2 303 1 254 1 136 2 48 1 12 4 103 1 56 1 21 1 62 3 22 1 224 3 225 17 324 3 185 1 275 10 157 1 190 6 70 3 191 1 71 1 78 1 30 1 287 7 32 3 163 1 
164 1 199 1 201 1 35 3 295 2 89 3 132 1 251 2 303 1 254 1 136 2 48 1 12 4 103 1 56 1 62 3 21 1 22 1 224 3 225 19 324 3 185 1 275 9 157 1 190 6 70 3 191 1 71 1 78 1 30 1 287 10 32 3 163 1 
164 1 199 1 201 1 35 3 295 1 89 2 132 1 251 2 303 1 254 1 136 2 12 5 48 1 103 1 56 1 21 1 62 3 22 1 224 3 225 17 324 3 185 1 275 10 157 1 190 6 70 3 191 1 71 1 78 2 30 1 287 7 32 3 163 1 
164 1 199 1 201 1 35 2 295 1 89 4 132 1 251 2 303 1 254 1 136 2 12 9 48 1 103 2 56 2 21 1 62 2 22 1 224 5 225 24 324 2 185 1 275 14 278 1 157 2 190 4 70 5 191 1 78 4 30 1 287 10 32 2 163 1 
164 1 199 1 35 1 295 2 89 2 132 1 251 2 303 1 254 1 136 2 12 2 48 1 62 1 224 1 225 12 324 1 275 6 190 2 70 2 191 1 78 1 30 1 287 6 32 1 163 1 
164 1 199 1 201 1 35 4 295 1 89 2 132 1 251 2 303 1 254 1 136 2 48 1 12 5 103 1 56 1 62 4 21 2 22 1 224 3 225 18 324 4 185 1 275 10 157 1 190 8 70 3 191 1 71 1 78 2 30 1 287 8 32 4 163 1 
164 1 199 1 35 4 3 1 295 2 89 2 132 1 251 3 303 1 254 1 136 3 48 1 12 6 62 4 21 2 224 3 225 16 324 4 275 9 190 8 70 3 191 1 78 3 30 1 287 7 32 4 163 1 
103 3 56 1 89 1 22 1 224 3 225 7 185 2 275 3 157 3 70 1 78 3 12 6 287 4 
164 1 199 1 201 1 35 4 3 1 295 1 89 2 132 1 251 2 303 1 254 1 136 2 48 1 12 4 103 1 56 1 62 4 21 2 22 1 224 3 225 18 324 4 185 1 275 10 157 1 190 8 70 3 191 1 78 1 30 1 287 8 32 4 163 1 
201 1 35 2 103 1 56 1 89 1 62 2 21 1 224 2 22 1 225 8 324 2 185 1 275 4 190 4 157 1 70 1 78 1 12 3 287 4 32 2 
201 1 103 1 56 1 89 1 22 1 224 2 225 6 185 1 275 3 157 1 70 1 306 1 12 2 287 3 
35 1 89 1 295 1 62 1 224 1 324 1 225 4 275 2 190 2 251 1 70 1 71 1 78 1 136 1 12 2 287 2 32 1 
225 2 275 1 303 1 254 1 132 1 287 1 
201 1 35 1 89 5 295 2 132 2 251 2 302 1 254 2 305 1 136 2 12 8 103 2 56 2 21 1 62 1 224 4 22 1 225 25 324 1 185 1 275 13 278 1 157 2 190 2 70 5 78 4 233 1 287 12 32 1 
225 1 132 1 287 1 
225 1 275 1 254 1 
35 1 295 1 89 1 62 1 224 2 209 1 324 1 225 6 275 3 190 2 251 1 70 1 71 1 78 1 136 1 12 3 32 1 287 3 
164 1 199 1 35 1 295 2 89 2 132 1 251 2 303 1 254 1 136 2 12 2 48 1 62 1 224 1 225 12 324 1 275 6 190 2 70 2 191 1 78 1 30 1 287 6 32 1 163 1 
103 1 56 1 89 1 224 1 225 6 275 3 157 1 70 1 78 1 12 2 287 3 
103 1 35 1 21 1 62 1 224 1 22 1 225 3 324 1 185 1 275 1 156 1 157 1 190 2 78 1 12 2 287 2 32 1 
262 1 213 1 10 1 74 1 282 1 44 1 121 1 
262 1 82 1 86 1 208 1 154 1 213 1 25 1 10 1 74 1 282 1 44 1 121 1 
183 1 236 1 276 4 196 1 182 1 
276 1 243 1 
236 1 276 1 
183 1 276 2 20 1 
183 1 236 1 276 2 
183 1 236 1 276 2 
236 1 276 1 306 1 
236 1 262 1 200 1 276 1 213 1 315 1 44 1 140 1 
262 1 200 1 276 1 213 1 315 1 205 1 44 1 140 1 
262 1 200 1 276 1 213 1 315 1 205 1 44 1 140 1 
276 1 205 1 207 1 269 1 
276 1 205 1 207 1 269 1 
91 1 276 1 
236 1 276 1 
262 1 0 1 200 1 35 1 315 1 223 1 62 1 183 1 324 1 276 1 190 2 213 1 175 1 117 1 44 1 32 1 140 1 
152 1 236 1 85 1 99 1 54 1 276 1 294 1 207 1 269 1 244 1 
91 1 276 1 
236 1 262 1 200 1 276 1 213 1 315 1 44 1 140 1 
276 1 205 1 
33 1 262 1 133 1 134 1 213 1 189 1 44 1 46 1 170 1 
77 1 46 1 31 1 
33 1 133 1 312 1 282 1 46 1 
33 1 81 1 200 1 83 1 291 1 36 1 131 1 207 1 247 1 211 1 133 1 213 1 44 1 46 1 177 1 140 1 262 1 54 1 15 1 221 1 312 1 149 2 269 1 111 1 158 1 77 1 31 1 
108 1 238 1 202 1 222 1 240 1 161 1 299 1 300 1 
234 1 219 2 264 1 238 2 202 4 240 2 299 4 300 1 301 1 153 1 108 1 280 1 304 1 161 3 
219 1 238 1 222 1 202 2 313 1 267 1 240 1 300 1 299 2 322 1 108 1 161 1 
234 1 108 1 238 1 202 3 222 1 280 2 240 1 28 1 161 1 299 3 300 1 301 2 
24 1 230 2 105 1 161 2 
263 1 108 1 202 1 222 1 299 1 300 1 
219 1 151 1 108 1 238 1 202 2 222 1 240 1 161 1 299 2 300 1 
292 1 
108 1 238 1 202 1 222 1 240 1 161 1 299 1 300 1 
238 1 240 1 306 1 161 1 
108 1 238 1 202 1 240 1 161 1 299 1 300 1 
104 1 252 1 299 1 
234 1 108 1 238 1 202 3 222 1 92 1 280 1 240 1 161 1 299 3 300 1 301 2 
219 1 52 1 108 1 238 1 202 2 240 1 161 1 299 2 300 1 
261 1 187 1 108 1 202 1 222 1 57 1 304 1 161 1 299 1 300 1 124 1 
108 1 238 1 202 1 222 1 161 1 299 1 300 1 
108 1 238 2 202 1 222 1 240 1 299 1 300 1 
238 1 222 1 202 2 146 1 300 2 299 2 68 1 108 2 26 1 161 1 
219 2 238 1 222 1 202 3 37 1 240 1 300 1 299 3 151 1 153 1 108 1 304 1 161 2 
219 1 261 1 238 1 222 1 202 2 240 1 300 1 299 2 150 1 272 1 108 1 227 1 187 1 161 1 124 2 
141 1 219 2 52 1 238 1 222 1 202 4 240 1 300 2 299 4 153 1 108 2 304 1 161 2 
219 1 222 1 202 3 238 1 240 1 300 1 299 3 301 1 151 1 108 1 161 1 
153 1 264 1 304 1 161 1 
238 1 161 1 

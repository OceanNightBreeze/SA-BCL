#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (30,197) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (30,197) 319 269 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (30,197) 319 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 130 57 40 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 130 57 40 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 130 57 40 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 130 57 40 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 130 57 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 17 317 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 131 11 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 16 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 39 (170,223) (170,223) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 4 152 1 2 1 41 1 154 1 237 1 43 1 85 4 49 2 87 1 170 1 19 2 214 1 23 1 21 1 24 7 217 9 25 2 223 1 105 1 265 9 268 1 144 1 32 3 
39 4 152 1 2 1 41 1 154 1 237 1 43 1 85 4 49 2 87 1 170 1 19 2 214 1 23 1 21 1 24 7 217 9 25 2 223 1 105 1 265 9 268 1 144 1 32 3 
39 4 152 1 2 2 154 2 3 1 237 1 5 1 43 1 85 4 243 1 49 2 87 1 170 1 19 2 214 1 21 2 23 1 217 9 24 6 171 1 309 1 25 2 223 1 105 1 104 1 265 9 268 2 32 3 
39 4 152 1 2 2 154 2 3 1 237 1 5 1 43 1 85 4 243 1 49 2 87 1 170 1 19 2 214 1 21 2 23 1 217 9 24 6 171 1 309 1 25 2 223 1 105 1 104 1 265 9 268 2 32 3 
39 5 152 1 2 2 154 2 3 1 237 1 5 1 43 1 85 5 243 1 49 2 87 1 170 1 19 2 214 1 21 2 23 1 217 10 24 7 171 1 309 1 25 2 223 1 105 1 104 1 265 10 268 2 32 4 
39 3 152 1 2 2 154 2 3 1 237 1 5 1 85 3 243 1 49 2 87 1 170 1 19 2 214 1 21 2 23 1 217 7 24 4 171 1 309 1 25 1 223 1 105 1 104 1 265 7 268 2 32 2 
39 2 2 1 25 2 154 1 223 1 43 1 105 1 265 4 85 2 32 1 49 1 87 1 170 1 214 1 19 1 21 1 217 4 24 3 
2 1 76 1 5 1 223 1 104 1 265 2 202 1 183 1 268 1 49 1 170 1 214 1 19 1 21 1 217 2 
39 1 152 1 223 1 265 3 268 1 85 1 32 1 49 2 170 1 214 1 19 2 217 3 24 1 
314 1 261 1 200 1 
298 1 
274 2 112 1 208 2 90 2 263 2 181 2 117 1 322 2 
286 1 4 1 290 1 79 1 83 1 294 1 244 1 167 1 208 2 213 2 90 3 248 1 250 1 20 1 95 1 307 1 100 1 221 1 56 1 315 2 178 2 263 3 106 2 181 3 264 1 320 2 322 2 31 1 143 1 271 1 274 3 112 1 111 2 276 1 277 1 278 2 67 1 117 1 281 2 233 1 282 1 
4 1 263 1 181 1 322 1 86 1 274 1 112 1 208 1 90 1 305 1 
72 1 71 1 314 1 4 1 200 1 222 1 56 1 181 1 274 1 167 1 90 1 251 1 51 1 216 1 
71 2 4 2 200 1 86 1 167 1 208 2 251 1 90 2 51 2 216 1 305 1 314 1 56 1 263 2 181 2 322 2 274 2 33 1 112 1 
151 1 71 1 51 1 280 1 172 1 
165 1 151 1 71 2 314 1 200 1 279 1 51 2 172 1 
71 1 51 1 172 1 
151 1 71 1 4 1 263 1 181 1 322 1 86 1 33 1 274 1 112 1 208 1 90 1 51 1 305 1 
200 1 
151 1 71 2 314 1 211 1 200 1 279 1 51 2 172 1 
151 2 71 5 311 1 99 1 314 1 199 1 102 1 200 1 6 2 80 1 267 1 162 1 245 1 227 2 210 1 115 2 279 1 51 5 172 2 
73 1 196 2 220 1 4 1 222 1 263 4 181 5 180 1 159 1 322 1 184 1 168 1 274 5 208 4 90 5 117 1 
86 1 274 1 208 1 4 1 90 1 263 1 181 1 
261 1 117 1 
73 1 4 1 263 1 181 2 180 1 322 1 185 1 274 2 208 1 90 2 117 1 
48 1 299 1 142 1 
95 1 307 1 4 1 56 1 315 1 178 1 263 1 181 1 106 2 294 1 271 1 274 1 167 1 111 1 213 2 326 1 90 1 248 1 250 1 67 1 117 1 281 2 
95 1 307 1 196 1 4 1 220 1 56 1 315 1 178 1 263 2 106 2 181 2 294 1 48 1 271 1 167 1 274 2 111 1 208 1 213 2 250 1 248 1 90 2 67 1 281 2 
73 1 196 1 274 2 208 2 4 1 90 2 263 2 181 2 117 1 
86 1 274 1 208 1 4 1 90 1 263 1 181 1 
4 1 263 1 180 1 181 1 322 1 185 1 274 1 208 1 90 1 
286 1 71 1 196 1 4 2 123 1 79 1 83 1 294 1 244 1 167 2 208 3 213 2 250 1 248 1 251 1 90 4 20 1 51 1 216 1 95 1 307 1 100 1 220 1 56 2 315 1 178 1 263 4 106 2 180 1 181 4 320 2 322 2 31 1 143 1 271 1 274 4 112 1 111 1 276 1 278 1 67 1 117 1 189 1 281 2 233 1 
73 1 196 1 4 1 222 1 263 1 181 2 159 1 274 2 208 1 90 2 117 1 
71 1 196 2 4 1 220 1 200 1 123 1 56 1 263 3 180 1 181 3 81 1 322 1 274 3 167 1 208 3 90 3 251 1 51 1 216 1 
196 1 263 2 180 1 181 2 322 1 48 1 274 2 299 1 208 2 90 2 
95 1 307 1 4 1 56 1 315 1 178 1 263 1 181 1 106 2 294 1 271 1 274 1 167 1 111 1 213 2 90 1 248 1 250 1 67 1 117 1 281 2 
95 1 235 1 4 1 56 1 315 1 178 1 263 1 181 1 106 2 294 1 271 1 274 1 167 1 111 1 213 2 90 1 250 1 67 1 117 1 232 1 281 2 
287 1 74 1 79 1 201 1 82 1 83 1 48 2 244 1 299 2 20 1 22 1 26 1 221 2 107 1 320 2 182 1 142 2 31 1 143 1 226 1 65 1 276 2 278 4 119 1 
285 1 4 1 263 1 181 1 274 1 167 1 208 1 90 1 
234 1 197 1 
234 1 197 1 
30 1 38 1 
30 1 38 1 
30 1 38 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 197 1 
234 1 71 1 197 1 156 1 51 1 319 1 269 1 
234 1 197 1 156 1 319 1 
2 1 154 1 21 1 
2 1 21 1 202 1 
218 1 2 3 154 2 275 1 202 1 109 1 
218 1 2 2 154 1 198 1 275 1 202 1 
218 1 2 2 154 1 275 2 202 1 
151 4 71 5 199 2 6 1 200 2 124 1 162 1 164 1 298 3 210 3 22 1 256 1 51 5 52 1 172 1 97 1 257 1 173 1 26 1 314 1 107 1 108 2 141 1 186 2 65 1 227 1 187 1 37 2 115 1 279 1 192 1 68 1 
151 7 71 9 155 5 199 6 200 5 6 2 124 2 126 1 162 1 205 1 298 9 169 1 210 8 92 1 22 3 215 1 51 9 172 6 97 3 257 1 173 4 26 3 314 1 102 1 107 3 61 1 108 6 65 3 227 2 37 6 115 2 279 1 192 3 280 5 68 2 
151 2 71 3 199 2 200 3 6 1 124 1 164 1 298 4 210 3 22 1 51 3 97 2 173 1 26 1 314 1 102 1 107 1 108 2 186 1 65 1 187 1 227 1 37 2 115 1 192 1 68 1 
151 3 71 4 199 4 200 4 6 1 124 1 126 1 164 1 205 1 298 7 210 5 92 1 22 2 51 4 97 3 173 2 26 2 314 1 102 1 107 2 108 4 186 2 65 2 227 1 187 1 37 4 115 1 192 2 68 1 
213 1 106 1 281 1 
213 1 133 1 
261 1 213 1 230 1 
213 1 147 1 
120 1 
213 1 106 1 
230 2 213 3 177 1 106 1 281 1 62 1 
287 2 308 1 74 3 26 1 42 2 221 5 107 1 46 1 84 1 207 1 35 1 212 1 131 1 276 4 252 1 278 9 54 1 
287 2 308 1 74 3 26 1 42 2 221 5 107 1 46 1 84 1 207 1 35 1 212 1 131 1 276 4 252 1 278 9 54 1 
287 2 308 1 74 3 26 1 42 2 221 5 107 1 46 1 84 1 207 1 35 1 212 1 131 1 276 4 252 1 278 9 150 1 54 1 
287 1 74 2 42 1 79 1 46 1 161 1 83 1 293 1 295 1 14 1 207 2 131 1 212 1 253 1 252 1 20 1 54 1 258 1 221 2 179 1 320 2 31 1 276 2 278 4 
308 1 287 3 74 4 26 1 289 1 42 2 221 6 79 2 107 1 46 1 320 4 83 2 84 1 293 1 31 2 207 1 35 1 131 1 212 1 276 5 252 1 20 2 278 11 149 1 
2 2 154 1 12 1 202 1 15 1 296 1 49 1 88 1 170 1 19 1 214 1 250 1 21 1 24 1 217 2 53 1 138 1 315 1 176 1 178 1 223 1 316 1 265 2 268 1 109 1 324 1 34 1 111 1 67 1 
2 2 154 1 238 1 12 1 202 1 15 1 296 1 49 1 170 1 19 1 250 1 21 1 217 3 24 2 53 1 260 1 315 1 176 1 178 1 223 1 316 1 265 3 109 1 268 1 324 1 34 1 111 1 188 1 67 1 
2 2 154 1 12 1 202 1 15 1 296 1 170 1 250 1 21 1 217 2 24 2 260 1 315 1 178 1 223 1 316 1 265 2 268 1 109 1 324 1 34 1 111 1 188 1 67 1 
96 1 313 1 238 1 315 1 178 1 106 1 44 1 265 1 12 2 241 1 268 2 294 1 270 1 15 2 49 1 297 1 324 2 111 1 213 1 250 1 19 1 67 1 217 1 
2 2 154 1 12 1 202 1 15 1 296 1 49 1 88 1 19 1 214 1 250 1 21 1 217 1 53 1 315 1 176 1 178 1 316 1 265 1 268 1 109 1 324 1 34 1 111 1 188 1 67 1 
122 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 167 1 273 1 274 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 56 1 6 1 222 1 181 1 162 1 167 1 273 1 274 1 227 1 301 1 251 1 90 1 115 1 51 2 216 1 
72 1 71 3 77 1 4 1 199 1 6 1 292 1 10 1 294 2 127 1 162 1 167 1 210 1 213 1 301 1 251 1 90 1 250 1 51 3 216 1 172 2 96 1 313 1 56 1 222 1 315 2 178 2 181 1 106 1 274 1 273 1 111 2 227 1 67 1 115 1 279 1 68 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 3 72 1 77 1 4 1 56 1 222 1 181 1 167 1 273 1 274 1 211 1 301 1 251 1 90 1 51 3 279 1 216 1 172 1 
71 2 72 1 77 1 4 1 56 1 6 1 222 1 181 1 162 1 167 1 273 1 274 1 227 1 301 1 251 1 90 1 115 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
71 2 72 1 77 1 4 1 222 1 56 1 181 1 273 1 274 1 167 1 301 1 90 1 251 1 51 2 216 1 
287 2 308 1 74 2 26 1 42 1 261 1 221 4 79 1 107 1 82 1 46 1 320 2 83 1 142 1 84 1 143 1 31 1 48 1 244 1 299 1 35 1 131 1 276 4 20 1 278 8 117 3 
287 1 73 1 74 2 288 1 4 1 79 2 83 2 161 2 204 1 14 2 48 8 244 1 206 1 299 3 246 1 212 1 20 2 22 2 100 1 26 2 221 6 107 1 320 4 28 1 142 8 31 2 143 2 325 1 65 1 276 5 278 11 117 1 192 2 
1 1 4 1 157 1 8 1 79 1 83 1 244 1 167 1 90 2 248 1 250 1 20 1 95 1 100 1 178 1 263 2 181 2 106 2 264 1 31 1 271 1 274 2 111 1 276 1 278 2 117 1 281 2 196 1 294 1 206 1 299 1 208 1 213 2 307 1 220 1 221 1 315 1 56 1 320 2 143 1 326 1 67 1 
74 8 4 2 79 3 83 3 84 1 244 3 167 2 90 3 248 2 250 2 20 3 22 2 95 2 100 1 26 3 101 1 178 3 263 3 107 3 181 3 106 4 264 1 31 3 271 2 274 3 111 3 35 1 113 2 276 11 188 1 278 22 117 3 281 4 192 2 286 2 287 4 196 1 42 1 46 1 294 1 48 7 129 1 206 1 299 7 208 1 131 1 212 4 213 4 302 1 134 2 307 2 308 1 220 1 221 11 315 3 56 2 224 2 320 6 140 2 142 7 143 3 65 2 67 2 
196 1 290 2 79 2 158 1 239 1 82 1 83 2 294 2 128 1 244 2 208 1 247 1 213 4 90 1 250 3 20 2 94 1 306 1 96 1 135 1 138 1 100 1 313 1 315 6 221 1 178 7 263 1 181 1 225 1 106 3 320 4 264 1 31 2 143 2 274 1 111 7 114 1 146 1 276 1 67 4 278 2 148 1 281 1 
287 1 74 1 79 1 83 1 48 1 244 1 206 1 299 1 208 1 90 1 20 1 22 1 312 1 26 1 221 1 263 1 180 1 181 1 107 1 320 2 322 1 142 1 31 1 143 1 274 1 65 1 276 2 278 3 192 1 
74 1 26 1 221 2 79 1 82 1 320 2 83 1 142 1 143 1 31 1 226 1 48 1 244 1 299 1 212 1 20 1 278 2 22 1 
287 1 74 1 79 1 107 1 82 1 201 1 320 2 83 1 142 1 143 1 31 1 48 1 244 1 299 1 65 1 276 2 20 1 278 2 
287 1 74 2 79 1 82 1 83 1 48 2 244 1 299 2 212 1 20 1 22 1 26 1 221 2 107 1 320 2 142 2 31 1 143 1 65 1 276 2 278 4 192 1 
74 1 26 1 221 2 79 1 320 2 83 1 142 1 143 1 31 1 226 1 48 1 244 1 299 1 212 1 20 1 278 2 22 1 306 1 
287 1 74 1 79 1 107 1 201 1 320 2 83 1 142 1 143 1 31 1 48 1 244 1 299 1 65 1 276 2 20 1 278 2 306 1 
287 1 74 2 79 1 83 1 48 2 244 1 299 2 212 1 20 1 22 1 306 1 26 1 221 2 107 1 320 2 142 2 31 1 143 1 65 1 276 2 278 4 192 1 
287 1 74 2 79 1 83 1 48 2 244 1 299 2 212 1 20 1 22 1 26 1 221 2 107 1 320 2 142 2 31 1 143 1 65 1 276 2 278 4 192 1 
286 1 4 1 79 1 83 1 294 1 167 1 244 1 213 2 250 1 248 1 90 1 20 1 95 1 307 1 100 1 221 1 315 1 56 1 178 1 263 1 106 2 181 1 264 1 320 2 143 1 31 1 271 1 274 1 111 1 276 1 278 2 67 1 117 1 281 2 
235 1 4 1 79 1 83 1 294 1 167 1 244 1 213 2 250 1 90 1 20 1 95 1 100 1 221 1 315 1 56 1 178 1 263 1 106 2 181 1 264 1 320 2 143 1 31 1 271 1 274 1 111 1 276 1 278 2 67 1 117 1 232 1 281 2 191 1 
287 1 74 2 79 1 83 1 48 2 244 1 206 1 299 2 212 1 20 1 22 1 26 1 221 2 107 1 320 2 142 2 31 1 143 1 65 1 276 2 278 4 192 1 
286 1 287 1 74 2 4 1 79 1 83 1 48 2 167 1 244 1 299 2 212 1 213 2 250 1 248 1 90 1 20 1 22 1 95 1 307 1 138 1 26 1 221 2 315 1 56 1 178 1 263 1 107 1 106 2 181 1 320 2 140 1 142 2 31 1 143 1 271 1 274 1 111 1 65 1 276 2 278 4 67 1 192 1 281 2 
74 1 79 1 83 1 48 1 244 1 206 1 299 1 208 1 212 1 90 1 20 1 22 1 26 1 221 2 263 1 107 1 180 1 181 1 320 2 322 1 142 1 31 1 143 1 274 1 65 1 276 1 278 3 190 1 192 1 
40 1 287 1 75 1 74 3 79 3 291 1 83 3 161 2 293 2 14 2 17 1 130 1 212 2 253 2 20 3 22 2 259 1 26 2 55 1 57 1 221 10 107 2 317 1 320 6 31 3 272 1 65 2 229 2 276 10 278 20 192 2 149 1 
40 1 287 1 75 1 74 3 79 3 291 1 83 3 161 2 293 2 14 2 17 1 130 1 212 2 253 2 20 3 22 2 259 1 26 2 55 1 57 1 221 10 107 2 317 1 320 6 31 3 272 1 65 2 229 2 276 10 278 20 192 2 149 1 
40 1 287 1 75 1 74 3 79 3 291 1 83 3 161 2 293 2 14 2 17 1 130 1 212 2 253 2 20 3 22 2 259 1 26 2 55 1 57 1 221 10 107 2 317 1 320 6 31 3 272 1 65 2 229 2 276 10 278 20 192 2 149 1 
40 1 287 1 75 1 74 3 79 3 291 1 83 3 161 2 293 2 14 2 17 1 130 1 212 2 253 2 20 3 22 2 259 1 26 2 55 1 57 1 221 10 107 2 317 1 320 6 31 3 272 1 65 2 229 2 276 10 278 20 192 2 149 1 
40 1 287 1 75 1 74 1 79 2 291 1 83 2 161 2 293 1 14 2 17 1 130 1 20 2 253 2 22 2 259 2 26 2 55 1 57 2 221 9 107 1 317 1 320 4 31 2 272 1 65 1 229 2 276 8 278 17 192 2 149 1 
290 2 79 1 158 1 160 1 83 1 244 1 206 1 213 1 250 1 132 1 90 2 50 1 20 1 94 1 139 1 100 1 221 1 315 2 178 2 106 1 181 2 320 2 264 1 31 1 143 1 274 2 111 2 276 1 67 1 278 2 116 1 
2 2 154 1 138 1 121 1 236 1 315 2 178 2 316 1 202 1 266 1 109 1 15 1 296 1 111 2 250 1 21 1 67 1 188 1 53 1 
284 1 2 2 154 1 236 1 315 1 178 1 316 1 202 1 109 1 15 1 296 1 111 1 250 1 21 1 188 1 67 1 53 1 
96 1 313 1 315 1 178 1 106 1 266 1 294 1 270 1 15 1 111 1 213 1 250 1 67 1 254 1 
2 2 154 1 121 1 236 1 315 1 178 1 316 1 202 1 266 1 109 1 15 1 296 1 111 1 250 1 21 1 67 1 188 1 53 1 
125 1 
286 1 4 1 79 1 83 1 294 1 244 1 167 1 208 2 213 2 90 3 248 1 250 1 20 1 95 1 307 1 100 1 315 1 56 1 178 1 263 3 181 3 106 2 320 2 322 2 31 1 143 1 271 1 274 3 111 1 112 1 276 1 278 1 67 1 117 1 233 1 281 2 
97 1 314 1 199 1 6 1 200 2 10 1 162 1 298 2 227 1 210 1 37 1 115 1 68 1 
311 1 245 1 314 1 210 1 199 1 261 1 200 1 
98 1 97 1 71 1 314 1 175 1 199 1 200 2 6 1 60 1 162 1 298 1 227 1 210 1 115 1 51 1 279 1 172 1 
71 2 6 2 162 2 250 1 22 1 172 2 97 3 26 1 103 1 177 1 178 1 106 1 107 1 108 3 111 1 37 3 115 2 279 1 281 1 192 1 199 3 200 3 203 1 294 1 298 6 210 4 213 4 51 2 216 1 136 1 315 1 58 1 224 1 321 1 227 2 65 1 66 1 230 1 147 2 67 2 68 1 70 1 
71 1 75 1 199 5 6 2 200 4 291 1 161 1 162 2 14 1 17 1 298 6 210 7 253 1 22 2 51 1 172 1 97 3 26 2 55 1 314 1 317 1 107 2 108 5 64 1 227 2 65 2 228 1 37 5 115 2 279 1 192 2 
71 1 199 1 6 1 11 1 46 1 162 1 64 1 145 1 227 1 210 1 131 1 115 1 51 1 
311 1 314 1 199 1 6 1 200 1 162 1 245 1 227 1 210 1 115 1 
97 2 26 1 199 2 200 2 107 1 108 2 298 4 65 1 210 2 37 2 22 1 192 1 
71 1 314 1 200 1 51 1 279 1 172 1 
71 3 199 2 6 2 292 1 10 2 127 1 294 2 162 1 209 1 300 1 210 2 213 1 249 1 250 1 255 2 51 3 172 4 96 1 313 1 102 1 315 4 178 4 106 1 111 4 227 2 67 1 115 2 279 2 68 2 
16 1 193 1 
16 1 193 1 
16 1 193 1 
16 1 193 1 
16 1 193 1 
16 1 193 1 
16 1 193 1 
16 1 193 1 
234 1 197 1 
287 1 74 1 75 1 79 1 291 1 161 1 83 1 14 1 17 1 253 1 20 1 22 2 26 2 55 1 221 6 317 1 107 1 320 2 31 1 65 1 276 4 278 10 192 2 149 1 
0 1 287 1 75 1 74 1 79 2 291 1 83 2 161 1 14 1 17 1 253 1 20 2 22 2 26 2 55 1 221 6 317 1 107 1 320 4 31 2 65 1 276 4 278 10 192 2 149 1 
0 1 287 1 75 1 74 3 79 4 291 1 161 1 83 4 293 2 14 1 17 1 212 2 253 1 20 4 22 2 26 2 55 1 221 7 317 1 107 2 320 8 31 4 65 2 276 7 278 14 192 2 149 1 
0 1 287 1 74 1 75 1 79 2 291 1 161 1 83 2 14 1 17 1 253 1 20 2 22 2 26 2 55 1 221 6 317 1 107 1 320 4 31 2 65 1 276 4 278 10 192 2 149 1 
287 1 74 1 75 1 79 1 291 1 161 1 83 1 14 1 17 1 253 1 20 1 22 2 26 2 55 1 221 6 317 1 107 1 320 2 31 1 65 1 276 4 278 10 192 2 149 1 
287 1 74 3 75 1 79 2 291 1 161 1 83 2 293 1 14 1 17 1 212 2 253 1 20 2 22 2 26 2 55 1 221 7 317 1 107 2 320 4 31 2 65 2 276 6 278 13 192 2 149 1 
0 1 287 1 75 1 74 1 79 3 291 1 83 3 161 1 293 1 14 1 17 1 253 1 20 3 22 2 26 2 55 1 221 6 317 1 107 1 320 6 31 3 65 1 276 5 278 11 192 2 149 1 
287 2 75 1 74 3 79 3 291 1 83 3 161 1 293 1 14 1 17 1 212 1 253 1 20 3 22 2 304 1 26 2 55 1 221 6 317 1 107 1 320 6 31 3 65 1 276 5 278 11 192 2 149 1 
308 1 287 2 74 4 221 2 46 2 84 2 131 2 212 2 276 2 278 4 
287 1 75 1 74 1 79 3 291 1 83 3 161 1 293 1 14 1 17 1 253 1 20 3 22 2 304 1 26 2 55 1 221 6 317 1 107 1 320 6 31 3 65 1 276 5 278 11 192 2 149 1 
287 1 308 1 74 2 79 2 320 4 46 1 83 2 293 1 84 1 31 2 212 1 131 1 20 2 
308 1 287 2 74 2 26 1 42 1 261 1 221 4 107 1 46 1 84 1 35 1 131 1 276 4 278 8 
0 1 287 1 74 2 26 1 221 2 79 1 107 1 320 2 83 1 31 1 65 1 212 1 276 2 20 1 22 1 278 4 192 1 
14 1 221 1 276 1 253 1 278 2 161 1 
287 4 74 8 42 1 79 1 11 1 46 2 161 2 83 1 84 1 204 1 293 1 14 2 246 1 131 2 212 4 20 1 22 2 308 1 26 5 221 15 107 5 320 2 31 1 35 2 65 2 325 1 276 14 278 29 192 2 
14 1 276 1 278 1 
221 1 278 1 161 1 
0 1 287 2 74 3 26 1 221 3 79 1 224 1 107 1 320 2 83 1 31 1 65 1 212 1 276 3 20 1 278 6 22 1 192 1 
287 1 74 3 75 1 79 2 291 1 161 1 83 2 293 1 14 1 17 1 212 2 253 1 20 2 22 2 26 2 55 1 221 7 317 1 107 2 320 4 31 2 65 2 276 6 278 13 192 2 149 1 
287 1 74 2 26 1 221 3 107 1 46 1 35 1 131 1 212 1 276 3 278 6 
287 1 308 1 74 2 79 1 46 1 320 2 83 1 84 1 293 1 295 1 31 1 212 1 131 1 276 1 20 1 278 1 
287 2 74 4 26 2 221 5 79 1 107 2 320 2 11 1 46 1 83 1 31 1 35 1 131 1 212 2 276 5 20 1 278 10 149 1 
74 1 26 1 221 2 79 1 320 2 83 1 31 1 212 1 20 1 22 1 278 2 149 1 
287 1 74 2 26 1 221 2 79 1 107 1 320 2 83 1 31 1 65 1 212 1 276 2 20 1 22 1 278 4 192 1 149 1 
287 1 74 1 221 1 79 1 320 2 46 1 83 1 31 1 131 1 276 1 20 1 278 2 149 1 
0 1 287 3 74 6 79 4 46 3 83 4 161 1 293 1 84 1 295 1 14 1 212 3 131 3 253 1 20 4 304 1 308 1 26 1 221 3 179 1 107 1 320 8 31 4 35 1 276 4 278 7 149 1 
274 1 323 1 222 1 90 1 181 1 117 1 159 1 
7 1 222 1 181 1 45 1 159 1 110 1 323 1 274 1 90 1 93 1 117 1 195 1 
95 1 196 1 235 1 4 1 56 1 315 1 178 1 263 2 106 2 181 2 294 1 271 1 167 1 274 2 111 1 208 1 213 2 90 2 250 1 67 1 117 1 281 2 
315 1 177 1 178 1 106 1 225 1 111 1 146 1 213 1 250 1 67 2 255 1 118 1 281 1 
96 1 111 1 313 1 261 1 213 1 315 1 250 1 178 1 67 1 106 1 294 1 
95 1 196 1 4 1 56 1 315 1 178 1 263 2 106 2 181 2 294 1 271 1 167 1 274 2 111 1 208 1 213 2 90 2 248 1 250 1 67 1 117 1 281 2 
73 1 196 1 4 1 315 1 178 1 263 1 106 1 181 2 271 1 274 1 111 1 208 1 213 1 90 2 248 1 250 1 67 1 117 1 255 1 281 1 
196 1 73 1 235 1 4 1 208 1 213 1 250 1 90 2 255 1 315 1 178 1 263 1 181 2 106 1 271 1 274 1 111 1 67 1 117 1 281 1 
71 2 200 1 9 1 294 1 213 4 250 1 255 1 51 2 133 1 216 1 172 1 219 1 95 1 314 1 315 3 178 3 106 1 63 1 111 3 230 1 147 1 67 1 281 1 
95 1 71 2 314 1 200 1 315 3 9 1 178 3 106 1 294 1 111 3 213 4 230 1 250 1 147 1 67 1 51 2 255 1 216 1 133 1 281 1 70 1 172 1 
111 1 315 1 250 1 178 1 67 1 148 1 
138 1 290 1 315 5 177 1 178 6 106 2 225 1 294 2 128 1 111 6 114 1 247 1 146 1 213 3 250 2 67 3 148 1 94 1 118 1 281 1 
74 2 4 1 79 2 83 2 84 1 244 2 167 1 248 1 90 2 250 1 20 2 95 1 26 1 178 1 263 2 107 1 181 2 106 2 31 2 271 1 274 2 111 1 35 1 276 4 278 8 117 3 281 2 286 1 287 2 196 1 42 1 46 1 48 1 206 1 299 1 208 1 213 2 131 1 132 1 134 1 307 1 308 1 138 1 315 1 56 1 221 4 140 1 320 4 142 1 143 2 67 1 
151 1 71 3 199 1 200 1 6 2 294 1 162 2 245 1 300 1 210 1 213 2 51 3 216 1 172 2 311 1 314 1 315 1 103 1 178 1 58 1 321 1 111 1 227 2 230 1 147 1 115 2 279 1 70 1 
138 1 315 2 177 1 178 2 106 1 111 2 66 1 230 1 213 2 250 1 67 2 148 1 281 1 
96 1 137 1 138 1 313 1 315 4 9 1 178 4 106 1 294 1 111 4 213 1 250 1 67 1 
135 1 315 2 178 2 239 1 106 1 225 1 111 2 146 1 213 1 250 1 302 1 67 2 255 1 281 1 
296 1 2 1 111 1 315 1 250 1 178 1 21 1 67 1 202 1 294 1 
111 2 138 1 213 1 315 2 250 1 178 2 50 1 67 1 106 1 188 1 94 1 
96 1 137 1 138 1 313 1 315 4 178 5 106 2 294 1 128 1 111 5 247 1 213 3 250 2 67 2 255 1 94 1 
96 1 153 1 137 1 138 1 313 1 315 4 178 5 106 2 294 1 128 1 111 5 213 3 250 2 67 2 255 1 94 1 
274 1 310 1 139 1 36 1 90 1 181 1 116 1 160 1 69 1 
47 1 310 1 240 1 
310 1 89 1 36 1 117 1 69 1 
151 1 71 2 4 2 123 1 200 1 240 1 47 1 86 1 167 1 208 1 89 1 90 1 251 1 91 1 51 2 216 1 305 1 310 1 314 1 56 1 263 1 181 1 322 1 274 1 33 1 112 1 36 1 69 1 
49 1 237 1 5 1 170 1 19 1 214 1 223 1 24 1 217 3 265 3 
39 1 32 1 194 1 85 1 
223 1 
170 1 261 1 223 1 
49 1 170 1 19 1 223 1 217 1 265 1 
217 1 12 1 268 1 
5 2 262 1 223 1 265 3 29 1 13 1 49 1 170 1 214 1 19 1 217 3 
25 1 49 1 170 1 19 1 223 1 24 1 217 2 265 2 
39 1 2 1 154 1 105 1 265 1 85 1 49 1 214 1 19 1 21 1 217 1 
49 1 19 1 214 1 223 1 217 1 265 1 
39 1 49 1 170 1 19 1 214 1 223 1 217 1 265 1 
49 2 18 1 174 1 19 2 214 1 223 1 217 2 265 2 242 1 
39 1 237 1 223 1 265 3 85 1 32 1 49 1 170 1 214 1 19 1 23 1 217 3 24 2 
2 2 154 1 223 1 265 2 202 1 109 1 49 1 170 1 214 1 19 1 21 1 303 1 217 2 24 1 
39 1 25 1 223 1 43 1 265 4 85 1 32 1 49 2 170 1 214 1 19 2 217 4 24 2 
49 1 170 1 19 1 214 1 223 1 217 1 265 1 
39 1 5 1 223 2 265 4 85 1 29 1 13 1 32 1 49 1 170 2 19 1 24 2 217 4 194 1 
41 1 49 1 170 1 78 1 231 1 19 1 214 1 223 1 24 1 217 2 265 2 
29 2 13 1 49 1 5 2 170 1 19 1 214 1 223 1 318 1 217 3 265 3 
39 2 163 1 166 1 27 2 
283 1 49 1 19 1 214 1 217 1 265 1 
49 1 237 1 170 1 19 1 214 1 223 1 24 1 217 2 265 2 
59 1 
49 1 170 1 19 1 214 1 223 1 217 1 265 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (241,266) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 256 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 256 115 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 346 34 24 66 185 351 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 277 141 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (148,345) 50 346 34 24 8 313 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 346 34 24 66 257 113 41 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 346 34 24 66 257 113 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 346 34 24 66 257 113 41 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 346 34 24 66 257 113 41 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 346 34 24 66 257 113 41 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 277 141 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (241,266) (241,266) 226 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 346 34 24 66 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 346 34 24 8 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 346 34 24 66 253 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (241,266) (241,266) 226 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (241,266) (241,266) 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 2 170 1 65 3 173 1 292 1 45 1 307 1 25 2 143 1 348 1 71 2 267 3 90 1 
136 2 116 2 117 1 54 1 302 1 307 1 190 1 98 1 143 3 77 2 126 1 215 1 267 9 40 5 103 1 104 1 150 1 170 1 65 9 173 1 292 4 45 1 25 2 222 2 348 2 71 2 90 6 51 1 
136 2 116 2 117 1 54 1 302 1 307 1 190 1 98 1 143 3 77 2 126 1 215 1 267 9 40 5 103 1 104 1 150 1 170 1 65 9 173 1 292 4 45 1 25 2 222 2 348 2 71 2 90 6 51 1 
136 2 116 2 117 1 54 1 302 1 307 1 190 1 98 1 143 4 77 2 126 1 215 1 267 10 40 6 103 1 104 1 150 1 170 1 65 10 173 1 292 5 45 1 25 2 222 2 348 2 71 2 90 7 51 1 
136 1 116 2 117 1 54 1 302 1 307 1 190 1 143 2 77 2 126 1 215 1 267 7 40 4 103 1 104 1 150 1 170 1 65 7 173 1 292 3 45 1 25 2 222 2 348 2 71 2 90 4 51 1 
136 2 40 3 116 1 150 1 170 1 65 4 292 2 45 1 307 1 25 1 222 1 143 1 98 1 77 1 215 1 71 1 267 4 90 3 
40 1 117 1 54 1 170 1 65 2 108 1 45 1 307 1 25 1 359 1 155 1 222 1 77 1 348 1 71 1 267 2 
136 2 116 1 161 1 302 1 213 1 307 1 143 3 98 1 77 1 215 1 267 9 40 5 150 1 170 1 292 4 173 1 65 9 45 1 25 2 222 1 348 1 71 2 90 7 51 1 
136 2 116 1 161 1 302 1 213 1 307 1 143 3 98 1 77 1 215 1 267 9 40 5 150 1 170 1 292 4 173 1 65 9 45 1 25 2 222 1 348 1 71 2 90 7 51 1 
158 1 241 1 140 1 120 1 266 1 
79 1 
79 1 230 1 158 2 293 1 140 2 120 1 49 1 11 1 
268 1 318 2 167 1 79 1 230 2 158 5 149 1 200 1 293 1 30 1 120 2 140 5 340 2 153 1 276 2 37 1 242 1 254 1 49 1 
79 1 293 1 22 1 
27 1 
297 2 355 2 177 1 223 2 272 2 78 1 128 2 101 2 
73 1 0 1 118 1 232 2 184 1 325 2 1 1 210 1 280 1 327 1 328 1 57 1 7 1 78 1 128 2 353 1 101 2 129 1 80 1 196 2 355 3 62 1 334 1 272 3 106 1 42 2 44 1 297 2 347 1 205 1 112 1 177 1 223 2 48 2 316 1 362 1 361 1 
266 1 
79 1 158 1 355 1 201 1 171 1 335 1 272 1 293 1 140 1 220 1 264 1 241 1 223 1 145 1 266 1 70 1 
79 1 158 2 355 1 201 1 335 1 272 1 293 1 140 2 220 1 297 1 241 1 223 1 145 1 128 1 266 1 70 1 101 1 
256 1 158 1 140 1 120 1 
79 1 230 1 329 1 158 2 293 1 140 2 120 1 49 1 
230 1 158 1 140 1 
319 2 15 1 355 4 245 1 259 1 272 4 220 1 350 1 297 1 47 1 223 4 177 1 128 4 101 4 
220 1 12 1 355 2 223 2 272 2 128 2 4 1 101 2 
319 1 297 1 355 3 177 1 223 3 272 3 128 3 101 3 
220 1 12 1 355 1 223 1 272 1 128 1 101 1 
220 1 297 1 15 1 333 1 355 1 223 1 272 1 128 1 101 1 
319 1 0 1 232 1 184 1 325 1 1 1 140 1 327 1 328 1 57 1 7 1 145 1 101 3 15 1 196 2 245 1 201 1 62 1 335 1 106 1 297 2 205 1 347 1 70 1 73 1 158 1 118 1 305 1 210 1 350 1 78 1 128 3 353 1 129 1 80 1 81 1 355 4 272 4 42 1 220 2 48 1 223 3 177 1 316 1 361 1 
319 1 264 1 355 2 177 1 223 2 272 2 128 1 246 1 101 1 
319 2 79 1 15 1 158 1 81 1 355 3 245 1 201 1 335 1 272 3 140 1 220 1 297 1 46 1 223 3 145 1 128 3 70 1 101 3 
319 1 15 1 148 1 355 2 290 1 272 2 297 1 223 2 128 2 101 2 
129 1 80 1 355 1 232 1 325 1 272 1 210 1 327 1 328 1 205 1 347 1 7 1 177 1 48 1 361 1 
129 1 80 1 355 1 232 1 233 1 325 1 272 1 210 1 328 1 205 1 347 1 177 1 48 1 310 1 361 1 
227 1 118 1 184 2 1 1 280 2 188 1 76 1 214 1 57 1 308 1 353 1 168 1 148 2 130 1 196 2 291 1 62 1 290 2 64 1 106 1 42 4 345 1 346 1 50 2 
220 1 355 1 335 1 223 1 272 1 128 1 4 1 101 1 
15 1 333 1 355 2 272 2 297 1 223 2 177 2 128 1 101 1 
148 1 290 1 50 1 
129 1 80 1 355 1 232 1 325 1 272 1 273 1 210 1 327 1 328 1 205 1 347 1 7 1 177 1 48 1 361 1 
177 1 22 1 
129 1 319 1 80 1 148 1 355 2 232 1 245 1 325 1 272 2 210 1 328 1 327 1 347 1 205 1 7 1 223 1 48 1 128 1 101 1 361 1 
61 1 192 1 178 1 
52 1 5 1 61 2 139 1 192 2 343 1 
61 1 192 1 
61 1 192 1 
5 1 343 1 
5 1 343 1 
5 1 343 1 
111 1 61 1 192 1 
111 1 61 1 192 1 
111 1 61 1 192 1 
61 1 299 1 192 1 
61 1 299 1 192 1 
61 1 299 1 192 1 
158 1 209 1 235 1 75 1 140 1 261 1 189 1 238 1 6 1 192 1 128 2 101 2 243 1 355 2 61 1 18 1 272 2 219 1 296 1 134 1 152 1 177 1 223 2 178 1 
79 1 158 2 209 2 16 2 61 2 235 2 18 3 139 1 84 1 75 2 140 2 341 1 239 1 6 2 265 1 192 2 285 1 146 1 243 1 
116 1 240 1 222 2 206 2 108 1 
116 1 222 1 77 1 
222 1 77 1 108 1 
116 2 240 1 222 3 206 1 2 1 108 1 
116 1 132 1 240 1 222 2 206 1 108 1 
228 1 318 1 93 2 230 1 231 1 158 5 140 5 120 4 261 1 34 1 76 1 263 1 308 1 241 1 58 1 242 2 266 1 268 1 167 3 79 2 354 1 198 2 291 1 63 1 293 1 339 2 340 1 346 1 276 1 27 3 49 1 
115 1 256 1 158 2 140 2 120 2 39 1 109 1 
318 1 228 1 93 2 231 1 158 3 120 2 140 3 261 1 34 1 263 1 76 1 241 1 308 1 37 1 242 2 266 1 79 2 167 3 354 1 198 2 291 1 63 1 293 1 339 1 340 1 346 1 276 1 27 3 
318 1 228 1 301 1 93 4 231 3 158 4 140 4 120 3 261 2 282 1 34 2 263 1 76 2 308 2 37 1 242 4 79 4 167 5 354 1 198 4 291 2 63 1 293 1 338 1 339 2 340 1 346 2 276 1 27 7 
129 1 347 1 210 1 
210 1 95 1 
129 1 210 1 
129 1 347 1 176 1 210 3 284 1 114 2 
283 1 
210 1 114 1 22 1 
169 1 210 1 
321 1 130 3 323 1 184 3 291 1 303 1 64 2 260 2 237 1 280 4 294 1 42 7 110 1 76 1 68 1 36 1 216 1 217 1 
323 1 184 1 185 1 202 1 260 1 280 4 42 5 110 2 351 1 66 1 346 1 34 1 164 1 24 1 76 1 
279 1 323 1 184 4 303 1 1 2 260 2 280 5 237 1 76 1 36 1 166 1 216 1 353 2 130 4 196 4 291 1 62 2 64 3 106 2 294 1 42 9 110 1 68 1 72 1 
321 1 130 3 323 1 184 3 291 1 303 1 64 2 260 2 237 1 280 4 294 1 42 7 110 1 76 1 68 1 36 1 216 1 
321 1 130 3 323 1 184 3 291 1 303 1 64 2 260 2 237 1 280 4 294 1 42 7 110 1 76 1 68 1 36 1 216 1 
129 1 80 1 232 1 325 1 65 1 210 1 274 2 357 1 31 1 275 2 133 1 20 2 358 1 298 1 25 1 205 1 125 1 48 1 331 1 348 2 71 1 361 1 267 1 
80 1 29 1 116 1 258 1 102 1 232 1 325 1 65 1 2 1 274 1 19 1 275 1 108 1 295 1 20 1 307 1 25 1 205 1 222 2 69 1 77 1 48 1 348 1 100 1 71 1 267 1 
29 1 116 1 258 1 232 1 325 1 2 1 35 1 307 1 77 1 267 2 80 1 40 1 102 1 170 1 65 2 274 1 275 1 19 1 20 1 295 1 108 1 45 1 25 1 205 1 222 2 69 1 48 1 348 1 71 1 90 1 
29 1 116 1 258 1 232 1 325 1 2 1 77 1 331 1 100 1 267 3 80 1 40 1 60 1 170 1 65 3 274 1 275 1 19 1 20 1 295 1 108 1 45 1 25 1 205 1 222 2 69 1 48 1 348 1 71 1 90 2 
29 1 116 1 258 1 232 1 325 1 2 1 77 1 100 1 267 2 80 1 40 1 60 1 170 1 65 2 274 1 275 1 20 1 108 1 45 1 205 1 222 2 69 1 48 1 348 1 90 2 
352 1 
268 1 318 1 230 2 288 1 158 2 232 1 325 1 140 2 340 1 141 1 276 1 48 1 242 1 49 1 277 1 361 1 
229 1 230 2 158 3 182 1 140 3 264 1 145 1 309 1 11 1 79 2 355 1 201 1 171 1 335 1 272 1 293 2 86 1 220 1 223 1 49 1 70 1 179 2 278 1 363 1 
79 2 158 2 355 1 83 1 182 1 201 1 335 1 171 1 272 1 293 2 140 2 86 1 220 1 264 1 223 1 145 1 309 1 70 1 179 3 363 1 278 1 
229 1 230 2 158 3 182 1 140 3 122 1 264 1 145 1 309 1 11 1 79 3 355 1 83 1 201 1 171 1 335 1 272 1 293 3 86 1 220 1 223 1 49 1 70 1 179 3 278 1 363 1 
318 1 229 4 230 7 231 2 182 1 140 5 241 1 145 1 242 1 11 1 289 1 201 1 335 1 293 4 340 1 250 1 251 2 70 1 157 1 158 5 160 1 74 1 306 2 163 1 122 4 264 1 309 1 266 1 268 1 79 4 167 1 355 1 83 3 356 2 171 1 272 1 86 1 220 1 175 1 276 1 87 2 223 1 49 3 179 5 363 1 278 1 
318 1 229 2 230 4 231 2 182 1 140 4 145 1 242 1 201 1 335 1 293 3 340 1 251 2 27 2 70 1 158 4 74 1 306 2 122 2 264 1 309 1 268 1 79 3 167 1 131 1 355 1 83 2 356 2 171 1 272 1 86 1 220 1 175 1 276 1 87 2 223 1 49 2 179 4 363 1 278 1 
318 1 229 2 230 4 231 2 158 4 160 1 182 1 306 2 74 1 140 4 163 1 122 2 264 1 242 1 145 1 309 1 268 1 167 1 79 3 355 1 83 2 356 2 201 1 171 1 335 1 272 1 293 3 340 1 86 1 220 1 175 1 276 1 251 2 87 2 223 1 49 2 70 1 179 4 157 1 278 1 363 1 
318 1 229 2 230 4 231 2 158 4 160 1 182 1 306 2 74 1 140 4 163 1 122 2 264 1 242 1 145 1 309 1 268 1 167 1 79 3 355 1 83 2 356 2 201 1 171 1 335 1 272 1 293 3 340 1 86 1 220 1 175 1 276 1 251 2 87 2 223 1 49 2 70 1 179 4 157 1 278 1 363 1 
318 1 229 2 230 4 158 4 182 1 324 1 140 4 163 1 122 2 264 1 38 2 242 1 127 1 145 1 309 1 312 2 268 1 79 3 218 1 355 1 83 2 356 2 201 1 171 1 335 1 272 1 293 3 340 1 86 1 220 1 175 1 276 1 27 2 87 2 223 1 49 2 70 1 179 4 278 1 363 1 
318 1 229 3 230 5 231 2 158 4 160 1 182 1 306 2 74 1 140 4 163 1 122 3 264 1 242 1 145 1 309 1 268 1 167 1 79 3 289 1 355 1 83 3 356 2 201 1 171 1 335 1 272 1 293 3 340 1 86 1 220 1 175 1 276 1 251 2 87 2 223 1 49 2 70 1 157 1 179 5 278 1 363 1 
318 1 229 3 230 5 231 2 158 4 160 1 182 1 306 2 74 1 140 4 163 1 122 3 264 1 242 1 145 1 309 1 268 1 167 1 79 3 289 1 355 1 83 3 356 2 201 1 171 1 335 1 272 1 293 3 340 1 86 1 220 1 175 1 276 1 251 2 87 2 223 1 49 2 70 1 157 1 179 5 278 1 363 1 
318 1 229 2 230 4 158 4 182 1 140 4 122 2 264 1 38 2 242 1 127 1 145 1 309 1 312 2 268 1 79 3 131 1 355 1 83 2 356 2 201 1 171 1 335 1 272 1 293 3 86 1 340 1 220 1 175 1 276 1 27 2 87 2 223 1 49 2 70 1 179 4 278 1 363 1 
319 1 232 7 184 1 325 6 1 2 280 1 96 1 57 2 10 1 193 1 101 1 147 1 196 4 244 1 62 2 106 2 205 3 347 1 154 1 112 2 159 1 118 2 162 1 210 4 212 1 165 1 35 1 214 1 125 1 128 1 353 2 129 3 80 4 82 1 355 1 272 1 133 1 42 2 44 1 48 7 223 1 316 1 361 2 
118 1 184 2 1 1 280 1 34 1 76 1 57 1 308 1 128 1 353 1 101 1 130 1 148 1 15 1 196 2 355 1 290 1 62 1 291 1 64 1 272 1 106 1 21 1 42 3 346 1 297 1 223 1 50 1 300 1 
118 1 184 3 303 1 1 1 260 1 280 3 76 1 214 1 36 1 57 1 216 1 353 1 148 1 130 2 196 2 290 1 62 1 291 1 64 2 106 1 294 1 22 1 42 6 68 1 177 2 50 1 
148 4 196 2 118 1 313 1 62 1 184 1 202 1 1 1 280 3 21 1 106 1 42 4 346 1 34 1 24 1 164 1 76 1 57 1 8 1 353 1 50 4 
130 1 148 1 196 2 118 1 290 1 62 1 1 1 237 1 280 2 106 1 188 1 42 2 346 1 76 1 214 1 57 1 353 1 50 1 
227 1 130 1 148 1 196 2 118 1 290 1 62 1 291 1 184 2 64 1 1 1 106 1 42 2 214 1 57 1 308 1 353 1 50 1 
118 1 184 2 1 1 280 2 237 1 34 1 76 1 214 1 57 1 308 1 353 1 148 2 130 2 196 2 62 1 290 2 291 1 64 1 106 1 42 4 346 1 50 2 
130 1 148 1 196 2 118 1 290 1 62 1 1 1 237 1 280 2 106 1 188 1 42 2 212 1 346 1 76 1 57 1 353 1 50 1 
227 1 130 1 148 1 196 2 118 1 290 1 62 1 291 1 184 2 64 1 1 1 106 1 42 2 212 1 57 1 308 1 353 1 50 1 
118 1 184 2 1 1 280 2 237 1 34 1 212 1 76 1 57 1 308 1 353 1 148 2 130 2 196 2 62 1 290 2 291 1 64 1 106 1 42 4 346 1 50 2 
118 1 184 2 1 1 280 2 237 1 34 1 76 1 57 1 308 1 353 1 148 2 130 2 196 2 62 1 290 2 291 1 64 1 106 1 42 4 346 1 50 2 
0 1 232 1 118 1 184 1 325 1 1 1 210 1 280 1 328 1 327 1 57 1 7 1 353 1 129 1 80 1 196 2 355 1 62 1 272 1 106 1 42 2 44 1 347 1 205 1 177 1 48 1 316 1 361 1 
232 1 118 1 233 1 184 1 325 1 1 1 210 1 280 1 328 1 57 1 310 1 353 1 129 1 80 1 196 2 355 1 62 1 272 1 106 1 42 2 43 1 44 1 347 1 205 1 177 1 48 1 316 1 361 1 
118 1 184 2 1 1 280 2 237 1 34 1 76 1 57 1 308 1 353 1 148 2 130 2 196 2 62 1 290 2 291 1 64 1 106 1 21 1 42 4 346 1 50 2 
0 1 232 1 118 1 184 2 325 1 1 1 210 1 237 1 280 2 34 1 76 1 328 1 327 1 35 1 57 1 308 1 7 1 353 1 129 1 80 1 130 2 148 2 196 2 355 1 291 1 290 2 62 1 64 1 272 1 247 1 106 1 42 4 346 1 347 1 205 1 48 1 50 2 
118 1 184 1 1 1 237 1 280 2 34 1 76 1 57 1 308 1 128 1 353 1 101 1 130 1 15 1 148 1 196 2 355 1 291 1 62 1 290 1 272 1 106 1 21 1 42 3 346 1 297 1 223 1 135 1 50 1 
319 1 232 1 118 1 234 1 184 1 325 1 1 1 210 1 280 1 328 1 327 1 57 1 142 1 7 1 128 1 353 1 101 1 129 1 80 1 196 2 355 2 245 1 290 1 62 1 273 1 272 2 106 1 21 1 42 2 44 1 204 1 347 1 205 1 177 1 48 1 223 1 316 1 361 1 
319 1 137 1 0 2 232 3 184 10 325 3 1 3 280 10 237 4 327 2 328 2 57 3 7 2 100 1 101 1 194 1 148 7 196 6 245 1 291 3 62 3 290 7 64 4 247 2 294 1 21 1 106 3 346 2 68 1 205 2 347 2 255 1 118 3 303 1 260 1 210 2 33 2 34 2 76 3 36 1 308 2 216 1 128 1 353 3 129 2 80 2 130 8 355 3 272 3 42 20 44 1 177 2 48 3 223 1 316 1 225 2 361 1 317 2 50 7 
257 1 197 1 196 4 41 1 199 1 184 5 62 2 202 2 1 2 280 7 106 2 42 12 66 2 121 3 346 1 34 1 24 1 164 2 76 1 166 1 253 1 224 1 353 2 113 1 
257 2 197 1 196 2 41 1 62 1 184 2 202 1 1 1 280 4 106 1 42 6 66 1 346 1 34 1 24 1 164 1 121 1 76 1 166 1 353 1 113 2 
257 1 197 1 196 4 41 1 199 1 184 5 62 2 202 2 1 2 280 7 106 2 42 12 66 2 121 3 346 1 34 1 24 1 164 2 76 1 166 1 253 1 224 1 353 2 113 1 
257 1 197 1 196 4 41 1 199 1 184 5 62 2 202 2 1 2 280 7 106 2 42 12 66 2 121 3 346 1 34 1 24 1 164 2 76 1 166 1 253 1 224 1 353 2 113 1 
257 1 184 11 303 3 1 1 260 3 280 16 164 2 34 1 121 3 76 4 36 3 166 1 216 3 353 1 130 3 196 2 197 1 41 1 291 3 62 1 202 2 64 3 294 3 106 1 42 27 66 2 24 1 346 1 68 3 253 1 224 1 113 1 
111 1 203 1 
52 1 17 1 299 1 
209 1 6 1 61 1 144 1 235 1 139 1 192 1 84 1 75 1 146 1 
134 1 178 1 
209 1 6 1 61 1 235 1 336 1 192 1 75 1 32 1 107 1 
79 1 158 1 209 1 16 1 61 1 235 1 18 2 139 1 84 1 140 1 75 1 341 1 239 1 6 1 265 1 192 1 146 1 243 1 
79 1 158 1 209 1 16 1 61 1 235 1 18 2 139 1 84 1 140 1 75 1 341 1 239 1 6 1 265 1 192 1 146 1 243 1 
79 1 158 1 209 1 16 1 61 1 235 1 18 2 139 1 84 1 140 1 75 1 341 1 239 1 6 1 265 1 192 1 146 1 243 1 
52 1 111 1 203 1 
52 1 111 1 203 1 
17 1 299 1 
52 1 17 1 299 1 
152 1 238 1 
158 1 209 1 235 1 140 1 120 1 75 1 261 1 189 1 238 1 6 1 192 1 128 2 101 2 355 2 16 1 61 1 18 1 272 2 219 1 341 1 296 1 134 1 152 1 177 1 223 2 178 1 28 1 
232 2 118 1 183 1 184 1 325 2 1 1 210 1 280 1 96 1 326 1 57 1 99 1 353 1 10 1 129 1 14 1 80 1 196 2 355 2 62 1 272 2 21 1 106 1 42 2 44 1 205 1 360 1 112 2 48 2 223 2 316 1 
129 1 80 1 195 1 287 1 232 1 325 1 210 1 357 1 20 1 133 1 205 1 48 1 125 1 361 1 
320 1 80 1 29 1 116 1 287 1 208 1 232 1 325 1 2 1 19 1 108 1 20 1 205 1 222 2 69 1 77 1 48 1 100 1 
320 1 80 1 29 1 116 1 287 1 208 1 232 2 325 2 2 1 19 1 108 1 20 1 35 1 205 1 222 2 69 1 77 1 48 2 100 1 
29 1 80 1 116 1 208 1 232 1 325 1 2 1 19 1 108 1 56 1 20 1 205 1 222 2 69 1 77 1 48 1 100 1 
248 1 
268 1 318 1 79 1 167 1 149 1 30 1 293 1 340 1 276 1 242 1 
93 2 79 2 167 2 231 2 198 2 291 1 34 1 346 1 76 1 308 1 27 4 242 2 
79 1 230 1 158 1 293 1 140 1 49 1 
268 1 318 1 230 2 158 1 288 1 232 1 325 1 140 1 340 1 141 1 276 1 48 1 242 1 49 1 207 1 361 1 277 1 
167 1 79 1 149 1 242 1 293 1 30 1 22 1 
73 1 0 1 232 1 118 1 184 1 325 1 1 1 210 1 327 1 328 1 57 1 7 1 78 1 128 2 353 1 101 2 129 1 80 1 196 2 355 3 62 1 272 3 106 1 42 1 297 2 205 1 347 1 177 1 48 1 223 2 316 1 361 1 
268 1 318 1 93 1 167 1 79 1 288 1 293 1 340 1 263 1 276 1 27 1 242 1 
318 1 230 1 231 1 158 1 306 1 74 1 140 1 242 1 268 1 167 1 79 1 293 1 340 1 276 1 251 1 27 1 49 1 
318 2 93 3 92 1 230 2 231 3 158 2 232 1 325 1 304 1 210 4 140 2 34 1 76 1 263 1 308 1 124 1 242 3 145 1 59 1 332 1 268 2 129 1 13 1 79 3 80 2 167 4 169 2 198 3 291 1 337 1 340 2 346 1 276 2 347 1 205 1 176 1 27 6 48 1 49 1 317 1 361 1 114 1 
318 1 93 4 3 1 187 1 164 2 34 2 263 1 76 2 241 1 308 2 123 1 242 5 266 1 268 1 79 1 167 6 288 1 198 4 291 2 202 1 293 1 340 1 66 1 221 1 24 1 346 2 276 1 27 1 253 1 
268 1 318 1 167 2 158 1 160 1 291 1 303 1 140 1 187 2 294 1 340 1 76 1 276 1 241 1 216 1 242 1 266 1 226 1 
209 1 311 1 75 1 146 1 238 1 
209 1 55 1 75 1 
209 1 55 1 75 1 
209 1 55 1 75 1 
349 1 209 1 75 1 
349 1 209 1 75 1 
349 1 209 1 75 1 
209 1 75 1 
61 1 192 1 
130 5 196 2 62 1 184 5 291 2 303 2 1 1 64 3 237 2 280 5 106 1 294 2 42 10 76 2 166 1 216 1 353 1 226 1 
130 1 196 2 62 1 1 1 280 2 237 1 106 1 42 2 346 1 76 1 166 1 353 1 
130 2 196 2 184 2 291 1 62 1 64 1 1 1 280 2 237 1 106 1 42 4 34 1 346 1 76 1 308 1 166 1 353 1 
279 1 130 2 196 6 138 1 199 1 184 2 62 3 303 1 1 3 64 1 237 1 280 1 106 3 294 1 42 3 166 1 353 3 
279 1 138 1 184 8 185 1 303 2 1 4 237 3 280 7 164 1 76 2 36 1 166 1 216 1 353 4 130 6 196 8 291 2 199 1 62 4 202 1 64 3 106 4 294 2 42 15 66 1 315 1 68 1 226 1 
184 4 303 1 1 1 260 1 280 4 164 1 76 1 36 1 166 1 216 1 353 1 130 2 196 2 291 1 62 1 202 1 64 2 106 1 294 1 42 8 66 1 68 1 253 1 
196 4 62 2 184 1 202 1 1 2 280 3 106 2 42 4 66 1 346 1 34 1 24 1 164 1 76 1 315 1 166 1 253 1 353 2 
196 2 62 1 184 1 202 1 1 1 280 3 106 1 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 1 
196 2 62 1 184 1 202 1 1 1 280 3 106 1 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 1 
184 4 303 1 1 1 260 1 280 4 164 1 76 1 36 1 166 1 216 1 353 1 130 2 196 2 291 1 62 1 202 1 64 2 106 1 294 1 42 8 66 1 68 1 253 1 
196 2 62 1 184 1 202 1 1 1 280 3 106 1 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 1 
196 4 62 2 184 1 202 1 1 2 280 3 106 2 42 4 66 1 346 1 34 1 24 1 164 1 76 1 315 1 166 1 253 1 353 2 
196 4 199 1 62 2 184 1 202 1 1 2 280 3 106 2 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 2 
130 6 184 4 291 1 303 3 64 3 237 3 280 3 294 3 42 7 76 1 68 1 36 2 216 1 
196 4 199 1 62 2 184 1 202 1 1 2 280 3 106 2 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 2 
279 1 130 3 196 4 291 1 184 4 62 2 303 1 64 2 1 2 260 1 280 4 237 1 106 2 294 1 42 8 76 1 68 1 36 1 216 1 353 2 
130 2 184 3 291 1 303 1 64 2 260 1 280 3 294 1 22 1 42 6 76 1 68 1 36 1 216 1 
130 2 196 2 184 2 291 1 62 1 64 1 1 1 280 2 237 1 106 1 42 4 34 1 346 1 76 1 315 1 308 1 353 1 
66 1 346 1 34 1 24 1 164 1 76 1 184 1 202 1 280 3 42 4 
346 1 34 1 24 1 164 1 76 1 184 1 202 1 8 1 280 3 42 4 
184 1 202 1 42 1 
164 1 280 1 42 1 
130 3 196 2 62 1 184 3 291 1 1 1 64 2 280 3 237 1 106 1 42 6 34 1 346 1 76 1 315 1 308 1 353 1 317 1 
196 2 62 1 184 1 202 1 1 1 280 3 106 1 42 4 66 1 346 1 34 1 24 1 164 1 76 1 166 1 253 1 353 1 
130 2 291 1 184 3 303 1 64 1 280 3 237 1 294 1 42 6 76 1 216 1 
279 1 130 2 196 2 138 1 184 2 62 1 303 1 64 1 1 1 280 1 237 1 294 1 106 1 42 3 68 1 36 1 353 1 
286 1 355 1 271 1 94 1 272 1 314 1 246 1 262 1 264 1 177 1 223 1 9 1 
264 1 355 1 177 1 223 1 272 1 314 1 246 1 
129 1 319 1 80 1 355 2 232 1 325 1 272 2 210 1 328 1 347 1 205 1 177 1 223 1 48 1 128 1 310 1 101 1 361 1 
129 1 80 2 232 1 325 1 210 1 151 1 165 1 347 1 205 1 154 1 26 1 176 1 48 1 
129 1 80 1 232 4 325 4 210 1 133 1 249 1 35 1 205 1 191 1 48 4 125 1 361 1 
194 1 129 1 80 2 232 2 82 1 325 2 210 1 165 1 347 1 205 1 26 1 154 1 48 2 193 1 
80 1 205 1 232 1 222 1 69 1 77 1 48 1 325 1 108 1 361 1 
129 1 80 1 232 2 325 2 210 1 96 1 35 1 205 1 48 2 99 1 100 1 
129 2 80 2 159 1 232 5 325 4 210 3 133 1 96 1 35 1 205 2 191 1 26 1 125 1 48 5 361 1 147 1 
129 2 80 2 159 1 232 5 325 4 210 3 133 1 96 1 35 1 205 2 191 1 26 1 125 1 48 5 361 1 180 1 
129 1 80 1 205 1 232 1 125 1 48 1 325 1 210 1 133 1 361 1 22 1 
129 1 80 2 35 1 205 1 347 1 232 2 244 1 176 1 124 1 48 2 325 2 210 2 114 1 
129 1 319 1 80 1 355 2 232 1 325 1 272 2 210 1 328 1 327 1 347 1 205 1 177 1 223 1 48 1 128 1 101 1 361 1 
319 1 232 1 325 1 210 3 95 1 327 1 328 1 128 1 101 2 129 2 80 1 355 2 335 1 272 2 220 1 205 1 347 2 26 1 177 1 48 1 223 2 156 1 70 1 
319 1 232 2 325 2 210 3 95 1 328 1 310 1 128 1 101 2 129 2 80 1 355 2 335 1 272 2 220 1 249 1 205 1 347 2 26 1 177 1 48 2 223 2 156 1 70 1 
79 1 230 1 158 2 232 1 169 1 325 1 293 1 210 2 140 2 67 1 241 1 26 1 48 1 145 1 266 1 114 1 
92 1 230 1 158 2 232 1 325 1 210 4 140 2 95 1 241 1 145 1 266 1 129 1 80 1 79 1 169 1 293 1 205 1 347 1 26 1 48 1 156 1 114 1 
80 1 205 1 232 1 244 1 48 1 325 1 
129 2 80 3 159 1 244 1 232 6 325 5 162 1 210 3 151 1 96 1 165 1 35 1 347 1 205 2 154 1 176 1 112 1 48 6 147 1 361 2 
319 1 0 1 232 1 184 3 325 1 1 2 280 3 327 1 328 1 57 2 7 1 101 1 14 1 148 1 196 4 290 1 62 2 291 1 64 2 247 1 21 1 106 2 294 1 68 1 205 1 347 1 118 2 303 1 210 1 260 1 33 1 76 1 35 1 36 1 216 1 128 1 353 2 129 1 80 1 130 2 355 2 272 2 42 6 48 1 223 1 177 2 50 1 
318 2 92 1 230 2 158 3 232 1 303 1 325 1 304 1 30 1 210 2 140 3 120 1 187 2 76 1 241 1 216 1 242 3 145 1 266 1 332 1 268 2 13 1 167 4 79 2 149 1 169 1 291 2 293 2 294 1 340 2 276 2 48 1 226 1 207 1 49 1 361 1 114 1 
355 1 183 1 272 1 326 1 360 1 252 1 88 1 223 1 91 1 
344 1 88 1 172 1 
252 1 177 1 88 1 89 1 91 1 
79 1 181 1 158 2 81 1 201 1 335 1 172 1 293 1 120 1 140 2 220 1 344 1 241 1 252 1 88 1 145 1 266 1 70 1 89 1 91 1 
40 1 45 1 25 1 307 1 170 1 65 1 71 1 267 1 
269 1 40 3 117 1 170 2 65 4 292 1 281 1 342 1 45 2 25 1 143 1 71 1 90 2 267 4 
40 1 161 1 170 1 65 2 23 1 174 1 45 1 307 1 25 1 71 1 267 2 90 1 
40 1 269 2 117 2 270 1 170 1 65 3 281 1 45 1 307 1 25 1 71 1 267 3 
40 2 119 1 211 1 186 2 
25 1 307 1 65 1 85 1 71 1 267 1 
40 1 45 1 25 1 307 1 170 1 302 1 65 2 71 1 90 1 267 2 
330 1 
40 1 45 1 25 1 307 1 170 1 65 1 71 1 267 1 
40 1 45 1 170 1 22 1 
40 1 45 1 25 1 170 1 65 1 71 1 267 1 
65 1 275 1 348 1 
40 1 269 1 117 2 170 1 65 3 281 1 105 1 45 1 307 1 25 1 71 1 267 3 
136 1 40 1 45 1 25 1 170 1 65 2 71 1 90 1 267 2 
40 1 116 1 150 1 65 1 292 1 307 1 25 1 222 1 77 1 71 1 267 1 
40 1 25 1 307 1 170 1 65 1 71 1 267 1 
45 1 25 1 307 1 170 2 65 1 71 1 267 1 
40 1 322 1 170 1 236 1 65 2 97 1 307 1 25 2 71 2 267 2 
40 2 170 1 302 1 65 3 292 1 45 1 307 1 25 1 143 1 71 1 267 3 51 1 90 2 
53 1 40 1 116 1 170 1 65 2 2 1 108 1 45 1 307 1 25 1 222 2 77 1 71 1 267 2 90 1 
136 1 40 2 170 1 65 4 292 1 45 1 307 1 25 2 98 1 143 1 71 2 267 4 90 2 
40 1 117 1 170 1 302 1 65 3 45 1 307 1 25 1 71 1 90 1 267 3 
40 1 143 1 292 1 342 1 
40 1 170 1 

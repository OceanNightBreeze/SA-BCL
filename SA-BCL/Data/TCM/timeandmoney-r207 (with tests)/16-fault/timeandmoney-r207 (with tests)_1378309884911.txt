#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (280,345) (280,345) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (280,345) (280,345) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (280,345) (280,345) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (280,345) (280,345) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (18,202) 26 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (18,202) 26 151 288 (18,202) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 207 289 11 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 207 289 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 123 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (18,202) 26 73 256 278 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (18,202) 26 242 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (18,202) 26 151 339 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (18,202) 26 126 239 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (18,202) 26 151 288 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (18,202) 26 126 239 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (18,202) 26 151 288 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (18,202) 26 126 339 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
325 1 226 2 47 1 152 2 186 1 138 1 231 1 345 1 311 1 249 1 192 1 146 1 42 1 280 1 250 1 
325 1 226 2 47 1 152 2 186 1 138 1 231 1 345 1 311 1 249 1 192 1 42 1 146 1 280 1 250 1 
325 1 226 2 47 1 152 2 186 1 138 1 231 1 345 1 311 1 249 1 192 1 42 1 146 1 280 1 250 1 
325 1 226 2 47 1 152 2 186 1 138 1 231 1 345 1 311 1 249 1 192 1 42 1 146 1 280 1 250 1 
265 2 325 1 226 4 47 1 152 4 189 1 3 1 79 1 230 2 231 1 29 1 20 3 22 3 236 1 249 1 10 1 192 1 146 1 
226 2 325 1 47 1 152 2 186 1 189 1 253 1 138 1 79 1 231 1 20 1 311 1 9 1 249 1 340 1 192 1 
265 1 226 3 47 2 152 3 189 1 138 1 79 1 231 2 287 1 20 2 22 1 236 1 249 1 
265 4 47 2 138 1 3 1 29 1 249 1 10 1 146 1 185 1 14 1 226 9 325 1 152 9 189 1 79 1 230 2 231 2 287 1 20 5 60 1 22 7 236 3 41 1 192 1 
265 4 47 2 138 1 3 1 29 1 249 1 10 1 146 1 185 1 14 1 226 9 325 1 152 9 189 1 79 1 230 2 231 2 287 1 20 5 60 1 22 7 236 3 41 1 192 1 
117 1 129 1 191 1 
315 2 191 1 69 1 
217 1 64 2 1 2 39 2 40 2 223 2 120 2 76 1 
194 2 135 1 314 1 243 1 115 1 64 2 158 1 1 2 89 1 198 1 298 1 120 3 215 1 92 1 7 2 217 1 74 1 95 1 165 1 96 1 221 1 223 2 76 1 341 1 227 1 229 1 80 2 329 1 290 2 37 1 86 2 39 2 40 3 293 1 332 1 240 1 175 1 
64 1 208 1 1 1 39 1 40 1 223 1 120 1 308 1 34 1 76 1 
324 1 117 1 1 1 297 1 5 1 139 1 120 1 308 1 273 1 317 1 233 1 191 1 292 1 40 1 
64 1 324 1 117 1 1 1 297 2 120 1 308 1 273 1 317 1 233 2 191 1 39 1 292 1 223 1 40 1 
233 1 102 1 183 1 297 1 16 1 
233 2 117 1 183 1 191 1 297 2 171 1 16 1 106 1 
233 1 297 1 16 1 
64 1 1 1 297 1 272 1 120 1 308 1 34 1 233 1 183 1 208 1 39 1 223 1 40 1 76 1 
191 1 
233 2 117 1 183 1 191 1 297 2 171 1 16 1 111 1 
176 1 213 2 64 1 27 1 65 2 117 1 67 1 137 1 1 1 297 5 334 1 272 1 70 2 120 1 199 2 301 2 335 1 183 2 184 1 223 1 76 1 33 1 55 1 101 1 306 1 171 1 16 2 308 1 34 1 81 2 233 5 208 1 61 1 191 1 39 1 40 1 294 3 113 4 
314 1 135 1 243 1 115 1 100 1 158 1 1 1 198 1 228 1 18 1 120 2 80 1 7 1 290 1 95 1 221 1 39 1 223 1 40 2 240 1 
217 1 129 1 
64 1 1 2 188 1 120 2 217 2 349 1 39 1 40 2 223 1 
26 1 18 1 
135 1 314 1 243 1 115 1 158 1 198 1 120 1 80 1 7 1 217 1 290 1 95 1 221 1 40 1 240 1 167 1 
100 1 64 1 88 1 1 4 188 1 228 2 120 4 308 1 217 1 141 1 220 1 39 4 223 4 40 4 
1 1 39 1 40 1 223 1 313 1 120 1 308 1 34 1 
217 1 64 1 1 3 39 3 40 3 223 3 228 1 120 3 
1 1 39 1 40 1 223 1 120 1 308 1 34 1 
64 1 1 1 188 1 349 1 39 1 40 1 223 1 120 1 308 1 
194 2 314 1 135 1 243 1 115 1 64 2 158 1 160 1 1 3 297 1 198 1 120 4 215 1 92 1 273 1 317 1 7 1 217 1 74 1 95 1 165 1 96 1 221 1 223 3 76 1 100 1 324 1 304 1 188 1 341 1 227 1 228 1 229 1 80 1 308 1 233 1 290 1 86 1 39 3 292 1 40 4 332 1 240 1 175 1 
217 1 200 1 1 2 39 1 40 2 223 1 139 1 228 1 120 2 
64 1 100 1 324 1 160 1 188 1 1 3 297 1 228 2 120 3 273 1 308 1 317 1 233 1 191 1 237 1 39 3 292 1 223 3 40 3 
64 1 1 2 188 1 39 2 40 2 223 2 228 1 18 1 120 2 6 1 
135 1 314 1 243 1 115 1 158 1 198 1 120 1 80 1 7 1 217 1 290 1 95 1 221 1 40 1 240 1 
135 1 314 1 147 1 54 1 115 1 158 1 198 1 120 1 80 1 7 1 217 1 290 1 95 1 40 1 240 1 
194 2 26 1 151 1 18 1 181 1 92 1 215 1 288 1 301 1 202 1 74 1 86 2 96 1 165 1 332 1 175 2 
313 1 
209 1 291 1 
209 1 291 1 
268 1 238 1 
268 1 238 1 
268 1 238 1 
36 1 209 1 291 1 
209 1 291 1 350 1 
267 1 347 1 268 1 238 1 209 2 291 2 
36 1 209 1 291 1 
36 1 209 1 291 1 
209 1 291 1 279 1 
209 1 291 1 279 1 
209 1 291 1 279 1 
207 1 289 1 233 1 94 1 209 1 297 1 291 1 241 1 11 1 
207 1 289 1 94 1 209 1 291 1 241 1 
325 1 192 1 146 1 
325 1 9 1 192 1 
303 1 9 1 285 1 262 1 146 2 192 3 
257 1 9 1 285 1 262 1 146 1 192 2 
9 1 285 1 146 1 262 2 192 2 
315 3 213 1 266 1 1 1 91 2 272 1 319 1 183 4 222 1 223 1 151 1 15 1 16 1 233 5 191 2 294 3 113 2 64 1 27 1 117 1 65 1 296 2 297 5 69 1 120 1 199 1 301 1 339 1 76 1 126 1 252 2 171 1 34 1 308 1 81 1 343 1 208 1 39 1 40 1 261 1 
315 3 213 1 1 1 91 2 272 1 183 4 319 1 223 1 151 1 326 2 102 2 15 1 16 3 233 5 191 2 294 3 113 2 64 1 27 1 117 1 65 1 296 2 297 5 69 1 120 1 199 1 301 1 339 1 76 1 126 1 171 1 34 1 308 1 81 1 343 1 208 1 210 1 39 1 40 1 132 1 261 1 
315 3 266 1 213 1 64 1 117 1 65 1 1 1 296 2 297 3 69 1 91 2 272 1 120 1 199 1 301 1 183 2 339 1 184 1 222 1 223 1 76 1 126 1 151 1 252 1 15 1 308 1 34 1 81 1 233 3 343 1 208 1 191 2 39 1 40 1 261 1 294 3 113 2 
315 7 213 1 266 1 117 1 65 1 296 4 297 4 69 3 91 4 274 1 199 1 301 2 183 3 339 2 184 1 222 1 206 1 126 2 151 2 252 2 15 1 309 1 81 2 233 4 343 1 191 4 261 2 294 5 113 4 
129 1 271 1 240 1 
168 1 240 1 
305 1 
95 1 198 1 240 1 
218 1 240 1 
198 1 240 1 
136 1 154 1 95 1 198 1 271 2 240 3 
176 2 118 4 334 1 161 5 119 1 298 6 275 1 301 3 201 1 318 1 33 2 57 1 81 3 346 1 155 2 61 2 86 10 175 4 
176 2 118 4 334 1 161 7 119 1 298 6 275 1 301 3 201 1 318 1 33 2 57 1 81 3 346 3 155 2 61 2 86 10 175 4 
176 2 118 4 334 1 161 5 119 1 298 6 275 1 301 3 201 1 318 1 77 1 33 2 57 1 81 3 346 1 155 2 61 2 86 10 175 4 
194 2 176 3 45 1 114 3 178 1 316 1 334 1 118 7 161 14 119 1 298 19 215 1 275 2 301 6 201 1 73 4 318 1 74 1 339 3 165 1 96 1 33 3 98 1 323 1 126 3 151 3 57 2 170 1 81 6 346 7 130 1 155 3 61 2 86 36 175 17 
194 4 176 2 334 1 118 5 163 1 161 7 298 7 119 1 215 2 275 1 301 3 318 1 74 2 165 2 96 2 125 1 33 2 323 1 57 1 81 3 346 2 155 2 61 2 86 12 175 5 
46 1 115 1 116 1 158 1 47 1 138 1 28 1 7 1 338 1 9 1 249 1 146 1 303 1 283 1 127 1 325 1 226 2 152 2 189 1 255 1 79 1 80 1 231 1 20 1 59 1 22 1 290 1 153 1 259 1 192 2 
46 1 115 1 116 1 158 1 47 1 138 1 7 1 336 1 338 1 9 1 146 1 303 1 283 1 325 1 226 3 152 3 189 1 17 1 255 1 79 1 80 1 231 1 20 1 59 1 22 2 290 1 153 1 259 1 84 1 192 2 
115 1 116 1 158 1 138 1 7 1 336 1 338 1 9 1 146 1 303 1 283 1 226 2 325 1 152 2 189 1 17 1 255 1 79 1 80 1 20 1 59 1 22 2 290 1 259 1 192 2 
135 1 115 1 116 2 158 1 47 1 138 2 198 1 7 1 338 2 144 1 283 2 226 1 152 1 254 1 80 1 231 1 35 1 290 1 260 1 24 1 84 1 110 1 240 1 
46 1 115 1 116 1 158 1 47 1 138 1 28 1 7 1 336 1 338 1 9 1 249 1 146 1 303 1 283 1 325 1 226 1 152 1 255 1 80 1 231 1 59 1 290 1 153 1 259 1 192 2 
204 1 
315 2 43 1 135 2 213 1 49 1 179 1 1 1 180 1 5 1 139 1 273 1 7 2 317 1 219 1 52 2 149 1 324 1 15 1 16 6 19 1 233 5 290 2 24 1 191 2 110 1 292 1 294 2 240 1 112 1 113 2 115 1 27 1 117 1 66 2 65 1 158 1 244 2 297 5 197 2 69 2 198 1 120 1 199 1 30 1 164 1 337 1 302 2 205 4 171 3 78 1 80 2 342 2 308 1 258 2 40 1 
179 1 1 1 244 1 297 3 5 1 139 1 120 1 273 1 317 1 164 1 219 1 205 2 324 1 171 1 16 2 19 1 308 1 233 3 292 1 111 1 40 1 112 1 
117 1 179 1 1 1 297 3 5 1 139 1 120 1 273 1 317 1 164 1 219 1 205 3 324 1 171 1 16 1 19 1 308 1 233 3 258 1 191 1 292 1 111 1 40 1 112 1 
117 1 179 1 1 1 244 1 297 3 5 1 139 1 120 1 273 1 317 1 164 1 219 1 52 1 205 3 324 1 171 1 16 2 19 1 308 1 233 3 258 1 191 1 111 1 292 1 40 1 112 1 
64 1 117 1 179 1 1 2 244 1 297 3 5 1 272 1 139 1 120 2 273 1 317 1 164 1 219 1 223 1 52 1 76 1 205 2 324 1 171 1 16 2 34 1 19 1 308 2 233 3 208 1 191 1 39 1 111 1 292 1 174 1 40 2 112 1 
315 2 213 1 179 1 1 1 5 1 180 1 139 1 273 1 317 1 219 1 52 2 324 1 16 4 19 1 233 4 191 2 292 1 112 1 294 1 113 1 27 1 65 1 66 2 117 1 244 2 297 4 197 2 69 2 120 1 199 1 164 1 337 1 205 4 302 2 171 2 78 1 308 1 342 2 258 2 40 1 
213 1 27 1 117 1 66 2 65 1 333 1 179 1 244 2 1 1 297 4 197 2 69 2 2 1 180 1 5 1 139 1 120 1 273 1 199 1 317 1 164 1 219 1 52 2 302 2 205 4 324 1 171 2 16 4 78 1 342 2 19 1 308 1 258 2 233 4 191 1 292 1 40 1 294 1 112 1 113 1 211 1 
213 1 27 1 117 1 66 2 65 1 333 1 179 1 244 2 1 1 297 4 197 2 69 2 2 1 180 1 5 1 139 1 120 1 273 1 199 1 317 1 164 1 219 1 52 2 302 2 205 4 324 1 171 2 16 4 78 1 342 2 19 1 308 1 258 2 233 4 191 1 292 1 40 1 294 1 112 1 113 1 211 1 
205 2 324 1 179 1 1 1 297 2 5 1 139 1 120 1 273 1 308 1 19 1 317 1 164 1 123 1 233 2 219 1 292 1 40 1 112 1 
213 1 27 1 117 1 66 2 65 1 333 1 179 1 1 1 244 3 297 4 197 2 69 2 2 1 180 1 5 1 139 1 120 1 199 1 273 1 317 1 164 1 219 1 52 3 281 1 302 2 205 5 324 1 171 2 16 5 78 1 342 2 19 1 308 1 233 4 258 3 191 1 292 1 40 1 294 1 112 1 113 1 211 1 
213 1 27 1 117 1 66 2 65 1 333 1 179 1 1 1 244 3 297 4 197 2 69 2 2 1 180 1 5 1 139 1 120 1 199 1 273 1 317 1 164 1 219 1 52 3 281 1 302 2 205 5 324 1 171 2 16 5 78 1 342 2 19 1 308 1 233 4 258 3 191 1 292 1 40 1 294 1 112 1 113 1 211 1 
315 1 213 1 27 1 66 1 65 1 214 1 179 1 1 1 297 3 180 1 5 1 139 1 120 1 199 1 273 1 317 1 164 1 337 1 219 1 302 1 205 2 150 1 324 1 327 1 171 1 16 1 19 1 308 1 233 3 292 1 40 1 294 1 112 1 113 1 
194 2 33 1 176 1 118 2 161 2 298 2 119 1 181 1 92 1 215 1 217 1 301 1 81 1 318 1 129 1 74 1 155 1 61 1 86 3 96 1 165 1 332 1 175 1 
194 2 26 1 18 1 108 1 92 1 215 1 256 1 73 1 278 1 74 1 86 1 96 1 165 1 332 1 175 1 
314 1 135 1 194 2 243 1 115 1 158 1 1 1 89 1 198 1 298 1 140 1 120 2 6 1 215 1 92 1 7 1 217 1 74 1 95 1 221 1 96 1 165 1 223 1 167 1 148 1 100 1 227 1 228 1 80 1 108 1 290 1 232 1 86 2 39 1 40 2 240 1 332 1 175 1 
314 1 194 4 135 1 26 1 243 1 115 1 158 1 1 1 198 1 120 2 215 2 92 2 7 1 72 1 74 2 95 1 221 1 96 2 165 2 223 1 100 1 284 1 341 1 227 1 228 1 18 1 80 1 108 1 58 1 290 1 86 2 39 1 40 2 242 1 240 1 332 2 175 2 62 1 
212 1 135 2 194 4 115 2 158 2 196 1 1 1 269 1 89 1 198 2 298 1 181 1 120 1 215 2 92 2 7 8 336 1 122 1 74 2 165 2 96 2 223 1 127 1 227 1 228 1 80 7 290 8 329 2 38 1 235 1 24 1 86 2 39 1 110 1 40 1 240 3 332 2 263 1 175 1 
194 2 26 1 64 1 1 1 298 1 120 1 215 1 92 1 301 1 247 1 74 1 339 1 165 1 96 1 223 1 126 1 151 1 188 1 18 1 108 1 81 1 86 3 39 1 40 1 332 1 175 2 
194 2 26 1 126 1 298 2 18 1 181 1 92 1 215 1 81 1 74 1 86 2 96 1 165 1 239 1 332 1 
194 2 26 1 151 1 18 1 181 1 92 1 215 1 288 1 301 1 74 1 86 2 96 1 165 1 332 1 175 2 
194 2 26 1 126 1 298 2 18 1 181 1 92 1 215 1 81 1 74 1 339 1 86 2 96 1 165 1 332 1 
194 2 26 1 81 1 126 1 74 1 38 1 86 2 239 1 165 1 96 1 298 2 332 1 18 1 215 1 92 1 
194 2 26 1 151 1 18 1 92 1 215 1 288 1 301 1 38 1 74 1 86 2 96 1 165 1 332 1 175 2 
194 2 26 1 81 1 126 1 339 1 74 1 38 1 86 2 165 1 96 1 298 2 332 1 18 1 215 1 92 1 
194 2 26 1 81 1 126 1 339 1 74 1 86 2 165 1 96 1 298 2 332 1 18 1 215 1 92 1 
194 2 135 1 314 1 243 1 115 1 158 1 89 1 341 1 227 1 198 1 298 1 120 1 80 1 215 1 92 1 7 1 217 1 290 1 74 1 95 1 86 2 165 1 96 1 221 1 40 1 332 1 240 1 175 1 
194 2 135 1 314 1 147 1 54 1 115 1 169 1 158 1 89 1 227 1 198 1 298 1 120 1 80 1 215 1 92 1 7 1 217 1 290 1 74 1 95 1 86 2 165 1 96 1 40 1 332 1 240 1 175 1 
194 2 26 1 81 1 126 1 339 1 74 1 86 2 165 1 96 1 298 2 332 1 18 1 215 1 92 1 108 1 
314 1 194 2 26 1 243 1 115 1 158 1 198 1 298 2 120 1 92 1 215 1 7 1 74 1 339 1 95 1 221 1 96 1 165 1 126 1 127 1 284 1 341 1 18 1 80 1 81 1 290 1 86 2 40 1 240 1 332 1 
194 2 26 1 126 1 64 1 1 1 188 1 298 2 18 1 120 1 108 1 92 1 215 1 81 1 339 1 74 1 143 1 86 2 96 1 165 1 39 1 40 1 223 1 332 1 
194 4 195 1 162 1 161 1 298 4 215 2 276 1 301 1 74 2 339 1 165 2 96 2 125 1 145 1 126 1 151 1 104 2 286 1 81 1 82 1 346 1 83 2 25 1 86 8 175 4 
194 4 195 1 118 1 162 1 161 2 298 4 215 2 276 1 301 1 74 2 339 1 165 2 96 2 125 1 145 1 126 1 151 1 104 2 286 1 81 1 82 1 346 1 83 2 25 1 86 8 175 4 
194 2 176 2 118 3 162 1 161 4 298 8 119 2 215 1 276 1 301 3 318 2 339 1 74 1 165 1 96 1 125 1 145 1 33 2 126 1 151 1 104 1 286 1 81 3 82 1 346 1 83 2 155 2 61 2 86 14 175 6 
194 4 195 1 118 2 162 1 161 4 298 6 215 2 276 1 301 2 74 2 339 2 165 2 96 2 125 1 145 1 126 2 151 2 104 1 286 2 81 2 82 1 234 1 346 2 83 2 86 12 175 6 
194 2 162 1 298 4 215 1 276 1 301 1 74 1 339 1 165 1 96 1 125 1 145 1 126 1 151 1 104 2 286 1 81 1 82 2 83 2 86 8 175 4 
194 2 115 1 158 1 1 2 269 1 89 1 198 1 298 1 120 2 215 1 92 1 216 1 7 2 74 1 96 1 165 1 13 1 187 1 227 1 80 2 108 1 290 2 310 1 329 2 330 1 235 1 86 2 40 2 240 1 332 1 175 1 
303 1 115 1 283 1 127 1 325 1 158 1 159 1 255 1 80 2 7 2 59 1 336 1 290 2 153 1 142 1 9 1 146 1 192 2 224 1 
303 1 283 1 115 1 325 1 158 1 245 1 255 1 80 1 7 1 59 1 336 1 290 1 153 1 9 1 146 1 192 2 224 1 
135 1 115 1 283 1 158 1 159 1 198 1 80 1 7 1 35 1 290 1 24 1 312 1 110 1 240 1 
303 1 115 1 283 1 325 1 159 1 158 1 255 1 80 1 7 1 59 1 336 1 290 1 153 1 142 1 9 1 146 1 192 2 224 1 
31 1 
335 1 117 1 129 1 191 1 306 1 294 1 113 1 
315 1 213 1 27 1 65 1 117 1 297 1 197 1 69 1 199 1 171 1 16 1 78 1 342 1 233 1 191 2 294 1 113 1 
135 1 315 12 213 4 4 2 271 2 91 6 273 2 7 3 182 1 95 1 51 1 12 1 322 2 151 2 103 1 15 2 105 2 16 5 290 3 233 5 154 1 191 8 294 9 240 6 242 2 113 8 115 2 27 4 117 2 158 1 65 4 67 2 296 6 297 5 198 1 69 6 70 2 199 4 335 1 30 1 301 2 246 1 339 2 124 2 75 2 126 2 127 1 168 3 306 1 171 3 80 3 81 2 
315 6 213 2 114 1 27 2 65 2 117 2 67 1 316 1 296 5 297 1 69 3 91 5 70 2 50 1 199 2 30 1 301 2 73 1 277 1 339 2 97 1 53 1 126 2 151 2 15 1 171 1 16 1 173 1 81 2 233 1 191 5 133 1 294 8 113 5 157 1 
176 1 213 1 64 1 27 1 65 1 67 1 1 1 297 1 334 1 2 1 70 2 272 1 120 1 199 1 301 1 223 1 76 1 33 1 308 1 34 1 81 2 233 1 208 1 61 1 39 1 40 1 294 2 113 2 
213 1 27 1 65 1 117 1 306 1 199 1 335 1 191 1 294 1 113 1 
315 10 126 2 151 2 67 1 296 5 69 5 91 5 70 2 81 2 301 2 339 2 191 5 242 1 294 5 113 5 
233 1 117 1 191 1 297 1 171 1 16 1 
43 1 135 2 115 1 213 2 27 1 158 1 65 2 297 3 198 1 199 2 7 4 30 2 182 1 184 1 51 2 149 1 15 2 171 2 16 4 80 4 290 4 233 3 24 1 156 1 110 1 240 1 294 2 193 1 113 2 
194 2 135 1 314 1 243 1 115 1 64 2 158 1 1 2 198 1 120 3 92 1 215 1 7 1 217 1 74 1 95 1 165 1 96 1 221 1 223 2 76 1 341 1 227 1 229 1 80 1 290 1 86 1 39 2 40 3 240 1 332 1 175 1 
315 4 213 1 27 1 65 1 117 2 296 2 15 1 69 2 91 2 199 1 30 1 155 1 191 4 294 1 113 2 
207 1 241 1 
207 1 241 1 
207 1 241 1 
207 1 241 1 
207 1 241 1 
207 1 241 1 
207 1 241 1 
207 1 241 1 
209 1 291 1 
194 2 176 2 114 1 316 1 334 1 118 4 161 5 298 6 119 1 215 1 301 3 73 1 318 1 74 1 165 1 96 1 125 1 97 1 33 2 81 3 346 1 155 1 61 2 86 11 175 5 
194 4 176 2 114 1 45 1 316 1 334 1 118 4 161 6 119 1 298 8 215 2 301 3 73 2 318 1 74 2 339 1 125 1 165 2 96 2 97 1 33 2 126 1 328 1 81 4 346 2 155 1 61 2 86 14 175 6 
194 6 176 2 114 1 316 1 334 1 118 5 161 7 119 1 298 11 50 1 215 3 301 5 73 1 318 1 277 1 74 3 339 2 165 3 96 3 125 1 97 1 33 2 323 1 126 2 151 2 328 1 173 1 81 5 346 2 155 1 61 2 86 22 175 11 157 1 
194 6 176 2 114 1 316 1 334 1 118 5 161 9 119 1 298 12 215 3 50 1 301 4 73 1 318 1 277 1 74 3 339 2 165 3 96 3 125 1 97 1 33 2 323 1 126 2 151 1 328 1 173 1 81 5 346 4 155 1 61 2 86 20 175 8 157 1 
194 2 176 2 114 1 316 1 334 1 118 4 161 5 298 6 119 1 215 1 301 3 73 1 318 1 74 1 165 1 96 1 125 1 97 1 33 2 81 3 346 1 155 1 61 2 86 11 175 5 
194 2 114 1 316 1 118 1 161 2 298 6 215 1 50 1 301 2 73 1 277 1 74 1 339 2 165 1 96 1 125 1 97 1 126 2 151 2 173 1 81 2 346 1 86 12 175 6 157 1 
194 8 176 2 114 1 316 1 334 1 118 5 161 7 119 1 298 12 50 1 215 4 301 4 73 1 318 1 277 1 74 4 339 2 165 4 96 4 125 1 97 1 33 2 323 2 126 2 151 1 328 1 173 1 81 5 346 2 155 1 61 2 86 21 175 9 157 1 
194 8 114 1 195 1 316 1 118 3 161 6 298 9 50 1 215 4 301 2 73 1 277 1 74 4 339 3 125 1 165 4 96 4 97 1 323 2 126 3 151 2 173 1 81 3 346 3 86 16 175 7 157 1 
176 2 33 2 334 1 118 4 161 7 119 1 298 5 301 3 81 3 318 1 346 3 155 1 61 2 86 9 175 4 
194 8 176 2 114 1 195 1 316 1 334 1 118 5 161 7 119 1 298 12 50 1 215 4 301 4 73 1 318 1 277 1 74 4 339 2 125 1 165 4 96 4 97 1 33 2 323 2 126 2 151 1 173 1 81 5 346 2 155 1 61 2 86 21 175 9 157 1 
194 4 176 2 334 1 118 4 161 7 119 1 298 7 215 2 301 3 318 1 74 2 165 2 96 2 33 2 323 1 81 3 346 3 155 1 61 2 86 13 175 6 
176 1 33 1 118 2 161 2 119 1 298 2 81 1 301 1 318 1 129 1 155 1 61 1 86 3 175 1 
194 2 126 1 151 1 118 1 161 2 298 2 328 1 215 1 301 1 81 1 346 1 74 1 339 1 86 4 96 1 165 1 175 2 
114 1 45 1 126 1 151 1 316 1 118 1 161 2 298 3 301 1 81 1 73 2 346 1 339 1 86 7 175 4 
194 2 176 2 45 1 114 2 334 1 118 5 270 1 161 7 119 1 298 11 215 1 301 5 73 2 318 1 339 2 74 1 96 1 165 1 33 2 323 1 126 2 151 2 256 1 81 5 346 2 155 1 61 2 86 21 175 10 
73 1 86 1 175 1 
114 1 86 1 298 1 
194 2 126 1 151 1 118 2 161 3 298 3 215 1 328 1 81 1 301 1 346 1 74 1 339 1 86 6 165 1 96 1 242 1 175 3 
194 2 114 1 316 1 118 1 161 2 298 6 215 1 50 1 301 2 73 1 277 1 74 1 339 2 165 1 96 1 125 1 97 1 126 2 151 2 173 1 81 2 346 1 86 12 175 6 157 1 
301 1 81 1 61 1 86 2 298 1 175 1 
134 1 194 2 33 1 176 1 323 1 118 1 161 2 298 1 119 1 215 1 318 1 346 1 74 1 86 3 96 1 165 1 175 2 
194 2 176 1 33 1 334 1 118 2 161 4 298 4 215 1 81 2 301 2 346 2 74 1 61 1 86 8 165 1 96 1 125 1 175 4 
194 2 126 1 161 1 298 2 215 1 81 1 346 1 74 1 86 2 125 1 96 1 165 1 
194 2 126 1 151 1 118 1 161 2 298 2 215 1 301 1 81 1 346 1 74 1 339 1 86 4 125 1 96 1 165 1 175 2 
134 1 194 6 176 1 33 1 323 1 195 1 118 1 161 2 298 1 215 3 346 1 74 3 86 3 125 1 96 3 165 3 175 2 
194 8 176 2 114 3 195 1 178 1 316 1 334 1 118 5 161 9 119 1 298 14 215 4 301 5 73 3 318 1 74 4 339 2 165 4 96 4 125 1 33 2 98 1 323 1 126 2 151 2 328 1 81 5 346 4 130 1 155 1 61 2 86 27 175 13 
217 1 200 1 1 1 40 1 90 1 139 1 120 1 
295 1 1 1 128 1 90 1 139 1 120 1 217 1 200 1 23 1 248 1 348 1 40 1 
7 1 135 1 115 1 290 1 158 1 129 1 24 1 198 1 110 1 240 1 80 1 
314 1 135 1 115 1 158 1 1 1 198 1 228 1 120 2 80 1 7 1 217 1 290 1 95 1 221 1 39 1 223 1 40 2 240 1 
314 1 115 1 63 1 158 1 1 1 198 2 120 1 7 1 217 1 218 1 141 1 95 2 221 1 51 1 223 1 324 1 228 1 80 1 308 2 290 1 39 1 292 1 40 1 240 3 
314 1 115 1 63 1 158 1 1 1 198 2 120 1 7 1 217 1 218 1 141 1 95 2 51 1 223 1 54 1 324 1 228 1 80 1 308 2 290 1 39 1 292 1 40 1 240 3 
64 1 117 1 1 1 297 1 272 1 120 1 7 1 51 1 223 1 76 1 168 1 80 1 308 1 34 1 290 1 233 1 208 1 85 1 191 1 39 1 40 1 240 1 
64 1 117 1 1 1 297 1 272 1 120 1 7 1 124 1 51 1 223 1 76 1 168 1 80 1 308 1 34 1 290 1 233 1 208 1 191 1 39 1 40 1 240 1 
7 1 115 1 290 1 158 1 196 1 80 1 
212 1 135 2 115 3 251 1 127 1 158 2 196 1 198 2 80 6 7 7 300 1 336 1 329 1 122 1 290 7 154 1 235 1 95 1 321 1 240 3 263 1 
314 1 176 2 1 1 216 1 92 2 215 2 7 1 217 1 141 1 318 1 95 1 221 1 96 2 223 1 284 1 228 1 108 1 290 1 155 1 61 2 332 2 240 1 194 4 243 1 115 1 158 1 334 1 118 4 198 1 161 5 119 1 298 5 120 2 72 1 301 3 74 2 165 2 33 2 127 1 341 1 80 1 308 1 81 3 346 1 86 9 39 1 40 2 175 4 
135 1 213 2 27 2 117 1 65 2 297 3 4 1 271 1 199 2 273 1 7 1 335 1 182 1 183 1 124 1 75 1 168 1 306 1 105 1 171 1 16 2 80 1 233 3 290 1 191 1 294 1 240 2 113 1 
12 1 115 2 127 1 158 1 196 1 198 1 271 1 80 2 7 2 290 2 154 1 95 1 240 2 
135 1 115 1 127 1 158 1 198 1 80 4 71 1 299 1 7 4 290 4 24 1 110 1 240 1 
99 1 115 2 251 1 158 1 198 1 80 2 7 2 190 1 290 2 95 1 321 1 51 1 166 1 240 1 
7 1 135 1 115 1 290 1 325 1 158 1 9 1 255 1 192 1 80 1 
115 1 127 1 158 1 187 1 198 1 80 2 7 2 336 1 290 2 235 1 240 1 
135 1 212 1 115 2 127 1 158 2 198 2 80 4 71 1 7 5 290 5 122 1 24 1 235 1 51 1 110 1 240 3 
135 1 212 1 225 1 115 2 127 1 158 2 198 2 80 4 71 1 7 5 290 5 24 1 235 1 51 1 110 1 240 3 
314 1 135 1 54 1 115 1 158 1 1 1 198 1 228 1 120 2 80 1 7 1 217 1 290 1 95 1 39 1 223 1 40 2 240 1 
115 2 251 1 158 1 198 1 80 1 7 1 300 1 290 1 154 1 95 1 321 1 51 1 240 1 
217 1 21 1 344 1 68 1 0 1 
44 1 282 1 324 1 117 1 160 1 0 1 68 2 297 2 172 1 273 1 308 1 317 1 217 1 21 2 233 2 344 2 183 1 191 1 292 1 
13 1 68 1 0 1 1 1 120 1 21 1 310 1 330 1 40 1 
282 1 44 1 0 1 
20 1 129 1 189 1 79 1 
20 1 226 1 152 1 47 1 189 1 79 1 231 1 
338 1 152 1 138 1 
226 3 47 1 152 3 186 2 189 1 79 1 231 1 20 1 121 1 8 1 249 1 32 1 
20 1 22 1 226 2 152 2 47 1 189 1 79 1 230 1 231 1 
265 1 226 1 325 1 47 1 152 1 231 1 20 1 249 1 10 1 146 1 192 1 
20 1 226 1 152 1 47 1 249 1 79 1 231 1 
226 1 152 1 47 1 189 1 249 1 79 2 231 1 
177 1 226 2 47 2 152 2 79 1 231 2 20 1 93 1 131 1 249 1 
265 1 226 3 47 1 152 3 189 1 79 1 231 1 20 2 60 1 22 2 236 1 249 1 41 1 
303 1 226 2 325 1 47 1 152 2 189 1 307 1 79 1 231 1 20 1 22 1 9 1 249 1 192 2 146 1 
265 1 226 4 47 2 152 4 189 1 79 1 230 1 231 2 29 1 20 2 22 2 236 1 249 1 
20 1 226 1 152 1 47 1 189 1 249 1 79 1 231 1 
265 1 226 4 152 4 47 1 186 1 189 2 79 2 231 1 20 3 121 1 22 2 320 1 236 1 32 1 
20 1 264 1 22 1 87 1 14 1 226 2 152 2 47 1 189 1 249 1 79 1 231 1 
226 3 47 1 152 3 186 2 189 1 79 1 231 1 20 1 121 1 203 1 249 1 32 2 
20 2 109 1 331 1 107 2 
56 1 226 1 152 1 47 1 249 1 231 1 
20 1 22 1 226 2 152 2 47 1 189 1 249 1 41 1 79 1 231 1 
48 1 
20 1 226 1 152 1 47 1 189 1 249 1 79 1 231 1 
226 3 47 1 152 3 186 1 189 1 79 1 231 1 20 1 22 1 249 1 41 1 
20 1 265 1 320 1 236 1 
20 1 79 1 

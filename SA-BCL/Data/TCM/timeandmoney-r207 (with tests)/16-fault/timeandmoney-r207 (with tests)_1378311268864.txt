#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 322 302 40 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 322 302 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 242 50 269 142 235 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 242 50 269 142 235 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 242 50 269 142 235 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 242 50 269 142 235 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 253 73 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 322 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 23 4 168 2 24 3 217 1 25 7 328 2 220 9 151 1 154 1 83 1 5 1 155 1 69 1 297 1 340 1 299 1 15 2 119 1 77 5 323 1 104 1 214 9 325 1 
22 1 23 4 299 1 168 2 217 1 24 3 25 7 328 2 151 1 15 2 220 9 119 1 154 1 83 1 77 5 5 1 155 1 69 1 104 1 323 1 297 1 325 1 214 9 340 1 
22 1 23 4 61 1 168 2 217 1 24 3 25 6 328 2 151 2 220 9 154 1 83 1 5 1 69 1 276 1 297 2 340 1 55 1 299 1 204 1 205 1 15 2 77 5 237 1 323 2 104 2 214 9 325 1 
22 1 23 4 61 1 168 2 217 1 24 3 25 6 328 2 151 2 220 9 154 1 83 1 5 1 69 1 276 1 297 2 340 1 55 1 299 1 204 1 205 1 15 2 77 5 237 1 323 2 104 2 214 9 325 1 
22 1 23 5 61 1 168 2 217 1 24 4 25 7 328 2 151 2 220 10 154 1 83 1 5 1 69 1 276 1 297 2 340 1 55 1 299 1 204 1 205 1 15 2 77 6 237 1 323 2 104 2 214 10 325 1 
22 1 23 3 61 1 168 1 217 1 24 2 25 4 328 2 151 2 220 7 154 1 83 1 5 1 69 1 276 1 297 2 340 1 55 1 204 1 205 1 15 2 77 4 237 1 323 2 104 2 214 7 325 1 
23 2 299 1 168 2 24 1 217 1 25 3 328 1 15 1 220 4 151 1 154 1 83 1 77 3 5 1 104 1 297 1 214 4 340 1 
12 1 204 1 217 1 328 1 15 1 220 2 128 1 154 1 83 1 77 1 104 1 323 1 276 1 159 1 214 2 297 1 
22 1 23 1 217 1 24 1 25 1 328 2 15 2 220 3 154 1 83 1 77 2 323 1 214 3 
225 1 218 1 240 1 
255 2 240 1 27 1 
266 2 184 2 199 2 87 1 207 2 232 2 309 2 227 1 
266 3 2 1 246 1 48 1 309 3 51 1 111 1 28 1 198 1 199 2 313 1 333 1 200 1 87 1 88 2 317 1 338 2 136 2 227 1 184 2 116 1 115 2 13 1 321 1 36 1 278 1 37 1 38 1 207 2 232 2 42 1 346 1 143 1 78 1 80 1 307 1 47 2 
266 1 184 1 199 1 273 1 95 1 87 1 316 1 207 1 232 1 309 1 
266 2 245 1 194 1 309 2 330 1 199 2 273 1 177 1 225 1 87 1 316 1 298 1 184 1 95 2 16 1 232 1 207 1 19 1 189 1 240 1 213 1 
184 1 266 1 194 1 16 1 95 1 232 1 207 1 309 1 19 1 199 1 225 1 177 1 189 2 240 1 213 2 
112 1 164 1 189 1 41 1 213 1 
225 1 112 1 164 1 17 1 189 2 240 1 130 1 213 2 
164 1 189 1 213 1 
184 1 266 1 95 1 232 1 207 1 309 1 273 1 199 1 112 1 189 1 87 1 316 1 213 1 298 1 
240 1 
225 1 112 1 164 1 39 1 189 2 240 1 130 1 213 2 
319 1 268 1 164 2 170 1 74 2 65 1 130 1 140 1 292 1 252 2 99 1 225 1 112 2 349 2 34 1 189 5 240 1 213 5 127 1 
138 2 266 5 184 1 95 1 232 4 207 4 330 1 309 5 173 1 97 1 197 1 44 1 199 5 176 1 179 1 227 1 
266 2 199 2 224 1 95 1 316 1 207 2 232 2 309 2 
218 1 227 1 
68 1 184 1 266 2 199 2 207 1 232 1 309 2 173 1 227 2 
257 1 110 1 82 1 
266 1 115 1 246 1 278 1 38 1 309 1 141 1 346 1 313 1 78 1 143 1 200 1 80 1 136 1 227 1 47 1 
138 1 266 2 115 1 246 1 278 1 38 1 232 1 207 1 309 2 82 1 97 1 313 1 346 1 199 1 143 1 78 1 200 1 80 1 136 1 47 1 
184 1 138 1 266 3 199 3 207 3 232 3 309 3 227 1 
266 1 199 1 95 1 316 1 207 1 232 1 309 1 
68 1 266 1 184 1 199 1 95 1 207 1 232 1 309 1 173 1 
266 4 246 1 48 1 194 1 309 4 51 1 173 1 28 1 198 1 293 1 313 1 199 3 333 1 177 1 200 1 87 1 88 1 317 1 338 2 136 1 227 1 184 2 138 1 115 1 13 1 321 1 278 1 37 1 38 1 16 1 95 1 207 3 232 3 97 1 122 1 19 1 346 1 143 1 78 1 189 1 80 1 213 1 307 1 47 1 
138 1 266 2 95 1 232 1 207 1 309 2 330 1 199 2 176 1 179 1 227 1 
184 1 138 2 266 3 341 1 194 1 95 1 16 1 232 3 207 3 309 3 173 1 97 1 19 1 293 1 199 3 177 1 189 1 240 1 213 1 
138 1 184 1 266 2 257 1 232 2 207 2 309 2 173 1 82 1 199 2 
266 1 115 1 246 1 278 1 38 1 309 1 346 1 313 1 78 1 143 1 200 1 80 1 136 1 227 1 47 1 
266 1 115 1 203 1 246 1 278 1 38 1 309 1 313 1 78 1 143 1 201 1 80 1 136 1 227 1 47 1 
244 1 49 1 51 2 110 2 82 2 28 1 111 2 131 1 198 1 85 1 294 1 333 1 88 4 338 2 92 1 13 1 257 2 37 1 260 1 186 1 100 1 307 1 
266 1 199 1 224 1 95 1 16 1 207 1 232 1 309 1 
139 1 305 1 
139 1 305 1 
45 1 108 1 
45 1 108 1 
45 1 108 1 
272 1 139 1 305 1 
1 1 259 1 45 1 108 1 139 2 305 2 
139 1 305 1 226 1 
139 1 305 1 226 1 
139 1 305 1 226 1 
139 1 305 1 270 1 
139 1 305 1 270 1 
139 1 305 1 270 1 
52 1 302 1 256 1 189 1 40 1 139 1 305 1 213 1 322 1 
52 1 302 1 256 1 139 1 305 1 322 1 
151 1 104 1 297 1 
104 1 159 1 297 1 
267 1 151 2 152 1 104 3 324 1 159 1 
267 1 7 1 151 1 104 2 324 1 159 1 
267 1 151 1 104 2 324 2 159 1 
244 1 308 1 27 1 310 1 130 1 292 2 252 1 291 2 30 1 85 1 112 4 225 1 255 3 34 1 158 1 137 2 92 1 319 3 164 1 260 1 74 1 96 1 209 1 20 1 167 1 349 1 350 2 264 1 189 5 103 1 240 2 213 5 
0 1 266 1 309 1 273 1 199 1 112 2 225 1 87 1 316 1 298 1 184 1 164 1 95 1 41 1 232 1 207 1 125 1 126 1 189 2 240 1 213 2 
244 1 27 2 252 1 291 1 292 2 30 1 225 1 85 1 112 2 255 4 158 1 137 2 92 1 319 3 74 1 260 1 20 1 167 1 349 1 103 1 264 1 189 3 350 2 240 3 213 3 127 1 
244 2 221 1 27 3 252 1 291 2 292 4 30 2 225 1 85 2 112 3 255 7 158 2 137 4 92 2 319 5 74 1 260 2 282 1 20 1 167 1 349 1 304 1 350 4 189 4 103 1 264 1 240 4 213 4 127 1 
143 1 38 1 80 1 
38 1 94 1 
218 1 38 1 4 1 
253 1 38 1 
187 1 
38 1 80 1 
251 1 143 1 38 3 134 1 4 2 80 1 
92 1 149 1 148 1 244 1 153 2 195 1 107 1 117 2 249 1 51 3 222 1 165 1 111 4 315 1 88 7 89 1 339 3 
92 1 149 1 148 1 244 1 153 2 195 1 107 1 117 2 249 1 51 3 222 1 165 1 111 4 315 1 88 7 89 1 339 3 
92 1 148 1 149 1 244 1 153 2 195 1 107 1 117 2 249 1 51 3 222 1 165 1 111 4 315 1 211 1 88 7 89 1 339 3 
242 1 63 1 195 2 153 1 50 1 248 1 107 1 172 1 249 1 51 3 222 1 111 3 333 1 88 6 89 1 338 2 339 2 229 1 13 1 37 1 117 1 165 1 102 1 307 1 
92 1 148 1 149 1 229 1 244 1 13 2 37 2 153 3 195 1 107 1 117 2 249 1 222 1 51 4 165 1 111 5 133 1 333 2 315 1 59 1 88 9 338 4 339 4 307 2 
243 1 217 1 246 1 25 1 328 1 151 1 220 2 152 1 154 1 67 1 83 1 271 1 84 1 9 1 136 1 159 1 297 1 115 1 70 1 14 1 300 1 278 1 15 1 262 1 77 1 323 1 58 1 104 2 214 2 47 1 
246 1 81 1 25 2 328 1 151 1 152 1 220 3 154 1 67 1 83 1 84 1 9 1 296 1 136 1 159 1 297 1 115 1 70 1 14 1 300 1 278 1 15 1 262 1 77 1 348 1 323 1 58 1 104 2 214 3 47 1 
70 1 115 1 246 1 278 1 25 2 14 1 151 1 152 1 220 2 262 1 154 1 83 1 77 1 84 1 348 1 9 1 296 1 104 2 58 1 323 1 136 1 159 1 297 1 214 2 47 1 
246 1 81 1 328 1 220 1 106 1 129 1 84 2 9 2 53 1 54 1 136 1 90 1 115 1 278 1 14 2 38 1 15 1 98 1 78 1 323 2 80 1 214 1 47 1 
243 1 217 1 246 1 328 1 151 1 220 1 152 1 67 1 84 1 9 1 136 1 159 1 297 1 115 1 70 1 14 1 300 1 278 1 15 1 262 1 348 1 323 1 58 1 104 2 214 1 47 1 
144 1 
266 1 147 1 216 3 245 1 288 1 194 1 27 2 289 1 309 1 330 1 130 2 292 1 252 1 132 2 199 1 225 1 177 1 157 1 34 1 336 2 337 1 91 5 183 3 319 1 71 1 164 5 74 1 16 1 95 1 185 1 281 3 19 1 349 1 263 1 79 2 303 1 189 4 240 1 105 2 21 1 145 1 213 4 
266 1 147 1 216 3 245 1 194 1 288 1 27 2 289 1 309 1 330 1 130 2 292 1 252 1 132 2 199 1 225 1 177 1 157 1 34 1 336 2 337 1 91 5 183 3 319 1 71 1 164 5 74 1 16 1 95 1 185 1 281 3 19 1 349 1 263 1 79 2 303 1 189 4 240 1 105 2 21 1 145 1 213 4 
266 1 147 1 245 1 194 1 330 1 309 1 130 1 292 1 252 1 132 1 199 1 177 1 255 1 157 1 34 1 337 1 91 2 319 1 71 1 163 1 164 1 74 1 16 1 95 1 261 1 280 1 19 1 349 1 79 1 303 1 189 3 145 1 213 3 306 1 
266 1 216 2 129 1 309 1 130 3 132 2 225 1 177 1 136 2 183 2 91 4 319 2 278 1 16 1 95 1 281 2 19 1 189 5 240 2 105 2 145 1 21 1 326 1 147 1 245 1 246 1 194 1 106 1 27 2 330 1 292 2 252 1 199 1 255 2 157 1 34 1 336 2 337 1 160 1 115 2 71 1 163 1 164 6 38 1 74 1 167 1 78 2 124 1 349 1 79 2 303 1 80 1 212 1 213 5 47 2 
91 2 147 1 266 1 216 1 245 1 164 2 194 1 95 1 16 1 39 1 330 1 309 1 130 1 19 1 199 1 177 1 157 1 189 3 303 1 145 1 337 1 213 3 
91 3 147 1 266 1 245 1 194 1 95 1 16 1 330 1 309 1 281 1 19 1 199 1 177 1 157 1 189 2 303 1 145 1 337 1 213 2 
266 1 147 1 216 1 245 1 194 1 309 1 330 1 130 1 199 1 177 1 157 1 337 1 91 3 183 1 164 2 16 1 95 1 39 1 281 1 19 1 303 1 189 3 145 1 213 3 
266 2 216 4 309 2 130 3 273 1 132 2 225 2 177 1 87 1 316 1 183 4 91 5 184 1 319 1 279 1 95 2 16 1 232 1 185 1 281 3 19 1 189 5 240 2 145 1 21 1 105 2 147 1 245 1 194 1 288 1 289 1 27 2 330 1 252 1 292 1 199 2 157 1 34 1 337 1 336 2 298 1 71 1 164 7 74 1 39 1 207 1 349 1 263 1 303 1 79 2 213 5 
266 1 147 1 216 2 245 1 194 1 27 2 330 1 309 1 130 2 292 1 252 1 132 2 199 1 225 1 177 1 255 2 157 1 34 1 336 2 337 1 183 2 91 4 319 1 71 1 163 1 164 4 74 1 16 1 95 1 281 2 19 1 349 1 79 2 303 1 189 4 240 2 105 2 145 1 21 1 213 4 
266 1 147 1 216 2 245 1 194 1 288 1 27 2 289 1 309 1 330 1 130 2 292 1 252 1 132 2 199 1 225 1 177 1 157 1 34 1 336 2 337 1 183 2 91 4 319 1 71 1 164 4 16 1 95 1 74 1 281 2 19 1 349 1 263 1 79 2 303 1 189 4 240 1 105 2 21 1 145 1 213 4 
266 1 147 1 216 2 245 1 194 1 288 1 27 2 289 1 309 1 330 1 130 2 292 1 252 1 132 2 199 1 225 1 177 1 157 1 34 1 336 2 337 1 183 2 91 4 319 1 71 1 164 4 16 1 95 1 74 1 281 2 19 1 349 1 263 1 79 2 303 1 189 4 240 1 105 2 21 1 145 1 213 4 
266 2 309 2 130 2 132 2 273 1 177 1 225 1 87 1 316 1 91 2 184 1 319 1 95 2 16 1 232 1 280 2 19 1 189 4 240 1 145 1 147 1 245 1 194 1 330 1 252 1 292 1 199 2 157 1 255 2 33 1 34 1 337 1 298 1 71 1 164 2 74 1 261 1 207 1 349 1 263 1 303 1 79 2 265 1 213 4 306 2 
148 1 149 1 244 1 218 1 49 1 153 2 249 1 222 1 51 3 110 1 82 1 28 1 111 3 198 1 333 1 315 1 88 6 338 2 339 2 227 2 92 1 13 1 257 1 37 1 117 1 307 1 
242 4 287 1 62 1 244 3 48 1 63 3 64 2 50 1 51 9 110 14 82 14 28 2 111 10 198 1 332 1 333 2 85 2 88 19 338 4 158 3 339 1 227 1 92 2 116 1 13 2 257 5 37 2 260 3 165 1 234 1 236 1 307 2 
266 2 246 1 48 1 196 1 309 2 51 1 311 1 28 1 111 1 198 1 313 1 199 1 333 1 200 1 88 2 136 1 338 2 227 1 182 1 138 1 115 1 116 1 13 1 257 1 278 1 38 1 37 1 207 1 232 1 234 1 97 1 141 1 346 1 143 1 78 1 80 1 307 1 47 1 
266 2 48 1 309 2 51 4 82 3 223 1 313 1 85 1 88 7 136 1 277 1 138 1 92 1 13 2 321 1 278 1 232 1 97 1 234 1 143 1 244 1 246 1 153 1 110 3 331 1 28 2 111 3 198 2 199 1 333 2 200 1 334 1 338 4 158 1 339 1 115 1 257 3 37 2 38 1 260 1 207 1 118 1 346 1 78 1 80 1 307 2 47 1 
266 1 192 1 2 2 246 2 48 1 49 1 169 1 106 1 129 1 309 1 51 1 250 1 28 2 111 1 271 1 198 2 199 1 333 2 8 1 88 2 135 1 136 7 338 4 138 1 115 8 116 1 13 2 278 2 38 3 37 2 207 1 232 1 78 2 348 1 239 1 210 1 80 2 307 2 47 8 
266 1 244 1 309 1 110 1 173 1 51 2 82 1 28 1 111 1 198 1 199 1 333 1 85 1 10 1 88 3 338 2 158 1 184 1 92 1 13 1 257 1 37 1 260 1 232 1 207 1 234 1 307 1 
244 1 13 1 257 1 49 1 37 1 260 1 110 1 165 1 82 1 28 1 111 2 198 1 333 1 100 1 88 2 338 2 339 1 307 1 
92 1 13 1 257 1 49 1 37 1 110 1 51 2 82 1 28 1 131 1 198 1 333 1 85 1 88 2 338 2 307 1 
244 1 49 1 110 2 51 2 82 2 111 2 28 1 198 1 333 1 85 1 88 4 158 1 338 2 92 1 13 1 257 2 37 1 260 1 307 1 
192 1 244 1 13 1 257 1 37 1 260 1 110 1 165 1 82 1 28 1 111 2 198 1 333 1 100 1 88 2 338 2 339 1 307 1 
192 1 92 1 13 1 257 1 37 1 110 1 51 2 82 1 28 1 131 1 198 1 333 1 85 1 88 2 338 2 307 1 
92 1 192 1 244 1 13 1 257 2 37 1 260 1 51 2 110 2 165 1 82 2 28 1 111 2 198 1 85 1 333 1 88 4 338 2 158 1 339 1 307 1 
92 1 244 1 13 1 257 2 37 1 260 1 51 2 110 2 82 2 28 1 111 2 198 1 85 1 333 1 88 4 338 2 158 1 307 1 
266 1 246 1 48 1 309 1 51 1 111 1 28 1 198 1 313 1 333 1 200 1 88 2 136 1 338 2 227 1 116 1 115 1 321 1 13 1 278 1 38 1 37 1 346 1 143 1 78 1 80 1 307 1 47 1 
266 1 246 1 48 1 309 1 51 1 111 1 28 1 198 1 313 1 333 1 201 1 88 2 136 1 338 2 227 1 116 1 203 1 115 1 13 1 278 1 38 1 37 1 283 1 143 1 78 1 80 1 307 1 47 1 
244 1 110 2 51 2 82 2 111 2 28 1 198 1 333 1 85 1 88 4 158 1 338 2 92 1 13 1 257 2 37 1 260 1 234 1 307 1 
266 1 244 1 246 1 309 1 51 2 110 2 82 2 111 2 28 1 271 1 198 1 313 1 85 1 333 1 200 1 88 4 136 1 338 2 158 1 277 1 92 1 115 1 321 1 13 1 257 2 278 1 38 1 37 1 260 1 346 1 143 1 80 1 307 1 47 1 
266 1 244 1 26 1 309 1 51 1 173 1 110 1 82 1 28 1 111 2 198 1 199 1 85 1 333 1 88 3 338 2 158 1 339 1 92 1 184 1 13 1 257 1 37 1 260 1 232 1 207 1 165 1 234 1 307 1 
242 2 13 1 269 1 63 1 37 1 231 1 50 2 51 3 111 2 235 1 142 1 123 1 133 1 333 1 188 1 88 5 338 2 307 1 
242 2 13 1 269 1 63 1 37 1 231 1 50 2 51 3 111 2 235 1 142 1 123 1 133 1 333 1 188 1 88 5 338 2 307 1 
242 2 13 1 269 1 63 1 37 1 231 1 50 2 51 3 111 2 235 1 142 1 123 1 133 1 333 1 188 1 88 5 338 2 307 1 
242 2 13 1 269 1 63 1 37 1 231 1 50 2 51 3 111 2 235 1 142 1 123 1 133 1 333 1 188 1 88 5 338 2 307 1 
242 2 244 1 63 1 64 1 50 1 51 5 111 4 333 1 133 1 85 1 88 9 180 1 338 2 158 1 92 1 13 1 37 1 231 1 260 1 43 1 235 1 142 2 123 1 188 2 307 1 
286 1 266 2 2 2 246 1 48 1 169 1 309 2 51 1 28 1 111 1 198 1 29 1 175 1 199 2 333 1 295 1 88 2 338 2 136 2 115 2 116 1 13 1 278 1 38 1 37 1 234 1 239 1 80 1 307 1 47 2 351 1 
115 2 70 1 246 1 278 1 300 1 151 1 152 1 3 1 262 1 66 1 271 1 284 1 84 1 348 1 104 2 136 2 159 1 297 1 47 2 
115 1 70 1 246 1 300 1 278 1 151 1 152 1 3 1 262 1 290 1 84 1 348 1 104 2 136 1 159 1 297 1 47 1 
98 1 115 1 84 1 78 1 246 1 278 1 38 1 106 1 129 1 80 1 75 1 136 1 66 1 47 1 
115 1 70 1 246 1 278 1 300 1 151 1 152 1 3 1 262 1 66 1 284 1 84 1 348 1 104 2 136 1 159 1 297 1 47 1 
215 1 
266 3 246 1 48 1 309 3 51 1 28 1 198 1 199 2 313 1 333 1 200 1 87 1 88 1 317 1 338 2 136 1 227 1 184 2 115 1 13 1 321 1 278 1 37 1 38 1 207 2 232 2 346 1 78 1 143 1 80 1 307 1 47 1 
319 1 74 1 27 1 292 1 252 1 167 1 225 1 255 2 349 1 34 1 240 2 212 1 137 1 
292 1 319 1 225 1 218 1 170 1 240 1 65 1 
319 1 164 1 74 1 27 1 130 1 252 1 292 1 225 1 255 1 349 1 189 1 34 1 240 2 336 1 21 1 105 1 213 1 
115 1 246 1 278 2 73 1 38 1 74 1 252 1 251 1 253 1 143 1 78 1 349 1 34 1 80 1 136 1 47 1 191 1 
242 2 60 1 244 3 193 2 269 1 63 1 64 1 50 1 27 5 130 1 252 2 292 6 225 2 85 3 255 10 202 1 34 2 114 1 158 3 137 7 92 3 319 11 162 1 164 1 230 1 74 2 260 3 344 1 167 1 238 1 349 2 189 1 350 7 240 7 212 1 213 1 
266 1 244 2 193 2 289 1 309 1 249 1 222 1 252 1 292 2 273 1 199 1 315 1 34 1 87 1 316 1 298 1 92 1 184 1 319 2 162 1 95 1 74 1 232 1 207 1 76 1 349 1 189 1 213 1 
319 1 170 1 74 1 65 1 252 1 292 1 225 1 349 1 34 1 240 1 
92 1 319 2 244 1 260 1 27 2 292 2 85 1 255 4 350 2 240 2 158 1 137 2 
225 1 164 1 189 1 240 1 130 1 213 1 
246 1 106 1 129 1 130 2 252 2 292 2 34 1 136 4 160 1 115 4 319 2 278 1 38 1 164 4 342 1 74 2 347 1 78 2 167 2 124 1 349 2 46 2 189 3 80 1 212 2 213 3 190 1 127 1 47 4 
52 1 322 1 
52 1 322 1 
52 1 322 1 
52 1 322 1 
52 1 322 1 
52 1 322 1 
52 1 322 1 
52 1 322 1 
139 1 305 1 
242 1 92 1 148 1 149 1 244 1 13 1 269 1 63 1 37 1 153 2 50 1 117 1 249 1 222 1 51 4 111 4 133 1 333 1 315 1 88 8 338 2 339 2 307 1 
242 1 92 1 148 1 149 1 244 1 13 2 269 1 63 1 37 2 153 2 50 1 117 1 249 1 222 1 51 4 111 4 333 2 133 1 315 1 88 8 338 4 339 2 35 1 307 2 
242 2 60 1 148 1 149 1 244 4 269 1 63 1 64 1 153 3 50 1 249 1 222 1 51 13 111 11 333 3 133 1 85 3 315 1 114 1 88 24 338 6 158 3 339 4 35 1 92 4 229 1 13 3 37 3 260 3 117 1 344 1 165 1 238 1 307 3 
242 2 60 1 244 3 269 1 63 1 64 1 153 1 50 1 51 8 111 9 333 4 133 1 85 2 114 1 88 17 338 8 158 3 339 2 35 1 92 2 229 2 13 4 37 4 260 3 344 1 165 1 238 1 307 4 
242 1 92 1 148 1 149 1 244 1 13 1 269 1 63 1 37 1 153 2 50 1 117 1 249 1 222 1 51 4 111 4 133 1 333 1 315 1 88 8 338 2 339 2 307 1 
242 2 60 1 244 3 269 1 63 1 64 1 153 1 50 1 51 10 111 8 333 2 133 1 85 3 114 1 88 18 338 4 158 3 339 2 92 3 229 1 13 2 37 2 260 3 344 1 165 1 238 1 307 2 
242 2 60 1 148 1 149 1 244 4 269 1 63 1 64 1 153 3 50 1 249 1 222 1 51 11 111 12 333 4 133 1 85 2 315 1 114 1 88 23 338 8 158 3 339 5 35 1 92 3 229 2 13 4 37 4 260 3 117 1 344 1 165 2 238 1 307 4 
242 2 60 1 244 4 269 1 63 1 64 1 153 1 50 1 51 10 111 11 133 1 333 4 85 3 178 1 114 1 88 21 338 8 158 4 339 4 92 3 229 2 13 4 37 4 260 4 344 1 165 3 238 1 307 4 
92 1 149 1 148 2 244 1 153 3 249 3 51 4 222 3 165 3 111 3 315 1 88 7 339 6 
242 2 60 1 148 1 149 1 244 4 269 1 63 1 64 1 153 3 50 1 249 1 222 1 51 11 111 12 133 1 333 4 85 2 315 1 178 1 114 1 88 23 338 8 158 3 339 4 92 3 229 2 13 4 37 4 260 3 117 1 344 1 165 1 238 1 307 4 
92 1 229 1 149 1 148 1 244 1 13 2 37 2 153 2 117 1 249 1 51 4 222 1 165 1 111 4 333 2 315 1 88 8 338 4 339 3 307 2 
92 1 149 1 148 1 244 1 218 1 153 2 117 1 249 1 51 3 222 1 111 3 315 1 88 6 339 2 
92 1 244 1 13 1 37 1 260 1 51 2 165 1 111 2 85 1 333 1 88 4 338 2 158 1 339 1 35 1 307 1 
242 2 92 1 244 1 63 1 64 1 260 1 50 1 51 4 111 3 85 1 88 7 158 1 
242 2 148 1 149 1 244 5 63 2 64 1 153 4 249 2 222 2 51 12 111 13 332 1 85 2 333 1 315 2 88 25 158 2 338 2 339 8 92 5 229 1 13 1 37 1 260 2 117 1 76 1 165 4 236 1 307 1 
242 1 88 1 51 1 
63 1 88 1 111 1 
92 1 244 1 260 1 153 1 51 3 165 1 111 3 85 1 334 1 88 6 158 1 339 2 
242 2 60 1 244 3 269 1 63 1 64 1 153 1 50 1 51 10 111 8 333 2 133 1 85 3 114 1 88 18 338 4 158 3 339 2 92 3 229 1 13 2 37 2 260 3 344 1 165 1 238 1 307 2 
92 1 244 1 153 1 249 1 51 3 222 1 165 1 111 3 315 1 88 6 339 2 
148 1 229 1 149 1 13 1 37 1 153 1 172 1 249 1 222 1 51 2 165 1 111 1 333 1 88 3 338 2 339 2 307 1 
92 2 244 2 13 1 37 1 153 3 249 2 76 1 222 2 51 5 165 2 111 5 333 1 133 1 315 1 88 10 338 2 339 5 307 1 
244 1 13 1 37 1 260 1 165 1 111 2 133 1 333 1 88 2 338 2 339 1 307 1 
92 1 244 1 13 1 37 1 260 1 51 2 111 2 133 1 333 1 85 1 88 4 338 2 158 1 307 1 
229 1 13 3 37 3 153 1 172 1 249 1 51 2 222 1 165 1 111 1 133 1 333 3 178 1 88 3 338 6 339 2 307 3 
242 1 149 1 148 1 244 2 63 1 153 3 50 1 172 1 249 2 51 8 222 2 111 7 333 4 133 1 315 1 178 1 88 15 338 8 339 6 35 1 92 2 229 1 13 4 37 4 76 1 165 3 102 1 307 4 
266 1 95 1 330 1 309 1 199 1 176 1 86 1 179 1 227 1 
266 1 247 1 95 1 57 1 330 1 309 1 208 1 345 1 199 1 176 1 86 1 179 1 146 1 227 1 
138 1 266 2 115 1 203 1 246 1 278 1 38 1 232 1 207 1 309 2 313 1 199 1 143 1 78 1 80 1 136 1 227 1 47 1 
115 1 46 1 171 1 136 1 47 1 
115 1 78 1 246 1 218 1 278 1 38 1 106 1 129 1 80 1 136 1 47 1 
138 1 266 2 115 1 246 1 278 1 38 1 232 1 207 1 309 2 313 1 199 1 346 1 143 1 78 1 80 1 136 1 227 1 47 1 
138 1 266 2 115 1 246 1 278 1 194 1 38 3 94 1 95 1 16 1 232 1 207 2 309 2 18 1 313 1 199 2 346 1 143 2 46 1 80 2 136 1 227 1 47 1 
266 2 246 1 194 1 309 2 199 2 313 1 181 1 136 2 227 1 138 1 203 1 115 2 278 1 38 3 16 1 95 1 94 1 207 2 232 1 18 1 143 2 46 1 80 2 47 2 
246 1 4 1 253 1 225 1 181 1 136 3 320 1 115 3 278 1 164 1 38 4 94 1 120 1 18 1 19 1 143 1 78 1 46 1 189 2 240 1 80 1 213 2 47 3 
115 3 246 1 278 1 38 4 164 1 94 1 4 1 18 1 19 1 312 1 253 1 78 1 143 1 225 1 189 2 46 1 240 1 80 1 181 1 136 3 213 2 47 3 
115 1 246 1 278 1 210 1 136 1 47 1 
115 1 78 1 171 1 136 1 47 1 
286 1 266 2 148 1 149 1 244 1 246 1 153 2 249 1 309 2 110 1 51 3 222 1 82 1 111 3 28 2 271 1 198 2 313 1 199 1 333 2 315 1 200 1 88 6 338 4 136 1 339 2 277 1 227 2 92 1 138 1 115 1 13 2 321 1 257 1 278 1 38 1 37 2 117 1 207 1 232 1 118 1 234 1 346 1 143 1 80 1 307 2 47 1 
170 1 4 1 65 1 130 1 292 1 252 2 312 1 253 1 314 1 225 1 112 1 34 2 136 1 11 1 319 1 115 1 72 1 38 2 164 2 74 2 19 1 347 1 78 1 349 2 189 3 240 1 213 3 47 1 
115 1 246 1 278 2 38 1 4 1 187 1 251 1 143 1 210 1 80 1 136 1 47 1 191 1 
115 4 246 1 278 1 38 1 56 1 106 1 129 1 271 1 78 1 80 1 181 1 136 4 47 4 
115 2 246 1 278 2 38 1 329 1 233 1 301 1 143 1 101 1 46 1 275 1 80 1 136 2 47 2 
115 1 78 1 246 1 278 1 104 1 262 1 136 1 159 1 297 1 47 1 
115 2 246 1 348 1 278 1 239 1 295 1 38 1 80 1 136 2 47 2 271 1 
115 5 246 2 278 2 38 3 56 1 106 1 129 1 250 1 271 1 78 1 239 1 8 1 46 1 80 2 136 4 47 5 
318 1 115 5 246 2 278 2 38 3 56 1 106 1 129 1 271 1 78 1 239 1 8 1 46 1 80 2 136 4 47 5 
266 1 343 1 309 1 29 1 166 1 175 1 199 1 32 1 351 1 
228 1 166 1 31 1 
166 1 219 1 32 1 343 1 227 1 
285 1 228 1 219 2 194 1 95 1 16 1 343 2 19 1 166 1 293 1 225 1 112 1 177 1 31 1 32 2 189 2 240 1 213 2 227 1 
77 1 217 1 25 1 328 1 220 3 15 1 154 1 276 1 325 1 214 3 83 1 
77 1 23 1 24 1 327 1 
77 1 83 1 
77 1 218 1 154 1 83 1 
77 1 328 1 220 1 15 1 154 1 214 1 83 1 
9 1 220 1 323 1 
217 1 328 1 15 1 220 3 154 1 83 1 77 1 174 1 254 1 156 1 276 2 214 3 
77 1 168 1 25 1 328 1 220 2 15 1 154 1 214 2 83 1 
77 1 23 1 217 1 328 1 151 1 220 1 15 1 104 1 297 1 214 1 340 1 
77 1 217 1 328 1 220 1 15 1 214 1 83 1 
217 1 328 1 220 1 15 1 154 1 214 1 83 2 
217 1 150 1 328 2 15 2 220 2 83 1 77 1 6 1 241 1 214 2 
23 1 217 1 24 1 25 2 328 1 15 1 220 3 154 1 83 1 77 2 69 1 214 3 325 1 
161 1 217 1 25 1 328 1 15 1 220 2 152 1 151 1 154 1 83 1 77 1 104 2 159 1 214 2 297 1 
23 1 299 1 168 1 217 1 24 1 25 2 328 2 15 2 220 4 154 1 83 1 77 2 214 4 
77 1 217 1 328 1 220 1 15 1 154 1 214 1 83 1 
23 1 24 1 25 2 327 1 328 1 220 4 15 1 154 2 83 2 77 3 174 1 156 1 276 1 214 4 
77 1 155 1 217 1 25 1 93 1 328 1 220 2 15 1 206 1 154 1 214 2 83 1 
217 1 328 1 15 1 220 3 154 1 121 1 83 1 77 1 174 2 156 1 276 2 214 3 
77 2 258 1 113 1 335 2 
217 1 328 1 220 1 15 1 109 1 214 1 
77 1 217 1 25 1 328 1 220 2 15 1 154 1 325 1 214 2 83 1 
274 1 
77 1 217 1 328 1 220 1 15 1 154 1 214 1 83 1 

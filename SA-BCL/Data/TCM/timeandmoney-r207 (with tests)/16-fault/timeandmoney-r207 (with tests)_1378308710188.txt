#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (201,355) 34 (18,122) (18,122) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (201,355) 34 (18,122) (18,122) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (201,355) 34 (18,122) (18,122) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (201,355) 34 (18,122) (18,122) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 349 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (168,310) 31 199 309 324 187 37 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 199 309 324 176 101 266 164 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 199 309 324 176 101 266 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 199 309 324 176 101 266 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 199 309 324 176 101 266 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 199 309 324 176 101 266 164 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 199 309 324 176 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 199 309 324 187 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 199 309 324 176 95 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 254 5 (146,332) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 254 5 (232,273) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 1 276 1 355 1 89 1 122 1 253 1 18 1 112 1 100 1 34 1 182 1 
236 1 276 1 355 1 89 1 122 1 253 1 18 1 112 1 100 1 34 1 182 1 
236 1 276 1 355 1 89 1 122 1 253 1 18 1 112 1 100 1 34 1 182 1 
236 1 276 1 355 1 89 1 122 1 253 1 18 1 112 1 100 1 34 1 182 1 
73 1 276 4 296 1 363 1 255 2 174 3 96 1 236 1 258 2 22 1 139 1 329 1 222 1 100 1 112 4 368 3 82 1 182 1 
184 1 73 1 333 1 276 2 307 1 296 1 253 1 236 1 10 1 89 1 139 1 368 1 222 1 100 1 112 2 182 1 
276 3 253 1 255 1 174 1 236 1 201 1 22 1 139 1 222 1 100 2 112 3 368 2 182 2 
73 1 296 1 174 7 53 1 96 1 201 1 162 1 139 1 329 1 100 2 82 1 182 2 276 9 61 1 253 1 363 1 255 4 236 1 258 2 22 3 222 1 112 9 368 5 260 1 
73 1 296 1 174 7 53 1 96 1 201 1 162 1 139 1 329 1 100 2 82 1 182 2 276 9 61 1 253 1 363 1 255 4 236 1 258 2 22 3 222 1 112 9 368 5 260 1 
0 1 270 1 349 1 
270 1 92 2 186 1 
44 2 234 1 66 1 1 2 367 2 190 2 102 2 207 2 
321 1 1 2 244 1 52 2 3 1 29 1 6 2 5 1 159 1 9 1 56 1 330 2 140 1 79 1 102 2 332 1 142 2 207 3 234 1 144 1 277 1 335 1 336 1 361 1 65 1 281 1 44 2 66 1 148 1 110 1 24 1 131 1 367 2 190 3 289 1 192 1 224 2 
234 1 1 1 326 1 44 1 284 1 367 1 190 1 102 1 207 1 
0 1 39 1 156 1 60 1 198 1 265 1 279 1 270 1 237 1 25 1 190 1 102 1 143 1 207 1 
0 1 39 1 156 1 60 2 1 1 198 1 279 1 44 1 270 1 237 2 367 1 25 1 190 1 102 1 207 1 
136 1 60 1 237 1 226 1 202 1 
0 1 60 2 270 1 237 2 226 1 202 1 78 1 364 1 
60 1 237 1 226 1 
234 1 60 1 1 1 169 1 326 1 44 1 284 1 237 1 202 1 367 1 190 1 102 1 207 1 
270 1 
0 1 60 2 270 1 237 2 226 1 202 1 371 1 364 1 
0 2 133 2 348 2 1 1 227 1 226 2 134 2 299 1 326 1 270 2 202 2 102 1 207 1 234 1 209 1 165 1 60 5 216 1 169 1 364 1 44 1 365 5 284 1 219 2 237 5 367 1 151 2 344 1 190 1 314 1 345 1 369 1 114 1 47 1 91 1 191 5 239 2 
144 1 1 1 361 1 42 1 3 1 52 1 281 1 5 1 310 1 148 1 110 1 140 1 271 1 367 1 330 1 190 2 102 1 332 1 142 1 207 2 
66 1 349 1 
1 1 256 1 44 1 66 2 343 1 367 1 190 2 102 2 207 2 
98 1 31 1 310 1 
144 1 361 1 63 1 3 1 52 1 281 1 5 1 66 1 148 1 110 1 330 1 140 1 190 1 332 1 142 1 207 1 
44 1 66 1 1 3 367 3 190 3 42 1 102 3 207 3 
1 1 367 1 190 1 102 1 326 1 207 1 
256 1 44 1 1 1 343 1 279 1 367 1 190 1 102 1 207 1 
321 1 156 1 1 3 198 1 244 1 3 1 52 1 29 1 6 1 5 1 140 1 271 1 330 1 79 1 102 3 332 1 142 1 207 4 144 1 275 1 234 1 39 1 277 1 335 1 60 1 336 1 361 1 279 1 42 1 281 1 44 2 66 1 148 1 170 1 343 1 110 1 237 1 24 1 131 1 25 1 367 3 190 4 289 1 224 2 
66 1 1 1 278 1 265 1 367 1 190 2 102 2 42 1 207 2 
275 1 39 1 156 1 60 1 1 3 198 1 17 1 279 1 42 2 44 1 343 1 270 1 237 1 271 1 367 3 25 1 190 3 102 3 207 3 
1 2 42 1 310 1 44 1 98 1 343 1 367 2 190 2 102 2 207 2 
144 1 361 1 3 1 52 1 281 1 5 1 66 1 148 1 110 1 330 1 140 1 190 1 332 1 142 1 207 1 
144 1 361 1 3 1 52 1 267 1 281 1 5 1 66 1 148 1 330 1 140 1 190 1 273 1 142 1 207 1 
74 1 321 1 348 1 295 1 244 1 199 1 134 1 6 4 54 1 31 2 98 2 79 1 249 1 38 1 335 1 277 2 41 1 168 1 65 2 340 1 310 2 24 1 131 1 224 2 
1 1 323 1 198 1 279 1 367 1 190 1 102 1 207 1 
44 1 66 1 334 1 1 4 343 1 278 1 265 1 271 1 367 4 190 5 102 5 42 2 248 1 207 5 
1 1 367 1 190 1 102 1 326 1 207 1 
315 1 87 1 
315 1 87 1 
243 1 259 1 
243 1 259 1 
243 1 259 1 
195 1 315 1 87 1 
252 1 315 1 87 1 
360 1 243 1 221 1 315 2 259 1 87 2 
195 1 315 1 87 1 
195 1 315 1 87 1 
315 1 351 1 87 1 
315 1 351 1 87 1 
315 1 351 1 87 1 
60 2 213 2 27 1 86 3 94 1 135 2 87 2 341 2 229 2 311 1 312 1 147 2 270 1 237 2 221 1 315 2 36 1 358 1 128 1 
1 2 298 1 135 1 229 1 269 1 99 1 12 1 33 1 102 2 128 1 207 2 60 1 252 1 213 1 308 1 86 1 87 1 66 1 147 1 237 1 367 2 190 2 315 1 152 1 
73 1 296 1 329 1 
73 1 184 1 296 1 
73 3 184 1 328 1 329 2 217 1 245 1 
73 2 184 1 16 1 329 1 217 1 245 1 
73 2 184 1 329 1 245 1 217 2 
0 1 133 1 348 1 1 1 92 1 199 1 226 1 299 1 326 1 230 1 270 1 202 4 33 1 58 1 102 1 208 1 207 1 234 1 211 2 60 5 169 1 309 1 364 1 44 1 365 1 284 1 219 1 237 5 367 1 190 1 132 1 370 1 116 1 117 1 191 2 239 1 
0 1 1 1 226 1 326 1 55 1 136 1 270 1 202 2 102 1 179 1 207 1 13 1 234 1 60 2 169 1 44 1 284 1 237 2 367 1 190 1 
0 1 133 1 348 1 199 1 92 4 134 1 54 1 230 2 270 3 202 2 33 1 58 1 208 1 211 1 60 3 186 2 309 1 365 3 219 1 237 3 132 1 370 1 116 2 91 1 191 2 239 1 
0 1 133 1 348 2 92 7 199 2 134 2 54 2 125 1 230 4 270 4 202 3 33 2 58 1 208 1 359 1 211 2 60 4 186 3 309 2 365 5 68 1 219 1 237 4 132 1 370 1 116 4 91 1 191 4 239 1 
197 1 349 1 
361 1 206 1 
161 1 
148 1 361 1 
196 1 197 2 361 1 280 1 281 1 161 1 148 1 
148 1 361 1 281 1 
361 1 124 1 
38 3 348 1 277 4 235 1 295 2 227 1 216 1 65 5 134 1 6 9 257 1 354 1 203 1 126 1 47 1 181 2 290 1 
38 3 348 1 277 4 235 1 295 2 227 1 216 1 65 5 134 1 6 9 257 1 354 1 203 1 126 1 47 1 181 2 290 1 
38 3 348 1 277 4 235 1 295 2 227 1 216 1 65 5 134 1 6 9 257 1 354 1 126 1 203 1 81 1 47 1 181 2 290 1 
257 1 177 1 235 2 203 1 65 1 6 1 181 1 
348 1 295 3 244 2 227 1 134 1 268 1 6 11 354 2 303 1 97 1 203 1 126 1 79 2 181 2 38 5 277 5 235 1 216 1 65 6 24 2 131 2 47 1 224 4 290 1 
73 2 121 1 293 1 296 1 52 1 174 1 328 1 231 1 139 1 304 1 163 1 329 1 330 1 356 1 140 1 100 1 247 1 142 1 182 1 144 1 184 1 276 2 210 1 15 1 253 1 236 1 368 1 222 1 112 2 288 1 
73 2 121 1 293 1 296 1 93 1 52 1 174 2 328 1 231 1 139 1 304 1 163 1 329 1 330 1 140 1 100 1 247 1 142 1 182 1 144 1 184 1 276 3 15 1 253 1 218 1 368 1 222 1 112 3 288 1 49 1 
73 2 121 1 293 1 296 1 93 1 52 1 174 2 328 1 139 1 304 1 163 1 330 1 140 1 329 1 247 1 142 1 144 1 184 1 276 2 253 1 218 1 368 1 222 1 112 2 288 1 
347 1 293 2 51 1 52 1 3 1 140 1 330 1 100 1 247 2 142 1 83 1 182 1 144 1 276 1 361 1 253 2 148 1 220 1 112 1 223 1 288 2 291 1 49 1 
73 2 121 1 293 1 296 1 93 1 52 1 328 1 231 1 304 1 163 1 329 1 330 1 140 1 100 1 247 1 142 1 182 1 144 1 184 1 276 1 210 1 15 1 253 1 236 1 112 1 288 1 
80 1 
133 1 156 1 123 1 294 1 198 1 265 1 226 2 52 2 3 2 228 1 299 1 140 1 330 2 102 1 141 1 143 1 142 2 83 1 207 1 208 1 144 1 39 1 60 3 214 2 361 1 279 1 188 1 364 1 365 1 148 1 219 1 23 1 237 3 25 1 190 1 223 1 70 1 90 1 26 1 191 1 239 1 
156 1 123 1 198 1 265 1 226 2 200 1 102 1 141 1 143 1 207 1 39 1 60 3 214 2 279 1 364 1 23 1 237 3 25 1 190 1 70 1 26 1 371 1 
153 1 0 1 156 1 123 1 198 1 226 1 265 1 270 1 102 1 141 1 143 1 207 1 39 1 60 3 214 3 279 1 364 1 23 1 237 3 25 1 190 1 70 1 26 1 371 1 
120 1 153 1 0 1 156 1 123 1 198 1 265 1 226 2 200 1 270 1 102 1 141 1 143 1 207 1 39 1 60 3 214 3 279 1 364 1 23 1 237 3 25 1 190 1 70 1 26 1 371 1 
0 5 153 4 72 1 120 4 133 1 156 1 123 1 198 1 265 1 226 7 76 1 200 4 2 1 299 1 270 5 102 1 141 1 143 1 207 1 39 1 14 2 185 2 60 5 214 6 166 1 279 1 64 2 186 2 108 1 364 3 365 1 67 2 219 1 23 1 237 5 25 1 190 1 287 1 70 1 71 1 26 1 191 1 371 1 239 1 
0 1 133 1 265 1 92 2 226 4 270 2 102 1 141 1 143 1 185 2 14 2 60 4 279 1 64 2 186 2 67 2 23 1 237 4 25 1 190 1 70 1 71 1 26 1 191 1 239 1 120 2 153 2 156 1 123 1 198 1 28 1 200 2 299 1 207 1 39 1 214 4 166 1 364 2 365 1 219 1 
0 1 153 2 120 2 133 1 156 1 123 1 198 1 226 4 265 1 200 2 2 1 299 1 270 1 102 1 141 1 143 1 207 1 39 1 14 2 185 2 60 4 214 4 166 1 279 1 64 2 186 2 108 1 364 2 365 1 67 2 219 1 23 1 237 4 25 1 190 1 287 1 70 1 71 1 26 1 191 1 239 1 
0 1 153 2 120 2 133 1 156 1 123 1 198 1 226 4 265 1 200 2 2 1 299 1 270 1 102 1 141 1 143 1 207 1 39 1 14 2 185 2 60 4 214 4 166 1 279 1 64 2 186 2 108 1 364 2 365 1 67 2 219 1 23 1 237 4 25 1 190 1 287 1 70 1 71 1 26 1 191 1 239 1 
0 1 153 2 120 2 320 1 193 1 133 1 156 1 123 1 198 1 226 4 92 2 265 1 200 2 299 1 11 2 270 1 102 1 141 1 143 1 207 1 39 1 185 2 212 1 60 4 214 4 279 1 64 2 19 2 364 2 365 1 219 1 23 1 237 4 25 1 190 1 287 1 70 1 71 1 26 1 191 1 239 1 
0 1 120 3 153 3 133 1 156 1 123 1 198 1 265 1 226 5 76 1 200 3 2 1 299 1 270 1 102 1 141 1 143 1 207 1 39 1 14 2 185 2 60 4 214 5 166 1 279 1 64 2 186 2 108 1 364 2 365 1 67 2 219 1 23 1 237 4 25 1 190 1 287 1 70 1 71 1 26 1 191 1 239 1 
0 1 120 3 153 3 133 1 156 1 123 1 198 1 265 1 226 5 76 1 200 3 2 1 299 1 270 1 102 1 141 1 143 1 207 1 39 1 14 2 185 2 60 4 214 5 166 1 279 1 64 2 186 2 108 1 364 2 365 1 67 2 219 1 23 1 237 4 25 1 190 1 287 1 70 1 71 1 26 1 191 1 239 1 
0 1 133 1 265 1 92 2 226 4 11 2 270 1 102 1 141 1 143 1 185 2 60 4 279 1 64 2 19 2 23 1 237 4 25 1 190 1 70 1 71 1 26 1 191 1 239 1 120 2 153 2 156 1 123 1 198 1 28 1 200 2 299 1 207 1 39 1 212 1 214 4 364 2 365 1 219 1 
321 1 348 1 349 1 295 2 227 1 244 1 134 1 6 8 354 1 98 1 31 1 126 1 79 1 249 1 181 1 38 3 335 1 277 4 216 1 65 4 310 1 66 3 24 1 131 1 47 1 290 1 224 2 
321 1 348 1 335 1 277 1 62 1 199 1 244 1 324 1 309 1 65 3 187 1 6 4 310 4 283 1 149 1 31 4 24 1 131 1 79 1 224 2 37 1 
321 1 1 1 244 1 52 1 3 1 5 1 6 2 7 1 159 1 98 1 140 1 330 1 271 1 205 1 79 1 102 1 332 1 142 1 207 2 144 1 335 1 277 1 62 1 361 1 63 1 42 1 65 1 281 1 66 1 148 1 110 1 24 1 131 1 367 1 190 2 46 1 289 1 224 2 
171 1 321 1 1 1 244 1 3 1 52 1 173 1 6 2 300 1 271 1 330 1 204 1 79 1 102 1 142 1 207 1 335 1 277 2 62 1 42 1 24 1 131 1 367 1 190 1 289 1 224 2 
129 1 330 1 52 1 3 1 142 1 
321 1 348 1 1 1 295 1 244 1 199 1 134 1 6 3 54 1 98 1 31 1 79 1 102 1 207 1 38 1 335 1 277 2 62 1 309 1 65 1 310 1 44 1 109 1 343 1 24 1 367 1 131 1 190 1 224 2 
38 1 321 1 335 1 348 1 244 1 199 1 65 2 6 2 340 1 310 1 354 1 98 1 31 1 24 1 131 1 79 1 249 1 224 2 
38 1 321 1 335 1 277 2 295 1 244 1 41 1 134 1 6 2 310 1 54 1 98 1 31 1 24 1 131 1 79 1 249 1 224 2 
321 1 348 1 295 1 199 1 244 1 134 1 6 4 54 1 31 2 98 2 79 1 249 1 38 1 335 1 277 2 65 2 309 1 310 2 24 1 131 1 224 2 
129 1 
129 1 
129 1 
321 1 348 1 295 1 199 1 244 1 134 1 6 4 54 1 31 2 98 2 79 1 38 1 335 1 277 2 65 2 309 1 310 2 24 1 131 1 224 2 
321 1 244 1 52 1 3 1 29 1 6 2 5 1 159 1 140 1 330 1 79 1 332 1 142 1 207 1 144 1 335 1 277 1 361 1 65 1 281 1 66 1 148 1 110 1 24 1 131 1 190 1 289 1 224 2 
321 1 244 1 267 1 52 1 3 1 6 2 5 1 159 1 140 1 330 1 79 1 273 1 142 1 305 1 207 1 144 1 335 1 277 1 361 1 65 1 281 1 66 1 148 1 24 1 131 1 190 1 289 1 224 2 
321 1 348 1 295 1 199 1 244 1 134 1 6 4 54 1 31 2 98 2 79 1 38 1 335 1 277 2 62 1 65 2 309 1 310 2 24 1 131 1 224 2 
321 1 348 1 295 1 199 1 244 1 52 1 134 1 29 1 6 4 5 1 54 1 98 2 31 2 140 1 330 1 356 1 79 1 332 1 142 1 207 1 38 1 144 1 277 2 335 1 361 1 337 1 65 2 309 1 281 1 310 2 148 1 110 1 24 1 131 1 190 1 224 2 
321 1 348 1 1 1 244 1 199 1 134 1 6 3 54 1 354 1 31 1 98 1 57 1 79 1 102 1 207 1 38 1 277 1 335 1 62 1 309 1 65 2 310 1 44 1 343 1 24 1 367 1 131 1 190 1 224 2 
154 3 157 1 348 3 295 1 244 4 199 3 324 1 266 1 30 1 134 1 6 22 54 1 95 1 354 2 303 2 176 2 97 1 101 1 164 1 79 4 331 1 38 3 40 1 277 9 362 1 84 1 65 13 309 3 283 2 149 2 69 1 24 4 131 4 224 8 
154 1 348 1 277 2 84 1 199 1 244 1 324 1 266 2 309 1 65 4 6 6 283 1 176 1 149 1 97 1 24 1 131 1 79 1 164 1 101 2 224 2 
154 3 157 1 348 3 295 1 244 4 199 3 324 1 266 1 30 1 134 1 6 22 54 1 95 1 354 2 303 2 176 2 97 1 101 1 164 1 79 4 331 1 38 3 40 1 277 9 362 1 84 1 65 13 309 3 283 2 149 2 69 1 24 4 131 4 224 8 
154 3 157 1 348 3 295 1 244 4 199 3 324 1 266 1 30 1 134 1 6 22 54 1 95 1 354 2 303 2 176 2 97 1 101 1 164 1 79 4 331 1 38 3 40 1 277 9 362 1 84 1 65 13 309 3 283 2 149 2 69 1 24 4 131 4 224 8 
154 3 157 1 348 4 295 3 227 1 244 3 199 3 324 1 266 1 30 1 134 2 6 30 54 1 95 1 354 3 303 2 176 2 97 1 126 1 101 1 164 1 79 3 181 1 38 6 40 1 277 13 362 1 84 1 216 1 65 17 309 3 283 2 149 2 69 1 24 3 131 3 47 1 290 1 224 6 
246 1 229 1 147 1 213 1 27 1 221 1 315 1 94 1 135 1 87 1 
269 1 252 1 
229 1 353 1 175 1 147 1 213 1 315 1 135 1 20 1 87 1 
60 1 213 1 27 1 86 2 94 1 135 1 87 1 341 1 229 1 312 1 147 1 270 1 237 1 221 1 315 1 36 1 358 1 128 1 
60 1 213 1 27 1 86 2 94 1 135 1 87 1 341 1 229 1 312 1 147 1 270 1 237 1 221 1 315 1 36 1 358 1 128 1 
60 1 213 1 27 1 86 2 94 1 135 1 87 1 341 1 229 1 312 1 147 1 270 1 237 1 221 1 315 1 36 1 358 1 128 1 
360 1 195 1 104 1 
360 1 195 1 104 1 
351 1 342 1 
360 1 351 1 342 1 
308 1 152 1 
1 2 298 1 135 1 229 1 269 1 99 1 12 1 202 1 33 1 102 2 36 1 207 2 60 1 252 1 213 1 308 1 86 1 341 1 87 1 66 1 147 1 237 1 367 2 190 2 315 1 118 1 152 1 
195 1 104 1 
360 1 351 1 342 1 
119 1 321 1 292 1 297 1 244 1 52 2 6 2 159 1 9 2 302 1 140 1 330 2 102 2 79 1 142 2 207 2 144 1 335 1 277 1 306 1 62 1 361 1 65 1 282 1 148 1 130 1 24 1 131 1 190 2 289 1 224 2 
73 2 184 1 144 1 15 1 158 1 296 1 93 1 85 1 52 2 328 1 286 1 304 1 163 1 329 1 140 1 330 2 356 1 288 1 142 2 
73 2 184 1 144 1 15 1 296 1 93 1 52 1 106 1 328 1 286 1 304 1 163 1 329 1 330 1 140 1 288 1 142 1 
144 1 347 1 158 1 361 1 3 1 52 1 325 1 148 1 140 1 330 1 223 1 288 1 142 1 83 1 
73 2 184 1 144 1 15 1 158 1 296 1 93 1 85 1 52 1 328 1 286 1 304 1 163 1 329 1 140 1 330 1 288 1 142 1 
160 1 
0 1 365 1 165 1 270 1 349 1 369 1 191 1 
0 1 133 1 92 1 226 1 299 1 270 2 14 1 60 1 166 1 186 1 364 1 365 1 219 1 67 1 237 1 191 1 239 1 
0 2 171 2 133 4 226 5 92 12 3 1 52 3 134 2 54 2 230 6 270 8 140 4 330 3 142 3 144 3 60 5 186 6 281 3 146 2 148 3 237 5 151 2 113 1 238 2 116 6 114 2 191 8 239 4 240 1 348 2 294 1 196 1 197 2 124 2 199 2 299 4 301 1 356 1 357 2 206 3 250 1 208 2 165 1 39 2 361 8 309 2 254 2 364 3 365 9 219 4 369 1 317 2 48 1 319 2 
0 2 133 2 157 1 348 4 294 1 226 1 92 6 199 4 324 1 30 1 134 4 299 2 95 1 54 4 176 1 230 7 270 5 208 1 40 1 60 1 186 3 339 1 309 4 364 1 365 12 283 1 219 2 149 2 45 1 69 1 237 1 111 1 151 2 114 1 116 7 191 8 239 2 
133 1 348 2 1 1 227 1 134 1 299 1 326 1 102 1 207 1 234 1 60 1 216 1 169 1 108 1 44 1 365 2 284 1 219 1 237 1 151 2 367 1 190 1 314 1 114 1 47 1 191 2 239 1 
0 1 165 1 133 1 299 1 365 1 219 1 270 1 369 1 191 1 239 1 
171 1 348 2 199 2 92 10 186 5 309 2 134 2 54 2 365 5 230 5 270 5 151 2 114 1 116 5 191 5 
0 1 60 1 270 1 237 1 226 1 364 1 
133 2 294 2 226 4 228 1 52 4 3 2 299 1 327 1 140 1 330 4 142 4 83 1 127 1 208 2 144 1 60 3 361 1 188 1 364 2 365 2 148 1 219 2 237 3 223 1 113 2 91 1 191 2 239 2 48 1 
321 1 1 2 244 1 52 1 3 1 29 1 6 1 5 1 330 1 140 1 79 1 102 2 332 1 142 1 207 3 234 1 144 1 277 1 335 1 336 1 361 1 281 1 44 2 66 1 148 1 110 1 24 1 367 2 131 1 190 3 289 1 224 2 
0 2 133 1 294 1 92 4 186 2 299 1 365 1 219 1 230 2 270 4 116 2 181 1 191 2 239 1 208 1 
183 1 229 1 135 1 
229 1 94 1 135 1 152 1 8 1 
183 1 229 1 135 1 
183 1 229 1 135 1 
229 1 262 1 135 1 
229 1 262 1 135 1 
229 1 262 1 135 1 
229 1 135 1 
315 1 87 1 
38 3 348 1 277 4 295 2 244 2 227 1 216 1 65 4 134 1 6 8 354 1 303 1 24 2 131 2 126 1 79 2 181 1 47 1 224 4 290 1 
38 3 348 1 277 4 349 1 295 2 227 1 216 1 65 4 134 1 6 8 354 1 126 1 181 1 47 1 290 1 
38 2 277 2 348 1 295 1 244 1 199 1 309 1 65 2 134 1 107 1 6 4 54 1 354 1 24 1 131 1 79 1 224 2 
283 1 348 1 277 1 176 1 149 1 199 1 324 1 309 1 65 3 6 4 
283 1 348 1 277 1 149 1 199 1 324 1 309 1 65 3 187 1 6 4 
283 1 277 1 6 1 
149 1 65 1 6 1 
171 1 38 4 277 3 348 1 295 2 244 1 199 1 309 1 65 3 107 1 134 1 6 6 54 1 354 2 24 1 131 1 79 1 224 2 
348 1 277 1 199 1 244 1 324 1 309 1 65 3 6 4 95 1 283 1 176 1 97 1 149 1 24 1 131 1 79 1 224 2 
38 2 348 1 277 3 295 1 227 1 216 1 65 3 134 1 6 6 354 1 47 1 
38 2 277 2 295 1 227 1 244 1 216 1 65 1 6 3 354 1 303 1 24 1 126 1 131 1 79 1 316 1 224 2 290 1 
38 4 277 5 348 2 295 2 227 1 216 1 65 5 134 2 6 10 354 2 314 1 47 1 
38 1 348 1 244 1 199 1 65 2 6 2 354 1 97 1 24 1 131 1 79 1 224 2 
38 1 277 2 348 1 295 1 244 1 199 1 309 1 65 2 134 1 6 4 54 1 97 1 24 1 131 1 79 1 224 2 
38 2 277 1 295 1 244 1 227 1 216 1 65 1 6 2 354 1 97 1 24 1 131 1 79 1 224 2 
348 2 295 3 244 4 227 2 134 2 6 15 354 3 176 1 303 1 97 1 126 1 79 4 331 1 233 1 38 6 277 8 216 2 65 7 107 1 283 1 149 1 24 4 131 4 314 1 316 1 47 1 224 8 290 1 
348 2 157 1 295 2 244 3 199 2 30 1 134 1 6 12 95 1 54 1 354 1 176 1 303 2 97 1 79 3 38 3 40 1 277 5 65 7 309 2 283 1 149 1 69 1 24 3 131 3 224 6 
348 1 277 1 199 1 244 2 324 1 309 1 65 3 107 1 6 4 95 1 283 1 176 1 149 1 97 1 24 2 131 2 79 2 224 4 
348 1 277 1 199 1 244 1 324 1 309 1 65 3 6 4 95 1 283 1 176 1 97 1 149 1 24 1 131 1 79 1 224 2 
348 1 277 1 199 1 244 1 324 1 309 1 65 3 6 4 95 1 283 1 176 1 97 1 149 1 24 1 131 1 79 1 224 2 
348 2 157 1 295 2 244 3 199 2 30 1 134 1 6 12 95 1 54 1 354 1 176 1 303 2 97 1 79 3 38 3 40 1 277 5 65 7 309 2 283 1 149 1 69 1 24 3 131 3 224 6 
348 1 277 1 199 1 244 1 324 1 309 1 65 3 6 4 95 1 283 1 176 1 97 1 149 1 24 1 131 1 79 1 224 2 
348 1 277 1 199 1 244 2 324 1 309 1 65 3 107 1 6 4 95 1 283 1 176 1 149 1 97 1 24 2 131 2 79 2 224 4 
348 1 277 1 199 1 244 2 324 1 309 1 65 3 6 4 95 1 283 1 176 1 149 1 97 1 24 2 131 2 79 2 331 1 224 4 
38 4 277 2 295 2 227 2 216 2 65 2 6 4 354 2 126 2 290 1 
348 1 277 1 199 1 244 2 324 1 309 1 65 3 6 4 95 1 283 1 176 1 149 1 97 1 24 2 131 2 79 2 331 1 224 4 
66 1 278 1 265 1 190 1 102 1 207 1 261 1 
66 1 278 1 265 1 190 1 145 1 272 1 105 1 102 1 207 1 261 1 318 1 43 1 
144 1 148 1 361 1 349 1 140 1 330 1 223 1 52 1 3 1 83 1 142 1 
144 1 1 1 361 1 42 1 3 1 52 1 281 1 5 1 66 1 148 1 140 1 367 1 330 1 190 2 102 1 332 1 142 1 207 2 
144 1 1 1 124 1 361 3 42 1 52 1 254 1 281 2 5 1 148 2 140 1 367 1 330 1 190 1 113 1 102 1 332 1 142 1 207 1 
144 1 1 1 124 1 361 3 42 1 52 1 254 1 281 2 5 1 148 2 140 1 367 1 330 1 190 1 113 1 102 1 273 1 142 1 207 1 
0 1 144 1 39 1 322 1 60 2 197 1 124 1 361 3 226 1 3 1 52 3 281 1 254 1 4 1 148 1 270 1 237 2 140 1 330 3 113 1 232 1 206 1 142 3 
0 1 144 1 39 1 322 1 60 2 197 1 124 1 361 3 226 1 3 1 52 3 281 1 254 1 146 1 148 1 270 1 237 2 140 1 330 3 113 1 206 1 142 3 
144 1 264 1 140 1 330 1 52 1 142 1 
144 1 196 1 361 1 3 1 52 1 281 1 148 1 137 1 313 1 330 1 140 2 142 1 346 1 
321 1 348 2 1 1 295 2 227 1 244 1 52 1 134 2 173 1 6 10 354 2 356 1 330 1 126 1 79 1 102 1 59 1 142 1 207 1 38 4 277 5 335 1 306 1 62 1 279 1 216 1 65 5 42 1 66 2 24 1 131 1 367 1 314 1 190 1 47 1 224 2 290 1 
0 1 133 2 197 1 226 2 3 1 52 1 299 2 270 1 330 1 202 1 140 1 206 1 142 1 144 1 165 1 39 1 60 3 361 2 281 1 146 1 254 1 364 1 365 1 148 1 219 2 237 3 369 1 238 1 191 1 317 1 239 2 48 1 319 1 
144 1 197 1 196 1 264 1 361 1 52 1 281 1 161 1 148 1 330 1 140 2 142 1 250 1 
144 1 322 1 361 1 3 1 52 4 148 1 140 1 330 4 356 1 223 1 35 1 142 4 83 1 
144 1 361 1 52 1 281 1 148 1 138 1 313 1 178 1 330 1 140 2 142 1 274 1 346 1 
73 1 184 1 144 1 296 1 163 1 140 1 330 1 52 1 3 1 142 1 
144 1 148 1 302 1 361 1 297 1 140 1 93 1 330 2 356 1 52 2 142 2 
144 2 361 3 297 1 3 1 52 5 148 2 285 1 330 5 356 1 140 2 32 1 223 1 35 1 113 1 83 1 142 4 
144 2 361 3 297 1 3 1 52 5 21 1 148 2 330 5 356 1 140 2 32 1 223 1 35 1 113 1 83 1 142 4 
144 1 1 1 361 1 42 1 3 1 52 1 281 1 5 1 66 1 148 1 140 1 367 1 330 1 190 2 102 1 273 1 142 1 207 2 
144 1 196 1 361 1 52 1 281 1 148 1 137 1 313 1 330 1 140 2 113 1 142 1 346 1 
66 1 194 1 155 1 215 1 352 1 
0 1 275 1 39 1 194 2 156 1 172 1 155 2 60 2 198 1 279 1 215 2 352 1 66 1 88 1 270 1 237 2 202 1 25 1 251 1 
194 1 292 1 215 1 352 1 282 1 130 1 190 1 102 1 207 1 
172 1 251 1 352 1 
139 1 349 1 368 1 222 1 
276 1 139 1 368 1 222 1 112 1 100 1 182 1 
276 1 293 1 253 1 
241 1 276 3 263 1 307 2 350 1 236 1 139 1 368 1 100 1 112 3 222 1 182 1 
258 1 276 2 139 1 368 1 222 1 112 2 100 1 174 1 182 1 
73 1 276 1 296 1 363 1 255 1 236 1 329 1 100 1 112 1 368 1 182 1 
236 1 276 1 139 1 368 1 112 1 100 1 182 1 
236 1 276 1 139 2 222 1 112 1 100 1 182 1 
276 2 236 1 139 1 189 1 368 1 100 2 112 2 115 1 103 1 182 2 
276 3 61 1 255 1 174 2 236 1 22 1 162 1 139 1 222 1 100 1 112 3 368 2 182 1 
184 1 73 2 276 2 50 1 296 1 174 1 236 1 328 1 139 1 329 1 368 1 222 1 100 1 112 2 182 1 
276 4 255 1 174 2 236 1 96 1 258 1 22 1 139 1 222 1 100 2 112 4 368 2 182 2 
236 1 276 1 139 1 368 1 222 1 112 1 100 1 182 1 
242 1 276 4 263 1 307 1 350 1 255 1 174 2 22 1 139 2 222 2 112 4 100 1 368 3 182 1 
276 2 53 1 174 1 236 1 139 1 150 1 368 1 100 1 112 2 222 1 77 1 182 1 
276 3 263 2 307 2 350 1 338 1 236 1 139 1 368 1 100 1 112 3 222 1 182 1 
75 1 167 2 368 2 180 1 
236 1 276 1 366 1 112 1 100 1 182 1 
236 1 276 2 162 1 139 1 368 1 222 1 112 2 100 1 174 1 182 1 
225 1 
236 1 276 1 139 1 368 1 222 1 112 1 100 1 182 1 
276 3 307 1 174 1 236 1 162 1 139 1 100 1 112 3 222 1 368 1 182 1 
242 1 22 1 368 1 255 1 
139 1 368 1 

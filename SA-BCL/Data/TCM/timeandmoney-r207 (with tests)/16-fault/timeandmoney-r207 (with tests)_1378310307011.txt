#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 219 167 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 219 167 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (46,274,276) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (46,274,276) 262 1 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (46,274,276) 262 144 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 102 (72,240,313) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (71,222) (71,222) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 261 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 235 65 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 96 110 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (46,274,276) (46,274,276) 130 178 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 200 189 233 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (71,222) (71,222) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (71,222) (71,222) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (71,222) (71,222) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 193 69 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 200 162 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 104 (121,159) 300 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 15 112 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 200 162 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 200 189 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 200 188 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (99,211) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (57,272) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 200 189 233 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (46,274,276) 262 126 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 90 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
81 1 302 2 209 1 305 1 39 3 216 2 44 1 170 1 49 3 245 1 157 1 93 1 78 2 
49 1 209 1 158 1 39 1 216 1 78 1 
49 1 209 1 158 1 39 1 216 1 78 1 
49 1 209 1 158 1 39 1 216 1 78 1 
49 1 209 1 158 1 39 1 216 1 78 1 
120 2 81 1 207 1 302 3 209 1 305 2 308 1 39 4 216 1 44 3 155 1 219 1 70 1 141 1 49 4 157 1 93 1 78 1 
81 1 207 1 302 1 253 1 100 1 209 1 255 1 236 1 39 2 308 1 216 1 47 1 49 2 245 1 93 1 78 1 
302 1 209 1 305 1 167 1 39 4 216 2 44 2 170 1 219 1 49 4 245 1 157 1 35 1 204 1 78 2 
302 1 209 1 305 1 167 1 39 4 216 2 44 2 170 1 219 1 49 4 245 1 157 1 35 1 204 1 78 2 
274 1 108 1 
274 1 108 1 
111 1 127 1 274 2 64 1 319 1 108 1 
90 1 
46 1 51 1 54 1 256 1 276 1 94 1 
46 1 51 1 54 1 20 1 256 1 168 1 285 1 
274 1 108 1 
274 1 108 1 
274 1 
20 1 41 1 256 2 133 2 285 1 168 1 51 2 226 1 54 2 
42 1 160 1 299 1 
57 1 123 1 210 1 9 2 133 1 213 1 40 1 152 1 196 1 139 1 242 1 244 1 51 1 263 1 29 2 54 1 31 1 183 1 145 2 
90 1 
14 1 51 3 54 3 20 3 133 1 256 3 285 1 168 3 
223 1 51 1 54 1 20 1 256 1 161 1 168 1 
223 1 51 1 226 1 54 1 20 1 41 1 256 1 168 1 285 1 
46 1 1 1 14 1 289 1 262 1 226 1 51 2 54 2 20 2 256 2 285 1 168 2 
14 1 203 1 51 2 54 2 20 1 133 1 256 2 168 1 94 1 
46 1 14 1 289 1 262 1 51 1 144 1 54 1 20 1 256 1 168 1 
14 1 51 2 226 1 54 2 20 2 42 1 256 2 168 2 285 1 299 1 
57 1 123 1 210 1 9 1 133 1 40 1 213 1 242 1 139 1 244 1 51 1 263 1 29 1 54 1 145 1 
123 1 99 1 210 1 9 1 133 1 40 1 213 1 139 1 244 1 51 1 263 1 29 1 181 1 54 1 145 1 
279 1 42 2 257 1 134 1 286 1 259 1 290 2 224 1 50 1 299 2 62 4 267 1 192 1 238 2 269 1 66 1 243 1 68 1 25 1 247 2 317 1 33 1 160 2 34 1 
61 1 223 1 51 1 309 1 54 1 20 1 256 1 168 1 
57 1 123 1 210 1 9 1 20 1 42 1 213 1 256 1 40 1 168 1 14 1 139 1 242 1 289 1 244 1 51 2 263 1 29 1 54 2 145 1 
20 4 256 5 133 1 168 4 285 1 14 2 289 1 87 1 203 1 315 1 51 5 226 1 54 5 94 1 
61 1 223 1 51 2 54 2 20 2 256 2 161 1 168 2 
240 1 102 1 72 1 296 1 
313 1 72 1 296 1 
72 1 296 1 
72 1 296 1 
240 1 102 1 72 1 296 1 
240 1 102 1 72 1 296 1 
240 1 102 1 
190 1 72 1 296 1 
190 1 72 1 296 1 
190 1 72 1 296 1 
72 1 296 1 106 1 
72 1 296 1 106 1 
72 1 296 1 106 1 
36 1 2 1 129 2 45 2 136 1 71 1 222 1 114 2 142 2 72 2 274 2 296 2 17 2 
36 1 129 1 20 1 256 1 193 1 168 1 45 1 51 1 114 1 142 1 274 1 72 1 54 1 296 1 17 1 
4 2 207 2 70 1 255 1 132 1 
207 1 70 1 308 1 
207 1 255 1 308 1 
122 1 4 1 207 3 70 2 255 1 132 1 
4 1 207 2 70 1 255 1 132 1 22 1 
261 1 274 1 108 1 
250 1 80 1 199 1 274 2 108 2 
127 1 235 1 101 1 307 1 64 1 108 1 221 1 111 1 202 1 274 2 319 1 
235 1 127 1 101 1 307 1 64 1 65 1 221 1 111 1 202 1 274 1 319 1 
228 1 
90 1 
38 1 213 1 
263 1 213 1 
123 1 213 2 217 1 288 1 89 2 263 1 228 1 
123 1 263 1 213 1 
150 1 213 1 
18 1 146 1 234 1 3 1 62 7 282 1 66 2 198 1 290 3 25 3 292 2 227 1 247 4 16 1 33 1 34 1 186 1 163 1 
279 1 3 1 82 1 254 1 282 1 257 3 174 4 290 15 292 3 225 3 224 3 227 1 50 1 15 1 179 1 230 1 16 2 186 1 18 2 146 2 234 5 62 31 192 1 238 2 66 5 243 1 25 10 316 1 247 16 115 1 30 3 33 4 34 4 163 2 
119 1 279 2 3 1 282 1 290 4 292 2 50 2 227 1 179 1 16 1 92 1 18 1 146 1 234 1 62 9 192 2 238 4 66 3 243 2 25 4 247 5 33 1 34 1 163 1 
18 1 146 1 234 1 3 1 62 7 282 1 66 2 290 3 25 3 292 2 227 1 247 4 16 1 33 1 34 1 186 1 163 1 
18 1 146 1 234 1 3 1 62 7 282 1 66 2 290 3 25 3 292 2 227 1 247 4 16 1 33 1 34 1 186 1 163 1 
9 1 39 1 40 1 213 1 216 1 139 1 49 1 263 1 294 1 145 1 97 1 148 2 98 1 303 2 306 1 103 1 197 1 312 1 244 1 245 2 29 1 205 2 78 1 
122 1 207 2 6 1 280 1 209 1 8 1 255 1 9 1 39 1 11 1 216 1 172 1 139 1 49 1 145 1 148 1 303 1 308 1 70 1 244 1 28 1 245 1 29 1 73 1 205 1 78 1 
122 1 81 1 207 2 6 1 280 1 209 1 8 1 255 1 9 1 39 2 216 1 44 1 172 1 139 1 49 2 295 1 145 1 93 1 148 1 302 1 303 1 308 1 70 1 244 1 28 1 245 1 29 1 73 1 205 1 78 1 
122 1 81 1 207 2 280 1 8 1 255 1 9 1 39 3 11 1 216 1 44 2 172 1 139 1 49 3 145 1 93 1 148 1 302 1 303 1 308 1 197 1 70 1 273 1 244 1 28 1 245 1 29 1 73 1 205 1 78 1 
122 1 81 1 207 2 255 1 9 1 39 2 11 1 44 2 172 1 139 1 49 2 145 1 93 1 148 1 302 1 303 1 308 1 70 1 273 1 244 1 28 1 245 1 29 1 73 1 205 1 
271 1 
96 1 127 1 307 1 9 1 64 1 40 1 138 1 110 1 202 1 274 1 29 1 145 1 319 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
274 1 
60 1 127 1 130 1 256 1 64 1 46 1 138 1 220 1 178 1 51 1 274 1 54 1 276 1 319 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
46 1 220 1 60 1 178 1 51 1 130 1 274 1 54 1 256 1 276 1 94 1 
60 1 127 1 130 1 256 1 64 1 46 1 138 1 220 1 178 1 51 1 274 1 54 1 276 1 319 1 94 1 
278 1 279 2 123 1 128 1 131 1 9 4 10 1 256 1 213 3 40 2 168 1 14 1 139 2 290 1 51 1 50 2 263 3 295 1 54 1 145 4 183 1 97 1 233 1 265 1 189 1 98 1 62 2 267 1 237 1 20 1 192 2 238 4 269 2 310 1 270 1 243 2 68 2 200 1 244 3 247 1 29 4 
279 1 42 1 256 1 257 1 168 1 285 1 290 2 225 1 224 1 226 1 50 1 51 1 54 1 299 1 62 3 20 1 192 1 238 2 107 1 66 1 269 1 243 1 68 1 25 1 247 1 75 1 160 1 33 1 34 1 
269 1 279 1 243 1 68 1 50 1 90 1 267 1 192 1 238 2 
279 2 10 1 133 1 42 11 214 1 257 1 169 1 174 3 290 6 225 2 224 2 50 2 15 1 299 4 234 1 62 14 192 2 238 4 107 1 310 1 66 1 269 2 243 2 68 1 25 2 247 8 316 1 30 3 275 1 32 1 160 11 33 1 34 2 
279 1 123 1 210 1 9 1 10 1 133 1 213 1 40 1 256 1 168 1 14 1 137 1 139 1 289 1 290 1 291 1 51 2 50 1 263 1 54 2 145 1 299 1 57 1 62 2 20 1 192 1 107 1 238 2 269 1 310 1 242 1 243 1 68 1 201 1 244 1 247 1 29 1 31 1 
3 1 251 2 10 1 9 3 11 1 256 1 257 2 168 1 14 1 86 2 263 2 16 1 184 1 18 1 20 1 192 3 107 1 195 2 269 3 25 8 29 3 33 3 34 3 279 3 123 2 210 2 281 1 133 2 282 1 40 1 213 2 42 7 135 1 139 2 289 1 290 10 292 1 225 2 224 2 227 1 50 3 51 3 54 3 145 3 299 7 57 2 234 4 62 20 238 6 310 1 66 4 241 2 242 2 68 3 243 3 244 2 247 10 159 2 160 7 
279 1 234 1 62 2 267 1 42 1 192 1 238 2 269 1 259 1 68 1 243 1 25 1 224 1 50 1 247 2 160 1 34 1 299 1 
279 1 62 2 267 1 42 1 192 1 257 1 238 2 286 1 66 1 269 1 68 1 243 1 25 1 290 2 50 1 160 1 33 1 299 1 
279 1 42 2 257 1 290 2 224 1 225 1 50 1 299 2 234 1 62 4 267 1 192 1 238 2 269 1 66 1 243 1 68 1 25 2 247 2 160 2 33 1 34 1 
279 1 234 1 128 1 62 2 42 1 192 1 238 2 269 1 259 1 68 1 243 1 25 1 224 1 50 1 247 2 160 1 34 1 299 1 
279 1 128 1 62 2 42 1 192 1 257 1 238 2 286 1 66 1 269 1 68 1 243 1 25 1 290 2 50 1 160 1 33 1 299 1 
279 1 128 1 42 2 257 1 290 2 224 1 225 1 50 1 299 2 234 1 62 4 192 1 238 2 269 1 66 1 243 1 68 1 25 2 247 2 160 2 33 1 34 1 
279 1 234 1 62 4 42 2 257 1 192 1 238 2 66 1 269 1 68 1 243 1 290 2 25 2 225 1 224 1 50 1 247 2 33 1 160 2 34 1 299 2 
279 1 123 1 210 1 9 1 10 1 133 1 40 1 213 1 139 1 290 1 51 1 50 1 263 1 54 1 145 1 57 1 62 2 192 1 238 2 195 1 310 1 269 1 242 1 68 1 243 1 244 1 247 1 29 1 
279 1 123 1 7 1 210 1 9 1 10 1 133 1 40 1 213 1 139 1 290 1 51 1 50 1 263 1 181 1 54 1 145 1 99 1 62 2 192 1 238 2 310 1 269 1 68 1 243 1 244 1 247 1 29 1 
279 1 42 2 257 1 290 2 224 1 225 1 50 1 299 2 234 1 62 4 192 1 238 2 107 1 269 1 66 1 243 1 68 1 25 2 247 2 160 2 33 1 34 1 
279 1 123 1 251 1 210 1 9 1 42 2 213 1 257 1 139 1 290 2 224 1 225 1 51 1 50 1 263 1 295 1 54 1 145 1 299 2 57 1 234 1 62 4 192 1 238 2 195 1 66 1 269 1 242 1 68 1 243 1 25 2 244 1 247 2 29 1 33 1 160 2 34 1 
279 1 206 1 256 1 42 1 257 1 168 1 285 1 290 1 225 1 224 1 226 1 50 1 51 1 54 1 299 1 234 1 62 3 20 1 192 1 238 2 107 1 269 1 243 1 68 1 25 1 247 2 33 1 160 1 34 1 
0 1 164 2 279 2 283 1 257 3 83 1 174 2 290 10 225 3 224 3 50 2 15 1 92 1 147 1 234 3 62 19 63 2 268 1 192 2 238 4 66 3 243 2 25 6 156 1 247 9 316 1 30 1 117 1 33 3 34 3 
164 4 279 3 283 1 257 2 83 2 84 1 174 2 290 12 225 3 224 3 50 3 179 2 15 2 91 1 92 1 147 1 234 2 62 26 63 1 268 2 192 3 239 1 238 6 66 2 109 1 243 3 25 4 112 1 27 1 247 14 30 2 117 1 33 2 34 3 
164 4 3 1 257 4 83 1 84 1 174 4 15 3 179 1 91 1 16 1 92 1 18 1 192 3 268 2 109 1 25 8 112 1 27 1 116 1 30 3 117 1 33 5 34 5 279 3 283 1 282 1 290 21 224 4 225 4 292 1 50 3 227 1 147 1 234 4 62 41 63 1 238 6 239 1 66 4 243 3 156 1 316 1 247 20 
164 4 279 4 3 1 282 1 283 1 257 3 83 1 84 1 174 4 290 18 292 1 225 4 224 4 227 1 50 4 179 2 15 3 91 1 16 1 92 1 18 1 147 1 234 3 62 38 63 1 268 2 192 4 239 1 238 8 109 1 66 4 243 4 112 1 25 7 27 1 156 1 247 20 316 1 116 1 30 3 117 1 33 4 34 5 
164 4 279 2 3 1 282 1 283 1 257 7 83 1 84 1 174 4 290 25 292 1 225 7 224 7 227 1 50 2 179 1 15 2 91 1 16 1 92 1 18 1 147 1 234 7 62 52 63 1 268 1 192 2 239 1 238 4 109 1 66 7 243 2 112 1 25 14 27 1 247 27 316 2 30 4 117 1 32 2 33 8 34 8 
232 1 24 1 165 1 142 1 114 1 72 1 129 1 297 1 296 1 17 1 
313 1 264 1 
171 1 59 1 142 1 114 1 72 1 129 1 318 1 296 1 17 1 
36 1 2 1 129 1 45 2 136 1 71 1 222 1 114 1 142 1 274 1 72 1 296 1 17 1 
36 1 2 1 129 1 45 2 136 1 71 1 222 1 114 1 142 1 274 1 72 1 296 1 17 1 
36 1 2 1 129 1 45 2 136 1 71 1 222 1 114 1 142 1 274 1 72 1 296 1 17 1 
85 1 190 1 77 1 
85 1 190 1 77 1 
37 1 106 1 
37 1 106 1 77 1 
48 1 56 1 
2 1 69 1 142 1 114 1 274 1 72 1 129 1 296 1 193 1 45 1 136 1 108 1 17 1 
85 1 190 1 
37 1 106 1 77 1 
278 1 279 1 123 1 252 1 131 1 10 1 9 2 213 2 256 2 287 1 139 1 290 1 51 2 50 1 263 2 54 2 145 2 183 2 265 1 301 1 62 2 237 1 192 1 107 1 194 1 238 2 269 1 310 1 270 1 243 1 68 1 200 1 244 2 247 1 29 2 162 1 
97 1 148 1 98 1 9 1 103 1 213 1 40 1 154 1 139 1 260 1 244 1 263 1 29 1 145 1 
122 1 207 2 148 1 125 1 255 1 8 1 308 1 9 1 11 1 154 1 172 1 139 1 70 1 244 1 177 1 28 1 29 1 145 1 
122 1 207 2 148 1 125 1 255 1 8 1 308 1 9 2 11 1 154 1 172 1 139 1 70 1 244 1 177 1 28 1 29 2 295 1 145 2 
122 1 207 2 148 1 255 1 8 1 308 1 9 1 11 1 105 1 172 1 139 1 70 1 244 1 177 1 28 1 29 1 145 1 
311 1 
138 1 124 1 127 1 21 1 64 1 319 1 
224 1 225 1 202 1 21 1 33 1 257 1 34 1 
29 1 9 1 145 1 40 1 
90 1 
138 1 202 1 127 1 21 1 76 1 64 1 215 1 319 1 
121 1 123 1 38 1 127 1 307 1 9 1 104 1 213 2 64 1 40 1 138 1 139 1 288 1 244 2 202 1 263 1 143 1 29 1 145 1 319 1 300 1 
138 1 174 1 112 1 202 1 127 1 15 1 30 1 21 1 64 1 319 1 
95 1 18 1 127 1 21 2 151 1 64 1 23 1 138 1 202 1 227 1 274 1 16 1 33 1 34 2 319 1 277 2 
138 1 58 1 202 1 127 1 307 1 21 1 64 1 319 1 
232 1 19 1 142 1 114 1 56 1 
142 1 114 1 43 1 
142 1 114 1 43 1 
142 1 114 1 43 1 
142 1 114 1 180 1 
142 1 114 1 180 1 
142 1 114 1 180 1 
142 1 114 1 
72 1 296 1 
95 1 18 2 279 1 234 2 62 10 192 1 238 2 66 3 243 1 25 5 290 5 50 1 227 1 247 5 16 2 92 1 33 2 34 2 
279 1 234 1 62 2 192 1 238 2 243 1 25 1 224 1 50 1 247 2 92 1 34 1 
279 1 234 1 62 4 257 1 192 1 238 2 66 1 243 1 290 2 25 2 225 1 224 1 50 1 247 2 33 1 92 1 34 1 
18 1 279 3 234 1 62 3 192 3 238 6 66 1 218 1 243 3 290 2 25 2 156 1 50 3 179 1 247 1 16 1 92 1 
79 1 279 4 3 1 254 1 282 1 257 3 174 4 290 15 292 1 225 3 224 3 227 1 50 4 179 1 15 1 230 1 16 2 92 1 18 2 234 5 62 29 192 4 238 8 66 5 243 4 25 10 156 1 115 1 247 14 316 1 30 3 33 4 34 4 
18 1 279 2 234 1 3 1 62 8 282 1 192 2 238 4 66 2 243 2 290 4 25 3 292 1 227 1 50 2 247 4 179 1 16 1 33 1 34 1 
90 1 
79 1 279 1 234 1 62 4 257 1 192 1 238 2 66 1 243 1 290 2 25 2 225 1 224 1 50 1 247 2 33 1 34 1 
234 1 62 7 257 1 66 1 174 2 290 4 25 2 225 1 224 1 15 1 247 3 316 1 30 1 33 1 34 1 
279 2 3 1 282 1 257 2 169 1 218 1 174 2 290 12 292 1 224 2 225 2 227 1 50 2 179 2 16 2 18 2 234 4 62 23 192 2 238 4 66 5 243 2 25 9 316 1 247 11 30 2 32 1 33 3 34 3 
174 1 290 1 62 1 
62 1 247 1 30 1 
79 1 279 1 234 1 62 6 192 1 257 1 238 2 66 2 241 1 243 1 290 3 25 3 225 1 224 1 50 1 247 3 33 1 34 1 
279 1 257 2 174 1 290 6 225 2 224 2 50 1 15 1 91 1 92 1 234 1 62 12 192 1 238 2 239 1 109 1 66 1 243 1 112 1 25 2 27 1 247 6 30 1 33 2 34 2 
18 1 234 1 62 6 66 1 290 3 25 2 227 1 247 3 16 1 33 1 34 1 
18 1 279 1 234 1 3 1 62 3 282 1 192 1 238 2 66 1 218 1 243 1 25 2 290 2 50 1 247 1 179 1 16 1 
279 1 3 1 282 1 174 1 290 4 292 1 50 1 227 1 15 1 16 1 92 1 18 1 62 8 192 1 238 2 66 2 243 1 112 1 25 2 247 4 30 1 33 1 34 1 
79 1 279 2 3 1 282 1 174 2 290 5 292 1 225 1 224 1 227 1 50 2 15 1 16 1 92 1 18 1 234 1 62 11 192 2 238 4 66 2 243 2 112 1 25 3 247 6 316 1 30 1 33 1 34 2 
79 1 279 3 3 1 282 1 257 2 174 1 290 10 292 1 225 2 224 2 227 1 50 3 15 1 179 1 91 1 16 1 92 1 18 1 234 1 62 19 192 3 239 1 238 6 109 1 66 3 243 3 112 1 25 4 27 1 247 9 30 1 33 3 34 3 
79 1 279 3 3 1 282 1 257 1 174 1 290 7 292 1 225 2 224 2 227 1 50 3 179 1 15 1 91 1 16 1 92 1 18 1 234 2 62 17 192 3 238 6 239 1 109 1 66 3 243 3 112 1 25 5 27 1 247 10 30 1 33 2 34 3 
279 1 3 1 282 1 174 1 290 4 292 1 50 1 227 1 15 1 16 1 92 1 18 1 62 8 192 1 238 2 66 2 243 1 112 1 25 2 247 4 30 1 33 1 34 1 
279 1 257 2 174 1 290 6 225 2 224 2 50 1 15 1 91 1 92 1 234 1 62 12 192 1 238 2 239 1 109 1 66 1 243 1 112 1 25 2 27 1 247 6 30 1 33 2 34 2 
79 1 279 4 3 1 282 1 257 1 174 1 290 8 292 1 225 2 224 2 227 1 50 4 15 1 179 2 91 1 16 1 92 1 18 1 234 2 62 18 192 4 239 1 238 8 109 1 66 3 243 4 112 1 25 5 27 1 247 10 30 1 33 2 34 3 
279 4 257 2 174 1 290 7 225 3 224 3 50 4 15 1 179 2 91 1 92 1 234 3 62 16 192 4 239 1 238 8 109 1 66 3 243 4 112 1 25 6 27 1 156 1 247 9 30 1 33 2 34 3 
18 3 3 2 234 3 62 7 282 1 66 3 290 4 25 6 227 1 247 3 16 3 33 1 34 1 
279 4 3 1 282 1 257 1 174 1 290 8 292 1 225 2 224 2 227 1 50 4 15 1 179 2 91 1 16 1 92 1 18 1 234 1 62 18 192 4 239 1 238 8 109 1 66 3 243 4 112 1 25 4 27 1 156 1 247 10 30 1 33 2 34 3 
51 1 203 1 54 1 133 1 256 1 94 1 13 1 
140 1 88 1 266 1 248 1 185 1 
97 1 98 1 9 4 40 1 213 1 139 1 244 1 263 1 29 4 74 1 295 1 145 4 249 1 
278 1 265 1 123 1 131 1 9 2 213 1 270 1 139 1 244 2 263 1 29 2 145 2 298 1 184 1 
172 1 139 1 207 1 244 1 255 1 308 1 29 1 9 1 145 1 40 1 
278 1 265 1 123 1 131 1 9 2 11 1 213 2 270 1 139 1 200 1 244 2 263 2 29 2 295 1 145 2 162 1 
278 1 189 1 265 1 123 1 131 1 9 2 40 1 213 2 270 1 139 1 200 1 244 2 263 2 29 2 295 1 145 2 
188 1 278 1 265 1 123 1 131 1 9 2 40 1 213 2 270 1 139 1 200 1 244 2 263 2 29 2 295 1 145 2 
90 1 29 1 9 1 145 1 40 1 
57 1 123 1 210 1 9 1 20 1 133 1 213 1 256 1 40 1 168 1 14 1 139 1 244 1 51 2 263 1 29 1 54 2 145 1 
123 2 5 1 210 1 9 1 256 2 213 2 133 1 168 1 258 1 14 1 139 1 223 2 51 2 263 2 54 2 145 1 298 1 57 1 191 1 20 2 309 1 244 1 29 1 
123 2 5 1 210 1 9 1 256 2 213 2 133 1 168 1 258 1 14 1 139 1 223 2 51 2 263 2 54 2 145 1 298 1 99 1 191 1 20 2 309 1 244 1 29 1 
38 1 274 1 211 1 29 1 9 1 213 1 145 1 298 1 
272 1 38 1 274 1 29 1 9 1 213 1 145 1 298 1 
139 1 149 1 244 1 29 1 9 1 145 1 
278 1 233 1 265 1 189 1 123 2 131 2 9 3 40 2 213 3 270 2 288 1 139 2 200 1 244 4 263 3 29 3 295 1 53 1 145 3 
279 2 3 1 123 1 251 1 210 1 9 1 42 1 133 2 282 1 213 1 256 1 168 1 14 1 139 1 290 3 292 1 227 1 51 2 50 2 263 1 54 2 295 1 16 1 145 1 299 1 18 1 57 1 301 1 62 6 20 1 192 2 107 1 238 4 195 1 66 2 269 2 242 1 243 2 68 2 25 2 244 1 247 3 29 1 159 1 160 1 33 1 34 1 
274 1 108 1 
149 1 123 1 9 2 213 2 288 1 139 1 89 1 244 2 143 1 263 1 29 2 295 1 145 2 
123 1 99 1 210 1 9 1 20 1 133 1 213 1 256 1 40 1 168 1 14 1 139 1 244 1 51 2 263 1 29 1 54 2 145 1 
123 1 131 1 9 1 213 1 270 1 288 1 139 1 244 2 263 1 29 1 53 1 145 1 298 1 
252 1 256 1 194 1 287 1 314 1 176 1 51 1 54 1 118 1 
126 1 118 1 231 1 
314 1 176 1 229 1 133 1 118 1 
46 1 314 1 176 1 26 1 262 1 126 1 274 1 229 1 118 1 231 1 108 1 
81 1 302 1 49 1 209 1 39 1 93 1 216 1 78 1 
81 2 302 3 100 1 305 1 39 4 212 1 216 1 44 2 175 1 49 4 157 1 293 1 93 2 78 1 
208 1 81 1 302 1 209 1 39 2 216 1 44 1 49 2 182 1 93 1 204 1 78 1 
81 1 302 1 209 1 100 2 39 3 216 1 153 1 175 1 49 3 293 2 93 1 78 1 
67 1 302 2 166 1 55 2 
49 1 113 1 209 1 39 1 216 1 78 1 
81 1 302 1 49 2 209 1 246 1 39 2 93 1 216 1 44 1 78 1 
12 1 
81 1 302 1 49 1 209 1 39 1 93 1 216 1 78 1 
90 1 
81 1 302 1 49 1 39 1 93 1 216 1 78 1 
49 1 245 1 205 1 
81 1 302 1 209 1 100 2 39 3 216 1 173 1 49 3 175 1 293 1 93 1 78 1 
120 1 81 1 302 1 49 2 39 2 93 1 216 1 44 1 78 1 
207 1 302 1 209 1 305 1 39 1 308 1 216 1 155 1 70 1 49 1 78 1 
302 1 49 1 209 1 39 1 93 1 216 1 78 1 
81 1 49 1 209 1 39 1 93 2 216 1 78 1 
187 1 302 1 209 1 304 1 39 2 216 2 284 1 49 2 93 1 78 2 
81 1 49 1 209 1 39 1 212 1 93 1 35 1 216 1 78 1 
122 1 81 1 207 2 302 1 209 1 255 1 39 2 308 1 216 1 44 1 70 1 49 2 52 1 93 1 78 1 
120 1 81 1 302 2 209 1 305 1 39 4 216 2 44 2 49 4 141 1 157 1 93 1 78 2 
81 1 302 1 209 1 100 1 39 3 216 1 44 1 49 3 246 1 93 1 78 1 
302 1 305 1 157 1 212 1 
302 1 93 1 

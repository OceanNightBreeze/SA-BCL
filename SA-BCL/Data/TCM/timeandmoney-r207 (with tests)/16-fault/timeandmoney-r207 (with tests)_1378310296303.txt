#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (93,188,211) (93,188,211) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (93,188,211) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (76,186) (76,186) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (93,188,211) 180 220 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (93,188,211) 180 109 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 182 236 121 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 182 236 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 204 132 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 229 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 2 325 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 171 296 327 212 52 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 171 296 327 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 171 296 327 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 257 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 171 296 327 212 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 171 296 327 212 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 336 171 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 78 (18,308) 131 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 253 279 129 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (76,186) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 2 325 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 182 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (76,186) (76,186) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (93,188,211) 180 218 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 179 1 3 2 225 1 4 2 88 1 270 1 189 1 11 2 48 9 314 5 16 3 190 1 317 6 193 2 142 1 201 1 240 1 245 2 107 1 205 1 113 2 27 9 290 1 292 2 77 1 79 1 297 4 
133 1 179 1 3 2 225 1 4 2 88 1 270 1 189 1 11 2 48 9 314 5 16 3 190 1 317 6 193 2 142 1 201 1 240 1 107 1 245 2 205 1 113 2 27 9 290 1 292 2 77 1 79 1 297 4 
133 1 179 1 3 2 225 1 4 2 88 1 270 1 189 1 11 2 48 10 314 6 16 4 190 1 317 7 193 2 142 1 201 1 240 1 107 1 245 2 205 1 113 2 27 10 290 1 292 2 77 1 79 1 297 5 
133 1 179 1 3 2 4 2 88 1 270 1 189 1 11 2 48 7 314 4 16 2 190 1 317 4 193 2 142 1 201 1 240 1 107 1 245 1 205 1 113 2 27 7 290 1 292 2 77 1 79 1 297 3 
142 1 201 1 3 1 245 2 225 1 4 1 113 1 11 1 27 4 48 4 314 3 16 1 190 1 317 3 77 1 79 1 193 1 297 2 
234 1 41 1 133 1 201 1 326 1 3 1 107 1 113 1 27 2 11 1 48 2 314 1 292 1 190 1 79 1 193 1 
201 1 3 2 270 1 113 2 27 3 48 3 314 2 16 1 292 1 190 1 317 1 79 1 297 1 
179 1 3 2 4 1 225 1 270 1 11 1 48 9 314 5 16 3 190 1 317 7 193 1 141 1 142 1 201 1 240 1 245 2 288 1 113 2 27 9 292 1 77 1 79 1 297 4 
179 1 3 2 4 1 225 1 270 1 11 1 48 9 314 5 16 3 190 1 317 7 193 1 141 1 142 1 201 1 240 1 245 2 288 1 113 2 27 9 292 1 77 1 79 1 297 4 
111 1 191 1 19 1 
336 1 
58 2 311 2 126 2 175 1 130 2 170 2 35 2 246 1 
261 2 126 2 263 2 262 1 83 1 175 1 130 2 267 1 183 1 42 1 86 1 135 1 8 1 311 3 227 1 320 2 58 2 235 1 282 1 102 2 148 2 151 1 238 1 106 1 246 1 249 1 158 1 251 1 71 1 26 1 28 1 160 1 165 1 168 1 170 2 35 3 80 1 
58 1 195 1 311 1 126 1 130 1 137 1 34 1 170 1 35 1 246 1 
188 1 311 1 126 1 211 1 35 1 45 1 
58 1 311 1 126 1 130 1 211 1 170 1 35 1 
15 1 134 1 184 1 93 1 247 1 
111 1 81 1 15 1 134 1 64 1 191 1 184 2 93 2 
15 1 184 1 93 1 
58 1 195 1 127 1 126 1 130 1 134 1 184 1 246 1 311 1 137 1 34 1 93 1 170 1 35 1 
191 1 
111 1 274 1 81 1 15 1 134 1 191 1 184 2 93 2 
81 1 323 1 134 2 184 5 248 2 250 1 111 1 186 1 271 1 275 1 161 1 15 2 49 1 120 1 50 2 76 1 191 1 93 5 96 2 
175 1 19 1 
58 1 126 2 62 1 175 2 130 1 285 1 311 2 170 1 35 2 
187 1 54 1 24 1 
102 1 175 1 148 1 151 1 238 1 86 1 251 1 26 1 311 1 227 1 165 1 315 1 168 1 35 1 320 1 80 1 
126 1 102 1 148 1 151 1 130 1 238 1 86 1 24 1 251 1 26 1 311 2 227 1 162 1 165 1 168 1 55 1 170 1 35 2 320 1 80 1 
58 1 126 5 175 1 130 4 285 1 45 1 157 1 311 5 115 1 335 1 162 2 170 4 55 1 35 5 
59 1 195 1 311 2 126 2 130 2 137 1 170 2 35 2 
58 1 311 3 126 3 175 1 162 1 130 3 170 3 35 3 
195 1 311 1 126 1 130 1 137 1 170 1 35 1 
58 1 311 1 126 1 62 1 130 1 137 1 285 1 170 1 35 1 
58 1 311 2 126 2 162 1 220 1 130 2 180 1 211 1 285 1 170 2 55 1 35 2 
311 2 126 2 175 1 162 1 130 1 170 1 35 2 45 1 157 1 
311 1 126 1 162 1 130 1 180 1 211 1 170 1 55 1 35 1 109 1 
58 1 126 2 130 2 285 1 24 1 187 1 311 2 162 1 170 2 35 2 
102 1 175 1 148 1 151 1 238 1 86 1 251 1 26 1 311 1 227 1 165 1 168 1 35 1 320 1 80 1 
102 1 198 1 175 1 148 1 302 1 151 1 238 1 86 1 251 1 311 1 227 1 165 1 35 1 320 1 80 1 
261 2 301 1 262 1 263 4 305 1 183 1 224 1 135 1 307 1 5 1 187 2 8 2 14 1 54 2 94 1 280 1 106 2 249 1 24 2 206 1 71 1 332 1 28 1 210 1 
59 1 311 1 126 1 147 1 130 1 137 1 170 1 35 1 
276 1 149 1 
276 1 149 1 
289 1 228 1 
289 1 228 1 
289 1 228 1 
276 1 149 1 222 1 
276 1 149 1 269 1 
289 1 276 2 228 1 149 2 140 1 97 1 
276 1 149 1 222 1 
276 1 149 1 222 1 
276 1 40 1 149 1 
276 1 40 1 149 1 
276 1 40 1 149 1 
309 1 276 1 236 1 117 1 149 1 182 1 121 1 184 1 93 1 
309 1 276 1 236 1 117 1 149 1 182 1 
11 1 193 1 4 1 
11 1 41 1 193 1 
41 1 91 1 139 1 4 2 214 1 193 3 
164 1 41 1 91 1 139 1 4 1 193 2 
41 1 91 2 139 1 4 1 193 2 
260 1 81 1 265 1 134 3 243 1 184 4 204 1 23 1 248 1 111 1 271 1 15 1 49 1 50 1 51 1 191 1 93 4 96 1 
81 1 260 1 1 1 134 3 243 1 181 1 184 4 204 1 247 1 248 1 271 1 111 1 15 2 49 1 50 1 169 1 191 1 96 1 93 4 
323 1 134 1 243 1 184 2 204 1 23 1 248 1 49 1 50 1 51 1 93 2 96 1 
323 1 132 1 243 1 184 1 204 1 23 1 248 1 49 1 50 1 51 1 93 1 96 1 
105 1 86 1 19 1 
172 1 86 1 
278 1 
151 1 165 1 86 1 
128 1 86 1 
151 1 86 1 
254 1 209 1 151 1 165 1 105 2 86 3 
322 1 39 1 103 1 263 1 174 1 305 2 66 1 85 1 106 1 10 1 291 1 94 1 57 1 
322 1 39 1 103 1 263 1 174 1 305 2 66 1 85 1 106 1 10 1 291 1 94 1 57 1 
322 1 39 1 103 1 263 1 174 1 305 2 66 1 85 1 106 1 10 1 334 1 291 1 94 1 57 1 
261 2 322 1 101 1 39 1 103 1 262 1 263 6 145 1 174 1 305 2 63 1 66 1 244 1 85 2 106 3 135 1 71 1 8 3 253 1 114 1 28 1 279 1 94 1 57 1 
71 1 261 2 82 1 28 1 262 1 263 1 174 1 229 1 85 1 106 1 135 1 57 1 
176 1 41 1 3 1 4 1 11 1 227 1 48 2 314 1 190 1 317 1 321 1 320 1 319 1 193 2 143 1 100 1 102 1 146 1 200 1 148 1 238 1 201 1 241 1 153 1 113 1 27 2 118 1 292 1 79 1 214 1 
300 1 41 1 223 1 3 1 4 1 11 1 227 1 48 3 314 1 190 1 317 2 321 1 320 1 319 1 193 2 143 1 100 1 102 1 146 1 200 1 148 1 238 1 241 1 153 1 70 1 113 1 27 3 292 1 79 1 214 1 
300 1 41 1 4 1 11 1 227 1 48 2 314 1 190 1 317 2 321 1 320 1 193 2 143 1 100 1 102 1 200 1 148 1 238 1 241 1 153 1 70 1 27 2 292 1 79 1 214 1 
259 1 144 1 173 1 102 1 148 1 200 2 151 1 238 1 223 1 241 2 268 1 86 1 3 1 203 1 113 1 27 1 227 1 48 1 312 1 292 2 321 2 320 1 80 1 
300 1 176 1 41 1 3 1 4 1 11 1 227 1 48 1 321 1 320 1 319 1 193 2 143 1 100 1 102 1 146 1 200 1 148 1 238 1 201 1 241 1 153 1 113 1 27 1 292 1 214 1 
286 1 
102 1 148 1 325 1 2 1 243 1 184 1 248 1 271 1 49 1 50 1 93 1 96 1 320 1 80 1 
194 1 81 1 104 1 184 2 274 1 7 1 15 2 230 1 93 2 123 1 98 1 
194 1 7 1 104 1 95 1 184 1 93 1 337 1 98 1 123 1 
194 1 81 1 104 1 184 2 274 1 7 1 12 1 15 2 230 1 93 2 95 1 337 1 123 1 98 1 
171 1 81 1 184 2 226 1 271 1 274 1 7 1 12 2 46 1 15 3 49 1 50 1 52 1 230 2 93 2 96 1 98 1 194 1 284 1 104 1 327 1 248 1 156 1 161 1 212 1 296 1 123 1 217 1 
194 1 171 1 284 1 104 1 184 1 226 1 248 1 156 1 271 1 7 1 161 1 49 1 50 1 93 1 96 1 217 1 123 1 98 1 
171 1 184 1 226 1 271 1 7 1 46 1 49 1 50 1 96 1 93 1 98 1 194 1 104 1 284 1 327 1 248 1 156 1 161 1 296 1 123 1 217 1 
171 1 184 1 226 1 271 1 7 1 46 1 49 1 50 1 96 1 93 1 98 1 194 1 104 1 284 1 327 1 248 1 156 1 161 1 296 1 123 1 217 1 
194 1 7 1 104 1 184 1 93 1 257 1 98 1 123 1 
171 1 184 1 226 1 271 1 7 1 12 1 46 1 15 1 49 1 50 1 230 1 95 1 93 1 96 1 98 1 194 1 284 1 104 1 327 1 248 1 156 1 161 1 212 1 296 1 337 1 123 1 217 1 
171 1 184 1 226 1 271 1 7 1 12 1 46 1 15 1 49 1 50 1 230 1 95 1 93 1 96 1 98 1 194 1 284 1 104 1 327 1 248 1 156 1 161 1 212 1 296 1 337 1 123 1 217 1 
194 1 171 1 284 1 104 1 184 1 248 1 156 1 271 1 7 1 161 1 336 1 49 1 50 1 167 1 138 1 93 1 96 1 123 1 98 1 
261 2 322 1 103 1 262 1 305 1 183 1 224 1 249 1 135 1 71 1 10 1 28 1 291 1 94 1 19 1 
299 1 261 4 301 2 262 2 263 12 83 1 175 1 267 1 305 1 183 2 135 2 307 1 187 2 8 5 137 1 54 6 94 1 280 2 145 2 68 2 106 7 249 1 329 1 24 6 207 1 71 2 253 2 28 2 73 1 119 1 210 1 32 1 295 1 
261 2 126 1 262 1 263 2 175 1 83 1 130 1 267 1 183 1 86 1 135 1 187 1 8 1 311 2 227 1 313 1 315 1 55 1 320 1 102 1 148 1 151 1 238 1 106 1 249 1 329 1 251 1 26 1 71 1 28 1 162 1 165 1 168 1 170 1 35 2 80 1 124 1 298 1 
261 6 262 3 263 14 83 1 267 1 183 3 86 2 87 1 187 6 8 7 10 1 94 3 280 2 102 3 103 1 106 7 24 6 26 2 28 3 291 1 210 2 35 3 300 1 125 1 301 2 126 1 39 4 130 1 305 7 42 2 135 3 307 2 308 2 311 3 227 2 54 6 55 1 320 3 322 1 148 3 237 2 150 1 151 2 238 2 239 2 68 2 329 1 249 3 251 2 71 3 162 1 165 2 166 2 168 2 170 1 80 1 
300 1 261 4 259 1 126 1 38 1 262 2 263 2 83 1 130 1 177 1 266 1 267 1 183 2 86 4 224 1 135 2 8 1 311 1 90 1 227 3 53 1 320 7 235 2 102 6 148 7 151 3 238 4 106 1 203 1 249 2 252 1 71 2 28 2 162 1 118 1 74 1 165 1 293 1 170 1 35 1 36 1 213 1 80 2 
261 2 301 1 126 1 262 1 263 3 130 1 305 1 183 1 135 1 307 1 187 1 8 2 311 1 54 1 94 1 232 1 280 1 58 1 285 1 68 1 106 1 24 1 249 1 329 1 71 1 28 1 210 1 170 1 35 1 
261 2 301 1 39 1 263 2 262 1 305 1 183 1 224 1 106 2 24 1 249 1 135 1 187 1 71 1 332 1 28 1 54 1 280 1 
261 2 263 2 262 1 305 1 183 1 224 1 24 1 249 1 135 1 5 1 307 1 187 1 71 1 8 2 28 1 210 1 54 1 94 1 
261 2 301 1 39 1 263 4 262 1 305 2 183 1 68 1 224 1 106 2 24 2 249 1 135 1 307 1 187 2 71 1 8 2 28 1 210 1 54 2 94 1 280 1 
261 2 301 1 39 1 263 2 262 1 305 1 183 1 106 2 24 1 249 1 135 1 187 1 71 1 332 1 28 1 54 1 213 1 280 1 
261 2 263 2 262 1 305 1 183 1 24 1 249 1 135 1 5 1 307 1 187 1 71 1 8 2 28 1 210 1 54 1 94 1 213 1 
261 2 301 1 39 1 263 4 262 1 305 2 183 1 68 1 106 2 24 2 249 1 135 1 307 1 187 2 71 1 8 2 28 1 210 1 54 2 94 1 213 1 280 1 
261 2 301 1 39 1 262 1 263 4 305 2 183 1 68 1 106 2 24 2 249 1 135 1 307 1 187 2 71 1 8 2 28 1 210 1 54 2 94 1 280 1 
261 2 263 2 262 1 83 1 175 1 267 1 42 1 183 1 86 1 135 1 8 1 311 1 227 1 320 1 102 1 148 1 151 1 238 1 106 1 249 1 251 1 26 1 71 1 28 1 165 1 168 1 35 1 80 1 
261 2 263 2 262 1 83 1 175 1 302 1 267 1 183 1 86 1 135 1 8 1 311 1 227 1 320 1 102 1 198 1 148 1 151 1 238 1 106 1 249 1 251 1 71 1 28 1 165 1 255 1 35 1 80 1 
261 2 301 1 39 1 263 4 262 1 305 2 183 1 68 1 106 2 24 2 329 1 249 1 135 1 307 1 187 2 71 1 8 2 28 1 210 1 54 2 94 1 280 1 
301 1 261 2 39 1 263 4 262 1 305 2 42 1 183 1 86 1 135 1 307 1 187 2 8 2 311 1 227 1 54 2 94 1 280 1 320 1 102 1 148 1 151 1 238 1 239 1 68 1 106 2 24 2 249 1 251 1 26 1 71 1 28 1 210 1 118 1 165 1 168 1 35 1 
261 2 301 1 126 1 39 1 262 1 263 3 130 1 305 1 183 1 135 1 307 1 187 1 8 1 311 1 54 1 280 1 58 1 285 1 68 1 106 2 249 1 329 1 24 1 71 1 28 1 210 1 170 1 35 1 122 1 
258 1 261 4 301 3 82 1 39 2 262 2 263 25 129 1 305 5 306 1 135 2 307 3 6 1 9 1 8 13 279 2 94 3 318 1 280 3 145 3 197 1 283 4 68 3 106 12 207 1 71 2 253 2 116 1 28 2 163 2 210 3 31 1 
258 2 261 6 301 3 82 1 39 2 262 3 263 26 129 1 305 4 306 1 135 3 307 2 6 1 8 12 310 1 279 2 94 2 280 3 196 1 283 4 197 1 145 2 68 3 244 2 106 14 25 1 71 3 253 2 116 2 28 3 163 1 29 1 210 2 31 1 
258 2 261 6 82 1 263 36 262 3 6 1 8 19 10 1 279 3 94 3 280 4 196 1 283 4 197 1 103 1 106 17 207 1 25 1 28 3 116 1 291 1 210 4 29 1 31 1 33 1 301 4 39 3 129 1 305 6 306 1 135 3 307 4 310 1 318 1 322 1 145 4 68 4 244 1 71 3 253 3 163 1 
258 2 261 8 82 1 263 33 262 4 6 1 8 16 10 1 279 3 94 4 280 4 196 1 283 4 197 1 103 1 106 17 207 1 25 1 28 4 116 1 291 1 210 3 29 1 31 1 33 1 301 4 39 2 129 1 305 6 306 1 135 4 307 3 310 1 318 1 322 1 145 4 68 4 244 2 71 4 253 3 163 1 
258 1 261 6 301 5 82 1 262 3 263 38 39 5 129 1 305 10 306 1 135 3 307 5 6 1 8 19 10 1 310 1 279 2 94 5 280 5 196 1 322 1 103 1 283 4 145 3 197 1 68 5 244 2 106 19 207 1 25 1 71 3 253 3 116 1 28 3 291 1 163 1 29 1 210 5 31 1 295 1 
261 2 126 2 262 1 263 2 83 1 267 1 183 1 86 1 135 1 8 1 311 2 90 1 227 1 277 1 320 2 235 2 102 2 148 2 151 1 238 1 21 1 22 1 106 1 249 1 329 1 110 1 331 1 71 1 28 1 74 1 35 2 
300 1 99 1 143 1 100 1 102 2 146 1 148 2 41 1 238 1 304 1 108 1 4 1 11 1 227 1 118 1 214 1 193 2 320 2 321 1 
300 1 143 1 100 1 102 1 146 1 148 1 41 1 238 1 304 1 4 1 272 1 11 1 227 1 214 1 193 2 320 1 321 1 
99 1 259 1 102 1 173 1 148 1 151 1 238 1 86 1 203 1 136 1 227 1 320 1 321 1 80 1 
300 1 99 1 143 1 100 1 102 1 146 1 148 1 41 1 238 1 304 1 108 1 4 1 11 1 227 1 214 1 193 2 320 1 321 1 
92 1 
111 1 186 1 161 1 49 1 76 1 191 1 19 1 
271 1 161 1 49 1 50 1 96 1 226 1 248 1 217 1 
172 1 102 1 148 1 151 1 238 2 131 1 243 1 86 2 248 1 271 1 227 1 209 1 49 1 165 1 50 1 78 1 18 1 96 1 320 1 56 1 80 1 
271 1 253 1 145 1 161 1 129 1 49 1 279 1 50 1 96 1 248 1 
322 1 219 1 103 1 184 1 248 1 328 1 307 1 271 1 161 2 46 1 49 1 50 1 75 1 93 1 96 1 256 2 280 2 
111 1 186 1 271 1 161 1 49 1 50 1 191 1 96 1 248 1 
301 1 68 1 273 1 307 1 161 2 336 2 210 1 49 1 17 1 191 1 280 1 37 1 
111 1 81 1 15 1 191 1 184 1 93 1 
271 1 102 1 325 1 148 1 49 1 2 1 50 1 243 1 96 1 248 1 330 1 320 1 80 1 
261 2 126 2 263 1 262 1 175 1 130 2 267 1 42 1 183 1 86 1 135 1 8 1 311 3 227 1 320 1 58 2 102 1 282 1 148 1 151 1 238 1 246 1 249 1 251 1 71 1 26 1 28 1 165 1 168 1 170 2 35 3 80 1 
127 1 126 1 130 1 271 1 311 1 49 1 50 1 137 1 191 1 96 1 58 1 195 1 243 1 246 1 248 1 111 1 34 1 170 1 35 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
117 1 182 1 
276 1 149 1 
261 4 322 1 263 2 39 1 262 2 103 1 305 2 244 1 106 1 135 2 71 2 8 1 10 1 28 2 291 1 94 1 
322 1 10 1 103 1 291 1 305 1 94 1 19 1 
261 2 301 1 262 1 263 4 39 1 305 2 68 1 106 2 135 1 307 1 71 1 8 2 28 1 210 1 94 1 280 1 216 1 
253 1 8 1 263 2 145 1 279 1 106 1 
301 2 261 2 263 14 39 2 262 1 305 5 135 1 307 2 8 7 10 1 94 3 280 2 322 2 103 2 145 2 68 2 244 1 106 7 207 1 71 1 253 2 28 1 291 1 210 2 32 1 295 1 
8 1 263 1 145 1 
253 1 263 1 106 1 
261 2 301 1 262 1 263 6 39 1 237 1 305 3 68 1 106 3 135 1 307 1 71 1 8 3 28 1 210 1 94 2 280 1 216 1 
261 4 301 2 82 1 39 1 263 13 262 2 129 1 305 3 135 2 307 2 8 7 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 1 106 6 25 1 71 2 253 1 28 2 29 1 210 2 
322 1 219 1 263 6 103 1 39 1 305 2 106 3 307 1 8 3 94 1 280 1 
261 2 262 1 263 12 39 3 219 1 174 1 305 6 135 1 307 1 8 6 10 1 94 3 280 1 322 3 103 3 244 1 106 6 328 1 71 1 114 1 28 1 291 1 
261 2 82 1 322 2 262 1 103 2 39 2 263 10 219 1 305 5 106 5 135 1 328 1 307 2 71 1 8 5 28 1 94 3 280 2 
261 2 301 1 82 1 262 1 263 2 39 1 305 1 106 2 135 1 71 1 28 1 280 1 
261 2 301 1 82 1 262 1 263 4 39 1 305 2 68 1 106 2 135 1 307 1 71 1 8 2 28 1 210 1 94 1 280 1 
261 6 82 1 322 1 263 3 262 3 103 1 39 1 305 2 244 1 106 1 135 3 71 3 114 1 8 2 28 3 94 1 318 1 
261 8 82 1 219 1 39 3 262 4 263 13 305 6 135 4 307 1 8 7 10 1 279 1 94 3 318 1 280 1 322 3 145 1 103 3 63 1 244 1 106 6 71 4 253 1 114 1 28 4 291 1 216 1 
261 6 301 2 82 1 39 1 263 12 262 3 129 1 305 3 135 3 307 1 8 5 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 2 106 7 25 1 71 3 253 1 28 3 29 1 210 1 
261 8 301 2 82 1 39 1 263 12 262 4 129 1 305 3 135 4 307 1 8 5 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 2 106 7 25 1 71 4 253 1 28 4 29 1 210 1 216 1 
261 6 301 2 82 1 39 1 263 13 262 3 129 1 305 3 135 3 307 2 8 7 10 1 310 1 279 1 94 2 280 2 196 1 322 1 103 1 145 1 68 2 244 1 106 6 25 1 71 3 253 1 28 3 291 1 29 1 210 2 216 1 
261 8 301 2 82 1 39 1 263 12 262 4 129 1 305 3 135 4 307 1 8 5 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 2 106 7 25 1 71 4 253 1 28 4 29 1 210 1 216 1 
261 6 301 2 82 1 39 1 263 12 262 3 129 1 305 3 135 3 307 1 8 5 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 2 106 7 25 1 71 3 253 1 28 3 29 1 210 1 
261 4 301 2 82 1 39 1 263 13 262 2 129 1 305 3 135 2 307 2 8 7 310 1 279 1 94 2 280 2 196 1 145 1 68 2 244 1 106 6 25 1 71 2 253 1 28 2 29 1 210 2 
261 8 301 2 82 1 39 2 263 12 262 4 129 1 305 4 135 4 307 1 8 5 10 1 310 1 279 1 94 2 280 2 196 1 322 1 103 1 145 1 68 2 244 2 106 7 25 1 71 4 253 1 28 4 291 1 29 1 210 1 216 1 
261 8 301 3 82 1 39 3 263 16 262 4 129 1 305 6 135 4 307 2 8 7 310 1 279 1 94 3 318 1 280 3 196 1 145 1 68 3 244 2 106 9 25 1 71 4 253 1 28 4 29 1 210 2 
322 2 103 2 39 2 263 2 305 4 106 1 8 1 10 2 291 1 94 2 
261 8 301 2 82 1 39 1 263 12 262 4 129 1 305 3 135 4 307 1 8 5 10 1 310 1 279 1 94 2 318 1 280 2 196 1 322 1 103 1 145 1 68 2 244 2 106 7 25 1 71 4 253 1 28 4 291 1 29 1 210 1 
311 1 126 1 175 1 47 1 35 1 45 1 157 1 
0 1 126 1 175 1 303 1 84 1 221 1 20 1 157 1 45 1 311 1 47 1 35 1 
259 1 102 1 227 1 148 1 151 1 238 1 86 1 203 1 320 1 19 1 80 1 
126 1 102 1 175 1 148 1 151 1 130 1 238 1 86 1 251 1 26 1 311 2 227 1 162 1 165 1 170 1 35 2 320 1 80 1 
126 2 128 1 175 1 130 2 86 3 311 2 227 1 137 1 231 1 320 1 281 1 102 1 147 1 148 1 151 2 238 1 155 1 251 1 26 1 162 1 165 2 170 1 35 2 
126 2 128 1 175 1 302 1 130 2 86 3 311 2 227 1 137 1 231 1 320 2 281 1 102 2 147 1 148 2 151 2 238 1 155 1 251 1 162 1 165 2 170 1 35 2 215 1 
172 1 127 1 126 1 130 1 86 1 184 1 311 1 137 1 231 1 191 1 93 1 320 1 58 1 195 1 102 1 60 1 148 1 246 1 111 1 34 1 170 1 35 1 
172 1 281 1 102 3 128 1 148 3 151 1 238 1 105 1 184 2 86 4 111 1 227 1 15 1 165 1 231 1 316 1 191 1 93 2 215 1 320 3 80 1 233 1 
102 1 227 1 148 1 238 1 242 1 320 1 
300 1 235 1 102 5 38 1 148 6 151 2 238 3 86 3 252 1 90 1 209 1 227 2 118 1 165 1 53 1 293 1 294 1 36 1 320 6 80 2 
261 4 126 1 262 2 130 1 305 1 183 2 42 1 86 1 135 2 308 1 10 1 311 2 227 1 277 1 94 1 320 1 322 1 102 1 103 1 148 1 151 1 238 1 239 1 249 2 329 1 251 1 71 2 26 1 28 2 291 1 162 1 118 1 165 1 168 1 170 1 35 2 
172 1 81 1 134 1 184 3 86 2 186 1 271 2 15 2 49 1 50 2 316 1 191 1 96 2 93 3 18 1 320 1 233 1 102 1 148 1 105 1 248 2 330 1 111 1 208 1 161 1 76 1 78 1 80 1 
102 2 148 2 151 1 238 2 105 1 242 1 86 2 209 1 227 1 118 1 165 1 320 2 56 1 
259 1 102 4 148 4 151 1 238 1 86 1 203 1 69 1 227 1 118 1 215 1 320 4 80 1 
125 1 102 2 148 2 151 1 177 1 238 2 266 1 86 1 252 1 227 1 165 1 231 1 36 1 320 2 
100 1 102 1 11 1 227 1 148 1 41 1 238 1 193 1 320 1 80 1 
300 1 102 2 148 2 151 1 238 1 86 1 22 1 90 1 227 1 118 1 320 2 
259 1 102 4 38 1 148 5 151 2 238 2 86 3 203 1 69 1 90 1 227 2 118 1 53 1 231 1 320 5 80 1 
259 1 102 4 148 5 151 2 238 2 86 3 203 1 154 1 69 1 90 1 227 2 118 1 53 1 231 1 320 5 80 1 
126 1 102 1 175 1 148 1 151 1 130 1 302 1 238 1 86 1 251 1 311 2 227 1 162 1 165 1 170 1 35 2 320 1 80 1 
252 1 102 1 227 1 209 1 148 1 151 1 238 2 165 1 231 1 86 1 294 1 36 1 320 1 
159 1 199 1 175 1 202 1 185 1 
112 1 159 1 333 1 218 1 199 1 134 1 180 1 211 1 184 1 93 1 202 1 185 1 
331 1 159 1 311 1 126 1 199 1 21 1 202 1 35 1 110 1 
333 1 218 1 202 1 
314 1 190 1 79 1 19 1 
113 1 27 1 48 1 314 1 190 1 3 1 79 1 
27 1 200 1 292 1 
89 1 113 1 27 3 48 3 314 1 201 1 190 1 192 1 3 1 79 1 107 2 44 1 
113 1 27 2 48 2 314 1 190 1 317 1 3 1 79 1 245 1 
113 1 11 1 27 1 48 1 314 1 201 1 77 1 3 1 193 1 4 1 297 1 
113 1 27 1 48 1 314 1 201 1 190 1 3 1 
113 1 27 1 48 1 201 1 190 2 3 1 79 1 
113 1 27 1 264 1 48 1 178 1 201 1 3 1 
201 1 240 1 179 1 3 1 113 1 27 3 48 3 314 2 16 1 190 1 317 2 79 1 297 1 
41 1 201 1 3 1 4 1 113 1 27 2 11 1 72 1 48 2 314 1 190 1 317 1 79 1 193 2 214 1 
201 1 3 2 245 1 225 1 113 2 27 4 48 4 314 2 16 1 190 1 317 2 79 1 297 1 
113 1 27 1 48 1 314 1 201 1 190 1 3 1 79 1 
3 1 107 1 44 1 113 1 27 4 48 4 30 1 314 3 16 1 190 2 317 2 192 1 79 2 297 1 
152 1 201 1 65 1 3 1 113 1 27 2 48 2 314 1 190 1 317 1 79 1 141 1 
201 1 67 1 3 1 44 1 107 2 113 1 27 3 48 3 314 1 190 1 192 2 79 1 
324 2 61 1 13 1 314 2 
113 1 27 1 48 1 201 1 3 1 287 1 
113 1 27 2 48 2 314 1 201 1 179 1 190 1 317 1 3 1 79 1 
43 1 
113 1 27 1 48 1 314 1 201 1 190 1 3 1 79 1 
201 1 179 1 3 1 107 1 113 1 27 3 48 3 314 1 317 1 190 1 79 1 
30 1 314 1 16 1 297 1 
314 1 190 1 

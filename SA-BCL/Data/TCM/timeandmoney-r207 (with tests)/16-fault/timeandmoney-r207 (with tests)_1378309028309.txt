#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (111,351) 288 (101,169) (101,169) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (111,351) 288 (101,169) (101,169) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (111,351) 288 (101,169) (101,169) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (111,351) 288 (101,169) (101,169) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 112 (28,116,164) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 122 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 300 72 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 122 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:scale()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 1 9 1 111 1 95 1 285 1 101 1 191 1 180 1 169 1 288 1 202 1 
77 1 9 1 111 1 95 1 285 1 101 1 191 1 180 1 169 1 288 1 202 1 
77 1 9 1 111 1 95 1 285 1 101 1 191 1 180 1 169 1 288 1 202 1 
77 1 9 1 111 1 95 1 285 1 101 1 191 1 180 1 169 1 288 1 202 1 
313 1 256 1 228 1 9 4 214 1 191 1 180 1 77 1 105 2 60 1 15 1 147 2 150 1 6 1 298 3 202 4 311 3 21 1 
313 1 228 1 9 2 259 1 261 1 191 1 180 1 283 1 77 1 60 1 15 1 95 1 285 1 298 1 268 1 202 2 
9 3 191 2 180 2 77 1 60 1 351 1 15 1 147 1 285 1 6 1 298 2 202 3 311 1 
313 1 256 1 214 1 191 2 27 1 60 1 147 4 285 1 363 1 150 1 6 3 202 9 228 1 9 9 180 2 77 1 105 2 351 1 15 1 160 1 254 1 298 5 311 7 21 1 
313 1 256 1 214 1 191 2 27 1 60 1 147 4 285 1 363 1 150 1 6 3 202 9 228 1 9 9 180 2 77 1 105 2 351 1 15 1 160 1 254 1 298 5 311 7 21 1 
58 1 122 1 327 1 
373 1 58 1 366 2 
84 2 342 2 120 2 32 1 51 1 305 2 217 2 219 2 
108 1 84 3 257 1 51 1 237 1 52 1 22 1 217 2 219 2 195 2 342 3 32 1 61 1 198 1 224 1 266 1 246 1 248 1 348 1 227 1 120 2 305 2 100 2 157 1 73 2 11 1 330 2 183 1 295 1 185 1 16 1 130 1 253 1 187 1 132 1 376 2 80 1 
84 1 342 1 120 1 51 1 210 1 305 1 357 1 217 1 331 1 219 1 
84 1 327 1 37 1 10 1 357 1 217 1 294 1 58 1 13 1 342 1 91 1 321 1 129 1 68 1 
84 1 120 1 327 1 305 1 10 2 37 1 357 1 217 1 219 1 58 1 342 1 91 2 321 1 129 1 68 1 
91 1 304 1 10 1 34 1 103 1 
58 1 36 1 91 2 327 1 304 1 10 2 24 1 103 1 
91 1 304 1 10 1 
84 1 120 1 51 1 85 1 305 1 10 1 357 1 217 1 331 1 103 1 219 1 342 1 91 1 210 1 
58 1 
58 1 91 2 327 1 304 1 10 2 24 1 179 1 103 1 
136 1 189 1 367 1 327 1 215 1 167 1 10 5 24 1 103 2 58 1 91 5 173 2 172 2 320 1 3 1 304 2 17 1 200 2 176 1 
32 1 122 1 
84 2 120 1 229 1 305 1 357 1 217 2 219 1 342 2 32 1 175 1 151 1 
276 1 370 1 152 1 
84 1 227 1 237 1 52 1 11 1 330 1 195 1 183 1 342 1 241 1 32 1 185 1 253 1 132 1 376 1 80 1 
84 3 120 3 305 3 357 1 217 3 219 1 342 3 250 1 32 1 151 1 
84 1 342 1 120 1 210 1 305 1 357 1 217 1 
84 1 120 1 229 1 305 1 357 1 217 1 219 1 342 1 175 1 
84 4 237 1 51 1 52 1 22 1 357 1 87 1 217 3 219 2 195 1 342 4 91 1 32 1 321 1 198 1 224 1 246 1 248 1 68 1 348 1 227 1 120 3 229 1 305 3 100 1 37 1 10 1 157 1 73 2 11 1 330 1 183 1 250 1 295 1 184 1 185 1 16 1 129 1 253 1 187 1 278 1 132 1 80 1 376 1 
13 1 84 2 342 2 120 1 250 1 32 1 305 1 299 1 217 2 
84 3 120 3 229 1 305 3 10 1 37 1 357 1 217 3 219 1 58 1 342 3 91 1 250 2 296 1 184 1 321 1 129 1 278 1 68 1 
84 2 120 2 229 1 305 2 370 1 217 2 219 1 342 2 250 1 152 1 
84 1 227 1 237 1 52 1 11 1 330 1 195 1 183 1 342 1 32 1 185 1 253 1 132 1 376 1 80 1 
84 1 227 1 237 1 52 1 11 1 330 1 195 1 342 1 32 1 2 1 185 1 253 1 132 1 376 1 133 1 
257 2 22 1 192 1 218 1 240 1 144 1 360 1 198 1 62 1 224 1 152 2 248 1 69 1 348 1 100 4 73 2 370 2 104 1 12 1 276 2 16 2 18 1 187 1 310 1 
50 1 84 1 342 1 120 1 305 1 37 1 357 1 217 1 
84 2 227 1 120 1 237 1 52 1 305 1 11 1 330 1 217 1 195 1 183 1 342 2 250 1 185 1 253 1 278 1 132 1 152 1 376 1 80 1 
84 2 120 2 229 1 305 2 357 1 217 2 219 1 342 2 250 1 32 1 151 1 
50 1 84 2 342 2 120 2 210 1 305 2 357 1 217 2 
28 1 81 1 
28 1 81 1 
116 1 112 1 
116 1 112 1 
116 1 112 1 
205 1 28 1 81 1 
116 1 112 1 28 1 81 1 
164 1 28 1 81 1 
205 1 28 1 81 1 
205 1 28 1 81 1 
354 1 28 1 81 1 
354 1 28 1 81 1 
354 1 28 1 81 1 
84 1 51 1 86 1 281 1 85 1 23 1 357 1 28 2 217 1 316 1 29 2 219 1 317 1 342 1 59 2 58 1 92 1 91 2 118 2 346 1 292 1 120 1 153 1 305 1 293 1 10 2 158 2 331 1 210 1 131 2 81 2 
290 1 84 2 120 2 368 1 23 1 305 2 10 1 158 1 39 1 28 1 217 2 29 1 57 1 342 2 59 1 91 1 32 1 319 1 118 1 164 1 131 1 49 1 81 1 213 1 
313 1 228 1 214 1 
313 1 228 1 261 1 
228 3 297 1 214 2 251 1 261 1 75 1 
228 2 297 1 214 1 71 1 261 1 75 1 
228 2 297 1 214 1 261 1 75 2 
136 2 189 1 166 1 24 1 144 1 58 2 91 5 222 1 360 1 171 2 319 1 172 1 173 1 62 1 304 1 242 1 174 2 264 1 200 1 176 3 366 3 35 1 226 1 156 2 368 1 327 1 10 5 371 1 104 1 103 4 333 1 373 1 213 1 
136 6 189 1 166 2 190 5 355 1 24 1 26 1 115 1 144 3 58 5 91 9 360 3 171 6 319 4 94 1 173 2 172 2 62 3 304 6 242 1 200 2 176 8 366 9 34 5 289 1 35 3 226 3 156 6 327 1 10 9 371 2 104 3 103 7 373 3 233 1 17 1 
84 1 51 1 166 1 136 2 85 1 357 1 217 1 219 1 144 1 342 1 58 3 91 3 222 1 360 1 319 1 171 2 172 1 173 1 62 1 174 1 200 1 176 3 366 4 35 1 226 1 120 1 156 2 327 1 305 1 10 3 371 1 331 1 103 2 333 1 104 1 373 2 210 1 17 1 
166 1 136 2 26 1 144 1 58 2 91 2 222 1 360 1 171 2 319 1 172 1 173 1 62 1 174 1 200 1 176 3 366 4 226 1 156 2 10 2 371 1 333 1 103 1 104 1 373 2 17 1 
122 1 345 1 132 1 
132 1 353 1 
38 1 
11 1 132 1 
227 1 303 1 345 2 11 1 132 3 114 1 
227 1 11 1 132 1 
44 1 132 1 
83 2 314 1 257 6 192 3 141 1 240 3 144 2 93 2 207 2 100 11 124 1 42 1 332 2 104 2 272 1 16 5 378 1 
83 2 314 1 257 6 192 5 141 1 240 3 144 2 93 2 207 2 100 11 74 2 124 1 42 1 332 2 104 2 272 1 16 5 378 1 
83 2 314 1 257 6 192 3 141 1 240 3 144 2 93 2 96 1 207 2 100 11 124 1 42 1 332 2 104 2 272 1 16 5 378 1 
83 3 314 1 339 1 257 22 53 4 22 2 192 13 141 2 282 1 240 7 358 1 144 6 220 4 221 1 93 3 360 4 198 2 62 4 265 1 97 2 325 1 177 1 248 2 348 2 226 4 207 3 100 43 124 1 73 4 74 6 369 1 332 2 42 1 104 6 272 1 16 21 378 2 
83 2 257 7 22 2 192 5 141 1 240 4 144 2 93 2 198 2 97 1 248 2 348 2 326 1 207 2 100 13 124 1 73 4 74 1 372 1 104 2 42 1 332 2 272 1 16 6 378 1 
313 1 214 1 138 1 261 1 191 1 113 1 56 1 142 1 195 1 117 1 60 1 4 1 285 1 148 1 245 1 202 2 228 2 9 2 180 1 330 1 102 1 77 1 15 1 185 1 251 1 253 1 298 1 376 1 311 1 379 1 
313 1 214 1 138 1 261 1 191 1 113 1 56 1 142 1 195 1 341 1 117 1 60 1 4 1 285 1 365 1 202 3 228 2 9 3 178 1 180 1 330 1 102 1 15 1 185 1 251 1 253 1 298 1 376 1 311 2 379 1 
313 1 228 2 9 2 214 1 138 1 261 1 330 1 113 1 56 1 195 1 102 1 117 1 341 1 60 1 15 1 185 1 251 1 253 1 4 1 285 1 298 1 365 1 376 1 311 2 202 2 
107 1 258 1 178 1 9 1 52 1 328 1 11 1 191 1 180 1 330 1 56 2 102 2 195 1 1 1 128 1 273 1 185 1 253 1 285 2 4 2 132 1 376 1 202 1 
313 1 214 1 138 1 261 1 191 1 113 1 56 1 142 1 195 1 341 1 117 1 4 1 285 1 148 1 202 1 228 2 9 1 180 1 330 1 102 1 77 1 185 1 251 1 253 1 376 1 379 1 
243 1 
258 1 166 1 0 2 52 2 217 1 1 1 58 2 342 1 173 1 172 1 304 6 176 2 68 1 10 5 11 1 181 1 127 1 13 1 185 1 129 1 132 1 82 1 84 1 136 2 189 1 135 1 24 3 357 1 140 1 89 1 195 2 145 2 31 1 91 5 196 4 321 1 200 1 323 2 366 2 247 2 204 2 249 1 99 1 327 1 37 1 159 1 330 2 294 1 334 2 373 2 253 1 165 1 336 2 376 2 212 1 
249 1 99 1 84 1 37 1 10 3 24 1 179 1 357 1 159 1 181 1 217 1 294 1 334 1 13 1 342 1 91 3 196 2 321 1 129 1 304 2 212 1 68 1 
249 1 99 1 84 1 327 1 37 1 10 3 24 1 179 1 357 1 159 1 181 1 217 1 294 1 145 1 58 1 13 1 342 1 91 3 196 3 321 1 129 1 304 1 212 1 68 1 
84 1 24 1 357 1 217 1 145 1 342 1 58 1 91 3 196 3 321 1 304 2 323 1 68 1 249 1 99 1 327 1 10 3 37 1 179 1 159 1 181 1 294 1 334 1 13 1 129 1 212 1 
0 2 217 1 342 1 58 5 173 1 172 1 304 7 176 1 68 1 10 5 179 1 230 1 181 1 349 1 13 1 129 1 312 1 82 1 84 1 189 1 136 1 24 3 357 1 284 1 145 4 91 5 196 6 321 1 200 1 323 4 247 2 204 2 249 1 99 1 327 5 37 1 159 1 294 1 334 4 373 2 209 1 165 1 336 2 212 1 
0 2 217 1 342 1 58 2 173 1 172 1 304 4 176 1 68 1 10 4 181 1 127 1 13 1 129 1 82 1 84 1 189 1 136 1 24 2 357 1 145 2 91 4 196 4 321 1 200 1 323 2 366 2 247 2 204 2 249 1 99 1 327 1 37 1 159 1 294 1 373 2 334 2 165 1 336 2 212 1 
82 1 84 1 136 1 189 1 0 2 24 2 357 1 217 1 145 2 58 1 342 1 91 4 196 4 172 1 321 1 173 1 304 4 200 1 323 2 176 1 247 2 68 1 204 2 249 1 99 1 327 1 10 4 37 1 230 1 159 1 181 1 349 1 294 1 334 2 373 2 13 1 209 1 129 1 165 1 336 2 212 1 
82 1 84 1 136 1 189 1 0 2 24 2 357 1 217 1 145 2 58 1 342 1 91 4 196 4 172 1 321 1 173 1 304 4 200 1 323 2 176 1 247 2 68 1 204 2 249 1 99 1 327 1 10 4 37 1 230 1 159 1 181 1 349 1 294 1 334 2 373 2 13 1 209 1 129 1 165 1 336 2 212 1 
82 1 84 1 315 1 136 1 189 1 0 2 24 2 238 1 357 1 217 1 145 2 58 1 342 1 91 4 196 4 172 1 321 1 173 1 304 4 200 1 323 2 176 1 225 1 366 2 247 2 68 1 249 1 99 1 327 1 10 4 37 1 159 1 181 1 76 2 294 1 334 2 13 1 209 1 129 1 335 2 212 1 
82 1 84 1 136 1 189 1 0 2 24 2 357 1 217 1 284 1 145 3 58 1 342 1 91 4 196 5 172 1 173 1 321 1 304 5 200 1 176 1 323 3 247 2 68 1 204 2 249 1 99 1 327 1 10 4 37 1 230 1 159 1 181 1 349 1 294 1 373 2 334 3 13 1 209 1 129 1 165 1 336 2 212 1 
82 1 84 1 136 1 189 1 0 2 24 2 357 1 217 1 284 1 145 3 58 1 342 1 91 4 196 5 172 1 173 1 321 1 304 5 200 1 176 1 323 3 247 2 68 1 204 2 249 1 99 1 327 1 10 4 37 1 230 1 159 1 181 1 349 1 294 1 373 2 334 3 13 1 209 1 129 1 165 1 336 2 212 1 
82 1 84 1 136 1 189 1 0 2 24 2 357 1 217 1 145 2 58 1 342 1 91 4 196 4 172 1 173 1 321 1 304 4 200 1 323 2 176 1 225 1 366 2 247 2 68 1 249 1 99 1 327 1 10 4 37 1 159 1 181 1 76 2 294 1 127 1 334 2 13 1 129 1 335 2 212 1 
83 1 348 1 257 3 122 1 207 1 22 1 100 5 73 2 192 2 240 2 144 1 104 1 332 1 42 1 272 1 32 2 93 1 16 2 198 1 187 1 224 1 310 1 248 1 
271 1 348 1 22 1 198 1 73 2 187 1 224 1 248 1 20 1 
108 1 84 2 237 1 257 1 52 1 22 1 217 1 195 1 241 1 342 2 32 1 198 1 224 1 267 1 246 1 248 1 348 1 291 1 227 1 120 1 305 1 100 2 73 2 11 1 330 1 370 1 183 1 250 1 185 1 16 1 253 1 187 1 46 1 278 1 132 1 80 1 376 1 20 1 
108 1 257 12 52 1 168 2 340 1 217 1 342 3 170 2 62 2 63 2 224 3 348 3 226 2 120 1 227 2 305 1 124 1 73 6 11 2 183 2 272 1 276 6 185 2 16 12 187 3 278 1 132 2 80 2 20 1 83 2 84 3 237 2 22 3 357 1 192 5 143 2 240 5 195 1 144 4 32 3 93 2 360 2 198 3 151 1 152 6 246 1 248 3 206 1 207 1 100 24 330 1 370 6 332 2 42 1 104 4 250 1 295 2 253 2 376 1 
188 1 108 1 84 1 257 1 258 1 52 2 110 1 301 1 22 2 55 1 217 1 195 8 1 1 341 1 342 1 198 2 224 2 286 1 67 1 245 1 246 1 248 2 348 2 120 1 305 1 100 2 73 4 11 2 330 7 250 1 185 2 16 1 253 2 130 2 187 2 132 3 310 1 376 8 338 1 
84 1 257 1 22 1 192 1 217 1 240 1 219 1 144 1 342 1 360 1 198 1 62 1 224 1 152 1 248 1 348 1 226 1 120 1 229 1 305 1 100 3 73 2 370 1 104 1 126 1 276 1 16 2 187 1 20 1 
348 1 257 2 22 1 100 2 74 1 73 2 192 1 370 1 104 1 12 1 276 1 198 1 62 1 187 1 224 1 152 1 310 1 248 1 
348 1 22 1 100 2 73 2 192 1 370 1 240 1 218 1 144 1 276 1 360 1 198 1 16 2 187 1 224 1 152 1 310 1 248 1 
348 1 226 1 257 2 22 1 100 4 74 1 73 2 192 2 370 2 240 1 144 1 104 1 360 1 276 2 16 2 198 1 62 1 187 1 224 1 152 2 310 1 248 1 
188 1 348 1 257 2 22 1 100 2 74 1 73 2 192 1 370 1 104 1 12 1 276 1 198 1 62 1 187 1 224 1 152 1 248 1 
188 1 348 1 22 1 100 2 73 2 370 1 218 1 144 1 276 1 360 1 198 1 16 2 187 1 224 1 152 1 248 1 
188 1 348 1 226 1 257 2 22 1 100 4 73 2 370 2 144 1 104 1 360 1 276 2 16 2 198 1 62 1 187 1 224 1 152 2 248 1 
348 1 226 1 257 2 22 1 100 4 74 1 73 2 192 2 370 2 240 1 144 1 104 1 360 1 276 2 16 2 198 1 62 1 187 1 224 1 152 2 248 1 
108 1 84 1 257 1 237 1 52 1 22 1 195 1 342 1 32 1 198 1 224 1 246 1 248 1 348 1 227 1 100 2 73 2 11 1 330 1 183 1 295 1 185 1 16 1 253 1 187 1 132 1 80 1 376 1 
108 1 84 1 257 1 237 1 52 1 22 1 195 1 342 1 32 1 2 1 198 1 224 1 246 1 248 1 348 1 227 1 100 2 73 2 11 1 330 1 185 1 16 1 253 1 187 1 309 1 132 1 133 1 376 1 
348 1 226 1 257 2 22 1 100 4 74 1 73 2 192 2 370 2 240 1 144 1 104 1 360 1 276 2 16 2 198 1 62 1 187 1 224 1 152 2 20 1 248 1 
84 1 257 2 237 1 22 1 192 2 240 1 143 1 144 1 195 1 342 1 360 1 62 1 198 1 224 1 152 2 245 1 248 1 348 1 226 1 227 1 100 4 74 1 73 2 11 1 370 2 330 1 104 1 183 1 295 1 276 2 185 1 16 2 253 1 187 1 132 1 80 1 376 1 
84 1 257 2 22 1 192 1 217 1 144 1 219 1 342 1 360 1 198 1 33 1 62 1 224 1 152 1 248 1 348 1 226 1 120 1 229 1 305 1 100 3 74 1 73 2 370 1 104 1 276 1 16 1 187 1 20 1 
339 2 257 27 53 4 220 4 221 2 62 7 265 2 66 1 347 1 226 7 348 4 123 1 74 8 73 8 306 1 350 1 272 1 14 1 16 24 277 1 308 1 83 1 22 4 192 15 240 7 144 7 193 1 359 1 360 6 93 1 198 4 97 2 248 4 207 1 100 51 372 1 104 8 42 1 332 1 161 1 163 1 47 3 300 1 
257 13 22 3 53 2 192 2 240 1 144 2 193 2 220 2 221 2 359 1 360 2 198 3 62 3 97 2 66 1 248 3 348 3 226 3 72 1 123 2 100 24 74 1 73 6 306 1 372 1 104 3 350 1 14 1 161 1 16 11 277 1 163 1 47 3 300 1 
83 1 339 2 257 27 53 4 22 4 192 14 240 7 193 1 144 7 220 4 359 1 221 2 93 1 360 6 198 4 62 7 97 2 265 2 66 1 248 4 347 1 348 4 226 7 207 1 72 1 123 1 100 51 73 8 74 7 306 1 372 1 332 1 42 1 104 8 272 1 350 1 14 1 161 1 277 1 16 24 163 1 47 3 300 1 
83 1 339 2 257 27 53 4 22 4 192 13 240 6 193 1 144 7 220 4 359 1 221 2 93 1 360 6 198 4 62 7 97 2 265 2 66 1 248 4 347 1 348 4 226 7 207 1 72 1 123 1 100 51 73 8 74 7 306 1 372 1 332 1 42 1 104 8 272 1 350 1 14 1 161 1 277 1 16 24 163 1 47 3 300 1 
83 1 339 2 257 24 53 4 22 2 192 12 240 6 193 1 144 7 220 4 359 1 221 2 93 1 360 6 198 2 62 6 97 1 265 2 66 1 248 2 348 2 226 6 207 1 72 1 123 1 100 46 73 4 74 6 306 1 372 1 332 1 42 1 104 7 272 1 350 1 14 1 161 1 277 1 16 22 163 1 47 3 300 1 
346 1 292 1 153 1 270 1 158 1 28 1 29 1 59 1 92 1 131 1 81 1 
164 1 39 1 
90 1 59 1 64 1 158 1 131 1 287 1 28 1 81 1 29 1 
84 1 51 1 86 1 281 1 85 1 23 1 357 1 28 1 217 1 316 1 29 1 219 1 317 1 342 1 59 1 58 1 92 1 91 1 118 2 346 1 292 1 120 1 153 1 305 1 293 1 10 1 158 1 331 1 210 1 131 1 81 1 
84 1 51 1 86 1 281 1 85 1 23 1 357 1 28 1 217 1 316 1 29 1 219 1 317 1 342 1 59 1 58 1 92 1 91 1 118 2 346 1 292 1 120 1 153 1 305 1 293 1 10 1 158 1 331 1 210 1 131 1 81 1 
84 1 51 1 86 1 281 1 85 1 23 1 357 1 28 1 217 1 316 1 29 1 219 1 317 1 342 1 59 1 58 1 92 1 91 1 118 2 346 1 292 1 120 1 153 1 305 1 293 1 10 1 158 1 331 1 210 1 131 1 81 1 
205 1 374 1 375 1 
205 1 374 1 375 1 
354 1 364 1 
354 1 364 1 375 1 
49 1 57 1 
84 2 262 1 28 1 217 2 316 1 29 1 57 1 342 2 59 1 91 1 32 1 118 1 319 1 290 1 120 2 368 1 293 1 305 2 10 1 158 1 39 1 103 1 164 1 131 1 81 1 49 1 213 1 
205 1 374 1 
354 1 364 1 375 1 
108 1 235 1 84 2 257 1 110 1 22 1 217 2 195 2 342 2 198 1 224 1 67 1 246 1 248 1 348 1 100 2 73 2 11 1 330 2 182 1 274 1 232 1 185 1 16 1 253 1 130 2 187 1 45 1 132 1 376 2 20 1 
313 1 228 2 214 1 261 1 330 2 125 1 113 1 195 2 102 1 341 1 117 1 185 1 251 1 253 1 65 1 279 1 376 2 245 1 379 1 
313 1 228 2 214 1 261 1 330 1 125 1 113 1 195 1 102 1 341 1 117 1 185 1 251 1 253 1 149 1 376 1 379 1 
258 1 52 1 11 1 330 1 195 1 102 1 1 1 79 1 128 1 185 1 253 1 132 1 65 1 376 1 
313 1 228 2 214 1 261 1 330 1 125 1 113 1 195 1 102 1 341 1 117 1 185 1 251 1 253 1 65 1 279 1 376 1 379 1 
208 1 
58 1 136 1 122 1 327 1 215 1 167 1 176 1 
136 1 189 1 24 1 58 2 91 1 172 1 173 1 304 1 200 1 176 1 366 1 204 1 327 1 10 1 373 1 165 1 336 1 
166 2 52 1 215 1 167 1 168 2 58 8 171 6 173 4 172 4 303 1 62 2 304 5 345 2 176 9 8 2 68 2 226 2 227 3 121 2 10 5 11 3 231 2 185 4 186 2 353 3 132 10 19 1 236 1 189 4 136 8 24 3 239 2 195 3 144 2 31 1 91 5 360 2 200 4 322 1 201 2 245 1 366 12 203 1 35 2 156 6 327 2 330 3 104 2 373 6 43 2 162 1 44 2 253 3 376 3 
189 2 136 4 53 1 24 1 144 2 220 1 221 1 58 4 359 1 91 1 171 5 360 2 172 2 173 2 62 2 304 1 200 2 176 7 366 6 35 2 226 2 156 5 327 1 10 1 306 1 104 2 373 3 350 1 14 1 163 1 337 1 
83 1 84 1 189 1 136 1 51 1 85 1 357 1 217 1 219 1 342 1 91 1 93 1 172 1 173 1 200 1 176 1 35 1 120 1 305 1 10 1 124 1 349 1 331 1 332 1 104 1 210 1 
189 1 136 1 327 1 215 1 167 1 58 1 173 1 172 1 200 1 176 1 
226 2 136 5 156 5 168 1 104 2 144 2 373 5 58 5 171 5 360 2 62 2 186 1 176 5 366 10 35 2 
58 1 91 1 327 1 10 1 304 1 24 1 
236 2 189 1 166 2 136 2 258 1 52 2 54 1 24 2 140 1 89 1 195 4 31 2 1 1 91 3 172 2 173 2 304 4 200 2 322 1 176 2 10 3 11 1 330 4 185 1 253 1 17 1 132 1 376 4 255 1 
84 3 51 1 237 1 52 1 22 1 217 2 195 1 219 2 342 3 32 1 198 1 224 1 246 1 248 1 348 1 120 2 227 1 305 2 100 1 157 1 73 2 11 1 330 1 183 1 295 1 185 1 16 1 253 1 187 1 132 1 376 1 80 1 
136 2 189 1 166 1 156 2 207 1 327 2 373 2 31 1 58 4 171 2 173 1 172 1 200 1 176 1 366 4 
59 1 362 1 158 1 
106 1 59 1 119 1 158 1 57 1 
59 1 362 1 158 1 
59 1 362 1 158 1 
59 1 211 1 158 1 
59 1 211 1 158 1 
59 1 211 1 158 1 
59 1 158 1 
28 1 81 1 
83 2 257 7 22 2 192 5 240 3 144 2 93 2 198 2 97 1 248 2 348 2 207 1 100 14 124 1 73 4 74 2 42 1 332 2 104 2 272 1 16 7 
83 1 272 1 257 3 122 1 93 1 207 1 16 2 100 5 192 2 240 2 144 1 104 1 332 1 42 1 
348 1 226 1 257 2 22 1 100 4 73 2 192 1 240 1 144 1 104 1 275 1 360 1 16 2 198 1 62 1 248 1 
339 1 226 2 257 6 53 2 100 12 74 2 192 4 240 2 144 2 104 2 220 2 221 1 360 2 16 6 62 2 265 1 
83 2 339 1 257 11 53 2 22 1 192 6 240 5 144 4 220 2 93 2 360 2 62 2 198 1 265 1 97 1 248 1 226 2 348 1 155 1 207 1 100 22 124 1 74 1 73 2 332 2 42 1 104 4 272 1 16 11 
53 1 16 1 100 1 
220 1 257 1 100 1 
348 1 226 1 257 3 22 1 100 6 73 2 168 1 74 2 192 3 240 1 104 1 144 1 275 1 360 1 198 1 16 3 62 1 248 1 
257 6 53 1 22 1 192 2 240 1 144 2 220 1 221 1 359 1 360 2 198 1 62 2 248 1 348 1 226 2 100 12 73 2 74 1 306 1 372 1 104 2 350 1 14 1 16 6 163 1 
83 1 257 3 100 6 74 1 192 2 240 1 332 1 104 1 144 1 93 1 16 3 
83 1 348 1 257 1 22 1 100 3 74 1 73 2 192 2 240 1 42 1 272 1 93 1 16 2 198 1 97 1 177 1 248 1 
83 1 257 2 100 5 124 1 192 1 240 1 332 1 104 1 144 1 93 1 16 3 
348 1 257 2 22 1 100 2 73 2 74 1 192 1 372 1 104 1 198 1 62 1 248 1 
348 1 226 1 257 2 22 1 100 4 73 2 74 1 192 2 240 1 372 1 144 1 104 1 360 1 16 2 198 1 62 1 248 1 
347 1 83 1 348 3 257 1 22 3 100 3 73 6 74 1 192 2 372 1 240 1 93 1 16 2 198 3 97 1 177 1 248 3 
83 2 257 14 53 3 22 4 192 7 240 4 358 1 144 4 220 3 221 1 93 2 360 2 198 4 62 2 97 1 325 1 248 4 347 1 348 4 226 2 207 1 100 28 124 1 73 8 74 3 369 1 372 1 332 2 42 1 104 4 272 1 275 1 16 14 
83 2 257 6 53 1 22 1 192 3 240 3 144 2 220 1 221 1 93 2 198 1 248 1 348 1 207 1 100 12 124 1 73 2 372 1 104 2 42 1 332 2 272 1 16 6 163 1 
83 2 339 1 257 8 53 2 22 2 192 4 240 3 144 2 220 1 221 1 93 2 198 2 62 1 248 2 348 2 226 1 207 1 100 15 124 1 73 4 74 1 372 1 332 2 42 1 104 3 272 1 275 1 16 7 163 1 
257 6 53 1 22 3 192 3 240 2 144 2 220 1 221 1 359 1 360 2 198 3 62 2 97 1 248 3 348 3 226 2 100 13 74 1 73 6 306 1 372 1 104 2 350 1 275 1 14 1 16 7 163 1 
257 7 53 1 22 3 192 1 144 1 220 1 221 1 359 1 360 1 198 3 62 2 97 1 248 3 348 3 226 2 100 11 73 6 74 1 306 1 372 1 104 2 350 1 275 1 14 1 16 4 163 1 
83 2 257 6 53 1 22 1 192 3 240 3 144 2 220 1 221 1 93 2 198 1 248 1 348 1 207 1 100 12 124 1 73 2 372 1 104 2 42 1 332 2 272 1 16 6 163 1 
257 6 53 1 22 1 192 2 240 1 144 2 220 1 221 1 359 1 360 2 198 1 62 2 248 1 348 1 226 2 100 12 73 2 74 1 306 1 372 1 104 2 350 1 14 1 16 6 163 1 
257 7 53 1 22 4 192 2 240 1 144 1 220 1 221 1 359 1 360 1 198 4 62 2 97 2 248 4 348 4 226 2 100 12 74 1 73 8 306 1 372 1 104 2 350 1 275 1 14 1 16 5 163 1 
257 7 53 1 22 3 192 2 144 1 220 1 221 1 359 1 360 1 198 3 62 2 97 1 248 3 347 1 348 3 226 2 100 11 73 6 74 2 306 1 372 1 104 2 350 1 14 1 16 4 163 1 
83 3 257 3 100 7 74 3 192 6 240 3 144 1 42 2 332 1 104 1 272 1 93 3 16 4 
257 7 53 1 22 4 192 2 240 1 144 1 220 1 221 1 359 1 360 1 198 4 62 2 97 2 248 4 347 1 348 4 226 2 100 12 74 1 73 8 306 1 372 1 104 2 350 1 14 1 16 5 163 1 
84 1 342 1 13 1 146 1 32 1 299 1 217 1 
84 1 70 1 260 1 217 1 194 1 146 1 13 1 342 1 32 1 197 1 223 1 299 1 
1 1 258 1 122 1 52 1 185 1 253 1 11 1 132 1 330 1 376 1 195 1 
84 2 227 1 120 1 237 1 52 1 305 1 11 1 330 1 217 1 195 1 183 1 342 2 250 1 32 1 185 1 253 1 132 1 376 1 
84 2 236 1 237 1 357 1 217 2 195 1 342 2 32 1 321 1 120 1 227 2 305 2 37 1 11 2 330 1 183 1 250 1 43 1 185 1 44 1 253 1 132 3 376 1 
84 2 236 1 237 1 357 1 217 2 195 2 342 2 32 1 2 1 321 1 361 1 120 1 227 2 305 2 37 1 11 2 330 2 250 1 43 1 185 1 44 1 253 1 132 3 376 2 
236 1 109 1 52 1 195 3 58 1 91 2 263 1 361 1 304 1 345 1 68 1 227 1 327 1 10 2 11 1 330 3 43 1 185 1 44 1 253 1 132 4 353 1 376 3 
227 1 236 1 52 1 327 1 10 2 11 1 239 1 330 3 195 3 58 1 91 2 43 1 185 1 361 1 44 1 304 1 253 1 345 1 353 1 132 4 376 3 68 1 
185 1 253 1 330 1 376 1 195 1 338 1 
227 1 52 2 110 1 301 1 137 1 269 1 139 1 11 2 55 1 330 6 195 7 341 1 303 1 185 3 130 1 253 2 132 3 286 1 376 7 245 1 338 1 
257 5 217 1 342 2 170 1 224 2 348 2 120 1 227 1 305 1 124 1 73 4 11 1 183 1 272 1 185 1 16 5 187 2 132 1 80 1 20 1 83 2 84 2 235 1 237 1 22 2 357 1 192 3 143 1 240 3 195 1 144 2 32 3 93 2 198 2 151 1 245 1 248 2 207 1 100 10 330 1 42 1 332 2 104 2 250 1 295 1 253 1 376 1 
136 1 189 2 52 1 215 1 167 1 24 1 239 1 195 1 58 1 91 3 172 2 173 2 304 2 200 2 345 1 176 1 322 1 201 1 68 1 121 1 327 1 10 3 231 1 330 1 103 1 353 1 132 2 376 1 
227 1 11 1 330 2 195 2 303 1 185 2 162 1 253 1 345 1 132 2 376 2 245 1 338 1 
258 1 52 1 11 1 330 4 195 4 1 1 185 1 361 1 253 1 352 1 132 1 376 4 245 1 
227 1 236 1 137 1 269 1 11 1 25 1 40 1 330 2 195 2 185 2 253 1 132 1 376 2 134 1 
313 1 117 1 228 1 52 1 185 1 253 1 261 1 330 1 376 1 195 1 
110 1 11 1 330 2 195 2 341 1 274 1 185 1 253 1 132 1 376 2 245 1 
236 1 258 1 52 1 110 1 11 2 330 4 55 1 195 5 1 1 185 2 253 2 352 1 132 3 286 1 376 5 245 1 
236 1 258 1 52 1 110 1 11 2 330 4 55 1 195 5 1 1 185 2 253 2 352 1 132 3 376 5 245 1 377 1 
84 2 227 1 120 1 237 1 52 1 305 1 11 1 330 1 217 1 195 1 342 2 250 1 32 1 2 1 185 1 253 1 132 1 376 1 
227 1 236 1 137 1 269 1 139 1 11 1 330 1 195 1 303 1 185 2 253 1 132 1 376 1 
84 1 342 1 232 1 344 1 234 1 45 1 324 1 217 1 182 1 
329 1 324 1 280 1 
32 1 307 1 344 1 234 1 324 1 
327 1 37 1 10 2 329 1 357 1 41 1 103 1 58 1 91 2 32 1 307 2 184 1 344 2 321 1 129 1 234 2 324 1 280 1 68 1 
60 1 122 1 15 1 298 1 
60 1 9 1 15 1 191 1 298 1 180 1 202 1 
285 1 56 1 202 1 
9 3 356 1 191 1 180 1 30 1 78 1 77 1 60 1 15 1 298 1 202 3 268 2 
105 1 60 1 9 2 15 1 191 1 298 1 180 1 311 1 202 2 
313 1 77 1 228 1 9 1 147 1 214 1 150 1 191 1 298 1 180 1 202 1 
77 1 60 1 9 1 191 1 298 1 180 1 202 1 
77 1 60 2 9 1 15 1 191 1 180 1 202 1 
9 2 191 2 180 2 77 1 60 1 343 1 252 1 5 1 298 1 202 2 
9 3 191 1 180 1 27 1 77 1 60 1 15 1 160 1 147 1 6 1 298 2 202 3 311 2 
313 1 228 2 9 2 214 1 261 1 191 1 180 1 77 1 60 1 15 1 251 1 199 1 298 1 202 2 311 1 
9 4 191 2 180 2 77 1 105 1 60 1 15 1 147 1 6 1 298 2 202 4 311 2 21 1 
77 1 60 1 9 1 15 1 191 1 298 1 180 1 202 1 
154 1 9 4 356 1 191 1 180 1 30 1 60 2 15 2 147 1 6 1 298 3 268 1 311 2 202 4 
9 2 191 1 180 1 88 1 77 1 60 1 15 1 254 1 298 1 7 1 202 2 311 1 
9 3 356 2 191 1 180 1 30 1 77 1 60 1 15 1 298 1 48 1 202 3 268 2 
318 2 244 1 298 2 216 1 
302 1 77 1 9 1 191 1 180 1 202 1 
77 1 60 1 9 2 15 1 160 1 191 1 298 1 180 1 311 1 202 2 
98 1 
77 1 60 1 9 1 15 1 191 1 298 1 180 1 202 1 
9 3 191 1 180 1 77 1 60 1 15 1 160 1 298 1 311 1 202 3 268 1 
154 1 147 1 6 1 298 1 
60 1 298 1 

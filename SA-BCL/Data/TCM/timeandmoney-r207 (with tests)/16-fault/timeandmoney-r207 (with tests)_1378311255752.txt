#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (129,312) (129,312) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (129,312) (129,312) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (129,312) (129,312) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (129,312) (129,312) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) 264 61 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) 264 18 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (27,188) 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) (62,67,247) 155 46 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 151 200 262 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 151 200 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 151 200 262 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 151 200 262 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 151 200 262 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (50,305) 303 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (50,305) 303 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (50,305) 35 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (50,305) 35 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 185 112 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 242 260 294 26 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 242 260 294 26 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 242 260 294 26 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 242 260 294 26 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (27,188) (27,188) 308 (143,278) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (27,188) (27,188) 308 (28,117) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (27,188) (27,188) (62,67,247) 264 176 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 296 1 311 1 129 1 98 1 23 1 258 1 297 1 312 1 65 1 323 1 180 1 72 1 
0 1 296 1 311 1 129 1 98 1 23 1 297 1 258 1 312 1 65 1 323 1 180 1 72 1 
0 1 296 1 311 1 129 1 98 1 23 1 297 1 258 1 312 1 65 1 323 1 180 1 72 1 
0 1 296 1 311 1 129 1 98 1 23 1 297 1 258 1 312 1 65 1 323 1 180 1 72 1 
289 1 320 1 311 4 277 1 98 1 23 4 134 1 88 1 297 1 258 1 198 2 233 2 270 3 65 1 221 1 17 3 180 1 334 1 
289 1 309 1 311 2 98 1 23 2 134 1 88 1 297 1 13 1 65 1 323 1 17 1 180 1 48 1 39 1 72 1 
311 3 98 2 23 3 134 1 88 1 297 1 233 1 270 1 65 2 221 1 17 2 253 1 72 1 
320 1 277 1 23 9 134 1 88 1 297 1 258 1 298 1 233 4 65 2 72 1 142 1 289 1 169 1 311 9 98 2 198 2 270 7 221 3 271 1 17 5 180 1 253 1 334 1 
320 1 277 1 23 9 134 1 88 1 297 1 258 1 298 1 233 4 65 2 72 1 142 1 289 1 169 1 311 9 98 2 198 2 270 7 221 3 271 1 17 5 180 1 253 1 334 1 
97 1 310 1 255 1 
321 1 255 1 173 2 
265 2 139 2 353 2 292 2 201 2 183 1 348 1 345 2 
128 1 21 1 276 2 336 1 278 1 232 1 135 1 64 1 212 1 91 1 304 1 325 1 236 2 139 2 283 1 70 2 214 1 30 1 345 2 168 2 145 1 308 1 265 2 195 1 266 1 99 1 268 1 348 1 351 2 252 1 353 3 292 2 56 1 57 1 201 3 183 1 103 1 
59 1 265 1 133 1 139 1 353 1 292 1 201 1 348 1 345 1 153 1 
188 1 15 1 67 1 27 1 133 1 353 1 292 1 247 1 201 1 
188 1 27 1 265 1 133 1 139 1 353 1 292 1 247 1 201 1 345 1 
213 1 92 1 332 1 196 1 62 1 
97 1 255 1 237 1 92 1 332 1 172 1 196 2 62 2 
332 1 196 1 62 1 
59 1 265 1 133 1 62 1 196 1 348 1 110 1 153 1 139 1 92 1 292 1 353 1 201 1 345 1 
255 1 
97 1 255 1 237 1 92 1 332 1 93 1 196 2 62 2 
59 1 227 1 133 1 255 2 5 1 62 5 230 1 110 1 279 2 139 1 237 1 240 1 92 2 345 1 307 1 263 2 192 1 120 1 265 1 97 2 14 1 196 5 52 2 249 2 348 1 53 5 174 5 153 1 152 2 315 1 316 1 36 1 353 1 292 1 332 2 201 1 273 2 204 1 
310 1 183 1 
265 1 54 1 139 1 292 2 353 2 38 1 201 2 183 2 345 1 
219 1 328 1 19 1 
308 1 276 1 266 1 336 1 268 1 278 1 135 1 236 1 252 1 304 1 353 1 70 1 56 1 201 1 183 1 166 1 
335 1 265 1 139 3 353 3 292 3 201 3 183 1 345 3 
133 1 139 1 353 1 292 1 201 1 345 1 153 1 
265 1 133 1 54 1 139 1 353 1 292 1 38 1 201 1 345 1 
335 1 264 1 265 1 133 1 247 1 61 1 188 1 161 1 27 1 139 2 292 2 353 2 38 1 201 2 345 2 
335 1 15 1 96 1 139 1 353 2 292 2 201 2 183 1 345 1 
335 1 264 1 133 1 247 1 161 1 188 1 27 1 139 1 18 1 292 1 353 1 201 1 345 1 
335 1 265 1 139 2 292 2 353 2 328 1 38 1 201 2 19 1 345 2 
308 1 276 1 266 1 336 1 268 1 278 1 135 1 236 1 252 1 304 1 353 1 70 1 56 1 201 1 183 1 
308 1 276 1 266 1 336 1 135 1 236 1 252 1 304 1 353 1 70 1 56 1 157 1 28 1 201 1 183 1 
128 2 21 2 130 1 232 1 64 1 279 1 235 1 91 1 328 2 30 1 49 1 168 2 145 1 242 1 195 1 77 1 34 1 152 1 349 1 219 2 351 4 179 1 19 2 184 1 
27 1 133 1 139 1 353 1 292 1 201 1 248 1 345 1 
335 1 308 1 276 1 266 1 336 1 278 1 268 1 135 1 161 1 304 1 252 1 236 1 139 1 328 1 292 1 353 2 70 1 56 1 201 2 345 1 
335 2 96 1 265 1 215 1 161 1 15 1 139 4 292 5 353 5 38 1 201 5 183 1 345 4 10 1 
133 1 139 2 353 2 292 2 201 2 248 1 345 2 153 1 
346 1 81 1 
346 1 81 1 
116 1 199 1 
116 1 199 1 
116 1 199 1 
346 1 81 1 284 1 
346 1 81 1 284 1 
346 1 81 1 284 1 
346 1 81 1 125 1 
346 2 116 1 81 2 51 1 305 1 199 1 
346 1 108 1 81 1 
346 1 108 1 81 1 
346 1 108 1 81 1 
346 2 159 2 50 1 255 1 187 1 122 1 62 2 196 2 44 1 272 2 115 1 181 2 81 2 238 2 190 2 354 1 84 1 333 3 86 1 
75 1 346 1 267 1 122 1 62 1 196 1 197 1 63 1 125 1 272 1 139 2 181 1 353 2 292 2 81 1 238 1 190 1 127 1 201 2 183 1 329 1 20 1 333 1 345 2 
289 1 180 1 258 1 
289 1 180 1 39 1 
154 1 3 1 180 3 338 1 258 2 39 1 
138 1 154 1 180 2 338 1 258 1 39 1 
154 1 180 2 338 2 258 1 39 1 
321 1 255 2 87 1 62 5 63 1 279 1 260 1 259 1 8 2 237 1 281 1 92 4 94 1 73 1 263 1 192 1 242 1 97 1 196 5 52 1 173 2 249 1 53 2 313 1 174 1 100 1 127 1 332 1 158 1 20 1 
321 1 133 1 87 1 279 1 139 1 237 1 92 5 192 1 242 1 97 1 245 1 196 6 52 1 249 1 53 2 153 1 292 1 55 1 100 1 332 4 201 1 158 1 20 2 59 1 255 3 62 6 110 1 260 1 213 3 73 1 345 1 263 1 121 1 265 1 173 2 348 1 313 1 174 1 220 3 353 1 
59 1 321 1 133 1 255 2 87 1 62 3 110 1 259 1 260 1 279 1 8 1 139 1 281 1 92 2 73 1 345 1 263 1 242 1 265 1 97 1 196 3 52 1 249 1 173 2 348 1 313 1 53 2 174 1 153 1 315 1 353 1 292 1 100 1 201 1 20 1 
321 2 133 1 87 2 279 2 8 2 281 1 139 1 92 3 242 2 97 1 196 4 52 1 249 1 291 1 53 4 153 1 292 1 100 2 201 1 293 1 20 2 59 1 60 1 255 3 62 4 110 1 260 2 259 1 73 1 263 1 345 1 265 1 173 4 348 1 313 1 174 1 315 1 353 1 
206 1 310 1 135 1 
228 1 135 1 
275 1 
304 1 135 1 
206 2 304 1 266 1 164 1 135 3 150 1 
304 1 266 1 135 1 
160 1 135 1 
128 3 120 1 21 4 131 1 107 1 14 1 279 1 152 1 235 3 301 2 45 1 162 1 351 7 240 1 118 1 49 2 274 1 
128 3 120 1 21 4 131 1 107 1 14 1 279 1 152 1 235 3 301 2 45 1 162 1 351 7 240 1 118 1 49 2 274 1 
128 3 120 1 21 4 131 1 107 1 14 1 43 1 279 1 152 1 235 3 301 2 45 1 162 1 351 7 240 1 118 1 49 2 274 1 
128 12 21 19 229 1 131 5 107 1 64 2 280 4 260 4 279 5 301 3 235 8 66 1 45 1 162 2 47 1 282 1 240 1 239 1 344 4 30 2 118 2 306 1 74 1 49 3 287 2 168 4 120 2 145 2 242 4 195 2 14 2 152 2 351 31 83 1 274 1 184 1 
128 4 21 5 131 1 107 1 64 2 279 1 301 2 235 4 322 1 162 1 240 1 30 2 118 1 49 3 287 1 168 4 145 2 120 1 195 2 14 1 152 1 218 1 351 9 274 1 
276 1 3 1 23 2 336 1 134 1 88 1 258 1 297 1 111 1 210 1 65 1 236 1 163 1 68 1 327 1 70 1 29 1 31 1 72 1 288 1 289 1 311 2 98 1 270 1 252 1 17 1 180 2 39 1 40 1 203 1 
276 1 3 1 23 3 336 1 134 1 88 1 258 1 6 1 111 1 210 1 65 1 236 1 163 1 68 1 70 1 29 1 285 1 31 1 72 1 289 1 311 3 98 1 270 2 252 1 17 1 180 2 58 1 39 1 40 1 203 1 
276 1 3 1 23 2 336 1 134 1 88 1 258 1 6 1 111 1 210 1 236 1 68 1 70 1 29 1 285 1 72 1 289 1 311 2 270 2 252 1 17 1 180 2 39 1 40 1 203 1 
276 1 23 1 336 1 299 1 135 1 111 2 210 2 211 1 65 1 236 1 304 1 70 1 72 2 167 1 311 1 98 1 216 1 80 1 252 1 56 1 58 1 40 2 254 1 
276 1 3 1 23 1 336 1 258 1 297 1 111 1 210 1 65 1 236 1 163 1 68 1 327 1 70 1 29 1 285 1 31 1 72 1 289 1 311 1 98 1 252 1 180 2 39 1 40 1 203 1 
341 1 
276 2 133 1 336 1 62 2 299 1 135 1 188 1 67 1 27 1 46 1 343 1 236 2 304 1 237 1 70 2 95 1 286 1 263 1 192 1 243 1 247 1 196 2 52 1 78 1 249 1 313 1 53 1 174 1 15 1 155 1 252 1 353 1 292 1 56 2 332 2 201 1 254 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 2 196 2 78 1 188 1 67 1 15 1 27 1 46 1 155 1 237 1 353 1 292 1 93 1 332 1 201 1 95 1 
133 1 247 1 62 1 196 1 52 1 249 1 78 1 188 1 15 1 67 1 27 1 46 1 155 1 353 1 292 1 201 1 95 1 192 1 263 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 78 1 188 1 67 1 15 1 27 1 46 1 155 1 292 1 353 1 95 1 201 1 
133 1 247 1 62 1 196 1 52 1 249 1 78 1 188 1 15 1 67 1 27 1 46 1 155 1 353 1 292 1 201 1 95 1 192 1 263 1 
128 3 21 3 107 1 232 1 64 1 279 1 235 2 301 1 91 1 328 1 240 1 30 1 49 2 168 2 145 1 120 1 310 1 195 1 14 1 152 1 349 1 219 1 351 6 19 1 183 2 274 1 
128 3 21 1 133 1 132 1 232 1 64 2 280 1 91 2 328 3 344 1 30 2 168 4 145 2 195 2 99 1 148 1 79 1 219 3 351 4 126 1 83 1 183 1 105 1 
335 1 128 1 21 1 276 1 336 1 278 1 232 1 135 1 64 1 161 1 304 1 236 1 91 1 139 1 70 1 214 1 30 1 166 1 345 1 168 2 144 1 308 1 145 1 266 1 195 1 99 1 268 1 252 1 351 2 126 1 353 2 292 1 56 1 82 1 225 1 201 2 19 1 183 1 
128 7 2 2 276 1 131 1 133 1 278 2 232 3 135 2 279 4 235 3 236 1 91 3 139 1 240 1 9 2 328 4 49 2 145 3 242 2 195 3 99 1 14 1 152 2 252 2 292 1 56 1 201 3 19 4 335 1 21 11 336 2 107 1 109 1 64 3 260 2 161 1 342 2 212 2 304 2 70 1 214 1 165 1 30 3 71 2 307 1 345 1 168 6 120 1 308 2 266 2 268 2 79 1 219 4 351 18 126 1 353 3 183 1 274 1 
335 1 128 1 21 1 276 7 336 2 24 1 232 2 299 1 135 3 64 2 236 8 91 2 325 2 304 2 139 1 70 8 214 1 191 1 285 1 30 2 345 1 288 1 168 4 145 2 195 2 246 1 99 1 314 1 349 1 252 2 351 2 318 1 353 1 292 1 331 1 56 2 182 1 201 1 254 1 
21 1 232 1 64 1 260 1 279 1 91 1 139 1 30 1 345 1 168 2 145 1 242 1 265 1 195 1 351 1 126 1 224 1 292 1 353 1 38 1 201 1 
168 2 145 1 21 2 242 1 195 1 131 1 77 1 232 1 64 1 279 1 235 1 219 1 349 1 351 2 91 1 328 1 19 1 30 1 
168 2 128 2 145 1 195 1 232 1 64 1 235 1 152 1 219 1 349 1 351 2 91 1 179 1 328 1 19 1 30 1 49 1 184 1 
168 2 145 1 21 2 242 1 195 1 232 1 64 1 260 1 279 1 219 1 349 1 351 2 91 1 328 1 19 1 30 1 
168 2 145 1 21 2 242 1 195 1 131 1 77 1 232 1 64 1 279 1 235 1 219 1 351 2 91 1 328 1 191 1 19 1 30 1 
168 2 128 2 145 1 195 1 232 1 64 1 235 1 152 1 219 1 351 2 91 1 179 1 328 1 191 1 19 1 30 1 49 1 184 1 
168 2 145 1 21 2 242 1 195 1 232 1 64 1 260 1 279 1 219 1 351 2 91 1 328 1 191 1 19 1 30 1 
168 2 145 1 21 2 242 1 195 1 232 1 64 1 260 1 279 1 219 1 91 1 351 2 328 1 19 1 30 1 
128 1 21 1 276 1 336 1 278 1 232 1 135 1 64 1 212 1 304 1 236 1 91 1 70 1 214 1 30 1 168 2 308 1 145 1 266 1 195 1 99 1 268 1 351 2 252 1 353 1 56 1 201 1 183 1 
128 1 21 1 276 1 336 1 232 1 135 1 64 1 304 1 236 1 91 1 70 1 214 1 28 1 30 1 168 2 308 1 145 1 266 1 195 1 99 1 351 2 252 1 353 1 157 1 56 1 201 1 183 1 85 1 
168 2 145 1 21 2 242 1 195 1 232 1 64 1 260 1 279 1 219 1 351 2 91 1 126 1 328 1 19 1 30 1 
21 2 276 1 336 1 278 1 232 1 135 1 64 1 279 1 260 1 212 1 236 1 304 1 91 1 328 1 70 1 71 1 30 1 288 1 168 2 308 1 145 1 242 1 266 1 195 1 268 1 219 1 351 2 252 1 353 1 201 1 19 1 
128 1 21 2 232 1 64 1 260 1 279 1 91 1 139 1 328 1 30 1 345 1 168 2 145 1 242 1 265 1 195 1 152 1 219 1 222 1 351 3 126 1 292 1 353 1 38 1 201 1 184 1 
168 2 128 1 21 1 145 1 195 1 171 1 231 1 64 1 151 1 218 1 351 2 200 1 262 1 30 1 
168 2 128 1 21 1 145 1 195 1 171 1 231 1 64 1 151 2 218 1 351 2 200 2 262 1 30 1 
168 2 128 1 21 1 145 1 195 1 171 1 231 1 64 1 151 1 218 1 351 2 200 1 262 1 30 1 
168 2 128 1 21 1 145 1 195 1 171 1 231 1 64 1 151 1 218 1 351 2 200 1 262 1 30 1 
168 2 128 1 21 1 145 1 195 1 171 1 231 1 64 1 151 1 218 1 351 2 200 1 262 1 30 1 
346 1 272 1 50 1 115 1 181 1 238 1 81 1 190 1 102 1 86 1 
329 1 125 1 
346 1 272 1 170 1 181 1 238 1 81 1 190 1 90 1 149 1 
346 1 159 1 50 1 255 1 187 1 122 1 62 1 196 1 272 1 115 1 181 1 81 1 238 1 190 1 354 1 84 1 333 2 86 1 
346 1 159 1 50 1 255 1 187 1 122 1 62 1 196 1 272 1 115 1 181 1 81 1 238 1 190 1 354 1 84 1 333 2 86 1 
346 1 159 1 50 1 255 1 187 1 122 1 62 1 196 1 272 1 115 1 181 1 81 1 238 1 190 1 354 1 84 1 333 2 86 1 
303 1 284 1 305 1 
303 1 284 1 305 1 
35 1 108 1 
35 1 108 1 305 1 
75 1 197 1 
159 1 62 1 63 1 139 2 92 1 238 1 190 1 329 1 345 2 75 1 346 1 267 1 196 1 197 1 125 1 272 1 181 1 353 2 81 1 292 2 127 1 201 2 354 1 183 1 333 1 20 1 355 1 
303 1 284 1 
35 1 108 1 305 1 
128 1 205 1 21 1 276 2 336 1 41 1 232 1 135 1 64 1 304 1 236 2 91 1 325 2 70 2 214 1 30 1 168 2 145 1 195 1 246 1 99 1 347 1 251 1 317 1 252 1 351 2 126 1 318 1 353 2 292 2 201 2 
288 1 289 1 276 2 330 1 3 1 336 1 290 1 258 1 111 1 208 1 252 1 236 2 163 1 180 2 70 2 29 1 39 1 285 1 203 1 
289 1 276 1 330 1 3 1 336 1 258 1 111 1 302 1 236 1 163 1 252 1 180 2 70 1 29 1 39 1 285 1 203 1 
276 1 336 1 216 1 299 1 135 1 111 1 208 1 252 1 304 1 236 1 326 1 70 1 56 1 254 1 
289 1 276 1 330 1 3 1 336 1 290 1 258 1 111 1 208 1 252 1 236 1 163 1 180 2 70 1 29 1 39 1 285 1 203 1 
202 1 
227 1 316 1 97 1 310 1 255 1 53 1 174 1 
37 1 52 1 249 1 53 1 174 1 263 1 192 1 
228 1 276 1 266 1 336 1 52 1 123 1 249 1 135 2 150 1 252 2 304 1 236 1 156 1 70 1 56 1 192 1 263 1 
321 2 255 4 87 3 256 1 62 1 280 1 260 2 279 2 26 1 237 1 344 1 306 1 263 2 192 2 243 1 244 1 242 2 146 1 97 2 147 1 196 1 52 2 173 4 249 2 313 1 53 5 174 4 36 1 100 3 332 1 294 1 273 2 295 1 
59 1 133 1 62 1 110 1 279 2 139 1 240 1 307 1 263 1 192 1 345 1 120 1 265 1 14 1 196 1 52 1 249 1 348 1 53 2 174 2 153 1 152 1 36 1 353 1 292 1 319 1 201 1 273 2 
227 1 97 1 255 1 52 1 249 1 53 1 174 1 316 1 192 1 263 1 
242 1 321 1 255 1 87 1 100 1 173 2 53 2 279 1 260 1 
97 1 255 1 237 1 196 1 62 1 332 1 
185 1 276 3 336 1 62 3 299 1 135 1 112 1 343 1 304 1 236 3 237 2 189 1 70 3 286 1 263 2 192 1 243 2 196 3 52 2 249 2 313 1 53 2 174 1 315 1 252 1 56 2 332 4 101 1 254 1 
128 1 276 1 336 1 278 1 232 1 135 1 64 1 212 1 236 1 304 1 91 1 139 2 70 1 30 1 345 2 168 2 308 1 145 1 265 2 195 1 266 1 99 1 268 1 348 1 351 1 252 1 353 3 292 2 56 1 57 1 201 3 183 1 
243 1 97 2 321 2 255 4 87 2 52 1 173 4 249 1 53 2 313 1 174 1 301 1 100 2 192 1 263 1 
238 1 190 1 209 1 
238 1 190 1 209 1 
238 1 190 1 209 1 
75 1 115 1 238 1 190 1 217 1 
238 1 257 1 190 1 
238 1 257 1 190 1 
238 1 257 1 190 1 
238 1 190 1 
346 1 81 1 
128 4 168 4 21 4 145 2 120 1 195 2 131 1 107 1 14 1 64 2 279 1 301 1 152 1 235 3 351 8 240 1 30 2 49 2 287 1 274 1 
128 3 120 1 21 3 310 1 107 1 14 1 279 1 301 1 235 2 152 1 351 6 240 1 49 2 274 1 
168 2 145 1 21 2 242 1 195 1 64 1 260 1 279 1 351 2 223 1 30 1 
128 2 21 6 242 2 131 2 280 2 260 2 279 2 235 2 351 8 47 1 239 1 344 2 306 1 
128 8 21 7 132 1 131 3 107 1 64 1 279 2 280 1 235 6 240 1 344 1 30 1 307 1 49 3 287 1 168 2 145 1 120 2 195 1 14 2 152 2 351 15 83 1 274 1 
128 1 351 1 344 1 
21 1 351 1 280 1 
128 1 21 3 2 1 242 1 131 1 260 1 279 1 235 1 351 4 
128 3 21 6 131 1 64 2 280 1 260 2 279 2 235 2 26 1 344 1 30 2 306 1 49 1 287 1 168 4 145 2 244 1 242 2 195 2 147 1 218 1 351 9 294 1 295 1 
128 3 21 3 120 1 131 1 14 1 279 1 152 1 235 2 351 6 240 1 49 1 
128 2 168 2 21 1 120 1 145 1 195 1 131 1 107 1 14 1 64 1 235 2 351 3 83 1 30 1 49 1 287 1 274 1 
168 2 128 5 145 1 120 2 21 5 195 1 131 2 14 2 64 1 279 2 218 1 235 5 152 2 351 10 240 1 30 1 307 1 49 3 
168 2 145 1 21 2 242 1 195 1 131 1 64 1 279 1 218 1 235 1 351 2 30 1 
128 2 168 2 145 1 21 2 242 1 195 1 131 1 64 1 260 1 279 1 152 1 235 1 218 1 351 4 30 1 184 1 
128 2 168 6 145 3 120 1 21 1 195 3 131 1 14 1 64 3 136 1 218 1 235 2 351 3 83 1 30 3 49 1 287 1 
128 19 21 20 229 1 131 6 107 1 64 5 136 1 280 4 260 4 279 6 301 1 235 10 47 1 282 1 240 2 239 1 344 4 30 5 306 1 74 1 49 4 287 2 168 10 120 3 145 5 242 4 195 5 14 3 218 1 152 5 351 39 223 1 83 1 274 1 184 3 
128 4 21 4 107 1 64 1 279 1 280 1 301 1 235 2 26 1 240 1 344 1 30 1 306 1 49 2 168 2 145 1 120 1 195 1 14 1 152 1 218 1 351 8 274 1 
128 8 21 11 131 2 64 3 280 2 260 4 279 4 235 3 26 1 47 1 239 1 344 2 30 3 306 1 49 1 287 1 168 6 145 3 244 1 242 4 195 3 147 1 218 1 152 2 351 19 223 1 294 1 295 1 184 2 
128 6 21 9 131 1 107 1 64 3 280 1 260 2 279 3 301 1 235 4 26 1 240 1 344 1 30 3 306 1 49 3 287 1 168 6 120 1 145 3 244 1 242 2 195 3 147 1 14 1 152 1 218 1 351 15 223 1 294 1 295 1 274 1 
168 4 128 3 21 6 145 2 242 2 244 1 195 2 147 1 64 2 279 2 260 2 280 1 235 1 218 1 26 1 351 9 344 1 30 2 294 1 306 1 49 1 295 1 287 1 
128 4 21 4 107 1 64 1 279 1 280 1 301 1 235 2 26 1 240 1 344 1 30 1 306 1 49 2 168 2 145 1 120 1 195 1 14 1 152 1 218 1 351 8 274 1 
128 3 21 6 131 1 64 2 280 1 260 2 279 2 235 2 26 1 344 1 30 2 306 1 49 1 287 1 168 4 145 2 244 1 242 2 195 2 147 1 218 1 351 9 294 1 295 1 
168 6 128 3 21 6 145 3 242 2 244 1 195 3 147 1 64 3 279 2 260 2 280 1 235 1 218 1 26 1 351 9 223 1 344 1 30 3 294 1 306 1 49 1 295 1 287 1 
128 5 21 6 131 1 64 3 136 1 280 1 260 2 279 2 235 2 26 1 344 1 30 3 306 1 49 1 287 1 168 6 145 3 244 1 242 2 195 3 147 1 152 1 218 1 351 11 294 1 295 1 184 1 
128 4 120 3 21 3 131 3 107 2 14 3 279 1 152 1 235 6 351 7 240 1 49 3 274 1 
168 6 128 3 21 6 145 3 242 2 244 1 195 3 147 1 64 3 279 2 260 2 280 1 136 1 235 1 218 1 26 1 351 9 344 1 30 3 294 1 306 1 49 1 295 1 287 1 
15 1 96 1 353 1 292 1 201 1 183 1 226 1 
96 1 234 1 15 1 16 1 324 1 178 1 292 1 353 1 140 1 201 1 183 1 226 1 
310 1 276 1 252 1 304 1 236 1 336 1 70 1 56 1 299 1 135 1 254 1 
335 1 308 1 276 1 266 1 336 1 278 1 135 1 304 1 252 1 236 1 139 1 292 1 353 2 70 1 56 1 201 2 183 1 345 1 
335 1 308 1 276 1 266 1 133 1 336 1 278 1 135 1 188 1 27 1 304 1 252 1 236 1 139 1 292 1 353 1 70 1 201 1 101 1 345 1 
335 1 308 1 276 1 266 1 133 1 336 1 135 1 188 1 27 1 304 1 252 1 236 1 139 1 292 1 353 1 70 1 28 1 201 1 101 1 345 1 
59 1 206 1 228 1 276 1 133 1 4 1 255 1 336 1 62 2 160 1 135 4 300 1 110 1 236 1 304 1 139 1 70 1 117 1 345 1 265 1 97 1 266 1 196 2 348 1 153 1 252 1 353 1 292 1 352 1 332 1 201 1 101 1 
59 1 206 1 228 1 276 1 133 1 4 1 255 1 336 1 62 2 160 1 135 4 110 1 236 1 304 1 139 1 70 1 345 1 143 1 265 1 97 1 266 1 196 2 348 1 153 1 252 1 353 1 292 1 352 1 332 1 201 1 101 1 
276 1 252 1 236 1 336 1 70 1 182 1 
288 1 276 6 266 1 336 2 24 1 250 1 135 3 150 1 314 1 261 1 177 1 325 1 236 7 304 2 252 3 318 1 70 7 331 1 56 2 182 1 285 1 
128 3 335 1 21 3 205 1 276 1 336 1 107 1 278 1 232 2 135 1 64 2 279 1 301 1 235 2 342 1 212 1 304 1 91 2 236 1 139 1 328 1 240 1 70 1 30 2 71 1 49 2 345 1 168 4 288 1 120 1 308 1 145 2 266 1 195 2 14 1 268 1 152 1 219 1 351 6 252 1 126 1 353 2 292 1 201 2 19 1 183 2 274 1 
227 1 228 1 276 1 133 1 135 2 279 2 236 1 237 1 139 1 92 1 189 1 240 1 192 2 143 1 194 1 97 2 196 3 14 1 52 2 249 2 53 5 153 1 152 2 292 1 56 1 332 2 201 1 59 1 206 1 106 1 255 2 62 3 110 1 70 1 119 1 263 2 307 1 345 1 120 1 265 1 348 1 174 4 316 1 36 1 352 1 353 1 273 2 
288 1 206 1 276 2 252 2 304 1 266 1 236 2 336 1 70 2 182 1 123 1 135 2 150 1 
288 1 276 4 336 1 299 1 135 1 350 1 114 1 252 1 236 4 304 1 70 4 56 1 254 1 
1 1 276 2 266 1 336 1 207 1 89 1 250 1 135 1 177 1 236 2 304 1 252 2 70 2 101 1 
289 1 276 1 252 1 236 1 180 1 336 1 70 1 56 1 29 1 39 1 
288 1 276 2 252 1 304 1 236 2 336 1 318 1 70 2 285 1 347 1 135 1 
288 1 276 4 336 2 299 1 135 3 314 1 114 1 236 5 304 2 252 2 318 1 70 5 56 1 331 1 101 1 254 1 
288 1 276 4 336 2 299 1 135 3 114 1 236 5 304 2 252 2 318 1 70 5 56 1 331 1 101 1 241 1 254 1 
335 1 308 1 276 1 266 1 336 1 135 1 304 1 252 1 236 1 139 1 292 1 353 2 70 1 56 1 28 1 201 2 183 1 345 1 
276 1 266 1 336 1 250 1 135 1 150 1 261 1 177 1 236 1 304 1 252 2 70 1 101 1 
183 1 7 1 141 1 193 1 104 1 
264 1 32 1 133 1 247 1 62 1 196 1 7 1 137 1 188 1 176 1 27 1 92 1 141 1 193 1 104 1 
317 1 353 1 292 1 41 1 201 1 7 1 141 1 251 1 104 1 
32 1 176 1 141 1 
310 1 17 1 134 1 88 1 
65 1 311 1 17 1 98 1 23 1 134 1 88 1 
311 1 72 1 210 1 
186 1 309 2 311 3 98 1 23 3 134 1 297 1 42 1 88 1 65 1 113 1 17 1 
65 1 311 2 17 1 98 1 23 2 134 1 88 1 198 1 270 1 
289 1 311 1 98 1 23 1 297 1 258 1 233 1 65 1 17 1 180 1 334 1 
65 1 311 1 17 1 98 1 23 1 88 1 297 1 
65 1 311 1 98 1 23 1 134 1 88 2 297 1 
76 1 22 1 311 2 98 2 23 2 88 1 297 1 65 2 69 1 17 1 
169 1 311 3 98 1 23 3 134 1 88 1 297 1 233 1 270 2 65 1 221 1 17 2 142 1 
289 1 311 2 98 1 3 1 23 2 134 1 88 1 297 1 258 1 340 1 270 1 65 1 17 1 180 2 39 1 
320 1 311 4 98 2 23 4 134 1 88 1 297 1 198 1 233 1 270 2 65 2 221 1 17 2 
65 1 311 1 17 1 98 1 23 1 134 1 88 1 297 1 
309 1 311 4 98 1 23 4 134 2 25 1 42 1 88 2 233 1 270 2 65 1 113 1 221 1 17 3 
311 2 98 1 23 2 134 1 88 1 297 1 12 1 269 1 270 1 65 1 271 1 17 1 
11 1 309 2 311 3 98 1 23 3 134 1 297 1 42 2 88 1 65 1 113 1 17 1 
17 2 339 1 124 2 175 1 
65 1 33 1 311 1 98 1 23 1 297 1 
65 1 311 2 17 1 98 1 23 2 134 1 88 1 297 1 142 1 270 1 
337 1 
65 1 311 1 17 1 98 1 23 1 134 1 88 1 297 1 
65 1 309 1 311 3 17 1 98 1 23 3 134 1 88 1 297 1 142 1 270 1 
221 1 17 1 25 1 233 1 
17 1 88 1 

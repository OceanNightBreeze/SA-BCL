#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 320 286 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 320 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 1 344 7 321 2 7 5 6 2 152 3 80 1 56 1 200 1 61 1 329 1 128 1 110 2 225 1 227 1 139 9 67 1 21 1 228 1 376 1 187 9 166 1 168 4 75 1 
77 1 344 7 321 2 7 5 6 2 152 3 80 1 56 1 200 1 61 1 329 1 128 1 110 2 225 1 227 1 139 9 67 1 21 1 228 1 376 1 187 9 166 1 168 4 75 1 
77 1 344 6 46 1 321 2 79 1 214 1 7 5 6 2 152 3 80 1 56 1 198 1 61 2 200 1 176 1 329 1 110 2 129 1 225 1 227 2 139 9 67 1 228 2 376 1 187 9 166 2 168 4 75 1 
77 1 344 6 46 1 321 2 79 1 214 1 7 5 6 2 152 3 80 1 56 1 198 1 61 2 200 1 176 1 329 1 110 2 129 1 225 1 227 2 139 9 67 1 228 2 376 1 187 9 166 2 168 4 75 1 
77 1 344 7 46 1 321 2 79 1 214 1 7 6 6 2 152 4 80 1 56 1 198 1 61 2 200 1 176 1 329 1 110 2 129 1 225 1 227 2 139 10 67 1 228 2 376 1 187 10 166 2 168 5 75 1 
77 1 344 4 46 1 321 2 79 1 214 1 7 4 6 1 152 2 80 1 198 1 61 2 200 1 176 1 329 1 110 2 129 1 225 1 227 2 139 7 67 1 228 2 376 1 187 7 166 2 168 3 75 1 
225 1 344 3 321 1 6 2 7 3 227 1 139 4 152 1 80 1 228 1 56 1 376 1 187 4 61 1 329 1 110 1 168 2 75 1 
235 1 321 1 214 1 7 1 139 2 8 1 80 1 228 1 198 1 376 1 187 2 166 1 61 1 329 1 110 1 84 1 
344 1 321 2 7 2 139 3 152 1 67 1 80 1 376 1 187 3 166 1 329 1 110 2 168 1 
262 1 91 1 135 1 
138 1 
38 1 241 2 81 2 236 1 252 2 43 2 297 2 30 2 
362 1 213 1 119 2 2 1 236 1 346 1 149 1 349 1 11 1 153 1 154 1 297 3 30 2 31 1 174 1 219 2 241 2 271 1 59 1 81 2 370 1 273 1 82 1 302 1 223 1 204 1 66 1 162 1 38 1 133 1 252 3 93 1 254 2 206 2 72 2 43 2 259 1 
124 1 241 1 88 1 81 1 236 1 252 1 43 1 222 1 297 1 30 1 
262 1 236 1 297 2 30 1 124 1 270 1 241 1 81 2 222 2 304 1 88 1 279 1 252 2 135 1 336 1 358 1 73 1 43 1 340 1 144 1 361 1 
262 1 236 1 297 2 30 2 124 1 270 1 241 2 81 2 222 2 304 2 88 1 279 1 252 2 135 1 336 1 358 1 43 2 340 2 144 1 
304 1 322 1 280 1 340 1 224 1 
262 1 372 1 304 2 226 1 322 1 135 1 340 2 224 1 
304 1 322 1 340 1 
304 1 88 1 236 1 279 1 252 1 30 1 297 1 124 1 241 1 81 1 43 1 340 1 222 1 224 1 
262 1 
262 1 304 2 226 1 322 1 135 1 340 2 224 1 112 1 
262 1 304 5 319 1 226 1 47 2 164 1 20 1 322 2 135 1 49 2 307 1 194 1 197 1 298 1 377 1 33 2 340 5 260 1 224 2 
66 1 17 1 119 1 2 1 133 1 346 1 252 2 154 1 30 1 297 2 31 1 206 1 174 1 219 1 81 1 273 1 43 1 64 1 177 1 223 1 
38 1 91 1 
38 2 252 2 297 2 30 1 335 1 175 1 241 1 81 2 43 1 
13 1 64 1 55 1 
66 1 38 1 119 1 2 1 133 1 252 1 346 1 154 1 297 1 41 1 31 1 206 1 174 1 219 1 273 1 223 1 
38 1 241 1 81 3 252 3 43 3 177 1 297 3 30 3 
88 1 81 1 252 1 43 1 222 1 297 1 30 1 
335 1 175 1 241 1 81 1 252 1 43 1 222 1 297 1 30 1 
2 1 237 1 236 1 346 1 349 1 149 1 154 1 153 1 297 4 241 2 59 1 302 1 304 1 66 1 17 1 252 4 254 1 206 1 72 2 358 1 259 1 362 1 119 1 31 1 30 3 174 1 219 1 270 1 175 1 271 1 81 3 273 1 82 1 177 1 222 2 223 1 331 1 38 1 133 1 93 1 231 1 336 1 43 3 340 1 144 1 
38 1 126 1 81 2 73 1 252 2 43 1 177 1 297 2 30 1 
262 1 304 1 17 1 252 3 325 1 30 3 297 3 175 1 270 1 231 1 336 1 241 1 81 3 358 1 43 3 340 1 144 1 177 2 222 1 
175 1 241 1 81 2 252 2 43 2 64 1 177 1 55 1 297 2 30 2 
66 1 38 1 119 1 2 1 133 1 252 1 346 1 154 1 297 1 31 1 206 1 174 1 219 1 273 1 223 1 
38 1 119 1 2 1 133 1 252 1 346 1 154 1 297 1 31 1 206 1 174 1 182 1 219 1 107 1 273 1 
362 2 192 1 148 1 149 1 349 1 153 1 55 2 13 2 59 1 157 1 301 1 64 2 111 1 302 1 132 1 330 1 16 1 162 2 93 1 254 4 313 1 185 1 72 2 25 1 
336 1 81 1 90 1 252 1 43 1 222 1 297 1 30 1 
38 1 17 1 252 5 357 1 30 4 297 5 311 1 175 1 126 1 241 1 81 5 73 1 43 4 177 2 
88 1 81 2 90 1 252 2 43 2 222 1 297 2 30 2 
3 1 116 1 
3 1 116 1 
276 1 296 1 
276 1 296 1 
276 1 296 1 
23 1 3 1 116 1 
23 1 3 1 116 1 
3 1 367 1 116 1 
76 1 276 1 3 2 40 1 296 1 116 2 
23 1 3 1 116 1 
373 1 3 1 116 1 
373 1 3 1 116 1 
373 1 3 1 116 1 
76 1 262 1 304 2 103 2 267 1 3 2 5 3 165 2 240 2 105 1 220 2 314 1 340 2 209 1 257 1 26 1 116 2 101 2 352 1 
304 1 38 1 172 1 3 1 5 1 165 1 252 2 367 1 150 1 240 1 68 1 297 2 30 2 114 1 312 1 81 2 97 1 220 1 43 2 209 1 340 1 27 1 116 1 101 1 
228 1 61 1 227 1 
228 1 61 1 8 1 
290 1 228 3 94 1 227 2 8 1 326 1 
228 2 94 1 227 1 294 1 8 1 326 1 
228 2 94 1 227 1 8 1 326 2 
262 2 192 1 293 1 47 1 366 1 347 2 322 1 49 1 51 1 194 2 58 1 33 1 157 1 130 1 224 4 86 1 304 5 226 1 164 1 135 1 138 3 68 1 70 1 283 1 312 1 313 1 185 1 97 1 285 2 340 5 211 2 260 3 
262 5 192 3 293 1 364 1 47 2 347 6 322 6 49 2 51 2 194 6 123 1 122 1 156 5 33 2 157 3 130 3 224 7 86 3 304 9 226 1 163 1 164 1 280 5 135 1 307 1 138 9 283 2 312 4 313 3 185 3 337 1 285 6 232 1 340 9 260 8 
262 3 192 1 47 1 347 2 49 1 51 1 194 2 58 1 33 1 157 1 224 2 130 1 86 2 304 3 135 1 307 1 138 4 70 1 283 1 312 1 185 1 313 1 285 2 340 3 211 1 260 3 
262 4 192 2 364 1 47 1 347 4 49 1 51 1 194 4 123 1 58 1 33 1 157 2 224 3 130 2 86 3 304 4 135 1 138 7 307 1 70 1 283 1 312 2 185 2 313 2 337 1 285 4 340 4 211 2 260 5 
71 1 174 1 91 1 
174 1 28 1 
263 1 
174 1 2 1 
71 2 174 3 310 1 264 1 2 1 346 1 
174 1 2 1 346 1 
174 1 96 1 
362 3 192 1 148 2 277 1 265 2 162 4 266 1 269 1 254 7 121 1 184 1 313 1 63 1 301 3 99 1 341 1 247 1 
362 3 192 1 148 2 277 1 265 2 162 4 266 1 269 1 254 7 121 1 184 1 313 1 63 1 301 3 99 1 341 1 247 1 
362 3 192 1 148 2 277 1 265 2 162 4 266 1 269 1 254 7 121 1 184 1 313 1 22 1 63 1 301 3 99 1 341 1 247 1 
362 15 192 4 148 5 265 3 266 2 149 1 349 1 10 4 269 1 153 1 121 2 218 3 108 1 242 1 63 5 301 10 157 3 247 1 203 1 130 3 277 2 162 16 93 1 113 1 254 31 181 1 184 1 185 3 313 4 72 2 167 1 99 2 341 1 258 1 
362 4 192 1 148 3 265 2 266 1 149 2 349 2 153 2 269 1 121 1 106 1 242 1 301 4 63 1 162 5 277 1 93 2 254 9 184 1 313 1 186 1 72 4 99 1 341 1 
290 1 344 1 119 1 1 1 321 1 7 1 173 1 8 1 154 1 80 1 368 1 219 1 61 1 272 1 329 1 110 1 221 1 353 1 18 1 133 1 227 1 136 1 139 2 206 1 228 2 140 1 376 1 187 2 166 1 191 1 
290 1 344 2 119 1 1 1 321 1 7 1 173 1 8 1 154 1 80 1 368 1 219 1 199 1 61 1 300 1 329 1 110 1 221 1 353 1 18 1 133 1 227 1 136 1 139 3 206 1 228 2 187 3 166 1 191 1 170 1 
290 1 344 2 119 1 1 1 7 1 173 1 8 1 154 1 80 1 368 1 219 1 199 1 61 1 329 1 221 1 353 1 133 1 227 1 139 2 206 1 228 2 187 2 166 1 191 1 170 1 
353 2 0 1 119 1 2 1 268 1 321 1 133 1 173 2 137 1 139 1 154 1 282 1 31 1 206 1 368 2 174 1 219 1 187 1 166 2 34 1 300 1 110 1 131 1 
290 1 119 1 1 1 321 1 173 1 8 1 154 1 368 1 219 1 199 1 61 1 110 1 221 1 353 1 18 1 133 1 227 1 136 1 139 1 206 1 228 2 140 1 376 1 187 1 166 1 191 1 
52 1 
147 1 234 1 47 1 236 1 238 1 49 1 194 1 297 2 241 1 299 1 243 1 62 3 244 2 304 2 164 1 305 2 19 1 252 2 358 1 73 1 361 1 317 1 74 1 260 1 262 3 78 1 322 1 215 1 324 1 30 1 124 1 270 1 81 2 33 1 222 2 88 1 279 1 135 3 374 1 95 1 336 1 43 1 233 1 340 2 144 1 
147 1 234 1 47 1 236 1 238 1 49 1 194 1 297 2 241 1 299 1 243 1 62 3 244 2 304 2 164 1 305 2 19 1 252 2 358 1 73 1 361 1 317 1 74 1 260 1 262 3 78 1 322 1 215 1 324 1 30 1 124 1 270 1 81 2 33 1 222 2 88 1 279 1 135 3 374 1 95 1 336 1 43 1 233 1 340 2 144 1 
262 2 47 1 238 1 49 1 194 1 297 1 270 1 299 1 81 1 33 1 244 1 127 1 62 2 222 1 304 2 305 1 164 1 19 1 252 1 135 2 356 1 374 1 95 1 336 1 358 1 73 1 340 2 361 1 144 1 260 1 74 1 
47 1 2 1 238 1 49 1 51 1 194 2 154 1 297 1 299 1 244 1 62 2 304 3 305 1 164 1 252 1 19 1 356 1 308 1 206 2 358 1 73 1 361 1 260 2 74 1 262 2 119 2 268 1 322 2 215 1 31 2 174 1 219 2 270 1 81 1 33 1 222 1 226 1 133 1 135 2 374 1 282 1 95 1 336 1 188 1 142 1 340 3 144 1 100 1 
262 2 238 1 322 2 297 1 270 1 299 1 81 1 243 1 62 2 222 1 112 1 304 3 226 1 252 1 19 1 135 2 95 1 336 1 358 1 73 1 340 3 361 1 144 1 74 1 
262 2 147 1 304 2 19 1 238 1 252 1 135 2 297 1 95 1 270 1 336 1 299 1 81 1 358 1 73 1 62 3 340 2 144 1 361 1 222 1 74 1 
262 3 147 1 238 1 322 2 324 1 297 1 270 1 299 1 81 1 243 1 62 3 222 1 112 1 304 3 226 1 252 1 19 1 135 3 95 1 336 1 358 1 73 1 340 3 361 1 144 1 74 1 
234 1 47 1 236 1 238 1 49 1 194 1 297 2 241 1 299 1 243 2 62 2 244 2 246 1 112 1 304 3 164 1 305 2 19 1 252 2 358 1 73 1 361 1 317 1 74 1 260 1 262 3 78 1 322 3 215 1 324 2 30 1 124 1 270 1 81 2 33 1 222 2 226 1 88 1 279 1 135 3 374 1 95 1 336 1 43 1 340 3 233 1 144 1 
262 2 47 1 238 1 215 1 49 1 194 1 297 1 270 1 299 1 81 1 33 1 244 1 62 2 222 1 304 2 305 1 164 1 19 1 252 1 135 2 356 1 374 1 95 1 336 1 358 1 73 1 340 2 361 1 144 1 260 1 74 1 
234 1 47 1 236 1 238 1 49 1 194 1 297 2 299 1 241 1 62 2 244 2 304 2 164 1 305 2 19 1 252 2 358 1 73 1 361 1 317 1 74 1 260 1 262 3 78 1 215 1 30 1 124 1 270 1 81 2 33 1 222 2 88 1 279 1 135 3 374 1 95 1 336 1 43 1 340 2 144 1 
234 1 47 1 236 1 238 1 49 1 194 1 297 2 299 1 241 1 62 2 244 2 304 2 164 1 305 2 19 1 252 2 358 1 73 1 361 1 317 1 74 1 260 1 262 3 78 1 215 1 30 1 124 1 270 1 81 2 33 1 222 2 88 1 279 1 135 3 374 1 95 1 336 1 43 1 340 2 144 1 
234 1 47 1 236 1 238 1 49 1 194 1 297 2 299 1 241 1 62 2 244 2 304 2 164 1 305 2 19 1 252 2 358 1 73 1 361 1 74 1 260 1 262 3 30 1 124 1 270 1 81 2 33 1 127 1 222 2 88 1 89 1 279 1 135 3 374 1 180 1 95 1 336 1 43 1 340 2 144 1 
362 3 148 2 192 1 265 1 149 1 349 1 55 1 153 1 269 1 13 1 59 1 301 2 64 1 302 1 16 1 277 1 162 3 38 2 91 1 93 1 254 6 184 1 313 1 72 2 99 1 341 1 
362 6 148 1 192 1 149 2 349 2 10 3 153 2 55 4 13 8 57 1 218 3 108 1 59 1 82 1 63 1 301 2 157 1 64 8 302 2 130 2 248 1 204 1 38 1 160 1 162 8 93 2 254 14 113 1 309 1 185 2 313 2 72 4 190 1 
44 1 362 1 119 1 2 1 346 1 193 1 149 1 349 1 154 1 55 1 153 1 31 1 297 2 30 1 174 1 219 1 59 1 81 1 273 1 82 1 177 1 302 1 223 1 204 1 66 1 38 1 160 1 161 1 162 1 17 1 133 1 252 2 93 1 254 2 206 1 41 1 72 2 43 1 
146 1 148 4 192 3 2 2 346 2 104 2 349 3 149 3 153 3 154 2 55 7 297 3 196 2 13 7 199 1 59 3 63 4 301 8 157 2 64 7 302 3 204 1 66 2 160 1 162 10 17 1 252 3 254 20 206 3 313 3 72 6 315 2 117 1 362 10 265 1 119 3 269 1 31 1 30 1 174 2 219 3 271 2 81 1 273 2 82 1 177 1 223 2 130 2 37 1 38 2 277 1 133 2 93 3 184 1 185 2 43 1 99 1 189 2 341 1 
292 1 45 1 2 3 346 1 9 1 349 2 149 2 12 1 54 1 153 2 154 3 297 1 59 2 302 2 204 1 354 1 16 1 162 1 252 1 254 2 206 7 72 4 362 1 213 2 119 6 268 1 31 2 30 1 174 4 219 7 81 1 272 1 82 1 177 1 178 1 133 4 93 2 281 1 282 1 229 1 183 1 284 1 43 1 
362 2 148 1 192 1 149 1 349 1 55 1 153 1 30 1 297 1 13 1 175 1 241 1 59 1 81 1 301 1 157 1 64 1 302 1 130 1 160 1 162 1 252 1 93 1 254 3 185 1 313 1 72 2 43 1 360 1 
330 1 16 1 162 2 93 1 349 1 149 1 55 1 254 2 153 1 13 1 185 1 313 1 72 2 59 1 301 1 63 1 64 1 302 1 
362 2 148 1 16 1 192 1 93 1 349 1 149 1 55 1 254 2 153 1 13 1 72 2 59 1 301 1 157 1 64 1 302 1 132 1 
362 2 192 1 148 1 149 1 349 1 153 1 55 2 13 2 59 1 63 1 301 2 157 1 64 2 302 1 130 1 16 1 162 2 93 1 254 4 313 1 185 1 72 2 
330 1 162 2 93 1 9 1 349 1 149 1 55 1 254 2 153 1 13 1 185 1 313 1 72 2 59 1 301 1 63 1 64 1 302 1 
362 2 148 1 192 1 93 1 9 1 349 1 149 1 55 1 254 2 153 1 13 1 72 2 59 1 301 1 157 1 64 1 302 1 132 1 
362 2 192 1 148 1 149 1 349 1 9 1 153 1 55 2 13 2 59 1 63 1 301 2 157 1 64 2 302 1 130 1 162 2 93 1 254 4 313 1 185 1 72 2 
362 2 148 1 192 1 162 2 93 1 349 1 149 1 55 2 153 1 254 4 13 2 185 1 313 1 72 2 59 1 157 1 301 2 63 1 64 2 302 1 130 1 
362 1 119 1 2 1 346 1 349 1 149 1 154 1 153 1 31 1 297 1 174 1 219 1 271 1 59 1 273 1 82 1 302 1 223 1 204 1 66 1 162 1 38 1 133 1 252 1 93 1 254 2 206 1 72 2 
362 1 119 1 2 1 346 1 239 1 349 1 149 1 154 1 153 1 31 1 297 1 174 1 107 1 219 1 59 1 273 1 82 1 302 1 204 1 162 1 38 1 133 1 252 1 93 1 254 2 206 1 182 1 72 2 
362 2 192 1 148 1 149 1 349 1 153 1 55 2 13 2 59 1 63 1 301 2 157 1 64 2 302 1 130 1 162 2 160 1 93 1 254 4 313 1 185 1 72 2 
362 2 148 1 192 1 119 1 2 1 346 1 349 1 149 1 55 2 154 1 153 1 297 1 13 2 174 1 219 1 271 1 59 1 272 1 273 1 157 1 301 2 63 1 64 2 302 1 223 1 130 1 66 1 162 2 133 1 252 1 93 1 254 4 206 1 313 1 185 1 72 2 189 1 
362 1 192 1 149 1 349 1 153 1 55 1 30 1 297 1 13 1 175 1 241 1 59 1 81 1 157 1 301 1 63 1 64 1 302 1 130 1 160 1 162 2 252 1 93 1 92 1 254 3 185 1 313 1 72 2 43 1 
342 1 192 5 148 4 4 1 349 3 149 3 10 4 295 1 153 3 195 1 60 2 108 3 242 1 157 4 301 8 63 4 202 1 14 1 162 20 113 1 254 41 313 5 72 6 208 1 362 21 265 1 323 1 269 1 218 3 130 4 274 4 87 1 277 1 134 1 93 3 184 1 185 4 186 1 141 1 287 1 98 1 99 1 341 1 
342 1 362 18 148 4 192 4 265 1 4 1 323 1 149 4 349 4 295 1 10 4 269 1 195 1 153 4 218 3 242 2 108 3 60 2 63 3 301 7 157 3 202 1 130 4 14 1 274 4 277 1 87 1 162 20 134 1 93 4 254 38 113 1 184 1 186 1 185 4 313 5 72 8 141 1 98 1 287 1 99 1 208 1 341 1 
362 20 148 5 192 6 265 1 4 1 323 1 149 2 349 2 295 1 10 3 269 1 195 1 153 2 218 3 242 1 108 2 60 1 157 5 63 5 301 10 202 1 130 5 248 1 14 1 274 4 277 1 87 1 162 22 134 1 93 2 254 42 113 1 184 1 186 1 185 5 313 6 72 4 98 1 287 1 99 1 208 1 341 1 
362 7 148 1 192 2 149 2 349 2 10 2 195 1 153 2 218 1 108 1 60 1 63 1 301 2 157 2 202 1 130 2 14 1 274 1 87 1 162 6 355 1 93 2 254 13 113 1 186 1 185 2 313 2 72 4 141 1 
362 12 148 2 192 2 4 1 323 1 149 3 349 3 295 1 10 2 195 2 153 3 218 2 242 2 60 2 108 2 63 2 301 4 157 2 202 1 130 3 14 1 274 4 87 1 162 14 134 1 93 3 254 26 186 1 185 3 313 3 72 6 98 1 287 1 208 1 
76 1 3 1 165 1 220 1 314 1 359 1 257 1 240 1 116 1 101 1 
114 1 367 1 
255 1 318 1 3 1 165 1 220 1 240 1 216 1 116 1 101 1 
76 1 262 1 304 1 103 1 267 1 3 1 5 2 165 1 240 1 105 1 220 1 314 1 209 1 340 1 257 1 116 1 101 1 352 1 
76 1 262 1 304 1 103 1 267 1 3 1 5 2 165 1 240 1 105 1 220 1 314 1 209 1 340 1 257 1 116 1 101 1 352 1 
76 1 262 1 304 1 103 1 267 1 3 1 5 2 165 1 240 1 105 1 220 1 314 1 209 1 340 1 257 1 116 1 101 1 352 1 
23 1 40 1 371 1 
23 1 40 1 371 1 
363 1 373 1 
363 1 373 1 40 1 
172 1 27 1 
103 1 3 1 5 1 172 1 367 1 240 1 150 1 297 2 30 2 81 2 220 1 352 1 224 1 304 1 38 1 165 1 252 2 68 1 114 1 334 1 312 1 97 1 43 2 340 1 116 1 27 1 101 1 
23 1 371 1 
363 1 373 1 40 1 
362 1 213 2 119 2 2 1 48 1 348 1 349 1 149 1 12 1 154 1 153 1 297 2 174 1 219 2 59 1 81 2 82 1 302 1 83 1 204 1 15 1 249 1 160 1 162 1 133 1 178 1 252 2 93 1 254 2 206 2 72 2 
290 1 119 2 1 1 133 1 18 1 227 1 173 1 8 1 154 1 206 2 228 2 219 2 199 1 61 1 272 1 339 1 143 1 109 1 221 1 
290 1 119 1 39 1 1 1 18 1 133 1 227 1 173 1 8 1 154 1 206 1 228 2 219 1 199 1 61 1 143 1 221 1 
119 1 2 1 268 1 133 1 120 1 173 1 137 1 154 1 282 1 31 1 206 1 174 1 219 1 339 1 
290 1 119 1 1 1 133 1 18 1 227 1 173 1 8 1 154 1 206 1 228 2 219 1 199 1 61 1 339 1 143 1 109 1 221 1 
350 1 
362 1 119 1 2 1 236 1 346 1 149 1 349 1 153 1 154 1 31 1 297 3 30 2 174 1 219 1 241 2 271 1 81 2 59 1 273 1 82 1 302 1 223 1 66 1 38 1 133 1 252 3 93 1 254 1 206 1 72 2 43 2 259 1 
86 2 262 4 265 1 47 1 164 1 347 2 135 2 49 1 138 4 51 1 194 2 285 2 142 1 33 1 260 1 
262 1 197 1 298 1 91 1 135 1 260 1 194 1 
212 1 262 2 86 1 304 1 226 1 47 1 164 1 322 1 135 1 49 1 215 1 138 1 194 1 42 1 33 1 340 1 260 1 
320 1 219 1 119 1 47 1 164 1 133 1 286 1 33 1 49 1 154 1 206 1 31 1 
262 4 192 2 47 2 4 1 322 1 347 4 323 1 49 2 51 1 217 1 295 1 10 1 194 5 218 1 108 1 201 1 33 2 157 2 130 2 86 2 304 1 226 1 164 2 134 1 135 2 205 2 138 4 333 1 185 2 313 2 142 1 285 4 287 1 340 1 260 8 
78 1 192 1 47 1 236 1 49 1 217 1 53 1 269 1 194 2 297 1 30 1 124 1 241 1 81 1 33 1 222 1 304 1 277 1 88 1 164 1 279 1 252 1 205 2 313 2 43 1 99 1 340 1 260 2 
262 1 197 1 298 1 47 1 164 1 33 1 135 1 49 1 260 1 194 1 
86 5 262 5 192 2 104 1 347 5 205 2 138 10 217 1 194 5 185 2 313 2 285 5 157 2 130 2 260 5 
262 1 304 1 226 1 322 1 135 1 340 1 
47 2 119 4 2 1 268 1 322 4 49 2 50 1 51 2 154 1 194 2 31 2 174 1 219 4 33 2 158 1 304 3 226 2 164 1 133 1 307 1 308 1 282 1 69 2 206 4 142 2 340 3 100 1 289 1 260 2 
165 1 220 1 179 1 
165 1 220 1 179 1 
172 1 165 1 220 1 351 1 257 1 
165 1 220 1 179 1 
275 1 165 1 220 1 
275 1 165 1 220 1 
275 1 165 1 220 1 
165 1 220 1 
3 1 116 1 
362 4 192 1 148 2 265 1 149 1 349 1 10 1 153 1 269 1 218 1 108 1 301 2 162 4 277 1 93 1 254 8 184 1 313 1 186 1 72 2 287 1 99 1 341 1 
362 5 291 1 192 1 148 2 265 1 149 2 349 2 10 2 269 1 153 2 218 1 108 1 63 1 301 3 130 1 277 1 162 6 93 2 254 11 113 1 184 1 186 1 185 1 313 2 72 4 287 1 99 1 341 1 
362 10 291 1 192 3 148 3 265 1 4 1 323 1 149 3 349 3 10 1 295 1 269 1 153 3 218 1 108 1 242 1 63 1 157 2 301 4 130 2 277 1 162 9 134 1 93 3 254 19 184 1 186 1 185 2 313 3 72 6 287 1 99 1 341 1 
362 7 291 1 192 2 148 3 265 1 4 1 323 1 149 3 349 3 10 1 295 1 269 1 153 3 218 1 242 1 108 1 63 2 157 1 301 5 130 2 277 1 162 10 134 1 93 3 254 17 184 1 186 1 185 2 313 3 72 6 287 1 99 1 341 1 
362 4 192 1 148 2 265 1 149 1 349 1 10 1 153 1 269 1 218 1 108 1 301 2 162 4 277 1 93 1 254 8 184 1 313 1 186 1 72 2 287 1 99 1 341 1 
362 6 192 2 148 1 4 1 323 1 149 1 349 1 10 1 295 1 153 1 218 1 108 1 63 1 157 2 301 2 130 2 162 6 134 1 93 1 254 12 186 1 185 2 313 2 72 2 287 1 
362 8 291 1 192 2 148 3 265 1 4 1 323 1 149 4 349 4 295 1 10 1 269 1 153 4 218 1 108 1 242 2 63 2 157 1 301 5 130 2 277 1 162 10 134 1 93 4 254 18 184 1 186 1 185 2 313 3 72 8 287 1 99 1 341 1 
362 7 192 2 148 3 4 1 323 1 149 4 349 4 295 1 10 1 153 4 218 1 108 1 242 2 63 3 157 2 301 6 130 3 162 9 134 1 93 4 254 16 186 1 185 3 313 3 72 8 141 1 287 1 
362 4 192 1 148 3 277 3 162 3 254 7 269 1 184 1 313 1 99 3 301 6 63 3 341 2 
362 8 192 2 148 3 265 1 4 1 323 1 149 4 349 4 295 1 10 1 269 1 153 4 218 1 108 1 242 2 63 1 157 1 301 4 130 2 277 1 162 10 134 1 93 4 254 18 184 1 186 1 185 2 313 3 72 8 141 1 287 1 99 1 341 1 
362 4 192 1 148 2 265 1 162 4 277 1 93 2 349 2 149 2 269 1 254 8 153 2 184 1 313 1 72 4 242 1 63 1 301 3 99 1 341 1 
362 3 148 2 192 1 265 1 277 1 162 3 91 1 269 1 254 6 184 1 313 1 99 1 301 2 341 1 
362 2 291 1 148 1 192 1 162 2 93 1 349 1 149 1 153 1 254 4 185 1 313 1 72 2 157 1 301 2 63 1 130 1 
362 1 218 1 162 1 108 1 10 1 254 2 
362 13 148 4 192 5 265 1 349 1 149 1 53 1 10 2 269 2 153 1 218 2 242 1 157 2 63 4 301 8 130 2 248 1 277 2 162 13 93 1 113 1 254 26 184 1 313 5 185 2 72 2 99 2 190 1 341 1 
362 1 10 1 254 1 
218 1 162 1 254 1 
362 3 291 1 192 1 148 2 162 3 104 1 93 1 149 1 349 1 153 1 254 6 185 1 313 1 72 2 63 1 301 3 157 1 130 1 
362 6 192 2 148 1 4 1 323 1 149 1 349 1 10 1 295 1 153 1 218 1 108 1 63 1 157 2 301 2 130 2 162 6 134 1 93 1 254 12 186 1 185 2 313 2 72 2 287 1 
362 3 192 1 148 1 162 3 277 1 269 1 254 6 313 1 99 1 301 2 63 1 
362 2 148 1 162 1 277 1 93 1 349 1 149 1 254 3 153 1 184 1 72 2 207 1 242 1 63 1 301 2 99 1 341 1 
362 6 148 3 192 2 277 2 162 6 53 1 254 12 269 1 313 2 99 2 301 6 63 3 
162 2 93 1 349 1 149 1 153 1 254 2 186 1 185 1 313 1 72 2 63 1 301 1 
362 2 148 1 192 1 162 2 93 1 349 1 149 1 153 1 254 4 186 1 185 1 313 1 72 2 157 1 301 2 63 1 130 1 
362 2 148 1 277 1 162 1 93 3 349 3 149 3 254 3 153 3 186 1 72 6 242 1 207 1 141 1 99 1 301 2 63 1 
362 18 291 1 192 5 148 7 265 1 149 5 349 5 10 4 269 2 153 5 218 3 242 2 108 1 63 5 301 12 157 3 203 1 130 3 277 3 162 16 93 5 254 34 113 1 181 1 184 1 186 1 185 3 313 5 72 10 207 1 167 1 141 1 99 3 341 1 
38 1 126 1 81 1 252 1 73 1 65 1 297 1 
38 1 171 1 345 1 278 1 252 1 297 1 230 1 126 1 81 1 73 1 65 1 145 1 
174 1 219 1 119 1 2 1 268 1 133 1 91 1 154 1 282 1 206 1 31 1 
66 1 38 1 119 1 2 1 133 1 346 1 252 2 154 1 30 1 297 2 31 1 206 1 174 1 219 1 81 1 273 1 43 1 177 1 
66 1 38 1 119 1 2 2 133 1 346 2 252 2 154 1 30 1 297 2 69 1 206 1 174 3 96 1 219 1 336 1 81 2 273 1 43 2 144 1 177 1 222 1 102 1 
119 2 2 2 346 2 154 1 297 2 30 1 174 3 107 1 219 2 81 2 327 1 273 1 177 1 222 1 38 1 133 1 252 2 206 2 69 1 96 1 336 1 43 2 144 1 102 1 
262 1 28 1 119 1 2 1 236 1 322 1 346 1 154 1 297 1 30 1 124 1 174 4 125 1 219 1 270 1 241 1 81 1 328 1 222 1 304 2 88 1 133 1 279 1 252 1 135 1 206 1 69 1 71 1 96 1 43 1 340 2 102 1 
262 1 28 1 119 1 2 1 236 1 322 1 346 1 154 1 297 1 30 1 124 1 174 4 219 1 270 1 241 1 81 1 222 1 304 2 88 1 133 1 279 1 252 1 135 1 253 1 206 1 69 1 71 1 96 1 43 1 340 2 102 1 
219 1 119 1 133 1 281 1 154 1 206 1 
292 1 213 1 45 1 119 5 2 2 346 1 12 1 154 2 54 1 31 2 174 3 219 6 272 1 133 3 281 1 206 6 332 1 310 1 183 1 284 1 
148 2 192 1 2 1 346 1 349 2 149 2 55 1 153 2 154 1 297 2 196 1 13 1 59 2 301 2 64 1 302 2 66 1 249 1 160 1 162 3 252 2 254 6 206 1 313 1 72 4 362 3 265 1 119 1 269 1 30 1 174 1 219 1 271 1 81 1 272 1 273 1 177 1 223 1 277 1 38 2 133 1 93 2 184 1 43 1 99 1 189 1 341 1 
192 2 47 2 236 1 49 2 151 1 53 1 194 5 297 1 197 1 298 1 241 1 304 3 164 2 306 1 252 1 205 2 253 1 206 1 71 1 313 2 169 1 260 4 262 2 28 1 119 1 322 2 217 1 269 1 31 1 30 1 174 2 124 1 270 1 219 1 81 1 33 2 222 1 224 1 226 1 277 1 88 1 279 1 135 2 43 1 340 3 99 1 289 1 
320 1 219 1 119 1 133 1 281 1 154 1 206 1 
119 4 268 1 2 1 133 1 251 1 282 1 154 1 31 1 206 4 174 1 219 4 272 1 327 1 
292 1 354 1 119 2 2 1 133 2 346 1 154 1 69 1 206 2 229 1 174 1 219 2 284 1 117 1 
228 1 219 1 1 1 119 1 61 1 133 1 8 1 154 1 206 1 31 1 
15 1 119 2 2 1 133 1 12 1 154 1 206 2 174 1 219 2 199 1 272 1 
45 1 119 4 268 1 2 2 133 2 251 1 12 1 282 1 154 2 54 1 69 1 31 1 206 5 174 3 219 5 272 1 
119 4 268 1 2 2 133 2 251 1 12 1 282 1 154 2 54 1 69 1 31 1 206 5 174 3 369 1 219 5 272 1 
38 1 119 1 2 1 133 1 346 1 252 2 154 1 30 1 297 2 31 1 206 1 174 1 219 1 107 1 81 1 273 1 43 1 177 1 
292 1 119 1 2 1 133 2 346 1 154 1 69 1 206 1 332 1 174 1 310 1 219 1 284 1 
38 1 338 1 375 1 29 1 36 1 
262 1 236 1 29 1 297 1 30 1 124 1 270 1 241 1 81 1 245 1 36 1 224 1 222 2 304 2 250 1 88 1 279 1 252 1 135 1 375 1 231 1 336 1 358 1 338 1 43 1 288 1 340 2 144 1 
81 1 48 1 252 1 348 1 375 1 83 1 29 1 36 1 297 1 
250 1 288 1 375 1 
344 1 321 1 214 1 7 1 139 3 80 1 376 1 187 3 200 1 110 1 329 1 
7 1 168 1 152 1 261 1 
7 1 80 1 
91 1 7 1 329 1 80 1 
187 1 321 1 7 1 329 1 110 1 139 1 80 1 
353 1 166 1 139 1 
159 1 321 1 214 1 7 1 139 2 80 1 32 1 155 1 376 1 187 2 110 1 329 1 261 1 
344 1 187 2 321 1 7 1 329 1 6 1 110 1 139 2 80 1 
225 1 321 1 7 1 227 1 139 1 228 1 376 1 187 1 61 1 110 1 168 1 
376 1 187 1 321 1 7 1 110 1 139 1 80 1 
376 1 187 1 321 1 329 1 110 1 139 1 80 2 
321 2 365 1 7 1 139 2 80 1 376 1 187 2 115 1 110 2 85 1 
77 1 344 2 321 1 7 2 139 3 152 1 80 1 376 1 187 3 200 1 329 1 110 1 168 1 
343 1 290 1 344 1 321 1 7 1 227 1 8 1 139 2 80 1 228 2 376 1 187 2 61 1 329 1 110 1 
344 2 321 2 6 1 7 2 139 4 152 1 80 1 56 1 376 1 187 4 329 1 110 2 168 1 
376 1 187 1 321 1 7 1 329 1 110 1 139 1 80 1 
159 1 344 2 321 1 214 1 7 3 139 4 152 1 80 2 155 1 187 4 329 2 110 1 168 1 261 1 
344 1 118 1 321 1 7 1 139 2 80 1 256 1 376 1 187 2 110 1 128 1 329 1 
159 2 321 1 214 2 7 1 139 3 80 1 155 1 376 1 187 3 110 1 329 1 303 1 
210 1 7 1 316 1 
376 1 187 1 321 1 24 1 110 1 139 1 
344 1 376 1 187 2 321 1 200 1 7 1 329 1 110 1 139 2 80 1 
35 1 
376 1 187 1 321 1 7 1 329 1 110 1 139 1 80 1 

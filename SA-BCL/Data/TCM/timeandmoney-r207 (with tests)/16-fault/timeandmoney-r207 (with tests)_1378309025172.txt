#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 334 49 172 71 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 334 49 172 71 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 334 182 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 334 49 172 71 344 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 334 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 334 49 172 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 334 49 172 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (143,346) 320 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 188 8 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (143,346) 320 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (143,346) (143,346) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (143,346) 320 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (143,346) (143,346) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
12 1 13 1 287 1 130 1 214 1 27 1 235 1 42 3 97 2 219 2 9 3 171 2 350 1 
12 1 75 1 13 3 287 1 130 4 15 1 341 1 266 1 214 1 160 1 268 1 27 1 55 1 135 1 361 1 235 7 42 9 97 2 219 5 9 9 239 2 171 2 240 1 350 1 
12 1 75 1 13 3 287 1 130 4 15 1 341 1 266 1 214 1 160 1 268 1 27 1 55 1 135 1 361 1 235 7 42 9 97 2 219 5 9 9 239 2 171 2 240 1 350 1 
75 1 287 1 268 1 27 1 55 1 361 1 97 2 9 9 29 1 104 1 12 1 13 3 156 1 130 4 323 1 214 2 341 2 160 1 135 2 235 6 306 1 42 9 219 5 171 2 239 2 240 2 141 1 350 1 
75 1 287 1 268 1 27 1 55 1 361 1 97 2 9 9 29 1 104 1 12 1 13 3 156 1 130 4 323 1 214 2 341 2 160 1 135 2 235 6 306 1 42 9 219 5 171 2 239 2 240 2 141 1 350 1 
75 1 287 1 268 1 27 1 55 1 361 1 97 2 9 10 29 1 104 1 12 1 13 4 156 1 130 5 323 1 214 2 341 2 160 1 135 2 235 7 306 1 42 10 219 6 171 2 239 2 240 2 141 1 350 1 
12 1 75 1 13 2 287 1 130 3 156 1 323 1 341 2 214 2 160 1 268 1 27 1 361 1 235 4 135 2 42 7 306 1 97 2 219 4 9 7 29 1 239 1 171 2 104 1 350 1 141 1 240 2 
12 1 13 1 287 1 130 2 341 1 160 1 268 1 27 1 55 1 135 1 235 3 42 4 97 1 219 3 9 4 171 1 239 2 240 1 
12 1 287 1 156 1 341 1 214 1 356 1 27 1 135 1 167 1 42 2 365 1 97 1 219 1 9 2 29 1 171 1 
284 1 0 1 242 2 48 1 313 1 25 1 174 1 330 2 178 1 179 2 54 1 122 2 360 1 316 1 332 1 331 1 247 1 95 1 289 2 99 1 250 1 10 1 11 1 272 1 107 1 274 1 82 1 230 2 17 2 164 3 258 1 134 1 345 1 281 1 169 2 89 3 373 2 
274 1 19 1 312 1 164 1 276 1 242 1 289 1 89 1 179 1 122 1 
368 1 276 1 153 1 157 1 83 1 122 1 279 1 359 1 164 1 78 1 86 1 168 1 89 1 195 1 
368 1 276 1 153 1 242 1 157 1 83 1 179 1 122 1 279 1 359 2 78 2 164 1 86 1 289 1 89 1 
359 1 315 1 5 1 78 1 50 1 
368 1 359 2 315 1 5 1 78 2 86 1 139 1 261 1 
359 1 5 1 78 1 
274 1 312 1 276 1 242 1 201 1 179 1 122 1 315 1 359 1 19 1 78 1 164 1 289 1 89 1 
86 1 
274 1 368 1 312 1 276 1 242 1 201 1 179 1 122 1 19 1 315 1 359 2 164 1 78 2 5 1 86 1 139 1 289 1 325 1 89 1 
368 1 298 1 129 2 329 2 212 1 131 1 37 1 18 1 315 2 359 5 78 5 5 2 86 1 280 1 58 2 319 1 139 1 248 1 237 1 
84 1 
342 1 86 1 267 2 
107 1 274 1 164 2 242 2 289 2 89 2 179 2 122 2 
107 2 242 1 132 1 179 1 122 2 164 2 289 1 191 1 89 2 
372 1 226 1 221 1 
107 1 284 1 0 1 25 1 174 1 178 1 330 1 17 1 164 1 247 1 331 1 98 1 99 1 250 1 89 1 373 1 
84 1 
284 1 0 1 128 1 242 1 25 1 174 1 178 1 330 1 17 1 122 1 162 1 164 2 331 1 247 1 289 1 99 1 250 1 221 1 89 2 373 1 
107 1 128 1 242 4 353 1 179 1 122 5 162 2 164 5 289 4 191 1 251 1 375 1 89 5 195 1 
312 1 164 2 276 1 242 2 289 2 44 1 89 2 122 2 
107 1 162 1 164 3 242 3 289 3 89 3 179 1 122 3 
312 1 164 1 276 1 242 1 289 1 89 1 122 1 
164 1 276 1 242 1 289 1 191 1 89 1 132 1 179 1 122 1 
284 1 0 1 46 1 242 3 48 1 25 1 174 1 121 1 178 1 330 1 179 2 54 1 122 3 359 1 316 1 78 1 331 1 247 1 95 1 99 1 289 3 250 1 10 1 11 1 272 1 107 1 274 1 128 1 276 1 153 1 82 1 230 1 157 1 83 1 17 1 279 1 162 1 164 4 258 1 281 1 191 1 169 2 89 4 373 1 
107 1 162 1 164 2 242 1 289 1 375 1 89 2 195 1 122 2 
46 1 276 1 128 1 153 1 242 3 157 1 83 1 179 1 122 3 279 1 359 1 162 2 78 1 164 3 86 1 289 3 191 1 336 1 89 3 
242 2 179 1 122 2 162 1 164 2 372 1 289 2 191 1 221 1 89 2 
107 1 0 1 284 1 25 1 174 1 178 1 330 1 17 1 164 1 247 1 331 1 99 1 250 1 89 1 373 1 
107 1 0 1 284 1 276 1 174 1 314 1 178 1 330 1 17 1 164 1 247 1 331 1 151 1 250 1 89 1 373 1 238 1 
48 1 360 2 316 1 333 1 226 2 10 1 252 1 60 1 11 1 105 1 273 1 82 2 230 4 233 1 159 1 257 1 258 1 166 1 372 2 348 1 281 1 282 1 221 2 169 2 
164 1 276 1 242 1 157 1 289 1 44 1 89 1 122 1 
73 1 286 1 340 1 
198 1 286 2 340 2 67 1 256 1 206 1 
286 1 340 1 
286 1 340 1 
256 1 206 1 
256 1 206 1 
256 1 206 1 
286 1 340 1 31 1 
286 1 340 1 31 1 
286 1 340 1 31 1 
259 1 286 1 340 1 
259 1 286 1 340 1 
259 1 286 1 340 1 
73 1 242 2 286 1 352 1 122 2 52 1 359 1 78 1 124 1 94 1 79 1 289 2 269 1 59 1 107 1 340 1 210 1 253 1 65 1 187 1 66 1 164 2 138 1 89 2 
292 1 14 1 286 2 210 2 340 2 352 2 253 2 67 1 302 2 39 1 359 2 78 2 86 1 124 2 94 1 364 1 269 3 101 1 222 1 
135 1 341 1 240 1 
135 1 365 1 341 1 
263 1 149 1 365 1 341 3 53 1 240 2 
149 1 365 1 341 2 374 1 53 1 240 1 
149 2 365 1 341 2 240 1 53 1 
115 2 76 1 329 1 267 3 355 1 52 1 359 5 315 4 5 1 78 5 79 1 333 1 58 1 319 2 290 1 252 1 368 1 294 2 129 1 322 1 18 1 257 1 342 1 41 2 166 1 86 2 138 1 139 1 327 1 237 3 328 1 223 1 
115 6 76 2 329 2 50 5 267 9 177 5 355 3 357 1 359 9 315 7 5 6 78 9 79 4 333 3 58 2 96 1 319 6 290 2 271 1 184 1 252 3 368 1 294 6 129 2 37 1 18 1 257 3 342 3 166 3 86 5 111 1 139 1 237 8 328 1 193 1 
115 2 76 1 329 1 267 4 355 1 315 2 359 3 78 3 79 1 58 1 333 1 319 2 290 1 252 1 368 1 294 2 129 1 322 1 37 1 257 1 342 2 41 1 86 3 166 1 237 3 223 1 
115 4 76 1 329 1 267 7 355 2 359 4 315 3 78 4 79 2 58 1 333 2 96 1 319 4 290 1 184 1 252 2 368 1 294 4 129 1 322 1 37 1 257 2 342 3 41 2 86 4 166 2 111 1 237 5 223 1 
155 1 
84 1 
284 1 208 1 
284 1 331 1 250 1 
284 1 243 1 
284 1 250 1 
284 3 47 2 181 1 331 1 250 1 213 1 
185 1 1 1 35 2 82 3 230 7 202 1 158 1 233 3 360 4 4 1 28 1 333 1 137 1 152 1 88 1 114 1 252 1 105 2 
1 2 24 1 48 1 202 1 355 3 3 3 360 16 4 1 316 1 6 1 28 1 203 1 363 1 333 4 183 1 152 1 10 1 252 4 11 1 338 4 105 5 367 1 35 3 82 15 230 31 254 1 158 5 233 10 257 3 166 3 137 2 88 2 114 2 169 2 
1 1 48 2 224 1 360 5 316 2 4 1 6 1 28 1 333 1 152 1 10 2 252 1 11 2 105 3 35 2 82 4 230 9 158 1 233 4 137 1 169 4 114 1 88 1 170 1 
1 1 35 2 82 3 230 7 202 1 158 1 233 3 360 4 4 1 28 1 333 1 137 1 152 1 88 1 114 1 252 1 105 2 
1 1 35 2 82 3 230 7 202 1 158 1 233 3 360 4 4 1 28 1 333 1 137 1 152 1 88 1 114 1 252 1 105 2 
90 1 263 1 287 1 174 1 120 1 330 1 27 1 317 1 247 1 365 1 97 1 9 2 102 1 12 1 275 1 214 1 341 2 17 1 133 1 235 1 135 1 305 1 303 1 42 2 87 1 219 1 373 1 45 1 171 1 240 1 
263 1 90 1 287 1 174 1 330 1 27 1 317 1 247 1 126 1 365 1 97 1 9 3 102 1 227 1 293 1 275 1 214 1 341 2 17 1 133 1 135 1 235 2 305 1 303 1 42 3 219 1 373 1 45 1 171 1 240 1 
263 1 275 1 293 1 90 1 287 1 174 1 341 2 214 1 330 1 17 1 27 1 133 1 135 1 235 2 303 1 247 1 42 2 365 1 219 1 9 2 227 1 102 1 373 1 45 1 240 1 
90 2 284 1 174 1 176 1 330 1 178 1 247 1 125 1 126 1 97 1 9 1 102 2 250 1 32 1 369 1 277 1 214 2 17 1 42 1 43 1 373 1 45 2 171 1 
90 1 263 1 174 1 330 1 317 1 247 1 365 1 97 1 9 1 102 1 227 1 12 1 275 1 214 1 341 2 17 1 133 1 135 1 305 1 303 1 42 1 87 1 373 1 45 1 171 1 240 1 
40 1 
172 1 241 1 119 1 49 1 329 1 91 1 246 1 122 1 359 2 78 2 5 1 123 1 204 1 225 1 56 1 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 16 1 161 3 18 1 279 1 164 1 168 1 260 1 237 1 89 1 195 1 71 1 
241 1 172 1 119 1 49 1 329 1 91 1 246 1 122 1 359 2 78 2 5 1 123 1 204 1 225 1 56 1 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 16 1 161 3 18 1 279 1 164 1 168 1 260 1 237 1 89 1 195 1 71 1 
241 2 329 1 91 1 5 4 56 2 58 1 205 2 334 1 153 1 61 1 157 1 16 2 161 4 18 1 164 1 168 1 260 1 311 2 119 2 267 2 122 1 359 4 78 4 123 1 225 1 319 1 321 2 368 1 276 1 129 1 83 1 38 1 279 1 86 1 139 2 237 1 89 1 140 1 195 1 
284 1 142 1 329 1 91 1 330 2 246 1 5 2 247 1 58 1 205 1 290 1 250 1 334 1 61 1 153 1 209 1 157 1 17 2 161 2 18 1 164 1 168 1 260 1 119 1 174 1 77 1 178 2 122 1 359 3 78 3 123 1 225 1 182 1 319 2 276 1 129 1 277 1 83 1 279 1 43 1 139 1 237 2 373 2 89 1 195 1 
91 1 122 1 359 3 78 3 5 2 123 1 225 1 56 1 276 1 61 1 153 1 157 1 83 1 161 2 279 1 164 1 168 1 139 1 260 1 325 1 89 1 195 1 
91 1 122 1 359 3 5 1 78 3 123 1 225 1 368 1 276 1 61 1 153 1 157 1 83 1 16 1 161 3 279 1 164 1 86 1 168 1 260 1 139 1 325 1 89 1 195 1 
241 1 91 1 122 1 359 3 78 3 5 2 123 1 225 1 56 1 276 1 61 1 153 1 157 1 83 1 16 1 161 3 279 1 164 1 168 1 139 1 260 1 325 1 89 1 195 1 
172 1 241 2 119 1 49 1 329 1 91 1 246 1 122 1 359 3 5 3 78 3 123 1 204 1 225 1 56 2 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 161 2 18 1 279 1 164 1 344 1 168 1 260 1 139 1 325 1 237 1 89 1 71 1 195 1 
119 1 91 1 329 1 246 1 122 1 359 2 78 2 123 1 225 1 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 161 2 18 1 279 1 164 1 168 1 260 1 237 1 89 1 195 1 
172 1 119 1 49 1 91 1 329 1 246 1 122 1 359 2 78 2 123 1 204 1 225 1 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 161 2 279 1 18 1 164 1 168 1 260 1 237 1 89 1 195 1 
172 1 119 1 49 1 91 1 329 1 246 1 122 1 359 2 78 2 123 1 204 1 225 1 58 1 319 1 205 1 334 1 276 1 61 1 153 1 129 1 157 1 83 1 161 2 279 1 18 1 164 1 168 1 260 1 237 1 89 1 195 1 
241 2 119 2 49 1 91 1 329 1 267 2 122 1 359 4 5 4 78 4 123 1 56 2 225 1 58 1 319 1 205 2 334 1 321 2 368 1 276 1 61 1 153 1 296 1 62 1 129 1 157 1 83 1 16 2 161 4 38 1 279 1 18 1 164 1 86 1 168 1 139 2 260 1 237 1 89 1 311 2 195 1 
284 1 0 1 242 1 48 1 25 1 174 1 330 1 178 1 122 1 54 1 360 1 316 1 331 1 247 1 332 1 98 1 99 1 289 1 250 1 10 1 11 1 107 1 128 1 82 1 230 2 232 1 17 1 162 1 164 2 258 1 69 1 372 1 190 1 281 1 192 1 169 2 373 1 89 2 
0 2 284 2 242 1 48 3 144 2 330 3 54 1 147 1 4 1 148 1 332 1 247 2 331 2 333 3 289 1 99 2 250 2 152 1 10 3 252 3 11 3 105 4 107 2 63 1 158 4 17 3 162 1 257 2 164 3 258 3 166 2 220 2 113 2 221 7 114 1 169 6 25 2 174 2 178 1 355 2 122 1 360 10 316 3 180 2 28 1 226 7 227 1 272 2 128 1 35 1 82 10 230 20 233 8 372 7 190 1 281 3 88 1 373 3 89 3 
284 4 23 1 242 1 173 1 48 2 174 3 120 1 354 1 330 6 178 2 122 1 288 1 54 1 360 1 316 2 362 1 331 1 247 3 332 1 289 1 227 1 320 1 250 3 228 1 10 2 11 2 33 1 82 1 230 2 277 1 231 1 17 7 162 1 164 1 258 2 134 1 346 1 43 1 282 1 281 2 169 4 89 1 373 7 
242 1 48 1 179 1 355 1 122 1 360 1 316 1 226 1 333 1 289 1 10 1 11 1 252 1 105 1 82 2 230 3 233 1 257 1 164 1 258 1 110 1 166 1 372 1 190 1 281 1 221 1 191 1 169 2 89 1 
316 1 258 1 48 1 84 1 281 1 282 1 169 2 10 1 11 1 
24 1 118 1 48 2 355 2 54 1 3 3 360 8 316 2 332 1 226 11 333 2 183 1 10 2 11 2 252 1 105 1 338 3 107 1 82 6 230 14 158 1 233 2 301 1 257 1 258 2 166 2 372 4 308 1 190 1 281 1 221 11 169 4 21 1 
48 1 230 2 158 1 233 1 360 2 316 1 258 1 166 1 372 1 226 1 333 1 282 1 281 1 221 1 169 2 10 1 11 1 273 1 
48 1 82 2 230 2 233 1 257 1 316 1 258 1 372 1 226 1 282 1 281 1 221 1 169 2 10 1 11 1 60 1 252 1 105 1 
48 1 82 2 230 4 158 1 233 2 355 1 257 1 360 2 316 1 258 1 166 1 372 2 226 2 333 1 282 1 281 1 221 2 169 2 10 1 252 1 11 1 105 1 
48 1 230 2 231 1 158 1 233 1 360 2 316 1 258 1 166 1 372 1 226 1 333 1 281 1 221 1 169 2 10 1 11 1 273 1 
48 1 82 2 230 2 231 1 233 1 257 1 316 1 258 1 372 1 226 1 281 1 221 1 169 2 10 1 11 1 60 1 252 1 105 1 
48 1 82 2 230 4 231 1 158 1 233 2 355 1 257 1 360 2 316 1 258 1 166 1 372 2 226 2 333 1 281 1 221 2 169 2 10 1 252 1 11 1 105 1 
48 1 82 2 230 4 158 1 233 2 355 1 257 1 360 2 316 1 258 1 166 1 372 2 226 2 333 1 281 1 221 2 169 2 10 1 252 1 11 1 105 1 
0 1 284 1 48 1 25 1 174 1 330 1 178 1 54 1 360 1 316 1 332 1 331 1 247 1 99 1 250 1 10 1 11 1 272 1 107 1 82 1 230 2 17 1 164 1 258 1 281 1 169 2 373 1 89 1 
0 1 284 1 48 1 174 1 314 1 330 1 178 1 54 1 316 1 331 1 247 1 151 1 250 1 10 1 11 1 107 1 276 1 82 1 230 1 17 1 278 1 164 1 258 1 281 1 169 2 238 1 373 1 89 1 
48 1 82 2 230 4 158 1 233 2 355 1 257 1 360 2 316 1 258 1 166 1 372 2 226 2 333 1 190 1 281 1 221 2 169 2 10 1 252 1 11 1 105 1 
0 1 284 1 48 1 25 1 174 1 120 1 330 1 355 1 360 2 180 1 316 1 331 1 247 1 226 2 333 1 99 1 250 1 10 1 252 1 11 1 105 1 272 1 82 2 230 4 158 1 233 2 17 1 257 1 164 1 166 1 258 1 372 2 281 1 221 2 169 2 373 1 89 1 
242 1 48 1 179 1 355 1 122 1 360 2 316 1 333 1 226 1 289 1 10 1 252 1 11 1 82 1 230 3 158 1 233 1 257 1 164 1 258 1 166 1 372 1 190 1 281 1 191 1 221 1 169 2 310 1 89 1 
24 1 244 1 48 2 92 1 245 1 224 1 355 3 3 1 360 9 316 2 333 3 183 1 10 2 11 2 252 3 105 3 338 2 82 10 186 2 64 1 230 19 158 3 233 6 257 3 166 3 304 1 349 1 326 2 169 4 194 1 
199 1 48 3 92 2 245 2 224 1 355 3 3 2 360 14 316 3 6 2 57 1 150 1 80 1 333 3 183 2 100 1 10 3 252 2 11 3 105 2 338 2 82 12 186 4 64 1 230 26 158 2 233 4 257 2 166 3 136 1 349 1 326 1 169 6 194 1 
24 1 199 1 244 1 48 3 92 2 245 1 224 1 355 4 3 3 360 20 4 1 316 3 6 1 28 1 57 1 150 1 80 1 333 5 183 3 100 1 152 1 10 3 11 3 252 5 105 4 338 4 35 1 82 21 186 4 64 1 230 41 158 4 233 8 216 1 257 4 166 4 136 1 349 1 326 1 88 1 114 1 169 6 194 1 
24 1 199 1 244 1 48 4 92 2 245 1 224 1 355 4 3 3 360 20 4 1 316 4 6 2 28 1 57 1 150 1 80 1 333 5 183 3 100 1 152 1 10 4 11 4 252 4 105 4 338 4 35 1 82 18 186 4 64 1 230 38 158 3 233 7 216 1 257 3 166 4 136 1 349 1 326 1 88 1 114 1 169 8 194 1 
24 2 199 1 118 2 48 2 92 1 245 1 224 1 355 7 3 4 360 27 4 1 316 2 6 1 28 1 57 1 150 1 80 1 333 8 183 2 100 1 152 1 10 2 11 2 252 8 105 7 338 4 35 1 82 25 186 4 64 1 230 52 158 7 233 14 257 7 166 7 136 1 349 1 326 1 88 1 114 1 169 4 194 1 
124 1 286 1 364 1 352 1 340 1 210 1 253 1 67 1 39 1 218 1 
73 1 65 1 
124 1 229 1 286 1 352 1 340 1 210 1 253 1 366 1 68 1 
215 1 31 1 
198 1 259 1 2 1 
292 1 286 1 210 1 340 1 352 1 253 1 67 1 302 1 39 1 359 1 78 1 86 1 124 1 94 1 364 1 269 2 101 1 222 1 
292 1 286 1 210 1 340 1 352 1 253 1 67 1 302 1 39 1 359 1 78 1 86 1 124 1 94 1 364 1 269 2 101 1 222 1 
292 1 286 1 210 1 340 1 352 1 253 1 67 1 302 1 39 1 359 1 78 1 86 1 124 1 94 1 364 1 269 2 101 1 222 1 
198 1 215 1 31 1 
198 1 215 1 31 1 
259 1 2 1 
198 1 259 1 2 1 
187 1 59 1 
73 1 286 1 242 2 352 1 52 1 122 2 359 1 315 1 78 1 124 1 79 1 269 1 289 2 249 1 59 1 107 1 340 1 210 1 253 1 65 1 187 1 66 1 302 1 164 2 138 1 222 1 89 2 
72 1 284 1 173 1 48 1 174 1 330 2 358 1 122 2 54 1 360 1 316 1 247 1 332 1 250 1 10 1 11 1 33 1 34 1 82 1 230 2 17 2 164 2 163 1 258 1 134 2 20 1 190 1 281 1 169 2 373 2 89 2 
263 1 275 1 174 1 175 1 120 1 341 2 145 1 330 2 17 2 217 1 133 1 135 1 305 1 247 1 365 1 227 1 102 1 373 2 240 1 
263 1 275 1 174 1 341 2 145 1 330 1 17 1 133 1 135 1 305 1 247 1 365 1 112 1 227 1 102 1 373 1 240 1 
284 1 174 1 277 1 175 1 176 1 178 1 330 1 17 1 247 1 43 1 250 1 102 1 335 1 373 1 
263 1 275 1 174 1 175 1 341 2 145 1 330 1 17 1 217 1 133 1 135 1 305 1 247 1 365 1 227 1 102 1 373 1 240 1 
283 1 
129 1 58 1 319 1 329 1 237 1 246 1 18 1 
247 1 129 1 58 1 174 1 329 1 188 1 8 1 330 1 178 1 373 1 17 1 18 1 
115 5 199 1 142 1 329 2 267 6 51 2 355 2 3 1 359 1 78 1 5 1 57 1 150 1 58 2 333 2 81 1 319 5 290 1 183 1 100 1 252 2 338 1 127 1 368 2 294 5 129 2 18 2 342 3 257 2 86 5 166 2 136 1 139 1 324 1 237 8 
312 1 242 1 329 1 201 1 51 2 179 1 122 1 359 1 78 1 204 1 333 1 58 1 81 1 319 1 289 1 252 1 274 1 276 1 129 1 18 1 19 1 164 1 237 2 88 1 114 1 89 1 22 1 
368 1 298 1 129 1 329 1 18 1 86 1 58 1 319 1 248 1 237 1 
115 5 294 5 267 10 51 2 355 2 342 5 257 2 166 2 86 5 333 2 81 1 319 5 113 1 237 5 252 2 
368 1 359 1 78 1 5 1 86 1 139 1 
196 2 284 2 174 2 329 2 142 2 77 1 26 1 146 1 330 4 178 2 288 1 359 3 5 4 78 3 331 1 247 2 58 2 319 2 290 2 320 1 250 2 209 1 129 2 277 1 37 1 17 4 18 1 346 1 43 1 139 2 307 1 237 2 373 4 
84 1 
0 1 284 1 242 2 48 1 25 1 174 1 330 1 178 1 179 2 54 1 122 2 316 1 247 1 331 1 95 1 289 2 99 1 250 1 10 1 11 1 272 1 107 1 274 1 82 1 230 1 17 1 164 3 258 1 281 1 169 2 373 1 89 3 
115 2 368 2 294 2 35 1 129 1 329 1 142 1 267 4 18 1 342 2 86 4 58 1 319 2 290 1 237 1 
124 1 297 1 364 1 352 1 59 1 
124 1 352 1 291 1 
124 1 352 1 291 1 
124 1 352 1 291 1 
124 1 352 1 262 1 
124 1 352 1 262 1 
124 1 352 1 262 1 
124 1 352 1 
286 1 340 1 
48 1 82 3 230 6 158 2 233 4 224 1 360 3 316 1 333 1 169 2 114 1 88 1 10 1 11 1 252 1 22 1 105 2 
48 1 230 2 158 1 233 1 224 1 360 2 316 1 166 1 333 1 169 2 10 1 11 1 
48 1 82 2 230 4 158 1 233 2 224 1 355 1 257 1 360 2 316 1 166 1 333 1 169 2 10 1 252 1 11 1 105 1 
244 1 48 3 82 2 230 3 158 1 233 2 224 1 360 1 316 3 6 1 169 6 114 1 88 1 10 3 70 1 11 3 105 1 
24 1 244 1 48 5 224 1 355 3 3 3 360 16 4 2 316 5 6 2 28 1 203 1 363 1 333 5 183 1 152 1 10 5 11 5 252 5 338 4 105 7 367 1 35 1 82 18 230 34 158 5 233 12 257 3 166 3 88 3 114 3 169 10 309 1 70 1 
199 1 48 1 224 1 3 1 360 4 316 1 4 1 28 1 333 1 183 1 152 1 10 1 252 1 11 1 338 1 105 2 35 1 82 4 230 8 233 2 169 2 114 1 88 1 
24 1 199 1 48 2 224 1 355 1 3 1 360 6 4 1 316 2 28 1 333 2 183 1 152 1 10 2 252 1 11 2 105 2 338 2 35 1 82 5 230 11 158 1 233 3 166 1 88 1 114 1 169 4 309 1 
199 1 48 3 224 1 355 2 3 1 360 9 4 1 316 3 6 1 28 1 150 1 57 1 333 3 183 1 100 1 152 1 10 3 11 3 252 3 338 1 105 3 35 1 82 10 230 19 158 1 233 4 257 2 166 2 136 1 88 1 114 1 169 6 309 1 
199 1 48 3 224 1 355 2 3 1 360 10 4 1 316 3 6 1 28 1 150 1 57 1 333 3 183 1 100 1 152 1 10 3 11 3 252 2 338 1 105 3 35 1 82 7 230 17 158 2 233 5 257 1 166 2 136 1 88 1 114 1 169 6 309 1 
199 1 48 1 224 1 3 1 360 4 316 1 4 1 28 1 333 1 183 1 152 1 10 1 252 1 11 1 338 1 105 2 35 1 82 4 230 8 233 2 169 2 114 1 88 1 
199 1 48 1 224 1 355 2 3 1 360 6 316 1 150 1 57 1 333 2 183 1 100 1 10 1 11 1 252 2 338 1 105 1 82 6 230 12 158 1 233 2 257 2 166 2 136 1 169 2 
199 1 48 4 224 1 355 2 3 1 360 10 4 1 316 4 6 2 28 1 57 1 150 1 333 3 183 1 100 1 152 1 10 4 11 4 252 2 338 1 105 3 35 1 82 8 230 18 158 2 233 5 257 1 166 2 136 1 88 1 114 1 169 8 309 1 
199 1 48 4 244 1 224 1 355 3 3 1 360 9 316 4 6 2 57 1 150 1 333 3 183 1 100 1 10 4 11 4 252 2 338 1 105 3 82 7 230 16 158 3 233 6 257 2 166 3 136 1 169 8 
82 4 230 7 158 3 233 6 360 3 4 1 28 1 333 1 152 2 114 3 88 3 252 1 105 3 
199 1 48 4 244 1 224 1 355 2 3 1 360 10 4 1 316 4 6 2 28 1 57 1 150 1 333 3 183 1 100 1 152 1 10 4 11 4 252 2 338 1 105 3 35 1 82 8 230 18 158 1 233 4 257 1 166 2 136 1 88 1 114 1 169 8 
35 1 48 2 82 4 230 8 158 1 233 3 360 4 4 1 316 2 6 1 28 1 333 1 152 1 169 4 114 1 88 1 10 2 252 1 11 2 105 2 
84 1 
48 1 82 2 230 4 158 1 233 2 355 1 257 1 360 2 316 1 166 1 333 1 169 2 309 1 10 1 252 1 11 1 105 1 
24 1 82 4 230 7 158 1 233 2 355 1 3 1 257 1 360 3 166 1 333 1 183 1 252 1 105 1 338 2 
24 1 118 1 48 2 355 2 3 2 360 11 4 1 316 2 6 2 28 1 333 3 152 1 10 2 252 3 11 2 338 2 105 5 35 1 82 12 230 23 158 4 233 9 301 1 257 2 166 2 88 2 114 2 169 4 70 1 
82 1 230 1 338 1 
360 1 230 1 3 1 
48 1 82 3 230 6 158 1 233 3 355 1 360 3 257 1 316 1 166 1 333 1 113 1 169 2 10 1 309 1 11 1 252 1 105 2 
199 1 48 1 224 1 355 2 3 1 360 6 316 1 150 1 57 1 333 2 183 1 100 1 10 1 11 1 252 2 338 1 105 1 82 6 230 12 158 1 233 2 257 2 166 2 136 1 169 2 
82 3 230 6 158 1 233 2 360 3 4 1 333 1 114 1 88 1 252 1 105 1 
48 1 82 2 230 3 158 1 233 2 360 1 316 1 6 1 28 1 152 1 88 1 114 1 169 2 10 1 70 1 11 1 105 1 
107 1 285 1 116 1 117 1 200 1 122 1 164 1 270 1 30 1 375 1 89 1 195 1 
107 1 164 1 200 1 89 1 375 1 122 1 195 1 
107 1 284 1 0 1 242 1 25 1 174 1 178 1 330 1 17 1 122 1 162 1 164 2 331 1 247 1 289 1 250 1 89 2 373 1 
196 1 0 1 284 3 242 1 243 1 25 1 174 1 314 1 330 1 122 1 247 1 331 2 289 1 250 2 107 1 276 2 153 1 300 1 157 1 17 1 162 1 164 1 373 1 89 1 
196 1 0 1 284 3 242 1 243 1 174 1 314 1 330 1 122 1 247 1 331 2 151 1 289 1 250 2 107 1 276 2 153 1 300 1 157 1 17 1 162 1 164 1 373 1 89 1 
312 1 284 1 196 1 242 1 201 1 330 1 179 1 122 1 359 1 78 1 289 1 337 1 368 1 274 1 276 1 208 1 17 1 19 1 164 1 86 1 373 1 89 1 
368 1 196 1 284 4 47 1 208 1 243 1 300 1 174 1 83 1 178 1 330 3 255 1 17 3 359 2 371 1 78 2 5 1 86 1 331 1 247 1 250 1 373 3 
247 1 174 1 330 1 373 1 17 1 228 1 
284 1 346 1 247 1 331 1 174 1 143 1 250 1 213 1 330 1 178 1 373 1 17 1 
284 1 0 1 242 1 48 2 25 1 174 1 120 1 330 1 122 1 360 3 4 1 316 2 180 1 28 1 331 1 247 1 226 1 333 1 289 1 99 1 250 1 152 1 10 2 252 1 11 2 105 2 272 1 107 2 35 1 82 3 230 6 233 2 17 1 162 1 164 2 258 2 372 1 20 1 190 1 281 2 220 1 221 1 88 1 114 1 169 4 89 2 373 1 
197 1 284 2 47 1 329 2 330 1 178 1 359 3 315 1 78 3 5 2 58 2 319 1 248 1 103 1 368 1 208 1 298 1 129 2 83 1 255 1 17 1 18 2 189 1 86 1 139 1 307 1 237 1 373 1 
284 1 277 1 174 1 120 1 85 1 178 1 330 4 17 4 371 1 247 1 43 1 250 1 373 4 
284 1 346 1 247 1 331 1 63 1 174 1 250 1 320 1 330 1 373 1 17 1 288 1 
133 1 135 1 247 1 365 1 174 1 341 1 330 1 178 1 373 1 17 1 
284 1 173 1 174 1 120 1 330 2 17 2 358 1 247 1 227 1 250 1 373 2 
196 1 284 3 23 1 173 1 277 1 174 2 120 1 85 1 178 1 330 4 354 1 17 5 247 2 43 1 250 2 373 5 
196 1 284 3 23 1 173 1 277 1 174 2 120 1 85 1 178 1 330 4 17 5 247 2 43 1 250 2 373 5 106 1 
84 1 330 1 178 1 373 1 17 1 
0 1 284 1 242 1 174 1 314 1 330 1 178 1 122 1 247 1 331 1 151 1 289 1 250 1 107 1 276 1 17 1 162 1 164 2 373 1 89 2 
284 1 196 1 346 1 247 1 331 1 174 1 143 1 250 1 213 1 330 1 373 1 17 1 
247 1 174 1 188 1 330 1 373 1 17 1 228 1 
107 1 109 1 165 1 7 1 207 1 
107 1 368 1 74 1 46 1 276 1 153 1 36 1 157 1 370 1 83 1 279 1 109 1 315 1 359 2 78 2 86 1 165 2 7 2 207 2 
72 1 34 1 122 1 109 1 163 1 164 1 165 1 7 1 89 1 
109 1 74 1 36 1 
42 1 287 1 97 1 219 1 9 1 171 1 27 1 
90 1 42 1 214 1 
12 1 154 1 287 1 211 1 27 1 42 1 97 1 9 1 236 1 171 1 
235 1 42 2 287 1 97 1 219 1 9 2 239 1 171 1 27 1 
12 1 130 1 341 1 268 1 135 1 42 1 97 1 219 1 9 1 171 1 240 1 
12 1 42 1 97 1 219 1 9 1 171 1 27 1 
12 1 42 1 287 1 97 1 9 1 171 1 27 2 
12 1 264 1 27 1 42 2 318 1 97 2 219 1 9 2 171 2 339 1 
12 1 75 1 13 1 287 1 130 1 27 1 361 1 235 2 42 3 97 1 219 2 9 3 171 1 
12 1 263 1 287 1 341 2 108 1 27 1 135 1 235 1 42 2 365 1 97 1 219 1 9 2 171 1 240 1 
12 1 13 1 287 1 130 1 27 1 55 1 235 2 42 4 97 2 219 2 9 4 171 2 239 1 
12 1 42 1 287 1 97 1 219 1 9 1 171 1 27 1 
13 1 154 1 287 2 211 2 130 1 27 2 235 2 42 3 97 1 219 2 236 1 9 3 171 1 
12 1 287 1 265 1 266 1 27 1 93 1 235 1 42 2 97 1 219 1 9 2 171 1 
12 1 154 1 299 1 287 1 211 1 27 1 42 1 97 1 9 1 171 1 
351 1 343 2 234 1 219 2 
12 1 295 1 42 1 97 1 9 1 171 1 
12 1 235 1 361 1 42 2 287 1 97 1 219 1 9 2 171 1 27 1 
347 1 
12 1 42 1 287 1 97 1 219 1 9 1 171 1 27 1 
84 1 
12 1 287 1 27 1 235 1 361 1 42 3 97 1 219 1 9 3 29 1 171 1 
13 1 211 1 130 1 219 1 
219 1 27 1 

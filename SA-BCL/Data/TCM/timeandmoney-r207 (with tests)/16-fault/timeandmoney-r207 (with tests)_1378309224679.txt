#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 248 78 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 248 78 65 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 248 290 116 54 (50,213) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 47 183 233 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 47 183 233 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 47 183 233 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 47 183 233 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 47 183 233 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 181 (23,92,261) (23,92,261) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 181 (23,92,261) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (254,287) (19,86,176) (23,92,261) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (13,319) (36,350) (36,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 181 (23,92,261) (23,92,261) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 47 35 152 60 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 248 290 116 54 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 47 35 152 60 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 248 290 116 54 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 248 78 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 248 78 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 134 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 248 236 129 97 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 248 78 133 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 248 78 245 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 47 114 214 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 248 105 309 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 248 105 309 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 248 105 309 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 248 105 309 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 248 105 309 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 181 (19,86,176) (19,86,176) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 181 (19,86,176) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (13,319) (13,319) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 181 (19,86,176) (19,86,176) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 152 159 93 201 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 96 102 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 248 78 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 91 253 231 (110,348) (110,348) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 134 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 248 236 77 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 248 236 129 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 248 236 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 47 57 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 248 167 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 47 35 179 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 248 39 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 91 253 231 332 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 47 35 152 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 47 35 152 159 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 91 253 231 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 248 236 77 118 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 91 253 231 (110,348) (110,348) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 248 236 77 201 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 91 253 231 (110,348) (110,348) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
259 9 242 9 333 2 79 1 335 2 81 1 339 1 61 2 289 6 122 1 82 3 121 1 5 1 212 1 344 1 270 1 108 1 220 1 184 2 135 1 281 1 94 4 240 2 58 2 195 1 112 1 166 2 113 5 
333 2 259 9 242 9 79 1 335 2 81 1 339 1 61 2 289 6 122 1 82 3 121 1 5 1 212 1 344 1 270 1 108 1 220 1 184 2 135 1 281 1 94 4 58 2 240 2 195 1 112 1 166 2 113 5 
333 2 259 10 242 10 79 1 335 2 81 1 339 1 61 2 289 7 122 1 82 4 121 1 5 1 212 1 344 1 270 1 108 1 220 1 184 2 135 1 281 1 94 5 58 2 240 2 195 1 112 1 166 2 113 6 
333 2 259 7 242 7 335 2 81 1 339 1 61 2 289 4 122 1 82 2 121 1 5 1 212 1 344 1 270 1 108 1 220 1 184 2 135 1 281 1 94 3 58 2 240 1 195 1 112 1 166 2 113 4 
242 4 259 4 333 1 79 1 335 1 108 1 81 1 61 1 289 3 82 1 121 1 135 1 5 1 94 2 58 1 240 2 166 1 113 3 
242 2 259 2 335 1 108 1 220 1 61 1 184 1 135 1 5 1 157 1 160 1 211 1 281 1 58 1 166 1 113 1 
5 1 259 3 242 3 108 1 94 1 58 2 289 1 184 1 61 2 82 1 122 1 113 2 135 1 
333 1 242 9 259 9 79 1 335 1 108 1 81 1 339 1 141 1 61 2 289 7 184 1 121 1 62 1 122 1 82 3 135 1 5 1 94 4 240 2 58 2 112 1 166 1 113 5 
333 1 242 9 259 9 79 1 335 1 108 1 81 1 339 1 141 1 61 2 289 7 184 1 121 1 62 1 122 1 82 3 135 1 5 1 94 4 240 2 58 2 112 1 166 1 113 5 
41 1 346 1 134 1 
326 1 171 2 41 1 
249 2 109 2 31 1 202 2 189 1 267 2 138 2 330 2 
45 2 78 1 202 2 228 2 288 1 22 1 205 1 24 1 293 1 146 1 25 1 209 1 267 3 178 1 248 1 316 2 249 3 31 1 304 1 322 1 155 1 185 1 109 2 279 1 136 1 138 2 307 1 330 2 258 1 
249 1 109 1 31 1 202 1 267 1 138 1 305 1 330 1 144 1 277 1 
249 1 130 1 336 1 80 1 33 1 202 1 182 1 346 1 305 1 75 1 41 1 342 1 267 1 215 1 
249 1 130 2 336 1 33 2 202 1 182 1 346 1 305 1 109 1 75 1 41 1 267 1 215 1 138 1 330 1 
71 1 130 1 33 1 273 1 42 1 
71 1 347 1 130 2 33 2 41 1 42 1 346 1 88 1 
71 1 130 1 33 1 
249 1 130 1 31 1 33 1 202 1 142 1 305 1 144 1 277 1 109 1 42 1 267 1 138 1 330 1 
41 1 
71 1 130 2 33 2 41 1 28 1 42 1 346 1 88 1 
8 1 53 1 130 5 115 1 153 1 219 2 286 1 33 5 99 2 346 1 223 1 71 2 41 1 42 2 95 1 298 1 106 2 196 1 88 1 
249 3 109 3 64 1 202 3 189 1 267 3 138 3 330 1 
249 1 109 1 202 1 267 1 138 1 305 1 277 1 
249 1 109 1 232 1 202 1 267 1 138 1 305 1 330 1 317 1 
45 1 78 1 199 1 336 1 311 1 202 3 228 1 288 1 22 1 293 1 146 1 25 1 209 1 64 1 65 1 267 4 215 1 178 1 248 1 317 1 316 1 249 4 130 1 31 1 33 1 304 1 182 1 322 1 155 1 305 1 185 1 109 3 279 1 75 1 138 3 307 1 330 2 258 1 
249 2 109 1 80 1 64 1 202 2 256 1 189 1 267 2 138 1 
249 3 130 1 336 1 199 1 33 1 202 3 311 1 182 1 305 1 109 3 64 2 75 1 41 1 267 3 192 1 215 1 138 3 330 1 317 1 
249 2 32 1 202 2 109 2 64 1 213 1 267 2 138 2 330 1 317 1 
249 1 45 1 228 1 288 1 155 1 22 1 146 1 25 1 279 1 209 1 189 1 267 1 307 1 178 1 316 1 
249 1 45 1 228 1 155 1 22 1 156 1 146 1 25 1 209 1 126 1 189 1 267 1 307 1 178 1 316 1 
293 1 116 1 54 1 50 1 340 1 322 1 290 1 248 1 258 1 
249 1 109 1 250 1 202 1 182 1 267 1 138 1 305 1 
189 1 134 1 
249 2 202 2 109 1 232 1 189 2 267 2 138 1 330 1 317 1 
32 1 213 1 325 1 
249 1 45 1 197 1 228 1 288 1 155 1 22 1 146 1 25 1 279 1 209 1 189 1 267 1 178 1 307 1 316 1 
249 5 199 1 80 1 202 5 16 1 109 4 64 2 256 1 189 1 191 1 267 5 138 4 330 1 317 1 
249 2 250 1 109 2 202 2 267 2 138 2 305 1 277 1 
249 2 45 1 199 1 202 1 228 1 288 1 22 1 155 1 146 1 25 1 109 1 209 1 279 1 64 1 213 1 267 2 178 1 138 1 307 1 316 1 
296 1 226 1 145 1 
296 1 226 1 145 1 
177 1 296 1 226 1 
177 1 296 1 226 1 
177 1 296 1 226 1 
296 1 226 1 
296 1 226 1 
49 1 59 1 
49 1 59 1 
49 1 59 1 
296 1 226 1 145 1 
296 1 221 1 226 1 
89 1 49 1 296 2 151 1 59 1 226 2 
29 1 9 2 89 1 130 2 90 1 33 2 321 1 117 1 2 1 175 1 14 2 224 2 15 3 37 1 161 2 296 2 41 1 137 2 226 2 
98 1 260 1 202 2 117 1 100 1 51 1 296 1 267 2 249 2 130 1 33 1 320 1 221 1 154 1 14 1 15 1 224 1 109 2 161 1 74 1 189 1 137 1 138 2 226 1 
333 1 335 1 166 1 
335 1 160 1 166 1 
254 1 333 2 335 3 160 1 203 1 241 1 
333 1 335 2 160 1 287 1 203 1 241 1 
333 1 335 2 160 1 203 1 241 2 
310 1 116 1 171 1 99 1 290 1 295 1 207 1 152 1 298 1 318 1 106 1 88 1 299 1 217 1 53 3 130 5 10 2 153 1 219 1 67 1 33 5 320 1 35 1 274 1 154 1 346 1 71 1 159 1 74 1 41 1 42 4 
116 1 310 1 171 1 234 1 267 1 318 1 88 1 53 3 130 6 273 3 277 1 138 1 330 1 202 1 99 1 142 1 290 1 144 1 295 1 207 1 149 3 152 1 298 1 106 1 299 1 300 1 249 1 31 1 153 1 219 1 33 6 34 1 35 1 154 2 346 1 305 1 109 1 71 4 159 1 41 2 42 5 
116 1 310 1 171 2 99 1 290 1 207 1 152 1 298 1 318 1 106 1 299 1 217 1 53 3 130 3 10 1 67 1 219 1 33 3 35 1 154 1 346 1 223 1 326 1 159 1 41 2 42 2 
310 2 116 2 171 3 99 1 290 2 313 1 207 1 152 2 298 2 318 2 106 1 299 1 217 1 53 5 130 4 10 2 219 1 67 1 33 4 35 2 68 1 154 2 346 1 223 1 69 1 326 1 159 2 41 2 42 3 
146 1 178 1 
146 1 341 1 22 1 235 1 178 3 83 2 
178 1 134 1 83 1 
188 1 178 1 
284 1 
146 1 22 1 178 1 
178 1 143 1 
233 1 183 1 47 1 190 1 
233 1 183 1 47 1 190 1 
26 1 233 1 183 1 47 1 190 1 
233 1 183 1 47 1 190 1 
233 1 183 1 47 1 190 1 
45 1 169 1 242 1 259 1 228 1 184 1 61 1 276 1 261 1 23 1 264 1 5 1 58 1 165 1 181 1 316 1 
45 1 169 1 242 2 259 2 334 1 140 1 228 1 289 1 184 1 61 1 276 1 261 1 125 1 58 1 165 1 181 1 316 1 
45 1 169 1 242 1 259 1 335 1 334 1 92 1 228 1 289 1 276 1 184 1 155 1 55 1 254 1 176 1 160 1 209 1 125 1 165 1 316 1 
45 1 169 2 319 1 242 1 259 1 140 1 228 1 184 2 276 2 61 1 36 1 40 1 58 1 350 1 307 1 165 2 316 1 
45 1 169 1 242 1 259 1 334 1 228 1 184 1 61 1 276 1 261 1 23 1 5 1 58 1 165 1 181 1 316 1 
73 1 
45 2 171 2 80 1 228 2 1 1 48 4 173 1 266 2 315 1 267 1 178 1 316 2 88 3 53 2 130 5 12 1 182 1 323 2 324 2 237 2 186 2 326 2 187 1 194 1 336 1 202 1 99 1 206 1 103 1 146 1 246 1 294 1 207 1 209 1 210 1 297 1 342 1 215 1 216 2 298 2 106 1 66 1 249 1 301 2 153 1 219 1 33 5 155 1 346 1 305 1 71 6 75 1 41 2 163 1 307 2 
66 1 249 1 130 3 336 1 80 1 33 3 202 1 12 1 182 1 48 2 324 1 206 1 305 1 71 2 294 1 75 1 342 1 28 1 215 1 194 1 267 1 88 1 
336 1 80 1 202 1 48 3 206 1 294 1 342 1 267 1 215 1 28 1 88 1 249 1 66 1 130 3 33 3 12 1 182 1 346 1 305 1 237 1 71 1 75 1 41 1 194 1 
336 1 80 1 202 1 48 3 206 1 294 1 342 1 28 1 267 1 215 1 88 1 249 1 66 1 130 3 33 3 12 1 182 1 324 1 346 1 305 1 237 1 186 1 71 2 75 1 41 1 194 1 
336 1 80 1 202 1 99 1 48 6 206 1 103 1 294 1 208 1 266 2 315 1 342 1 28 1 267 1 215 1 216 2 298 1 106 1 88 3 53 1 66 1 249 1 301 2 130 5 153 1 302 1 219 1 33 5 12 1 182 1 323 2 346 5 324 4 237 4 305 1 186 4 326 2 71 7 38 1 75 1 76 1 41 5 194 1 20 1 
171 2 80 1 1 1 48 4 266 2 315 1 267 1 88 2 53 1 130 4 12 1 182 1 323 2 324 2 237 2 186 2 326 2 194 1 336 1 202 1 99 1 206 1 103 1 294 1 342 1 215 1 298 1 216 2 106 1 249 1 66 1 301 2 153 1 219 1 33 4 346 1 305 1 71 4 75 1 41 2 
336 1 80 1 202 1 99 1 48 4 206 1 103 1 294 1 208 1 266 2 315 1 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 249 1 66 1 301 2 130 4 153 1 219 1 33 4 12 1 182 1 323 2 346 1 324 2 237 2 305 1 186 2 326 2 71 4 75 1 76 1 41 1 194 1 20 1 
336 1 80 1 202 1 99 1 48 4 206 1 103 1 294 1 208 1 266 2 315 1 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 249 1 66 1 301 2 130 4 153 1 219 1 33 4 12 1 182 1 323 2 346 1 324 2 237 2 305 1 186 2 326 2 71 4 75 1 76 1 41 1 194 1 20 1 
170 1 171 2 336 1 80 1 202 1 99 1 48 4 229 1 206 1 103 1 294 1 266 2 127 1 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 249 1 66 1 130 4 153 1 219 1 33 4 12 1 182 1 346 1 324 2 237 2 305 1 186 2 70 2 71 4 72 2 75 1 76 1 41 1 194 1 
336 1 80 1 202 1 99 1 48 5 206 1 103 1 294 1 208 1 266 2 315 1 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 249 1 66 1 301 2 130 4 153 1 302 1 219 1 33 4 12 1 182 1 323 2 346 1 324 3 305 1 237 3 186 3 326 2 71 5 75 1 76 1 41 1 194 1 20 1 
336 1 80 1 202 1 99 1 48 5 206 1 103 1 294 1 208 1 266 2 315 1 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 249 1 66 1 301 2 130 4 153 1 302 1 219 1 33 4 12 1 182 1 323 2 346 1 324 3 305 1 237 3 186 3 326 2 71 5 75 1 76 1 41 1 194 1 20 1 
170 1 171 2 336 1 80 1 202 1 99 1 1 1 48 4 206 1 103 1 294 1 266 2 342 1 267 1 215 1 216 2 298 1 106 1 88 2 53 1 66 1 249 1 130 4 153 1 219 1 33 4 12 1 182 1 346 1 324 2 237 2 305 1 186 2 70 2 71 4 72 2 75 1 41 1 194 1 
293 1 60 1 340 1 35 1 47 1 322 1 152 1 258 1 
293 1 116 1 54 1 340 1 322 1 290 1 248 1 258 1 
293 1 159 1 340 1 35 1 47 1 322 1 152 1 258 1 
293 1 60 1 35 1 47 1 322 1 152 1 174 1 258 1 
293 1 116 1 54 1 322 1 290 1 174 1 248 1 258 1 
293 1 159 1 35 1 47 1 322 1 152 1 174 1 258 1 
293 1 159 1 35 1 47 1 322 1 152 1 258 1 
249 1 45 1 78 1 304 1 228 1 288 1 322 1 155 1 22 1 293 1 146 1 25 1 279 1 209 1 267 1 178 1 307 1 248 1 258 1 316 1 
249 1 45 1 78 1 228 1 322 1 155 1 22 1 156 1 293 1 146 1 25 1 209 1 280 1 126 1 267 1 178 1 307 1 248 1 258 1 316 1 
293 1 159 1 35 1 47 1 322 1 263 1 152 1 258 1 
249 1 45 1 35 1 304 1 228 1 288 1 47 1 322 1 155 1 22 1 3 1 264 1 293 1 146 1 25 1 159 1 279 1 209 1 267 1 178 1 152 1 258 1 316 1 
249 1 35 1 202 1 47 1 322 1 263 1 101 1 293 1 109 1 159 1 267 1 138 1 152 1 330 1 258 1 317 1 
293 1 231 1 348 1 91 1 340 1 110 1 322 1 134 1 258 1 253 1 
293 1 97 1 322 1 236 1 263 1 129 1 248 1 258 1 
249 1 78 1 199 1 202 1 322 1 263 1 133 1 293 1 109 1 64 1 267 1 138 1 248 1 258 1 
45 1 249 1 78 1 199 1 202 1 228 1 322 1 263 1 293 1 245 1 109 1 64 1 267 1 138 1 307 1 248 1 316 1 258 1 
114 1 293 1 45 1 228 1 47 1 214 1 322 1 307 1 174 1 316 1 258 1 
249 1 35 1 202 1 47 1 322 1 263 1 291 1 293 1 109 1 159 1 267 1 138 1 152 1 330 1 258 1 317 1 
292 1 293 1 119 1 7 1 105 1 43 1 248 1 309 1 
292 1 293 1 119 1 7 1 105 1 43 1 248 1 309 1 
292 1 293 1 119 1 7 1 105 1 43 1 248 1 309 1 
292 1 293 1 119 1 7 1 105 1 43 1 248 1 309 1 
292 1 293 1 119 1 7 1 105 1 43 1 248 1 309 1 
29 1 9 1 89 1 130 1 90 1 33 1 117 1 2 1 175 1 14 1 224 1 15 2 37 1 161 1 296 1 41 1 137 1 226 1 
29 1 9 1 89 1 130 1 90 1 33 1 117 1 2 1 175 1 14 1 224 1 15 2 37 1 161 1 296 1 41 1 137 1 226 1 
29 1 9 1 89 1 130 1 90 1 33 1 117 1 2 1 175 1 14 1 224 1 15 2 37 1 161 1 296 1 41 1 137 1 226 1 
151 1 308 1 145 1 
151 1 308 1 145 1 
177 1 21 1 
177 1 21 1 151 1 
260 1 100 1 
98 1 260 1 202 2 2 1 100 1 265 1 51 1 296 1 267 2 9 1 249 2 130 1 33 1 320 1 221 1 154 1 14 1 224 1 15 1 109 2 161 1 74 1 189 1 137 1 42 1 138 2 226 1 
278 1 89 1 37 1 161 1 296 1 137 1 175 1 14 1 226 1 224 1 
98 1 221 1 
161 1 296 1 150 1 137 1 283 1 257 1 14 1 226 1 224 1 
308 1 145 1 
177 1 21 1 151 1 
249 1 202 1 111 1 267 1 
225 1 45 2 334 1 228 2 19 1 276 1 86 1 181 1 316 2 264 1 
45 1 334 1 228 1 19 1 276 1 181 1 316 1 239 1 
225 1 45 1 319 1 228 1 13 1 276 1 307 1 316 1 
225 1 45 1 334 1 228 1 19 1 276 1 86 1 181 1 316 1 
268 1 
8 1 53 1 41 1 346 1 298 1 134 1 196 1 
171 1 99 1 315 1 298 1 106 1 88 1 53 1 301 1 130 1 153 1 219 1 33 1 323 1 346 1 326 1 71 1 41 2 
0 2 45 1 168 2 310 4 116 2 171 8 228 1 46 2 83 2 128 2 235 1 178 6 316 1 318 4 88 3 53 8 130 5 326 4 18 2 187 1 188 3 336 2 338 1 99 3 22 1 290 2 63 1 146 1 207 2 209 2 152 2 298 5 106 3 153 3 219 3 33 5 35 2 155 1 346 1 71 5 255 2 159 2 41 5 307 1 44 1 167 2 
53 2 198 1 310 3 153 1 171 4 219 1 201 1 35 1 99 1 93 1 236 1 57 1 326 2 159 1 41 2 77 1 152 1 298 3 106 1 318 3 
332 1 202 1 99 1 142 1 290 2 144 1 231 1 208 1 128 2 267 1 179 1 298 3 106 1 249 1 53 3 130 1 153 1 31 1 219 1 33 1 35 2 305 1 277 1 253 1 109 1 138 1 330 1 
8 1 53 1 153 1 219 1 99 1 346 1 41 1 298 1 106 1 196 1 
53 2 116 1 310 1 171 2 35 1 290 1 326 1 159 1 128 1 41 1 152 1 298 1 318 1 
130 1 71 1 33 1 41 1 346 1 88 1 
45 3 337 1 99 2 228 3 102 1 173 1 146 1 246 1 209 1 207 1 297 1 178 1 298 2 106 2 316 3 88 2 53 1 130 3 153 1 11 1 219 2 33 3 155 1 223 1 71 4 187 2 163 1 307 2 96 1 
45 1 78 1 202 2 228 1 288 1 22 1 293 1 146 1 25 1 209 1 267 3 178 1 248 1 316 1 249 3 31 1 304 1 155 1 322 1 185 1 109 2 279 1 307 1 138 2 330 2 258 1 
53 1 310 1 171 2 153 1 219 1 99 1 183 1 346 1 326 1 207 1 187 1 41 2 298 2 318 1 106 1 
137 1 164 1 14 1 
137 1 164 1 14 1 
272 1 137 1 14 1 
272 1 137 1 14 1 
272 1 137 1 14 1 
137 1 14 1 
296 1 226 1 
137 1 164 1 14 1 
37 1 244 1 137 1 100 1 14 1 
293 2 231 1 348 1 91 1 110 1 247 1 253 1 
231 1 348 1 91 1 110 1 134 1 253 1 
293 1 159 1 35 1 131 1 47 1 152 1 
77 1 236 1 248 1 
236 1 129 1 248 1 
236 1 248 1 
57 1 47 1 
248 1 167 1 
293 1 201 1 77 1 7 1 236 1 248 1 
35 1 47 1 179 1 
39 1 248 1 
332 1 231 1 91 1 253 1 
293 1 35 1 47 1 7 1 152 1 
293 1 159 1 35 1 47 1 7 1 152 1 
293 1 231 1 91 1 7 1 253 1 
293 3 131 1 77 1 118 1 7 1 236 1 331 1 248 1 
293 1 201 1 77 1 7 1 236 1 248 1 
293 2 201 1 131 1 77 1 7 1 236 1 248 1 
293 1 201 1 77 1 7 1 236 1 248 1 
293 1 201 1 77 1 7 1 236 1 248 1 
293 1 201 1 77 1 7 1 236 1 248 1 
293 1 201 1 77 1 7 1 236 1 248 1 
293 2 201 1 131 1 77 1 7 1 236 1 248 1 
293 2 201 1 77 1 7 1 236 1 331 1 248 1 
231 1 348 1 91 1 110 1 253 1 
293 2 201 1 77 1 7 1 236 1 331 1 248 1 
249 1 80 1 202 1 256 1 189 1 267 1 85 1 
249 1 80 1 200 1 202 1 120 1 238 1 256 1 189 1 282 1 27 1 267 1 85 1 
146 1 45 1 209 1 228 1 163 1 297 1 155 1 178 1 307 1 134 1 316 1 
249 2 45 1 202 1 228 1 288 1 22 1 155 1 146 1 25 1 109 1 209 1 64 1 189 1 267 2 178 1 138 1 307 1 316 1 
45 1 337 1 202 2 228 1 288 1 22 2 143 1 146 2 124 1 25 1 209 1 64 1 267 2 215 1 178 3 316 1 249 2 182 1 222 1 155 1 305 2 109 2 189 1 138 1 
45 1 337 1 202 2 228 1 22 2 143 1 146 2 124 1 25 1 209 1 64 1 267 2 215 1 178 3 316 1 249 2 182 1 222 1 155 1 305 2 156 1 109 2 189 1 138 1 
45 1 336 1 337 1 202 1 228 1 142 1 22 1 143 1 144 1 83 1 146 1 209 1 267 1 178 4 316 1 87 1 249 1 130 2 31 1 33 2 222 1 155 1 346 1 305 1 277 1 109 1 71 1 188 1 328 1 41 1 138 1 330 1 
0 1 45 1 336 1 337 1 202 1 228 1 142 1 22 1 143 1 144 1 83 1 146 1 209 1 267 1 178 4 316 1 249 1 130 2 31 1 33 2 222 1 155 1 346 1 305 1 277 1 109 1 71 1 188 1 41 1 138 1 330 1 
45 1 209 1 228 1 155 1 180 1 316 1 
227 1 45 6 334 1 139 1 228 7 22 1 155 2 205 1 264 1 56 1 146 2 158 1 6 1 209 3 162 1 104 1 235 1 307 2 178 3 180 1 316 7 
285 1 45 1 202 1 228 1 288 1 22 1 263 1 3 1 264 1 293 2 231 1 146 1 25 1 209 1 64 1 267 2 178 1 316 1 249 2 218 1 91 1 304 1 322 2 155 1 253 1 109 1 348 1 279 1 110 1 138 1 258 2 
0 1 45 1 168 1 336 1 228 1 99 2 46 1 83 1 178 2 298 1 106 2 316 1 88 1 8 1 53 1 130 3 153 2 11 1 219 2 33 3 346 1 71 2 255 1 188 1 41 1 42 1 307 1 196 1 
45 2 228 2 22 1 155 1 264 1 83 1 146 1 209 2 235 1 178 2 180 1 316 2 44 1 
45 4 228 4 155 1 264 1 123 1 146 1 209 1 329 1 297 1 163 1 307 1 178 1 316 4 
227 1 45 2 337 1 243 1 228 2 22 1 155 1 230 1 146 1 158 1 209 2 178 1 52 1 316 2 
45 1 335 1 160 1 209 1 228 1 155 1 307 1 166 1 316 1 55 1 
45 2 334 1 303 1 228 2 155 1 264 1 146 1 209 1 104 1 178 1 316 2 
45 4 337 1 228 5 155 2 264 1 56 1 146 2 209 2 104 1 162 1 329 1 163 1 297 1 307 1 178 3 316 5 
45 4 337 1 228 5 155 2 264 1 146 2 209 2 349 1 104 1 162 1 329 1 163 1 297 1 307 1 178 3 316 5 
249 2 45 1 202 1 228 1 22 1 155 1 156 1 146 1 25 1 109 1 209 1 64 1 189 1 267 2 178 1 138 1 307 1 316 1 
227 1 45 1 139 1 337 1 228 1 22 1 155 1 146 1 158 1 209 2 235 1 178 1 316 1 
17 1 172 1 111 1 193 1 
172 1 343 1 4 1 
17 1 345 1 172 1 189 1 193 1 
130 2 336 1 33 2 172 1 345 2 311 1 182 1 346 1 305 1 4 1 17 2 147 1 75 1 189 1 41 1 215 1 42 1 193 2 343 1 
108 1 113 1 134 1 135 1 
259 1 242 1 108 1 58 1 61 1 113 1 135 1 
259 1 184 1 165 1 
5 1 259 3 242 3 108 1 220 2 327 1 306 1 58 1 61 1 132 1 113 1 135 1 
259 2 242 2 108 1 240 1 58 1 289 1 61 1 113 1 135 1 
5 1 333 1 259 1 242 1 335 1 94 1 81 1 58 1 61 1 166 1 113 1 
5 1 259 1 242 1 108 1 58 1 61 1 113 1 
5 1 259 1 242 1 108 2 58 1 61 1 135 1 
5 1 259 2 242 2 108 1 312 1 84 1 58 2 61 2 262 1 113 1 
5 1 259 3 242 3 108 1 94 1 339 1 58 1 289 2 61 1 82 1 112 1 113 2 135 1 
242 2 259 2 333 1 335 2 108 1 61 1 289 1 135 1 5 1 254 1 160 1 148 1 58 1 166 1 113 1 
5 1 259 4 242 4 79 1 108 1 94 1 240 1 58 2 289 2 61 2 82 1 113 2 135 1 
5 1 259 1 242 1 108 1 58 1 61 1 113 1 135 1 
242 4 259 4 271 1 108 2 220 1 289 2 61 1 82 1 135 2 94 1 327 1 306 1 58 1 113 3 
5 1 259 2 242 2 108 1 58 1 289 1 275 1 61 1 62 1 204 1 113 1 135 1 
242 3 259 3 108 1 220 2 61 1 251 1 135 1 5 1 327 1 58 1 306 2 113 1 
30 1 269 1 113 2 314 2 
5 1 259 1 242 1 58 1 61 1 252 1 
5 1 259 2 242 2 108 1 339 1 58 1 289 1 61 1 113 1 135 1 
107 1 
5 1 259 1 242 1 108 1 58 1 61 1 113 1 135 1 
242 3 259 3 108 1 220 1 339 1 289 1 61 1 135 1 5 1 58 1 113 1 
271 1 94 1 82 1 113 1 
108 1 113 1 

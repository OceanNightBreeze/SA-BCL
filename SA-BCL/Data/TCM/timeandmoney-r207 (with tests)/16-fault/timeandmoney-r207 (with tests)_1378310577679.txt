#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (114,187) (114,187) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (212,249) 94 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (114,187) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (96,166,171) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 109 51 80 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 109 51 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (114,187) (114,187) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 190 266 67 154 172 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) (211,290) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) 10 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (53,117,234,237) (211,290) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (53,117,234,237) (53,117,234,237) (211,290) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (114,187) (114,187) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 64 99 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (212,249) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (212,249) (212,249) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (212,249) (212,249) (89,135) 120 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (212,249) 94 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (114,187) (114,187) 147 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 190 266 67 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 274 (30,142) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 274 (277,284) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 274 (277,284) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 274 (30,142) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
114 1 136 1 239 1 4 1 252 1 171 1 292 1 187 1 
115 1 
115 1 87 1 136 1 144 1 252 2 91 1 171 2 245 1 
278 1 32 1 103 1 219 1 144 1 182 2 130 2 72 1 91 2 165 1 245 1 112 1 115 1 136 2 119 2 252 5 171 5 17 1 126 1 
115 1 19 1 245 1 
115 1 162 2 138 1 
239 2 4 1 292 2 
239 1 4 1 90 1 70 2 94 1 107 1 77 2 212 1 250 1 273 1 292 1 65 2 
239 1 4 1 292 1 187 1 
0 1 176 1 2 1 35 1 96 1 166 1 55 1 245 1 115 1 252 1 171 1 83 1 235 1 215 1 
239 1 96 1 292 1 
136 1 252 1 91 1 171 1 46 1 
115 1 136 1 144 1 252 2 91 1 92 1 171 2 245 1 
252 1 91 1 171 1 
31 1 77 1 239 1 21 1 90 1 70 1 65 1 
0 1 2 1 239 1 35 1 20 1 202 1 132 1 121 1 83 1 292 1 
19 1 
0 1 102 1 2 1 31 1 239 4 35 1 21 2 54 1 202 1 55 1 132 1 83 1 16 1 292 1 
239 1 
239 3 21 1 292 1 
239 1 
239 1 121 1 292 1 132 1 
31 1 239 2 21 1 292 1 132 1 
0 1 2 1 239 1 21 1 35 1 202 1 55 1 16 1 83 1 
31 1 239 1 21 1 
239 1 292 1 132 1 
77 1 90 1 70 1 65 1 
77 1 90 1 70 1 65 1 
1 2 41 1 207 1 68 1 170 1 287 1 146 1 131 1 
239 1 194 1 
281 1 161 1 22 1 
281 2 59 1 23 1 22 2 145 1 213 1 
281 1 22 1 
281 1 22 1 
281 1 22 1 145 1 213 1 
281 1 22 1 145 1 213 1 
145 1 213 1 
281 1 22 1 81 1 
281 1 22 1 81 1 
281 1 22 1 81 1 
281 1 22 1 106 1 
281 1 22 1 106 1 
281 1 22 1 106 1 
281 1 238 1 34 1 22 1 51 1 80 1 252 1 171 1 109 1 
281 1 238 1 34 1 22 1 51 1 109 1 
28 1 193 1 78 2 151 1 196 1 15 1 
28 1 78 2 151 1 196 1 15 2 
28 1 78 1 66 1 
78 1 196 1 66 1 
28 2 69 1 78 3 151 1 196 1 15 1 
32 2 5 2 180 1 144 1 182 1 72 1 262 1 7 1 149 1 9 1 266 1 115 2 11 1 119 1 276 1 85 1 156 1 190 1 283 1 159 1 162 3 285 1 130 1 91 1 165 3 245 1 134 2 136 4 138 1 252 5 171 5 293 2 
192 1 239 1 4 1 91 1 201 1 245 1 114 1 115 1 136 2 227 1 252 2 171 2 292 1 187 1 46 1 
32 2 5 2 180 1 182 1 262 1 7 1 9 1 115 3 266 1 11 1 119 1 276 1 278 1 190 1 156 1 159 1 162 4 130 1 165 3 245 1 134 2 136 2 138 2 252 3 171 3 293 1 
32 4 5 4 180 2 182 1 262 1 7 1 75 1 9 2 115 4 266 2 11 1 12 1 119 1 84 1 276 1 278 1 190 2 156 2 159 2 162 7 130 1 165 5 245 1 134 4 136 3 138 3 252 4 171 4 293 2 
29 1 
19 1 44 1 243 1 
18 1 44 1 140 1 
44 1 217 1 
44 1 169 1 
44 1 140 1 
183 1 18 1 44 3 243 2 140 1 186 1 
156 1 180 1 197 1 198 4 71 1 95 2 37 7 261 3 286 1 246 1 42 1 76 1 208 1 13 1 271 3 185 1 82 2 62 1 
156 3 190 3 48 1 67 1 180 2 198 10 241 1 95 1 37 17 261 3 265 1 9 2 266 3 76 2 43 3 185 2 271 7 172 1 82 1 62 1 154 1 254 3 
1 4 180 1 37 9 71 1 38 1 261 4 223 1 41 2 76 1 42 1 13 1 271 4 185 1 82 2 156 1 198 5 197 1 95 3 287 2 131 2 205 1 207 2 208 1 62 1 
156 1 180 1 197 1 198 4 71 1 95 2 37 7 261 3 286 1 42 1 76 1 208 1 13 1 271 3 185 1 82 2 62 1 
156 1 180 1 197 1 198 4 71 1 95 2 37 7 261 3 286 1 42 1 76 1 208 1 13 1 271 3 185 1 82 2 62 1 
117 1 211 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
10 1 117 1 184 1 234 1 237 1 
117 1 211 1 184 1 234 1 237 1 
184 1 234 1 290 1 53 1 
191 1 
218 3 32 1 143 2 144 2 182 1 36 2 72 1 222 1 110 1 8 1 115 1 226 1 119 1 231 3 123 1 188 1 279 1 195 3 199 1 242 2 130 1 91 5 165 1 245 1 167 1 248 2 138 2 251 1 252 3 171 3 174 1 175 3 
218 3 32 1 143 2 144 2 182 1 36 2 72 1 222 1 110 1 8 1 115 1 226 1 119 1 231 3 123 1 188 1 279 1 195 3 199 1 242 2 130 1 91 5 165 1 245 1 167 1 248 2 138 2 251 1 252 3 171 3 174 1 175 3 
218 2 32 1 144 2 182 1 72 1 36 2 73 1 8 1 115 1 226 1 119 1 231 2 123 1 188 1 162 2 195 2 130 1 91 4 165 1 204 1 245 1 167 1 248 2 58 2 252 3 251 1 171 3 141 2 175 2 
218 2 143 2 144 3 70 2 221 1 72 1 8 1 77 2 226 1 231 2 233 1 162 2 90 2 242 2 91 6 165 2 167 1 248 2 27 1 252 4 251 1 171 4 253 1 175 2 178 1 32 2 182 1 36 2 262 1 115 1 119 1 44 1 270 1 123 1 188 1 195 2 199 1 130 1 52 1 204 1 138 2 140 1 60 1 65 2 
87 1 144 1 91 2 167 1 8 1 226 1 123 1 252 2 171 2 188 1 175 1 
8 1 218 1 226 1 195 1 123 1 252 1 171 1 188 1 167 1 
87 1 218 1 195 1 144 1 91 2 167 1 8 1 226 1 123 1 231 1 252 2 171 2 188 1 175 1 
32 1 218 3 4 1 143 2 144 3 182 1 36 2 72 1 222 1 264 1 110 1 8 1 114 1 115 2 226 1 119 1 231 4 123 1 187 1 188 1 279 1 87 1 239 1 195 3 199 1 242 2 130 1 91 7 165 1 245 2 167 1 248 2 138 2 251 1 252 4 171 4 292 1 174 1 175 4 
218 2 32 1 143 2 144 2 182 1 72 1 36 2 8 1 115 2 226 1 119 1 231 2 123 1 188 1 162 2 195 2 199 1 130 1 242 2 91 4 165 1 204 1 245 1 167 1 248 2 252 3 251 1 138 2 171 3 175 2 
218 2 32 1 143 2 144 2 182 1 72 1 36 2 222 1 110 1 8 1 115 1 226 1 119 1 231 2 123 1 188 1 195 2 199 1 242 2 130 1 91 4 165 1 245 1 167 1 248 2 138 2 252 3 251 1 171 3 174 1 175 2 
218 2 32 1 143 2 144 2 182 1 72 1 36 2 222 1 110 1 8 1 115 1 226 1 119 1 231 2 123 1 188 1 195 2 199 1 242 2 130 1 91 4 165 1 245 1 167 1 248 2 138 2 252 3 251 1 171 3 174 1 175 2 
218 2 32 1 144 2 182 1 72 1 36 2 73 1 110 1 224 1 8 1 115 1 226 1 119 1 231 2 229 1 123 1 188 1 162 2 195 2 130 1 91 4 165 1 245 1 167 1 248 2 58 2 252 3 251 1 171 3 141 2 175 2 
1 2 101 1 68 1 198 1 90 1 70 1 37 1 263 1 287 1 131 1 41 1 207 1 77 1 230 1 170 1 65 1 
1 2 68 1 180 1 259 1 37 2 41 1 266 1 9 1 269 1 271 1 190 1 156 1 239 1 198 1 287 1 131 1 132 1 207 1 170 1 292 1 
156 1 1 2 68 1 19 1 198 2 197 1 37 2 71 1 95 1 261 1 146 1 287 1 131 1 41 1 207 1 42 1 208 1 13 1 170 1 82 1 
1 2 68 1 198 1 37 2 259 1 287 1 131 1 41 1 207 1 99 1 43 1 170 1 271 1 254 1 64 1 
1 2 190 1 156 1 68 1 198 1 37 1 146 1 287 1 131 1 41 1 207 1 170 1 255 1 
1 2 68 1 257 1 180 1 37 1 146 1 287 1 131 1 41 1 207 1 9 1 170 1 271 1 
1 2 190 1 156 1 68 1 180 1 198 1 37 2 146 1 287 1 131 1 41 1 9 1 207 1 266 1 170 1 271 1 
1 2 190 1 156 1 68 1 198 1 37 1 263 1 287 1 131 1 41 1 207 1 170 1 255 1 
1 2 68 1 257 1 180 1 37 1 263 1 287 1 131 1 41 1 207 1 9 1 170 1 271 1 
1 2 190 1 156 1 68 1 180 1 198 1 37 2 263 1 287 1 131 1 41 1 9 1 207 1 266 1 170 1 271 1 
1 2 190 1 156 1 68 1 180 1 198 1 37 2 287 1 131 1 41 1 9 1 207 1 266 1 170 1 271 1 
77 1 212 1 90 1 70 1 65 1 
1 2 101 1 68 1 198 1 90 1 70 1 37 2 39 1 287 1 131 1 41 1 207 1 77 1 170 1 271 1 155 1 65 1 
1 2 190 1 156 1 68 1 180 1 198 1 37 2 259 1 287 1 131 1 41 1 9 1 207 1 266 1 170 1 271 1 
249 1 77 1 212 1 70 1 40 1 65 1 
1 2 68 1 180 1 259 1 37 2 41 1 266 1 9 1 14 1 271 1 190 1 156 1 239 1 198 1 287 1 131 1 132 1 207 1 170 1 292 1 
1 2 101 1 49 1 31 1 68 1 239 1 21 1 198 1 37 2 259 1 287 1 131 1 41 1 207 1 170 1 152 1 271 1 155 1 
1 2 31 1 68 1 239 1 21 1 90 1 70 1 37 1 259 1 287 1 131 1 41 1 135 1 207 1 249 1 77 1 212 1 120 1 170 1 271 1 155 1 65 1 
1 4 33 1 180 1 37 9 261 2 223 1 41 2 266 1 9 1 43 2 271 5 185 1 125 1 48 1 190 1 156 1 198 4 241 1 93 1 95 1 287 2 131 2 247 1 133 1 207 2 210 1 254 1 173 1 63 1 
1 6 33 1 180 1 37 20 38 2 261 2 260 1 74 1 223 1 41 3 266 2 9 1 225 1 150 1 43 2 185 1 271 9 236 1 48 2 190 2 156 2 198 11 95 1 93 3 287 3 131 3 133 1 26 1 207 3 210 1 254 2 173 2 63 2 294 1 
1 4 33 1 180 1 37 9 261 2 223 1 41 2 266 1 9 1 43 2 271 5 185 1 125 1 48 1 190 1 156 1 198 4 241 1 93 1 95 1 287 2 131 2 133 1 26 1 207 2 210 1 254 1 173 1 63 1 
1 4 33 1 180 1 37 9 261 2 223 1 41 2 266 1 9 1 43 2 271 5 185 1 125 1 48 1 190 1 156 1 198 4 241 1 93 1 95 1 287 2 131 2 133 1 26 1 207 2 210 1 254 1 173 1 63 1 
1 4 33 1 180 7 71 1 37 46 38 1 260 1 261 12 74 1 223 1 41 2 42 1 266 6 9 6 225 1 150 1 13 1 43 4 271 22 185 6 82 1 236 1 48 2 190 6 156 7 197 1 240 2 198 24 241 2 93 3 95 6 287 2 131 2 133 1 26 1 207 2 208 1 210 1 254 4 173 1 63 1 294 1 
1 2 101 1 68 1 2 2 35 2 221 1 70 2 259 1 37 2 41 1 77 2 44 1 230 1 271 1 83 2 153 1 155 1 88 1 198 1 163 1 287 1 131 1 207 1 27 1 57 1 168 1 170 1 250 2 140 1 214 1 65 2 
50 1 90 1 221 1 70 1 244 1 111 1 113 1 27 1 77 1 44 1 140 1 60 1 253 1 65 1 
50 1 69 1 196 1 104 1 70 1 221 1 108 1 111 1 206 1 137 1 27 1 77 1 288 1 28 1 78 2 291 1 65 1 66 1 
50 1 69 1 196 1 104 1 221 1 70 2 108 1 40 1 111 1 206 1 137 1 27 1 77 2 288 1 28 1 78 2 291 1 65 2 66 1 
50 1 69 1 196 1 104 1 70 1 105 1 221 1 108 1 206 1 77 1 288 1 27 1 28 1 78 2 291 1 65 1 66 1 
122 1 
32 1 103 1 182 1 130 1 72 1 165 1 245 1 112 1 115 1 119 1 
47 1 190 2 156 2 32 5 162 10 5 5 180 2 164 2 165 5 134 5 25 1 266 2 115 5 9 2 138 5 
115 1 144 1 252 1 171 1 91 1 245 1 
178 1 32 2 181 1 144 2 221 1 182 2 70 4 72 1 262 2 148 2 77 4 44 1 119 2 270 2 124 1 278 1 90 2 130 2 91 4 52 1 165 2 27 1 252 3 140 1 171 3 60 1 253 1 256 1 65 4 
115 1 32 1 103 1 19 1 165 1 245 1 112 1 
77 1 239 1 4 1 212 1 90 1 70 1 94 1 292 1 65 1 
32 2 162 4 5 2 182 1 130 1 72 1 262 1 165 1 245 2 134 2 115 4 119 1 270 1 138 2 82 1 
32 1 162 1 143 1 144 1 199 1 182 1 130 1 242 1 91 1 72 1 165 1 245 1 115 2 119 1 252 1 138 1 171 1 
5 6 144 3 221 3 70 3 72 4 148 1 9 2 77 3 228 2 232 1 86 1 156 2 18 3 162 12 89 2 90 1 91 5 243 2 164 2 165 9 245 2 25 2 27 4 169 3 252 5 171 5 256 1 176 2 32 8 103 1 180 2 182 4 262 2 40 1 112 1 183 1 115 8 266 2 268 2 44 10 119 4 118 1 270 1 45 2 277 2 190 2 47 2 130 4 56 2 134 6 138 6 140 3 65 3 217 2 
32 5 5 5 144 1 180 2 182 2 72 2 262 1 260 1 74 1 115 5 266 2 9 2 225 1 43 1 119 2 270 1 236 1 47 1 48 1 190 2 156 2 162 6 200 1 130 2 91 1 164 2 165 8 245 2 134 5 252 1 138 3 171 1 139 1 254 1 294 1 
156 1 32 1 239 1 4 1 180 1 197 1 182 1 130 1 71 1 72 1 165 2 164 2 147 1 114 1 42 1 119 1 252 1 171 1 292 1 187 1 174 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
34 1 109 1 
281 1 22 1 
1 2 156 2 197 2 198 5 180 2 95 3 37 10 71 1 261 5 287 1 147 1 131 1 223 1 41 1 207 1 42 2 185 2 271 5 
1 2 190 1 156 1 198 2 37 2 261 1 287 1 223 1 131 1 41 1 207 1 185 1 
1 2 190 1 156 1 180 1 198 2 95 1 37 4 261 2 287 1 223 1 131 1 41 1 9 1 207 1 266 1 271 2 185 1 
1 6 160 1 197 1 198 1 37 3 95 1 38 1 261 2 287 3 223 1 131 3 41 3 207 3 42 1 271 2 185 1 125 1 
156 2 190 2 1 6 48 1 67 1 180 1 198 7 37 11 261 1 287 3 265 1 223 1 131 3 41 3 9 1 266 2 207 3 267 1 43 2 185 1 271 4 254 3 154 1 125 1 
1 2 180 1 37 8 71 1 261 2 223 1 41 1 42 1 43 1 13 1 271 4 82 1 236 1 156 1 48 1 198 4 197 1 95 2 287 1 131 1 207 1 208 1 254 1 
1 4 180 1 71 1 37 11 261 3 223 1 41 2 42 1 266 1 267 1 13 1 43 2 271 5 185 1 82 1 236 1 48 1 190 1 156 2 197 1 198 6 241 1 95 2 287 2 131 2 207 2 208 1 254 1 
1 6 180 3 71 1 37 19 38 1 260 1 261 4 223 1 74 1 41 3 42 1 266 2 9 2 267 1 225 1 13 1 43 1 185 1 271 10 82 1 236 1 48 1 190 2 156 3 197 1 198 9 95 3 287 3 131 3 207 3 208 1 254 1 294 1 
1 6 180 2 71 1 37 17 38 1 260 1 261 5 223 1 74 1 41 3 42 1 266 2 9 1 267 1 225 1 13 1 43 1 185 2 271 7 82 1 236 1 48 1 190 2 156 3 197 1 198 10 95 3 287 3 131 3 207 3 208 1 254 1 294 1 
1 2 180 1 37 8 71 1 261 2 223 1 41 1 42 1 43 1 13 1 271 4 82 1 236 1 156 1 48 1 198 4 197 1 95 2 287 1 131 1 207 1 208 1 254 1 
1 2 180 2 37 12 260 1 261 2 223 1 74 1 41 1 266 2 9 2 225 1 43 1 185 1 271 6 236 1 48 1 190 2 156 2 198 6 95 1 287 1 131 1 207 1 254 1 294 1 
1 8 180 2 71 1 37 18 38 2 260 1 261 5 74 1 223 1 41 4 42 1 266 2 9 1 267 1 225 1 13 1 43 1 185 2 271 8 82 1 236 1 48 1 190 2 156 3 197 1 198 10 95 3 287 4 131 4 207 4 208 1 254 1 294 1 
1 8 180 2 37 16 38 2 260 1 261 6 74 1 223 1 41 4 266 3 9 2 225 1 43 1 185 3 271 7 236 1 125 1 48 1 190 3 156 3 198 9 95 3 287 4 131 4 207 4 254 1 294 1 
156 1 180 1 197 3 198 3 37 7 95 3 71 1 261 6 42 3 208 1 13 2 271 4 185 3 
1 8 180 2 71 1 37 18 38 2 260 1 261 4 74 1 223 1 41 4 42 1 266 2 9 1 225 1 13 1 43 1 185 1 271 8 82 1 236 1 125 1 48 1 190 2 156 3 197 1 198 10 95 3 287 4 131 4 207 4 208 1 254 1 294 1 
156 1 1 4 180 1 198 4 197 1 71 1 37 8 95 2 38 1 261 3 287 2 131 2 41 2 207 2 42 1 208 1 13 1 271 4 185 1 82 1 
156 1 42 1 208 1 19 1 13 1 180 1 198 3 197 1 271 3 37 6 71 1 95 2 82 1 261 2 
1 2 190 1 156 1 180 1 198 2 95 1 37 4 261 2 287 1 131 1 41 1 9 1 207 1 266 1 267 1 271 2 185 1 
48 1 190 1 156 1 180 1 198 3 241 1 95 1 37 7 261 2 9 1 266 1 43 2 271 4 185 1 254 1 
1 4 180 3 71 1 37 23 38 2 261 9 41 2 42 2 266 2 9 2 13 1 43 2 185 4 271 12 82 1 156 3 190 2 160 1 197 2 241 1 198 11 240 1 95 5 287 2 131 2 207 2 208 1 254 2 64 1 
43 1 271 1 37 1 
198 1 37 1 254 1 
1 2 190 1 156 1 198 3 180 1 37 6 95 2 261 3 287 1 131 1 41 1 25 1 207 1 266 1 9 1 267 1 271 3 185 1 
1 2 180 2 37 12 260 1 261 2 223 1 74 1 41 1 266 2 9 2 225 1 43 1 185 1 271 6 236 1 48 1 190 2 156 2 198 6 95 1 287 1 131 1 207 1 254 1 294 1 
156 1 198 3 180 1 197 1 71 1 37 6 95 1 261 2 42 1 271 3 185 1 
1 2 160 1 198 1 197 1 95 1 37 3 38 1 261 2 287 1 131 1 41 1 42 1 207 1 208 1 13 1 185 1 271 2 
2 1 157 1 20 1 35 1 83 1 16 1 55 1 
157 1 2 1 179 1 20 1 35 1 98 1 55 1 289 1 116 1 209 1 16 1 83 1 
3 1 90 1 70 4 221 1 40 1 203 1 27 1 77 4 44 1 140 1 60 1 253 1 65 4 
177 1 18 1 128 1 220 1 70 2 221 1 148 1 77 2 27 2 44 1 140 1 275 1 65 2 216 1 
27 1 77 1 78 1 196 1 104 1 90 1 221 1 70 1 65 1 66 1 
70 2 221 1 40 1 108 1 77 2 27 1 44 1 140 1 214 1 153 1 65 2 
90 1 70 5 221 2 40 1 203 1 148 1 24 1 77 4 27 2 44 3 140 2 272 1 253 1 60 1 153 1 65 5 
90 1 258 1 70 5 221 2 40 1 203 1 148 1 77 4 27 2 44 3 140 2 272 1 253 1 60 1 153 1 65 5 
27 1 77 1 19 1 44 1 90 1 221 1 70 1 140 1 253 1 60 1 65 1 
18 1 239 1 21 1 90 1 70 1 221 1 77 1 27 1 44 1 140 1 274 1 65 1 30 1 
100 1 18 1 128 1 70 1 221 1 148 1 183 1 77 1 27 2 44 1 140 1 275 1 65 1 
176 1 32 1 103 1 144 1 182 2 70 1 72 2 112 1 115 1 77 1 119 2 228 1 44 2 277 1 89 1 90 1 130 2 91 2 243 1 165 1 245 1 56 1 136 1 169 1 252 3 171 3 256 1 65 1 
18 1 70 2 221 1 243 1 97 1 40 1 183 1 77 2 27 2 44 2 140 1 232 1 65 2 
18 1 239 1 21 1 284 1 90 1 70 1 221 1 77 1 27 1 44 1 140 1 274 1 65 1 
18 1 239 1 21 1 284 1 70 1 221 1 148 1 77 1 27 1 44 1 140 1 274 1 65 1 
18 1 239 1 21 1 70 1 221 1 148 1 77 1 27 1 44 1 140 1 274 1 65 1 30 1 
176 1 142 1 158 1 18 1 3 1 90 1 70 3 221 1 91 1 243 1 245 1 148 1 115 1 268 1 27 1 77 3 169 1 44 4 252 2 140 1 171 2 65 3 217 1 
176 1 18 1 3 1 90 1 70 3 221 1 91 1 243 1 245 1 148 1 115 1 268 1 27 1 77 3 169 1 44 4 252 2 140 1 171 2 65 3 217 1 277 1 
27 1 77 1 221 1 70 1 97 1 65 1 
100 1 18 1 128 1 90 2 70 7 221 2 97 1 108 1 40 1 6 1 24 1 183 1 77 6 27 3 44 3 250 1 272 1 140 2 153 1 275 1 65 7 
239 1 21 1 
127 1 129 1 79 1 189 1 
280 1 282 1 136 1 127 1 129 1 79 1 252 1 171 1 61 1 189 1 
2 1 88 1 129 1 35 1 163 1 168 1 79 1 83 1 189 1 
282 1 129 1 61 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (157,287,319) (157,287,319) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (25,251) (70,262) (70,262) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 357 64 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 286 322 85 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (25,251) (25,251) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 357 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (25,251) (70,262) (70,262) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (25,251) (70,262) (70,262) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (25,251) (70,262) (70,262) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 324 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 324 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 357 64 263 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 324 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 89 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 351 129 289 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 1 240 1 353 1 205 1 216 1 115 1 
341 1 240 1 353 1 205 1 216 1 115 1 
341 1 240 1 353 1 205 1 216 1 115 1 
341 1 240 1 353 1 205 1 216 1 115 1 
66 1 309 3 183 2 325 1 124 1 212 1 60 1 141 1 216 1 291 1 18 1 62 3 264 2 43 1 240 4 205 1 353 4 115 1 
309 1 66 1 35 1 361 1 216 1 223 1 291 1 18 1 344 1 53 1 240 2 43 1 205 1 353 2 103 1 115 1 
309 2 325 1 35 1 216 2 291 1 18 1 224 1 62 1 264 1 240 3 205 1 353 3 115 2 
66 1 232 1 183 2 325 3 212 1 141 1 27 1 216 2 99 1 240 9 31 1 353 9 309 5 124 1 35 1 60 1 291 1 18 1 224 1 62 7 264 4 43 1 205 1 115 2 
66 1 232 1 183 2 325 3 212 1 141 1 27 1 216 2 99 1 240 9 31 1 353 9 309 5 124 1 35 1 60 1 291 1 18 1 224 1 62 7 264 4 43 1 205 1 115 2 
44 1 305 1 364 1 
286 2 279 1 364 1 
298 2 162 1 150 1 107 2 139 2 159 2 195 2 229 2 
272 2 298 3 162 1 24 1 68 1 326 1 139 2 6 1 187 1 278 1 55 2 29 1 76 1 75 1 241 1 13 1 14 1 150 1 310 1 57 2 107 2 125 2 338 1 195 3 288 1 197 1 108 1 198 1 292 1 90 1 266 1 159 2 227 2 229 2 135 1 97 1 208 1 
298 1 162 1 107 1 225 1 139 1 159 1 185 1 236 1 195 1 229 1 
298 1 139 1 195 1 236 1 364 1 331 1 367 1 93 1 44 1 334 1 281 1 179 1 134 1 105 1 
298 1 107 1 139 1 195 1 236 1 364 1 367 2 44 1 159 1 334 1 281 2 229 1 179 1 134 1 105 1 
188 1 82 1 367 1 281 1 161 1 
188 1 317 1 367 2 101 1 44 1 281 2 364 1 161 1 
188 1 367 1 281 1 
162 1 298 1 107 1 139 1 185 1 236 1 195 1 61 1 367 1 225 1 159 1 281 1 229 1 161 1 
364 1 
188 1 317 1 367 2 44 1 281 2 312 1 364 1 161 1 
231 1 34 2 155 1 364 1 158 1 71 1 343 1 189 2 314 1 188 2 265 1 317 1 367 5 112 1 239 2 268 1 44 1 294 1 281 5 160 1 23 1 161 2 
272 1 298 2 24 1 107 1 326 1 139 1 288 1 195 2 6 1 197 1 142 1 90 1 29 1 345 1 55 1 159 1 241 1 132 1 227 1 14 1 
150 1 305 1 
298 2 150 1 107 1 139 2 164 1 236 1 195 2 254 1 159 1 229 1 65 1 
318 1 33 1 142 1 
272 1 298 1 24 1 150 1 326 1 195 1 288 1 6 1 197 1 90 1 55 1 29 1 241 1 227 1 173 1 14 1 
298 3 150 1 107 3 139 3 159 3 132 1 195 3 229 1 
298 1 107 1 225 1 139 1 159 1 236 1 195 1 
298 1 107 1 164 1 139 1 195 1 236 1 159 1 229 1 65 1 
272 1 24 1 298 4 162 1 68 1 326 1 164 1 139 3 140 1 236 1 6 1 187 1 29 1 55 1 76 1 241 1 334 1 281 1 13 1 14 1 105 1 121 1 150 1 310 1 57 1 107 3 125 2 338 1 288 1 195 4 197 1 108 1 292 1 90 1 367 1 266 1 345 1 159 3 132 1 227 1 179 1 229 2 134 1 97 1 
331 1 298 2 150 1 107 1 139 2 159 1 132 1 195 2 167 1 
298 3 107 3 164 1 139 3 236 1 195 3 140 1 364 1 367 1 345 1 267 1 159 3 132 2 334 1 281 1 229 1 179 1 134 1 105 1 
298 2 107 2 318 1 139 2 159 2 164 1 132 1 195 2 229 1 142 1 
272 1 298 1 24 1 150 1 326 1 195 1 288 1 6 1 197 1 90 1 55 1 29 1 241 1 227 1 14 1 
272 1 298 1 15 1 150 1 195 1 288 1 5 1 6 1 197 1 90 1 55 1 29 1 241 1 227 1 14 1 
275 1 68 1 211 1 98 1 142 2 76 2 13 1 282 1 310 1 57 4 125 2 33 2 126 1 260 1 108 1 198 2 313 1 199 1 292 1 130 1 91 1 318 2 271 1 97 1 
297 1 298 1 107 1 139 1 159 1 236 1 334 1 195 1 
298 5 150 1 106 1 107 4 139 5 164 1 195 5 167 1 7 1 331 1 345 1 159 4 132 2 229 1 
297 1 298 2 107 2 225 1 139 2 159 2 236 1 195 2 
38 1 319 1 
38 1 319 1 
287 1 196 1 
287 1 196 1 
287 1 196 1 
38 1 319 1 180 1 
38 2 287 1 319 2 196 1 
38 1 319 1 157 1 
38 1 319 1 180 1 
38 1 319 1 180 1 
38 1 337 1 319 1 
38 1 337 1 319 1 
38 1 337 1 319 1 
47 1 32 2 25 1 335 2 70 1 364 1 262 1 217 2 218 2 255 1 367 2 145 2 131 1 281 2 
47 1 298 1 32 1 357 1 222 1 335 1 107 1 139 1 195 1 217 1 290 1 218 1 301 1 367 1 145 1 159 1 64 1 281 1 
66 1 43 1 124 1 
66 1 344 1 43 1 
109 1 344 1 238 1 124 2 43 3 3 1 
344 1 238 1 124 1 171 1 43 2 3 1 
344 1 238 2 124 1 43 2 3 1 
116 1 233 1 98 1 168 2 51 1 328 1 301 1 189 1 188 1 100 3 279 1 239 1 79 1 257 2 281 5 283 2 286 3 222 1 126 1 34 1 36 1 155 2 364 2 290 1 313 1 19 1 130 1 343 1 317 1 367 5 44 1 161 4 
209 1 181 1 233 2 98 3 168 6 51 3 188 6 189 2 100 8 279 3 239 2 257 6 281 9 355 1 245 1 286 9 222 4 82 5 126 3 34 2 36 1 155 6 261 5 364 5 313 3 19 2 130 3 343 1 39 1 367 9 317 1 113 1 294 1 44 1 161 7 
298 1 162 1 116 1 233 1 139 1 185 1 236 1 98 1 51 1 168 2 328 1 189 1 100 3 279 2 239 1 257 2 281 3 283 1 222 1 286 4 107 1 34 1 126 1 195 1 61 1 155 2 364 3 313 1 19 1 130 1 367 3 225 1 159 1 44 1 294 1 229 1 161 2 
116 1 233 1 98 1 168 2 51 1 328 1 189 1 100 3 279 2 239 1 257 2 281 2 283 1 245 1 286 4 222 1 34 1 126 1 155 2 364 2 313 1 19 1 130 1 367 2 294 1 161 1 
90 1 122 1 305 1 
90 1 21 1 
348 1 
90 1 197 1 
90 3 122 2 175 1 6 1 197 1 87 1 
90 1 6 1 197 1 
90 1 45 1 
182 1 57 7 339 2 165 1 84 1 260 3 166 1 98 1 198 4 313 1 71 1 91 2 144 1 76 3 307 1 160 1 206 1 
182 1 57 7 339 2 165 1 84 1 260 3 166 1 98 1 198 4 313 1 71 1 91 2 144 1 76 3 307 1 160 1 206 1 
182 1 57 7 137 1 339 2 165 1 84 1 260 3 166 1 98 1 198 4 313 1 71 1 91 2 144 1 76 3 307 1 160 1 206 1 
67 1 68 1 182 2 213 1 165 1 166 1 186 1 351 3 98 4 51 3 71 2 144 2 76 15 307 5 149 4 310 1 57 31 59 1 125 2 126 3 84 1 339 3 260 10 108 1 198 16 313 4 129 1 130 3 91 5 269 1 160 2 206 1 136 1 97 1 
68 2 310 2 59 1 182 1 57 9 125 4 194 1 84 1 339 2 260 4 166 1 98 1 108 2 198 5 313 1 71 1 91 3 144 1 76 4 280 1 307 1 160 1 206 1 97 2 
66 1 272 1 50 1 253 1 216 1 169 1 55 1 302 1 256 1 240 2 80 1 353 2 193 1 14 1 309 1 285 1 124 1 35 1 288 1 291 1 18 1 62 1 344 1 109 1 43 2 249 1 227 1 228 1 205 1 115 1 
66 1 272 1 50 1 216 1 55 1 302 1 256 1 240 3 80 1 353 3 193 1 14 1 309 1 285 1 124 1 336 1 35 1 288 1 291 1 18 1 62 2 109 1 293 1 344 1 43 2 249 1 227 1 228 1 96 1 115 1 
272 1 66 1 50 1 55 1 256 1 240 2 80 1 353 2 14 1 309 1 285 1 336 1 124 1 35 1 288 1 291 1 18 1 62 2 293 1 344 1 109 1 43 2 249 1 227 1 228 1 
272 1 50 2 35 2 288 1 197 1 216 1 128 1 329 1 9 1 90 1 92 1 55 1 63 1 240 1 241 1 249 2 227 1 353 1 228 2 321 1 96 1 115 1 14 1 
66 1 272 1 50 1 253 1 216 1 55 1 302 1 256 1 240 1 80 1 353 1 193 1 14 1 285 1 124 1 336 1 35 1 288 1 344 1 109 1 43 2 249 1 227 1 228 1 205 1 115 1 
332 1 
272 2 48 2 322 1 274 1 233 1 235 2 139 1 236 1 329 1 190 2 188 6 189 1 331 1 52 1 100 2 55 2 146 2 279 2 239 1 241 2 334 1 281 5 14 1 105 1 286 2 16 1 288 1 195 1 197 1 155 2 200 1 343 1 346 1 298 1 304 2 356 1 123 1 83 4 34 1 364 2 363 1 90 1 92 1 317 3 367 5 42 1 93 1 44 1 133 2 227 2 368 2 179 1 320 1 134 1 370 1 
298 1 16 1 123 1 83 2 235 1 139 1 236 1 195 1 312 1 200 1 188 2 52 1 331 1 317 1 367 3 93 1 334 1 281 3 179 1 134 1 105 1 370 1 
298 1 139 1 236 1 188 1 331 1 52 1 334 1 281 3 105 1 16 1 123 1 83 3 195 1 312 1 364 1 200 1 367 3 317 1 93 1 44 1 368 1 179 1 134 1 370 1 
298 1 139 1 235 1 236 1 331 1 52 1 190 1 188 2 334 1 281 3 105 1 16 1 123 1 83 3 195 1 312 1 364 1 200 1 317 1 367 3 93 1 44 1 368 1 179 1 134 1 370 1 
322 1 48 1 235 3 139 2 185 1 236 2 8 1 190 3 52 1 188 5 331 1 189 1 100 1 239 1 279 1 146 1 334 1 281 4 105 1 16 1 107 1 58 1 195 2 61 1 155 1 200 1 343 1 159 1 346 1 162 1 298 2 304 1 123 1 311 1 83 3 34 1 85 1 312 1 364 1 367 4 317 2 93 1 225 1 226 1 44 1 133 1 368 1 229 1 179 1 134 1 370 1 
322 1 48 2 139 1 235 2 236 1 52 1 331 1 189 1 188 4 190 2 100 1 239 1 279 2 146 2 334 1 281 4 105 1 16 1 286 2 195 1 155 1 200 1 343 1 346 1 298 1 304 2 123 1 83 4 34 1 364 2 367 4 317 2 93 1 42 1 44 1 133 2 368 2 179 1 134 1 370 1 
322 1 48 1 139 2 235 1 185 1 236 2 52 1 331 1 189 1 188 2 190 1 100 1 239 1 279 1 146 1 334 1 281 3 105 1 16 1 107 1 58 1 195 2 61 1 155 1 200 1 343 1 159 1 346 1 162 1 298 2 304 1 123 1 83 3 34 1 85 1 364 1 367 3 317 1 93 1 225 1 226 1 44 1 133 1 368 1 229 1 179 1 134 1 370 1 
322 1 48 1 139 2 235 1 185 1 236 2 52 1 331 1 189 1 188 2 190 1 100 1 239 1 279 1 146 1 334 1 281 3 105 1 16 1 107 1 58 1 195 2 61 1 155 1 200 1 343 1 159 1 346 1 162 1 298 2 304 1 123 1 83 3 34 1 85 1 364 1 367 3 317 1 93 1 225 1 226 1 44 1 133 1 368 1 229 1 179 1 134 1 370 1 
322 1 298 1 349 1 139 1 184 1 236 1 189 1 331 1 52 1 100 1 333 1 239 1 304 1 334 1 281 2 105 1 286 1 16 1 123 1 83 2 34 1 85 1 195 1 155 1 200 1 343 1 41 1 367 2 93 1 133 1 179 1 134 1 370 1 
322 1 48 1 235 2 139 2 185 1 236 2 8 1 188 3 190 2 52 1 331 1 189 1 100 1 239 1 279 1 146 1 334 1 281 3 105 1 16 1 107 1 58 1 195 2 61 1 155 1 200 1 343 1 159 1 346 1 162 1 298 2 304 1 123 1 83 4 34 1 85 1 364 1 367 3 317 1 93 1 225 1 226 1 44 1 133 1 368 2 229 1 179 1 134 1 370 1 
322 1 48 1 235 2 139 2 185 1 236 2 8 1 188 3 190 2 52 1 331 1 189 1 100 1 239 1 279 1 146 1 334 1 281 3 105 1 16 1 107 1 58 1 195 2 61 1 155 1 200 1 343 1 159 1 346 1 162 1 298 2 304 1 123 1 83 4 34 1 85 1 364 1 367 3 317 1 93 1 225 1 226 1 44 1 133 1 368 2 229 1 179 1 134 1 370 1 
322 1 139 1 235 2 236 1 52 1 331 1 189 1 188 4 190 2 100 1 239 1 334 1 281 4 105 1 16 1 286 2 195 1 155 1 200 1 343 1 203 2 298 1 349 2 304 2 123 1 83 4 34 1 364 1 41 1 367 4 317 2 93 1 42 1 44 1 133 2 368 2 179 1 134 1 370 1 
68 1 166 1 98 1 142 1 71 1 76 3 305 1 13 1 150 2 310 1 57 6 125 2 33 1 84 1 339 1 260 2 108 1 198 3 199 1 313 1 292 1 91 2 318 1 160 1 206 1 97 1 
68 2 351 3 186 1 98 1 51 2 142 11 278 1 76 6 306 1 307 1 56 1 13 1 149 3 150 1 151 1 310 2 57 14 125 4 33 11 126 2 260 2 108 2 198 8 313 2 129 1 292 2 201 1 315 1 130 1 91 1 266 1 318 4 97 2 
272 1 24 1 298 2 68 1 326 1 299 1 139 1 6 1 278 1 29 1 55 1 73 1 76 1 241 1 173 1 13 1 14 1 150 1 310 1 107 1 57 2 125 2 288 1 195 2 197 1 108 1 198 1 292 1 90 1 315 1 345 1 266 1 318 1 159 1 227 1 132 1 270 1 97 1 
272 3 273 1 326 2 139 1 6 2 98 3 51 2 142 7 278 1 55 3 148 1 241 1 13 3 192 2 14 2 150 2 107 1 57 20 336 1 338 2 339 1 195 3 288 2 340 2 197 2 108 3 198 10 292 3 345 1 159 1 160 1 206 1 207 2 298 3 24 2 68 3 166 1 71 1 29 2 76 10 172 1 307 4 310 3 125 6 33 7 126 2 84 1 260 8 176 2 313 3 315 1 90 2 130 2 91 4 266 1 318 7 227 3 132 1 97 3 
272 7 298 1 68 2 117 1 139 1 219 1 329 1 278 1 169 1 55 8 76 1 241 2 13 2 81 1 14 2 310 2 107 1 57 2 336 1 125 4 174 1 195 1 288 2 197 2 127 1 108 2 177 1 198 1 199 1 342 1 292 2 90 3 92 1 266 1 159 1 132 1 227 8 135 2 97 2 
298 1 68 1 164 1 139 1 98 1 51 1 142 1 76 2 13 1 310 1 107 1 57 3 125 2 33 1 126 1 195 1 260 1 108 1 198 1 313 1 292 1 315 1 130 1 91 1 111 1 318 1 159 1 229 1 97 1 
68 1 310 1 57 2 125 2 33 1 126 1 260 1 108 1 198 2 142 1 199 1 313 1 292 1 318 1 307 1 13 1 282 1 97 1 
68 1 310 1 57 2 125 2 33 1 260 1 98 1 108 1 142 1 199 1 292 1 130 1 91 1 76 2 318 1 271 1 13 1 97 1 
68 1 310 1 57 4 125 2 33 2 126 1 260 2 98 1 108 1 51 1 198 2 142 2 199 1 313 1 292 1 130 1 91 1 76 2 318 2 307 1 13 1 97 1 
68 1 310 1 57 2 125 2 33 1 126 1 260 1 108 1 198 2 142 1 313 1 219 1 292 1 318 1 307 1 13 1 282 1 97 1 
68 1 310 1 57 2 125 2 33 1 260 1 98 1 108 1 142 1 219 1 292 1 130 1 91 1 76 2 318 1 271 1 13 1 97 1 
68 1 310 1 57 4 125 2 33 2 126 1 260 2 98 1 108 1 51 1 198 2 142 2 313 1 219 1 292 1 130 1 91 1 76 2 318 2 307 1 13 1 97 1 
68 1 310 1 57 4 125 2 33 2 126 1 260 2 98 1 108 1 51 1 198 2 142 2 313 1 292 1 130 1 91 1 76 2 318 2 307 1 13 1 97 1 
272 1 24 1 298 1 68 1 326 1 6 1 278 1 29 1 55 1 76 1 241 1 13 1 14 1 150 1 310 1 57 2 125 2 338 1 288 1 195 1 197 1 108 1 198 1 292 1 90 1 266 1 227 1 97 1 
272 1 298 1 68 1 6 1 5 1 278 1 29 1 55 1 76 1 241 1 13 1 14 1 15 1 150 1 358 1 310 1 57 2 125 2 288 1 195 1 197 1 108 1 198 1 292 1 90 1 266 1 227 1 97 1 
68 1 310 1 57 4 125 2 33 2 126 1 260 2 98 1 108 1 51 1 198 2 142 2 313 1 292 1 130 1 315 1 91 1 76 2 318 2 307 1 13 1 97 1 
272 1 24 1 298 1 68 1 326 1 6 1 98 1 51 1 142 2 169 1 29 1 55 1 76 2 307 1 13 1 14 1 310 1 57 4 125 2 33 2 126 1 338 1 288 1 195 1 260 2 176 1 197 1 108 1 198 2 313 1 292 1 130 1 90 1 91 1 318 2 227 1 97 1 
298 1 68 1 164 1 139 1 98 1 51 1 142 1 76 1 118 1 307 1 13 1 310 1 107 1 57 3 125 2 126 1 33 1 195 1 260 1 108 1 198 2 313 1 292 1 130 1 315 1 318 1 159 1 229 1 97 1 
1 1 98 5 186 1 51 4 143 1 280 1 12 1 242 1 149 4 57 41 59 1 339 1 246 1 108 3 289 1 198 20 248 4 347 1 160 1 250 1 296 1 206 1 68 3 166 1 351 3 71 1 76 21 307 4 354 1 310 3 125 6 359 1 126 4 84 1 260 8 88 1 313 5 129 3 130 4 91 4 95 2 369 1 97 3 
1 1 68 4 166 1 351 3 186 1 98 4 51 4 143 1 71 1 280 1 76 18 12 1 242 1 307 3 354 1 149 4 310 4 59 2 57 38 359 1 125 8 126 4 339 1 84 1 246 1 260 7 289 1 108 4 88 1 198 20 313 5 129 3 248 4 130 3 91 4 347 1 369 1 95 2 250 1 160 1 296 1 206 1 97 4 
1 1 68 2 166 1 351 4 186 2 98 8 51 7 143 1 71 1 280 1 76 25 306 2 12 1 242 1 307 7 354 1 149 4 310 2 59 1 57 52 359 1 125 4 126 7 339 1 84 1 246 1 260 14 289 1 108 2 88 1 198 27 313 8 129 2 248 4 130 7 91 7 347 1 95 1 160 1 296 1 206 1 97 2 
68 2 252 1 351 1 186 1 98 3 51 3 143 1 280 1 76 10 12 1 307 3 354 1 149 2 310 2 57 19 125 4 126 3 246 1 260 6 108 2 198 9 313 3 129 1 248 2 130 3 91 3 347 2 369 1 95 1 97 2 
1 1 68 3 98 2 351 2 51 3 143 1 76 12 280 1 12 2 307 2 242 1 354 1 149 2 310 3 59 2 57 26 359 1 125 6 126 3 246 1 260 4 108 3 289 1 198 14 88 1 313 3 129 2 248 4 130 2 91 2 347 1 95 2 296 1 97 3 
218 1 32 1 25 1 145 1 217 1 251 1 
357 1 
218 1 32 1 145 1 78 1 217 1 
47 1 32 1 25 1 335 2 70 1 364 1 262 1 217 1 218 1 255 1 367 1 145 1 131 1 281 1 
47 1 32 1 25 1 335 2 70 1 364 1 262 1 217 1 218 1 255 1 367 1 145 1 131 1 281 1 
47 1 32 1 25 1 335 2 70 1 364 1 262 1 217 1 218 1 255 1 367 1 145 1 131 1 281 1 
17 1 
17 1 
324 1 
324 1 
120 1 30 1 
32 1 357 1 222 1 335 1 217 1 263 1 290 1 218 1 301 1 255 1 367 1 145 1 131 1 281 1 64 1 161 1 
17 1 
324 1 
272 2 298 2 68 1 117 1 139 2 278 1 55 2 76 1 303 1 119 1 13 1 244 1 81 1 14 1 310 1 57 2 125 2 288 1 195 2 197 1 108 1 198 1 292 1 90 1 315 1 316 1 266 1 227 2 135 2 97 1 230 1 
66 1 272 2 124 1 336 1 50 1 234 1 288 1 109 1 344 1 169 1 55 2 256 1 43 2 227 2 80 1 220 1 221 1 193 1 14 1 
66 1 272 1 124 1 336 1 50 1 234 1 86 1 288 1 109 1 344 1 55 1 256 1 43 2 227 1 80 1 193 1 14 1 
272 1 50 1 288 1 197 1 37 1 329 1 90 1 92 1 55 1 63 1 241 1 227 1 220 1 14 1 
66 1 272 1 124 1 336 1 50 1 234 1 288 1 109 1 344 1 55 1 256 1 43 2 227 1 80 1 220 1 221 1 193 1 14 1 
330 1 
100 1 265 1 44 1 305 1 155 1 23 1 364 1 
48 1 189 1 188 1 100 1 279 1 239 1 146 1 281 1 286 1 34 1 155 1 364 2 343 1 317 1 367 1 346 1 44 1 
272 1 34 1 175 1 288 1 6 1 197 1 89 1 90 2 343 1 189 1 21 1 55 1 239 1 241 1 227 1 114 1 14 2 
286 2 34 1 155 1 351 1 364 1 289 1 168 1 129 1 343 1 189 1 100 1 279 1 239 1 257 1 149 1 
231 1 58 1 34 1 71 1 343 1 189 1 367 1 239 1 268 1 281 1 160 1 
34 1 155 1 364 1 343 1 189 1 100 1 265 1 239 1 44 1 23 1 
286 10 126 2 340 1 155 5 98 2 364 5 51 2 168 5 313 2 130 2 100 5 279 5 268 2 257 5 46 1 
188 1 367 1 317 1 44 1 281 1 364 1 
272 4 274 2 233 2 327 1 329 1 189 2 188 4 100 2 55 4 239 2 241 2 281 3 102 1 14 1 356 1 34 2 288 1 197 1 155 2 90 1 343 1 366 2 202 1 317 2 367 3 92 1 294 1 227 4 320 1 
272 1 298 3 162 1 24 1 68 1 326 1 139 2 6 1 187 1 55 1 29 1 76 1 241 1 13 1 14 1 150 1 310 1 57 1 107 2 125 2 338 1 195 3 288 1 197 1 108 1 292 1 90 1 266 1 159 2 227 1 229 2 97 1 
274 1 286 4 233 1 34 1 339 1 155 2 364 4 168 2 343 1 189 1 100 1 279 2 239 1 44 2 257 2 
32 1 69 1 217 1 
120 1 32 1 11 1 295 1 217 1 
32 1 69 1 217 1 
32 1 69 1 217 1 
32 1 4 1 217 1 
32 1 4 1 217 1 
32 1 4 1 217 1 
32 1 217 1 
38 1 319 1 
68 2 1 1 351 1 98 1 51 2 76 4 280 1 307 1 242 1 149 1 310 2 59 1 57 11 125 4 126 2 260 2 289 1 108 2 198 7 88 1 313 2 129 1 130 1 91 1 296 1 97 2 
1 1 68 3 351 1 186 1 98 1 51 3 76 5 280 1 242 1 307 2 149 2 308 1 310 3 59 1 57 14 125 6 126 3 260 3 289 1 108 3 198 9 88 1 313 3 129 1 130 1 91 1 296 1 97 3 
68 3 1 1 166 1 351 1 98 3 51 2 71 1 76 10 280 1 307 1 242 1 149 1 308 1 310 3 57 19 59 1 125 6 126 2 339 1 84 1 260 4 289 1 108 3 198 9 88 1 313 3 129 1 130 2 91 3 160 1 296 1 206 1 97 3 
68 3 1 1 166 1 351 1 98 2 51 2 71 1 76 7 280 1 307 2 242 1 149 1 308 1 310 3 59 1 57 17 125 6 126 2 339 1 84 1 260 5 289 1 108 3 198 10 88 1 313 3 129 1 130 1 91 3 160 1 296 1 206 1 97 3 
68 2 1 1 351 1 98 1 51 2 76 4 280 1 307 1 242 1 149 1 310 2 59 1 57 11 125 4 126 2 260 2 289 1 108 2 198 7 88 1 313 2 129 1 130 1 91 1 296 1 97 2 
68 1 1 1 351 1 98 2 51 2 76 6 280 1 307 1 242 1 149 1 310 1 57 12 125 2 126 2 260 2 289 1 108 1 198 6 88 1 313 2 129 1 130 2 91 1 296 1 97 1 
1 1 68 4 166 1 351 1 98 2 51 2 71 1 76 8 280 1 307 2 242 1 149 1 308 1 310 4 57 18 59 2 125 8 126 2 339 1 84 1 260 5 289 1 108 4 198 10 88 1 313 3 129 1 130 1 91 3 160 1 296 1 206 1 97 4 
1 1 68 4 351 1 98 2 51 3 76 7 280 1 307 3 242 1 149 1 310 4 57 16 59 2 125 8 126 3 260 6 289 1 108 4 198 9 88 1 313 3 129 1 130 2 91 3 369 1 296 1 97 4 
57 7 84 1 260 6 166 1 98 1 198 3 313 1 71 3 91 3 76 4 307 3 160 3 206 2 
1 1 68 4 166 1 351 1 98 2 51 2 71 1 76 8 280 1 307 1 242 1 149 1 310 4 57 18 59 2 125 8 126 2 339 1 84 1 260 4 289 1 108 4 198 10 88 1 313 3 129 1 130 1 91 3 369 1 160 1 296 1 206 1 97 4 
68 2 310 2 57 8 59 1 125 4 339 1 84 1 260 3 166 1 98 1 108 2 198 4 313 1 71 1 91 2 76 4 307 1 160 1 206 1 97 2 
57 6 339 1 84 1 260 2 166 1 98 1 198 3 313 1 71 1 91 2 76 3 305 1 160 1 206 1 
68 1 310 1 57 4 125 2 126 1 260 2 98 1 108 1 51 1 198 2 313 1 130 1 91 1 76 2 307 1 308 1 97 1 
57 7 126 1 260 2 98 1 351 1 186 1 198 3 51 1 313 1 129 1 130 1 91 1 76 4 307 1 149 2 
68 2 166 1 186 1 351 2 98 3 51 2 71 2 76 12 306 1 307 4 149 2 151 1 310 2 57 23 59 2 125 4 126 2 339 1 84 1 260 9 108 2 198 11 313 3 130 2 91 5 40 1 160 2 206 1 97 2 
57 1 76 1 149 1 
57 1 351 1 198 1 
310 1 68 1 57 6 125 2 126 1 340 1 260 3 98 1 108 1 51 1 198 3 313 1 130 1 91 2 76 3 307 1 308 1 97 1 
68 1 1 1 351 1 98 2 51 2 76 6 280 1 307 1 242 1 149 1 310 1 57 12 125 2 126 2 260 2 289 1 108 1 198 6 88 1 313 2 129 1 130 2 91 1 296 1 97 1 
57 6 260 2 166 1 98 1 198 3 313 1 71 1 91 1 76 3 307 1 160 1 
68 1 310 1 57 3 59 1 125 2 84 1 260 2 108 1 198 1 71 1 91 1 40 1 76 2 307 1 160 1 206 1 97 1 
71 1 231 1 91 1 260 1 160 1 
68 1 310 1 57 2 125 2 126 1 260 1 108 1 198 2 313 1 280 1 307 1 97 1 
68 1 310 1 57 4 125 2 126 1 260 2 98 1 108 1 51 1 198 2 313 1 130 1 91 1 76 2 280 1 307 1 97 1 
68 3 310 3 59 1 57 3 125 6 260 2 108 3 198 1 71 1 40 1 91 1 76 2 280 1 307 1 369 1 160 1 97 3 
68 5 213 1 166 2 351 3 186 1 98 5 51 3 71 3 76 18 280 1 307 5 149 4 308 1 310 5 59 2 57 34 125 10 126 3 339 1 84 1 260 12 108 5 198 16 313 5 129 1 130 3 40 1 91 7 269 1 369 1 160 3 206 1 136 1 97 5 
298 1 331 1 150 1 139 1 277 1 195 1 167 1 
298 1 150 1 300 1 277 1 139 1 360 1 195 1 350 1 26 1 167 1 331 1 147 1 
329 1 272 1 90 1 92 1 55 1 305 1 241 1 227 1 288 1 197 1 14 1 
272 1 298 2 150 1 107 1 326 1 139 1 195 2 288 1 6 1 197 1 90 1 29 1 55 1 159 1 241 1 132 1 227 1 14 1 
272 1 298 2 150 1 163 1 107 1 326 1 139 2 236 1 195 2 288 1 6 2 197 2 90 3 366 1 29 1 55 1 159 2 45 1 132 1 227 1 334 1 134 1 14 1 
272 2 298 2 15 1 150 1 163 1 107 1 139 2 236 1 195 2 288 1 6 2 197 2 90 3 366 1 54 1 29 1 55 2 159 2 45 1 132 1 227 2 334 1 134 1 14 1 
272 3 163 1 6 1 188 1 54 1 55 3 241 1 281 2 258 1 191 1 14 1 105 1 122 1 288 1 197 1 364 1 90 4 366 1 367 2 21 1 44 1 227 3 45 1 
272 1 298 1 162 1 138 1 139 1 185 1 236 1 188 1 55 1 281 2 105 1 107 1 195 1 61 1 364 1 90 1 366 1 367 2 21 1 225 1 44 1 159 1 227 1 229 1 
272 1 55 1 227 1 174 1 288 1 14 1 
272 1 154 1 175 1 288 1 6 1 197 1 156 1 90 1 55 1 241 1 178 1 227 1 14 2 
272 1 298 2 24 1 68 2 326 1 139 1 6 1 166 1 98 1 142 1 71 1 169 1 29 1 55 1 76 3 13 2 244 1 192 1 14 1 150 2 310 2 57 6 107 1 125 4 33 1 338 1 339 1 84 1 288 1 195 2 260 2 197 1 176 1 108 2 198 3 313 1 292 2 90 1 315 1 91 2 318 1 159 1 132 1 227 1 160 1 206 1 97 2 
231 1 272 1 138 1 237 1 71 1 189 2 188 2 55 1 239 2 241 1 281 3 105 1 34 2 155 1 364 1 365 1 247 1 343 2 90 1 265 1 202 1 367 3 317 1 21 1 268 1 44 1 227 1 160 1 23 1 161 1 
272 2 122 1 174 1 175 1 288 1 6 1 197 1 90 2 169 1 55 2 227 2 114 1 14 2 
272 4 288 1 197 1 329 1 90 1 54 1 169 1 92 1 55 4 10 1 241 1 227 4 14 1 
272 1 154 1 288 1 6 1 197 1 90 1 55 1 170 1 178 1 227 1 172 1 94 1 14 2 
66 1 272 1 344 1 256 1 55 1 43 1 241 1 227 1 288 1 14 1 
272 2 117 1 336 1 288 1 197 1 90 1 169 1 316 1 55 2 227 2 14 1 
272 4 117 1 288 2 197 2 177 1 329 1 342 1 90 3 366 1 92 1 169 1 55 5 10 1 241 1 227 5 14 2 
272 4 117 1 288 2 197 2 329 1 342 1 90 3 366 1 92 1 169 1 55 5 10 1 241 1 77 1 227 5 14 2 
272 1 298 2 15 1 150 1 107 1 139 1 195 2 288 1 6 1 197 1 90 1 29 1 55 1 159 1 241 1 132 1 227 1 14 1 
272 1 154 1 175 1 288 1 6 1 197 1 156 1 90 1 366 1 55 1 178 1 227 1 14 2 
150 1 20 1 210 1 323 1 243 1 
150 1 210 1 323 2 236 1 214 1 140 1 364 1 110 1 20 2 367 2 204 1 44 1 334 1 281 2 243 2 179 1 134 1 105 1 161 1 
298 1 210 1 323 1 139 1 195 1 303 1 119 1 243 1 230 1 
110 1 210 1 204 1 
309 1 18 1 305 1 291 1 
309 1 18 1 240 1 353 1 216 1 115 1 291 1 
240 1 249 1 35 1 
309 1 284 1 153 1 361 2 362 1 216 1 291 1 18 1 240 3 205 1 353 3 115 1 
309 1 18 1 62 1 183 1 240 2 353 2 216 1 115 1 291 1 
309 1 66 1 124 1 141 1 216 1 264 1 240 1 43 1 205 1 353 1 115 1 
309 1 240 1 353 1 205 1 216 1 115 1 291 1 
18 1 240 1 353 1 205 1 216 1 115 1 291 2 
309 1 2 1 240 2 353 2 205 1 215 1 104 1 216 2 115 2 291 1 
309 2 232 1 325 1 216 1 291 1 18 1 62 2 264 1 240 3 31 1 205 1 353 3 115 1 
309 1 66 1 124 1 216 1 291 1 18 1 62 1 344 1 109 1 72 1 43 2 240 2 205 1 353 2 115 1 
309 2 183 1 325 1 60 1 216 2 291 1 18 1 62 2 264 1 240 4 205 1 353 4 115 2 
309 1 18 1 240 1 353 1 205 1 216 1 115 1 291 1 
309 3 152 1 153 1 325 1 361 1 362 1 216 1 291 2 18 2 62 2 264 1 240 4 353 4 115 1 
309 1 49 1 28 1 216 1 99 1 291 1 62 1 18 1 240 2 205 1 353 2 115 1 
309 1 259 1 153 2 361 2 362 1 216 1 291 1 18 1 240 3 205 1 353 3 115 1 
0 1 309 2 276 1 352 2 
240 1 22 1 353 1 205 1 216 1 115 1 
309 1 18 1 62 1 240 2 31 1 353 2 205 1 216 1 115 1 291 1 
74 1 
309 1 18 1 240 1 353 1 205 1 216 1 115 1 291 1 
309 1 361 1 216 1 291 1 62 1 18 1 240 3 31 1 205 1 353 3 115 1 
309 1 264 1 152 1 325 1 
309 1 291 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 34 (106,271) (106,271) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (79,216,243,267) 297 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (79,216,243,267) 297 17 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (79,216,243,267) 297 17 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (49,305,323) (49,305,323) (49,305,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (49,305,323) (49,305,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (79,216,243,267) (79,216,243,267) (49,305,323) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (253,359) (253,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 247 118 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 59 258 (189,353) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 59 258 (92,196) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 1 243 1 168 1 40 1 216 1 334 1 
267 1 243 1 168 1 40 1 216 1 334 1 
267 1 243 1 168 1 40 1 216 1 334 1 
267 1 243 1 168 1 40 1 216 1 334 1 
125 1 1 3 39 1 40 4 363 2 52 1 324 1 334 1 79 3 111 1 7 1 35 1 267 1 84 1 243 1 113 2 279 1 216 4 
15 1 106 1 267 1 271 1 243 1 40 1 324 1 216 1 334 1 248 1 34 1 
267 2 243 2 40 1 216 2 334 1 248 1 297 1 
267 2 243 2 40 2 216 3 334 1 248 1 86 1 297 1 79 1 17 1 
267 2 243 2 40 2 216 3 334 1 248 1 86 1 297 1 79 1 17 1 
160 1 317 1 27 1 
77 2 317 1 88 1 
155 2 211 2 80 2 82 2 44 2 56 1 316 1 275 2 
67 1 353 1 87 1 239 1 263 1 337 1 89 1 91 1 313 1 211 2 20 2 44 2 9 1 169 1 316 1 73 1 171 2 146 1 172 1 198 2 173 1 174 1 101 1 148 1 274 1 102 2 275 2 365 1 152 1 155 3 80 3 329 2 82 2 56 1 347 1 258 1 205 1 
155 1 211 1 80 1 82 1 44 1 316 1 159 1 301 1 150 1 275 1 
76 1 254 1 130 1 150 1 155 1 80 1 6 1 82 1 94 1 135 1 317 1 61 1 27 1 123 1 
254 1 275 1 130 1 150 1 211 1 155 1 80 1 6 2 44 1 82 1 135 2 317 1 61 1 27 1 123 1 
326 1 6 1 81 1 135 1 108 1 
211 1 6 2 44 1 316 1 317 1 27 1 275 1 150 1 154 1 326 1 155 1 80 1 81 1 82 1 181 1 135 2 159 1 231 1 301 1 
6 1 81 1 135 1 
150 1 275 1 154 1 326 1 211 1 155 1 80 1 6 1 44 1 82 1 135 1 159 1 316 1 301 1 
317 1 
211 1 6 2 44 1 316 1 317 1 27 1 275 1 150 1 131 1 154 1 326 1 155 1 80 1 81 1 82 1 135 2 159 1 231 1 301 1 
303 2 235 1 3 2 333 5 211 1 6 5 44 1 354 2 188 1 21 1 212 2 117 1 23 1 316 1 215 1 170 2 317 2 10 1 27 2 220 1 202 1 150 1 275 1 154 1 155 1 326 2 80 1 16 1 366 4 83 1 82 1 81 2 159 1 135 5 230 1 301 1 231 1 284 2 
56 1 160 1 
275 1 155 2 211 1 80 2 278 1 82 2 44 1 56 2 217 1 
109 1 187 1 249 1 
198 1 174 1 51 1 101 1 102 1 353 1 263 1 89 1 152 1 155 1 313 1 80 1 20 1 56 1 258 1 205 1 
198 1 174 1 101 1 102 1 353 1 238 1 263 1 275 1 152 1 89 1 90 1 313 1 211 1 155 2 80 2 20 1 82 1 258 1 205 1 249 1 
155 3 211 3 80 3 44 1 82 3 56 1 275 3 90 1 
155 1 211 1 80 1 82 1 301 1 150 1 275 1 
155 1 211 1 80 1 278 1 82 1 44 1 150 1 275 1 217 1 
67 1 353 1 186 1 87 1 238 1 263 1 337 1 89 1 90 1 91 1 313 1 211 3 6 1 20 1 44 2 169 1 73 1 316 1 171 2 318 1 217 1 146 1 123 1 198 1 173 1 174 1 101 1 148 1 274 1 102 1 254 1 275 3 130 1 150 1 152 1 155 4 80 4 329 1 82 3 56 1 258 1 135 1 205 1 61 1 
155 2 211 1 156 1 80 2 82 2 56 1 76 1 275 1 90 1 
186 1 238 1 254 1 150 1 275 3 130 1 90 2 211 3 155 3 132 1 80 3 6 1 44 1 82 3 135 1 317 1 61 1 217 1 123 1 
275 2 90 1 211 2 155 2 80 2 187 1 44 1 82 2 217 1 249 1 
198 1 174 1 101 1 102 1 353 1 263 1 89 1 152 1 155 1 313 1 80 1 20 1 56 1 258 1 205 1 
198 1 174 1 101 1 102 1 263 1 152 1 155 1 313 1 80 1 20 1 338 1 56 1 258 1 205 1 196 1 
208 1 162 1 67 1 87 1 239 2 337 1 91 2 109 2 287 1 187 2 354 1 169 1 171 2 48 1 146 1 249 2 361 1 173 1 104 1 327 1 329 4 330 1 332 1 284 1 
155 1 211 1 80 1 82 1 0 1 150 1 130 1 275 1 
76 1 238 1 275 4 90 2 211 4 155 5 156 1 80 5 82 5 44 1 56 1 206 1 194 1 217 1 
155 2 211 2 80 2 0 1 82 2 301 1 150 1 275 2 
143 1 319 1 
143 1 319 1 
277 1 289 1 
277 1 289 1 
277 1 289 1 
294 1 143 1 319 1 
241 1 143 1 319 1 
277 1 289 1 184 1 143 2 319 2 129 1 
294 1 143 1 319 1 
294 1 143 1 319 1 
54 1 143 1 319 1 
54 1 143 1 319 1 
54 1 143 1 319 1 
64 1 66 2 236 1 336 1 211 1 6 2 288 1 44 1 96 2 191 2 316 1 143 2 24 1 319 2 100 2 219 2 28 1 344 1 150 1 275 1 154 1 155 1 80 1 82 1 37 1 135 2 159 1 301 1 
66 1 163 1 211 2 241 1 141 1 6 1 96 1 191 1 143 1 99 1 319 1 292 1 100 1 219 1 269 1 275 2 155 2 80 2 82 2 53 1 56 1 37 1 55 1 135 1 
125 1 279 1 324 1 
15 1 125 1 324 1 
15 1 279 2 356 1 324 3 30 1 293 1 
13 1 15 1 279 1 324 2 30 1 293 1 
15 1 279 1 324 2 30 2 293 1 
303 1 162 1 308 1 333 2 335 1 240 1 211 1 6 5 354 1 44 1 112 1 212 1 213 1 316 1 170 1 317 1 10 1 292 1 26 1 27 1 199 1 149 2 150 1 275 1 154 1 155 1 326 4 80 1 366 1 82 1 81 1 135 5 159 1 136 1 301 1 231 1 
350 1 108 1 209 1 211 1 6 2 44 1 316 1 317 1 27 1 150 1 275 1 154 1 155 1 326 2 80 1 81 1 82 1 331 1 135 2 159 1 301 1 
303 1 162 1 333 2 335 1 240 1 211 1 6 3 44 1 354 1 212 1 112 1 213 1 23 1 316 1 317 1 170 1 27 1 26 1 292 1 199 1 149 1 150 1 275 1 154 1 155 1 326 2 80 1 366 1 82 1 159 1 135 3 136 1 301 1 
303 1 162 1 333 2 286 1 335 1 240 1 6 2 354 1 212 1 112 1 23 1 213 1 170 1 26 1 292 1 199 1 149 1 326 1 366 1 135 2 136 1 
313 1 147 1 160 1 
313 1 342 1 
167 1 
313 1 174 1 
313 3 174 1 147 2 200 1 120 1 152 1 
313 1 174 1 152 1 
313 1 266 1 
65 1 201 1 239 4 104 2 91 3 16 1 177 2 354 1 93 1 188 1 329 7 71 1 230 1 290 1 48 3 232 1 284 1 
65 1 201 1 239 4 104 2 91 3 16 1 177 2 354 1 93 1 188 1 329 7 71 1 230 1 290 1 48 3 232 1 284 1 
65 1 201 1 239 4 104 2 91 3 16 1 177 2 354 1 93 1 188 1 329 7 71 1 230 1 290 1 358 1 48 3 232 1 284 1 
162 1 65 2 260 1 67 1 87 1 239 5 264 1 337 1 91 6 188 1 354 1 93 2 95 1 112 1 357 1 45 2 171 2 48 4 361 1 173 1 14 1 201 1 126 1 104 2 16 1 177 1 329 11 232 1 302 1 284 1 
307 1 65 1 67 2 87 2 239 5 264 1 337 2 91 4 354 1 93 1 188 1 71 1 290 1 171 4 48 4 173 2 29 1 104 3 177 2 16 1 329 9 230 1 232 1 284 1 
305 1 40 1 41 1 164 1 310 1 334 1 237 1 263 1 43 1 20 1 267 1 243 1 216 2 356 1 248 1 198 1 49 1 125 1 362 1 323 1 101 1 324 2 102 1 296 1 79 1 15 1 279 1 
137 1 305 1 40 2 41 1 164 1 310 1 42 1 237 1 263 1 43 1 20 1 267 1 243 1 356 1 216 3 248 1 25 1 198 1 49 1 125 1 362 1 101 1 324 2 102 1 79 2 15 1 279 1 
137 1 198 1 305 1 125 1 362 1 101 1 40 1 324 2 41 1 102 1 310 1 164 1 42 1 263 1 43 1 79 2 15 1 20 1 279 1 356 1 216 2 248 1 
198 1 174 1 349 1 362 2 101 1 251 1 138 1 40 1 253 1 164 2 102 1 310 2 263 1 313 1 267 1 20 1 243 1 8 1 205 1 216 1 248 2 359 1 25 1 
305 1 40 1 41 1 164 1 310 1 334 1 42 1 237 1 263 1 43 1 20 1 267 1 243 1 216 1 356 1 248 1 198 1 49 1 125 1 362 1 323 1 101 1 324 2 102 1 15 1 279 1 
31 1 
183 1 233 3 333 2 335 1 88 2 6 4 94 1 97 1 142 1 46 1 10 1 145 1 11 1 198 2 197 1 250 2 50 1 101 1 251 1 102 2 252 1 254 1 150 1 295 1 155 1 157 1 346 2 205 2 61 1 259 1 303 1 349 1 68 1 263 1 313 1 20 2 212 1 74 1 317 1 170 1 360 1 123 1 174 1 223 1 76 1 77 2 130 1 80 1 366 2 81 4 82 1 38 2 135 4 231 2 
197 1 233 2 223 1 76 1 252 1 254 1 150 1 130 1 155 1 80 1 6 2 81 1 82 1 94 1 135 2 74 1 142 1 46 1 61 1 123 1 
233 3 6 3 94 1 142 1 46 1 317 1 11 1 27 1 123 1 197 1 223 1 76 1 252 1 254 1 130 1 150 1 131 1 155 1 80 1 81 1 82 1 135 3 61 1 231 1 
197 1 233 2 223 1 76 1 68 1 252 1 254 1 150 1 130 1 155 1 80 1 6 2 81 1 82 1 94 1 135 2 74 1 142 1 46 1 61 1 123 1 
233 3 68 1 211 1 6 3 44 1 94 1 316 1 74 1 142 1 317 1 46 1 27 1 11 1 123 1 197 1 223 1 76 1 252 1 254 1 275 1 130 1 150 2 131 1 151 1 154 1 155 2 80 2 82 2 81 2 159 1 135 3 61 1 301 1 231 1 
183 1 233 3 333 1 88 2 6 3 94 1 142 1 46 1 10 1 11 1 145 1 197 1 250 2 252 1 254 1 150 1 155 1 157 1 346 2 61 1 259 1 303 1 68 1 212 1 74 1 170 1 317 2 27 1 123 1 223 1 76 1 77 2 130 1 80 1 366 1 82 1 81 2 135 3 38 2 231 1 
303 1 183 1 306 1 233 4 333 1 68 2 88 2 6 4 94 1 212 1 74 2 142 1 317 1 46 1 170 1 10 1 27 1 11 2 123 1 197 1 250 2 223 1 76 1 364 1 252 1 254 1 130 1 150 1 155 1 80 1 157 1 346 2 366 1 81 4 82 1 367 1 38 2 135 4 61 1 231 2 259 2 
183 1 233 4 333 1 88 2 6 4 44 1 94 1 142 1 46 1 10 1 11 2 197 1 250 2 252 1 254 1 150 2 154 1 155 2 157 1 346 2 159 1 61 1 301 1 259 2 303 1 306 1 68 2 211 1 212 1 316 1 74 2 170 1 317 1 27 1 123 1 223 1 76 1 364 1 275 1 130 1 80 2 366 1 82 2 81 4 367 1 135 4 38 2 231 2 
183 1 233 4 333 1 140 1 6 4 44 1 94 1 142 1 46 1 10 1 11 2 197 1 250 2 252 1 254 1 150 2 154 1 155 2 159 1 61 1 301 1 303 1 304 1 306 1 68 2 211 1 212 1 355 2 316 1 74 2 170 1 317 1 27 1 218 1 123 1 223 1 76 1 77 2 275 1 130 1 33 2 80 2 366 1 82 2 81 4 135 4 38 2 231 2 
183 1 233 4 333 1 88 2 6 4 44 1 94 1 142 1 46 1 10 1 11 2 197 1 250 2 252 1 254 1 150 2 154 1 155 2 157 1 346 2 159 1 60 1 61 1 301 1 259 2 303 1 306 1 68 3 211 1 212 1 316 1 74 3 170 1 317 1 27 1 123 1 223 1 76 1 364 1 275 1 130 1 80 2 366 1 81 5 82 2 367 1 135 4 38 2 231 2 
183 1 233 5 333 1 88 2 6 4 44 1 94 1 142 1 46 1 10 1 11 3 197 1 250 2 252 1 254 1 150 2 154 1 155 2 157 1 346 2 159 1 60 1 61 1 301 1 259 2 303 1 306 1 68 3 211 1 212 1 316 1 74 3 170 1 317 1 27 1 123 1 223 1 76 1 364 1 275 1 130 1 80 2 366 1 81 5 82 2 367 1 135 4 38 2 231 2 
183 1 233 4 333 1 140 1 6 4 44 1 94 1 142 1 46 1 10 1 11 2 145 1 197 1 250 2 252 1 254 1 150 2 154 1 155 2 159 1 61 1 301 1 303 1 68 2 211 1 212 1 355 2 316 1 74 2 170 1 317 1 27 1 123 1 223 1 76 1 77 2 275 1 130 1 33 2 80 2 366 1 82 2 81 4 135 4 38 2 231 2 
67 1 87 1 239 3 337 1 91 3 109 1 187 1 188 1 354 1 71 1 169 1 290 1 171 2 48 2 249 1 146 1 173 1 104 2 16 1 177 1 327 1 329 6 56 2 160 1 230 1 284 1 
162 3 67 2 87 2 239 10 337 2 91 7 109 13 187 4 93 1 354 3 112 3 245 1 9 1 169 1 357 2 45 4 171 4 48 2 144 1 122 1 75 1 146 2 249 13 173 2 361 1 148 1 126 1 104 1 179 1 329 17 56 1 302 3 284 1 
67 1 353 1 238 1 87 1 263 1 239 1 89 1 337 1 90 1 313 1 211 1 91 1 187 1 20 1 169 1 9 1 171 2 98 1 340 1 146 1 198 1 174 1 173 1 101 1 51 1 148 1 102 1 275 1 152 1 155 2 80 2 179 1 328 1 82 1 329 2 56 1 258 1 205 1 
42 1 87 3 238 1 239 10 337 3 89 2 90 1 91 10 187 7 188 1 93 4 9 1 290 1 48 8 146 3 249 7 198 3 101 2 148 1 102 3 103 1 104 4 152 2 155 3 16 1 255 1 56 2 258 2 205 1 63 2 162 2 351 2 67 3 353 2 263 2 211 1 313 2 109 7 20 3 314 2 354 3 71 1 112 2 169 3 73 2 171 6 173 3 174 2 361 2 275 1 226 2 177 1 80 3 179 1 82 1 329 20 227 1 230 1 284 3 
349 1 67 2 42 1 87 2 263 2 239 1 337 2 90 1 211 1 313 3 91 1 69 1 20 8 169 2 9 1 193 1 171 4 146 2 270 1 198 8 172 2 173 2 174 2 101 2 148 1 251 1 325 1 102 7 296 1 275 1 176 1 155 1 80 1 327 1 178 1 82 1 329 2 182 1 205 2 
162 1 67 1 87 1 239 1 337 1 109 1 265 1 211 1 91 2 187 1 44 1 354 1 112 1 169 1 171 2 48 1 217 1 249 1 146 1 173 1 361 1 275 1 104 1 155 1 80 1 179 1 82 1 329 3 284 1 
173 1 162 1 67 1 87 1 239 2 337 1 109 1 187 1 327 1 93 1 329 2 354 1 330 1 169 1 171 2 48 1 249 1 146 1 
173 1 208 1 361 1 67 1 87 1 104 1 337 1 109 1 91 2 187 1 327 1 329 2 169 1 171 2 48 1 284 1 249 1 146 1 
361 1 173 1 162 1 67 1 87 1 239 2 104 1 337 1 91 2 109 2 187 2 327 1 93 1 329 4 354 1 112 1 169 1 171 2 48 2 284 1 249 2 146 1 
173 1 162 1 67 1 87 1 239 2 337 1 176 1 109 1 187 1 93 1 329 2 354 1 330 1 169 1 171 2 48 1 249 1 146 1 
173 1 208 1 361 1 67 1 87 1 104 1 337 1 176 1 109 1 91 2 187 1 329 2 169 1 171 2 48 1 284 1 249 1 146 1 
361 1 173 1 162 1 67 1 87 1 239 2 104 1 337 1 176 1 91 2 109 2 187 2 93 1 329 4 354 1 112 1 169 1 171 2 48 2 284 1 249 2 146 1 
361 1 173 1 162 1 67 1 87 1 239 2 104 1 337 1 91 2 109 2 187 2 93 1 354 1 329 4 112 1 169 1 171 2 48 2 284 1 249 2 146 1 
67 1 353 1 87 1 239 1 263 1 89 1 337 1 313 1 91 1 20 1 9 1 73 1 169 1 171 2 146 1 198 1 174 1 173 1 101 1 148 1 102 1 152 1 155 1 80 1 329 2 56 1 258 1 205 1 
67 1 87 1 239 1 263 1 337 1 313 1 91 1 20 1 338 1 315 1 9 1 169 1 171 2 196 1 146 1 198 1 174 1 173 1 101 1 148 1 102 1 152 1 155 1 80 1 329 2 56 1 258 1 205 1 
361 1 173 1 162 1 67 1 87 1 239 2 104 1 337 1 91 2 109 2 187 2 179 1 93 1 329 4 354 1 112 1 169 1 171 2 48 2 284 1 249 2 146 1 
162 1 67 1 353 1 87 1 239 2 263 1 89 1 337 1 91 2 109 2 313 1 187 2 314 1 20 1 93 1 354 1 112 1 73 1 169 1 171 2 48 2 249 2 146 1 198 1 361 1 174 1 173 1 101 1 102 1 296 1 104 1 152 1 155 1 80 1 329 4 258 1 284 1 
162 1 67 1 87 1 239 2 337 1 91 1 211 1 109 1 187 1 93 1 44 1 354 1 112 1 169 1 171 2 48 1 217 1 146 1 249 1 322 1 361 1 173 1 275 1 155 1 80 1 179 1 82 1 329 3 284 1 
162 3 67 2 311 1 87 2 239 9 337 2 210 1 91 10 165 1 354 3 93 3 112 3 291 1 357 1 45 2 171 4 48 6 12 1 173 2 361 3 126 1 29 1 104 3 256 1 329 19 36 2 280 1 348 2 302 1 284 3 
162 3 234 1 67 3 185 1 87 3 264 2 239 14 337 3 91 12 210 2 165 1 93 2 354 3 244 1 112 3 291 1 45 2 171 6 48 4 173 3 361 2 29 1 126 2 78 1 203 1 104 2 276 1 256 1 329 26 36 4 280 2 348 1 302 2 284 2 
162 5 234 1 67 3 185 1 87 3 264 1 239 22 337 3 210 2 91 22 165 1 188 1 354 6 93 4 71 1 244 1 112 5 291 1 290 1 357 2 45 5 171 6 48 8 12 1 173 3 361 4 126 3 29 1 78 1 203 1 104 4 276 1 177 1 16 1 256 1 329 44 36 4 57 1 280 1 230 1 348 1 302 3 284 5 
162 5 234 1 67 4 185 1 87 4 264 2 239 22 337 4 210 2 91 21 165 1 188 1 354 6 93 3 71 1 244 1 112 5 291 1 290 1 357 2 45 5 171 8 48 8 12 1 173 4 361 4 126 3 29 1 78 1 203 1 104 5 276 1 177 1 16 1 256 1 329 43 36 4 57 1 280 1 230 1 348 1 302 3 284 5 
162 7 234 1 67 2 185 1 87 2 264 1 239 27 337 2 210 1 91 25 165 1 188 1 354 8 93 7 71 1 244 1 112 7 245 2 291 1 290 1 357 2 45 4 171 4 48 14 173 2 361 7 126 2 29 1 78 1 203 1 104 7 276 1 177 1 16 1 256 1 329 52 36 4 280 1 230 1 348 1 302 4 284 8 
219 1 207 1 85 1 228 1 191 1 66 1 143 1 319 1 129 1 100 1 
241 1 269 1 
219 1 115 1 191 1 66 1 4 1 262 1 143 1 319 1 100 1 
64 1 66 1 236 1 336 1 211 1 6 1 288 1 44 1 96 2 191 1 316 1 143 1 24 1 319 1 100 1 219 1 28 1 344 1 150 1 275 1 154 1 155 1 80 1 82 1 37 1 135 1 159 1 301 1 
64 1 66 1 236 1 336 1 211 1 6 1 288 1 44 1 96 2 191 1 316 1 143 1 24 1 319 1 100 1 219 1 28 1 344 1 150 1 275 1 154 1 155 1 80 1 82 1 37 1 135 1 159 1 301 1 
64 1 66 1 236 1 336 1 211 1 6 1 288 1 44 1 96 2 191 1 316 1 143 1 24 1 319 1 100 1 219 1 28 1 344 1 150 1 275 1 154 1 155 1 80 1 82 1 37 1 135 1 159 1 301 1 
294 1 184 1 119 1 
294 1 184 1 119 1 
5 1 54 1 
5 1 54 1 184 1 
141 1 55 1 
66 1 163 1 241 1 211 2 141 1 6 1 288 1 191 1 96 1 143 1 24 1 99 1 319 1 292 1 100 1 219 1 269 1 275 2 155 2 326 1 80 2 133 1 82 2 53 1 56 1 55 1 135 1 
294 1 119 1 
5 1 54 1 184 1 
67 1 87 1 263 1 239 1 337 1 312 1 313 1 91 1 20 2 22 1 169 1 9 1 171 2 146 1 270 1 321 1 198 2 172 2 124 1 174 1 173 1 101 1 148 1 102 2 155 2 80 2 179 1 178 1 82 2 329 2 58 1 
198 2 125 1 101 1 324 2 41 1 102 2 164 1 42 1 237 1 263 1 296 1 43 1 15 1 20 2 279 1 114 1 246 1 356 1 229 1 
198 1 125 1 101 1 324 2 41 1 102 1 164 1 42 1 237 1 263 1 43 1 15 1 20 1 257 1 279 1 356 1 229 1 
341 1 198 1 174 1 349 1 101 1 251 1 102 1 164 1 263 1 313 1 20 1 8 1 205 1 246 1 
198 1 125 1 101 1 324 2 41 1 102 1 164 1 42 1 237 1 263 1 43 1 15 1 20 1 279 1 114 1 246 1 356 1 229 1 
107 1 
220 1 366 1 333 1 160 1 317 1 202 1 27 1 
303 1 333 1 88 1 6 1 212 1 170 1 317 2 10 1 27 1 77 1 157 1 346 1 366 1 81 1 135 1 231 1 259 1 
303 2 162 1 261 1 333 3 335 1 263 1 240 2 313 4 6 2 20 1 354 1 112 1 189 1 212 2 214 1 170 2 10 2 198 1 174 1 147 1 101 2 342 2 200 1 102 1 32 1 152 1 226 1 366 2 81 2 105 1 134 1 135 2 205 1 136 2 61 1 281 1 231 1 
303 1 162 4 234 1 3 2 333 7 88 3 240 8 354 4 212 1 112 4 244 1 245 1 357 1 45 2 170 1 10 1 361 4 126 1 77 3 78 1 203 1 276 1 366 11 136 8 302 2 284 4 
303 1 3 2 333 2 211 1 6 1 188 1 21 1 354 2 44 1 212 1 316 1 170 1 10 1 150 1 275 1 154 1 155 1 80 1 16 1 366 2 83 1 82 1 367 1 135 1 159 1 230 1 301 1 284 1 
303 1 220 1 333 1 202 1 366 1 212 1 170 1 317 1 10 1 27 1 
162 1 354 1 112 1 333 2 136 1 240 1 
150 1 275 1 154 1 155 1 211 1 80 1 6 1 82 1 44 1 81 1 316 1 135 1 159 1 317 1 301 1 231 1 27 1 
303 2 349 1 352 1 333 1 335 1 263 2 313 2 6 2 70 1 20 2 212 2 23 1 97 1 170 2 10 1 360 1 198 2 222 1 174 2 50 1 101 3 251 1 102 2 152 1 366 1 81 2 205 2 135 2 62 1 231 1 283 1 
67 1 353 1 87 1 263 1 337 1 89 1 91 1 211 2 313 1 20 1 44 2 316 1 73 1 169 1 171 2 146 1 198 1 174 1 173 1 101 1 148 1 102 1 274 1 275 2 152 1 155 3 80 3 329 1 82 2 56 1 258 1 205 1 
303 1 50 1 333 1 335 1 366 1 212 1 136 1 170 1 317 1 10 1 27 1 
272 1 191 1 100 1 
141 1 85 1 191 1 343 1 100 1 
272 1 191 1 100 1 
272 1 191 1 100 1 
298 1 191 1 100 1 
298 1 191 1 100 1 
298 1 191 1 100 1 
191 1 100 1 
143 1 319 1 
173 2 67 2 87 2 239 4 264 1 104 2 337 2 91 4 177 1 16 1 354 1 329 8 93 1 188 1 71 1 230 1 290 1 171 4 48 3 284 1 
239 3 104 2 91 3 177 1 16 1 188 1 354 1 329 6 71 1 160 1 290 1 230 1 48 2 284 1 
361 1 173 1 162 1 273 1 67 1 87 1 239 2 104 1 337 1 91 2 354 1 329 4 93 1 112 1 171 2 48 2 284 1 
361 1 162 1 126 1 239 3 104 1 91 4 329 7 354 1 93 1 112 1 357 1 45 2 48 2 302 1 284 1 
162 2 67 2 87 2 239 11 264 2 337 2 91 12 188 2 93 4 354 3 71 1 112 2 245 1 290 1 357 1 45 2 171 4 48 9 144 1 361 2 173 2 14 1 104 5 177 1 16 2 329 23 230 1 302 2 284 3 
91 1 329 1 45 1 
329 1 239 1 302 1 
173 1 162 1 361 1 273 1 67 1 87 1 239 3 337 1 104 2 226 1 91 3 329 6 354 1 93 1 112 1 171 2 48 3 284 1 
162 2 234 1 67 1 87 1 239 6 337 1 91 6 93 1 354 2 244 1 112 2 45 1 171 2 48 2 173 1 361 2 126 1 29 1 203 1 78 1 104 1 276 1 329 12 302 1 284 2 
239 3 104 1 91 3 16 1 354 1 329 6 188 1 93 1 230 1 48 2 284 1 
173 1 14 1 67 1 87 1 239 1 264 1 104 1 337 1 91 2 16 1 93 1 188 1 329 3 71 1 290 1 171 2 48 2 
173 1 67 1 29 1 87 1 239 5 337 1 104 3 91 5 16 2 21 1 188 2 93 2 329 10 354 2 230 1 171 2 48 5 284 2 
173 1 162 1 29 1 67 1 87 1 239 2 337 1 354 1 329 2 93 1 171 2 48 1 
361 1 173 1 162 1 29 1 67 1 87 1 239 2 104 1 337 1 91 2 354 1 329 4 93 1 112 1 171 2 48 2 284 1 
173 3 14 1 29 1 67 3 87 3 264 1 239 1 337 3 104 1 91 2 16 1 329 3 188 1 93 1 171 6 48 2 12 1 
162 1 260 1 67 4 87 4 239 9 264 1 337 4 91 9 21 1 93 3 188 2 354 3 71 1 112 1 357 1 290 1 45 2 171 8 48 6 12 1 173 4 14 1 273 1 126 1 29 1 104 3 16 2 329 18 230 1 302 1 284 2 
162 1 234 1 67 1 87 1 239 6 337 1 91 5 354 2 188 1 112 1 71 1 357 1 290 1 45 2 171 2 48 2 173 1 126 1 29 1 104 2 177 1 16 1 329 11 230 1 302 1 284 1 
162 1 234 1 67 2 87 2 239 6 337 2 91 5 188 1 354 2 93 1 71 1 112 1 290 1 357 1 45 2 171 4 48 3 173 2 273 1 126 1 29 1 104 2 177 1 16 1 329 11 230 1 302 1 284 1 
162 2 234 1 67 3 87 3 239 9 264 1 337 3 91 10 188 1 93 1 354 3 71 1 244 1 112 2 290 1 45 1 171 6 48 4 173 3 361 2 273 1 126 1 29 1 203 1 78 1 104 3 276 1 177 1 16 1 329 19 230 1 302 1 284 3 
162 2 234 1 67 3 87 3 264 1 239 10 337 3 91 7 188 1 93 2 354 3 71 1 244 1 112 2 290 1 45 1 171 6 48 5 173 3 361 1 273 1 126 1 29 1 203 1 78 1 104 3 276 1 177 1 16 1 329 17 230 1 302 1 284 2 
162 1 234 1 67 1 87 1 239 6 337 1 91 5 354 2 188 1 112 1 71 1 357 1 290 1 45 2 171 2 48 2 173 1 126 1 29 1 104 2 177 1 16 1 329 11 230 1 302 1 284 1 
162 2 234 1 67 1 87 1 239 6 337 1 91 6 93 1 354 2 244 1 112 2 45 1 171 2 48 2 173 1 361 2 126 1 29 1 203 1 78 1 104 1 276 1 329 12 302 1 284 2 
162 2 234 1 67 4 87 4 239 10 264 2 337 4 91 8 188 1 93 2 354 3 71 1 244 1 112 2 290 1 45 1 171 8 48 5 173 4 361 1 273 1 126 1 29 1 78 1 203 1 104 3 276 1 177 1 16 1 329 18 230 1 302 1 284 2 
162 3 234 1 67 4 87 4 239 9 264 2 337 4 91 7 93 3 354 3 244 1 112 3 45 1 171 8 48 6 12 1 173 4 361 2 126 1 29 1 78 1 203 1 104 3 276 1 329 16 302 1 284 2 
239 3 104 3 91 4 16 3 329 7 188 3 93 3 354 1 71 2 290 1 230 1 48 6 284 1 
162 2 234 1 67 4 87 4 239 10 264 2 337 4 91 8 188 1 93 1 354 3 71 1 244 1 112 2 290 1 45 1 171 8 48 4 12 1 173 4 361 1 126 1 29 1 78 1 203 1 104 3 276 1 177 1 16 1 329 18 230 1 302 1 284 2 
155 1 80 1 156 1 82 1 56 1 76 1 247 1 
161 1 2 1 247 1 118 1 47 1 368 1 
313 1 198 1 174 1 20 1 349 1 101 1 251 1 205 1 160 1 102 1 263 1 
198 1 174 1 101 1 102 1 353 1 275 1 263 1 152 1 90 1 313 1 211 1 155 2 80 2 20 1 82 1 56 1 258 1 205 1 
198 1 174 2 101 1 224 1 102 1 353 1 275 1 263 1 152 2 90 1 313 3 211 1 155 1 266 1 80 1 20 1 82 1 258 1 59 1 
198 1 174 2 101 1 224 1 102 1 275 1 263 1 152 2 90 1 313 3 211 1 155 1 266 1 80 1 20 1 82 1 258 1 59 1 196 1 
263 1 211 1 313 4 92 1 266 1 6 2 20 1 44 1 316 1 317 1 121 1 27 1 198 1 174 1 147 1 101 1 342 1 224 1 102 1 150 1 275 1 152 1 154 1 155 1 80 1 82 1 81 1 159 1 135 2 59 1 61 1 301 1 
263 1 211 1 313 4 266 1 6 2 20 1 44 1 189 1 316 1 317 1 27 1 198 1 174 1 147 1 101 1 342 1 224 1 102 1 150 1 275 1 152 1 154 1 155 1 80 1 82 1 81 1 159 1 135 2 59 1 61 1 301 1 
198 1 20 1 101 1 102 1 325 1 263 1 
270 1 172 1 198 7 222 1 174 2 101 3 200 1 352 1 325 1 102 6 42 1 296 1 263 2 204 1 152 1 313 3 69 1 20 7 182 1 205 2 193 1 
351 1 67 2 353 1 87 2 239 3 263 1 337 2 89 1 90 1 109 1 91 3 313 1 211 1 187 1 20 1 314 1 354 1 188 1 71 1 169 2 73 1 290 1 171 4 48 2 249 1 146 2 198 1 124 1 174 1 173 2 101 1 102 1 275 1 296 1 104 2 152 1 155 2 177 1 16 1 80 2 179 1 329 6 82 1 56 2 258 1 230 1 284 1 
3 2 333 5 6 3 188 1 44 1 189 1 10 2 198 1 147 1 342 1 102 1 202 1 150 1 154 1 155 1 16 1 205 1 159 1 61 1 301 1 303 2 261 1 313 2 211 1 20 1 70 1 21 1 354 2 212 2 214 1 316 1 170 2 317 2 27 2 220 1 275 1 326 1 80 1 366 4 83 1 81 2 82 1 135 3 230 1 281 1 231 1 284 2 
198 2 174 1 147 1 101 2 200 1 325 1 102 2 296 1 32 1 263 1 152 1 313 2 20 2 
198 4 174 1 349 1 101 1 251 1 102 4 296 1 263 1 345 1 313 1 158 1 20 4 205 1 
198 2 222 1 174 1 101 2 352 1 224 1 102 2 263 1 152 1 313 1 255 1 20 2 62 1 283 1 
15 1 198 1 20 1 125 1 101 1 205 1 324 1 41 1 102 1 263 1 
313 1 270 1 198 2 174 1 20 2 22 1 101 1 102 2 42 1 263 1 296 1 
270 1 198 5 174 2 349 1 101 2 251 1 224 1 102 4 296 1 263 2 345 1 313 3 69 1 20 5 182 1 205 1 
270 1 198 5 174 2 349 1 101 2 251 1 224 1 102 4 128 1 296 1 263 2 345 1 313 3 20 5 182 1 205 1 
198 1 174 1 101 1 102 1 275 1 263 1 152 1 90 1 313 1 211 1 155 2 80 2 20 1 82 1 56 1 258 1 205 1 196 1 
198 1 222 1 174 1 101 2 200 1 352 1 224 1 102 1 263 1 204 1 152 1 313 1 20 1 
180 1 56 1 175 1 139 1 19 1 
139 1 175 2 186 1 254 1 150 1 130 1 19 2 326 1 6 2 242 1 180 2 56 1 135 2 317 1 61 1 339 1 320 1 27 1 123 1 
321 1 175 1 139 1 19 1 312 1 155 1 80 1 82 1 58 1 
242 1 139 1 320 1 
7 1 84 1 1 1 160 1 
7 1 267 1 84 1 243 1 1 1 40 1 216 1 
40 1 310 1 248 1 
1 1 40 3 127 1 334 1 225 1 267 1 7 1 243 1 84 1 190 1 216 3 192 2 
7 1 267 1 84 1 243 1 1 1 363 1 40 2 216 2 79 1 
125 1 1 1 40 1 52 1 324 1 334 1 267 1 243 1 113 1 279 1 216 1 
7 1 267 1 243 1 1 1 40 1 216 1 334 1 
7 2 267 1 84 1 243 1 40 1 216 1 334 1 
18 1 1 1 40 2 334 1 7 1 267 2 243 2 72 1 216 2 268 1 
1 2 40 3 334 1 79 2 7 1 267 1 166 1 35 1 84 1 243 1 113 1 116 1 216 3 
125 1 1 1 40 2 324 2 334 1 79 1 15 1 110 1 7 1 267 1 84 1 243 1 279 1 216 2 356 1 
1 2 39 1 40 4 363 1 334 1 79 2 7 1 267 2 35 1 84 1 243 2 113 1 216 4 
7 1 267 1 84 1 243 1 1 1 40 1 216 1 334 1 
1 3 40 4 225 1 79 2 7 2 267 1 35 1 84 2 243 1 113 1 190 1 216 4 192 1 195 1 
1 1 40 2 309 1 334 1 79 1 7 1 267 1 243 1 84 1 216 2 299 1 86 1 
7 1 267 1 84 1 243 1 1 1 190 1 40 3 216 3 192 2 334 1 225 2 282 1 
1 1 300 1 153 1 
267 1 243 1 40 1 216 1 334 1 285 1 
7 1 166 1 267 1 84 1 243 1 1 1 40 2 216 2 334 1 79 1 
221 1 
7 1 267 1 84 1 243 1 1 1 40 1 216 1 334 1 
166 1 7 1 267 1 84 1 243 1 1 1 40 3 216 3 192 1 334 1 79 1 
35 1 1 1 113 1 195 1 
7 1 1 1 

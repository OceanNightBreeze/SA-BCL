#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 50 57 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (97,316) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 283 236 126 239 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 283 236 126 239 90 298 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 71 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 354 278 239 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 283 236 126 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 283 236 126 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 283 236 126 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 283 236 126 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 283 236 126 239 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 209 242 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
170 2 0 1 51 2 172 1 312 1 79 6 81 1 103 1 29 4 30 1 197 1 34 3 296 1 253 2 182 2 297 2 64 1 327 5 254 1 111 9 92 1 211 9 261 1 287 1 240 2 308 1 355 1 243 2 
170 2 0 1 51 2 172 1 312 1 79 6 81 1 103 1 29 4 30 1 197 1 34 3 296 1 253 2 182 2 297 2 64 1 327 5 254 1 111 9 92 1 211 9 261 1 287 1 240 2 308 1 355 1 243 2 
170 2 0 1 51 2 172 1 312 1 79 7 81 1 103 1 29 5 30 1 197 1 34 4 296 1 253 2 182 2 297 2 64 1 327 6 254 1 111 10 92 1 211 10 261 1 287 1 240 2 308 1 355 1 243 2 
170 2 0 1 51 2 172 1 312 1 79 4 81 1 103 1 29 3 30 1 197 1 34 2 296 1 253 2 182 2 297 2 64 1 327 4 254 1 111 7 92 1 211 7 287 1 240 1 308 1 355 1 243 2 
170 1 51 1 327 3 111 4 172 1 312 1 79 3 103 1 29 2 211 4 261 1 34 1 296 1 240 2 308 1 253 1 243 1 297 1 
270 1 51 1 327 1 64 1 111 2 312 1 103 1 211 2 30 1 5 1 296 1 324 1 253 1 297 1 182 1 243 1 
51 2 327 2 111 3 312 1 79 1 81 1 103 1 29 1 211 3 34 1 296 1 253 2 182 1 
170 1 192 1 51 2 172 1 312 1 79 7 81 1 103 1 29 4 197 1 34 3 296 1 253 2 182 1 297 1 327 5 254 1 111 9 256 1 211 9 261 1 240 2 308 1 243 1 
170 1 192 1 51 2 172 1 312 1 79 7 81 1 103 1 29 4 197 1 34 3 296 1 253 2 182 1 297 1 327 5 254 1 111 9 256 1 211 9 261 1 240 2 308 1 243 1 
231 1 346 1 158 1 
313 2 134 1 158 1 
23 2 95 2 344 2 145 2 247 1 156 2 220 2 115 1 
22 1 23 2 245 1 247 1 156 3 78 2 54 1 27 1 121 1 122 1 220 2 157 2 290 2 223 1 293 1 145 3 7 1 323 1 12 1 277 1 344 2 345 1 16 2 66 1 258 1 210 1 94 1 132 1 18 1 95 2 44 1 216 2 286 1 263 1 266 1 115 1 310 1 
23 1 95 1 344 1 145 1 217 1 156 1 181 1 127 1 220 1 115 1 
23 1 231 1 62 1 163 1 156 1 158 1 237 1 214 1 249 1 334 1 33 1 145 1 201 1 217 1 
23 2 231 1 344 2 62 1 163 2 156 2 220 2 158 1 95 2 249 2 334 1 33 1 145 2 201 1 217 2 181 1 127 1 108 1 115 1 
294 1 249 1 159 1 163 1 113 1 
231 1 294 1 249 2 159 1 163 2 70 1 273 1 158 1 
294 1 249 1 163 1 
23 1 344 1 163 1 156 1 220 1 95 1 159 1 249 1 145 1 217 1 181 1 127 1 108 1 115 1 
158 1 
231 1 294 1 249 2 159 1 163 2 70 1 234 1 158 1 
74 1 231 1 219 1 163 5 67 1 280 2 42 1 104 1 158 1 196 1 159 2 249 5 294 2 105 1 70 1 276 2 60 1 169 2 10 1 
247 1 346 1 
23 2 344 1 118 1 156 2 247 1 102 1 220 1 274 1 95 1 145 2 217 1 
129 1 316 1 230 1 
245 1 12 1 148 1 16 1 247 1 156 1 78 1 121 1 27 1 94 1 122 1 132 1 18 1 223 1 216 1 145 1 
12 1 23 1 245 1 161 1 129 1 16 1 156 2 78 1 27 1 121 1 94 1 132 1 122 1 220 1 18 1 223 1 68 1 95 1 216 1 145 2 
23 3 161 1 344 1 95 3 145 3 247 1 156 3 220 3 
23 1 95 1 145 1 217 1 156 1 127 1 220 1 
23 1 344 1 156 1 102 1 220 1 274 1 95 1 145 1 217 1 
22 1 245 1 23 3 247 1 156 4 78 1 54 1 27 1 121 1 122 1 220 3 274 1 157 1 290 2 223 1 249 1 33 1 201 1 145 4 7 1 323 1 12 1 343 1 161 1 344 2 62 1 345 1 163 1 16 1 66 1 258 1 210 1 94 1 132 1 18 1 68 1 95 3 216 1 334 1 286 1 266 1 217 1 288 1 115 1 
23 2 161 1 118 1 156 2 173 1 247 1 220 1 95 1 214 1 145 2 217 1 
23 3 161 2 344 1 62 1 163 1 156 3 220 3 274 1 158 1 68 1 95 3 249 1 84 1 33 1 334 1 145 3 201 1 217 1 288 1 
23 2 161 1 129 1 95 2 344 1 145 2 156 2 316 1 220 2 274 1 
245 1 12 1 16 1 247 1 156 1 78 1 121 1 27 1 122 1 132 1 94 1 18 1 223 1 216 1 145 1 
12 1 218 1 16 1 247 1 156 1 78 1 27 1 122 1 132 1 94 1 18 1 223 1 303 1 216 1 145 1 
22 1 315 1 54 1 316 2 221 1 55 1 222 1 290 2 157 4 6 1 321 1 147 1 230 2 129 2 345 1 131 1 258 1 66 2 210 1 283 1 133 1 263 2 266 1 97 1 
23 1 62 1 156 1 220 1 151 1 95 1 145 1 217 1 
23 4 161 2 344 1 118 1 156 4 247 1 220 4 274 1 248 1 68 1 95 4 145 4 217 1 325 1 
23 1 95 1 145 1 217 1 156 1 127 1 220 1 
241 1 195 1 
241 1 195 1 
73 1 212 1 
73 1 212 1 
73 1 212 1 
85 1 241 1 195 1 
9 1 241 1 195 1 
306 1 241 2 73 1 206 1 212 1 195 2 
85 1 241 1 195 1 
85 1 241 1 195 1 
177 1 241 1 195 1 
177 1 241 1 195 1 
177 1 241 1 195 1 
13 2 25 2 163 2 53 1 347 1 349 1 195 2 123 1 158 1 249 2 199 3 176 1 45 2 320 2 306 1 114 1 241 2 61 2 47 1 
23 2 314 1 247 1 156 2 338 1 220 2 195 1 123 1 227 1 249 1 199 1 320 1 145 2 9 1 61 1 13 1 130 1 163 1 299 1 235 1 95 2 45 1 241 1 335 1 
170 1 243 1 297 1 
324 1 243 1 297 1 
170 2 14 1 26 1 267 1 324 1 297 3 
170 1 14 1 3 1 267 1 324 1 297 2 
170 1 14 2 267 1 324 1 297 2 
23 1 74 1 313 3 315 1 139 1 156 1 140 2 141 2 220 1 158 2 294 1 249 5 159 4 321 1 145 1 276 1 147 1 181 1 60 3 127 1 108 1 128 1 344 1 231 1 130 1 163 5 67 2 300 1 280 1 328 2 259 1 236 1 283 1 352 1 95 1 70 1 217 1 134 1 115 1 169 1 
313 3 315 1 139 1 141 2 220 1 144 2 321 1 145 1 276 1 181 1 147 1 108 1 60 3 231 1 113 2 280 1 67 2 328 2 236 1 283 1 20 1 70 1 115 1 23 1 74 1 156 1 158 2 159 4 249 5 294 3 127 1 128 1 344 1 37 1 130 1 163 5 352 1 95 1 217 1 134 1 169 1 
23 1 219 1 313 3 156 1 315 1 139 1 140 1 141 2 220 1 158 2 159 2 249 3 321 1 145 1 276 1 181 1 147 1 127 1 108 1 60 3 128 1 344 1 231 1 130 1 163 3 300 1 280 1 67 2 259 1 328 2 236 1 283 1 95 1 217 1 134 1 115 1 169 1 
99 1 219 1 313 7 315 2 139 1 140 2 141 4 158 4 143 1 249 4 159 3 321 2 276 1 147 2 60 5 128 1 231 1 130 2 232 1 163 4 280 1 300 1 67 4 328 4 259 1 236 2 283 2 134 3 169 1 
292 1 346 1 94 1 
229 1 94 1 
203 1 
27 1 94 1 
292 2 35 1 27 1 94 3 132 1 282 1 
27 1 94 1 132 1 
15 1 94 1 
131 3 255 1 185 1 66 3 279 1 157 7 213 1 224 2 43 1 6 2 321 1 340 1 189 1 263 4 147 1 135 1 183 1 
131 3 255 1 185 1 66 3 279 1 157 7 213 1 224 2 43 1 6 2 321 1 340 1 189 1 263 4 147 1 135 1 183 1 
131 3 255 1 185 1 66 3 279 1 348 1 157 7 213 1 224 2 43 1 6 2 321 1 340 1 189 1 263 4 147 1 135 1 183 1 
224 1 255 1 263 1 189 2 184 1 183 1 157 1 
119 1 345 2 131 4 185 1 66 4 258 2 279 1 210 2 54 2 157 9 290 4 213 1 224 2 43 1 124 1 6 3 321 1 340 1 189 1 263 5 147 1 135 1 183 1 356 1 
170 1 271 1 137 1 51 1 26 1 312 1 79 1 78 1 122 1 103 1 223 1 225 1 228 1 296 1 324 1 86 1 253 1 205 1 36 1 182 1 297 2 327 1 111 2 16 1 211 2 302 1 187 1 216 1 152 1 243 1 
170 1 75 1 271 1 137 1 136 1 51 1 26 1 312 1 78 1 79 2 122 1 103 1 223 1 225 1 324 1 86 1 253 1 205 1 182 1 297 2 327 1 111 3 16 1 211 3 302 1 187 1 216 1 152 1 243 1 311 1 
170 1 271 1 137 1 136 1 26 1 312 1 78 1 79 2 122 1 103 1 223 1 324 1 86 1 182 1 205 1 297 2 327 1 111 2 16 1 211 2 187 1 216 1 152 1 243 1 311 1 
75 1 2 1 137 2 51 1 138 1 111 1 16 1 78 1 27 1 122 1 94 1 186 1 211 1 18 1 223 1 284 1 216 1 160 1 109 1 253 1 86 2 182 2 205 2 
170 1 271 1 137 1 136 1 51 1 26 1 78 1 122 1 223 1 225 1 228 1 296 1 324 1 86 1 253 1 205 1 182 1 297 2 111 1 16 1 211 1 302 1 187 1 216 1 152 1 243 1 
56 1 
23 1 50 1 74 1 246 1 272 1 156 1 78 2 139 1 27 1 122 1 223 1 249 3 294 2 33 1 57 1 160 1 201 1 145 1 8 1 276 1 60 1 62 1 163 3 16 2 280 1 67 1 94 1 186 1 18 2 237 1 214 1 262 1 216 2 334 1 166 1 70 1 217 1 46 1 169 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 3 272 1 156 1 234 1 237 1 214 1 249 3 294 1 33 1 334 1 57 1 201 1 145 1 70 1 217 1 8 1 46 1 48 1 
23 1 50 1 74 1 62 1 163 2 272 1 156 1 280 1 237 1 214 1 249 2 33 1 334 1 57 1 201 1 145 1 217 1 276 1 8 1 46 1 169 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 62 1 163 2 272 1 156 1 237 1 214 1 249 2 33 1 334 1 57 1 145 1 201 1 217 1 8 1 46 1 48 1 
23 1 50 1 74 1 62 1 163 2 272 1 156 1 280 1 237 1 214 1 249 2 33 1 334 1 57 1 201 1 145 1 217 1 276 1 8 1 46 1 169 1 48 1 
22 1 129 1 345 1 131 2 185 1 247 2 66 3 258 1 346 1 210 1 54 1 279 1 316 1 157 6 290 2 224 1 213 1 43 1 6 2 321 1 133 1 263 3 340 1 266 1 147 1 230 1 
22 1 117 1 247 1 315 2 54 2 120 1 316 6 290 4 157 22 226 4 293 1 6 2 321 2 106 2 7 1 147 4 230 16 129 16 278 1 345 2 131 4 66 9 258 2 210 2 350 1 236 4 283 4 333 2 354 4 305 1 263 13 266 2 135 2 
23 1 22 1 161 1 345 1 258 1 156 1 54 1 120 1 210 1 316 1 220 1 157 1 290 2 68 1 198 1 32 1 293 1 95 1 263 1 145 1 266 1 
101 2 315 2 54 3 316 6 317 1 220 1 223 2 6 4 321 4 145 3 7 1 179 2 147 4 323 2 230 6 12 2 185 1 16 1 66 11 279 1 18 1 236 2 68 1 283 2 71 2 116 1 23 1 22 3 245 2 118 1 247 1 78 1 156 3 120 1 121 2 27 2 122 2 290 6 157 22 339 2 293 1 340 1 161 1 129 6 345 3 131 5 258 3 210 3 132 2 94 2 213 1 43 1 95 1 216 1 263 11 217 1 266 3 135 1 98 1 
136 1 54 2 220 1 223 4 145 1 322 1 7 1 326 1 277 2 16 7 66 1 281 1 186 1 18 2 188 1 21 1 22 2 23 1 191 1 78 6 156 1 27 3 122 3 194 1 157 2 290 4 293 1 295 1 160 1 36 1 87 1 161 1 345 2 258 2 210 2 94 4 132 1 351 1 95 1 216 7 133 1 263 1 266 2 
22 1 23 1 156 1 315 1 54 1 120 1 316 1 220 1 274 1 290 2 157 3 6 1 321 1 145 1 147 1 230 1 129 1 344 1 345 1 131 1 258 1 66 2 210 1 330 1 236 1 283 1 95 1 263 1 266 1 
22 1 129 1 345 1 131 1 258 1 210 1 54 1 316 1 55 1 157 2 290 2 283 1 133 1 263 2 266 1 147 1 135 1 230 1 
22 1 129 1 345 1 131 1 258 1 315 1 66 2 210 1 54 1 316 1 222 1 157 2 290 2 6 1 133 1 321 1 266 1 230 1 
22 1 129 2 345 1 131 2 66 2 315 1 258 1 210 1 54 1 316 2 157 4 290 2 236 1 283 1 6 1 321 1 133 1 263 2 266 1 147 1 135 1 230 2 
22 1 129 1 345 1 131 1 258 1 210 1 54 1 316 1 55 1 194 1 157 2 290 2 283 1 263 2 266 1 147 1 135 1 230 1 
22 1 129 1 345 1 131 1 258 1 315 1 66 2 210 1 54 1 316 1 194 1 222 1 157 2 290 2 6 1 321 1 266 1 230 1 
22 1 129 2 345 1 131 2 66 2 315 1 258 1 210 1 54 1 316 2 194 1 157 4 290 2 236 1 283 1 6 1 321 1 263 2 266 1 147 1 135 1 230 2 
22 1 129 2 345 1 131 2 66 2 315 1 258 1 210 1 54 1 316 2 290 2 236 1 157 4 283 1 6 1 321 1 263 2 266 1 147 1 135 1 230 2 
245 1 22 1 247 1 78 1 156 1 27 1 121 1 54 1 122 1 157 2 223 1 290 2 293 1 145 1 7 1 323 1 12 1 345 1 16 1 258 1 66 1 210 1 132 1 94 1 18 1 216 1 263 1 266 1 
22 1 218 1 247 1 78 1 156 1 27 1 54 1 122 1 157 2 223 1 318 1 290 2 293 1 145 1 7 1 12 1 345 1 16 1 258 1 66 1 210 1 132 1 94 1 18 1 303 1 216 1 263 1 266 1 
22 1 129 2 345 1 131 2 66 2 315 1 258 1 120 1 210 1 54 1 316 2 157 4 290 2 236 1 283 1 6 1 321 1 263 2 266 1 147 1 135 1 230 2 
245 1 22 1 315 1 78 1 156 1 121 1 27 1 54 1 122 1 316 2 157 4 223 1 290 2 6 1 321 1 145 1 179 1 147 1 323 1 230 2 36 1 12 1 129 2 345 1 131 2 16 1 66 2 258 1 210 1 132 1 94 1 236 1 283 1 216 1 263 2 266 1 135 1 
22 1 23 1 315 1 156 1 54 1 120 1 316 1 220 1 274 1 290 2 157 3 321 1 145 1 147 1 230 1 344 1 129 1 345 1 131 1 66 1 258 1 210 1 236 1 283 1 95 1 332 1 263 2 266 1 135 1 
171 1 24 1 315 3 54 4 290 8 157 33 224 1 226 2 124 1 6 3 321 4 340 1 178 1 59 1 126 1 147 4 88 1 298 1 90 1 278 2 345 4 131 6 185 1 257 1 164 1 258 4 66 16 279 1 210 4 149 1 301 1 236 3 213 1 283 3 43 1 239 1 19 3 354 2 263 17 135 3 356 2 
171 1 315 5 54 2 290 4 157 37 226 4 124 1 6 3 321 5 106 2 126 1 147 6 88 2 298 1 90 2 345 2 278 2 131 5 257 1 66 18 258 2 210 2 149 1 301 1 236 6 283 6 239 1 19 2 333 2 354 4 263 19 135 2 356 1 
171 1 315 5 54 4 224 2 226 5 6 6 321 7 106 2 59 1 178 1 147 9 278 3 185 2 66 27 279 2 149 1 236 7 283 7 239 1 19 4 333 2 72 1 24 1 157 60 290 8 124 1 340 2 126 1 298 1 88 2 90 1 345 4 131 13 257 1 258 4 210 4 301 1 213 2 43 2 354 5 263 33 307 1 135 7 356 2 
171 1 24 1 315 3 54 4 290 8 157 35 224 1 226 2 124 1 6 2 321 4 340 1 178 1 59 1 126 1 147 4 88 1 298 1 90 1 278 2 345 4 131 5 185 1 257 1 258 4 66 17 279 1 210 4 149 1 301 1 236 3 213 1 283 3 43 1 239 1 19 4 354 2 263 18 72 1 135 3 356 2 
171 1 315 3 54 2 290 4 157 29 226 3 124 1 6 3 321 3 106 1 59 1 126 1 147 4 88 1 298 1 90 1 278 2 345 2 131 5 257 1 258 2 66 14 210 2 149 1 301 1 236 4 283 4 239 1 19 3 333 1 354 3 263 15 135 2 356 1 
13 1 320 1 45 1 306 1 114 1 53 1 180 1 241 1 61 1 195 1 
299 1 9 1 
13 1 208 1 320 1 45 1 251 1 341 1 241 1 61 1 195 1 
13 1 25 1 163 1 53 1 347 1 123 1 195 1 158 1 249 1 199 2 176 1 45 1 320 1 306 1 114 1 241 1 61 1 47 1 
13 1 25 1 163 1 53 1 347 1 123 1 195 1 158 1 249 1 199 2 176 1 45 1 320 1 306 1 114 1 241 1 61 1 47 1 
13 1 25 1 163 1 53 1 347 1 123 1 195 1 158 1 249 1 199 2 176 1 45 1 320 1 306 1 114 1 241 1 61 1 47 1 
285 1 85 1 206 1 
285 1 85 1 206 1 
177 1 233 1 
177 1 233 1 206 1 
314 1 235 1 
23 2 25 1 314 1 247 1 156 2 338 1 174 1 220 2 195 1 227 1 249 1 159 1 199 1 320 1 145 2 9 1 61 1 13 1 130 1 163 1 299 1 235 1 95 2 45 1 241 1 47 1 335 1 
285 1 85 1 
177 1 233 1 206 1 
22 1 23 2 156 2 78 2 27 1 120 1 54 1 122 1 223 1 290 2 157 2 293 1 250 1 145 2 7 1 326 1 342 1 277 2 345 1 16 2 258 1 66 1 210 1 94 1 329 1 165 1 41 1 216 2 188 1 263 1 266 1 
170 1 207 1 136 1 137 1 26 1 16 2 78 2 122 1 17 1 223 1 225 1 187 1 216 2 152 1 324 1 243 1 297 2 36 1 110 1 
170 1 136 1 137 1 26 1 16 1 78 1 122 1 223 1 225 1 187 1 331 1 216 1 152 1 324 1 243 1 297 2 110 1 
207 1 137 1 16 1 78 1 27 1 122 1 94 1 186 1 18 1 223 1 216 1 160 1 109 1 244 1 
170 1 207 1 136 1 137 1 26 1 16 1 78 1 122 1 17 1 223 1 225 1 187 1 216 1 152 1 324 1 243 1 297 2 110 1 
76 1 
231 1 346 1 67 1 60 1 10 1 158 1 196 1 
74 1 231 1 163 1 313 1 280 1 67 1 40 1 158 2 83 1 249 1 294 1 70 1 276 1 202 1 60 1 134 1 169 1 
74 1 78 1 139 1 100 1 28 1 27 1 122 1 223 2 229 1 276 1 204 1 60 2 11 1 16 1 280 1 132 1 94 2 18 1 282 1 238 1 216 1 71 1 169 1 
74 1 278 1 313 2 67 1 280 1 328 1 141 1 158 1 226 1 239 1 354 1 276 1 134 1 60 1 169 1 
23 1 74 1 289 2 156 1 82 1 220 1 249 1 321 1 340 1 145 1 276 1 147 2 181 1 127 1 60 2 108 1 344 1 163 1 280 1 67 2 93 1 213 1 43 1 95 1 217 1 98 1 169 1 115 1 
74 1 231 1 280 1 67 1 196 1 158 1 276 1 60 1 169 1 10 1 
289 2 313 10 315 2 67 5 328 5 82 1 141 5 236 2 158 5 283 2 321 2 71 1 147 2 134 5 60 5 
231 1 249 1 294 1 163 1 70 1 158 1 
74 1 219 1 246 1 77 1 78 4 139 2 27 1 122 1 223 1 31 1 294 4 249 3 160 1 276 2 60 2 163 3 16 4 39 1 280 2 67 2 94 1 186 1 18 2 262 1 216 4 166 2 70 2 168 2 169 2 
23 2 245 1 22 1 247 1 78 1 156 3 54 1 121 1 27 1 122 1 220 2 157 1 290 2 223 1 145 3 7 1 323 1 12 1 344 2 345 1 16 1 66 1 258 1 210 1 132 1 94 1 18 1 95 2 216 1 286 1 266 1 115 1 
74 1 231 2 313 4 139 1 67 2 280 1 328 2 141 2 158 4 224 1 166 1 276 1 134 2 60 1 169 1 
13 1 320 1 146 1 
291 1 13 1 320 1 53 1 314 1 
13 1 320 1 146 1 
13 1 320 1 146 1 
13 1 320 1 162 1 
13 1 320 1 162 1 
13 1 320 1 162 1 
13 1 320 1 
241 1 195 1 
345 2 131 3 185 1 66 4 258 2 210 2 54 2 279 1 157 8 290 4 224 1 213 1 43 1 6 2 321 1 340 1 263 4 147 1 135 1 356 1 
131 2 185 1 66 3 346 1 279 1 157 6 224 1 213 1 43 1 6 2 321 1 340 1 263 3 147 1 
345 1 131 2 66 2 315 1 258 1 210 1 54 1 142 1 290 2 236 1 157 4 283 1 6 1 321 1 263 2 147 1 135 1 
278 1 131 2 66 6 315 2 157 12 236 2 283 2 226 2 6 1 333 1 354 2 321 2 263 6 106 1 147 2 135 1 
153 1 117 1 315 2 54 2 157 23 290 4 224 1 226 2 6 5 321 3 340 1 106 1 147 3 345 2 131 9 185 1 66 12 258 2 279 1 210 2 236 2 213 2 283 2 43 2 354 2 333 1 263 11 135 4 356 2 
226 1 66 1 157 1 
354 1 263 1 157 1 
345 1 131 3 258 1 66 3 315 1 54 1 210 1 142 1 290 2 157 6 236 1 283 1 6 2 321 1 263 3 71 1 147 1 135 1 
171 1 315 4 54 1 157 22 290 2 226 2 124 1 6 2 321 4 106 1 126 1 147 4 278 1 345 1 131 4 66 11 258 1 210 1 149 1 301 1 236 4 283 4 239 1 354 2 333 1 263 11 135 2 
131 2 66 3 157 6 213 1 43 1 6 1 321 1 340 1 263 3 147 1 135 1 
153 1 345 1 131 2 185 1 66 2 258 1 210 1 54 1 279 1 157 3 290 2 213 1 43 1 6 1 263 1 135 1 356 1 
345 1 131 5 258 1 66 5 54 1 210 1 290 2 157 10 213 2 43 2 124 1 6 3 321 2 263 5 340 1 147 2 135 2 98 1 
345 1 131 1 258 1 210 1 54 1 290 2 157 2 283 1 124 1 263 2 147 1 135 1 
345 1 131 2 66 2 315 1 258 1 210 1 54 1 290 2 236 1 157 4 283 1 124 1 6 1 321 1 263 2 147 1 135 1 
153 1 24 1 345 3 131 2 66 2 258 3 210 3 54 3 157 3 290 6 213 1 43 1 124 1 6 1 263 1 135 1 356 1 
153 1 24 1 54 4 142 1 290 8 157 15 226 1 124 1 6 3 321 2 340 1 125 1 147 2 278 1 345 4 131 6 185 1 66 8 258 4 210 4 279 1 213 2 43 2 354 1 263 7 135 3 98 1 356 1 
171 1 345 1 278 1 131 1 315 1 258 1 66 4 210 1 54 1 149 1 301 1 236 2 290 2 157 10 283 2 226 1 124 1 239 1 6 1 321 1 354 1 263 6 126 1 147 2 
171 1 345 2 278 1 131 1 315 1 258 2 66 4 210 2 54 2 149 1 301 1 142 1 236 2 290 4 157 10 283 2 226 1 124 1 239 1 6 1 321 1 354 1 263 6 126 1 147 2 
171 1 315 4 54 3 142 1 157 29 290 6 224 1 226 2 124 1 6 4 321 5 340 1 106 1 126 1 147 5 278 1 345 3 131 6 185 1 66 15 258 3 279 1 210 3 149 1 301 1 236 4 213 1 283 4 43 1 239 1 354 2 333 1 263 14 135 2 356 1 
171 1 345 1 278 1 131 3 315 3 258 1 66 9 210 1 54 1 149 1 301 1 236 4 290 2 157 20 283 4 226 2 124 1 239 1 6 2 333 1 321 3 354 2 263 11 106 1 126 1 147 4 135 1 
171 1 345 1 278 1 131 1 315 1 258 1 66 4 210 1 54 1 149 1 301 1 236 2 290 2 157 10 283 2 226 1 124 1 239 1 6 1 321 1 354 1 263 6 126 1 147 2 
171 1 315 4 54 1 157 22 290 2 226 2 124 1 6 2 321 4 106 1 126 1 147 4 278 1 345 1 131 4 66 11 258 1 210 1 149 1 301 1 236 4 283 4 239 1 354 2 333 1 263 11 135 2 
171 1 345 3 278 1 131 3 315 3 258 3 66 10 210 3 54 3 149 1 301 1 142 1 236 4 290 6 157 21 283 4 226 2 124 1 239 1 6 2 333 1 321 3 354 2 263 11 106 1 126 1 147 4 135 1 356 1 
24 1 315 1 54 2 157 7 290 4 226 2 124 1 6 1 321 1 106 1 147 1 278 1 345 2 131 1 66 4 258 2 210 2 236 1 283 1 239 1 354 1 263 3 
131 6 185 2 66 4 279 1 157 7 213 3 43 3 6 3 321 1 340 1 263 3 147 1 135 3 
24 1 315 1 54 2 157 7 290 4 226 2 124 1 6 1 321 1 106 1 147 1 278 1 345 2 131 1 66 4 258 2 210 2 236 1 283 1 239 1 354 1 263 3 
23 1 214 1 209 1 145 1 247 1 156 1 173 1 
215 1 319 1 209 1 107 1 80 1 242 1 
216 1 160 1 16 1 346 1 78 1 27 1 122 1 94 1 186 1 18 1 223 1 
12 1 23 1 161 1 16 1 247 1 156 2 78 1 27 1 121 1 94 1 132 1 122 1 220 1 18 1 223 1 95 1 216 1 145 2 
23 2 118 1 247 1 78 1 156 2 121 1 27 2 122 1 220 2 223 1 145 2 12 1 161 1 62 1 15 1 16 1 132 2 94 3 95 1 216 1 334 1 264 1 217 2 168 1 
23 2 218 1 118 1 247 1 78 1 156 2 27 2 122 1 220 2 223 1 145 2 12 1 161 1 62 1 15 1 16 1 132 2 94 3 95 1 216 1 334 1 264 1 217 2 168 1 
231 1 52 1 15 1 163 2 16 3 78 3 27 1 132 1 94 4 122 1 18 1 158 1 223 1 292 1 249 2 294 1 216 3 33 1 229 1 264 1 168 1 268 1 336 1 
231 1 15 1 163 2 16 3 78 3 27 1 132 1 94 4 122 1 18 1 158 1 223 1 292 1 249 2 294 1 216 3 353 1 33 1 229 1 264 1 168 1 268 1 
275 1 216 1 16 1 78 1 122 1 223 1 
326 1 277 1 136 1 16 6 78 5 281 1 27 2 132 1 94 3 122 2 351 1 18 2 282 1 223 3 295 1 216 6 96 1 322 1 36 1 87 1 
22 2 23 1 245 1 247 2 156 2 78 1 101 1 27 1 120 1 54 2 121 1 122 1 316 1 220 1 157 6 223 1 290 4 224 1 6 2 321 1 340 1 145 2 179 1 147 1 323 1 230 1 36 1 12 1 161 1 129 1 345 2 131 2 185 1 16 1 66 3 258 2 279 1 210 2 94 1 132 1 41 1 213 1 43 1 95 1 216 1 263 3 266 2 
23 1 74 1 289 2 156 1 78 1 100 1 82 1 220 1 158 1 31 1 196 1 249 1 159 1 321 2 340 1 145 1 276 1 181 1 147 2 127 1 108 1 60 4 10 1 344 1 231 1 163 1 16 1 67 4 280 1 18 1 213 1 238 1 43 1 95 1 216 1 217 1 115 1 169 1 98 1 
16 2 78 2 27 1 132 1 94 2 122 1 282 1 223 2 275 1 292 1 216 2 204 1 36 1 
16 4 4 1 78 4 27 1 94 1 122 1 186 1 18 1 223 1 216 4 160 1 268 1 36 1 
191 1 16 2 78 2 281 1 27 1 132 1 94 1 122 1 223 2 175 1 216 2 21 1 168 1 87 1 
187 1 216 1 16 1 78 1 324 1 122 1 243 1 297 1 18 1 223 1 
326 1 136 1 216 2 16 2 78 2 27 1 122 1 94 1 165 1 36 1 223 1 
326 1 16 5 4 1 78 4 27 2 94 3 122 2 186 1 18 1 223 2 295 1 216 5 160 1 322 1 168 1 36 1 
326 1 16 5 4 1 78 4 27 2 94 3 122 2 186 1 18 1 223 2 295 1 216 5 160 1 265 1 168 1 36 1 
12 1 23 1 161 1 218 1 16 1 247 1 156 2 78 1 27 1 94 1 132 1 122 1 220 1 18 1 223 1 95 1 216 1 145 2 
16 1 78 1 281 1 27 1 132 1 94 1 122 1 282 1 223 2 216 1 96 1 168 1 87 1 
342 1 23 1 155 1 156 1 329 1 200 1 250 1 58 1 145 1 
58 1 38 1 150 1 
200 1 58 1 247 1 155 1 337 1 
23 1 156 1 155 1 220 1 158 1 249 2 159 1 200 1 33 1 145 1 201 1 58 1 181 1 127 1 108 1 344 1 62 1 231 1 63 1 163 2 38 1 150 1 95 1 334 1 217 2 288 1 115 1 337 1 
327 1 312 1 346 1 103 1 
51 1 327 1 111 1 312 1 103 1 211 1 253 1 
211 1 182 1 205 1 
51 1 327 1 64 2 111 3 312 1 103 1 211 3 304 1 296 1 252 1 253 1 190 1 
51 1 327 1 111 2 312 1 240 1 79 1 103 1 211 2 253 1 
170 1 51 1 327 1 111 1 29 1 211 1 296 1 308 1 253 1 297 1 243 1 
51 1 327 1 111 1 296 1 312 1 211 1 253 1 
51 1 111 1 296 1 312 2 103 1 211 1 253 1 
69 1 51 2 327 1 111 2 296 1 65 1 312 1 309 1 211 2 253 2 
51 1 254 1 327 2 111 3 312 1 79 2 103 1 29 1 211 3 197 1 34 1 296 1 253 1 
170 1 89 1 51 1 327 1 26 1 111 2 312 1 79 1 103 1 211 2 296 1 324 1 253 1 297 2 243 1 
51 2 327 2 111 4 312 1 79 2 103 1 29 1 211 4 261 1 34 1 296 1 240 1 253 2 
51 1 327 1 111 1 296 1 312 1 103 1 211 1 253 1 
49 1 51 1 64 1 327 3 111 4 312 2 79 2 103 2 29 1 211 4 34 1 252 1 253 1 190 1 
51 1 327 1 111 2 256 1 167 1 296 1 312 1 79 1 103 1 211 2 253 1 269 1 
51 1 327 1 64 2 111 3 112 1 312 1 103 1 211 3 296 1 252 2 253 1 190 1 
1 1 327 2 193 1 260 2 
51 1 154 1 111 1 296 1 211 1 253 1 
197 1 51 1 327 1 111 2 296 1 312 1 79 1 103 1 211 2 253 1 
91 1 
51 1 327 1 111 1 296 1 312 1 103 1 211 1 253 1 
197 1 51 1 327 1 64 1 111 3 296 1 312 1 79 1 103 1 211 3 253 1 
49 1 327 1 34 1 29 1 
327 1 312 1 

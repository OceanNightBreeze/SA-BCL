#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) (21,297) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) (21,297) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 102 245 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (50,269) (50,269) (262,305) 247 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 205 221 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 243 200 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (58,119,180,238) (58,119,180,238) (58,119,180,238) 267 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
201 1 56 1 225 1 
117 1 254 2 56 1 
275 2 109 2 1 2 185 2 53 1 306 2 123 1 10 2 
275 2 1 3 3 1 5 1 124 1 123 1 125 1 50 1 126 1 10 2 290 2 11 1 170 1 53 1 174 1 175 1 93 1 300 1 95 1 181 2 97 1 99 1 304 1 185 2 306 3 223 1 258 1 32 1 35 1 226 1 109 2 310 1 230 2 110 1 153 2 71 2 274 1 
275 1 109 1 292 1 1 1 185 1 121 1 306 1 123 1 91 1 10 1 
275 1 76 1 1 1 121 1 306 1 209 1 225 1 263 1 229 1 228 1 111 1 56 1 131 1 218 1 
275 1 76 2 185 1 1 1 121 1 306 1 209 1 225 1 10 1 229 1 228 1 109 1 111 1 56 1 218 2 
76 1 157 1 85 1 112 1 218 1 
76 2 157 1 85 1 56 1 250 1 30 1 225 1 218 2 
76 1 85 1 218 1 
275 1 157 1 76 1 185 1 1 1 121 1 283 1 306 1 123 1 10 1 292 1 109 1 91 1 218 1 
56 1 
76 2 157 1 85 1 56 1 250 1 225 1 57 1 218 2 
157 2 76 5 222 1 161 1 206 2 259 1 83 1 225 1 147 1 51 2 246 1 268 1 85 2 56 1 296 1 250 1 218 5 178 2 135 1 
181 1 230 1 99 1 153 1 148 1 
201 1 53 1 
275 2 1 2 185 1 121 1 306 2 224 1 104 1 10 1 109 1 53 1 54 1 
293 1 173 1 162 1 
95 1 181 1 99 1 1 1 304 1 3 1 306 1 258 1 35 1 126 1 187 1 230 1 170 1 53 1 153 1 300 1 
275 3 109 1 1 3 185 3 53 1 306 3 10 3 154 1 
275 1 1 1 185 1 121 1 306 1 91 1 10 1 
275 1 185 1 1 1 121 1 306 1 224 1 10 1 109 1 54 1 
275 1 109 1 1 1 185 1 54 1 306 1 10 1 148 1 
275 2 189 1 1 2 185 1 53 1 306 2 131 1 10 1 154 1 
148 1 
275 2 109 1 293 1 1 2 185 2 54 1 306 2 162 1 10 2 154 1 
181 1 95 1 99 1 1 1 304 1 3 1 306 1 258 1 35 1 126 1 230 1 170 1 53 1 153 1 300 1 
181 1 95 1 99 1 1 1 304 1 3 1 282 1 306 1 257 1 35 1 126 1 230 1 170 1 53 1 153 1 
96 1 5 1 205 1 32 1 125 1 290 1 226 1 188 1 174 1 19 1 175 1 71 2 274 1 45 1 
275 1 228 1 1 1 185 1 142 1 121 1 306 1 10 1 
275 2 185 2 1 2 121 1 306 2 104 1 10 2 148 1 109 1 53 1 54 1 154 1 
275 2 142 1 1 2 185 2 121 1 306 2 91 1 10 2 
217 1 146 1 
217 1 146 1 
105 1 213 1 
105 1 213 1 
105 1 213 1 
217 1 176 1 146 1 
38 1 217 1 146 1 
294 1 105 1 288 1 217 2 213 1 146 2 
217 1 176 1 146 1 
217 1 176 1 146 1 
217 1 319 1 146 1 
217 1 319 1 146 1 
217 1 319 1 146 1 
252 1 76 2 280 1 160 2 27 1 207 1 106 1 288 1 107 1 33 2 210 1 61 2 62 3 146 2 171 2 56 1 316 2 217 2 218 2 
275 2 76 1 198 1 1 2 121 1 160 1 7 1 10 2 53 1 217 1 218 1 252 1 140 1 185 2 306 2 104 1 33 1 307 1 62 1 61 1 146 1 38 1 150 1 114 1 316 1 273 1 
183 1 113 1 285 1 
183 1 113 1 28 1 
12 1 183 3 285 2 28 1 37 1 214 1 
12 1 183 2 23 1 285 1 28 1 37 1 
12 2 183 2 285 1 28 1 37 1 
197 1 76 5 157 4 156 1 198 1 117 1 205 1 206 1 239 1 51 1 246 2 52 1 85 1 18 1 90 1 250 1 56 2 132 1 178 1 218 5 133 2 135 2 140 1 302 1 221 1 254 2 303 1 26 1 225 1 147 1 150 1 45 1 
198 4 76 9 157 7 117 3 237 1 205 3 206 2 239 3 164 1 244 1 167 1 51 2 246 6 52 3 85 6 90 3 56 5 250 1 132 1 218 9 178 2 135 5 302 2 221 3 254 6 303 2 255 1 26 3 225 1 147 1 268 1 190 1 112 5 72 5 45 3 
275 1 157 2 156 1 76 3 198 1 117 1 1 1 121 1 283 1 205 1 206 1 239 1 123 1 10 1 51 1 246 2 292 1 52 1 18 1 56 2 90 1 91 1 178 1 218 3 135 2 133 1 302 1 221 1 185 1 303 1 254 2 306 1 26 1 225 1 109 1 268 1 45 1 
157 3 156 1 76 4 1 1 239 2 164 1 10 1 244 1 246 4 18 1 90 2 91 1 178 1 254 4 185 1 255 1 26 2 109 1 268 1 45 2 275 1 198 2 117 2 121 1 283 1 206 1 205 2 123 1 51 1 292 1 52 2 56 3 218 4 133 2 135 3 302 1 221 2 303 1 306 1 225 1 
95 1 201 1 84 1 
95 1 15 1 
291 1 
95 1 170 1 
95 3 16 1 170 1 304 1 152 1 84 2 
95 1 170 1 304 1 
95 1 151 1 
155 1 26 1 59 1 208 1 34 2 125 1 241 3 243 1 290 4 63 1 108 1 311 1 248 2 55 1 44 1 93 3 
155 1 26 1 59 1 208 1 34 2 125 1 241 3 243 1 290 4 63 1 108 1 311 1 248 2 55 1 44 1 93 3 
155 1 276 1 26 1 59 1 208 1 34 2 125 1 241 3 243 1 290 4 63 1 108 1 311 1 248 2 55 1 44 1 93 3 
155 1 118 1 234 4 204 2 5 2 205 4 239 4 208 5 125 12 241 8 243 1 290 30 168 1 128 4 248 3 55 2 174 2 93 18 220 1 221 4 26 5 103 1 59 1 34 3 226 2 108 1 63 2 311 2 64 1 71 4 73 1 318 1 44 2 274 2 74 1 45 4 
155 1 5 2 204 1 208 1 125 2 241 4 243 1 290 6 248 2 174 2 55 1 93 4 139 1 26 1 59 1 34 3 226 2 63 1 311 1 312 1 71 4 274 2 44 1 
267 1 58 1 119 1 238 1 
21 1 58 1 119 1 238 1 
158 1 3 1 285 1 82 1 126 1 214 1 249 1 251 1 297 1 219 1 180 2 181 1 184 1 183 2 58 2 24 1 28 1 29 1 39 1 230 1 41 1 68 2 113 1 153 1 232 1 
21 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
115 1 
275 1 76 3 1 1 121 1 2 1 3 1 206 1 209 1 126 1 51 1 245 1 246 1 85 2 170 1 129 1 131 1 250 1 178 1 218 3 135 1 95 1 181 2 302 1 99 2 102 1 306 1 31 1 36 1 147 1 263 1 227 1 308 1 228 1 229 1 230 2 111 1 153 2 116 1 233 1 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 3 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 85 1 111 1 250 1 131 1 57 1 218 3 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 206 1 209 1 36 1 147 1 51 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 178 1 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 209 1 36 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 
275 1 76 2 1 1 121 1 2 1 102 1 306 1 206 1 209 1 36 1 147 1 51 1 263 1 245 1 308 1 228 1 229 1 111 1 131 1 218 2 178 1 
155 1 201 1 5 1 162 1 241 2 125 1 243 1 290 3 293 1 248 1 53 1 55 1 174 1 173 1 175 1 93 2 96 1 26 1 59 1 32 1 34 2 226 1 71 2 274 1 44 1 
118 1 234 3 203 1 5 2 81 1 205 1 239 2 124 1 208 1 241 1 125 5 162 3 290 13 128 3 293 10 53 1 174 2 173 10 175 1 93 8 97 1 98 1 221 2 103 1 26 2 32 2 226 2 265 1 73 1 71 4 274 2 45 1 
97 1 281 1 203 1 5 1 124 1 32 1 125 1 290 2 148 1 226 1 149 1 174 1 175 1 71 2 274 1 93 1 
181 1 97 1 99 1 203 1 5 1 32 1 50 1 125 1 262 1 290 1 148 1 226 1 247 1 230 1 269 1 174 1 153 1 175 1 71 2 274 1 
275 1 0 1 279 1 1 1 3 2 5 2 124 1 126 2 125 1 10 1 290 2 170 2 87 1 129 1 88 1 174 2 175 2 20 1 93 1 96 1 95 3 181 8 97 1 99 2 185 1 306 1 31 1 32 2 145 1 226 2 230 7 110 2 313 1 231 1 232 1 153 8 71 4 274 2 154 1 
275 1 1 1 203 1 5 1 205 1 239 1 125 1 10 1 290 2 54 1 174 1 175 1 93 1 221 1 185 1 186 1 306 1 26 1 32 1 226 1 109 1 71 2 274 1 45 1 
96 1 5 1 26 1 239 1 208 1 32 1 287 1 241 1 162 1 290 2 226 1 293 1 173 1 174 1 175 1 71 2 274 1 93 2 
96 1 5 1 205 1 32 1 125 1 290 1 226 1 174 1 19 1 175 1 71 2 274 1 45 1 
96 1 221 1 5 1 26 1 205 1 239 1 32 1 125 1 162 1 290 3 226 1 293 1 173 1 174 1 175 1 71 2 274 1 93 2 45 1 
5 1 26 1 239 1 208 1 32 1 287 1 241 1 162 1 290 2 226 1 293 1 313 1 173 1 174 1 175 1 71 2 274 1 93 2 
5 1 205 1 32 1 125 1 290 1 226 1 313 1 174 1 19 1 175 1 71 2 274 1 45 1 
221 1 5 1 26 1 205 1 239 1 32 1 125 1 162 1 290 3 226 1 293 1 313 1 173 1 174 1 175 1 71 2 274 1 93 2 45 1 
221 1 5 1 26 1 205 1 239 1 32 1 125 1 162 1 226 1 290 3 293 1 173 1 174 1 175 1 71 2 274 1 93 2 45 1 
1 1 3 1 5 1 124 1 126 1 50 1 125 1 290 2 170 1 53 1 174 1 175 1 93 1 300 1 181 1 95 1 97 1 99 1 304 1 306 1 258 1 32 1 35 1 226 1 230 1 153 1 71 2 274 1 
181 1 97 1 99 1 121 1 5 1 104 1 32 1 125 1 290 1 226 1 230 1 53 1 172 1 174 1 153 1 175 1 71 2 274 1 
221 1 203 1 5 1 26 1 205 1 239 1 32 1 125 1 162 1 290 3 226 1 293 1 173 1 174 1 175 1 71 2 274 1 93 2 45 1 
1 1 3 1 5 1 205 1 239 1 125 1 162 1 126 1 50 1 290 3 293 1 170 1 173 1 174 1 175 1 20 1 93 2 300 1 181 1 95 1 221 1 304 1 26 1 306 1 258 1 32 1 35 1 226 1 230 1 269 1 153 1 71 2 274 1 45 1 
275 1 1 1 203 1 5 1 205 1 239 1 211 1 125 2 162 1 10 1 290 4 293 1 54 1 174 1 173 1 175 1 93 2 221 1 185 1 306 1 26 1 32 1 226 1 109 1 71 2 274 1 45 1 
155 1 118 2 234 4 47 1 284 1 204 1 5 3 286 1 205 6 239 7 48 3 208 7 125 15 241 8 243 1 290 41 13 1 128 4 248 1 295 1 55 1 174 3 216 1 137 1 93 26 139 1 221 7 256 1 103 2 26 8 59 1 34 1 226 3 264 1 266 1 270 1 315 1 317 1 73 2 71 6 44 1 274 3 45 6 
234 2 47 1 284 1 204 1 5 2 205 2 239 3 208 1 48 4 241 1 125 9 290 23 13 1 128 2 295 1 174 2 216 2 137 1 93 14 139 1 221 3 256 1 26 3 226 2 266 1 40 1 270 1 315 2 317 1 71 4 73 2 274 2 45 2 
155 1 234 5 5 3 239 7 241 9 243 1 13 1 248 1 174 3 93 28 26 8 103 2 256 1 34 1 264 1 266 1 40 1 270 1 43 1 274 3 44 1 45 7 118 2 47 1 284 1 204 1 205 7 208 8 48 4 125 18 290 46 128 5 295 1 55 1 216 2 137 1 139 1 221 7 59 1 226 3 315 1 317 1 71 6 73 3 
155 1 234 4 5 3 239 7 241 8 243 1 13 1 248 1 174 3 93 27 26 8 103 2 256 1 34 1 264 1 266 1 40 1 270 1 274 3 44 1 45 6 118 2 47 1 284 1 204 1 205 6 208 7 48 4 125 16 290 43 128 4 295 1 55 1 216 1 137 1 139 1 221 7 59 1 226 3 315 1 317 1 71 6 73 2 
155 1 118 2 234 4 47 1 284 1 204 1 5 2 205 7 239 7 48 4 208 6 125 16 241 7 243 1 290 42 13 1 128 4 248 1 295 1 55 1 174 2 216 1 137 1 93 26 139 1 221 7 256 1 103 2 26 8 59 1 34 1 226 2 266 1 40 1 270 1 315 1 317 1 73 2 71 4 44 1 274 2 45 7 
159 1 160 1 207 1 316 1 106 1 288 1 33 1 217 1 61 1 146 1 
38 1 7 1 
14 1 309 1 160 1 316 1 260 1 33 1 217 1 61 1 146 1 
252 1 76 1 160 1 27 1 207 1 106 1 288 1 107 1 33 1 210 1 61 1 62 2 146 1 171 1 56 1 316 1 217 1 218 1 
252 1 76 1 160 1 27 1 207 1 106 1 288 1 107 1 33 1 210 1 61 1 62 2 146 1 171 1 56 1 316 1 217 1 218 1 
252 1 76 1 160 1 27 1 207 1 106 1 288 1 107 1 33 1 210 1 61 1 62 2 146 1 171 1 56 1 316 1 217 1 218 1 
182 1 294 1 176 1 
182 1 294 1 176 1 
215 1 319 1 
294 1 215 1 319 1 
307 1 273 1 
275 2 76 1 157 1 198 1 1 2 121 1 160 1 7 1 210 1 49 1 10 2 171 1 53 1 217 1 218 1 140 1 185 2 306 2 104 1 33 1 307 1 61 1 62 1 146 1 38 1 150 1 114 1 316 1 273 1 
182 1 176 1 
294 1 215 1 319 1 
275 2 0 1 1 2 3 1 203 1 5 1 124 1 126 1 125 1 290 2 170 1 87 1 130 1 174 1 175 1 93 1 95 1 181 2 97 1 306 2 32 1 226 1 230 2 110 2 66 1 192 1 153 2 272 1 71 2 274 1 195 1 
181 2 75 1 183 2 3 1 285 1 28 1 29 1 240 1 126 1 9 1 214 1 39 1 230 2 113 1 41 1 232 1 153 2 20 1 177 1 
181 1 183 2 3 1 285 1 28 1 29 1 240 1 126 1 214 1 39 1 230 1 113 1 41 1 232 1 153 1 177 1 138 1 
95 1 181 1 99 1 3 1 120 1 100 1 31 1 126 1 9 1 170 1 230 1 129 1 41 1 153 1 
181 1 75 1 183 2 3 1 285 1 28 1 29 1 240 1 126 1 9 1 214 1 39 1 230 1 113 1 41 1 232 1 153 1 177 1 
8 1 
246 1 201 1 56 1 296 1 83 1 225 1 135 1 
76 1 117 1 199 1 206 1 127 1 51 1 246 1 85 1 56 2 250 1 178 1 218 1 135 1 254 1 225 1 261 1 147 1 
76 2 117 4 77 1 235 1 3 1 80 1 205 2 206 2 239 2 209 1 126 2 166 1 242 2 84 1 51 2 246 6 15 2 52 4 85 2 170 1 56 4 90 4 250 1 298 2 218 2 178 2 179 1 135 5 181 1 95 4 302 1 221 2 99 1 254 8 304 1 305 1 26 2 147 2 230 1 152 1 314 1 153 1 45 2 
117 2 234 1 47 1 206 1 205 2 239 2 51 1 246 4 128 1 52 3 295 1 90 3 56 2 178 1 135 4 221 2 254 4 256 1 26 2 147 1 266 1 317 1 73 1 45 2 
76 1 200 1 26 1 206 1 212 1 243 1 147 1 51 1 246 2 55 1 299 1 218 1 178 1 44 1 135 2 45 1 
275 2 1 3 3 1 5 1 123 1 125 1 50 1 126 1 10 2 290 1 170 1 53 1 174 1 175 1 300 1 181 1 95 1 97 1 99 1 185 2 304 1 306 3 258 1 32 1 35 1 226 1 109 2 310 1 230 1 153 1 71 2 274 1 
117 2 302 1 254 4 206 1 225 2 147 1 51 1 246 2 52 2 248 1 90 2 56 4 178 1 116 1 135 1 
206 1 83 1 225 1 147 1 51 1 246 1 296 1 56 1 178 1 135 1 
117 1 221 1 254 2 26 1 205 1 239 1 246 2 52 1 90 1 56 1 135 1 45 1 
76 1 85 1 56 1 250 1 225 1 218 1 
76 3 236 2 3 1 206 2 126 1 51 2 246 2 170 1 85 4 129 1 250 2 178 2 218 3 135 2 95 1 181 4 253 1 302 2 99 2 101 1 31 1 147 1 227 1 268 1 230 4 65 1 153 4 116 2 233 1 
196 1 316 1 33 1 
316 1 33 1 273 1 
196 1 316 1 33 1 
196 1 316 1 33 1 
316 1 33 1 92 1 
316 1 33 1 92 1 
316 1 33 1 92 1 
316 1 33 1 
217 1 146 1 
155 1 26 1 5 2 204 1 59 1 208 1 34 2 125 2 241 3 243 1 290 5 226 2 248 1 174 2 55 1 71 4 274 2 44 1 93 3 
155 1 201 1 26 1 59 1 34 2 125 1 241 2 243 1 290 3 248 1 55 1 44 1 93 2 
221 1 5 1 26 1 205 1 239 1 125 1 226 1 290 3 174 1 71 2 274 1 93 2 45 1 301 1 
118 1 234 2 221 2 103 1 26 2 205 2 239 2 208 2 125 4 241 2 290 10 128 2 73 1 93 6 45 2 
155 1 118 1 234 2 200 1 204 2 5 2 205 2 239 2 208 6 241 11 125 11 243 2 290 25 128 2 248 1 55 3 174 2 93 14 98 1 221 2 26 5 103 1 59 1 34 5 226 2 64 1 71 4 44 3 274 2 45 3 
128 1 125 1 290 1 
234 1 93 1 290 1 
221 1 26 1 205 1 239 1 208 1 125 2 241 1 242 1 290 5 93 3 45 1 
234 1 47 1 5 1 205 2 239 2 208 1 125 4 241 1 290 10 128 1 295 1 174 1 93 6 139 1 221 2 26 2 256 1 226 1 266 1 317 1 73 1 71 2 274 1 45 2 
26 1 93 1 243 1 290 1 
155 1 204 1 5 1 59 1 208 1 34 1 241 2 125 2 290 3 226 1 64 1 55 1 174 1 71 2 44 1 274 1 93 1 
139 1 200 1 5 1 26 2 208 2 34 2 241 4 125 3 243 1 226 1 290 7 174 1 55 1 71 2 274 1 44 1 93 4 45 1 
139 1 5 1 26 1 239 1 208 1 241 1 226 1 290 2 174 1 71 2 274 1 93 2 
139 1 221 1 5 1 26 1 205 1 239 1 208 1 125 1 241 1 226 1 290 3 174 1 71 2 274 1 93 2 45 1 
139 1 204 1 5 3 208 1 34 1 125 2 241 2 290 3 226 3 264 1 64 1 174 3 55 1 71 6 274 3 44 1 93 1 
155 1 118 1 234 4 204 2 5 5 205 4 239 4 208 6 125 12 241 9 243 2 290 29 128 4 248 1 55 2 174 5 93 17 301 1 139 1 220 1 221 4 26 6 103 1 59 1 34 3 226 5 264 1 64 1 73 1 71 10 318 1 44 2 74 1 274 5 45 4 
155 1 234 1 47 1 5 1 125 2 241 2 243 1 290 5 128 1 248 1 174 1 55 1 93 3 139 1 26 1 59 1 34 2 226 1 73 1 71 2 274 1 44 1 
155 1 118 1 234 1 47 1 5 2 239 1 208 1 125 3 241 3 243 1 290 8 128 2 248 1 55 1 174 2 93 5 301 1 139 1 221 1 26 2 59 1 34 2 226 2 73 1 71 4 44 1 274 2 
234 1 47 1 5 2 205 2 239 2 208 1 125 4 241 1 290 10 128 1 295 1 174 2 93 6 301 1 139 1 221 2 26 2 256 1 226 2 266 1 317 1 73 1 71 4 274 2 45 2 
155 1 234 1 47 1 204 1 5 3 205 1 239 2 208 2 125 4 241 4 243 1 290 13 128 1 248 1 295 1 55 1 174 3 93 9 301 1 139 1 221 2 26 3 256 1 59 1 34 2 226 3 266 1 317 1 73 1 71 6 44 1 274 3 45 1 
155 1 234 1 47 1 5 1 125 2 241 2 243 1 290 5 128 1 248 1 174 1 55 1 93 3 139 1 26 1 59 1 34 2 226 1 73 1 71 2 274 1 44 1 
234 1 47 1 5 1 205 2 239 2 208 1 125 4 241 1 290 10 128 1 295 1 174 1 93 6 139 1 221 2 26 2 256 1 226 1 266 1 317 1 73 1 71 2 274 1 45 2 
234 1 47 1 204 1 5 3 205 1 239 2 208 1 241 1 125 3 290 10 128 1 295 1 174 3 93 7 301 1 139 1 221 2 26 2 256 1 226 3 266 1 317 1 73 1 71 6 274 3 45 1 
234 1 47 1 204 1 5 3 205 1 239 2 208 2 241 2 125 3 290 10 128 1 295 1 174 3 93 7 139 1 221 2 26 2 256 1 226 3 264 1 266 1 317 1 73 1 71 6 274 3 45 1 
155 1 26 1 59 2 208 2 34 3 125 2 241 5 243 1 290 5 248 1 55 2 44 2 93 3 
234 1 47 1 204 1 5 3 205 1 239 2 208 1 241 1 125 3 290 10 128 1 295 1 174 3 93 7 139 1 221 2 26 2 256 1 226 3 264 1 266 1 317 1 73 1 71 6 274 3 45 1 
275 1 189 1 1 1 53 1 306 1 131 1 289 1 
275 1 1 1 143 1 306 1 289 1 165 1 169 1 189 1 53 1 67 1 131 1 69 1 
95 1 181 1 170 1 230 1 99 1 201 1 3 1 129 1 31 1 153 1 126 1 
95 1 275 1 181 1 99 1 304 1 185 1 1 2 3 1 306 2 35 1 126 1 10 1 170 1 230 1 53 1 153 1 154 1 300 1 
275 2 1 2 3 1 236 1 121 1 126 1 10 1 170 2 53 1 136 1 300 1 181 1 95 3 185 2 304 2 306 2 35 1 228 1 230 1 151 1 111 1 153 1 154 1 
275 2 1 2 3 1 236 1 121 1 4 1 126 1 10 1 170 2 53 1 136 1 181 2 95 3 185 2 304 2 306 2 257 1 35 1 228 1 230 2 151 1 111 1 153 2 154 1 
181 3 95 4 76 2 141 1 99 1 304 1 236 1 3 1 4 1 122 1 209 1 225 1 126 1 84 1 15 1 151 1 170 1 230 3 85 1 56 1 153 3 218 2 136 1 
181 3 95 4 76 2 99 1 304 1 236 1 3 1 4 1 80 1 209 1 225 1 126 1 84 1 15 1 151 1 170 1 230 3 85 1 56 1 153 3 218 2 136 1 
181 1 230 1 3 1 88 1 153 1 126 1 
181 7 95 3 279 1 277 1 99 2 304 1 3 2 126 3 145 1 230 6 170 2 110 1 87 1 152 1 88 1 231 1 232 1 153 7 20 1 134 1 94 1 
275 1 155 1 1 2 3 1 203 1 5 2 162 1 125 1 241 2 126 1 50 1 10 1 243 1 290 3 293 1 170 1 53 1 248 1 173 1 55 1 174 2 175 2 20 1 93 2 300 1 95 1 181 1 304 1 185 1 26 1 306 2 59 1 258 1 32 2 34 2 35 1 226 2 262 1 230 1 269 1 192 1 153 1 71 4 44 1 274 2 154 1 
76 3 157 1 77 1 235 1 80 1 206 2 83 1 209 1 51 2 84 1 246 1 15 1 85 2 56 1 296 1 250 1 178 2 218 3 135 1 181 1 95 2 99 1 101 1 305 1 225 1 147 2 230 1 153 1 
181 2 95 2 304 1 3 1 126 2 84 1 230 2 170 1 152 1 88 1 314 1 153 2 20 1 
95 1 181 4 170 1 230 4 99 1 17 1 3 1 129 1 4 1 31 1 153 4 126 1 20 1 
181 2 95 1 277 1 304 1 236 1 3 1 202 1 126 2 230 2 170 1 89 1 153 2 193 1 134 1 
181 1 183 1 230 1 99 1 3 1 113 1 28 1 29 1 153 1 126 1 
181 2 95 1 3 1 126 1 230 2 170 1 87 1 130 1 153 2 232 1 20 1 
181 5 95 3 99 1 279 1 236 1 3 2 31 1 126 2 145 1 230 4 170 2 17 1 87 1 129 1 153 5 20 1 
181 5 95 3 99 1 236 1 3 2 31 1 60 1 126 2 145 1 230 4 170 2 17 1 87 1 129 1 153 5 20 1 
95 1 275 1 181 1 99 1 304 1 185 1 1 2 3 1 306 2 257 1 35 1 126 1 10 1 170 1 230 1 53 1 153 1 154 1 
181 1 95 1 277 1 304 1 236 1 3 1 126 2 230 1 170 1 152 1 153 1 134 1 94 1 
278 1 46 1 144 1 194 1 
76 1 157 1 278 1 46 1 79 1 86 1 6 1 144 1 194 1 218 1 
275 1 278 1 1 1 46 1 66 1 306 1 272 1 194 1 195 1 
79 1 6 1 194 1 
184 1 201 1 251 1 219 1 
58 1 119 1 238 1 
24 1 249 1 68 1 
267 1 58 1 119 1 238 1 
58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 271 1 
267 1 58 1 119 1 238 1 
267 1 183 1 58 1 119 1 238 1 28 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
22 1 191 1 163 1 219 1 
251 1 219 1 
267 1 58 1 119 1 238 1 
58 2 22 1 119 1 238 1 68 1 180 1 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
25 2 42 1 70 1 219 2 
267 1 58 1 119 1 238 1 
267 1 58 1 119 1 238 1 
78 1 
267 1 58 1 119 1 238 1 

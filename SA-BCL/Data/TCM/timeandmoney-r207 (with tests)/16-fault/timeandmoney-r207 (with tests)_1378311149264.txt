#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 102 (66,118) (66,118) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 102 (66,118) (66,118) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 102 (66,118) (66,118) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 102 (66,118) (66,118) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 102 (5,334) (5,334) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (87,122,218,335) 356 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (87,122,218,335) 356 41 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (87,122,218,335) 356 41 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (32,110,143) (32,110,143) (32,110,143) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (32,110,143) (32,110,143) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (87,122,218,335) (87,122,218,335) (32,110,143) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (18,357) (18,357) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 20 221 121 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 20 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 20 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 145 318 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 20 221 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 20 221 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (223,238) (223,238) (239,311) 234 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 212 86 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 296 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 335 1 244 1 66 1 236 1 118 1 36 1 122 1 102 1 
87 1 335 1 244 1 66 1 236 1 118 1 36 1 122 1 102 1 
87 1 335 1 244 1 66 1 236 1 118 1 36 1 122 1 102 1 
87 1 335 1 244 1 66 1 236 1 118 1 36 1 122 1 102 1 
0 1 87 1 183 1 109 2 169 1 4 1 236 1 305 3 335 1 349 1 65 1 244 4 39 2 84 1 215 1 155 1 218 3 122 4 
0 1 87 1 335 1 244 1 236 1 16 1 5 1 36 1 334 1 122 1 102 1 
87 2 335 2 244 1 356 1 236 1 36 1 122 2 
87 2 335 2 244 2 356 1 41 1 236 1 218 1 205 1 36 1 122 3 
87 2 335 2 244 2 356 1 41 1 236 1 218 1 205 1 36 1 122 3 
58 1 73 1 240 1 
247 1 19 2 240 1 
176 1 124 2 243 2 171 1 134 2 10 2 108 2 42 2 
209 2 297 2 124 2 78 1 31 1 317 1 298 1 299 1 238 1 320 1 347 1 242 1 243 2 191 1 40 1 10 3 107 1 108 2 42 3 250 2 194 1 171 1 134 2 266 1 90 1 253 2 330 2 71 1 201 1 333 1 254 1 225 1 176 1 339 1 52 1 138 1 156 1 
176 1 124 1 243 1 216 1 134 1 303 1 98 1 10 1 108 1 42 1 
277 1 124 1 58 1 240 1 189 1 350 1 243 1 216 1 10 2 108 2 42 2 131 1 196 1 303 1 134 1 95 1 176 1 338 1 275 1 115 1 98 2 
131 2 124 2 196 1 303 1 134 2 58 1 240 1 189 1 95 2 176 1 243 2 350 1 338 1 216 1 115 1 10 2 98 2 108 2 42 2 
131 1 13 1 130 1 219 1 95 1 
131 2 13 1 246 1 58 1 240 1 25 1 219 1 95 2 
131 1 13 1 95 1 
131 1 124 1 303 1 134 1 95 1 176 1 243 1 338 1 216 1 98 1 10 1 108 1 42 1 219 1 
240 1 
131 2 13 1 97 1 58 1 240 1 25 1 219 1 95 2 
181 1 131 5 233 1 13 2 170 1 172 1 58 1 162 2 92 1 240 1 95 5 83 1 337 1 228 2 25 1 219 2 363 2 75 1 353 1 
171 1 73 1 
124 1 171 2 134 1 243 1 105 1 10 2 108 2 42 2 26 1 
251 1 7 1 54 1 
209 1 78 1 194 1 171 1 90 1 253 1 330 1 299 1 59 1 71 1 347 1 242 1 225 1 52 1 10 1 42 1 
124 3 243 3 171 1 142 1 134 1 10 3 108 3 42 3 
124 1 243 1 216 1 98 1 10 1 108 1 42 1 
124 1 243 1 105 1 134 1 98 1 10 1 108 1 42 1 26 1 
124 1 243 1 105 1 134 1 173 1 10 1 108 1 42 1 
124 1 243 1 171 1 142 1 275 1 10 2 108 2 42 2 292 1 
173 1 
124 1 243 1 105 1 134 1 10 1 108 1 54 1 42 1 
209 1 78 1 194 1 171 1 90 1 253 1 330 1 299 1 71 1 347 1 242 1 225 1 52 1 10 1 42 1 
209 1 194 1 171 1 90 1 253 1 91 1 330 1 299 1 71 1 282 1 242 1 225 1 52 1 10 1 42 1 
297 2 250 2 31 1 251 1 317 1 80 1 93 1 320 1 333 1 21 1 62 1 255 1 191 1 138 1 107 2 54 1 
124 1 243 1 196 1 289 1 98 1 10 1 108 1 42 1 
209 1 253 1 173 1 330 1 71 1 
124 2 142 1 171 1 134 1 173 1 243 2 105 1 98 1 10 2 108 2 43 1 42 2 
124 2 243 2 289 1 216 1 98 1 10 2 108 2 42 2 
200 1 69 1 
200 1 69 1 
272 1 29 1 
272 1 29 1 
272 1 29 1 
288 1 200 1 69 1 
288 1 200 1 69 1 
288 1 200 1 69 1 
56 1 200 1 69 1 
272 1 29 1 46 1 304 1 200 2 69 2 
336 1 200 1 69 1 
336 1 200 1 69 1 
336 1 200 1 69 1 
229 1 131 2 210 2 252 1 304 1 100 2 153 2 240 1 49 2 200 2 95 2 245 2 128 1 147 1 284 3 11 1 149 1 69 2 141 1 
124 2 210 1 344 1 186 1 56 1 100 1 243 2 245 1 284 1 10 2 85 1 108 2 42 2 69 1 131 1 171 1 267 1 49 1 200 1 154 1 95 1 137 1 295 1 141 1 
0 1 349 1 215 1 
0 1 215 1 16 1 
349 2 0 3 148 1 33 1 341 1 16 1 
349 1 0 2 148 1 33 1 16 1 27 1 
349 1 0 2 148 2 33 1 16 1 
77 2 28 1 344 1 55 2 186 1 160 1 162 1 58 1 240 2 280 1 83 1 214 1 247 1 67 2 85 1 44 1 219 4 131 5 13 1 17 1 152 1 19 3 92 3 21 1 95 5 255 1 177 1 257 1 337 2 228 1 25 1 363 1 
28 3 55 6 79 1 160 1 58 1 162 2 240 5 61 1 83 1 247 3 67 6 85 4 217 5 130 5 44 3 219 7 353 1 168 1 131 9 88 1 13 6 265 1 152 3 19 9 92 8 21 3 95 9 255 3 177 2 257 2 337 6 313 1 228 2 25 1 363 2 
77 1 28 1 55 2 58 1 162 1 240 3 280 1 214 1 247 2 67 2 85 1 219 2 44 1 353 1 131 3 152 1 92 3 19 4 21 1 95 3 255 1 177 1 257 1 337 2 228 1 363 1 
77 2 28 2 55 4 58 1 162 1 240 4 280 1 61 1 214 1 247 3 67 4 85 2 219 3 44 2 353 1 168 1 131 4 88 1 152 2 19 7 92 5 21 2 95 4 255 2 177 1 257 1 337 4 228 1 363 1 
287 1 90 1 73 1 
90 1 106 1 
70 1 
52 1 90 1 
287 2 264 1 52 1 90 3 135 1 225 1 
52 1 90 1 225 1 
90 1 361 1 
185 1 279 1 57 1 187 1 35 2 103 3 107 6 44 3 250 13 266 7 268 1 307 4 21 3 273 2 202 1 72 2 157 1 206 1 
185 1 279 1 57 1 187 1 35 2 103 3 107 6 44 3 250 13 266 7 268 3 307 6 21 3 273 2 202 1 72 2 157 1 206 1 
185 1 279 1 57 1 187 1 35 2 103 3 107 6 44 3 355 1 250 13 266 7 268 1 307 4 21 3 273 2 202 1 72 2 157 1 206 1 
28 3 297 2 185 1 279 2 57 1 187 1 35 3 300 1 320 1 103 6 104 4 191 1 248 1 263 1 107 19 44 6 250 39 328 1 266 20 152 3 268 7 113 1 333 1 307 13 21 6 255 3 96 1 273 2 202 1 72 3 274 1 138 1 179 3 157 2 206 2 
297 2 279 1 57 1 187 1 35 1 320 1 213 1 103 2 191 1 107 4 44 2 250 9 266 5 268 1 21 2 333 1 307 3 273 1 202 1 72 1 138 1 157 1 314 1 206 1 
209 1 0 2 316 1 32 1 236 1 143 1 299 1 321 1 36 1 349 1 244 1 215 1 218 1 286 1 87 1 110 1 194 1 253 1 16 1 330 1 222 1 335 1 203 1 204 1 227 1 341 1 122 2 
209 1 0 2 260 1 316 1 211 1 32 1 143 1 299 1 321 1 36 1 349 1 244 2 215 1 218 2 286 1 87 1 194 1 253 1 16 1 330 1 335 1 203 1 341 1 204 1 227 1 122 3 123 1 
209 1 0 2 260 1 194 1 211 1 316 1 16 1 143 1 253 1 299 1 330 1 321 1 36 1 349 1 244 1 215 1 203 1 341 1 227 1 204 1 218 2 122 2 
209 1 316 2 278 1 299 1 321 2 36 2 262 1 244 1 129 1 87 1 194 1 357 1 90 1 253 1 330 1 18 1 71 1 335 1 52 1 204 2 294 1 122 1 123 1 
209 1 0 2 260 1 316 1 32 1 236 1 143 1 299 1 321 1 36 1 349 1 244 1 215 1 286 1 87 1 110 1 194 1 253 1 16 1 330 1 335 1 203 1 204 1 227 1 341 1 122 1 
30 1 
277 1 1 1 58 2 240 2 144 1 189 1 283 1 10 1 108 1 13 2 194 1 151 1 196 1 198 1 253 2 330 2 71 2 331 1 257 1 337 2 115 1 294 1 25 1 209 2 159 1 346 1 162 1 299 1 262 1 83 1 350 1 42 1 131 3 302 1 90 1 47 2 92 2 95 3 312 1 52 1 275 1 228 1 98 1 53 1 363 1 
131 3 277 1 13 2 151 1 196 1 346 1 198 1 47 2 58 2 240 2 224 1 189 1 95 3 350 1 283 1 97 1 275 1 115 1 98 1 10 1 53 1 108 1 42 1 25 1 
131 2 277 1 151 1 196 1 346 1 198 1 47 3 58 2 240 2 189 1 95 2 226 1 350 1 283 1 275 1 115 1 98 1 10 1 53 1 108 1 42 1 
277 1 346 1 58 3 240 3 189 1 283 1 350 1 10 1 108 1 42 1 131 3 151 1 13 2 196 1 198 1 47 3 224 1 95 3 50 1 226 1 97 1 275 1 115 1 98 1 53 1 25 1 
277 1 346 1 58 2 240 2 189 1 283 1 350 1 10 1 108 1 42 1 131 3 221 1 151 1 13 3 196 1 198 1 47 2 224 2 20 1 95 3 50 2 97 1 275 1 115 1 98 1 53 1 25 1 121 1 
277 1 1 1 346 1 162 1 58 2 240 2 189 1 83 1 283 1 350 1 10 1 108 1 42 1 131 2 151 1 196 1 302 1 198 1 47 2 92 1 95 2 337 1 275 1 115 1 228 1 98 1 53 1 363 1 
131 2 277 1 151 1 196 1 346 1 198 1 47 2 58 2 240 2 20 1 189 1 95 2 350 1 283 1 275 1 115 1 98 1 10 1 53 1 108 1 42 1 
131 2 277 1 151 1 196 1 346 1 198 1 47 2 58 2 240 2 20 1 189 1 95 2 350 1 283 1 275 1 115 1 98 1 10 1 53 1 108 1 42 1 
277 1 346 1 34 1 58 2 162 1 318 1 240 2 145 1 189 1 83 1 283 1 350 1 193 1 10 1 108 1 42 1 131 2 151 1 196 1 302 1 198 1 47 2 92 1 95 2 337 1 275 1 115 1 228 1 98 1 53 1 363 1 
277 1 346 1 58 2 240 2 189 1 283 1 350 1 10 1 108 1 42 1 131 2 151 1 221 1 13 1 196 1 198 1 47 3 224 1 20 1 95 2 226 1 50 1 275 1 115 1 98 1 53 1 
277 1 346 1 58 2 240 2 189 1 283 1 350 1 10 1 108 1 42 1 131 2 151 1 221 1 13 1 196 1 198 1 47 3 224 1 20 1 95 2 226 1 50 1 275 1 115 1 98 1 53 1 
277 1 346 1 162 1 58 2 240 2 189 1 83 1 283 1 350 1 193 1 10 1 108 1 42 1 131 2 151 1 196 1 302 1 198 1 47 2 92 1 95 2 337 1 275 1 115 1 228 1 98 1 53 1 363 1 
297 2 250 4 31 1 171 1 317 1 57 1 266 2 187 1 35 1 320 1 21 1 307 1 333 1 103 1 62 1 273 1 72 1 191 1 138 1 73 1 107 2 44 1 
182 1 28 2 297 4 31 2 317 1 298 1 300 1 320 2 348 1 104 2 191 2 7 6 107 3 43 1 44 2 250 9 171 1 251 7 266 6 152 2 268 1 269 1 307 1 333 2 51 1 310 1 138 2 179 2 98 1 54 7 
99 1 297 2 250 2 31 1 317 1 266 1 298 1 237 1 173 1 269 1 320 1 333 1 339 1 191 1 138 1 107 1 
209 1 297 2 250 1 31 1 234 1 317 1 298 1 173 1 253 1 330 1 238 1 239 1 71 1 223 1 269 1 320 1 333 1 191 1 138 1 107 1 
209 7 124 1 297 4 260 1 31 2 142 1 317 2 298 1 299 2 320 2 62 1 146 1 262 1 243 1 190 1 191 2 10 1 352 1 108 1 107 1 42 1 68 1 12 1 194 2 250 2 90 3 266 1 253 8 330 8 71 2 222 1 136 1 201 2 333 2 339 1 52 2 138 2 116 1 294 1 
28 1 297 2 124 1 31 1 317 1 320 1 103 1 243 1 105 1 191 1 7 1 10 1 108 1 107 2 42 1 44 1 250 3 251 1 134 1 266 1 152 1 269 1 307 1 333 1 21 1 23 1 255 1 138 1 54 1 
28 1 297 2 250 2 31 1 251 1 317 1 266 2 329 1 320 1 333 1 62 1 191 1 138 1 54 1 44 1 
297 2 250 2 31 1 251 1 317 1 93 1 320 1 333 1 21 1 62 1 255 1 191 1 138 1 107 2 54 1 
28 1 297 2 250 2 31 1 251 1 317 1 266 2 152 1 320 1 333 1 62 1 191 1 138 1 54 1 44 1 
12 1 28 1 297 2 250 2 31 1 251 1 317 1 266 2 329 1 320 1 333 1 191 1 138 1 54 1 44 1 
12 1 297 2 250 2 31 1 251 1 317 1 93 1 320 1 333 1 21 1 255 1 191 1 138 1 107 2 54 1 
12 1 28 1 297 2 250 2 31 1 251 1 317 1 266 2 152 1 320 1 333 1 191 1 138 1 54 1 44 1 
28 1 297 2 31 1 250 2 251 1 317 1 266 2 152 1 320 1 333 1 191 1 138 1 54 1 44 1 
209 1 78 1 297 2 31 1 317 1 298 1 299 1 238 1 347 1 320 1 242 1 191 1 10 1 107 1 42 1 250 2 194 1 171 1 266 1 90 1 253 1 330 1 71 1 333 1 225 1 339 1 52 1 138 1 
209 1 297 2 31 1 317 1 298 1 299 1 320 1 242 1 282 1 191 1 10 1 107 1 42 1 250 2 194 1 171 1 266 1 90 1 91 1 253 1 330 1 71 1 333 1 225 1 114 1 339 1 52 1 138 1 
28 1 297 2 250 2 31 1 251 1 317 1 266 2 152 1 269 1 320 1 333 1 191 1 138 1 54 1 44 1 
28 1 209 1 78 1 297 2 31 1 317 1 299 1 238 1 347 1 320 1 242 1 191 1 10 1 42 1 44 1 250 2 194 1 251 1 266 2 90 1 253 1 330 1 152 1 222 1 223 1 333 1 225 1 52 1 138 1 54 1 
28 1 297 2 124 1 31 1 317 1 320 1 243 1 105 1 191 1 7 1 10 1 325 1 108 1 42 1 44 1 250 2 251 1 134 1 266 2 268 1 152 1 269 1 307 1 333 1 138 1 54 1 
208 1 28 4 297 6 57 1 187 1 35 1 300 1 320 3 82 1 213 1 103 4 6 1 104 4 322 2 351 1 191 3 8 1 107 21 44 5 167 1 354 1 250 40 266 19 152 4 268 4 291 1 333 3 307 8 21 5 22 1 255 4 96 3 271 1 273 1 256 4 72 1 274 1 138 3 179 3 342 1 180 1 207 1 
208 1 28 4 297 8 57 1 187 1 35 1 300 1 320 4 82 1 213 1 103 4 6 1 104 4 322 2 351 1 191 4 8 1 107 18 44 5 167 1 354 1 250 37 266 19 152 4 268 3 291 1 333 4 307 7 21 4 22 1 255 3 96 3 271 1 273 1 256 4 72 1 274 2 138 4 179 3 342 1 180 1 207 1 
208 1 182 2 28 7 297 4 57 1 187 1 35 1 300 2 320 2 82 1 213 1 103 7 6 1 104 4 322 1 351 1 191 2 8 1 107 25 44 8 167 1 250 51 266 26 152 7 268 7 291 1 333 2 307 14 21 8 255 7 96 2 271 1 273 1 256 4 72 1 274 1 138 2 179 4 342 1 180 1 207 1 
28 3 297 4 319 1 300 1 320 2 213 1 103 3 104 2 322 1 351 2 191 2 107 10 44 3 354 1 250 19 266 9 152 3 268 3 291 1 333 2 307 6 21 3 255 3 96 1 271 1 256 2 138 2 179 1 342 1 207 1 
208 1 28 3 297 6 320 3 82 1 213 1 103 2 6 1 322 2 104 2 351 1 191 3 8 1 107 12 44 3 167 1 250 26 266 14 268 2 152 3 291 1 307 4 21 2 333 3 255 2 271 1 96 2 256 4 274 2 138 3 179 2 342 1 180 1 207 2 
210 1 245 1 128 1 3 1 252 1 304 1 100 1 49 1 200 1 69 1 
137 1 56 1 
210 1 2 1 245 1 290 1 199 1 100 1 49 1 200 1 69 1 
229 1 131 1 210 1 252 1 304 1 100 1 153 1 240 1 49 1 200 1 95 1 245 1 128 1 147 1 284 2 149 1 141 1 69 1 
229 1 131 1 210 1 252 1 304 1 100 1 153 1 240 1 49 1 200 1 95 1 245 1 128 1 147 1 284 2 149 1 141 1 69 1 
229 1 131 1 210 1 252 1 304 1 100 1 153 1 240 1 49 1 200 1 95 1 245 1 128 1 147 1 284 2 149 1 141 1 69 1 
288 1 46 1 119 1 
288 1 46 1 119 1 
336 1 340 1 
336 1 46 1 340 1 
267 1 154 1 
124 2 210 1 344 1 186 1 56 1 100 1 241 1 243 2 245 1 147 1 284 1 10 2 85 1 108 2 42 2 219 1 69 1 131 1 171 1 153 1 267 1 49 1 200 1 154 1 95 1 137 1 295 1 
288 1 119 1 
336 1 46 1 340 1 
209 2 297 2 31 1 125 1 317 1 298 1 299 1 320 1 146 1 191 1 10 2 352 1 108 2 107 1 42 2 249 1 194 1 195 1 250 2 90 1 266 1 253 2 330 2 269 1 201 2 333 1 339 1 52 1 24 1 138 1 362 1 
209 2 0 2 260 1 194 1 14 1 89 1 16 1 253 2 299 1 330 2 222 1 321 1 349 1 215 1 203 1 341 1 227 1 286 1 76 1 
209 1 0 2 260 1 194 1 89 1 16 1 253 1 330 1 299 1 321 1 349 1 215 1 203 1 341 1 227 1 324 1 286 1 
209 1 194 1 90 1 253 1 299 1 330 1 71 1 321 1 262 1 52 1 129 1 294 1 166 1 76 1 
209 1 0 2 260 1 194 1 14 1 89 1 16 1 253 1 330 1 299 1 321 1 349 1 215 1 203 1 341 1 227 1 286 1 76 1 
285 1 
181 1 233 1 337 1 58 1 73 1 92 1 240 1 
1 1 259 1 162 1 58 1 240 2 83 1 247 1 131 1 13 1 92 1 19 1 306 1 95 1 337 1 228 1 25 1 363 1 
209 1 194 2 197 1 90 2 253 1 299 1 162 1 330 1 92 2 71 1 112 1 135 1 163 1 225 1 64 1 83 1 257 1 311 1 52 1 9 1 106 1 228 1 363 1 
208 1 28 2 55 5 184 2 162 2 58 2 240 5 281 1 6 1 104 1 83 2 247 3 8 1 67 5 44 2 167 1 131 1 13 1 15 1 152 2 19 6 92 8 21 2 95 1 255 2 96 1 257 1 312 1 337 5 293 1 179 1 228 2 180 1 25 1 363 2 
124 1 184 2 162 1 35 1 83 1 243 1 216 1 10 1 108 1 42 1 44 2 131 1 303 1 134 1 15 1 92 2 21 1 309 1 95 1 176 1 273 1 202 1 72 1 337 2 338 1 98 1 228 1 363 1 
181 1 233 1 162 1 58 1 92 1 240 1 83 1 337 1 228 1 363 1 
28 2 55 5 184 2 197 1 15 1 152 2 19 10 92 5 240 5 21 2 255 2 337 5 247 5 67 5 44 2 
131 1 13 1 58 1 240 1 25 1 95 1 
209 4 126 2 159 1 299 1 162 2 101 1 83 1 262 1 327 1 353 1 131 3 194 1 13 4 90 1 253 4 330 4 331 1 71 2 92 2 95 3 360 1 257 2 312 2 337 2 52 1 228 2 294 1 25 2 363 2 
209 1 297 2 124 2 78 1 31 1 317 1 298 1 299 1 238 1 347 1 320 1 242 1 243 2 191 1 10 3 107 1 108 2 42 3 250 1 194 1 171 1 134 2 90 1 253 1 330 1 71 1 333 1 254 1 225 1 176 1 52 1 138 1 
55 2 279 1 162 1 58 2 19 4 92 1 240 4 83 1 257 1 337 2 312 1 247 2 67 2 228 1 363 1 
245 1 100 1 308 1 
245 1 100 1 308 1 
245 1 100 1 308 1 
245 1 252 1 100 1 154 1 315 1 
245 1 45 1 100 1 
245 1 45 1 100 1 
245 1 45 1 100 1 
245 1 100 1 
200 1 69 1 
208 1 297 2 57 1 187 1 35 2 320 1 213 1 103 3 104 1 191 1 107 7 44 3 250 14 266 7 268 1 21 3 333 1 307 4 96 1 273 2 202 1 72 2 138 1 179 1 
208 1 28 1 297 4 57 1 187 1 35 2 300 1 320 2 213 1 103 3 104 2 191 2 107 8 44 4 250 17 266 9 152 1 268 2 21 3 333 2 307 5 96 1 273 2 202 1 72 2 138 2 179 1 258 1 
208 1 28 2 297 6 57 1 187 1 35 2 320 3 213 1 103 4 6 1 104 1 191 3 8 1 107 13 44 5 167 1 250 25 266 12 268 2 152 2 333 3 21 5 307 6 255 2 96 1 273 2 202 1 72 2 274 1 138 3 179 1 258 1 180 1 
208 1 28 2 297 6 57 1 187 1 35 2 320 3 213 1 103 4 6 1 104 1 191 3 8 1 107 10 44 5 167 1 250 23 266 13 268 4 152 2 333 3 21 4 307 8 255 1 96 1 273 2 202 1 72 2 274 1 138 3 179 1 258 1 180 1 
208 1 297 2 57 1 187 1 35 2 320 1 213 1 103 3 104 1 191 1 107 7 44 3 250 14 266 7 268 1 21 3 333 1 307 4 96 1 273 2 202 1 72 2 138 1 179 1 
208 1 28 2 297 2 320 1 213 1 103 1 6 1 104 1 191 1 8 1 107 6 44 2 167 1 250 12 266 6 268 1 152 2 333 1 21 2 307 2 255 2 96 1 138 1 179 1 180 1 
208 1 28 2 297 8 57 1 187 1 35 2 320 4 213 1 103 4 6 1 104 1 191 4 8 1 107 11 44 5 167 1 250 24 266 13 268 2 152 2 333 4 21 4 307 6 255 1 96 1 273 2 202 1 72 2 274 2 138 4 179 1 258 1 180 1 
208 1 28 3 297 8 320 4 213 1 103 3 6 1 104 1 191 4 8 1 107 7 44 3 167 1 354 1 250 16 266 9 268 3 152 3 333 4 21 2 307 6 255 2 96 1 274 2 138 4 179 1 180 1 
250 7 57 2 266 3 187 1 268 3 35 3 21 1 307 6 103 3 273 1 72 3 107 4 44 1 
208 1 28 2 297 8 57 1 187 1 35 2 320 4 213 1 103 4 6 1 104 1 191 4 8 1 107 11 44 5 167 1 354 1 250 24 266 13 268 2 152 2 333 4 21 4 307 6 255 1 96 1 273 2 202 1 72 2 274 2 138 4 179 1 180 1 
297 4 57 1 187 1 35 2 320 2 103 3 191 2 107 8 44 3 250 16 266 8 268 3 333 2 307 6 21 3 273 2 202 1 72 2 274 1 138 2 
250 4 57 1 266 2 187 1 35 1 307 1 21 1 103 1 273 1 72 1 73 1 107 2 44 1 
28 1 297 2 250 4 266 2 152 1 268 1 320 1 21 1 307 2 333 1 103 1 255 1 191 1 138 1 258 1 107 2 44 1 
28 1 250 7 266 3 152 1 268 1 300 1 21 1 307 2 103 1 255 1 96 1 104 2 179 1 107 4 44 1 
182 1 28 2 297 2 57 1 187 1 35 2 300 1 320 1 348 1 103 4 104 2 191 1 107 12 44 5 250 24 266 12 152 2 268 2 21 5 307 6 333 1 255 2 273 2 202 1 72 2 274 1 138 1 179 2 
104 1 250 1 107 1 
250 1 266 1 179 1 
28 1 297 2 250 6 197 1 266 3 152 1 268 1 320 1 333 1 307 3 21 1 255 1 103 2 191 1 138 1 258 1 107 3 44 1 
208 1 28 2 297 2 320 1 213 1 103 1 6 1 104 1 191 1 8 1 107 6 44 2 167 1 250 12 266 6 268 1 152 2 333 1 21 2 307 2 255 2 96 1 138 1 179 1 180 1 
250 6 266 3 268 1 35 1 21 1 307 2 103 1 273 1 72 1 107 3 44 1 
297 2 250 3 57 1 266 1 187 1 268 1 35 1 320 1 307 2 333 1 103 1 178 1 72 1 274 1 191 1 138 1 107 2 
297 2 250 10 266 5 268 2 35 2 320 1 333 1 307 5 21 2 213 1 103 3 273 1 202 1 72 2 191 1 138 1 107 5 44 2 
28 1 297 2 250 2 266 2 268 1 320 1 333 1 307 1 213 1 191 1 138 1 44 1 
28 1 297 2 250 4 266 2 152 1 268 1 320 1 21 1 307 2 333 1 213 1 103 1 255 1 191 1 138 1 107 2 44 1 
297 6 250 3 266 1 268 1 35 1 320 3 333 3 307 2 213 1 103 1 178 1 274 1 72 1 191 3 138 3 107 2 354 1 
28 2 297 8 57 1 187 1 35 2 320 4 213 1 103 4 104 3 191 4 263 1 107 15 44 5 354 1 250 30 328 1 266 15 152 2 268 4 113 1 333 4 307 8 21 5 255 2 96 1 273 2 202 1 72 2 274 1 138 4 179 3 258 1 
171 1 275 1 212 1 10 1 108 1 42 1 292 1 
301 1 133 1 358 1 212 1 175 1 86 1 
209 1 262 1 194 1 52 1 90 1 253 1 299 1 294 1 73 1 330 1 71 1 
209 1 124 1 194 1 171 1 142 1 90 1 253 1 330 1 299 1 71 1 347 1 225 1 242 1 243 1 52 1 10 2 108 1 42 2 
209 1 124 2 126 1 142 1 299 1 347 1 189 1 242 1 243 1 10 2 108 2 42 2 194 1 171 1 196 1 90 3 253 1 330 1 174 1 225 2 52 2 98 1 361 1 
230 1 209 2 124 2 126 1 142 1 299 1 189 1 242 1 243 1 10 2 108 2 42 2 194 1 171 1 196 1 90 3 91 1 253 2 330 2 174 1 225 2 52 2 98 1 361 1 
209 1 124 1 126 1 188 1 299 1 58 1 240 1 243 1 350 1 216 1 10 1 106 1 165 1 108 1 42 1 287 1 131 2 13 1 194 1 134 1 303 1 90 4 253 1 330 1 174 1 95 2 225 1 176 1 338 1 52 1 98 1 361 1 
209 1 124 1 126 1 299 1 58 1 240 1 243 1 350 1 216 1 10 1 106 1 108 1 42 1 287 1 131 2 13 1 194 1 134 1 303 1 90 4 253 1 330 1 174 1 95 2 225 1 176 1 359 1 338 1 52 1 98 1 361 1 
209 1 194 1 253 1 116 1 299 1 330 1 
209 6 232 1 260 1 194 3 90 3 253 7 330 7 299 2 71 2 135 1 222 1 136 1 201 1 60 1 225 1 190 1 52 2 116 1 192 1 352 1 68 1 
142 1 317 2 57 1 187 1 238 1 239 1 320 2 242 1 103 3 243 1 191 2 10 2 108 1 107 6 195 1 194 1 250 12 253 1 330 1 333 2 21 3 202 1 72 2 209 1 78 1 297 4 124 1 31 2 299 1 35 2 347 1 43 1 42 2 44 3 171 2 90 1 266 6 268 1 222 1 223 1 269 1 307 4 225 1 273 2 52 1 138 2 98 1 
181 1 209 1 124 1 233 1 184 2 58 1 162 1 35 1 240 1 101 1 83 1 243 1 216 1 9 1 10 1 108 1 42 1 44 2 219 1 131 1 134 1 303 1 15 1 253 1 330 1 92 4 71 1 21 2 95 1 176 1 273 1 202 1 311 1 72 1 338 1 337 4 98 1 228 1 363 1 
287 1 209 2 194 2 90 2 253 2 330 2 299 1 135 1 222 1 163 1 225 1 52 1 116 1 
230 1 209 4 194 1 90 1 253 4 330 4 299 1 71 1 222 1 262 1 52 1 139 1 294 1 
209 2 232 1 194 2 126 1 90 1 253 2 330 2 299 1 81 1 225 1 38 1 52 1 192 1 120 1 
209 1 0 1 194 1 215 1 227 1 16 1 253 1 299 1 330 1 71 1 
209 2 249 1 260 1 194 1 90 1 253 2 330 2 299 1 222 1 52 1 352 1 
209 4 194 2 126 1 90 3 253 5 330 5 299 2 71 1 222 1 262 1 190 1 52 2 139 1 294 1 352 1 68 1 
209 4 345 1 194 2 126 1 90 3 253 5 330 5 299 2 71 1 222 1 262 1 52 2 139 1 294 1 352 1 68 1 
209 1 124 1 194 1 171 1 142 1 90 1 253 1 91 1 330 1 299 1 71 1 225 1 242 1 243 1 52 1 10 2 108 1 42 2 
209 1 232 1 194 2 126 1 90 1 253 1 330 1 299 1 135 1 60 1 225 1 52 1 192 1 
132 1 323 1 235 1 117 1 
131 1 132 1 323 1 235 1 117 1 276 1 140 1 296 1 219 1 95 1 
132 1 125 1 323 1 24 1 117 1 362 1 10 1 108 1 42 1 
132 1 140 1 296 1 
169 1 4 1 73 1 305 1 
87 1 335 1 169 1 244 1 4 1 305 1 122 1 
244 1 316 1 36 1 
87 1 169 1 161 1 4 1 236 1 111 1 127 2 305 1 94 1 335 1 244 3 122 3 
87 1 335 1 169 1 39 1 244 2 4 1 218 1 305 1 122 2 
0 1 349 1 109 1 183 1 87 1 335 1 244 1 215 1 236 1 305 1 122 1 
87 1 335 1 244 1 4 1 236 1 305 1 122 1 
87 1 335 1 169 1 244 1 4 2 236 1 122 1 
87 1 335 1 343 1 244 1 261 1 236 1 122 1 
87 1 109 1 169 1 4 1 236 1 305 2 335 1 244 3 65 1 164 1 218 2 122 3 326 1 
0 2 87 1 169 1 4 1 236 1 16 1 305 1 332 1 335 1 349 1 244 2 215 1 341 1 218 1 122 2 
87 2 109 1 169 1 4 1 236 1 305 2 335 2 244 4 39 1 65 1 84 1 218 2 122 4 
87 1 335 1 169 1 244 1 4 1 236 1 305 1 122 1 
87 1 109 1 169 2 161 1 4 2 127 1 94 1 305 3 335 1 244 4 65 1 74 1 218 2 122 4 
87 1 169 1 4 1 236 1 48 1 305 1 63 1 335 1 244 2 218 1 205 1 122 2 
87 1 231 1 169 1 161 1 4 1 236 1 127 2 305 1 94 2 335 1 244 3 122 3 
150 2 37 1 158 1 305 2 
220 1 87 1 335 1 244 1 236 1 122 1 
87 1 335 1 169 1 244 2 4 1 164 1 236 1 218 1 305 1 122 2 
270 1 
87 1 335 1 169 1 244 1 4 1 236 1 305 1 122 1 
87 1 335 1 169 1 244 3 164 1 4 1 236 1 127 1 218 1 305 1 122 3 
109 1 65 1 74 1 305 1 
4 1 305 1 

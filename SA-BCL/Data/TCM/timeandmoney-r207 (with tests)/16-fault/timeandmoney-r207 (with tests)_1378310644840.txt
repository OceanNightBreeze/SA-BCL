#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (187,195) 210 (48,61) (48,61) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (187,195) 210 (48,61) (48,61) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (187,195) 210 (48,61) (48,61) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (187,195) 210 (48,61) (48,61) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 82 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 173 249 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 192 260 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 205 363 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 205 1 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 205 1 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 205 1 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 205 1 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 173 249 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 1 20 1 179 1 140 1 210 1 61 1 271 1 247 1 195 1 34 1 48 1 
279 1 20 1 179 1 140 1 210 1 61 1 271 1 247 1 195 1 34 1 48 1 
279 1 20 1 179 1 140 1 210 1 61 1 271 1 247 1 195 1 34 1 48 1 
279 1 20 1 179 1 140 1 210 1 61 1 271 1 247 1 195 1 34 1 48 1 
44 1 55 1 140 1 179 4 256 1 12 3 87 2 247 1 144 1 106 1 279 1 92 1 93 2 280 1 271 4 242 1 64 3 207 1 
55 1 140 1 179 2 256 1 247 1 141 1 258 1 106 1 279 1 20 1 367 1 271 2 242 1 295 1 64 1 34 1 
44 1 55 1 140 2 179 3 87 1 12 1 247 1 187 1 279 2 20 1 271 3 242 1 64 2 
44 3 140 2 87 4 256 1 164 1 305 1 144 1 279 2 93 2 92 1 280 1 242 1 330 1 207 1 55 1 179 9 12 7 247 1 212 1 187 1 106 1 20 1 271 9 64 5 
44 3 140 2 87 4 256 1 164 1 305 1 144 1 279 2 93 2 92 1 280 1 242 1 330 1 207 1 55 1 179 9 12 7 247 1 212 1 187 1 106 1 20 1 271 9 64 5 
130 1 338 1 185 1 
228 2 338 1 153 1 
145 1 111 2 281 1 0 2 350 2 320 2 58 2 331 2 
299 2 161 1 111 2 301 1 0 2 350 3 303 1 2 1 28 1 276 1 223 1 277 1 227 1 145 1 50 1 281 1 71 1 33 1 328 2 54 1 331 2 245 1 122 1 99 1 181 1 362 1 248 2 211 2 58 3 317 1 270 1 132 1 342 1 235 2 320 2 43 1 370 1 
268 1 111 1 281 1 0 1 350 1 320 1 294 1 259 1 58 1 331 1 
268 1 302 1 350 1 194 1 58 1 307 1 226 1 17 1 130 1 338 1 356 1 320 1 147 1 246 1 
268 1 111 1 0 1 350 1 194 1 58 1 307 1 17 2 130 1 338 1 356 1 320 1 147 2 331 1 246 1 
17 1 274 1 289 1 147 1 225 1 
17 2 130 1 338 1 274 1 163 1 147 2 158 1 225 1 
17 1 147 1 225 1 
268 1 274 1 111 1 0 1 350 1 259 1 58 1 197 1 17 1 281 1 320 1 294 1 147 1 331 1 
338 1 
17 2 130 1 338 1 274 1 163 1 343 1 147 2 225 1 
297 1 160 2 274 2 300 1 237 1 163 1 316 1 262 2 198 1 352 1 225 2 17 5 130 1 338 1 96 1 312 1 147 5 120 2 137 1 
145 1 185 1 
159 1 111 1 0 1 350 2 58 2 145 2 320 2 42 1 331 1 
138 1 62 1 221 1 
99 1 161 1 248 1 350 1 211 1 303 1 2 1 28 1 58 1 70 1 145 1 50 1 270 1 235 1 370 1 54 1 
99 1 161 1 111 1 0 1 248 1 350 2 211 1 303 1 2 1 150 1 28 1 221 1 58 2 50 1 270 1 235 1 320 1 293 1 370 1 54 1 
159 1 111 4 315 1 0 4 350 5 150 2 58 5 226 1 251 1 145 1 189 1 320 5 293 1 331 1 
268 1 111 2 0 2 350 2 320 2 294 1 58 2 267 1 
145 1 111 3 0 3 350 3 320 3 150 1 58 3 331 1 
268 1 111 1 0 1 350 1 320 1 294 1 58 1 
159 1 268 1 111 1 0 1 350 1 320 1 58 1 42 1 331 1 
159 1 299 1 161 1 111 3 301 1 0 3 350 4 303 1 194 1 2 1 28 1 223 1 277 1 307 1 145 1 50 1 281 1 356 1 33 1 147 1 328 2 54 1 331 2 246 1 122 1 99 1 268 1 181 1 362 1 288 1 248 1 211 1 150 1 58 4 317 1 17 1 270 1 19 1 132 1 342 1 235 1 320 3 293 1 370 1 
226 1 145 1 111 1 315 1 0 1 350 2 320 2 150 1 58 2 
159 1 268 1 111 3 0 3 350 3 194 1 150 2 58 3 307 1 17 1 338 1 91 1 19 1 356 1 320 3 293 1 147 1 331 1 246 1 
159 1 111 2 0 2 350 2 150 1 58 2 221 1 62 1 320 2 331 1 
99 1 161 1 248 1 350 1 211 1 303 1 2 1 28 1 58 1 145 1 50 1 270 1 235 1 370 1 54 1 
99 1 161 1 248 1 350 1 211 1 303 1 2 1 28 1 58 1 151 1 145 1 50 1 235 1 236 1 370 1 
299 3 138 2 192 1 221 2 223 1 277 1 7 1 94 1 33 1 328 2 181 1 362 1 333 1 334 1 365 1 234 1 319 1 132 1 342 1 62 2 43 2 
268 1 111 1 0 1 350 1 320 1 58 1 307 1 267 1 
269 1 354 1 
269 1 354 1 
231 1 108 1 
231 1 108 1 
231 1 108 1 
269 1 354 1 133 1 
269 1 354 1 214 1 
269 2 354 2 231 1 157 1 79 1 108 1 
269 1 354 1 133 1 
269 1 354 1 133 1 
269 1 354 1 216 1 
269 1 354 1 216 1 
269 1 354 1 216 1 
180 1 323 1 111 2 0 2 350 2 142 1 304 1 77 1 78 1 58 2 69 1 214 1 41 1 17 1 278 1 145 1 84 1 354 1 269 1 320 2 147 1 329 1 66 1 136 1 
142 1 77 2 78 2 41 2 318 1 278 2 17 2 6 1 338 1 354 2 269 2 32 1 190 2 157 1 73 1 147 2 359 1 136 3 332 1 
106 1 256 1 207 1 
106 1 256 1 141 1 
256 3 141 1 220 1 72 1 364 1 207 2 
252 1 256 2 141 1 220 1 72 1 207 1 
256 2 141 1 220 2 72 1 207 1 
160 1 297 1 274 4 111 1 192 1 0 1 350 1 163 1 143 1 260 1 259 1 197 1 30 1 262 1 352 2 225 1 228 3 325 2 51 1 7 1 281 1 94 1 282 2 95 1 312 2 147 5 285 2 331 1 120 1 268 1 182 1 58 1 153 1 17 5 130 1 338 2 320 1 294 1 66 1 
274 4 192 1 0 1 143 1 197 1 5 1 51 1 325 2 7 1 281 1 94 1 147 5 331 1 285 2 289 2 58 1 153 1 17 5 338 2 294 1 66 1 297 1 160 1 111 1 350 1 163 1 259 1 260 1 262 1 264 2 352 2 225 3 228 3 312 2 120 1 268 1 182 1 186 1 130 1 320 1 
160 1 274 2 111 1 300 1 0 1 350 1 259 1 260 1 197 1 30 1 262 1 352 2 228 2 51 1 325 1 7 1 281 1 282 1 94 1 95 1 147 3 312 1 331 1 120 1 285 1 268 1 58 1 182 1 153 1 17 3 130 1 338 2 320 1 294 1 66 1 
160 1 274 1 300 1 260 1 262 1 30 1 352 2 228 2 325 1 51 1 7 1 282 1 94 1 95 1 147 2 312 1 285 1 120 1 182 1 153 1 17 2 82 1 338 1 66 1 
213 1 370 1 185 1 
232 1 370 1 
287 1 
161 1 303 1 370 1 
218 1 370 1 
161 1 370 1 
161 1 303 1 117 1 213 2 370 3 351 1 
299 7 181 3 102 1 57 1 89 1 49 3 250 2 290 1 199 1 7 1 292 1 230 1 341 2 217 1 134 1 344 1 43 4 
299 7 181 3 102 1 57 1 89 1 49 3 250 2 290 1 199 1 7 1 292 1 230 1 341 2 217 1 134 1 344 1 43 4 
299 7 181 3 102 1 57 1 89 1 49 3 250 2 290 1 199 1 7 1 292 1 230 1 341 2 217 1 134 1 344 1 43 4 176 1 
254 4 299 28 347 1 192 3 260 3 196 3 89 1 277 1 49 8 199 1 265 1 7 4 202 1 230 2 94 3 33 1 328 2 102 1 362 1 181 12 76 1 57 1 250 3 290 5 366 1 292 2 341 3 342 1 217 2 134 1 63 1 43 16 344 2 109 1 
299 9 89 1 277 2 49 4 199 1 265 1 7 1 230 1 33 2 328 4 204 1 38 1 362 2 181 4 102 1 57 1 250 3 290 1 292 1 342 2 341 2 217 1 43 5 344 1 
45 1 140 1 256 2 141 1 2 1 238 1 200 1 279 1 166 1 169 1 242 1 170 1 207 1 99 1 55 1 56 1 179 2 12 1 124 1 248 1 247 1 211 1 364 1 152 1 128 1 106 1 20 1 271 2 235 1 64 1 
45 1 140 1 256 2 141 1 2 1 238 1 200 1 324 1 279 1 355 1 169 1 242 1 207 1 99 1 55 1 56 1 179 3 12 2 124 1 248 1 211 1 14 1 364 1 152 1 128 1 106 1 20 1 271 3 235 1 64 1 
45 1 256 2 141 1 2 1 238 1 200 1 324 1 355 1 242 1 207 1 99 1 55 1 56 1 179 2 12 2 124 1 248 1 211 1 364 1 152 1 106 1 20 1 271 2 235 1 64 1 
99 1 161 1 101 1 56 2 140 1 179 1 248 1 211 1 349 1 14 1 2 1 28 1 152 2 200 2 279 1 20 2 271 1 235 1 21 1 370 1 361 1 346 1 345 1 
45 1 140 1 256 2 141 1 2 1 238 1 200 1 324 1 279 1 166 1 169 1 207 1 99 1 56 1 179 1 124 1 248 1 247 1 211 1 364 1 152 1 128 1 106 1 20 1 271 1 235 1 
339 1 
297 1 160 1 248 1 211 1 249 1 28 1 262 1 225 1 17 1 51 1 235 1 312 1 147 1 173 1 120 1 
302 1 350 1 163 1 194 1 306 1 307 1 225 2 226 1 167 1 115 1 356 1 147 3 246 1 268 1 58 1 80 2 17 3 337 1 60 1 131 1 320 1 343 1 
302 1 350 1 194 1 163 1 306 1 307 1 225 1 226 1 167 1 115 1 356 1 147 3 174 1 246 1 268 1 58 1 80 3 17 3 60 1 131 1 130 1 338 1 320 1 343 1 
302 1 350 1 163 1 194 1 306 1 307 1 225 2 226 1 167 1 115 1 356 1 147 3 174 1 246 1 268 1 58 1 105 1 80 3 17 3 337 1 60 1 131 1 130 1 338 1 343 1 320 1 
0 1 194 1 197 1 281 1 147 3 246 1 331 1 105 2 58 2 337 2 17 3 60 1 338 1 343 1 294 1 297 1 160 1 111 1 302 1 350 2 163 1 259 1 262 1 306 1 307 1 352 1 225 3 226 1 167 1 115 1 356 1 312 1 120 1 268 2 39 1 126 1 127 1 80 2 131 1 130 1 272 1 368 1 320 2 
194 1 327 2 147 4 97 2 246 1 58 1 105 2 153 2 17 4 337 2 60 1 338 2 156 1 297 1 160 1 302 1 350 1 163 2 262 1 306 1 307 1 352 1 225 4 226 1 228 2 167 1 168 2 115 1 356 1 311 2 312 1 174 2 36 1 120 1 268 1 80 4 131 1 130 1 368 1 320 1 
160 1 297 1 111 1 0 1 302 1 350 2 194 1 259 1 197 1 262 1 306 1 352 1 307 1 226 1 167 1 115 1 281 1 356 1 312 1 147 2 331 1 246 1 120 1 268 2 39 1 58 2 80 2 17 2 130 1 60 1 131 1 338 1 272 1 368 1 320 2 294 1 
160 1 297 1 111 1 0 1 302 1 350 2 194 1 259 1 197 1 262 1 306 1 352 1 307 1 226 1 167 1 115 1 281 1 356 1 312 1 147 2 331 1 246 1 120 1 268 2 39 1 58 2 80 2 17 2 130 1 60 1 131 1 338 1 272 1 368 1 320 2 294 1 
160 1 297 1 302 1 350 1 163 2 194 1 262 1 306 1 352 1 307 1 225 4 226 1 228 2 168 2 167 1 115 1 116 1 229 1 311 2 356 1 243 1 147 4 174 2 177 2 246 1 120 1 100 1 268 1 105 2 58 1 80 4 337 2 17 4 130 1 60 1 131 1 338 1 156 1 320 1 22 2 
0 1 194 1 197 1 281 1 147 2 246 1 331 1 105 1 58 2 337 1 17 2 60 1 338 1 294 1 297 1 160 1 111 1 302 1 350 2 259 1 262 1 306 1 307 1 352 1 225 1 226 1 167 1 115 1 356 1 312 1 174 1 120 1 39 1 268 2 126 1 80 3 131 1 130 1 272 1 368 1 320 2 
0 1 194 1 197 1 281 1 147 2 246 1 331 1 105 1 58 2 337 1 17 2 60 1 338 1 294 1 297 1 160 1 111 1 302 1 350 2 259 1 262 1 306 1 307 1 352 1 225 1 226 1 167 1 115 1 356 1 312 1 174 1 120 1 39 1 268 2 126 1 80 3 131 1 130 1 272 1 368 1 320 2 
194 1 147 4 246 1 58 1 105 2 17 4 337 2 60 1 338 1 156 1 22 2 297 1 160 1 302 1 350 1 163 2 262 1 306 1 307 1 352 1 225 4 226 1 228 2 167 1 168 2 115 1 229 1 356 1 311 2 174 2 36 1 120 1 177 2 268 1 80 4 131 1 130 1 320 1 
299 6 138 1 221 1 223 1 89 1 277 1 49 2 199 1 145 2 7 1 33 1 328 2 362 1 102 1 181 3 334 1 57 1 185 1 250 2 292 1 132 1 342 1 341 1 62 1 217 1 43 3 
254 3 299 12 138 10 88 1 260 2 221 10 196 3 223 2 277 2 49 1 227 1 145 1 7 2 201 1 202 1 94 2 33 2 328 4 122 1 208 1 181 4 362 2 59 1 290 1 366 1 132 1 342 2 62 3 135 1 43 8 
161 1 299 2 26 1 111 1 0 1 350 2 303 1 2 1 28 1 223 1 70 1 114 1 277 1 145 1 50 1 227 1 146 1 33 1 328 2 54 1 99 1 122 1 208 1 248 1 362 1 181 1 211 1 150 1 58 2 270 1 132 1 235 1 342 1 62 1 320 1 293 1 370 1 43 1 
138 2 0 1 2 1 277 2 49 1 50 1 7 1 94 1 328 4 54 1 284 1 99 1 208 1 248 1 211 1 150 1 58 2 250 1 342 2 155 1 62 2 293 1 299 5 161 1 111 1 301 1 350 2 303 1 28 1 260 1 221 2 223 2 33 2 119 1 178 1 122 1 181 2 362 2 40 1 270 1 132 2 235 1 320 1 370 1 43 3 
0 1 46 1 2 3 3 1 276 1 277 2 324 1 244 1 328 4 206 1 99 4 101 1 248 7 211 7 334 1 150 1 58 1 104 1 342 2 21 1 110 1 161 3 299 2 67 1 111 1 350 1 303 1 28 2 223 2 227 1 310 1 170 1 266 1 33 2 37 1 122 1 181 1 362 2 132 2 235 6 320 1 43 1 370 4 86 1 
159 1 299 2 138 1 111 1 0 1 192 1 350 1 260 1 221 1 223 1 277 1 49 1 7 1 94 1 33 1 328 2 331 1 208 1 362 1 181 1 183 1 58 1 250 1 132 1 342 1 62 1 320 1 43 1 
299 2 138 1 362 1 334 1 221 1 223 1 234 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 1 138 1 362 1 192 1 181 1 334 1 221 1 223 1 365 1 277 1 49 1 250 1 132 1 342 1 62 1 33 1 328 2 
299 2 138 1 362 1 334 1 260 1 221 1 223 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 2 138 1 362 1 46 1 221 1 223 1 234 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 1 138 1 362 1 192 1 181 1 46 1 221 1 223 1 365 1 277 1 49 1 250 1 132 1 342 1 62 1 33 1 328 2 
299 2 138 1 362 1 46 1 260 1 221 1 223 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 2 138 1 362 1 260 1 221 1 223 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 2 161 1 301 1 350 1 303 1 2 1 28 1 223 1 277 1 227 1 145 1 50 1 33 1 328 2 54 1 99 1 122 1 248 1 362 1 181 1 211 1 58 1 270 1 132 1 235 1 342 1 43 1 370 1 
299 2 161 1 350 1 303 1 2 1 28 1 223 1 277 1 227 1 145 1 50 1 357 1 33 1 328 2 99 1 122 1 248 1 362 1 181 1 211 1 58 1 151 1 132 1 235 1 342 1 236 1 43 1 370 1 
299 2 138 1 208 1 362 1 260 1 221 1 223 1 277 1 7 1 132 1 342 1 94 1 62 1 33 1 328 2 43 2 
299 2 161 1 138 1 301 1 350 1 303 1 2 1 260 1 221 1 223 1 277 1 50 1 7 1 94 1 170 1 33 1 328 2 119 1 54 1 99 1 248 1 362 1 211 1 58 1 270 1 132 1 235 1 342 1 62 1 43 2 370 1 
159 1 299 3 138 1 111 1 0 1 192 1 350 1 260 1 221 1 223 1 277 1 7 1 94 1 33 1 328 2 331 1 208 1 123 1 181 1 362 1 58 1 132 1 342 1 320 1 43 2 
254 2 299 8 255 1 192 1 29 1 260 1 196 1 261 1 239 1 277 2 49 1 7 1 202 1 94 1 33 2 328 4 204 1 205 1 362 2 181 4 363 1 290 1 366 1 253 1 342 2 85 1 43 4 
299 18 254 2 255 1 192 1 348 1 1 1 27 1 260 2 196 2 261 3 239 2 277 2 49 1 265 1 7 2 94 2 33 2 328 4 204 1 205 1 148 1 181 8 362 2 250 1 81 1 366 2 291 1 253 2 342 2 85 1 43 10 24 1 
254 2 299 8 255 1 192 1 1 1 29 1 260 1 196 1 261 1 239 1 277 2 49 1 7 1 202 1 94 1 33 2 328 4 204 1 205 1 362 2 181 4 290 1 366 1 253 1 342 2 85 1 43 4 
254 2 299 8 255 1 192 1 1 1 29 1 260 1 196 1 261 1 239 1 277 2 49 1 7 1 202 1 94 1 33 2 328 4 204 1 205 1 362 2 181 4 290 1 366 1 253 1 342 2 85 1 43 4 
254 3 299 26 255 1 192 1 348 1 1 1 27 1 260 3 196 2 89 1 261 3 239 1 277 2 49 3 199 1 265 1 7 4 202 1 94 3 33 2 328 4 204 1 205 1 148 1 102 1 362 2 181 11 57 1 250 2 290 1 81 1 366 2 291 1 292 1 253 1 341 1 342 2 217 1 85 1 43 15 24 1 
278 1 269 1 354 1 32 1 77 1 157 1 78 1 322 1 41 1 318 1 
304 1 214 1 
278 1 269 1 354 1 154 1 77 1 78 1 360 1 335 1 41 1 
133 1 74 1 
216 1 79 1 296 1 
142 1 77 1 78 1 41 1 318 1 17 1 278 1 6 1 338 1 354 1 269 1 32 1 190 1 157 1 73 1 147 1 136 2 332 1 
142 1 77 1 78 1 41 1 318 1 17 1 278 1 6 1 338 1 354 1 269 1 32 1 190 1 157 1 73 1 147 1 136 2 332 1 
142 1 77 1 78 1 41 1 318 1 17 1 278 1 6 1 338 1 354 1 269 1 32 1 190 1 157 1 73 1 147 1 136 2 332 1 
133 1 79 1 74 1 
133 1 79 1 74 1 
216 1 296 1 
216 1 79 1 296 1 
69 1 329 1 
274 1 323 1 111 2 0 2 350 2 304 1 69 1 6 1 278 1 145 1 354 1 147 1 329 1 180 1 209 1 77 1 78 1 58 2 214 1 41 1 17 1 269 1 84 1 190 1 320 2 136 1 66 1 
161 1 67 1 299 2 350 2 2 1 276 2 223 1 224 1 277 1 227 1 241 1 53 1 33 1 175 1 328 2 37 1 99 1 122 1 208 1 248 2 362 1 181 1 211 2 58 2 132 1 342 1 235 2 320 2 370 1 43 1 191 1 
99 1 45 1 256 2 141 1 248 2 211 2 257 1 113 1 2 1 364 1 238 1 106 1 200 1 324 1 169 1 235 2 170 1 369 1 207 1 
99 1 45 1 256 2 141 1 248 1 211 1 113 1 2 1 364 1 238 1 106 1 200 1 324 1 169 1 235 1 171 1 207 1 
99 1 161 1 25 1 101 1 248 1 211 1 257 1 2 1 28 1 200 1 235 1 21 1 370 1 346 1 
99 1 45 1 256 2 141 1 248 1 211 1 257 1 113 1 2 1 364 1 238 1 106 1 200 1 324 1 169 1 235 1 369 1 207 1 
298 1 
130 1 338 1 237 1 312 1 316 1 185 1 352 1 
160 1 297 1 163 1 262 1 352 1 225 1 228 1 327 1 312 1 97 1 147 1 120 1 153 1 17 1 130 1 338 2 368 1 
160 2 297 2 161 1 139 1 163 1 303 1 2 1 260 1 28 1 262 2 263 1 352 3 225 2 228 4 325 2 51 1 165 1 308 1 7 1 94 1 283 1 356 1 117 1 172 1 147 2 312 2 232 2 284 1 285 2 120 2 99 2 248 1 211 1 213 1 153 2 17 2 338 2 188 1 235 1 321 1 370 4 
160 2 297 2 254 1 348 1 192 2 163 1 27 1 260 2 196 1 90 1 262 2 352 5 225 1 228 6 51 1 325 5 7 2 308 2 94 2 358 1 147 1 312 6 286 1 285 5 148 1 120 2 233 1 153 3 17 1 81 1 366 1 130 2 338 5 24 1 
160 1 297 1 111 1 275 1 0 1 350 1 259 1 90 1 89 1 197 1 262 1 352 2 308 2 7 2 281 1 147 1 312 2 120 1 331 1 268 1 102 1 58 1 17 1 292 1 272 1 217 1 320 1 294 1 
297 1 160 1 237 1 262 1 316 1 352 1 130 1 338 1 312 1 120 1 
228 2 338 1 325 1 7 1 94 1 260 1 153 1 352 2 285 1 
17 1 130 1 338 1 163 1 147 1 225 1 
297 1 160 1 248 1 211 1 249 1 28 1 103 1 262 1 225 1 51 1 235 1 312 1 173 1 120 1 
299 1 161 1 111 2 301 1 0 2 350 3 303 1 2 1 28 1 223 1 277 1 145 1 50 1 281 1 33 1 328 2 54 1 331 2 122 1 99 1 181 1 362 1 248 1 211 1 58 3 317 1 270 1 132 1 342 1 235 1 320 2 370 1 
297 1 160 1 262 1 153 2 352 2 228 4 130 2 325 2 51 1 338 4 341 1 312 1 358 1 285 2 120 1 
240 1 78 1 41 1 
32 1 15 1 78 1 69 1 41 1 
240 1 78 1 41 1 
240 1 78 1 41 1 
314 1 78 1 41 1 
314 1 78 1 41 1 
314 1 78 1 41 1 
78 1 41 1 
269 1 354 1 
299 8 102 1 181 4 362 2 57 1 89 1 277 2 49 3 250 2 290 1 199 1 265 1 7 1 292 1 341 1 342 2 217 1 33 2 328 4 43 4 
299 6 181 3 102 1 57 1 89 1 185 1 250 2 49 2 199 1 292 1 7 1 341 1 217 1 43 3 
299 2 362 1 260 1 277 1 340 1 7 1 342 1 94 1 33 1 328 2 43 2 
254 2 299 6 192 1 181 3 260 1 196 1 49 1 290 1 366 1 7 1 202 1 94 1 43 3 
299 22 254 2 275 1 192 1 260 2 196 2 89 3 277 1 49 8 199 1 265 1 7 5 202 1 94 2 33 1 328 2 102 2 181 9 362 1 57 1 59 1 250 4 290 4 292 2 341 1 342 1 217 2 135 1 43 13 
299 1 254 1 181 1 
299 1 196 1 43 1 
299 5 181 2 192 1 260 1 49 1 290 1 7 1 94 1 43 3 284 1 
299 10 254 1 192 1 348 1 27 1 260 2 196 1 277 2 49 2 265 1 7 2 94 2 33 2 328 4 204 1 148 1 181 4 362 2 250 1 81 1 290 1 366 1 342 2 43 6 24 1 
299 6 102 1 181 3 89 1 250 1 49 2 290 1 7 1 292 1 217 1 43 3 
11 1 299 3 181 2 362 1 57 1 277 1 49 2 250 1 290 1 199 1 265 1 292 1 342 1 217 1 33 1 328 2 43 1 
299 10 275 1 362 1 181 5 102 1 89 2 277 1 250 3 49 5 290 2 292 2 7 2 342 1 217 2 33 1 328 2 204 1 43 5 
299 2 362 1 277 1 7 1 342 1 94 1 33 1 204 1 328 2 43 2 
299 2 362 1 260 1 277 1 7 1 342 1 94 1 33 1 204 1 328 2 43 2 
11 1 299 3 181 2 362 3 29 1 277 3 250 1 49 2 290 1 265 1 292 1 342 3 217 1 33 3 204 1 328 6 43 1 
254 4 299 31 347 1 192 3 29 1 260 3 196 3 89 2 277 5 49 9 199 1 265 2 7 5 202 1 94 3 33 5 328 10 204 1 11 1 102 2 181 15 362 5 57 1 250 4 290 5 366 1 292 3 340 1 341 1 342 5 217 3 63 1 43 16 109 1 
299 8 254 1 196 1 89 1 277 1 49 2 199 1 7 1 33 1 328 2 204 1 148 1 181 4 362 1 102 1 57 1 250 2 366 1 292 1 341 1 342 1 217 1 43 4 
299 11 254 2 260 1 196 1 89 1 277 2 49 3 199 1 7 2 202 1 94 1 33 2 204 1 328 4 148 1 102 1 181 5 362 2 57 1 250 2 290 1 366 1 292 1 340 1 341 1 342 2 217 1 43 6 
299 16 254 1 192 1 348 1 27 1 260 2 196 1 89 1 277 3 49 4 199 1 265 1 7 3 94 2 33 3 328 6 204 1 148 1 102 1 181 7 362 3 57 1 250 3 81 1 290 1 366 1 292 1 340 1 341 1 342 3 217 1 43 9 24 1 
299 23 254 1 275 1 348 1 192 1 27 1 260 2 196 1 89 3 277 3 49 7 199 1 265 1 7 5 94 2 33 3 328 6 204 1 148 1 102 2 181 10 362 3 57 1 250 4 290 3 81 1 366 1 292 2 340 1 341 1 342 3 217 2 43 13 24 1 
299 8 254 1 196 1 89 1 277 1 49 2 199 1 7 1 33 1 328 2 204 1 148 1 181 4 362 1 102 1 57 1 250 2 366 1 292 1 341 1 342 1 217 1 43 4 
299 10 254 1 192 1 348 1 27 1 260 2 196 1 277 2 49 2 265 1 7 2 94 2 33 2 328 4 204 1 148 1 181 4 362 2 250 1 81 1 290 1 366 1 342 2 43 6 24 1 
299 10 254 1 192 1 348 1 27 1 260 2 196 1 277 3 49 1 265 1 7 2 94 2 33 3 328 6 204 1 148 1 181 4 362 3 250 1 81 1 366 1 340 1 342 3 43 6 24 1 
299 13 254 1 192 1 348 1 27 1 29 1 260 3 196 1 277 4 49 5 265 2 7 3 94 3 33 4 204 1 328 8 148 1 181 4 362 4 250 2 290 3 81 1 366 1 342 4 43 9 24 1 
299 7 181 4 102 1 57 2 89 1 250 3 49 6 199 1 290 3 292 3 7 1 217 3 43 3 
299 10 254 1 192 1 348 1 27 1 29 1 260 2 196 1 277 3 49 1 265 1 7 2 94 2 33 3 204 1 328 6 148 1 181 4 362 3 250 1 81 1 366 1 342 3 43 6 24 1 
226 1 145 1 315 1 350 1 320 1 58 1 35 1 
121 1 268 1 47 1 16 1 31 1 215 1 145 1 326 1 
99 1 161 1 101 1 248 1 211 1 235 1 2 1 21 1 28 1 370 1 185 1 
99 1 161 1 111 1 0 1 248 1 350 2 211 1 303 1 2 1 150 1 28 1 58 2 145 1 50 1 270 1 235 1 320 1 370 1 
161 2 218 1 111 1 0 2 350 2 303 2 2 1 307 1 145 1 50 1 313 1 246 1 99 1 268 1 248 1 211 1 150 1 58 2 270 1 235 1 320 2 65 1 370 3 
161 2 218 1 111 1 0 2 350 2 303 2 2 1 307 1 145 1 50 1 313 1 246 1 99 1 268 1 248 2 211 2 150 1 58 2 235 2 320 2 236 1 65 1 370 3 273 1 
99 1 161 1 218 1 248 3 211 3 303 1 2 1 28 1 213 1 225 1 17 2 130 1 18 1 338 1 356 1 235 3 9 1 147 2 65 1 232 1 370 4 273 1 313 1 
99 1 161 1 218 1 248 3 211 3 303 1 2 1 28 1 213 1 263 1 225 1 17 2 130 1 338 1 356 1 235 3 147 2 65 1 232 1 370 4 273 1 313 1 
99 1 248 1 211 1 235 1 2 1 110 1 
161 2 67 1 303 1 2 2 28 2 3 1 324 1 170 1 117 1 266 1 244 1 99 3 248 6 211 6 104 1 336 1 235 5 370 3 110 1 86 1 
138 1 0 1 2 1 89 1 277 2 49 2 199 1 50 1 145 2 7 1 53 1 328 4 54 1 99 1 208 1 248 1 102 1 211 1 150 1 58 2 57 1 250 2 292 1 342 2 341 1 62 1 217 1 161 1 299 6 111 1 301 1 350 2 303 1 221 1 223 2 170 1 33 2 119 1 40 1 362 2 181 3 270 1 132 2 235 1 320 1 370 1 43 3 
160 2 297 2 274 1 237 1 163 1 28 1 262 2 263 1 352 1 225 2 165 1 356 1 172 1 312 1 147 3 232 1 120 2 248 1 211 1 103 1 213 1 316 1 17 3 130 1 338 1 235 1 321 1 370 2 
99 2 161 1 139 1 248 2 211 2 303 1 2 1 213 1 170 1 235 2 117 1 370 2 110 1 
99 1 161 1 101 1 248 4 170 1 211 4 235 4 2 1 21 1 28 1 98 1 370 1 273 1 
99 2 161 1 248 2 13 1 211 2 303 1 2 1 235 2 310 1 266 1 370 1 313 1 206 1 86 1 
99 1 106 1 256 1 141 1 248 1 211 1 235 1 2 1 28 1 238 1 
99 1 67 1 161 1 248 2 211 2 2 1 324 1 241 1 170 1 235 2 370 1 
99 2 67 1 161 2 101 1 248 5 211 5 2 2 28 1 3 1 235 4 170 1 244 1 21 1 98 1 370 3 313 1 
99 2 67 1 161 2 101 1 248 5 211 5 2 2 28 1 3 1 235 4 170 1 309 1 21 1 98 1 370 3 313 1 
99 1 161 1 111 1 0 1 248 1 350 2 211 1 303 1 2 1 150 1 28 1 58 2 145 1 50 1 235 1 320 1 236 1 370 1 
99 2 161 1 248 1 211 1 303 1 2 1 336 1 235 1 117 1 266 1 370 1 313 1 86 1 
268 1 219 1 125 1 350 1 58 1 47 1 224 1 145 1 320 1 118 2 175 1 191 1 
274 1 111 1 219 1 0 1 350 2 194 1 259 1 197 1 224 1 307 1 52 1 281 1 203 1 356 1 147 2 118 2 175 1 331 1 246 1 268 2 149 1 125 1 58 2 17 2 130 1 338 1 19 1 320 2 294 1 191 1 
219 1 125 1 
52 1 203 1 118 1 
55 1 242 1 64 1 185 1 
55 1 279 1 179 1 140 1 271 1 242 1 64 1 
56 1 20 1 179 1 
55 1 83 1 279 1 112 1 179 3 140 1 271 3 247 1 242 1 258 2 64 1 23 1 
55 1 279 1 93 1 179 2 140 1 12 1 271 2 242 1 64 1 
106 1 279 1 179 1 140 1 256 1 87 1 271 1 247 1 64 1 144 1 207 1 
279 1 179 1 140 1 271 1 247 1 242 1 64 1 
55 1 279 1 179 1 140 1 271 1 247 1 242 2 
140 2 179 2 247 1 222 1 4 1 184 1 279 2 271 2 242 1 64 1 
44 1 55 1 140 1 179 3 12 2 87 1 247 1 164 1 305 1 279 1 271 3 242 1 64 2 
55 1 140 1 179 2 256 2 12 1 141 1 247 1 364 1 129 1 106 1 279 1 271 2 242 1 64 1 207 1 
44 1 55 1 140 2 179 4 12 2 87 1 247 1 279 2 92 1 93 1 271 4 242 1 64 2 
55 1 279 1 179 1 140 1 271 1 247 1 242 1 64 1 
44 1 55 2 112 1 179 4 140 1 12 2 87 1 258 1 83 1 279 1 271 4 242 2 64 3 10 1 
55 1 140 1 179 2 68 1 12 1 247 1 193 1 212 1 279 1 271 2 242 1 64 1 
55 1 112 1 140 1 179 3 247 1 75 1 258 2 279 1 83 2 271 3 242 1 64 1 
162 1 8 1 64 1 
279 1 179 1 140 1 271 1 247 1 353 1 
55 1 279 1 179 2 140 1 12 1 271 2 247 1 242 1 64 1 305 1 
107 1 
55 1 279 1 179 1 140 1 271 1 247 1 242 1 64 1 
55 1 279 1 179 3 140 1 12 1 271 3 247 1 242 1 258 1 64 1 305 1 
44 1 87 1 64 1 10 1 
242 1 64 1 

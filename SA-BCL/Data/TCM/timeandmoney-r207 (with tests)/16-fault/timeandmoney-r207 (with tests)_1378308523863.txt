#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (79,272) (79,272) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (79,272) (79,272) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (79,272) (79,272) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (79,272) (79,272) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 334 (68,167,185) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 120 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 88 112 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 171 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 88 (182,321) 75 50 (76,93) 198 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 98 7 66 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 64 301 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 88 (51,73) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 88 (182,321) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 88 (182,321) 75 50 (76,93) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 37 292 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 294 1 295 1 2 1 122 1 302 1 272 1 162 1 79 1 126 1 288 1 248 1 69 1 
71 1 294 1 295 1 2 1 302 1 122 1 272 1 162 1 79 1 126 1 288 1 248 1 69 1 
71 1 294 1 295 1 2 1 302 1 122 1 272 1 162 1 79 1 126 1 288 1 248 1 69 1 
71 1 294 1 295 1 2 1 302 1 122 1 272 1 162 1 79 1 126 1 288 1 248 1 69 1 
240 1 71 1 99 2 264 3 54 1 35 1 2 4 207 1 46 1 302 4 122 1 162 1 352 3 353 2 128 1 288 1 248 1 356 1 
264 1 71 1 240 1 226 1 294 1 2 2 207 1 302 2 162 1 123 1 126 1 211 1 38 1 288 1 248 1 356 1 
71 2 264 2 294 1 2 3 35 1 207 1 302 3 352 1 353 1 82 1 288 2 248 1 356 1 
71 2 264 5 240 1 94 1 294 1 42 1 2 9 46 1 302 9 122 1 82 1 128 1 248 1 99 2 54 1 35 3 207 1 89 1 162 1 352 7 353 4 316 1 288 2 356 1 
71 2 264 5 240 1 94 1 294 1 42 1 2 9 46 1 302 9 122 1 82 1 128 1 248 1 99 2 54 1 35 3 207 1 89 1 162 1 352 7 353 4 316 1 288 2 356 1 
70 1 201 1 120 1 
265 1 201 1 180 2 
145 2 148 1 210 2 20 2 172 2 349 2 158 1 339 2 
115 1 188 1 291 1 297 1 325 1 20 2 298 2 3 1 269 1 195 2 145 2 221 1 146 1 148 1 124 2 303 1 172 2 328 1 329 1 173 2 52 1 249 1 30 1 224 1 100 1 177 1 101 2 349 3 368 1 158 1 182 1 373 1 63 1 210 3 212 1 339 2 40 1 
233 1 145 1 266 1 148 1 210 1 20 1 141 1 172 1 349 1 339 1 
70 1 310 1 154 1 349 1 230 1 134 1 233 1 14 1 210 1 223 1 201 1 86 1 339 1 113 1 
70 1 266 1 250 1 20 2 349 2 230 1 134 2 145 2 233 2 148 1 14 1 141 1 210 2 172 2 223 1 201 1 86 1 339 2 113 2 
134 1 338 1 284 1 190 1 113 1 
70 1 134 2 153 1 338 1 201 1 190 1 24 1 113 2 
134 1 190 1 113 1 
266 1 250 1 20 1 349 1 134 1 338 1 233 1 145 1 148 1 141 1 210 1 172 1 113 1 339 1 
201 1 
70 1 134 2 338 1 201 1 190 1 60 1 24 1 113 2 
70 1 346 1 309 1 229 2 324 1 311 2 190 2 24 1 159 1 134 5 256 1 160 1 338 2 80 2 286 1 201 1 236 1 165 1 113 5 
158 1 120 1 
20 1 349 2 369 1 158 1 191 1 233 1 145 1 140 1 210 2 172 1 339 2 
91 1 227 1 354 1 
249 1 115 1 291 1 100 1 224 1 101 1 349 1 158 1 3 1 48 1 182 1 124 1 210 1 328 1 173 1 40 1 
249 1 115 1 224 1 100 1 291 1 227 1 101 1 20 1 349 2 326 1 3 1 182 1 124 1 210 2 328 1 172 1 173 1 40 1 332 1 339 1 
233 1 140 1 210 2 20 2 172 2 349 2 326 1 158 1 339 2 
233 1 266 1 210 1 20 1 172 1 349 1 339 1 
20 1 349 1 369 1 191 1 145 1 233 1 210 1 172 1 339 1 
115 1 188 1 291 1 325 1 20 3 298 2 326 1 3 1 191 1 195 1 145 2 221 1 146 1 148 1 124 1 303 1 328 1 172 3 223 1 200 1 86 1 173 1 52 1 332 1 249 1 224 1 100 1 177 1 101 1 349 4 368 1 158 1 230 1 134 1 182 1 233 1 161 1 63 1 14 1 210 4 212 1 40 1 339 3 113 1 
116 1 20 1 154 1 349 2 326 1 158 1 233 1 140 1 210 2 172 1 339 2 
20 3 349 3 326 2 191 1 230 1 371 1 134 1 145 1 233 1 161 1 14 1 210 3 172 3 223 1 201 1 86 1 113 1 332 1 339 3 
227 1 20 2 349 2 326 1 191 1 145 1 210 2 172 2 354 1 339 2 
249 1 115 1 291 1 100 1 224 1 101 1 349 1 158 1 3 1 182 1 124 1 210 1 328 1 173 1 40 1 
249 1 291 1 100 1 224 1 101 1 349 1 22 1 158 1 3 1 124 1 210 1 328 1 51 1 173 1 40 1 
188 1 278 1 177 1 368 1 298 2 206 1 195 1 49 1 63 1 146 1 315 1 171 1 212 1 52 1 
11 1 20 1 349 1 230 1 233 1 210 1 172 1 339 1 
20 4 349 4 326 2 158 1 191 1 257 1 233 1 145 1 140 1 210 4 172 4 16 1 332 1 339 4 
233 1 266 1 210 1 20 1 172 1 349 1 339 1 
5 1 68 1 
5 1 68 1 
334 1 167 1 
334 1 167 1 
5 1 334 1 68 1 167 1 
5 1 68 1 275 1 
5 1 334 1 68 1 167 1 
5 1 185 1 68 1 
5 1 68 1 275 1 
5 1 68 1 275 1 
5 1 132 1 68 1 
5 1 132 1 68 1 
5 1 132 1 68 1 
276 1 143 2 56 1 296 1 21 2 103 2 23 1 231 1 5 2 134 2 197 1 327 1 139 2 147 1 65 3 201 1 68 2 374 2 113 2 
143 1 357 1 358 1 117 1 20 2 21 1 220 1 5 1 172 2 56 1 349 2 178 1 158 1 103 1 134 1 139 1 65 1 210 2 185 1 260 1 68 1 213 1 113 1 339 2 
240 1 122 1 162 1 
240 1 226 1 162 1 
4 1 122 2 226 1 162 3 216 1 168 1 
4 1 122 1 226 1 162 2 216 1 39 1 
4 1 122 1 226 1 162 2 216 2 
70 1 17 1 41 1 357 1 265 1 324 2 219 1 44 1 190 1 220 1 170 1 24 1 194 1 49 1 171 1 80 1 201 2 344 1 331 2 229 1 311 1 180 2 134 5 90 1 338 4 61 1 286 1 236 2 287 1 238 1 213 1 113 5 
290 1 70 1 17 1 41 2 265 3 324 5 144 5 219 3 220 4 190 6 24 1 194 3 49 3 171 3 80 2 83 1 247 1 201 5 129 1 229 2 311 2 180 6 159 1 134 9 90 3 338 7 61 2 283 1 284 5 286 1 236 6 287 3 238 3 262 1 113 9 
70 1 41 1 265 1 266 1 324 2 20 1 219 1 44 1 220 1 194 1 145 1 49 1 148 1 171 1 80 1 172 1 201 2 344 1 331 1 229 1 250 1 349 1 311 1 180 2 159 1 134 3 338 2 90 1 233 1 61 1 210 1 141 1 238 1 287 1 236 2 339 1 113 3 
290 1 41 1 44 1 194 2 145 1 49 2 148 1 201 3 344 1 250 1 311 1 349 1 159 1 61 1 210 1 113 4 70 1 265 2 266 1 324 3 20 1 219 2 220 2 171 2 80 1 172 1 83 1 331 2 229 1 180 4 134 4 90 2 338 3 233 1 283 1 141 1 236 4 287 2 238 2 339 1 
88 1 120 1 
267 1 3 1 
6 1 
249 1 3 1 
249 1 224 1 78 1 3 1 88 1 112 1 
249 1 224 1 3 1 
3 1 243 1 
308 4 340 1 297 2 1 1 156 1 157 1 350 1 195 5 90 1 313 1 183 1 49 1 106 2 26 1 96 3 212 3 274 1 
308 4 340 1 297 2 1 1 156 1 157 1 350 1 90 1 313 1 195 6 183 1 49 1 106 2 26 1 96 3 212 4 274 1 
308 4 340 1 297 2 1 1 156 1 157 1 350 1 195 5 90 1 313 1 183 1 49 1 258 1 106 2 26 1 96 3 212 3 274 1 
114 1 187 1 188 1 340 1 297 16 1 2 298 2 195 33 49 5 146 1 26 2 27 1 171 2 199 1 96 7 7 1 274 1 98 3 308 12 177 1 205 1 156 1 157 5 350 3 13 1 313 2 90 5 183 3 106 3 63 1 110 3 212 17 238 2 287 2 
188 2 297 3 1 1 298 4 299 1 195 8 49 1 26 1 146 2 96 4 274 1 55 1 308 5 177 2 205 1 156 1 157 1 350 1 90 1 313 1 183 1 106 2 63 2 212 5 
264 1 240 1 71 1 294 1 43 1 2 2 168 1 193 1 122 1 302 2 124 1 328 1 330 1 29 1 173 1 248 1 152 1 307 1 100 1 226 1 175 1 101 1 207 1 232 1 184 1 162 2 352 1 111 1 288 1 356 1 
264 1 240 1 71 1 72 1 294 1 241 1 43 1 2 3 168 1 193 1 122 1 302 3 124 1 328 1 330 1 173 1 306 1 307 1 100 1 226 1 175 1 101 1 207 1 232 1 184 1 162 2 352 2 111 1 288 1 356 1 
264 1 240 1 294 1 72 1 241 1 43 1 2 2 168 1 302 2 122 1 124 1 328 1 330 1 173 1 307 1 100 1 226 1 175 1 101 1 207 1 232 1 184 1 162 2 352 2 356 1 
71 1 291 1 294 2 43 2 2 1 3 1 302 1 124 1 222 1 328 1 28 1 342 1 173 1 249 1 306 1 100 1 101 1 367 1 232 2 351 1 209 1 184 2 288 1 
240 1 71 1 72 1 294 1 43 1 2 1 168 1 193 1 122 1 302 1 124 1 328 1 330 1 173 1 248 1 152 1 307 1 100 1 226 1 175 1 101 1 232 1 184 1 162 2 111 1 288 1 
225 1 
291 2 41 1 341 1 3 1 190 6 244 1 97 2 201 2 150 1 249 1 9 2 100 1 310 1 101 2 203 2 154 1 251 2 311 1 349 1 254 2 14 1 259 1 210 1 263 1 113 5 70 1 265 2 324 2 24 3 360 1 124 2 222 1 80 1 28 1 328 1 223 1 173 2 86 1 174 1 333 4 229 1 34 1 179 1 230 1 280 1 180 2 370 1 134 5 233 1 137 2 286 1 237 2 236 2 186 1 339 1 
333 2 310 1 341 1 154 1 179 1 349 1 190 2 280 1 230 1 60 1 370 1 24 1 134 3 233 1 244 1 14 1 210 1 223 1 97 1 86 1 113 3 339 1 
70 1 341 1 190 1 24 1 244 1 223 1 201 1 86 1 333 3 9 1 310 1 154 1 349 1 179 1 230 1 280 1 370 1 60 1 134 3 233 1 14 1 210 1 339 1 113 3 
70 1 341 1 190 2 24 1 244 1 223 1 97 1 201 1 86 1 333 3 9 1 310 1 154 1 349 1 179 1 230 1 280 1 60 1 370 1 134 3 233 1 14 1 210 1 237 1 339 1 113 3 
341 1 190 7 244 1 149 1 97 4 201 5 150 1 9 4 310 1 154 1 203 2 251 2 349 1 311 1 253 1 254 2 60 1 12 1 14 1 210 1 113 5 70 5 265 2 324 1 218 1 24 3 80 1 223 1 86 1 333 6 228 1 229 1 34 1 179 1 280 1 230 1 370 1 134 5 233 1 137 2 286 1 237 4 236 1 339 1 
70 1 265 2 324 1 341 1 190 4 24 2 244 1 80 1 223 1 97 2 201 2 150 1 86 1 333 4 9 2 310 1 229 1 203 2 34 1 154 1 251 2 179 1 311 1 349 1 254 2 230 1 280 1 180 2 370 1 134 4 233 1 137 2 14 1 210 1 286 1 237 2 236 1 186 1 113 4 339 1 
70 1 265 2 324 1 341 1 190 4 24 2 244 1 80 1 223 1 149 1 97 2 201 1 150 1 86 1 333 4 9 2 310 1 228 1 229 1 203 2 34 1 154 1 251 2 253 1 311 1 349 1 179 1 254 2 230 1 280 1 370 1 134 4 233 1 137 2 14 1 210 1 286 1 237 2 236 1 339 1 113 4 
70 1 265 2 324 1 341 1 190 4 24 2 244 1 80 1 223 1 149 1 97 2 201 1 150 1 86 1 333 4 9 2 310 1 228 1 229 1 203 2 34 1 154 1 251 2 253 1 311 1 349 1 179 1 254 2 230 1 280 1 370 1 134 4 233 1 137 2 14 1 210 1 286 1 237 2 236 1 339 1 113 4 
341 1 189 1 190 2 145 1 244 1 245 2 148 1 201 1 53 2 310 1 57 1 250 1 154 1 251 2 349 2 311 1 253 1 254 2 14 1 210 2 113 4 70 1 266 1 324 1 20 1 24 2 80 1 172 1 223 1 86 1 364 1 333 2 229 1 34 1 179 1 280 1 230 1 370 1 180 2 134 4 233 2 141 1 286 1 236 1 339 2 
70 1 265 2 324 1 341 1 190 5 24 2 244 1 80 1 223 1 149 1 97 3 201 1 150 1 86 1 333 5 9 3 310 1 228 1 229 1 203 2 34 1 154 1 251 2 253 1 311 1 349 1 179 1 254 2 230 1 280 1 370 1 134 4 12 1 233 1 137 2 14 1 210 1 286 1 236 1 237 3 339 1 113 4 
70 1 265 2 324 1 341 1 190 5 24 2 244 1 80 1 223 1 149 1 97 3 201 1 150 1 86 1 333 5 9 3 310 1 228 1 229 1 203 2 34 1 154 1 251 2 253 1 311 1 349 1 179 1 254 2 230 1 280 1 370 1 134 4 12 1 233 1 137 2 14 1 210 1 286 1 236 1 237 3 339 1 113 4 
324 1 341 1 190 1 24 1 244 1 245 1 80 1 223 1 86 1 53 1 333 2 310 1 229 1 57 1 34 1 154 1 251 1 179 1 311 1 349 1 254 1 230 1 280 1 180 1 370 1 134 3 233 1 14 1 210 1 286 1 236 1 186 1 113 3 339 1 
308 2 188 1 227 1 177 1 297 2 368 1 298 2 156 1 158 1 120 1 206 1 350 1 195 5 90 1 313 1 183 1 91 1 106 1 49 1 63 1 146 1 96 2 354 1 212 3 274 1 52 1 
188 2 217 1 325 1 297 8 298 4 195 13 49 1 146 2 171 1 125 1 329 1 7 1 52 1 98 3 308 1 227 10 10 1 177 2 252 1 368 2 158 1 157 1 90 2 91 10 63 2 110 3 354 3 212 5 238 2 287 2 239 1 355 1 
115 1 291 1 188 1 217 1 20 1 325 1 297 1 326 1 298 2 3 1 48 1 195 2 146 1 124 1 328 1 172 1 329 1 363 1 173 1 52 1 332 1 249 1 224 1 100 1 177 1 101 1 349 2 368 1 158 1 182 1 135 1 63 1 210 2 354 1 212 1 40 1 339 1 289 1 
291 1 188 3 297 9 298 6 3 2 195 17 49 3 146 3 303 2 96 2 52 3 249 2 100 2 308 6 101 3 312 1 349 3 156 1 158 1 157 4 104 1 350 1 313 1 106 1 63 3 210 3 109 2 354 5 212 8 115 2 72 1 217 1 325 1 20 1 268 2 118 1 326 1 76 2 124 3 171 2 172 1 328 2 329 1 274 1 173 3 332 1 224 2 227 5 177 3 279 2 368 3 182 2 90 3 183 1 91 5 238 2 287 2 339 1 40 2 
291 2 188 2 72 1 20 1 297 1 325 1 326 1 298 4 3 3 269 2 169 1 195 2 95 1 146 2 124 8 222 1 273 1 172 1 328 2 28 1 329 1 202 1 29 1 173 8 52 2 249 2 100 2 177 2 101 7 349 1 368 2 206 1 208 1 92 1 63 2 210 1 37 1 212 1 339 1 
188 1 217 1 20 1 297 1 298 2 191 1 195 2 145 1 49 1 146 1 171 1 172 1 52 1 177 1 176 1 349 1 368 1 90 1 63 1 210 1 212 1 238 1 287 1 339 1 
308 1 188 1 227 1 177 1 323 1 297 2 368 1 298 2 157 1 206 1 195 2 90 1 91 1 63 1 146 1 354 1 287 1 52 1 
188 1 177 1 368 1 298 2 206 1 195 1 49 1 63 1 146 1 315 1 171 1 212 1 52 1 
188 1 227 1 177 1 297 2 368 1 298 2 206 1 195 3 90 1 49 1 91 1 63 1 146 1 171 1 354 1 212 1 238 1 287 1 52 1 
308 1 188 1 227 1 177 1 323 1 297 2 368 1 298 2 157 1 195 2 90 1 91 1 63 1 146 1 354 1 202 1 287 1 52 1 
188 1 177 1 368 1 298 2 195 1 49 1 63 1 146 1 315 1 171 1 212 1 202 1 52 1 
188 1 227 1 177 1 297 2 368 1 298 2 195 3 90 1 49 1 91 1 63 1 146 1 171 1 354 1 212 1 202 1 238 1 287 1 52 1 
188 1 227 1 177 1 297 2 368 1 298 2 90 1 195 3 49 1 91 1 63 1 146 1 171 1 354 1 212 1 238 1 287 1 52 1 
115 1 291 1 188 1 297 1 325 1 298 2 3 1 195 2 146 1 124 1 303 1 328 1 329 1 173 1 52 1 249 1 224 1 100 1 177 1 101 1 349 1 368 1 158 1 182 1 63 1 210 1 212 1 40 1 
291 1 188 1 297 1 325 1 22 1 298 2 3 1 195 2 146 1 124 1 328 1 329 1 51 1 173 1 52 1 249 1 224 1 100 1 177 1 101 1 349 1 155 1 368 1 158 1 63 1 210 1 212 1 40 1 
188 1 227 1 177 1 217 1 297 2 368 1 298 2 195 3 90 1 49 1 91 1 63 1 146 1 171 1 354 1 212 1 238 1 287 1 52 1 
115 1 188 1 297 2 298 2 3 1 195 3 49 1 146 1 171 1 124 1 303 1 328 1 29 1 173 1 52 1 249 1 224 1 100 1 227 1 177 1 101 1 349 1 368 1 90 1 182 1 91 1 63 1 109 1 210 1 354 1 212 1 287 1 238 1 40 1 
188 1 217 1 20 1 297 2 298 2 191 1 195 4 145 1 49 1 146 1 171 1 172 1 52 1 227 1 177 1 349 1 368 1 90 1 91 1 63 1 210 1 354 1 212 2 238 1 287 1 166 1 339 1 
188 3 297 28 298 6 192 2 299 1 195 48 47 1 49 8 146 3 96 2 7 3 98 5 308 10 10 2 252 2 205 1 156 1 157 8 59 1 255 1 105 1 350 1 313 1 62 1 106 1 63 3 107 1 110 5 212 20 66 1 215 1 19 1 18 1 171 7 274 1 365 4 177 3 90 8 183 1 234 1 285 1 142 1 287 7 238 7 
188 3 215 1 18 1 19 1 297 27 298 6 192 1 299 1 47 1 195 45 49 7 146 3 171 6 96 2 7 2 274 1 98 4 365 4 308 9 10 2 177 3 205 1 252 2 156 1 157 7 59 1 255 1 350 1 105 1 313 1 90 8 183 1 234 1 106 1 62 1 63 3 285 1 110 4 142 1 66 1 212 18 238 7 287 7 
188 2 215 1 18 1 19 1 297 26 298 4 192 1 299 1 47 1 195 45 49 8 146 2 171 7 96 2 7 2 274 1 98 4 365 4 308 9 10 2 177 2 205 1 252 2 156 1 157 7 59 1 255 1 350 1 105 1 313 1 90 8 183 1 234 1 106 1 62 1 63 2 285 1 110 4 66 1 212 19 238 7 287 7 
188 3 215 1 18 1 19 1 297 26 298 6 192 1 299 1 47 1 195 43 49 7 146 3 171 6 96 2 7 2 274 1 98 4 31 1 365 3 308 9 10 2 177 3 205 1 252 2 156 1 157 7 59 1 255 1 350 1 105 1 313 1 90 8 183 1 106 1 62 1 63 3 285 1 110 4 142 1 66 1 212 17 238 7 287 7 
188 2 215 1 18 1 19 1 297 14 298 4 192 2 299 1 47 1 195 23 49 2 146 2 171 2 7 2 98 2 365 4 308 1 177 2 205 1 157 1 59 1 255 1 105 2 90 3 234 1 62 1 63 2 285 1 110 2 212 9 66 1 238 3 287 3 
5 1 143 1 197 1 327 1 139 1 21 1 131 1 68 1 103 1 23 1 
358 1 185 1 
5 1 8 1 143 1 139 1 235 1 81 1 21 1 68 1 103 1 
276 1 143 1 56 1 296 1 21 1 103 1 23 1 231 1 134 1 5 1 197 1 327 1 139 1 65 2 201 1 68 1 374 1 113 1 
276 1 143 1 56 1 296 1 21 1 103 1 23 1 231 1 134 1 5 1 197 1 327 1 139 1 65 2 201 1 68 1 374 1 113 1 
276 1 143 1 56 1 296 1 21 1 103 1 23 1 231 1 134 1 5 1 197 1 327 1 139 1 65 2 201 1 68 1 374 1 113 1 
348 1 151 1 275 1 
348 1 151 1 275 1 
132 1 372 1 
132 1 151 1 372 1 
178 1 260 1 
143 1 357 1 358 1 117 1 296 1 20 2 21 1 220 1 5 1 172 2 349 2 178 1 158 1 103 1 134 1 338 1 139 1 15 1 210 2 65 1 185 1 260 1 68 1 374 1 213 1 113 1 339 2 
348 1 275 1 
132 1 151 1 372 1 
210 1 349 1 359 1 339 1 
240 1 345 1 100 1 307 1 226 1 72 1 175 1 101 2 43 1 168 1 119 1 122 1 162 2 124 2 328 1 111 1 29 1 85 1 173 2 
240 1 307 1 100 1 226 1 72 1 175 1 101 1 74 1 43 1 168 1 122 1 162 2 124 1 328 1 111 1 85 1 173 1 
249 1 345 1 100 1 291 1 347 1 101 1 43 1 3 1 351 1 124 1 222 1 328 1 28 1 173 1 
240 1 345 1 307 1 100 1 226 1 72 1 175 1 101 1 43 1 168 1 119 1 122 1 162 2 124 1 328 1 111 1 85 1 173 1 
277 1 
70 1 160 1 346 1 324 1 201 1 236 1 120 1 
70 1 265 1 229 1 324 1 203 1 311 1 190 1 180 1 24 1 134 1 137 1 80 1 286 1 201 2 150 1 236 1 113 1 
291 1 321 1 41 1 324 1 267 2 3 3 190 1 75 1 78 1 198 1 124 1 50 1 80 1 328 2 173 1 249 1 224 1 100 1 229 1 101 1 311 1 88 1 314 1 286 1 93 1 
265 1 229 1 324 1 219 1 311 1 180 2 194 1 80 1 110 1 286 1 66 1 7 1 236 1 201 1 98 1 
114 1 266 1 324 2 20 1 0 1 145 1 49 1 148 1 80 1 172 1 32 2 228 1 229 1 250 1 349 1 311 1 350 1 134 1 313 1 90 2 233 1 183 1 210 1 141 1 286 1 236 2 113 1 339 1 
70 1 346 1 229 1 324 1 311 1 160 1 80 1 286 1 236 1 201 1 
265 1 324 1 219 1 180 2 194 1 90 1 49 1 171 1 238 1 287 1 236 2 201 1 
70 1 134 1 201 1 190 1 113 1 24 1 
291 2 41 2 322 1 324 2 3 1 190 3 24 1 301 1 77 1 360 1 124 3 80 2 222 1 328 1 28 1 173 3 249 1 174 1 100 1 229 2 101 3 311 2 159 1 134 2 64 1 259 1 286 1 236 1 113 2 
115 1 291 1 188 1 325 1 20 2 298 2 3 1 195 1 145 2 221 1 146 1 124 1 148 1 303 1 172 2 328 1 173 1 52 1 249 1 100 1 224 1 177 1 101 1 349 3 368 1 158 1 182 1 63 1 210 3 212 1 339 2 40 1 
70 1 41 1 265 2 324 2 219 2 194 2 80 1 201 3 174 1 32 1 229 1 311 1 180 4 106 1 286 1 236 1 
21 1 103 1 305 1 
197 1 87 1 21 1 260 1 103 1 
21 1 103 1 305 1 
21 1 103 1 305 1 
21 1 204 1 103 1 
21 1 204 1 103 1 
21 1 204 1 103 1 
21 1 103 1 
5 1 68 1 
188 1 297 3 298 2 299 1 195 7 49 1 146 1 96 2 7 1 274 1 98 1 308 2 177 1 156 1 350 1 90 1 313 1 183 1 106 1 63 1 110 1 212 4 66 1 
188 2 297 5 298 4 299 1 195 10 49 1 146 2 96 2 7 1 274 1 98 1 308 3 10 1 177 2 156 1 157 1 350 1 282 1 313 1 90 2 183 1 106 1 63 2 110 2 212 5 66 1 238 1 287 1 
188 2 215 1 19 1 18 1 297 6 298 4 299 1 195 10 49 2 146 2 171 2 7 1 98 1 308 1 177 2 157 1 282 1 90 2 62 1 63 2 110 1 212 4 66 1 238 2 287 2 
188 3 215 1 19 1 18 1 297 9 298 6 299 1 195 15 49 2 146 3 171 1 96 2 7 1 274 1 98 1 308 4 177 3 205 1 156 1 157 2 350 1 282 1 313 1 90 3 183 1 106 1 62 1 63 3 110 1 212 6 66 1 238 2 287 2 
188 1 297 3 298 2 299 1 195 7 49 1 146 1 96 2 7 1 274 1 98 1 308 2 177 1 156 1 350 1 90 1 313 1 183 1 106 1 63 1 110 1 212 4 66 1 
188 1 215 1 19 1 18 1 297 6 298 2 299 1 195 10 49 2 146 1 171 2 7 1 98 1 308 1 177 1 157 1 90 2 62 1 63 1 110 1 212 4 66 1 238 2 287 2 
188 3 215 1 19 1 18 1 297 7 298 6 299 1 195 10 49 1 146 3 171 1 7 1 98 1 308 1 177 3 205 1 157 1 282 1 90 2 62 1 63 3 110 1 212 3 66 1 238 2 287 2 
188 3 215 1 19 1 18 1 297 7 298 6 299 1 195 10 49 1 146 3 171 1 7 1 98 1 308 2 177 3 205 1 157 2 90 2 62 1 63 3 110 1 142 1 212 3 66 1 238 2 287 2 
308 6 297 3 156 1 157 3 350 3 195 7 313 1 90 1 183 3 49 1 96 3 212 4 274 2 
188 3 215 1 19 1 18 1 297 7 298 6 299 1 195 10 49 1 146 3 171 1 7 1 98 1 308 1 177 3 205 1 157 1 90 2 62 1 63 3 110 1 142 1 212 3 66 1 238 2 287 2 
308 3 188 2 177 2 297 3 205 1 298 4 156 1 157 1 350 1 90 1 313 1 195 7 183 1 106 1 49 1 63 2 146 2 96 2 212 4 274 1 
308 2 297 2 156 1 120 1 350 1 313 1 90 1 195 5 183 1 106 1 49 1 96 2 212 3 274 1 
188 1 177 1 297 2 298 2 282 1 90 1 195 3 49 1 63 1 146 1 171 1 212 1 238 1 287 1 
308 2 10 1 297 6 252 1 157 2 195 10 90 2 49 2 171 2 110 2 7 1 212 4 238 2 287 2 98 2 
114 1 188 2 297 13 298 4 195 27 49 4 146 2 171 2 96 5 274 1 98 2 308 10 10 1 177 2 252 1 205 2 156 1 157 5 102 1 350 4 313 2 90 4 183 4 106 1 63 2 110 2 212 14 287 2 238 2 355 1 
195 1 110 1 212 1 
195 1 297 1 98 1 
308 1 297 3 268 1 157 1 195 5 90 1 49 1 171 1 212 2 238 1 287 1 
188 1 215 1 19 1 18 1 297 6 298 2 299 1 195 10 49 2 146 1 171 2 7 1 98 1 308 1 177 1 157 1 90 2 62 1 63 1 110 1 212 4 66 1 238 2 287 2 
308 2 297 3 157 1 350 1 313 1 90 1 195 6 183 1 49 1 96 1 212 3 
308 2 188 1 177 1 297 1 205 1 298 2 156 1 157 1 102 1 350 1 195 3 183 1 63 1 146 1 96 1 212 2 274 1 
114 1 188 1 308 5 177 1 297 5 298 2 157 2 299 1 350 2 195 10 313 1 90 2 183 2 49 2 146 1 63 1 96 3 212 5 
188 1 308 1 177 1 297 2 298 2 157 1 299 1 90 1 195 2 63 1 146 1 287 1 
308 1 188 1 177 1 297 2 298 2 157 1 299 1 90 1 195 3 49 1 63 1 146 1 171 1 212 1 238 1 287 1 
188 3 308 2 177 3 297 1 205 1 298 6 157 1 102 1 299 1 350 1 195 3 183 1 63 3 146 3 96 1 142 1 212 2 
187 1 188 5 297 19 298 10 299 1 195 36 49 6 27 1 146 5 171 4 96 4 199 1 7 1 274 1 98 4 308 11 10 1 177 5 205 2 252 1 156 1 157 7 102 1 350 3 282 1 313 2 90 6 183 3 106 1 63 5 110 4 142 1 212 17 238 4 287 4 
116 1 136 1 210 1 154 1 349 1 158 1 339 1 
319 1 116 1 130 1 154 1 337 1 349 1 158 1 136 1 108 1 210 1 343 1 339 1 
249 1 100 1 291 1 124 1 222 1 101 1 328 1 28 1 3 1 120 1 173 1 
249 1 224 1 291 1 100 1 101 1 20 1 349 2 326 1 158 1 3 1 182 1 124 1 210 2 328 1 172 1 173 1 40 1 339 1 
20 1 326 1 3 3 243 1 45 1 77 1 124 1 172 2 328 1 223 1 173 1 249 2 100 1 224 2 101 1 349 2 158 1 230 1 182 1 233 2 140 1 210 2 339 2 40 1 
20 1 326 1 3 3 243 1 45 1 77 1 124 1 172 2 328 1 223 1 51 1 173 1 249 2 100 1 224 2 101 1 349 2 158 1 230 1 233 2 140 1 210 2 339 2 40 1 
134 1 77 1 73 1 124 1 101 1 267 1 3 1 190 1 88 1 173 1 113 1 
134 1 77 1 321 1 124 1 101 1 267 1 3 1 190 1 88 1 173 1 113 1 
100 1 92 1 124 1 101 1 328 1 173 1 
249 2 320 1 291 2 224 1 100 2 366 1 72 1 101 6 3 3 269 1 208 1 92 1 95 1 78 1 362 1 124 7 37 1 273 1 328 3 29 1 173 7 
115 1 188 2 217 1 297 2 20 1 326 1 298 4 3 1 76 1 195 5 49 1 146 2 124 1 303 1 96 2 328 1 172 1 274 1 29 1 173 1 52 2 249 1 308 2 224 1 100 1 227 1 177 2 101 1 349 2 156 1 368 2 158 1 350 1 90 1 313 1 182 1 183 1 91 1 106 1 138 1 63 2 210 2 109 1 354 1 212 3 40 1 339 1 
291 1 321 1 322 1 229 1 101 1 267 1 311 1 3 1 190 1 75 1 88 1 134 1 338 1 50 1 124 1 80 1 286 1 93 1 173 1 113 1 
249 1 224 1 100 1 101 1 3 1 88 1 92 1 78 1 314 1 124 1 328 2 173 1 
249 1 291 1 100 1 101 4 3 1 133 1 124 4 222 1 328 1 28 1 317 1 29 1 173 4 
249 1 320 1 224 1 100 1 366 1 101 2 3 1 104 1 77 1 196 1 124 2 328 2 164 1 173 2 
240 1 100 1 307 1 291 1 226 1 162 1 124 1 101 1 328 1 173 1 
292 1 72 1 124 2 101 2 37 1 29 1 173 2 
249 2 291 1 100 2 101 4 3 3 133 1 77 1 208 1 124 5 222 1 28 1 273 1 37 1 328 2 29 1 173 5 
249 2 291 1 100 2 335 1 101 4 3 3 133 1 77 1 208 1 124 5 222 1 28 1 37 1 328 2 29 1 173 5 
249 1 224 1 291 1 100 1 101 1 20 1 349 2 326 1 158 1 3 1 124 1 210 2 328 1 172 1 51 1 173 1 40 1 339 1 
249 1 320 1 224 1 100 1 366 1 101 1 3 1 77 1 78 1 362 1 124 1 328 2 173 1 
58 1 359 1 304 1 281 1 
181 1 318 1 58 1 
121 1 158 1 58 1 304 1 281 1 
70 1 266 1 20 1 242 1 121 1 145 1 148 1 172 1 223 1 201 1 304 1 86 1 250 1 349 1 58 1 230 1 281 1 181 1 134 2 338 1 233 2 161 1 14 1 210 1 141 1 318 1 339 1 113 2 
264 1 120 1 207 1 356 1 
264 1 71 1 302 1 2 1 288 1 207 1 356 1 
232 1 302 1 294 1 
264 1 71 1 2 3 207 1 25 1 302 3 127 1 261 1 288 1 38 2 248 1 356 1 
264 1 99 1 71 1 302 2 352 1 2 2 288 1 207 1 356 1 
71 1 264 1 240 1 54 1 2 1 302 1 122 1 162 1 353 1 288 1 248 1 
264 1 71 1 302 1 2 1 288 1 248 1 207 1 
71 1 302 1 2 1 288 1 248 1 207 2 356 1 
264 1 71 2 214 1 293 1 2 2 207 1 302 2 288 2 84 1 248 1 
71 1 264 2 2 3 35 1 207 1 89 1 302 3 352 2 353 1 316 1 288 1 248 1 356 1 
264 1 71 1 240 1 226 1 33 1 2 2 168 1 207 1 302 2 122 1 162 2 352 1 288 1 248 1 356 1 
71 2 99 1 264 2 2 4 35 1 207 1 46 1 302 4 352 2 353 1 288 2 248 1 356 1 
264 1 71 1 302 1 2 1 288 1 248 1 207 1 356 1 
71 1 264 3 2 4 35 1 207 2 25 1 302 4 361 1 352 2 353 1 127 1 38 1 288 1 356 2 
264 1 71 1 94 1 336 1 2 2 207 1 302 2 163 1 352 1 288 1 248 1 356 1 
264 1 71 1 2 3 270 1 207 1 25 2 302 3 127 1 288 1 38 2 248 1 356 1 
264 2 300 2 36 1 67 1 
71 1 302 1 2 1 288 1 271 1 248 1 
264 1 71 1 302 2 352 1 2 2 288 1 248 1 207 1 356 1 89 1 
246 1 
264 1 71 1 302 1 2 1 288 1 248 1 207 1 356 1 
264 1 71 1 302 3 352 1 2 3 38 1 288 1 248 1 89 1 207 1 356 1 
264 1 361 1 353 1 35 1 
264 1 207 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 225 (91,138) (91,138) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 225 (91,138) (91,138) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 225 (91,138) (91,138) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 225 (91,138) (91,138) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (86,169,294,327,367) (171,205) (171,205) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (95,146,200) (154,211,252) (154,211,252) (154,211,252) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 270 350 287 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 84 (168,173) (168,173) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 130 64 254 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 130 64 254 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 130 64 254 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 130 64 254 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 130 64 254 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (95,146,200) (95,146,200) (95,146,200) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 270 350 287 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 270 212 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 138 1 91 1 76 1 23 1 70 1 45 1 281 1 148 1 85 1 229 1 225 1 300 1 
109 1 138 1 91 1 76 1 23 1 70 1 45 1 281 1 148 1 85 1 229 1 225 1 300 1 
109 1 138 1 91 1 76 1 23 1 70 1 45 1 281 1 148 1 85 1 229 1 225 1 300 1 
109 1 138 1 91 1 76 1 23 1 70 1 45 1 281 1 148 1 85 1 229 1 225 1 300 1 
76 1 320 3 23 1 159 3 2 1 229 1 342 1 300 4 163 1 345 2 221 1 304 1 55 1 109 1 45 1 148 4 225 1 185 2 
171 1 76 1 23 1 70 1 338 1 45 1 281 1 205 1 148 1 229 1 86 1 300 1 
76 2 320 1 159 2 281 1 2 1 229 2 342 1 282 1 300 3 163 1 345 1 45 1 148 3 
76 2 159 5 23 1 142 1 2 3 281 1 229 2 282 1 300 9 163 1 304 1 55 1 148 9 185 2 233 1 320 7 235 1 190 1 342 1 345 4 109 1 221 1 45 1 225 1 
76 2 159 5 23 1 142 1 2 3 281 1 229 2 282 1 300 9 163 1 304 1 55 1 148 9 185 2 233 1 320 7 235 1 190 1 342 1 345 4 109 1 221 1 45 1 225 1 
60 1 217 1 19 1 
217 1 356 2 132 1 
119 1 158 1 88 2 362 2 14 2 82 2 33 2 156 2 
158 1 25 1 81 2 82 2 334 1 83 1 162 1 119 1 100 1 5 1 354 1 210 1 313 1 58 1 84 1 339 1 33 3 9 1 260 1 215 1 88 2 12 1 168 1 152 1 128 1 362 2 363 1 262 2 14 2 18 1 71 2 112 2 94 1 75 1 175 1 274 2 156 3 
158 1 88 1 165 1 268 1 362 1 232 1 14 1 82 1 33 1 156 1 
115 1 321 1 60 1 217 1 127 1 332 1 14 1 4 1 222 1 180 1 268 1 156 1 33 1 317 1 
321 1 88 1 60 1 217 1 362 1 332 1 82 1 14 1 4 1 222 1 180 2 268 1 317 2 156 1 33 1 
307 1 180 1 251 1 317 1 48 1 
202 1 180 2 60 1 217 1 251 1 39 1 317 2 48 1 
180 1 317 1 48 1 
158 1 88 1 251 1 362 1 82 1 14 1 180 1 165 1 268 1 232 1 317 1 156 1 33 1 114 1 
217 1 
242 1 180 2 60 1 217 1 251 1 39 1 317 2 48 1 
116 1 140 1 351 1 187 1 60 1 217 1 330 1 251 2 39 1 54 2 343 1 180 5 181 1 102 1 224 2 166 1 317 5 167 2 48 2 
12 1 152 1 363 1 362 1 81 1 322 1 228 1 262 1 82 1 14 1 334 1 5 1 354 1 313 1 94 1 47 1 84 1 274 1 156 2 33 2 
119 1 19 1 
1 1 88 1 362 1 178 1 14 2 82 1 119 1 268 1 355 1 156 2 33 2 
139 1 322 1 170 1 
12 1 152 1 363 1 81 1 262 1 131 1 334 1 119 1 5 1 354 1 94 1 313 1 84 1 274 1 33 1 156 1 
115 1 88 1 238 1 362 4 364 1 228 1 82 4 14 5 119 1 267 1 355 1 47 2 156 5 33 5 
165 1 268 1 362 1 14 1 82 1 33 1 156 1 
119 1 88 1 362 3 47 1 14 3 82 3 33 3 156 3 
165 1 268 1 362 1 14 1 82 1 33 1 156 1 
88 1 362 1 178 1 82 1 14 1 355 1 268 1 156 1 33 1 
1 1 228 1 332 1 334 1 100 1 5 1 4 1 180 1 339 1 9 1 12 1 152 1 61 1 14 3 18 1 71 2 112 1 75 1 156 4 158 1 81 1 25 1 82 3 119 1 354 1 355 1 313 1 84 1 317 1 33 4 215 1 321 1 260 1 88 2 168 1 362 3 363 1 128 1 262 1 222 1 268 2 94 1 47 1 274 1 368 1 
115 1 1 1 362 1 82 1 14 2 119 1 268 1 267 1 47 1 156 2 33 2 
321 1 88 1 217 1 362 3 228 1 332 1 82 3 14 3 222 1 4 1 180 1 196 1 355 1 268 1 47 2 317 1 156 3 33 3 368 1 
88 1 362 2 322 1 82 2 14 2 170 1 355 1 47 1 156 2 33 2 
12 1 152 1 363 1 81 1 262 1 334 1 119 1 5 1 354 1 94 1 313 1 84 1 274 1 33 1 156 1 
12 1 143 1 152 1 363 1 81 1 262 1 334 1 119 1 5 1 172 1 354 1 313 1 274 1 33 1 156 1 
139 1 0 1 123 1 260 1 79 1 128 1 25 2 322 1 170 1 266 1 108 1 305 1 100 1 18 1 71 2 112 2 75 1 136 1 339 1 
321 1 362 1 82 1 14 1 268 1 358 1 156 1 33 1 
253 1 67 1 
253 1 67 1 
101 1 191 1 
101 1 191 1 
101 1 191 1 
253 1 246 1 67 1 
253 1 246 1 67 1 
253 1 246 1 67 1 
253 1 53 1 67 1 
193 1 101 1 253 2 191 1 289 1 67 2 
285 1 253 1 67 1 
285 1 253 1 67 1 
285 1 253 1 67 1 
226 1 299 1 253 1 80 1 82 2 99 1 53 1 119 1 180 1 230 1 231 1 7 1 317 1 33 2 34 1 186 1 362 2 14 2 67 1 346 1 197 1 113 1 156 2 20 1 
226 2 186 2 299 1 204 1 217 1 253 2 27 1 67 2 180 2 244 2 164 1 231 2 314 1 7 2 289 1 316 1 113 3 317 2 157 1 
109 1 23 1 225 1 
23 1 338 1 225 1 
109 2 308 1 23 3 30 1 338 1 13 1 
109 1 308 1 23 2 30 1 338 1 259 1 
109 1 308 2 23 2 30 1 338 1 
116 3 141 2 330 1 251 4 26 1 179 1 54 1 29 1 336 1 180 5 102 2 356 3 317 5 34 1 167 1 60 1 217 2 37 1 39 1 132 1 241 1 296 2 295 2 108 1 266 1 297 1 223 1 134 1 346 1 224 1 349 1 20 1 48 1 
140 1 116 8 251 7 330 1 26 3 54 2 29 3 307 5 336 1 180 9 102 6 286 1 356 9 87 5 317 9 167 2 150 1 60 1 217 5 37 2 39 1 40 1 132 3 296 6 295 6 108 3 266 3 68 1 297 3 134 2 348 1 346 4 44 1 224 2 349 3 48 6 
158 1 140 1 116 3 141 1 251 2 82 1 179 1 26 1 54 1 29 1 180 3 165 1 102 2 356 4 232 1 33 1 317 3 167 1 88 1 60 1 217 3 37 1 362 1 14 1 132 2 241 1 295 2 296 2 108 1 266 1 297 1 243 1 134 1 346 1 268 1 224 1 349 1 156 1 114 1 
140 1 141 2 179 1 54 1 180 4 102 4 286 1 232 1 150 1 60 1 14 1 241 1 295 4 296 4 108 2 297 2 243 1 346 2 348 1 349 2 156 1 114 1 158 1 116 5 251 3 82 1 26 2 29 2 165 1 356 7 33 1 317 4 167 1 88 1 37 1 217 4 362 1 132 3 266 2 134 1 268 1 224 1 
152 1 19 1 265 1 
57 1 152 1 
324 1 
152 1 313 1 334 1 
303 1 152 1 
152 1 313 1 
152 3 280 1 313 1 161 1 334 1 265 2 
203 1 277 1 79 5 49 1 25 6 29 3 183 2 58 8 122 2 292 1 62 2 108 3 366 1 195 1 72 2 112 14 136 4 137 1 
203 1 277 1 79 7 49 1 25 6 29 3 183 2 58 8 122 2 292 1 62 2 108 3 366 3 195 1 72 2 112 14 136 4 137 1 
203 1 277 1 79 5 49 1 25 6 29 3 183 2 58 8 122 2 292 1 361 1 62 2 108 3 366 1 195 1 72 2 112 14 136 4 137 1 
203 1 277 2 79 14 49 1 25 19 26 3 353 1 29 6 100 1 120 4 255 1 147 1 183 2 104 1 58 21 8 1 122 3 292 2 128 1 62 3 266 3 108 6 366 7 195 1 69 1 18 1 93 1 71 2 72 3 112 40 273 3 75 1 349 3 136 7 137 1 
277 1 203 1 77 1 79 7 49 1 25 7 29 3 100 2 183 2 58 9 8 1 340 1 122 2 292 1 128 2 62 2 108 3 366 2 18 2 71 4 72 2 112 16 75 2 136 5 137 1 
76 1 117 1 252 1 177 1 281 1 229 1 300 1 28 1 154 1 56 1 337 1 211 1 45 1 95 1 148 1 
76 1 117 1 159 1 279 1 23 2 252 1 81 1 281 1 229 1 300 3 28 1 163 1 56 1 354 1 337 1 211 1 338 1 148 3 320 2 12 1 188 1 13 1 262 1 240 1 342 1 365 1 109 1 95 1 274 1 225 1 
117 1 159 1 23 2 81 1 281 1 300 2 163 1 56 1 354 1 337 1 211 1 338 1 148 2 320 2 12 1 188 1 262 1 240 1 13 1 342 1 365 1 109 1 95 1 274 1 225 1 
76 1 117 2 279 1 81 1 281 2 262 1 3 1 229 1 300 1 306 1 56 2 5 1 155 1 337 2 148 1 274 1 31 1 
76 1 117 1 23 2 252 1 81 1 281 1 229 1 300 1 28 1 56 1 354 1 337 1 211 1 338 1 148 1 12 1 188 1 262 1 13 1 365 1 109 1 154 1 45 1 95 1 274 1 225 1 
194 1 
330 1 332 1 333 2 283 2 54 1 5 2 4 1 180 5 102 2 184 1 10 2 149 2 12 1 152 1 239 2 14 1 111 1 198 1 156 1 201 1 116 2 115 1 352 1 81 2 208 2 256 1 121 1 354 1 356 2 313 1 317 5 318 1 33 1 167 1 321 1 216 1 217 1 37 1 127 1 218 1 89 1 261 4 262 2 39 3 132 2 43 2 222 1 224 1 268 1 269 1 325 1 326 1 274 2 48 6 
201 1 115 1 321 1 127 1 352 1 89 1 261 2 332 1 39 1 333 1 14 1 242 1 222 1 4 1 180 3 268 1 184 1 317 3 318 1 156 1 33 1 48 2 
201 1 115 1 321 1 60 1 217 1 127 1 352 1 89 1 261 3 332 1 39 1 14 1 242 1 43 1 222 1 4 1 180 3 268 1 184 1 317 3 318 1 156 1 33 1 48 1 
201 1 115 1 321 1 127 1 352 1 89 1 261 2 332 1 333 1 14 1 283 1 222 1 4 1 180 2 268 1 184 1 317 2 318 1 156 1 33 1 48 1 
330 1 332 1 333 4 98 1 283 4 54 1 284 1 4 1 180 5 102 1 232 1 184 1 10 2 149 2 105 1 237 1 60 1 239 2 65 1 14 2 242 1 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 33 2 317 5 318 1 167 1 321 1 88 1 216 1 217 1 127 1 362 1 89 1 261 4 39 3 132 2 222 1 43 2 268 2 224 1 269 1 48 7 
330 1 332 1 333 1 54 1 283 1 4 1 180 3 102 1 232 1 184 1 10 2 149 2 60 1 239 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 256 1 165 1 356 2 33 2 317 3 318 1 167 1 321 1 88 1 216 1 127 1 217 3 362 1 89 1 261 3 39 1 132 2 222 1 43 1 268 2 224 1 269 1 48 2 
330 1 332 1 333 2 54 1 283 2 284 1 4 1 180 4 102 1 232 1 184 1 10 2 149 2 237 1 60 1 239 2 65 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 317 4 318 1 33 2 167 1 321 1 88 1 216 1 127 1 217 1 362 1 89 1 261 4 39 2 132 2 222 1 43 2 224 1 268 2 269 1 48 4 
330 1 332 1 333 2 54 1 283 2 284 1 4 1 180 4 102 1 232 1 184 1 10 2 149 2 237 1 60 1 239 2 65 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 317 4 318 1 33 2 167 1 321 1 88 1 216 1 127 1 217 1 362 1 89 1 261 4 39 2 132 2 222 1 43 2 224 1 268 2 269 1 48 4 
330 1 332 1 333 2 54 1 283 2 284 1 4 1 180 4 102 1 232 1 184 1 290 2 10 2 60 1 14 2 245 1 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 356 2 357 2 317 4 318 1 33 2 167 1 321 1 88 1 127 1 217 1 362 1 89 1 261 4 39 2 41 1 222 1 43 2 224 1 268 2 269 1 174 1 48 4 
330 1 332 1 333 3 283 3 54 1 284 1 4 1 180 4 102 1 232 1 184 1 10 2 149 2 105 1 237 1 60 1 239 2 65 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 317 4 318 1 33 2 167 1 321 1 88 1 216 1 127 1 217 1 362 1 89 1 261 4 39 2 132 2 222 1 43 2 268 2 224 1 269 1 48 5 
330 1 332 1 333 3 283 3 54 1 284 1 4 1 180 4 102 1 232 1 184 1 10 2 149 2 105 1 237 1 60 1 239 2 65 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 165 1 317 4 318 1 33 2 167 1 321 1 88 1 216 1 127 1 217 1 362 1 89 1 261 4 39 2 132 2 222 1 43 2 268 2 224 1 269 1 48 5 
330 1 332 1 333 2 54 1 283 2 4 1 180 4 102 1 232 1 184 1 290 2 10 2 60 1 14 2 156 2 114 1 201 1 158 1 115 1 116 1 352 1 82 1 208 2 256 1 165 1 356 2 357 2 33 2 317 4 318 1 167 1 321 1 88 1 127 1 217 1 362 1 89 1 261 3 39 2 41 1 222 1 43 1 268 2 224 1 269 1 48 4 
203 1 260 1 79 2 128 1 25 2 62 1 108 1 29 1 119 2 305 1 100 1 183 1 18 1 72 1 71 2 112 5 19 1 58 3 75 1 136 2 339 1 122 1 137 1 
139 12 250 1 79 2 25 5 26 3 353 1 83 1 29 3 119 1 120 4 100 2 147 2 58 10 339 2 9 1 35 1 260 1 128 2 322 12 133 1 170 3 192 1 366 2 18 2 71 4 112 15 273 3 75 2 349 3 248 1 
81 1 25 1 228 1 82 1 334 1 83 1 119 1 100 1 5 1 354 1 313 1 84 1 315 1 58 1 339 1 33 2 9 1 260 1 12 1 152 1 363 1 362 1 128 1 262 1 131 1 14 1 170 1 264 1 192 1 18 1 71 2 94 1 112 2 74 1 47 1 274 1 75 1 156 2 
139 2 228 1 334 1 100 2 5 1 58 3 339 2 9 1 12 1 152 1 106 1 14 1 192 1 18 2 71 4 112 5 75 2 349 1 156 2 79 3 25 2 81 1 82 1 26 1 301 1 29 1 354 1 312 1 313 1 84 1 213 1 33 2 260 2 168 1 128 2 362 1 363 1 262 1 322 2 170 2 366 2 173 1 94 1 47 1 274 1 136 1 
350 1 24 1 177 1 81 3 25 1 82 1 83 1 162 1 305 1 100 2 5 2 354 1 287 1 313 1 58 1 339 2 33 1 9 1 260 2 12 1 152 1 362 1 128 2 189 1 218 1 262 3 14 1 18 2 71 4 198 1 112 2 270 1 47 1 274 3 75 2 156 1 
139 1 79 1 25 2 82 1 26 1 29 1 100 1 355 1 58 1 339 1 33 1 260 1 88 1 362 1 128 1 322 1 14 1 170 1 192 1 266 1 108 1 18 1 71 2 135 1 112 3 75 1 136 1 349 1 156 1 
139 1 260 1 79 1 128 1 322 1 26 1 170 1 29 1 305 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 199 1 339 1 
139 1 123 1 260 1 79 1 128 1 25 2 322 1 170 1 266 1 108 1 305 1 100 1 18 1 71 2 112 2 75 1 136 1 339 1 
139 2 79 2 25 2 26 1 29 1 100 1 305 1 58 2 339 1 260 1 128 1 322 2 170 2 266 1 108 1 366 1 18 1 71 2 112 4 75 1 349 1 136 1 
139 1 260 1 79 1 189 1 128 1 322 1 26 1 170 1 29 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 199 1 339 1 
139 1 123 1 260 1 79 1 189 1 128 1 25 2 322 1 170 1 266 1 108 1 100 1 18 1 71 2 112 2 75 1 136 1 339 1 
139 1 260 1 79 1 189 1 128 1 322 1 26 1 170 1 29 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 339 1 349 1 
139 1 260 1 79 1 128 1 322 1 26 1 170 1 29 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 339 1 349 1 
81 1 25 1 334 1 83 1 119 1 100 1 5 1 354 1 313 1 58 1 84 1 339 1 33 1 9 1 260 1 12 1 168 1 152 1 363 1 128 1 262 1 18 1 71 2 112 2 94 1 274 1 75 1 156 1 
143 1 81 1 25 1 334 1 83 1 119 1 100 1 5 1 354 1 313 1 58 1 339 1 33 1 9 1 319 1 260 1 12 1 152 1 363 1 128 1 262 1 172 1 18 1 71 2 112 2 274 1 75 1 156 1 
139 1 260 1 79 1 128 1 322 1 26 1 170 1 192 1 29 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 339 1 349 1 
173 1 168 1 177 1 84 1 
139 1 79 1 82 1 26 1 29 1 100 1 145 1 355 1 58 2 339 1 33 1 260 1 88 1 362 1 128 1 322 1 14 1 170 1 192 1 366 1 18 1 71 2 112 2 75 1 349 1 156 1 
254 1 100 1 77 1 18 1 151 1 128 1 71 2 130 1 64 1 75 1 
254 1 100 1 77 1 18 1 151 1 128 1 71 2 130 1 64 1 75 1 
254 1 100 1 77 1 18 1 151 1 128 1 71 2 130 1 64 1 75 1 
254 1 100 1 77 1 18 1 151 1 128 1 71 2 130 1 64 1 75 1 
254 1 100 1 77 1 18 1 151 1 128 1 71 2 130 1 64 1 75 1 
226 1 227 1 186 1 204 1 253 1 231 1 314 1 7 1 289 1 67 1 
197 1 53 1 
344 1 226 1 186 1 253 1 231 1 7 1 206 1 323 1 67 1 
246 1 276 1 
193 1 285 1 288 1 
226 1 299 1 186 1 204 1 217 1 253 1 27 1 67 1 180 1 244 1 164 1 231 1 314 1 7 1 289 1 316 1 113 2 317 1 
226 1 299 1 186 1 204 1 217 1 253 1 27 1 67 1 180 1 244 1 164 1 231 1 314 1 7 1 289 1 316 1 113 2 317 1 
226 1 299 1 186 1 204 1 217 1 253 1 27 1 67 1 180 1 244 1 164 1 231 1 314 1 7 1 289 1 316 1 113 2 317 1 
193 1 246 1 276 1 
193 1 246 1 276 1 
285 1 288 1 
193 1 285 1 288 1 
230 1 99 1 
226 1 251 1 253 1 80 1 82 2 99 1 27 1 53 1 119 1 180 1 230 1 231 1 7 1 33 2 317 1 34 1 125 1 186 1 362 2 14 2 67 1 244 1 346 1 197 1 113 1 156 2 20 1 
24 1 81 2 25 1 50 1 83 1 162 2 100 1 354 1 313 1 58 1 339 1 33 2 9 1 260 1 126 1 11 1 12 1 152 1 128 1 262 2 14 2 192 1 298 1 18 1 71 2 112 2 270 1 272 1 75 1 274 2 156 2 
146 1 56 1 188 1 177 1 81 1 95 1 262 1 200 1 274 1 302 1 28 1 
23 2 12 1 188 1 81 1 13 1 262 1 28 1 365 1 109 1 42 1 56 1 354 1 338 1 95 1 274 1 200 1 225 1 
97 1 56 1 5 1 81 1 262 1 274 1 31 1 302 1 
23 2 12 1 188 1 81 1 13 1 262 1 302 1 28 1 365 1 109 1 56 1 146 1 354 1 338 1 95 1 274 1 200 1 225 1 
257 1 
116 1 187 1 60 1 102 1 217 1 19 1 343 1 
116 1 330 1 54 1 180 1 102 1 356 1 317 1 167 1 149 1 216 1 60 1 217 2 239 1 39 1 132 1 224 1 48 1 
12 1 152 2 330 1 280 1 81 1 262 1 63 1 107 1 334 1 54 1 5 1 354 2 57 1 224 1 313 1 274 1 167 1 
116 8 330 2 331 1 52 1 26 2 54 2 353 1 29 2 120 1 121 1 180 1 102 5 356 6 59 1 317 1 291 1 167 2 36 1 60 2 37 1 217 5 39 1 263 1 132 3 296 5 295 5 266 2 108 2 297 1 243 2 224 2 273 1 349 2 275 1 48 1 
158 1 116 2 330 1 49 1 82 1 54 1 29 2 180 1 165 1 183 1 102 2 232 1 122 1 33 1 317 1 167 1 88 1 237 1 362 1 62 1 14 1 108 1 297 1 243 2 268 1 224 1 156 1 114 1 
116 1 187 1 60 1 330 1 217 1 54 1 343 1 224 1 102 1 167 1 
116 2 217 2 26 1 132 2 295 2 296 2 29 1 266 1 108 1 297 1 243 1 102 2 356 4 349 1 
180 1 60 1 217 1 39 1 317 1 48 1 
21 1 176 1 140 1 116 2 78 1 330 1 81 4 334 1 54 2 5 2 354 3 121 2 180 3 309 2 209 1 102 2 313 2 317 3 167 2 12 2 152 2 153 1 37 2 218 1 262 4 39 2 17 1 347 1 224 2 325 1 326 1 198 1 274 4 48 4 
158 1 25 1 81 1 82 2 334 1 119 1 100 1 5 1 354 1 313 1 84 1 339 1 33 3 9 1 215 1 260 1 88 2 12 1 168 1 152 1 128 1 362 2 363 1 262 1 14 2 18 1 71 2 112 1 94 1 75 1 274 1 156 3 
116 1 60 1 330 1 37 1 217 2 132 1 296 1 54 1 121 1 102 1 224 1 356 2 167 1 
226 1 186 1 103 1 
226 1 186 1 103 1 
226 1 186 1 103 1 
226 1 186 1 314 1 328 1 99 1 
226 1 186 1 90 1 
226 1 186 1 90 1 
226 1 186 1 90 1 
226 1 186 1 
253 1 67 1 
203 1 79 7 49 1 25 8 29 3 100 2 183 2 58 9 8 1 122 2 128 2 62 2 108 3 366 3 18 2 71 4 72 1 112 17 75 2 136 4 137 1 
203 1 79 2 25 2 62 1 29 1 108 1 183 1 72 1 19 1 112 5 58 3 122 1 136 2 137 1 
124 1 79 2 128 1 25 2 26 1 108 1 266 1 29 1 100 1 366 1 18 1 71 2 112 4 58 2 75 1 136 1 349 1 
79 2 25 4 26 1 353 1 108 1 266 1 29 1 120 2 366 1 147 1 112 7 273 1 58 3 136 1 349 1 
203 1 250 1 79 7 49 1 25 12 26 2 29 5 120 2 100 1 147 1 183 2 58 13 8 1 122 2 128 1 62 2 108 5 266 2 366 2 18 1 72 1 71 2 112 25 273 2 75 1 349 2 136 5 137 1 248 1 
120 1 112 1 25 1 
112 1 58 1 273 1 
124 1 79 3 128 1 25 3 26 1 29 1 266 1 108 1 100 1 366 1 18 1 312 1 71 2 112 6 58 3 75 1 349 1 136 2 
77 1 79 2 128 1 331 1 25 6 263 1 52 1 26 2 353 1 108 2 266 2 29 2 100 1 120 1 366 1 18 1 71 2 112 12 58 6 273 1 59 1 75 1 136 1 349 2 291 1 
79 2 25 3 62 1 29 1 108 1 366 1 183 1 112 6 58 3 122 1 136 1 
203 1 236 1 79 2 128 1 62 1 25 2 100 1 366 1 18 1 71 2 112 3 58 1 8 1 75 1 136 1 122 1 137 1 
77 1 79 5 128 1 49 1 62 2 25 5 29 2 108 2 100 1 366 2 18 1 183 1 71 2 112 10 58 5 75 1 122 2 136 3 
77 1 79 1 128 1 26 1 29 1 100 1 366 1 18 1 71 2 112 2 58 2 75 1 
77 1 79 2 128 1 25 2 26 1 108 1 266 1 29 1 100 1 366 1 18 1 71 2 112 4 58 2 75 1 136 1 349 1 
234 1 236 1 77 1 79 2 128 3 25 2 62 1 100 3 366 1 18 3 71 6 112 3 58 1 8 1 75 3 122 1 136 1 
203 1 77 1 79 9 49 1 25 15 26 2 353 1 29 5 120 3 100 4 255 1 183 2 58 16 8 1 122 2 124 1 234 1 128 4 62 2 266 2 108 5 366 4 69 1 18 4 93 1 72 1 71 8 112 31 273 3 75 4 136 5 349 2 137 1 
203 1 77 1 79 5 49 1 331 1 25 7 353 1 29 3 120 1 100 1 183 2 58 8 122 2 128 1 62 2 108 3 366 1 18 1 72 1 71 2 112 15 273 1 75 1 136 4 137 1 
203 1 77 1 79 6 49 1 331 1 25 8 26 1 353 1 29 4 120 2 100 2 147 1 183 2 58 10 122 2 124 1 128 2 62 2 108 3 366 2 18 2 72 1 71 4 112 18 273 1 75 2 136 4 349 1 137 1 
203 1 77 1 79 7 49 1 331 1 25 13 52 1 26 2 353 1 29 5 120 1 100 3 183 2 58 13 59 1 8 1 122 2 291 1 124 1 128 3 62 2 263 1 266 2 108 5 366 2 18 3 72 1 71 6 112 26 273 1 75 3 349 2 136 5 137 1 
203 1 77 1 79 9 49 1 331 1 25 10 52 1 26 2 353 1 29 5 120 1 100 3 183 2 58 14 8 1 59 1 122 2 291 1 124 1 128 3 62 2 263 1 266 1 108 4 366 4 18 3 72 1 71 6 112 24 273 1 75 3 349 2 136 5 137 1 
203 1 77 1 79 5 49 1 331 1 25 7 353 1 29 3 120 1 100 1 183 2 58 8 122 2 128 1 62 2 108 3 366 1 18 1 72 1 71 2 112 15 273 1 75 1 136 4 137 1 
77 1 79 2 128 1 331 1 25 6 263 1 52 1 26 2 353 1 108 2 266 2 29 2 100 1 120 1 366 1 18 1 71 2 112 12 58 6 273 1 59 1 75 1 136 1 349 2 291 1 
203 1 77 1 79 7 49 1 331 1 25 11 52 1 26 2 353 1 29 5 120 1 100 4 183 2 58 14 59 1 8 2 122 2 291 1 124 1 128 4 62 2 263 1 266 1 108 4 366 2 18 4 72 1 71 8 112 25 273 1 75 4 349 2 136 5 137 1 
77 1 79 6 331 1 25 7 52 1 26 3 353 1 29 3 120 1 100 4 58 9 59 1 8 2 291 1 234 1 128 4 263 1 266 2 108 2 366 3 18 4 71 8 112 16 273 1 75 4 349 3 136 3 
203 1 79 6 25 4 62 3 108 1 29 1 366 3 183 1 112 7 58 3 122 3 136 3 137 2 
203 1 77 1 79 7 49 1 331 1 25 11 52 1 26 2 353 1 29 5 120 1 100 4 183 2 58 14 59 1 8 2 122 2 291 1 234 1 128 4 62 2 263 1 266 1 108 4 366 2 18 4 72 1 71 8 112 25 273 1 75 4 349 2 136 5 137 1 
119 1 115 1 293 1 267 1 14 1 33 1 156 1 
115 1 293 1 38 1 14 1 119 1 92 1 258 1 267 1 73 1 271 1 156 1 33 1 
5 1 354 1 12 1 152 1 198 1 218 1 313 1 19 1 81 1 262 1 274 1 
12 1 152 1 363 1 362 1 81 1 262 1 82 1 14 1 334 1 119 1 5 1 354 1 313 1 94 1 47 1 274 1 156 2 33 2 
1 1 81 1 82 2 334 2 303 1 119 1 4 1 354 1 309 1 313 2 33 2 321 1 12 1 152 3 341 1 362 1 363 1 262 1 14 2 268 2 94 1 47 1 274 1 156 2 
1 1 81 1 82 2 334 2 303 1 119 1 4 1 354 1 309 1 313 2 33 2 321 1 12 1 152 3 341 1 362 1 363 1 262 1 14 2 172 1 268 2 47 1 274 1 156 2 
329 1 278 1 81 3 334 1 303 1 5 1 180 2 354 1 57 1 309 1 313 1 32 1 317 2 12 1 60 1 152 4 341 1 217 1 262 3 265 1 222 1 274 3 48 1 
12 1 60 1 217 1 341 1 152 4 81 3 262 3 334 1 16 1 265 1 303 1 5 1 222 1 354 1 180 2 309 1 57 1 313 1 274 3 32 1 317 2 48 1 
354 1 12 1 81 1 262 1 274 1 144 1 
350 1 21 1 12 1 280 1 152 1 177 1 81 2 262 2 207 1 334 1 5 2 354 2 209 1 287 1 313 1 270 1 274 2 
260 1 128 1 362 1 177 1 82 1 14 1 192 1 100 1 18 1 71 2 272 1 47 1 75 1 339 1 156 1 33 1 
116 1 330 2 251 1 81 1 54 2 335 1 5 1 180 3 6 1 57 1 102 1 317 3 167 2 187 1 60 1 217 1 153 1 152 2 262 1 39 1 15 1 16 1 343 1 265 1 222 1 224 2 274 1 48 2 
12 1 280 1 152 2 177 1 81 1 262 1 107 1 144 1 334 1 265 1 354 2 313 1 274 1 
21 1 12 1 78 1 152 1 218 1 81 1 177 1 262 1 334 1 5 1 354 2 17 1 209 1 313 1 274 1 
21 1 12 1 78 1 152 1 81 2 262 2 334 1 354 2 309 1 17 1 209 1 313 1 274 2 369 1 
365 1 5 1 354 1 23 1 12 1 338 1 81 1 262 1 274 1 225 1 
188 1 81 1 177 1 262 1 274 1 
5 1 177 1 81 1 262 1 274 1 
5 1 177 1 81 1 270 1 262 1 212 1 274 1 
12 1 152 1 363 1 362 1 81 1 262 1 82 1 14 1 334 1 119 1 5 1 172 1 354 1 313 1 47 1 274 1 156 2 33 2 
21 1 12 1 280 1 152 1 81 1 262 1 207 1 334 1 354 2 309 1 209 1 313 1 274 1 
119 1 247 1 51 1 220 1 359 1 
158 1 160 1 251 1 332 1 82 1 51 1 4 1 180 2 165 1 232 1 33 1 359 1 317 2 214 1 321 1 88 1 60 1 217 1 362 1 219 1 14 1 220 1 222 1 268 2 247 1 156 1 368 1 114 1 
11 1 126 1 51 1 220 1 14 1 298 1 247 1 156 1 33 1 
214 1 160 1 220 1 
163 1 159 1 19 1 342 1 
163 1 76 1 159 1 148 1 229 1 342 1 300 1 
337 1 281 1 300 1 
76 1 159 1 294 1 169 1 229 1 342 1 300 3 163 1 45 1 327 1 148 3 86 2 
163 1 76 1 320 1 159 1 148 2 229 1 342 1 185 1 300 2 
345 1 109 1 55 1 76 1 23 1 159 1 45 1 148 1 229 1 225 1 300 1 
163 1 76 1 159 1 45 1 148 1 229 1 300 1 
163 2 76 1 45 1 148 1 229 1 342 1 300 1 
163 1 110 1 76 2 159 1 310 1 118 1 45 1 148 2 229 2 300 2 
233 1 76 1 320 2 159 2 142 1 2 1 229 1 342 1 300 3 163 1 345 1 45 1 148 3 
76 1 320 1 159 1 23 2 13 1 229 1 342 1 66 1 300 2 163 1 109 1 338 1 45 1 148 2 225 1 
76 2 320 2 159 2 2 1 229 2 342 1 300 4 163 1 345 1 221 1 45 1 148 4 185 1 
163 1 76 1 159 1 45 1 148 1 229 1 342 1 300 1 
76 1 320 2 159 3 294 1 129 1 2 1 229 1 342 2 300 4 163 2 345 1 327 1 148 4 86 1 
76 1 320 1 159 1 235 1 229 1 342 1 300 2 163 1 182 1 45 1 148 2 46 1 
163 1 76 1 159 1 294 1 327 2 45 1 148 3 367 1 229 1 342 1 86 2 300 3 
22 1 159 2 311 1 249 2 
96 1 76 1 45 1 148 1 229 1 300 1 
163 1 76 1 320 1 159 1 142 1 45 1 148 2 229 1 342 1 300 2 
360 1 
163 1 76 1 159 1 45 1 148 1 229 1 342 1 300 1 
76 1 320 1 159 1 142 1 229 1 342 1 300 3 163 1 45 1 148 3 86 1 
345 1 159 1 129 1 2 1 
163 1 159 1 

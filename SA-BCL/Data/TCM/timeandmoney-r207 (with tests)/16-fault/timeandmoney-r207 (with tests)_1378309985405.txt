#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (133,136) 316 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (133,136) 316 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 183 214 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 219 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 261 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 86 8 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 219 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 2 104 9 155 2 238 1 221 1 4 1 259 4 27 2 341 9 93 3 321 1 7 2 33 1 133 1 228 2 206 5 349 1 10 1 136 1 170 2 58 2 329 1 353 6 43 1 16 1 18 1 63 1 64 1 
68 2 104 9 155 2 238 1 221 1 4 1 259 4 27 2 341 9 93 3 321 1 7 2 33 1 133 1 228 2 206 5 349 1 10 1 136 1 170 2 58 2 329 1 353 6 43 1 16 1 18 1 63 1 64 1 
68 2 104 10 155 2 238 1 221 1 4 1 259 5 27 2 341 10 93 4 321 1 7 2 33 1 133 1 228 2 206 6 349 1 10 1 136 1 170 2 58 2 329 1 353 7 43 1 16 1 18 1 63 1 64 1 
68 1 104 7 155 2 238 1 4 1 259 3 27 2 341 7 93 2 321 1 7 2 33 1 133 1 228 2 206 4 349 1 10 1 136 1 170 2 58 2 329 1 353 4 43 1 16 1 18 1 63 1 64 1 
206 3 68 2 349 1 170 1 104 4 221 1 58 1 329 1 353 3 259 2 27 1 341 4 93 1 18 1 63 1 7 1 33 1 228 1 
206 1 250 1 349 1 170 1 104 2 155 1 58 1 4 1 27 1 341 2 283 1 321 1 18 1 20 1 33 1 228 1 
206 2 349 1 136 1 104 3 155 1 58 2 353 1 259 1 27 2 341 3 93 1 18 1 33 1 
27 1 136 1 341 1 104 1 58 1 316 1 33 1 
27 1 136 1 341 1 104 1 58 1 316 1 33 1 
115 1 90 1 219 1 
115 1 314 1 360 2 
296 1 130 2 152 2 78 2 32 1 40 2 352 2 144 2 
152 2 311 2 157 1 339 2 72 1 317 1 281 1 130 3 112 1 225 1 113 1 343 1 320 1 204 1 31 1 32 1 134 1 230 1 166 2 11 1 77 1 12 2 78 2 327 2 79 1 40 2 120 1 352 3 144 2 296 1 211 1 212 1 255 1 19 1 194 1 195 1 217 1 
130 1 152 1 260 1 78 1 128 1 32 1 94 1 40 1 352 1 144 1 
197 1 115 1 152 1 258 1 50 1 128 1 156 1 200 1 295 1 352 1 130 1 90 1 226 1 179 1 
197 1 115 1 152 1 258 1 50 2 78 1 156 2 128 1 200 1 40 1 352 1 144 1 130 1 90 1 226 1 
266 1 282 1 50 1 156 1 172 1 
115 1 90 1 266 1 336 1 213 1 50 2 156 2 172 1 
266 1 50 1 156 1 
152 1 50 1 78 1 128 1 156 1 172 1 40 1 352 1 144 1 356 1 130 1 260 1 94 1 32 1 
115 1 
115 1 168 1 90 1 266 1 213 1 50 2 156 2 172 1 
115 1 288 2 185 1 50 5 169 1 154 2 156 5 208 2 119 1 172 2 240 1 111 1 243 1 90 1 266 2 213 1 163 1 262 1 149 1 
152 1 77 1 311 1 78 1 327 1 339 1 40 1 120 1 352 2 317 1 354 1 130 2 113 1 255 1 31 1 204 1 345 1 195 1 246 1 134 1 
296 1 219 1 
129 1 296 2 130 2 55 1 152 2 78 1 40 1 352 2 144 1 
354 1 171 1 302 1 
311 1 77 1 327 1 339 1 120 1 352 1 317 1 296 1 130 1 113 1 255 1 204 1 31 1 195 1 65 1 134 1 
249 1 152 5 274 1 78 4 40 4 352 5 144 1 98 1 129 1 130 5 296 1 345 1 246 2 179 1 
130 1 152 1 260 1 78 1 128 1 40 1 73 1 352 1 
296 1 130 3 152 3 78 3 246 1 40 3 352 3 144 1 
130 1 152 1 260 1 78 1 128 1 40 1 352 1 
129 1 55 1 130 1 152 1 78 1 128 1 40 1 352 1 144 1 
197 1 152 3 258 1 50 1 311 1 128 1 156 1 157 1 339 1 200 1 72 1 317 1 281 1 129 1 130 4 225 1 113 1 320 1 31 1 204 1 226 1 32 1 345 1 246 1 134 1 230 1 166 1 167 1 11 1 77 1 12 2 78 3 327 1 79 1 40 3 120 1 352 4 144 2 296 1 212 1 173 1 255 1 194 1 195 1 
296 1 130 2 152 2 274 1 78 1 40 1 246 1 352 2 179 1 
167 1 197 1 115 1 152 3 50 1 258 1 78 3 156 1 128 1 200 1 40 3 352 3 144 1 129 1 130 3 162 1 226 1 345 1 246 2 
152 2 171 1 78 2 40 2 352 2 144 1 129 1 354 1 130 2 246 1 
311 1 77 1 327 1 339 1 120 1 352 1 317 1 296 1 130 1 255 1 113 1 204 1 31 1 195 1 134 1 
311 1 77 1 70 1 327 1 339 1 120 1 352 1 317 1 296 1 130 1 255 1 113 1 31 1 347 1 134 1 
75 1 230 1 166 4 236 1 153 1 11 1 171 2 12 2 157 2 331 1 15 1 354 2 281 1 212 1 145 1 225 1 320 1 299 1 19 2 85 1 302 2 303 1 
73 1 
116 1 14 1 
116 1 14 1 
97 1 189 1 
97 1 189 1 
97 1 189 1 
191 1 116 1 14 1 
191 1 116 1 14 1 
191 1 116 1 14 1 
83 1 116 1 14 1 
116 2 97 1 127 1 279 1 189 1 14 2 
116 1 218 1 14 1 
116 1 218 1 14 1 
116 1 218 1 14 1 
67 1 152 2 309 1 50 1 156 1 130 2 322 1 245 1 227 1 116 1 37 1 78 2 138 1 232 1 40 2 188 1 352 2 14 1 296 1 60 1 234 1 83 1 101 1 150 1 
67 2 115 1 116 2 50 2 127 1 156 2 51 1 3 1 80 1 74 1 254 1 14 2 60 2 101 2 358 1 322 2 227 3 324 2 150 1 
170 1 7 1 228 1 
170 1 283 1 228 1 
190 1 170 3 283 1 351 1 7 2 123 1 
170 2 283 1 313 1 351 1 7 1 123 1 
170 2 283 1 351 2 7 1 123 1 
24 2 309 1 153 1 337 1 50 5 154 1 156 5 314 2 242 1 90 1 245 1 54 2 262 3 75 1 115 2 288 1 185 1 138 1 208 1 119 2 172 4 350 1 145 1 266 1 213 1 62 1 17 1 146 2 147 1 360 2 148 1 303 1 
125 1 50 9 314 6 90 1 262 8 54 6 185 1 264 1 266 6 145 3 62 2 17 1 193 1 147 2 24 6 153 3 69 1 337 3 154 2 156 9 240 1 282 5 114 1 245 4 35 5 75 3 115 5 287 1 288 2 208 2 172 7 119 6 213 1 175 1 360 6 303 3 
24 2 152 1 153 1 50 3 337 1 154 1 128 1 156 3 314 2 240 1 242 1 130 1 90 1 260 1 32 1 94 1 245 1 262 3 54 2 75 1 115 3 288 1 78 1 208 1 40 1 172 2 119 2 350 1 352 1 144 1 356 1 145 1 62 1 146 1 147 1 360 2 303 1 
24 2 153 1 50 2 337 1 154 1 156 2 314 2 240 1 242 1 245 1 54 2 262 3 75 1 115 2 288 1 208 1 172 1 119 2 350 1 145 1 62 1 175 1 146 1 147 1 360 2 303 1 
49 1 113 1 219 1 
113 1 88 1 
290 1 
77 1 113 1 134 1 
113 1 306 1 
113 1 134 1 
290 1 49 2 77 1 113 3 126 1 59 1 134 1 
66 1 338 2 157 6 229 5 248 2 75 3 166 14 186 2 41 1 143 4 145 3 215 1 122 1 267 1 19 8 269 1 45 1 46 2 
66 1 338 2 157 6 229 7 248 2 75 3 166 14 186 2 41 1 143 4 145 3 215 1 122 1 267 1 19 8 269 1 45 3 46 2 
66 1 338 2 157 6 323 1 229 5 248 2 75 3 166 14 186 2 41 1 143 4 145 3 215 1 122 1 267 1 19 8 269 1 45 1 46 2 
273 1 153 4 237 1 337 4 312 1 199 2 157 14 281 2 29 1 225 2 320 2 286 4 229 6 325 1 248 1 182 1 75 4 230 2 166 28 137 1 186 1 12 4 41 1 143 1 100 1 145 4 215 2 19 14 269 1 45 5 361 4 46 1 303 4 
66 1 338 2 199 1 157 7 239 1 340 1 281 2 225 2 320 2 229 7 75 3 230 2 248 2 166 16 12 4 186 2 143 5 145 3 215 1 267 1 122 1 19 9 269 1 45 2 46 2 
275 1 311 1 104 2 155 1 339 1 109 1 25 1 26 1 27 1 202 1 222 1 341 2 283 1 31 1 53 1 244 1 7 1 33 1 228 1 206 1 349 1 170 2 327 1 58 1 141 1 120 1 353 1 190 1 300 1 18 1 
275 1 311 1 104 3 155 1 339 1 109 1 25 1 26 1 27 1 318 1 222 1 223 1 341 3 283 1 31 1 53 1 244 1 7 1 228 1 206 1 349 1 170 2 327 1 58 1 140 1 141 1 120 1 353 2 190 1 18 1 
275 1 311 1 104 2 155 1 339 1 109 1 26 1 222 1 223 1 341 2 283 1 31 1 53 1 7 1 228 1 206 1 349 1 170 2 327 1 140 1 141 1 120 1 353 2 190 1 18 1 
311 1 104 1 155 2 106 1 339 1 109 2 27 1 318 1 222 2 341 1 92 1 113 1 31 1 53 2 134 1 291 1 327 1 58 1 120 1 192 1 255 1 270 1 21 1 
275 1 170 2 311 1 104 1 155 1 327 1 141 1 58 1 339 1 120 1 109 1 26 1 25 1 190 1 202 1 27 1 223 1 222 1 341 1 283 1 31 1 53 1 244 1 7 1 33 1 228 1 
307 1 
197 1 152 1 258 1 311 2 50 3 154 1 181 1 128 1 156 3 339 2 200 1 241 1 130 1 30 1 113 1 31 1 226 1 262 1 134 1 247 1 183 1 288 1 185 1 291 1 327 2 208 1 119 1 295 1 120 1 352 1 233 1 266 2 62 1 213 1 214 1 255 2 270 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 168 1 152 1 258 1 50 3 181 1 128 1 156 3 200 1 295 1 352 1 130 1 266 1 213 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 288 1 258 1 50 2 185 1 154 1 181 1 128 1 156 2 208 1 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 258 1 50 2 181 1 128 1 156 2 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
183 1 197 1 152 1 288 1 258 1 50 2 185 1 154 1 181 1 128 1 156 2 208 1 200 1 295 1 352 1 130 1 30 1 214 1 226 1 272 1 179 1 
75 1 248 1 230 1 66 1 166 5 11 1 12 2 219 1 186 1 338 1 157 2 143 2 15 1 281 1 296 2 145 1 212 1 225 1 320 1 122 1 19 3 46 1 229 2 
273 1 153 1 337 3 157 7 159 1 281 2 29 1 225 2 343 1 320 2 286 3 229 1 263 1 230 2 75 3 166 17 11 1 137 2 12 4 171 4 354 13 296 1 212 2 145 1 357 1 174 1 194 1 19 10 45 1 361 4 302 13 303 3 
152 1 311 1 339 1 157 1 317 1 281 1 130 2 342 1 113 1 225 1 31 1 204 1 320 1 343 1 345 1 246 1 134 1 263 1 230 1 166 2 326 1 11 1 77 1 171 1 78 1 12 2 327 1 40 1 120 1 352 2 296 1 212 1 255 1 194 1 19 1 195 1 65 1 257 1 
124 1 152 1 311 1 339 1 157 2 281 1 130 1 225 1 320 1 345 1 261 1 246 1 263 1 230 1 166 2 11 1 78 1 12 2 327 1 40 1 352 1 265 1 81 1 212 1 255 1 194 1 
152 1 276 1 311 8 277 1 339 7 157 1 87 1 110 1 281 2 130 1 223 1 113 3 225 2 31 2 320 2 343 1 246 1 134 2 230 2 166 2 11 2 251 1 291 1 78 1 12 4 327 8 40 1 120 2 352 1 15 1 333 1 212 2 255 2 300 1 19 1 194 1 270 1 178 1 217 2 
152 1 153 1 337 1 157 2 129 1 281 1 130 1 284 1 225 1 320 1 263 1 230 1 75 1 166 3 11 1 171 1 12 2 78 1 40 1 352 1 144 1 354 1 212 1 145 1 19 1 302 1 303 1 
230 1 75 1 166 2 236 1 11 1 171 1 12 2 15 1 354 1 281 1 212 1 225 1 320 1 19 2 45 1 302 1 303 1 229 1 
230 1 166 2 153 1 11 1 171 1 12 2 157 2 15 1 354 1 281 1 212 1 145 1 225 1 320 1 299 1 302 1 
153 1 337 1 157 2 281 1 225 1 320 1 229 1 75 1 230 1 166 4 11 1 12 2 171 2 15 1 354 2 212 1 145 1 19 2 45 1 302 2 303 1 
230 1 75 1 166 2 236 1 11 1 171 1 12 2 110 1 354 1 281 1 212 1 225 1 320 1 19 2 45 1 302 1 303 1 229 1 
230 1 166 2 153 1 11 1 171 1 12 2 157 2 110 1 354 1 281 1 212 1 145 1 225 1 320 1 299 1 302 1 
230 1 75 1 166 4 153 1 11 1 337 1 171 2 12 2 157 2 110 1 354 2 281 1 145 1 212 1 225 1 320 1 19 2 302 2 303 1 
230 1 75 1 166 4 153 1 11 1 337 1 171 2 12 2 157 2 354 2 281 1 145 1 212 1 225 1 320 1 19 2 45 1 302 2 303 1 229 1 
311 1 339 1 157 1 72 1 317 1 281 1 130 1 113 1 225 1 343 1 31 1 204 1 320 1 134 1 230 1 166 2 11 1 77 1 12 2 327 1 120 1 352 1 296 1 212 1 255 1 19 1 194 1 195 1 
311 1 70 1 339 1 157 1 317 1 281 1 130 1 113 1 225 1 343 1 31 1 320 1 347 1 134 1 230 1 166 2 36 1 11 1 77 1 12 2 327 1 120 1 352 1 296 1 212 1 255 1 19 1 194 1 
153 1 337 1 157 2 281 1 225 1 320 1 263 1 229 1 75 1 230 1 166 4 11 1 12 2 171 2 354 2 212 1 145 1 19 2 45 1 302 2 303 1 
153 1 311 1 337 1 157 2 339 1 72 1 317 1 281 1 130 1 113 1 225 1 31 1 204 1 320 1 229 1 134 1 75 1 230 1 166 4 11 1 77 1 171 2 12 2 327 1 120 1 352 1 354 2 44 1 145 1 212 1 300 1 19 2 45 1 195 1 302 2 303 1 
152 1 153 1 337 1 157 1 129 1 281 1 130 1 225 1 320 1 229 1 263 1 230 1 75 1 166 3 11 1 12 2 78 1 171 1 40 1 352 1 144 1 42 1 354 1 145 1 212 1 19 2 45 1 302 1 303 1 
48 1 86 1 1 4 319 1 225 3 320 3 132 1 229 8 230 3 8 1 137 2 12 6 328 1 143 1 145 7 19 25 334 1 273 2 153 7 337 8 199 1 157 24 239 1 281 3 203 1 29 2 286 4 346 1 164 1 75 8 166 49 289 1 38 2 39 1 176 1 45 7 361 4 303 8 
48 2 86 1 153 2 337 3 1 4 199 1 157 12 239 1 281 2 203 1 29 2 225 2 320 2 286 2 132 2 164 1 229 2 230 2 8 1 75 3 166 25 289 1 38 1 12 4 39 1 328 1 143 1 145 2 176 1 19 13 45 1 334 1 361 2 303 3 
48 2 86 1 180 1 1 4 225 4 320 4 132 1 229 10 230 4 8 1 137 3 12 8 186 1 328 1 143 2 145 8 19 31 334 1 66 1 273 2 153 7 337 8 338 1 199 2 157 29 239 1 281 4 203 1 29 3 286 5 346 1 164 1 75 9 248 1 166 60 289 1 38 1 39 1 176 1 122 1 45 8 361 6 46 1 303 8 
273 2 48 1 86 1 153 6 337 7 1 4 199 1 157 22 239 1 281 3 203 1 29 2 225 3 320 3 286 4 346 1 132 1 164 1 229 6 8 1 230 3 75 7 166 45 289 1 137 2 38 1 12 6 39 1 328 1 143 1 145 6 176 1 19 23 45 5 334 1 361 4 303 7 
66 1 273 2 48 1 86 1 153 7 337 7 338 1 1 4 199 1 157 25 239 1 281 2 203 1 29 2 225 2 320 2 286 4 132 1 164 1 229 8 248 1 8 1 230 2 75 8 166 52 289 1 137 2 38 1 186 1 12 4 39 1 328 1 143 1 145 8 176 1 122 1 19 27 45 7 46 1 334 1 361 4 303 7 
67 1 60 1 161 1 116 1 101 1 127 1 3 1 322 1 74 1 14 1 
83 1 234 1 
52 1 67 1 60 1 116 1 101 1 139 1 322 1 235 1 14 1 
191 1 95 1 
218 1 103 1 279 1 
67 1 115 1 116 1 50 1 127 1 156 1 3 1 80 1 74 1 254 1 14 1 60 1 101 1 358 1 322 1 227 2 324 1 150 1 
67 1 115 1 116 1 50 1 127 1 156 1 3 1 80 1 74 1 254 1 14 1 60 1 101 1 358 1 322 1 227 2 324 1 150 1 
67 1 115 1 116 1 50 1 127 1 156 1 3 1 80 1 74 1 254 1 14 1 60 1 101 1 358 1 322 1 227 2 324 1 150 1 
191 1 95 1 279 1 
191 1 95 1 279 1 
218 1 103 1 
218 1 103 1 279 1 
37 1 188 1 
67 1 309 1 152 2 50 1 156 1 130 2 322 1 245 1 324 1 227 1 116 1 37 1 138 1 78 2 232 1 80 1 187 1 172 1 188 1 40 2 352 2 14 1 296 1 60 1 234 1 83 1 101 1 
152 2 276 1 311 2 157 1 339 2 281 1 130 2 224 1 285 1 113 1 225 1 31 1 131 1 320 1 343 1 134 1 263 1 230 1 166 2 11 1 56 1 251 1 12 2 57 1 327 2 120 1 352 2 212 1 19 1 194 1 217 2 
102 1 231 1 170 2 311 2 327 2 339 2 141 1 120 1 25 1 26 1 190 1 223 1 222 1 283 1 31 1 300 1 7 1 335 1 228 1 
231 1 170 2 311 1 327 1 339 1 141 1 120 1 25 1 26 1 190 1 223 1 222 1 298 1 283 1 31 1 7 1 228 1 
311 1 291 1 106 1 327 1 339 1 120 1 222 1 297 1 113 1 255 1 31 1 270 1 335 1 134 1 
102 1 231 1 170 2 311 1 327 1 339 1 141 1 120 1 25 1 26 1 190 1 223 1 222 1 283 1 31 1 7 1 335 1 228 1 
220 1 
115 1 243 1 90 1 219 1 119 1 262 1 111 1 
50 1 154 1 156 1 314 1 90 1 6 1 262 1 348 1 115 2 288 1 185 1 208 1 292 1 119 1 266 1 213 1 360 1 
125 2 311 1 49 2 258 2 50 5 126 1 314 6 315 2 88 3 90 1 5 2 261 2 262 8 54 6 134 1 184 1 185 3 327 1 233 1 266 5 145 2 62 2 196 1 23 2 24 6 153 2 337 2 154 3 71 1 156 5 339 1 28 2 113 6 31 1 75 2 115 7 288 3 77 1 252 2 208 3 119 7 120 2 213 3 255 1 360 6 303 2 
24 5 86 1 153 2 50 1 337 2 154 2 156 1 314 3 29 1 90 1 286 1 54 5 262 7 8 1 75 2 115 4 288 2 289 1 185 2 208 2 13 1 119 5 266 1 145 2 213 1 176 1 334 1 361 1 360 3 22 1 303 2 
125 1 152 1 50 1 154 1 128 1 156 1 338 1 130 1 260 1 94 1 32 1 262 2 248 1 75 2 135 1 288 1 185 1 186 1 78 1 208 1 13 2 119 2 40 1 352 1 144 1 356 1 145 1 267 1 
115 1 288 1 185 1 154 1 208 1 119 1 111 1 243 1 90 1 262 1 
75 1 24 2 115 2 125 1 153 1 337 1 314 2 119 2 145 1 360 2 262 2 303 1 54 2 
115 1 90 1 266 1 50 1 213 1 156 1 
311 4 50 3 154 2 156 3 339 4 240 1 241 1 113 1 31 1 262 2 34 2 134 1 247 1 288 2 185 1 291 1 327 4 208 2 119 2 120 1 233 2 355 1 99 1 266 4 62 2 213 2 255 2 359 1 270 1 
152 2 311 1 157 1 339 1 72 1 317 1 281 1 130 3 225 1 113 1 320 1 204 1 31 1 32 1 134 1 230 1 166 1 11 1 77 1 12 2 78 2 327 1 79 1 40 2 120 1 352 3 144 2 296 1 212 1 255 1 194 1 195 1 
24 2 115 4 288 1 185 1 154 1 314 2 208 1 119 2 233 1 90 2 62 1 46 1 360 2 54 2 262 1 
67 1 101 1 209 1 
67 1 101 1 209 1 
67 1 101 1 209 1 
308 1 67 1 37 1 101 1 74 1 
67 1 101 1 330 1 
67 1 101 1 330 1 
67 1 101 1 330 1 
67 1 101 1 
116 1 14 1 
66 1 338 2 199 1 157 8 281 2 225 2 320 2 229 7 248 2 230 2 75 3 166 17 186 2 12 4 143 4 145 3 267 1 122 1 19 9 45 3 46 1 
66 1 248 1 75 1 166 5 219 1 186 1 338 1 157 2 143 2 145 1 122 1 19 3 46 1 229 2 
230 1 75 1 166 4 153 1 337 1 12 2 157 2 281 1 145 1 225 1 320 1 19 2 303 1 47 1 
75 2 273 1 166 12 153 2 137 1 337 2 157 6 29 1 145 2 286 2 19 6 45 2 361 2 303 2 229 2 
66 1 273 1 153 2 337 2 338 2 199 1 157 12 281 1 225 1 286 2 320 1 229 6 248 2 75 5 230 1 166 25 137 1 186 2 12 2 143 4 145 5 174 1 267 1 122 1 19 13 45 2 46 1 361 2 303 2 
166 1 157 1 361 1 
166 1 286 1 19 1 
230 1 75 1 166 6 153 1 337 1 12 2 157 3 281 1 145 1 225 1 320 1 19 3 261 1 45 1 303 1 47 1 229 1 
153 2 86 1 337 2 199 1 157 6 239 1 281 2 29 1 225 2 286 1 320 2 229 2 8 1 230 2 75 2 166 13 289 1 12 4 145 2 176 1 19 7 45 2 361 1 334 1 303 2 
75 1 248 1 166 6 186 1 338 1 157 3 143 1 145 1 19 3 45 1 229 2 
248 1 66 1 230 1 166 3 186 1 12 2 312 1 199 1 157 2 143 1 281 1 225 1 320 1 122 1 19 1 45 1 229 2 
230 1 248 2 75 2 166 10 12 2 186 2 338 1 157 5 239 1 143 3 281 1 145 2 225 1 320 1 267 1 19 5 45 2 229 5 
230 1 75 1 166 2 12 2 239 1 281 1 225 1 320 1 19 2 45 1 303 1 229 1 
230 1 75 1 166 4 153 1 337 1 12 2 157 2 239 1 281 1 145 1 225 1 320 1 19 2 45 1 303 1 229 1 
230 3 248 1 166 3 12 6 186 1 312 1 199 1 157 2 239 1 143 1 281 3 225 3 320 3 346 1 19 1 45 1 229 2 
66 1 337 1 338 1 312 1 199 1 157 9 239 1 281 4 29 1 225 4 320 4 286 1 346 1 229 6 248 2 182 1 230 4 75 3 166 18 137 1 186 2 12 8 143 3 145 2 267 1 122 1 19 9 45 3 361 2 303 1 47 1 
66 1 337 1 338 2 157 8 239 1 281 1 29 1 225 1 286 1 320 1 229 5 248 2 8 1 230 1 75 4 166 18 137 1 12 2 186 2 143 4 145 3 267 1 122 1 19 10 45 1 46 1 361 2 303 1 
66 1 337 1 338 2 157 8 239 1 281 2 29 1 225 2 320 2 286 1 229 6 248 2 8 1 230 2 75 4 166 18 137 1 186 2 12 4 143 4 145 3 267 1 122 1 19 10 45 2 46 1 361 2 303 1 47 1 
153 2 86 1 337 2 199 2 157 7 239 1 281 4 29 1 225 4 286 1 320 4 229 3 8 1 230 4 75 2 166 14 289 1 12 8 143 1 145 2 176 1 19 7 45 2 334 1 361 1 303 2 47 1 
153 1 86 1 337 2 157 4 239 1 281 2 29 1 225 2 286 1 320 2 8 1 230 2 75 2 166 10 289 1 12 4 145 1 176 1 19 6 361 1 334 1 303 2 47 1 
66 1 337 1 338 2 157 8 239 1 281 1 29 1 225 1 286 1 320 1 229 5 248 2 8 1 230 1 75 4 166 18 137 1 12 2 186 2 143 4 145 3 267 1 122 1 19 10 45 1 46 1 361 2 303 1 
153 2 86 1 337 2 199 1 157 6 239 1 281 2 29 1 225 2 286 1 320 2 229 2 8 1 230 2 75 2 166 13 289 1 12 4 145 2 176 1 19 7 45 2 361 1 334 1 303 2 
86 1 153 1 337 2 199 1 157 5 239 1 281 3 29 1 225 3 320 3 286 1 229 1 8 1 230 3 75 2 166 11 289 1 12 6 143 1 145 1 176 1 19 6 334 1 361 1 303 2 47 1 
153 1 86 1 337 2 157 4 239 1 281 2 29 1 225 2 320 2 286 1 346 1 229 1 8 1 230 2 75 2 166 10 289 1 12 4 145 1 176 1 19 6 45 1 361 1 334 1 303 2 
66 2 248 3 75 1 166 7 186 3 338 1 157 4 143 3 145 1 122 1 19 3 45 3 229 6 
86 1 153 1 337 2 199 1 157 5 239 1 281 3 29 1 225 3 320 3 286 1 346 1 229 1 8 1 230 3 75 2 166 11 289 1 12 6 143 1 145 1 176 1 19 6 334 1 361 1 303 2 
296 1 130 1 0 1 152 1 274 1 352 1 179 1 
0 1 152 1 274 1 158 1 278 1 352 1 296 1 160 1 130 1 268 1 304 1 179 1 
291 1 311 1 113 1 219 1 255 1 31 1 327 1 339 1 270 1 120 1 134 1 
152 1 77 1 311 1 78 1 327 1 339 1 40 1 120 1 352 2 317 1 296 1 130 2 113 1 255 1 31 1 246 1 195 1 134 1 
197 1 152 2 311 1 128 1 339 1 200 1 317 1 130 2 113 3 31 1 246 1 34 1 134 2 76 1 77 2 78 2 327 1 40 1 120 1 352 2 296 1 195 1 306 1 
197 1 152 2 311 2 70 1 128 1 339 2 200 1 317 1 130 2 113 3 31 1 246 1 34 1 134 2 76 1 77 2 78 2 327 2 40 1 120 1 352 2 296 1 271 1 306 1 
152 1 311 1 50 1 128 1 2 1 156 1 339 1 88 1 130 1 90 1 260 1 113 1 94 1 32 1 34 1 115 1 78 1 327 1 40 1 352 1 144 1 356 1 
23 1 152 1 311 1 50 1 128 1 156 1 339 1 88 1 130 1 90 1 260 1 113 1 94 1 32 1 34 1 115 1 78 1 327 1 40 1 352 1 144 1 356 1 
311 1 31 1 327 1 339 1 120 1 178 1 
9 1 310 1 276 1 311 7 77 1 126 1 277 1 327 7 339 6 87 1 120 3 223 1 333 1 255 2 113 3 300 1 31 2 178 1 205 1 217 1 134 2 
66 1 152 1 311 1 128 1 338 1 157 4 339 1 281 1 130 1 225 1 131 1 320 1 246 1 229 3 263 1 75 2 248 1 230 1 166 8 11 1 186 1 78 1 12 2 327 1 143 2 40 1 352 1 296 1 81 1 145 2 212 1 300 1 267 1 122 1 216 1 19 4 45 1 
23 1 50 3 311 1 49 1 258 1 154 2 156 3 339 1 315 1 88 1 111 1 28 1 243 1 90 1 113 2 262 1 115 1 288 2 185 2 327 1 208 2 252 1 119 1 172 1 355 1 266 2 213 1 255 1 
49 1 311 2 77 1 126 1 71 1 327 2 339 2 120 2 113 2 300 1 31 1 178 1 134 1 
207 1 311 4 291 1 327 4 339 4 120 1 255 1 113 1 300 1 31 1 270 1 271 1 134 1 
9 1 198 1 310 1 311 2 77 1 327 2 339 2 201 1 120 2 82 1 113 1 31 1 34 1 134 1 
170 1 283 1 311 1 255 1 31 1 327 1 141 1 339 1 120 1 228 1 
311 2 276 1 327 2 57 1 339 2 120 1 223 1 113 1 300 1 31 1 134 1 
207 1 291 1 311 5 276 1 327 5 339 4 87 1 120 2 333 1 255 1 113 3 300 1 31 2 270 1 34 1 134 2 
9 1 198 1 310 1 77 1 291 1 311 2 276 1 327 2 339 2 120 3 89 1 82 1 255 1 113 2 300 1 31 2 134 2 
152 1 77 1 311 1 78 1 70 1 327 1 339 1 40 1 120 1 352 2 317 1 296 1 130 2 113 1 255 1 31 1 246 1 134 1 
9 1 310 1 311 1 77 1 126 1 327 1 339 1 120 2 113 1 31 1 205 1 34 1 134 1 
332 1 296 1 344 1 108 1 177 1 
197 1 167 1 115 1 258 1 50 2 128 1 156 2 107 1 200 1 172 1 108 2 332 1 296 1 90 1 344 2 226 1 177 2 256 1 151 1 
152 1 56 1 108 1 352 1 332 1 130 1 224 1 285 1 177 1 
332 1 107 1 151 1 
206 1 349 1 219 1 18 1 
206 1 27 1 349 1 341 1 104 1 58 1 18 1 
341 1 155 1 53 1 
206 1 349 1 104 3 58 1 294 1 4 2 210 1 27 1 61 1 341 3 18 1 33 1 
206 1 27 1 68 1 349 1 341 2 104 2 58 1 18 1 353 1 
206 1 27 1 341 1 170 1 104 1 58 1 63 1 7 1 33 1 228 1 259 1 
206 1 27 1 341 1 104 1 58 1 18 1 33 1 
27 1 349 1 341 1 104 1 58 1 18 2 33 1 
206 1 104 2 58 2 253 1 121 1 27 2 341 2 18 1 33 1 165 1 
206 2 349 1 104 3 58 1 353 2 259 1 27 1 43 1 16 1 341 3 93 1 18 1 33 1 
206 1 349 1 170 2 104 2 117 1 58 1 353 1 27 1 190 1 341 2 283 1 18 1 7 1 33 1 228 1 
206 2 68 1 349 1 104 4 58 2 221 1 353 2 259 1 27 2 341 4 93 1 18 1 33 1 
206 1 27 1 349 1 341 1 104 1 58 1 18 1 33 1 
206 3 349 2 104 4 58 1 4 1 293 1 353 2 210 1 259 1 27 1 61 1 341 4 93 1 18 2 
206 1 349 1 104 2 105 1 58 1 353 1 280 1 27 1 341 2 18 1 33 1 96 1 
206 1 349 1 104 3 58 1 4 2 210 1 27 1 61 2 341 3 84 1 18 1 33 1 
206 2 142 1 118 2 305 1 
27 1 341 1 104 1 58 1 301 1 33 1 
206 1 16 1 27 1 349 1 341 2 104 2 58 1 18 1 353 1 33 1 
91 1 
206 1 27 1 349 1 341 1 104 1 58 1 18 1 33 1 
206 1 349 1 104 3 58 1 4 1 353 1 27 1 16 1 341 3 18 1 33 1 
206 1 93 1 293 1 259 1 
206 1 18 1 

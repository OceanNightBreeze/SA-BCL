#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 (44,337) (44,337) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 (44,337) (44,337) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 (44,337) (44,337) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 (44,337) (44,337) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 124 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 194 124 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 87 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (19,35) 335 353 (136,187) (136,187) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
342 1 44 1 69 4 52 9 26 1 27 2 127 2 205 1 249 1 7 3 54 1 96 1 118 4 351 2 183 2 59 2 10 1 140 2 303 6 304 9 337 1 308 1 40 2 194 1 64 1 286 1 
342 1 44 1 69 4 52 9 26 1 27 2 127 2 205 1 249 1 7 3 54 1 96 1 118 4 351 2 183 2 59 2 10 1 140 2 303 6 304 9 337 1 308 1 40 2 194 1 64 1 286 1 
342 1 44 1 69 4 52 9 26 1 27 2 127 2 205 1 249 1 7 3 54 1 96 1 118 4 351 2 183 2 59 2 10 1 140 2 303 6 304 9 337 1 308 1 40 2 194 1 64 1 286 1 
118 3 96 1 351 1 342 1 44 1 183 2 69 3 59 2 10 1 303 4 140 2 304 7 52 7 26 1 308 1 337 1 27 2 127 2 40 2 249 1 205 1 194 1 7 2 54 1 286 1 
118 2 351 2 183 1 69 2 59 1 10 1 140 1 303 3 304 4 52 4 127 1 40 1 7 1 194 1 54 1 64 1 
96 1 45 1 183 1 69 1 257 1 59 1 140 1 258 1 304 2 52 2 3 1 308 1 27 1 122 1 40 1 54 1 
118 1 45 1 69 2 257 1 140 2 303 1 304 3 52 3 27 1 40 2 7 1 54 1 286 1 
118 4 351 2 342 1 120 1 183 1 69 4 59 1 10 1 140 2 303 7 304 9 52 9 27 1 127 1 40 2 249 1 194 1 7 3 54 1 64 1 124 1 286 1 
118 4 351 2 342 1 120 1 183 1 69 4 59 1 10 1 140 2 303 7 304 9 52 9 27 1 127 1 40 2 249 1 194 1 7 3 54 1 64 1 124 1 286 1 
133 1 
139 2 92 1 236 1 
19 2 335 2 297 2 353 1 204 2 155 1 355 2 2 2 
86 1 146 2 19 2 344 1 150 1 346 1 23 2 320 1 2 3 297 2 128 1 204 2 229 1 230 1 155 1 32 1 250 1 33 1 98 1 328 2 353 1 163 1 330 1 332 1 210 2 101 1 355 3 306 1 189 1 335 2 192 1 358 1 311 2 357 1 144 1 108 1 263 1 
19 1 335 1 353 1 136 1 
340 1 251 1 236 1 355 1 2 1 138 1 203 1 113 1 240 1 297 1 115 1 242 1 262 1 349 1 
251 2 19 2 353 1 136 1 236 1 355 1 2 1 138 1 187 1 203 1 113 1 335 2 240 1 115 2 297 1 204 1 262 1 349 1 
251 1 115 1 154 1 63 1 70 1 
251 2 113 1 115 2 236 1 154 1 63 1 278 1 238 1 
251 1 115 1 154 1 
187 1 251 1 19 1 335 1 115 1 353 1 136 1 63 1 
236 1 
251 2 113 1 115 2 181 1 236 1 154 1 63 1 278 1 
251 5 221 2 66 1 236 1 333 2 20 1 278 1 302 1 82 1 305 1 113 1 115 5 114 2 29 1 154 2 284 1 170 1 41 1 63 2 
133 1 
19 1 121 1 102 1 355 2 2 2 224 1 240 1 335 1 297 2 204 1 155 1 
276 1 292 1 
146 1 33 1 98 1 150 1 332 1 210 1 101 1 355 1 2 1 279 1 229 1 128 1 311 1 357 1 155 1 263 1 
146 1 33 1 19 1 98 1 150 1 276 1 182 1 332 1 210 1 101 1 184 1 355 2 2 2 297 1 128 1 229 1 204 1 357 1 311 1 263 1 
19 4 43 1 352 1 55 1 182 2 184 1 355 5 2 5 224 1 335 1 297 5 242 1 204 4 155 1 
240 1 19 1 297 1 161 1 204 1 355 1 2 1 
335 1 19 3 297 3 182 1 204 3 155 1 355 3 2 3 
240 1 19 1 297 1 161 1 204 1 355 1 2 1 
19 1 121 1 355 1 224 1 2 1 335 1 240 1 297 1 204 1 
146 1 19 3 344 1 150 1 23 1 320 1 47 1 202 1 224 1 2 4 203 1 297 3 115 1 128 1 229 1 204 3 230 1 155 1 349 1 32 1 33 1 251 1 98 1 328 2 353 1 163 1 182 1 330 1 332 1 210 1 101 1 184 1 355 4 138 1 306 1 189 1 335 2 240 1 262 1 358 1 357 1 311 1 144 1 263 1 
19 1 55 1 182 1 102 1 355 2 2 2 240 1 297 2 204 1 242 1 155 1 
251 1 19 3 236 1 182 2 184 1 355 3 165 1 224 1 138 1 2 3 47 1 203 1 335 1 240 1 115 1 297 3 204 3 262 1 349 1 
19 2 182 1 300 1 276 1 355 2 224 1 2 2 335 1 297 2 204 2 
146 1 33 1 98 1 150 1 332 1 210 1 101 1 355 1 2 1 229 1 128 1 311 1 357 1 155 1 263 1 
146 1 98 1 332 1 210 1 100 1 101 1 355 1 2 1 229 1 128 1 311 1 357 1 155 1 231 1 263 1 
344 1 174 1 292 2 23 4 320 2 223 1 230 1 299 1 94 1 158 1 132 1 32 1 328 2 276 2 300 2 81 1 306 1 104 1 189 1 13 1 261 1 358 1 108 2 197 1 
19 1 35 1 355 1 2 1 240 1 297 1 204 1 262 1 
130 1 111 1 
130 1 111 1 
264 1 220 1 
264 1 220 1 
264 1 220 1 
318 1 130 1 111 1 
266 1 130 1 111 1 
264 1 123 1 142 1 130 2 220 1 111 2 
318 1 130 1 111 1 
318 1 130 1 111 1 
17 1 130 1 111 1 
17 1 130 1 111 1 
17 1 130 1 111 1 
19 2 67 1 266 1 152 1 111 1 2 2 91 1 225 1 112 1 115 1 297 2 204 2 93 1 6 1 129 1 155 1 130 1 131 1 251 1 334 1 355 2 212 1 310 1 85 1 
341 1 251 2 343 2 290 1 236 1 334 2 237 1 152 3 111 2 91 2 212 2 115 2 168 1 310 2 107 1 123 1 130 2 131 1 339 1 
127 1 183 1 59 1 
122 1 183 1 59 1 
127 2 122 1 245 1 201 1 59 3 315 1 
127 1 53 1 122 1 245 1 201 1 59 2 
127 1 122 1 245 1 201 2 59 2 
221 1 19 1 174 1 113 1 114 1 115 5 298 2 92 1 269 1 74 2 154 1 158 1 119 2 272 1 251 5 353 1 136 1 236 2 333 1 278 1 81 1 187 1 139 3 188 1 305 3 335 1 13 1 283 1 359 1 284 2 41 1 63 4 314 1 85 1 
221 1 19 1 174 1 70 2 113 1 114 1 115 5 92 1 269 1 74 2 154 3 326 1 158 1 119 2 272 1 232 2 251 5 159 1 136 1 353 1 236 2 333 1 278 1 81 1 187 1 139 3 305 3 335 1 13 1 283 1 284 2 63 4 41 1 314 1 85 1 
221 1 19 1 174 1 113 1 114 1 115 3 298 1 92 1 269 1 74 2 158 1 272 1 119 2 251 3 353 1 136 1 236 2 333 1 187 1 81 1 302 1 188 1 139 3 305 3 335 1 13 1 359 1 283 1 284 2 63 2 85 1 
221 1 19 1 174 2 319 1 113 1 114 1 115 4 298 2 92 3 269 2 74 4 158 2 97 1 119 4 272 1 251 4 353 1 136 1 236 4 333 1 187 1 81 2 302 1 139 7 188 1 305 5 335 1 13 2 359 1 283 1 141 1 284 4 63 3 85 2 
133 1 
263 1 134 1 
30 1 
128 1 332 1 263 1 
143 1 263 1 
332 1 263 1 
128 1 56 1 332 1 9 1 263 3 77 2 
18 1 233 1 8 1 87 1 174 2 58 1 265 1 222 1 23 9 320 4 167 1 104 4 270 2 243 2 299 3 158 2 108 5 196 1 
18 1 233 3 8 1 87 1 174 2 58 1 265 1 222 1 23 9 320 4 167 1 104 6 270 2 243 2 299 3 158 2 108 5 196 1 
18 1 87 1 174 2 265 1 222 1 23 9 320 4 270 2 299 3 158 2 233 1 8 1 275 1 58 1 167 1 104 4 243 2 108 5 196 1 
18 1 87 1 344 1 151 4 174 5 109 1 265 2 222 1 23 35 320 17 248 1 227 1 269 3 116 1 230 1 75 1 270 3 299 6 158 5 78 3 8 1 233 7 328 2 58 1 185 1 167 2 81 3 211 1 306 1 104 13 189 1 13 3 243 3 108 18 196 2 
18 1 87 1 344 2 174 2 88 1 265 1 222 1 23 11 320 5 347 1 230 2 75 1 270 2 299 4 158 2 233 2 328 4 58 1 167 1 306 2 104 6 189 2 243 2 108 6 196 1 
146 1 291 1 45 1 69 1 48 1 52 2 27 1 176 1 127 1 54 1 183 1 57 1 210 1 101 1 257 1 59 2 301 1 303 1 140 1 304 2 280 1 241 1 215 1 122 1 311 1 40 1 357 1 42 1 145 1 315 1 
146 1 173 1 291 1 45 1 69 1 52 3 27 1 176 1 127 1 183 1 57 1 210 1 101 1 257 1 59 2 301 1 140 1 303 2 304 3 241 1 105 1 215 1 122 1 311 1 40 1 357 1 195 1 42 1 315 1 145 1 
146 1 173 1 291 1 45 1 69 1 52 2 27 1 176 1 127 1 57 1 183 1 210 1 101 1 257 1 59 2 303 2 304 2 241 1 105 1 215 1 122 1 311 1 357 1 42 1 315 1 
147 1 146 1 98 1 291 2 332 1 210 1 101 1 25 1 49 1 140 1 304 1 52 1 241 2 126 1 27 2 260 1 5 1 215 2 357 1 40 1 311 1 263 1 195 1 
146 1 173 1 291 1 52 1 27 1 176 1 127 1 54 1 183 1 57 1 210 1 101 1 59 2 301 1 140 1 304 1 280 1 241 1 215 1 122 1 311 1 40 1 357 1 42 1 145 1 315 1 
234 1 
340 1 146 2 221 1 147 1 2 1 25 1 153 1 203 1 297 1 114 1 115 3 154 2 349 1 179 1 180 1 251 3 98 2 333 1 332 1 210 2 101 1 278 1 355 1 138 1 305 1 240 1 307 1 262 1 242 1 357 1 311 2 338 1 283 1 218 1 284 1 41 1 263 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 3 181 1 278 1 355 1 138 1 2 1 153 1 203 1 240 1 115 3 307 1 297 1 262 1 242 1 154 1 338 1 349 1 
340 1 251 2 221 1 333 1 355 1 138 1 2 1 153 1 203 1 240 1 115 2 114 1 307 1 297 1 262 1 242 1 338 1 349 1 41 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 355 1 138 1 2 1 153 1 203 1 240 1 115 2 307 1 297 1 242 1 262 1 338 1 349 1 
340 1 251 2 221 1 333 1 355 1 138 1 2 1 153 1 203 1 240 1 115 2 114 1 307 1 297 1 262 1 242 1 338 1 349 1 41 1 
32 1 306 1 189 1 344 1 328 2 230 1 358 1 94 1 133 1 
151 2 344 2 174 1 292 8 109 1 200 1 125 1 23 11 320 5 348 1 269 2 230 2 155 1 299 1 158 2 32 1 78 2 233 1 328 4 253 1 163 1 276 8 300 3 102 1 81 1 104 2 306 2 240 1 189 2 190 1 13 2 358 2 108 6 
146 1 86 1 19 1 150 1 344 1 23 2 2 2 320 1 226 1 297 1 128 1 229 1 204 1 230 1 155 1 32 1 33 1 98 1 274 1 253 1 328 2 300 1 182 1 163 1 331 1 332 1 210 1 101 1 184 1 355 2 279 1 306 1 189 1 357 1 311 1 358 1 108 1 263 1 
86 1 87 1 174 4 222 1 320 11 2 3 229 2 128 2 269 2 230 3 270 2 273 2 233 1 98 1 328 6 182 1 276 6 58 1 332 2 184 1 101 2 102 1 104 6 240 1 189 3 13 2 243 2 144 2 108 11 18 1 146 1 19 1 344 3 150 2 292 6 68 1 23 22 73 2 297 1 204 1 155 1 299 5 157 1 158 4 32 3 33 2 253 1 354 2 163 1 300 6 210 1 355 3 81 2 306 3 311 1 358 3 357 2 219 2 263 2 
146 8 86 1 147 1 19 1 173 1 344 2 23 2 2 1 24 1 320 1 293 1 48 1 25 1 297 1 325 1 204 1 230 2 94 1 32 2 250 2 98 2 328 4 182 1 163 1 332 2 210 7 101 2 355 1 356 1 306 2 189 2 213 1 214 1 357 2 311 8 358 2 83 1 108 1 263 3 
19 1 344 1 174 1 292 1 23 3 224 1 2 1 320 2 297 1 204 1 269 1 230 1 299 1 158 1 32 1 34 1 328 2 253 1 300 1 276 1 355 1 81 1 104 1 306 1 335 1 189 1 13 1 358 1 108 1 
32 1 233 1 328 2 344 1 300 1 276 1 292 1 23 2 104 1 306 1 189 1 13 1 261 1 358 1 230 1 94 1 158 1 108 2 
32 1 328 2 344 1 300 1 276 1 174 1 292 1 23 2 320 2 81 1 104 1 306 1 189 1 358 1 230 1 299 1 94 1 132 1 
344 1 174 1 292 2 23 4 320 2 269 1 230 1 299 1 94 1 158 1 32 1 233 1 328 2 276 2 300 2 81 1 306 1 104 2 189 1 13 1 358 1 108 2 
32 1 233 1 328 2 344 1 300 1 276 1 292 1 23 2 104 1 306 1 189 1 325 1 13 1 261 1 358 1 230 1 158 1 108 2 
32 1 328 2 344 1 300 1 276 1 174 1 292 1 23 2 320 2 81 1 104 1 306 1 189 1 325 1 358 1 230 1 299 1 132 1 
344 1 174 1 292 2 23 4 320 2 325 1 269 1 230 1 299 1 158 1 32 1 328 2 276 2 300 2 81 1 306 1 104 1 189 1 13 1 358 1 108 2 
344 1 174 1 292 2 23 4 320 2 269 1 230 1 299 1 158 1 32 1 233 1 328 2 276 2 300 2 81 1 306 1 104 2 189 1 13 1 358 1 108 2 
86 1 146 1 150 1 344 1 23 2 2 1 320 1 128 1 229 1 230 1 155 1 32 1 33 1 98 1 328 2 163 1 332 1 210 1 101 1 355 1 306 1 189 1 357 1 311 1 358 1 144 1 108 1 263 1 
86 1 146 1 344 1 23 2 2 1 320 1 128 1 229 1 230 1 155 1 231 1 32 1 98 1 328 2 163 1 332 1 210 1 101 1 100 1 355 1 306 1 189 1 357 1 311 1 358 1 62 1 108 1 263 1 
344 1 174 1 292 2 23 4 320 2 269 1 230 1 299 1 158 1 32 1 233 1 328 2 253 1 276 2 300 2 81 1 306 1 104 2 189 1 13 1 358 1 108 2 
146 1 150 1 344 1 174 1 292 2 23 4 320 2 2 1 73 1 48 1 128 1 229 1 269 1 230 1 299 1 158 1 32 1 33 1 233 1 328 2 300 2 276 2 332 1 210 1 101 1 355 1 81 1 104 2 306 1 189 1 13 1 357 1 311 1 358 1 144 1 108 2 263 1 
19 1 344 1 174 1 292 1 23 3 320 1 224 1 2 1 297 1 204 1 269 1 230 1 158 1 32 1 233 1 328 2 253 1 276 1 300 1 355 1 186 1 81 1 104 1 306 1 335 1 189 1 13 1 358 1 108 2 
151 2 344 2 174 3 88 1 109 1 89 2 345 1 23 19 320 10 269 3 230 2 299 3 158 3 78 1 233 3 328 4 254 1 255 2 36 1 81 3 211 1 11 1 61 1 306 2 104 6 189 2 13 3 282 1 15 1 108 9 
316 1 344 2 151 2 174 2 88 1 89 4 345 1 23 26 320 12 72 1 294 1 296 1 269 3 75 1 230 2 299 1 158 3 78 2 233 1 328 4 254 1 255 1 99 1 38 1 81 2 11 2 211 2 104 2 306 2 189 2 13 3 282 1 15 2 108 14 
18 1 316 1 151 4 344 3 174 4 88 1 109 1 89 4 345 1 222 1 23 36 320 19 72 1 294 1 296 1 269 4 75 1 230 3 270 1 299 4 158 4 78 3 233 4 328 6 254 1 255 1 99 1 36 1 38 1 81 4 211 3 11 1 306 3 104 8 189 3 13 4 282 1 243 1 15 2 108 17 285 1 
316 1 174 3 88 1 89 4 222 1 320 16 269 4 230 3 270 1 233 2 328 6 99 1 11 1 104 6 189 3 13 4 282 1 243 1 15 2 108 17 285 1 18 1 344 3 151 4 109 1 345 1 23 33 72 1 294 1 296 1 75 1 299 4 158 4 78 3 254 1 255 1 36 1 38 1 81 3 211 3 306 3 
18 1 316 1 151 4 344 1 174 7 88 1 109 2 89 3 345 1 222 1 200 2 23 45 320 22 72 1 294 1 296 1 269 7 230 1 270 1 299 7 158 7 78 4 233 6 328 2 254 1 255 1 99 1 38 1 81 7 211 2 11 1 306 1 104 13 189 1 13 7 282 1 243 1 15 1 108 23 
341 1 91 1 212 1 310 1 123 1 334 1 130 1 339 1 84 1 111 1 
129 1 266 1 
91 1 212 1 235 1 310 1 1 1 334 1 130 1 71 1 111 1 
289 1 318 1 
17 1 142 1 76 1 
341 1 251 1 343 1 236 1 334 1 237 1 152 2 111 1 91 1 115 1 212 1 168 1 310 1 107 1 123 1 131 1 130 1 339 1 
341 1 251 1 343 1 236 1 334 1 237 1 152 2 111 1 91 1 115 1 212 1 168 1 310 1 107 1 123 1 131 1 130 1 339 1 
341 1 251 1 343 1 236 1 334 1 237 1 152 2 111 1 91 1 115 1 212 1 168 1 310 1 107 1 123 1 131 1 130 1 339 1 
289 1 142 1 318 1 
289 1 142 1 318 1 
17 1 76 1 
17 1 142 1 76 1 
112 1 6 1 
343 1 19 2 67 1 266 1 152 1 2 2 111 1 91 1 225 1 112 1 115 1 297 2 93 1 6 1 204 2 129 1 155 1 350 1 130 1 251 1 334 1 355 2 212 1 310 1 107 1 63 1 85 1 
146 2 86 1 344 1 21 1 23 2 2 2 24 1 320 1 51 1 297 2 268 1 177 1 230 1 327 1 32 1 250 2 253 1 328 2 163 1 332 1 210 2 101 1 355 2 356 1 306 1 189 1 357 1 311 2 358 1 108 1 263 1 
198 1 146 2 173 1 183 1 57 1 210 2 101 1 59 2 301 1 48 1 336 1 309 1 176 1 127 1 122 1 215 1 357 1 311 2 315 1 
146 1 173 1 183 1 57 1 210 1 101 1 59 2 301 1 309 1 176 1 127 1 122 1 215 1 311 1 357 1 193 1 315 1 
198 1 146 1 147 1 98 1 160 1 332 1 210 1 101 1 25 1 260 1 215 1 357 1 311 1 263 1 
198 1 146 1 173 1 183 1 57 1 210 1 101 1 59 2 301 1 336 1 309 1 176 1 127 1 122 1 215 1 311 1 357 1 315 1 
60 1 
133 1 
221 1 113 1 114 1 115 1 92 1 154 1 207 1 251 1 252 1 236 2 333 1 278 1 139 1 305 1 284 1 16 1 41 1 
221 4 0 2 174 2 46 1 48 1 92 6 128 3 269 2 134 3 273 2 135 2 98 1 236 8 332 3 333 4 101 4 278 3 9 1 138 2 139 12 12 2 13 2 283 2 244 1 284 8 143 2 65 2 146 3 66 1 288 1 199 2 113 2 114 4 115 5 29 1 154 5 74 6 158 2 77 2 119 6 251 5 79 1 208 2 210 3 166 2 81 2 305 9 39 1 357 3 311 3 218 1 41 4 171 2 263 10 
65 2 221 2 151 1 174 2 72 1 294 1 296 1 113 2 115 1 114 2 175 1 92 3 269 2 154 1 74 5 158 2 119 5 78 1 251 1 99 1 236 5 333 2 278 1 38 1 81 2 139 6 211 1 12 1 305 8 13 2 283 1 218 1 284 5 312 1 41 2 
65 2 251 1 221 1 19 1 87 1 353 1 136 1 174 1 58 1 333 1 317 1 187 1 305 2 335 1 115 1 114 1 243 1 270 1 284 1 41 1 158 1 
221 1 66 1 236 1 333 1 305 1 113 1 114 1 29 1 284 1 41 1 
273 1 65 2 119 5 236 5 174 2 81 2 139 10 12 1 305 5 13 2 92 5 269 2 74 5 284 5 158 2 
251 1 113 1 115 1 236 1 154 1 278 1 
221 2 146 4 147 1 267 1 46 2 25 1 114 2 115 3 154 4 179 1 180 1 251 3 98 2 209 1 332 1 333 2 210 4 101 1 278 2 302 1 305 2 357 1 311 4 283 2 244 1 218 2 284 2 41 1 263 1 
146 1 19 2 344 1 150 1 23 1 320 1 2 3 297 2 204 2 229 1 128 1 230 1 155 1 32 1 33 1 98 1 328 2 353 1 163 1 330 1 332 1 210 1 101 1 355 3 306 1 335 2 189 1 311 1 357 1 358 1 144 1 263 1 
119 2 221 1 236 4 333 1 139 4 305 1 113 2 114 1 92 2 74 2 283 1 284 2 218 1 41 1 196 1 
91 1 191 1 334 1 
239 1 91 1 6 1 334 1 339 1 
91 1 191 1 334 1 
91 1 191 1 334 1 
91 1 28 1 334 1 
91 1 28 1 334 1 
91 1 28 1 334 1 
91 1 334 1 
130 1 111 1 
18 1 344 2 87 1 174 2 222 1 23 12 320 6 75 1 230 2 270 2 299 3 158 2 233 3 328 4 58 1 306 2 104 6 189 2 243 2 108 6 
133 1 
233 1 328 2 344 1 162 1 174 1 23 4 320 2 81 1 104 2 306 1 189 1 13 1 269 1 230 1 299 1 158 1 108 2 
78 1 233 1 151 2 174 1 109 1 23 7 320 4 81 1 211 1 104 2 13 1 269 1 299 1 108 3 158 1 
18 1 87 1 151 2 344 1 174 4 109 1 222 1 200 1 125 1 23 20 320 10 269 2 75 1 230 1 270 2 299 4 158 4 78 2 233 2 328 2 58 1 81 2 104 6 306 1 189 1 13 2 243 2 108 10 
151 1 23 1 320 1 
78 1 108 1 23 1 
273 1 233 1 344 1 328 2 162 1 174 1 23 6 320 3 81 1 306 1 104 3 189 1 13 1 269 1 230 1 299 2 158 1 108 3 
151 1 344 1 174 2 88 1 23 12 320 6 72 1 294 1 296 1 269 2 230 1 299 1 158 2 78 1 233 1 328 2 99 1 38 1 81 2 211 1 306 1 104 2 189 1 13 2 108 6 
233 1 174 1 58 1 23 6 320 3 104 2 243 1 270 1 299 1 158 1 108 3 
18 1 233 1 328 2 344 1 222 1 247 1 23 3 320 2 104 2 306 1 189 1 75 1 230 1 270 1 243 1 299 1 108 1 
233 2 344 1 328 2 87 1 174 2 88 1 58 1 23 10 320 5 306 1 104 5 189 1 230 1 243 2 270 2 299 3 108 5 158 2 
233 1 328 2 344 1 88 1 23 2 306 1 104 1 189 1 13 1 230 1 158 1 108 2 
233 1 328 2 344 1 174 1 88 1 23 4 320 2 81 1 104 2 306 1 189 1 13 1 269 1 230 1 299 1 158 1 108 2 
233 1 328 6 344 3 36 1 88 1 247 1 23 3 320 2 306 3 104 2 189 3 75 1 230 3 243 1 270 1 299 1 108 1 
18 1 87 1 151 3 344 4 174 4 88 1 222 1 23 26 320 13 248 1 116 1 269 2 75 1 230 4 270 2 299 4 158 4 78 3 233 4 328 8 162 1 36 1 58 1 185 1 81 2 211 1 306 4 104 8 189 4 13 2 243 2 108 13 
18 1 87 1 151 1 344 1 174 2 88 1 222 1 23 10 320 5 294 1 230 1 270 2 299 3 158 2 78 1 233 1 328 2 58 1 211 1 306 1 104 4 189 1 243 2 108 5 
18 1 87 1 151 2 344 2 174 2 88 1 109 1 222 1 23 13 320 6 294 1 269 1 230 2 270 2 299 3 158 3 78 1 233 2 328 4 162 1 58 1 211 1 306 2 104 5 189 2 13 1 243 2 108 7 
18 1 87 1 151 1 344 3 174 4 88 1 222 1 23 21 320 11 72 1 294 1 296 1 269 2 230 3 75 1 270 2 299 4 158 4 78 1 233 2 328 6 162 1 99 1 58 1 38 1 81 2 211 1 306 3 104 6 189 3 13 2 243 2 108 10 
151 1 344 2 174 1 88 1 23 11 320 4 72 1 294 1 296 1 269 2 230 2 299 1 158 2 78 1 328 4 162 1 99 1 38 1 81 1 211 1 306 2 104 1 189 2 13 2 108 7 
18 1 87 1 151 1 344 1 174 2 88 1 222 1 23 10 320 5 294 1 230 1 270 2 299 3 158 2 78 1 233 1 328 2 58 1 211 1 306 1 104 4 189 1 243 2 108 5 
151 1 344 1 174 2 88 1 23 12 320 6 72 1 294 1 296 1 269 2 230 1 299 1 158 2 78 1 233 1 328 2 99 1 38 1 81 2 211 1 306 1 104 2 189 1 13 2 108 6 
151 1 344 3 174 1 88 1 23 12 320 5 72 1 294 1 296 1 269 2 230 3 75 1 299 1 158 2 78 1 328 6 99 1 162 1 38 1 81 1 211 1 306 3 104 1 189 3 13 2 108 7 
151 1 344 3 174 1 88 1 23 12 320 5 72 1 294 1 296 1 269 2 230 3 75 1 299 2 158 2 78 1 233 2 328 6 99 1 36 1 38 1 81 1 211 1 306 3 104 4 189 3 13 2 108 7 
18 1 233 3 87 1 174 1 58 1 222 1 23 5 320 3 104 6 243 3 270 3 299 3 108 2 158 1 
151 1 344 3 174 1 88 1 23 12 320 5 72 1 294 1 296 1 269 2 230 3 75 1 299 1 158 2 78 1 328 6 99 1 36 1 38 1 81 1 211 1 306 3 104 1 189 3 13 2 108 7 
297 1 55 1 242 1 106 1 155 1 355 1 2 1 
55 1 256 1 355 1 2 1 322 1 297 1 259 1 106 1 242 1 155 1 156 1 313 1 
146 1 98 1 311 1 210 1 133 1 
146 1 19 1 98 1 150 1 182 1 332 1 210 1 101 1 355 2 2 2 297 1 128 1 229 1 204 1 311 1 357 1 155 1 263 1 
146 1 0 1 19 1 150 1 46 1 2 2 297 2 204 2 229 1 128 2 155 1 349 1 182 1 332 2 210 1 101 1 102 1 355 2 240 2 262 1 357 1 311 1 143 1 263 3 
146 1 0 1 19 1 46 1 2 2 297 2 204 2 229 1 128 2 155 1 231 1 349 1 182 1 332 2 210 1 101 1 102 1 355 2 240 2 262 1 357 1 311 1 143 1 263 3 
146 3 0 1 46 1 113 1 115 2 128 1 154 1 77 1 134 1 251 2 98 1 37 1 236 1 332 1 210 3 101 1 138 1 281 1 357 1 311 3 217 1 143 1 263 4 
0 1 251 2 146 3 98 1 208 1 37 1 236 1 332 1 210 3 101 1 46 1 138 1 113 1 115 2 128 1 311 3 154 1 357 1 143 1 263 4 134 1 77 1 
146 1 214 1 357 1 311 1 210 1 101 1 
250 1 146 7 98 2 173 1 332 2 210 6 101 3 9 1 356 1 293 1 48 1 213 1 214 1 14 1 128 1 311 7 357 2 83 1 117 1 263 3 271 1 
87 1 174 2 222 1 2 2 320 4 48 1 51 1 229 1 128 1 230 2 270 2 233 1 328 4 182 1 58 1 332 1 101 1 102 1 104 4 240 1 189 2 243 2 144 1 108 4 146 1 18 1 19 1 150 1 344 2 23 8 73 1 297 1 204 1 155 1 299 3 158 2 32 2 33 1 253 1 354 1 210 1 355 2 306 2 311 1 358 2 357 1 263 1 
146 1 221 2 66 1 199 1 113 1 114 2 115 3 29 1 154 2 134 1 77 1 251 3 98 1 135 1 208 1 236 1 333 2 210 1 278 1 166 1 138 1 305 1 311 1 284 1 244 1 41 2 63 1 263 2 
146 2 288 1 332 1 210 2 101 2 9 1 48 1 214 1 128 1 311 2 357 1 263 2 77 1 
146 4 147 1 98 1 37 1 332 1 210 4 101 1 48 1 25 1 323 1 311 4 357 1 263 1 
287 1 146 2 148 1 332 1 210 2 101 2 46 1 128 1 311 2 357 1 117 1 95 1 263 1 271 1 
146 1 98 1 122 1 183 1 357 1 57 1 311 1 210 1 101 1 59 1 
327 1 146 2 173 1 332 1 210 2 101 1 356 1 48 1 311 2 357 1 263 1 
147 1 146 5 98 1 332 2 210 4 101 2 46 1 356 1 25 1 48 1 323 1 213 1 311 5 357 2 83 1 263 3 
147 1 146 5 98 1 332 2 210 4 101 2 46 1 22 1 356 1 25 1 48 1 323 1 311 5 357 2 83 1 263 3 
146 1 19 1 98 1 182 1 332 1 210 1 101 1 355 2 2 2 297 1 128 1 229 1 204 1 311 1 357 1 155 1 231 1 263 1 
146 1 332 1 210 1 101 2 46 1 9 1 14 1 128 1 311 1 357 1 117 1 263 1 271 1 
31 1 228 1 216 1 155 1 246 1 
19 1 246 1 47 1 90 1 203 1 50 1 113 1 115 2 228 1 349 1 31 1 251 2 353 1 136 1 236 1 80 1 138 1 187 1 335 1 240 1 262 1 216 1 63 1 
31 1 297 1 268 1 177 1 228 1 21 1 246 1 355 1 2 1 
90 1 50 1 246 1 
133 1 
140 1 304 1 52 1 45 1 40 1 69 1 257 1 
241 1 52 1 27 1 
140 1 304 3 52 3 308 2 169 1 45 1 40 1 164 1 69 1 257 1 54 1 321 1 
303 1 140 1 351 1 304 2 52 2 45 1 40 1 69 1 257 1 
118 1 140 1 304 1 52 1 127 1 183 1 40 1 69 1 59 1 54 1 10 1 
140 1 304 1 52 1 40 1 69 1 257 1 54 1 
140 1 304 1 52 1 45 1 40 1 257 2 54 1 
277 1 140 1 304 1 52 1 40 1 206 1 54 1 
118 1 342 1 45 1 69 2 257 1 140 1 303 2 304 3 52 3 40 1 249 1 7 1 54 1 
45 1 183 1 69 1 257 1 59 2 140 1 303 1 304 2 52 2 4 1 127 1 122 1 40 1 54 1 315 1 
118 1 351 1 45 1 69 2 257 1 140 2 303 2 304 4 52 4 40 2 7 1 54 1 64 1 
140 1 304 1 52 1 45 1 40 1 69 1 257 1 54 1 
118 1 149 1 45 2 69 3 257 2 321 1 303 2 140 1 304 4 52 4 308 1 169 1 40 1 7 1 
172 1 120 1 45 1 69 1 110 1 257 1 140 1 303 1 304 2 52 2 40 1 54 1 
45 1 69 1 257 1 321 2 140 1 304 3 52 3 169 1 308 2 178 1 40 1 54 1 
295 2 324 1 137 1 69 2 
140 1 304 1 52 1 40 1 103 1 54 1 
303 1 140 1 342 1 304 2 52 2 45 1 40 1 69 1 257 1 54 1 
329 1 
140 1 304 1 52 1 45 1 40 1 69 1 257 1 54 1 
342 1 45 1 69 1 257 1 303 1 140 1 304 3 52 3 308 1 40 1 54 1 
118 1 149 1 69 1 7 1 
69 1 257 1 

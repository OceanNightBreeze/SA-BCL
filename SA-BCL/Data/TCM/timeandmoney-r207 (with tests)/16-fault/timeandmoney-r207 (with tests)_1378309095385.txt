#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (161,214) (161,214) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (161,214) (161,214) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (161,214) (161,214) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (161,214) (161,214) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 114 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (83,99) 297 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (83,99) 297 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 26 225 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 26 72 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 113 308 351 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 26 334 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 173 296 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (27,165,222) (18,97,249) (18,97,249) (18,97,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (27,165,222) (18,97,249) (18,97,249) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (27,165,222) (18,97,249) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (27,165,222) (18,97,249) (18,97,249) (18,97,249) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 26 317 48 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 26 72 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (285,303,326) (285,303,326) 101 75 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (27,165,222) (27,165,222) (27,165,222) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (27,165,222) (27,165,222) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (27,165,222) (27,165,222) (27,165,222) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 26 1 (70,290) 135 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 26 144 252 288 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 26 317 48 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 77 356 (186,289) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 26 1 (70,290) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
150 1 314 1 99 1 161 1 23 1 302 1 319 1 213 1 214 1 15 1 61 1 205 1 
150 1 314 1 99 1 161 1 23 1 302 1 319 1 213 1 214 1 15 1 61 1 205 1 
150 1 314 1 99 1 161 1 23 1 302 1 319 1 213 1 214 1 15 1 61 1 205 1 
150 1 314 1 99 1 161 1 23 1 302 1 319 1 213 1 214 1 15 1 61 1 205 1 
150 2 114 1 314 1 282 1 100 1 102 1 302 2 203 1 319 1 213 1 278 1 205 1 
150 2 314 1 84 1 64 1 67 1 254 1 174 1 154 1 176 1 205 1 15 1 219 1 302 2 319 1 278 1 61 1 
150 3 83 1 314 1 100 1 102 1 174 1 205 2 15 1 219 1 246 1 302 3 319 2 278 2 
297 1 150 1 83 1 314 1 302 1 319 1 205 1 
297 1 150 1 83 1 314 1 302 1 319 1 205 1 
76 1 241 1 62 1 
109 2 4 1 62 1 
201 1 341 2 295 2 171 2 260 2 261 1 242 2 137 2 
0 1 118 1 341 2 74 1 295 3 124 1 230 2 207 1 233 1 145 1 28 1 167 1 193 1 234 1 321 1 260 2 261 1 305 1 151 2 240 1 328 1 171 2 330 1 348 2 89 1 39 1 242 3 196 2 309 1 199 1 91 1 201 1 311 2 220 1 95 1 47 1 137 2 
280 1 341 1 295 1 171 1 242 1 201 1 260 1 137 1 19 1 
326 1 303 1 
340 2 251 1 341 1 295 1 171 1 3 1 241 1 56 1 285 2 242 1 276 1 260 1 303 1 137 1 62 1 
340 1 7 1 173 1 285 1 78 1 
225 1 340 1 7 1 26 1 285 1 78 1 
340 1 7 1 285 1 
280 1 340 1 341 1 295 1 171 1 285 1 78 1 242 1 201 1 346 1 260 1 137 1 19 1 
62 1 
340 1 7 1 72 1 26 1 285 1 78 1 
308 1 113 1 340 3 7 1 211 1 351 1 132 1 259 1 285 3 324 1 78 2 
0 1 292 1 341 1 74 1 295 2 171 1 124 1 89 1 348 1 242 2 196 1 91 1 28 1 311 1 167 1 95 1 321 1 322 1 137 1 250 1 
261 1 76 1 
35 1 341 2 295 2 171 1 242 2 191 1 260 1 261 2 137 1 
284 1 262 1 250 1 
0 1 74 1 295 1 264 1 124 1 89 1 348 1 242 1 196 1 91 1 28 1 311 1 167 1 95 1 321 1 261 1 
292 1 325 1 341 5 24 1 295 5 171 4 272 1 242 5 191 1 115 1 260 1 261 1 322 2 137 4 
280 1 341 1 295 1 171 1 242 1 137 1 
341 3 295 3 171 3 260 1 261 1 322 1 242 3 137 3 
280 1 341 1 295 1 171 1 242 1 137 1 
191 1 35 1 341 1 295 1 171 1 3 1 260 1 242 1 137 1 
0 1 185 1 292 1 118 1 340 1 251 1 74 1 341 3 295 4 124 1 3 1 230 2 56 1 191 1 233 1 145 1 28 1 276 1 167 1 193 1 234 1 321 1 303 1 260 2 261 1 305 1 322 1 11 1 151 1 240 1 171 3 89 1 348 1 285 1 242 4 196 1 309 1 91 1 201 1 311 1 220 1 95 1 47 1 137 3 
341 2 115 1 295 2 171 1 261 1 272 1 322 1 242 2 137 1 
292 1 340 1 251 1 341 3 295 3 171 3 3 1 285 1 56 1 242 3 14 1 191 1 276 1 260 1 303 1 322 2 137 3 11 1 62 1 
341 2 295 2 171 2 242 2 191 1 260 1 322 1 262 1 137 2 250 1 
0 1 74 1 295 1 124 1 89 1 348 1 242 1 196 1 91 1 28 1 311 1 167 1 321 1 95 1 261 1 
186 1 0 1 295 1 124 1 89 1 348 1 242 1 196 1 28 1 311 1 167 1 321 1 95 1 261 1 291 1 
118 1 119 1 253 1 230 2 233 1 193 1 234 2 320 1 304 1 305 1 262 2 236 1 151 4 153 1 284 2 265 1 39 2 287 1 46 1 245 1 220 1 47 1 223 1 250 2 
126 1 276 1 341 1 295 1 171 1 3 1 242 1 137 1 
339 1 175 1 
339 1 175 1 
169 1 301 1 
169 1 301 1 
339 1 169 1 301 1 175 1 
339 1 29 1 175 1 
339 1 29 1 175 1 
339 1 29 1 175 1 
339 1 175 1 182 1 
339 2 342 1 169 1 301 1 103 1 175 2 
339 1 318 1 175 1 
339 1 318 1 175 1 
339 1 318 1 175 1 
293 1 339 1 340 1 188 1 341 2 140 1 295 2 192 1 57 1 6 1 261 1 279 1 281 1 171 2 175 1 285 1 242 2 216 1 133 1 177 1 180 1 116 1 182 1 137 2 
339 2 34 1 340 2 188 2 342 1 141 1 86 2 142 1 175 2 285 2 216 2 43 1 192 1 177 2 57 3 268 1 49 1 62 1 279 2 
213 1 
84 1 67 1 154 1 
84 1 331 1 154 1 213 2 
121 1 84 1 212 1 130 1 221 1 154 1 213 1 
84 1 121 1 212 2 154 1 213 1 221 1 
340 1 7 1 26 1 285 1 78 1 334 1 
340 2 7 1 87 1 173 1 296 1 285 2 78 2 231 1 
50 2 340 3 4 2 78 2 79 1 274 2 211 1 6 1 8 1 259 1 320 1 323 1 324 1 62 3 63 1 236 1 109 4 132 1 241 1 285 3 349 1 69 2 217 1 198 3 245 1 223 1 
50 4 340 4 4 3 78 3 79 2 274 4 166 1 211 1 6 2 8 1 259 1 320 2 323 1 324 1 62 4 63 1 236 2 109 7 132 1 241 1 155 1 285 4 349 1 69 4 217 2 198 5 245 2 223 2 98 1 
95 1 76 1 159 1 
95 1 337 1 
20 1 
167 1 95 1 321 1 
66 1 95 1 
95 1 321 1 
202 1 167 1 107 1 95 3 321 1 159 2 
236 1 294 1 139 1 151 5 85 1 13 1 110 1 253 2 39 3 5 1 243 1 200 2 46 3 245 1 234 2 73 1 235 1 
236 1 294 1 139 1 151 5 85 1 13 1 110 1 253 2 39 3 5 1 243 1 200 2 46 3 245 1 234 2 73 1 235 1 
236 1 294 1 139 1 151 5 85 1 13 1 110 1 253 2 39 3 243 1 5 1 310 1 200 2 46 3 245 1 234 2 73 1 235 1 
118 1 294 5 139 2 163 4 269 1 229 1 253 5 230 2 255 1 5 2 79 3 233 1 104 3 193 1 234 14 320 3 235 2 305 1 236 4 151 29 85 1 110 1 13 2 39 15 243 1 215 1 200 3 46 10 245 4 179 1 73 1 313 1 183 1 223 3 
118 2 294 1 139 1 269 1 253 3 55 1 230 4 5 1 233 2 193 2 234 3 305 2 235 1 236 1 151 7 13 1 85 1 39 4 243 1 200 2 46 4 245 1 92 1 73 1 
0 1 150 1 314 1 84 1 270 1 124 1 331 1 154 1 348 1 213 1 196 1 15 1 205 1 40 1 299 1 311 1 302 1 222 1 319 1 94 1 18 1 97 1 12 1 249 1 160 1 
0 1 100 1 270 1 124 1 205 1 302 2 319 1 12 1 150 2 84 1 331 1 348 1 154 1 213 1 196 1 40 1 15 1 45 1 311 1 93 1 94 1 181 1 222 1 18 1 160 1 249 1 
0 1 150 1 84 1 100 1 270 1 124 1 331 1 154 1 348 1 213 1 196 1 40 1 15 1 311 1 302 1 93 1 222 1 181 1 94 1 18 1 160 1 
0 1 150 1 124 1 89 1 348 1 196 1 286 1 15 2 205 1 40 2 206 1 45 1 208 1 105 1 128 1 106 1 311 1 302 1 95 1 321 1 94 2 319 1 160 2 
0 1 150 1 314 1 84 1 270 1 124 1 331 1 154 1 348 1 213 1 196 1 15 1 205 1 40 1 311 1 302 1 93 1 222 1 319 1 94 1 18 1 97 1 12 1 249 1 160 1 
273 1 
340 1 132 1 26 1 89 1 348 1 69 1 285 1 196 1 7 1 317 1 211 1 311 1 336 1 48 1 324 1 224 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
340 1 7 1 72 1 26 1 285 1 
120 1 326 1 340 1 101 1 75 1 132 1 285 1 211 1 30 1 336 1 303 1 324 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
326 1 120 1 340 1 30 1 101 1 75 1 303 1 285 1 
120 1 326 1 340 1 101 1 75 1 132 1 285 1 211 1 30 1 336 1 303 1 324 1 
236 1 118 1 151 4 139 1 85 1 13 1 253 2 284 1 76 1 230 2 39 2 243 1 200 1 233 1 46 2 245 1 220 1 193 1 234 2 73 1 261 1 304 1 47 1 305 1 262 1 250 1 
118 2 294 1 163 3 253 1 230 4 255 1 79 2 344 1 233 2 104 3 147 1 193 2 234 6 320 2 261 1 31 1 305 2 262 4 236 2 151 14 152 1 240 1 284 11 330 1 39 8 46 2 244 1 245 1 220 1 47 2 183 1 223 1 250 11 
0 1 292 1 118 1 228 1 74 1 341 1 295 2 124 1 230 2 233 1 28 1 147 1 167 1 193 1 234 1 321 1 261 1 347 1 305 1 322 1 262 1 151 2 240 1 171 1 264 1 330 1 348 1 89 1 196 1 242 2 39 1 134 1 91 1 311 1 220 1 95 1 47 1 137 1 
0 2 139 1 54 1 230 6 275 1 233 3 145 2 147 1 193 3 234 9 321 2 194 2 320 2 322 1 236 3 151 18 240 1 13 1 284 7 330 1 196 3 242 3 243 1 200 1 70 2 245 3 73 1 250 7 292 1 118 3 294 4 122 2 341 1 74 2 253 4 295 3 124 2 79 2 28 2 167 2 261 1 305 3 262 7 85 1 171 1 172 2 348 3 89 1 39 9 91 2 218 1 46 8 311 3 220 3 93 1 95 2 47 3 223 2 137 1 
0 3 51 1 230 4 233 2 105 1 193 2 234 1 60 1 321 3 322 1 237 1 151 2 240 1 328 1 330 1 196 6 242 1 286 1 335 1 117 1 118 2 341 1 295 1 343 1 123 1 124 4 125 1 299 1 167 1 304 1 305 2 33 1 131 1 171 1 89 2 348 7 39 1 311 7 220 2 93 1 95 4 47 2 355 1 137 1 
118 1 341 1 253 1 295 1 230 2 79 1 191 1 233 1 147 1 193 1 234 2 260 1 320 1 305 1 262 1 236 1 151 3 36 1 284 1 171 1 242 1 39 1 46 1 245 1 220 1 47 1 223 1 137 1 250 1 
118 1 236 1 294 1 151 2 284 1 265 1 230 2 39 2 233 1 46 1 220 1 193 1 320 1 304 1 47 1 305 1 262 1 250 1 
118 1 151 2 153 1 253 1 284 1 230 2 233 1 46 1 245 1 220 1 193 1 234 2 304 1 47 1 305 1 223 1 262 1 250 1 
118 1 294 1 253 1 230 2 79 1 233 1 193 1 234 2 320 1 304 1 305 1 262 2 236 1 151 4 284 2 39 2 46 2 245 1 220 1 47 1 223 1 250 2 
237 1 118 1 236 1 294 1 151 2 284 1 265 1 230 2 39 2 233 1 46 1 220 1 193 1 320 1 47 1 305 1 262 1 250 1 
237 1 118 1 151 2 153 1 253 1 284 1 230 2 233 1 46 1 245 1 220 1 193 1 234 2 47 1 305 1 223 1 262 1 250 1 
118 1 294 1 253 1 230 2 79 1 233 1 193 1 234 2 320 1 305 1 262 2 236 1 237 1 151 4 284 2 39 2 46 2 245 1 220 1 47 1 223 1 250 2 
118 1 294 1 253 1 230 2 79 1 233 1 193 1 234 2 320 1 305 1 262 2 236 1 151 4 284 2 39 2 46 2 245 1 220 1 47 1 223 1 250 2 
0 1 118 1 74 1 295 1 124 1 230 2 145 1 233 1 28 1 167 1 193 1 234 1 321 1 261 1 305 1 151 2 240 1 330 1 348 1 89 1 39 1 196 1 242 1 91 1 311 1 220 1 95 1 47 1 
0 1 186 1 118 1 295 1 124 1 230 2 233 1 28 1 167 1 193 1 234 1 321 1 261 1 305 1 151 2 240 1 330 1 348 1 89 1 39 1 196 1 242 1 311 1 220 1 95 1 47 1 247 1 291 1 
118 1 294 1 253 1 230 2 79 1 233 1 147 1 193 1 234 2 320 1 305 1 262 2 236 1 151 4 284 2 39 2 46 2 245 1 220 1 47 1 223 1 250 2 
0 1 118 1 294 1 74 1 253 1 295 1 124 1 230 2 79 1 145 1 299 1 233 1 28 1 167 1 193 1 234 2 320 1 321 1 305 1 262 2 236 1 151 4 284 2 172 1 348 1 39 2 196 1 242 1 91 1 46 2 245 1 311 1 220 1 95 1 47 1 223 1 250 2 
118 1 294 1 341 1 295 1 230 2 79 1 191 1 233 1 127 1 147 1 193 1 234 1 260 1 320 1 305 1 262 1 236 1 151 3 171 1 284 1 242 1 39 2 46 1 245 1 220 1 47 1 223 1 137 1 250 1 
118 2 294 3 163 2 253 3 230 4 255 1 79 3 233 2 104 1 58 2 258 2 277 1 193 2 234 10 320 3 305 2 236 3 151 19 65 1 332 1 333 1 39 9 71 1 157 1 46 6 245 3 92 1 183 1 223 3 184 1 
118 3 294 2 269 2 163 2 252 1 253 2 230 6 255 2 79 3 233 3 104 2 58 4 257 1 258 1 277 2 193 3 234 12 320 3 305 3 236 3 151 26 111 1 332 1 333 2 39 14 44 1 288 1 46 4 157 1 245 2 92 1 267 1 223 2 184 1 
139 1 269 1 230 6 233 3 104 3 58 4 193 3 277 1 234 20 320 4 236 5 151 39 13 1 111 1 332 1 333 2 243 1 200 1 288 1 71 1 157 1 245 5 73 1 118 3 294 4 163 4 252 1 253 4 255 3 79 4 257 1 258 1 305 3 85 1 37 1 39 19 44 1 46 8 92 1 223 4 183 1 267 1 184 1 
118 4 294 3 139 1 269 2 163 4 252 1 253 4 230 8 255 3 79 4 233 4 104 3 58 4 257 1 258 1 277 1 193 4 234 17 320 4 305 4 236 5 151 36 85 1 13 1 37 1 111 1 332 1 333 2 39 19 243 1 200 1 44 1 71 1 288 1 157 1 46 7 245 4 92 1 73 1 267 1 183 1 223 3 184 1 
118 2 294 7 139 1 269 1 163 4 252 1 253 7 230 4 255 2 79 7 233 2 104 4 58 4 257 1 258 1 277 1 193 2 234 24 320 7 305 2 236 8 151 50 152 2 85 1 13 1 111 1 332 1 333 1 39 26 243 1 200 1 44 1 288 1 157 1 46 14 245 8 92 1 73 1 267 1 183 2 223 7 184 1 
43 1 339 1 177 1 188 1 342 1 352 1 175 1 268 1 279 1 216 1 
182 1 133 1 
266 1 339 1 177 1 188 1 88 1 148 1 175 1 279 1 216 1 
29 1 204 1 
318 1 103 1 248 1 
339 1 340 1 188 1 342 1 141 1 86 1 142 1 175 1 285 1 216 1 43 1 192 1 177 1 57 2 268 1 49 1 62 1 279 1 
339 1 340 1 188 1 342 1 141 1 86 1 142 1 175 1 285 1 216 1 43 1 192 1 177 1 57 2 268 1 49 1 62 1 279 1 
339 1 340 1 188 1 342 1 141 1 86 1 142 1 175 1 285 1 216 1 43 1 192 1 177 1 57 2 268 1 49 1 62 1 279 1 
29 1 103 1 204 1 
29 1 103 1 204 1 
318 1 248 1 
318 1 103 1 248 1 
140 1 116 1 
293 1 339 1 340 1 188 1 140 1 341 2 295 2 78 1 316 1 57 1 6 1 261 1 279 1 281 1 86 1 171 2 175 1 285 1 242 2 216 1 133 1 177 1 180 1 116 1 182 1 49 1 137 2 
0 1 118 1 341 2 295 2 2 1 124 1 123 1 230 2 80 1 233 1 147 1 81 1 193 1 234 1 321 1 305 1 32 1 33 1 151 2 240 1 328 2 330 1 348 2 242 2 39 1 196 2 197 1 311 2 220 1 95 1 47 1 
0 1 84 1 270 1 124 1 331 1 154 1 348 2 213 1 27 1 196 2 42 1 165 1 299 1 311 2 93 1 94 1 222 1 12 1 
0 1 84 1 270 1 124 1 331 1 154 1 348 1 213 1 164 1 27 1 196 1 311 1 93 1 94 1 222 1 12 1 
0 1 124 1 89 1 348 1 196 1 286 1 42 1 128 1 105 1 311 1 312 1 95 1 321 1 94 1 
0 1 84 1 270 1 124 1 331 1 154 1 348 1 213 1 27 1 196 1 42 1 165 1 311 1 93 1 94 1 222 1 12 1 
256 1 
198 1 345 1 170 1 76 1 241 1 69 1 62 1 
109 1 283 1 132 1 26 1 69 1 4 1 198 1 298 1 7 1 211 1 336 1 324 1 108 1 
0 1 226 1 1 1 202 1 124 2 26 1 210 1 7 1 211 1 167 1 321 1 323 1 324 1 132 1 348 1 89 1 196 1 198 1 311 1 336 1 95 3 135 1 136 1 337 2 290 1 
50 4 163 1 252 1 26 1 255 1 4 3 79 1 144 1 274 4 104 1 7 1 211 1 59 1 320 1 324 1 62 4 236 1 109 6 132 1 69 2 241 1 198 5 44 1 288 1 245 1 336 1 223 1 
139 1 340 1 341 1 295 1 211 1 346 1 59 2 260 1 324 1 10 1 280 1 236 2 13 1 85 1 329 1 171 1 132 1 38 1 285 1 69 2 242 1 198 2 201 1 245 1 336 1 137 1 19 1 
170 1 132 1 69 1 241 1 198 1 345 1 211 1 336 1 324 1 62 1 
236 2 50 5 109 10 122 1 38 1 69 5 4 5 79 2 274 5 198 5 245 2 59 2 320 2 223 2 62 5 
7 1 26 1 
315 1 132 1 26 1 89 1 348 1 69 1 196 1 7 1 311 1 211 1 317 1 336 1 48 1 324 1 224 1 
0 1 118 1 341 2 74 1 295 3 124 1 230 2 233 1 145 1 28 1 167 1 193 1 234 1 260 2 321 1 261 1 305 1 151 1 240 1 171 2 348 1 89 1 196 1 242 3 309 1 91 1 201 1 311 1 220 1 95 1 47 1 137 2 
50 2 109 4 132 1 69 2 241 2 4 2 274 2 198 1 200 1 211 1 336 1 323 1 324 1 224 1 62 4 
271 1 279 1 216 1 
271 1 279 1 216 1 
271 1 279 1 216 1 
43 1 300 1 116 1 279 1 216 1 
52 1 279 1 216 1 
52 1 279 1 216 1 
52 1 279 1 216 1 
279 1 216 1 
339 1 175 1 
236 1 118 2 294 1 151 6 139 1 269 1 85 1 13 1 253 2 230 4 39 3 243 1 200 1 233 2 46 3 245 1 193 2 234 3 73 1 305 2 
236 1 139 1 151 4 13 1 85 1 253 2 76 1 39 2 243 1 200 1 46 2 245 1 234 2 73 1 
118 1 236 1 294 1 227 1 151 4 253 1 230 2 39 2 79 1 233 1 46 2 245 1 193 1 234 2 320 1 305 1 223 1 
236 1 294 1 151 7 163 2 253 1 255 1 39 3 79 1 104 1 46 2 245 1 234 4 320 1 223 1 183 1 
118 1 294 2 139 2 163 2 269 1 253 4 230 2 79 2 233 1 104 2 193 1 234 9 320 2 305 1 236 3 151 18 152 1 85 1 13 2 39 9 243 1 200 1 46 6 245 3 244 1 73 1 223 2 183 1 
151 1 163 1 234 1 
151 1 104 1 39 1 
118 1 236 1 294 1 227 1 151 6 122 1 253 2 230 2 39 3 79 1 233 1 46 3 245 1 193 1 234 3 320 1 305 1 223 1 
118 1 294 1 163 1 252 1 253 1 230 2 255 1 79 2 233 1 104 1 193 1 234 6 320 2 305 1 236 2 151 12 111 1 39 6 44 1 288 1 46 2 245 2 92 1 223 2 267 1 
236 1 151 2 245 1 85 1 234 1 39 1 
118 1 294 1 139 1 151 3 269 1 13 1 253 1 230 2 39 1 243 1 156 1 233 1 46 2 193 1 234 2 73 1 305 1 
118 1 236 2 294 2 139 1 151 8 13 1 85 1 253 2 230 2 39 4 233 1 46 4 245 2 193 1 92 1 234 4 305 1 10 1 
118 1 236 1 294 1 151 2 230 2 39 2 233 1 46 1 92 1 193 1 320 1 305 1 
118 1 236 1 294 1 151 4 253 1 230 2 39 2 79 1 233 1 46 2 245 1 92 1 193 1 234 2 320 1 305 1 223 1 
118 3 294 1 151 3 139 1 269 1 13 1 253 1 230 6 39 1 156 1 233 3 71 1 46 2 92 1 193 3 234 2 305 3 
118 5 294 5 139 2 227 1 269 2 163 4 229 1 253 6 230 10 255 1 79 3 233 5 104 3 193 5 234 16 320 3 305 5 236 5 151 30 85 2 13 2 39 14 243 1 156 1 200 1 71 1 46 11 245 5 179 1 92 1 73 1 313 1 183 1 223 3 
118 1 139 1 163 1 253 2 230 2 255 1 233 1 104 1 193 1 234 3 305 1 236 1 151 6 13 1 85 1 39 3 243 1 200 1 288 1 46 2 245 1 92 1 73 1 
118 2 294 1 139 1 227 1 163 2 253 2 230 4 255 1 79 1 233 2 104 1 193 2 234 4 320 1 305 2 236 2 151 9 85 1 13 1 39 5 243 1 200 1 288 1 46 3 245 1 92 1 73 1 183 1 
118 3 294 1 139 1 227 1 163 1 269 1 252 1 253 3 230 6 255 1 79 2 233 3 104 1 193 3 234 9 320 2 305 3 236 3 151 17 85 1 13 1 111 1 39 8 243 1 200 1 44 1 288 1 46 4 245 3 92 1 73 1 223 2 267 1 
118 3 294 2 139 1 227 1 269 1 163 1 252 1 253 3 230 6 255 1 79 2 233 3 104 1 193 3 234 6 320 2 305 3 236 3 151 15 85 1 13 1 111 1 39 9 243 1 200 1 44 1 288 1 46 5 245 2 92 1 73 1 223 1 267 1 
118 1 139 1 163 1 253 2 230 2 255 1 233 1 104 1 193 1 234 3 305 1 236 1 151 6 13 1 85 1 39 3 243 1 200 1 288 1 46 2 245 1 92 1 73 1 
118 1 294 1 163 1 252 1 253 1 230 2 255 1 79 2 233 1 104 1 193 1 234 6 320 2 305 1 236 2 151 12 111 1 39 6 44 1 288 1 46 2 245 2 92 1 223 2 267 1 
118 4 294 2 139 1 227 1 163 1 269 2 252 1 253 3 230 8 255 1 79 2 233 4 104 1 193 4 234 7 320 2 305 4 236 3 151 16 85 1 13 1 111 1 39 9 243 1 200 1 44 1 288 1 46 5 245 2 92 1 73 1 267 1 223 1 
118 4 294 3 163 1 269 2 252 1 253 3 230 8 255 1 79 3 233 4 104 1 193 4 234 7 320 3 305 4 236 3 151 16 111 1 39 9 44 1 288 1 71 1 46 6 245 2 92 1 267 1 223 2 
236 3 294 3 151 9 139 2 13 2 85 2 253 4 39 5 243 1 200 1 46 7 245 3 234 4 73 1 10 1 
118 4 294 1 139 1 163 1 269 2 252 1 253 3 230 8 255 1 79 2 233 4 104 1 193 4 234 7 320 2 305 4 236 3 151 16 85 1 13 1 111 1 39 9 243 1 200 1 44 1 288 1 71 1 46 4 245 2 92 1 73 1 267 1 223 1 
338 1 341 1 295 1 115 1 261 1 272 1 242 1 
338 1 341 1 53 1 295 1 272 1 242 1 307 1 112 1 82 1 115 1 17 1 261 1 
0 1 105 1 311 1 124 1 95 1 321 1 76 1 348 1 89 1 196 1 286 1 
0 1 341 1 295 2 171 1 124 1 89 1 348 1 242 2 196 1 91 1 28 1 311 1 167 1 95 1 321 1 261 1 322 1 137 1 
0 1 66 1 341 2 327 1 295 2 171 1 3 1 124 1 77 1 348 1 56 1 242 2 196 1 91 1 276 1 28 1 311 1 167 2 95 3 321 2 261 1 322 1 137 2 
0 1 186 1 341 2 295 2 124 1 3 1 77 1 56 1 28 1 276 1 167 2 321 2 261 1 322 1 66 1 327 1 171 1 348 2 196 2 242 2 178 1 311 2 95 3 137 2 
0 1 340 1 66 1 327 1 124 1 77 1 348 1 285 1 196 1 311 1 7 1 167 1 289 1 321 1 95 4 159 1 356 1 337 1 
280 1 340 1 341 1 327 1 295 1 171 1 348 1 285 1 241 1 242 1 196 1 201 1 210 1 311 1 346 1 260 1 95 1 137 1 337 1 19 1 62 1 
0 1 311 1 124 1 348 1 196 1 355 1 
0 2 51 1 33 1 202 1 131 1 343 1 124 3 89 2 348 6 196 5 125 1 299 1 311 6 167 1 93 1 60 1 321 2 95 3 96 1 355 1 
0 1 118 2 139 1 341 1 74 1 253 2 295 2 124 1 230 4 80 1 233 2 299 1 145 1 28 1 147 1 167 1 193 2 234 2 321 1 261 1 305 2 322 1 262 1 236 1 151 4 85 1 13 1 284 1 171 1 172 1 348 1 39 2 242 2 196 1 243 1 200 1 70 1 91 1 46 2 245 1 311 1 220 2 73 1 95 1 47 2 137 1 250 1 
226 1 340 1 1 1 315 1 132 1 26 1 89 1 348 1 285 1 78 1 196 1 210 1 7 1 311 1 211 1 336 1 95 1 324 1 337 1 290 1 
0 1 202 1 124 2 348 2 196 2 299 1 311 2 167 1 321 1 95 2 159 1 136 1 355 1 
0 1 124 1 89 1 348 4 196 4 286 1 299 1 105 1 178 1 311 4 158 1 321 1 95 1 
117 1 0 1 51 1 327 1 54 1 124 2 348 2 196 2 125 1 311 2 335 1 167 1 321 1 95 1 
0 1 84 1 311 1 67 1 270 1 124 1 154 1 348 1 89 1 196 1 
0 1 33 1 124 1 348 2 196 2 299 1 311 2 81 1 93 1 321 1 95 1 
0 2 33 1 327 1 131 1 343 1 124 2 89 1 348 5 196 4 286 1 299 1 105 1 311 5 158 1 321 2 95 3 
0 2 33 1 239 1 327 1 131 1 124 2 89 1 348 5 196 4 286 1 299 1 105 1 311 5 158 1 321 2 95 3 
186 1 0 1 341 1 295 2 171 1 124 1 89 1 348 1 242 2 196 1 28 1 311 1 167 1 95 1 321 1 261 1 322 1 137 1 
0 1 51 1 202 1 327 1 124 2 348 1 196 1 125 1 311 1 167 1 321 1 95 1 96 1 
263 1 146 1 261 1 143 1 9 1 
263 2 187 1 340 2 251 1 3 1 241 1 56 1 285 2 78 1 190 1 143 2 276 1 146 2 16 1 303 1 261 1 9 1 11 1 62 1 
32 1 341 1 295 1 2 1 143 1 242 1 197 1 146 1 9 1 
187 1 190 1 9 1 
219 1 174 1 76 1 278 1 
150 1 219 1 302 1 319 1 174 1 278 1 205 1 
302 1 15 1 160 1 
150 3 314 1 25 1 174 1 176 2 205 1 350 1 219 1 302 3 354 1 319 1 278 1 
150 2 282 1 100 1 219 1 302 2 319 1 174 1 278 1 205 1 
150 1 314 1 102 1 302 1 203 1 319 1 213 1 278 1 205 1 
150 1 314 1 219 1 302 1 319 1 278 1 205 1 
150 1 314 1 219 2 302 1 319 1 174 1 205 1 
150 2 314 1 22 1 205 2 209 1 219 1 302 2 319 2 278 1 138 1 
150 3 314 1 100 2 102 1 189 1 174 1 205 1 219 1 246 1 302 3 129 1 319 1 278 2 
150 1 314 1 84 1 302 1 319 1 331 1 154 1 213 1 232 1 205 1 
150 4 314 1 282 1 162 1 100 2 102 1 174 1 205 2 219 1 246 1 302 4 319 2 278 2 
150 1 314 1 219 1 302 1 319 1 174 1 278 1 205 1 
150 4 100 2 102 1 68 1 25 1 174 2 176 1 205 1 219 2 246 1 302 4 354 1 319 1 278 3 
150 2 238 1 314 1 100 1 174 1 205 1 41 1 219 1 302 2 319 1 278 1 149 1 
150 3 314 1 195 1 25 1 174 1 176 2 205 1 219 1 302 3 354 2 319 1 278 1 
21 1 168 2 306 1 278 2 
150 1 314 1 353 1 302 1 319 1 205 1 
150 2 314 1 100 1 219 1 302 2 189 1 319 1 174 1 278 1 205 1 
90 1 
150 1 314 1 219 1 302 1 319 1 174 1 278 1 205 1 
150 3 314 1 100 1 219 1 302 3 189 1 319 1 174 1 176 1 278 1 205 1 
246 1 102 1 68 1 278 1 
219 1 278 1 

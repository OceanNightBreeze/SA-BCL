#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) (24,52) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (24,52) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) (24,52) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (80,86,140,153) (80,86,140,153) (80,86,140,153) 272 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 161 316 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 161 316 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 321 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
86 1 80 1 140 1 272 1 249 1 
321 1 66 1 235 1 
54 1 59 2 66 1 
239 2 176 1 21 1 14 2 256 2 257 2 247 2 265 2 
43 1 3 1 256 3 257 2 171 1 176 1 55 2 137 1 138 1 180 1 14 3 222 1 139 1 181 1 265 2 185 1 145 1 107 1 309 1 21 1 20 1 22 1 197 2 30 1 239 2 319 1 72 2 243 2 158 1 120 2 122 1 77 1 282 1 124 1 247 2 126 1 323 1 
91 1 239 1 176 1 14 1 256 1 269 1 37 1 257 1 247 1 265 1 
250 1 286 1 256 1 66 1 257 1 26 1 235 1 216 1 173 1 155 1 276 1 14 1 160 1 37 1 
250 1 256 1 66 1 257 1 26 1 235 1 216 2 173 1 239 1 276 1 14 1 160 2 247 1 37 1 265 1 
160 1 79 1 45 1 216 1 29 1 
18 1 279 1 160 2 66 1 79 1 235 1 216 2 29 1 
160 1 79 1 216 1 
308 1 256 1 269 1 257 1 29 1 216 1 91 1 176 1 239 1 14 1 160 1 37 1 247 1 265 1 
66 1 
18 1 160 2 66 1 79 1 248 1 235 1 216 2 29 1 
18 1 287 2 227 1 131 1 255 2 212 1 66 1 69 2 235 1 217 1 29 2 216 5 218 1 298 1 159 1 221 1 160 5 79 2 225 1 
21 1 321 1 
164 1 21 2 256 2 257 2 239 1 320 1 14 2 247 1 265 1 
178 1 192 1 152 1 
309 1 21 1 20 1 22 1 311 1 256 1 55 1 72 1 120 1 14 1 222 1 282 1 139 1 181 1 126 1 323 1 
230 1 309 1 20 1 22 1 256 2 152 1 257 1 68 1 239 1 55 1 72 1 120 1 14 2 139 1 282 1 222 1 181 1 247 1 126 1 323 1 
239 3 21 1 14 3 256 3 257 3 247 3 68 1 265 1 
91 1 239 1 14 1 256 1 37 1 257 1 247 1 
239 1 164 1 320 1 14 1 256 1 37 1 257 1 247 1 265 1 
250 1 43 1 3 1 256 4 257 3 216 1 173 1 92 1 176 1 55 1 138 1 14 4 139 1 222 1 181 1 102 1 265 2 185 1 230 1 107 1 309 1 21 1 20 1 22 1 26 1 197 1 68 1 239 3 276 1 319 1 72 1 243 2 158 1 320 1 120 1 122 1 77 1 282 1 160 1 124 1 247 3 37 1 126 1 323 1 
286 1 239 1 21 1 14 2 256 2 257 2 247 1 68 1 28 1 
250 1 230 1 189 1 256 3 66 1 257 3 26 1 68 2 216 1 173 1 239 3 276 1 320 1 14 3 160 1 37 1 247 3 102 1 265 1 
239 2 320 1 192 1 14 2 256 2 152 1 257 2 247 2 68 1 265 1 
309 1 21 1 20 1 22 1 256 1 55 1 72 1 120 1 14 1 222 1 282 1 139 1 181 1 126 1 323 1 
309 1 21 1 22 1 256 1 238 1 55 1 72 1 120 1 12 1 14 1 222 1 282 1 139 1 181 1 126 1 
185 1 288 1 192 1 19 1 43 1 7 1 152 1 197 2 32 1 199 1 138 2 158 1 243 2 178 1 122 1 77 1 124 1 301 1 144 1 
85 1 
286 1 230 1 21 1 256 5 257 5 68 2 28 1 239 4 119 1 320 1 14 5 247 4 39 1 265 1 
91 1 239 1 85 1 14 1 256 1 37 1 257 1 247 1 
190 1 179 1 
190 1 179 1 
36 1 170 1 
36 1 170 1 
36 1 170 1 
190 1 179 1 293 1 
157 1 190 1 179 1 
129 1 190 2 179 2 36 1 271 1 170 1 
190 1 179 1 293 1 
190 1 179 1 293 1 
148 1 190 1 179 1 
148 1 190 1 179 1 
148 1 190 1 179 1 
128 1 305 2 129 1 190 2 165 2 270 1 66 1 5 2 237 1 259 1 216 2 96 3 242 1 179 2 160 2 99 2 299 1 81 2 207 1 
165 1 256 2 5 1 257 2 215 1 216 1 96 1 179 1 14 2 99 1 305 1 190 1 231 1 307 1 21 1 310 1 112 1 115 1 239 2 157 1 160 1 35 1 247 2 207 1 
62 1 194 1 294 1 
318 1 194 1 294 1 
177 1 318 1 62 2 211 1 194 3 25 1 
177 1 318 1 156 1 97 1 211 1 194 1 
177 2 318 1 62 1 211 1 194 2 
127 1 287 1 251 1 255 1 215 1 217 2 216 5 218 1 10 2 54 1 262 1 298 3 103 1 141 1 301 1 303 2 18 1 59 3 63 1 19 1 191 1 66 2 69 1 112 1 29 4 236 1 235 1 115 1 280 1 160 5 79 1 322 2 
174 1 160 1 87 1 216 1 29 1 172 1 
127 1 287 1 255 1 216 3 217 2 10 1 54 2 298 3 103 1 141 1 301 1 225 1 303 2 59 4 63 1 19 1 191 1 66 3 69 1 112 1 235 1 29 2 236 1 280 1 160 3 322 2 
127 1 287 1 255 1 216 4 217 4 10 2 54 3 298 5 103 1 141 2 182 1 301 2 303 4 225 1 59 7 63 2 19 2 191 2 66 4 69 1 112 2 235 1 236 1 29 3 71 1 280 1 160 4 78 1 322 4 
22 1 321 1 273 1 
163 1 22 1 
51 1 
22 1 126 1 
130 1 309 1 22 3 8 1 273 2 126 1 
309 1 22 1 126 1 
22 1 246 1 
83 1 208 1 1 1 2 1 132 2 197 5 32 3 219 1 11 1 138 3 137 2 264 1 100 1 141 1 301 1 223 1 144 4 
83 1 208 1 1 1 2 1 132 2 197 6 32 3 219 1 11 1 137 2 138 4 264 1 100 1 141 1 301 1 223 1 144 4 
83 1 208 1 1 1 2 1 132 2 197 5 70 1 32 3 219 1 11 1 138 3 137 2 264 1 100 1 141 1 301 1 223 1 144 4 
83 2 162 1 208 1 1 2 2 2 43 1 132 3 219 3 261 3 175 1 11 3 138 19 137 16 263 1 264 1 100 5 16 1 141 5 223 1 301 5 144 13 63 2 149 1 191 2 19 2 313 1 274 1 197 35 32 8 243 2 158 1 33 3 77 1 124 1 
83 1 208 1 1 1 2 1 43 2 132 2 197 8 32 4 219 1 11 1 240 1 137 3 138 5 158 2 243 4 220 1 77 2 264 1 16 1 100 1 124 2 141 1 301 1 144 5 
86 1 80 1 140 1 272 1 249 1 
86 1 24 1 80 1 140 1 249 1 
153 1 52 1 140 1 249 1 
86 1 24 1 80 1 140 1 249 1 
86 1 80 1 140 1 272 1 249 1 
292 1 
127 1 287 1 41 1 255 1 216 2 217 1 218 1 55 2 298 1 222 1 181 2 266 1 18 1 309 1 22 1 23 1 69 1 116 1 277 1 72 2 120 2 201 1 282 2 160 2 202 1 204 1 79 2 126 1 
250 1 286 1 253 1 209 1 256 1 257 1 216 3 47 1 173 1 14 1 143 1 18 1 228 2 26 1 155 1 276 1 160 3 125 1 79 2 37 1 285 1 248 1 
250 1 286 1 253 1 209 1 256 1 257 1 216 3 47 1 173 1 14 1 143 1 18 1 228 3 66 1 26 1 235 1 155 1 276 1 241 1 160 3 79 1 125 1 37 1 248 1 
250 1 286 1 253 1 209 1 256 1 257 1 216 3 47 1 173 1 53 1 14 1 143 1 18 1 228 3 66 1 26 1 235 1 155 1 276 1 241 1 160 3 125 1 79 2 37 1 248 1 285 1 
250 1 253 1 256 1 255 1 167 2 257 1 173 1 94 1 14 1 18 3 267 2 26 1 276 1 121 1 125 1 37 1 284 1 285 4 286 1 287 1 209 1 214 1 216 5 217 1 47 1 218 1 53 4 54 2 297 1 298 1 143 1 56 2 228 6 61 1 66 5 315 2 69 1 67 1 235 5 155 1 241 4 160 5 79 7 248 1 
250 1 253 1 256 1 255 1 167 2 257 1 173 1 14 1 101 1 18 2 267 2 26 1 276 1 121 1 125 1 284 1 37 1 285 2 286 1 287 1 209 1 216 4 217 1 47 1 218 1 53 2 54 2 298 1 143 1 56 2 228 4 59 2 315 2 66 2 69 1 235 1 155 1 241 2 160 4 79 4 
250 1 286 1 287 1 253 1 209 1 167 2 256 1 255 1 257 1 217 1 216 4 47 1 173 1 218 1 53 2 94 1 54 2 298 1 14 1 297 1 143 1 18 2 56 2 228 4 267 2 66 1 315 2 26 1 67 1 69 1 235 1 155 1 276 1 241 2 121 1 160 4 79 4 125 1 284 1 37 1 285 2 
250 1 286 1 287 1 253 1 209 1 167 2 256 1 255 1 257 1 217 1 216 4 47 1 173 1 218 1 53 2 94 1 54 2 298 1 14 1 297 1 143 1 18 2 56 2 228 4 267 2 66 1 315 2 26 1 67 1 69 1 235 1 155 1 276 1 241 2 121 1 160 4 79 4 125 1 284 1 37 1 285 2 
250 1 286 1 287 1 253 1 209 1 167 2 256 1 255 1 134 1 257 1 217 1 216 4 47 1 173 1 218 1 53 2 298 1 14 1 143 1 18 2 59 2 228 4 66 1 315 2 26 1 67 1 69 1 235 1 154 2 155 1 276 1 241 2 200 1 121 1 123 1 160 4 79 4 125 1 206 2 37 1 285 2 
250 1 287 1 286 1 253 1 209 1 167 2 255 1 256 1 257 1 217 1 216 4 47 1 173 1 218 1 53 3 94 1 54 2 298 1 297 1 14 1 143 1 18 2 56 2 228 5 61 1 267 2 66 1 315 2 26 1 67 1 69 1 235 1 155 1 276 1 241 3 121 1 160 4 125 1 79 5 284 1 37 1 285 3 
250 1 287 1 286 1 253 1 209 1 167 2 255 1 256 1 257 1 217 1 216 4 47 1 173 1 218 1 53 3 94 1 54 2 298 1 297 1 14 1 143 1 18 2 56 2 228 5 61 1 267 2 66 1 315 2 26 1 67 1 69 1 235 1 155 1 276 1 241 3 121 1 160 4 125 1 79 5 284 1 37 1 285 3 
250 1 253 1 256 1 255 1 167 2 257 1 173 1 14 1 101 1 18 2 26 1 276 1 200 1 121 1 125 1 37 1 206 2 285 2 286 1 287 1 209 1 216 4 217 1 47 1 218 1 53 2 298 1 143 1 228 4 59 2 315 2 66 1 69 1 235 1 155 1 154 2 241 2 160 4 79 4 
208 1 1 1 43 1 132 1 219 1 11 1 137 2 138 3 178 1 264 1 141 1 301 1 144 2 185 1 192 1 21 1 152 1 197 5 32 2 199 1 243 2 158 1 122 1 77 1 321 1 124 1 
291 1 43 2 135 1 261 3 138 5 137 10 178 12 180 1 100 2 141 3 144 2 185 2 186 1 63 3 149 1 21 1 191 3 192 3 268 2 233 1 152 12 197 15 319 1 243 4 158 2 33 4 122 1 244 1 77 2 124 2 
43 1 256 2 257 1 295 1 55 1 95 1 138 1 137 1 180 1 14 2 139 1 222 1 181 1 185 1 184 1 230 1 309 1 21 1 20 1 192 1 22 1 311 1 233 1 68 1 197 2 239 1 72 1 319 1 120 1 158 1 243 2 122 1 77 1 282 1 124 1 247 1 126 1 323 1 
256 2 257 1 89 1 178 2 14 2 181 1 100 2 185 2 105 1 107 1 20 1 192 2 191 1 22 1 197 5 120 1 122 2 282 1 124 2 126 1 43 2 46 1 55 1 138 2 137 3 222 1 139 1 141 1 144 2 230 1 63 1 150 1 309 1 233 1 152 2 68 1 239 1 317 1 319 1 72 1 243 4 158 2 77 2 247 1 323 1 
41 1 43 1 168 1 171 1 55 2 137 1 138 1 180 1 222 1 181 1 266 1 185 1 309 1 22 1 23 1 197 2 277 1 72 2 319 1 120 2 243 2 158 1 122 1 77 1 282 2 124 1 204 1 38 1 126 1 
43 1 166 1 256 1 257 1 137 1 138 2 178 1 14 1 141 1 265 1 301 1 144 1 185 1 63 1 192 1 191 1 19 1 233 1 152 1 197 3 32 1 239 1 320 1 243 2 158 1 122 1 77 1 124 1 247 1 
185 1 192 1 191 1 43 1 152 1 197 2 9 1 199 1 158 1 243 2 137 2 178 1 122 1 77 1 100 1 124 1 141 1 144 1 
185 1 288 1 192 1 19 1 43 1 152 1 197 2 32 1 199 1 158 1 243 2 138 2 178 1 122 1 77 1 124 1 301 1 144 1 
43 1 137 2 138 2 178 2 100 1 141 1 301 1 144 2 185 1 63 1 191 1 192 2 19 1 152 2 197 4 32 1 199 1 243 2 158 1 122 1 77 1 124 1 
185 1 192 1 191 1 43 1 168 1 152 1 197 2 9 1 158 1 243 2 137 2 178 1 122 1 77 1 100 1 124 1 141 1 144 1 
185 1 288 1 192 1 19 1 43 1 168 1 152 1 197 2 32 1 158 1 243 2 138 2 178 1 122 1 77 1 124 1 301 1 144 1 
185 1 63 1 192 1 191 1 43 1 168 1 152 1 197 2 158 1 243 2 137 2 178 1 122 1 77 1 100 1 124 1 141 1 144 1 
185 1 63 1 192 1 191 1 43 1 152 1 197 2 158 1 243 2 137 2 178 1 122 1 77 1 100 1 124 1 141 1 144 1 
43 1 256 1 55 1 137 1 138 1 180 1 14 1 139 1 222 1 181 1 185 1 107 1 309 1 21 1 20 1 22 1 197 2 72 1 319 1 120 1 158 1 243 2 122 1 77 1 282 1 124 1 126 1 323 1 
43 1 256 1 55 1 137 1 138 1 180 1 12 1 14 1 139 1 222 1 181 1 185 1 309 1 21 1 22 1 197 2 196 1 238 1 72 1 319 1 120 1 158 1 243 2 122 1 77 1 282 1 124 1 126 1 
185 1 63 1 192 1 191 1 43 1 233 1 152 1 197 2 158 1 243 2 137 2 178 1 122 1 77 1 100 1 124 1 141 1 144 1 
43 1 256 1 49 1 55 1 137 2 178 1 14 1 139 1 222 1 100 1 141 1 144 1 185 1 107 1 63 1 309 1 150 1 192 1 191 1 20 1 22 1 152 1 197 2 72 1 120 1 158 1 243 2 122 1 77 1 282 1 124 1 126 1 323 1 
43 1 256 1 257 1 137 2 178 1 14 1 100 1 141 1 265 1 144 1 185 1 57 1 63 1 191 1 192 1 233 1 152 1 197 2 239 1 320 1 243 2 158 1 122 1 77 1 124 1 247 1 
43 2 133 1 6 1 261 1 138 10 137 9 100 3 141 3 301 3 224 1 144 6 60 2 63 3 149 1 191 3 19 3 268 1 109 1 197 19 32 3 316 1 240 1 118 1 243 4 158 2 33 2 34 1 77 2 161 2 124 2 
43 2 6 1 260 1 261 2 138 7 137 10 13 1 16 1 100 1 141 2 301 1 144 2 224 2 60 2 229 1 63 2 149 2 191 2 19 1 193 1 151 1 109 1 197 17 32 1 316 1 240 1 74 1 243 4 158 2 34 2 33 2 77 2 161 1 124 2 
43 2 133 1 6 1 260 1 261 3 138 16 137 15 13 1 100 3 141 4 301 4 224 2 144 5 60 3 229 1 63 4 149 3 191 4 19 4 268 1 193 1 151 1 109 1 113 1 197 31 32 2 316 1 240 1 74 1 243 4 158 2 33 4 34 1 77 2 161 1 124 2 
43 3 133 1 6 1 260 1 261 3 138 14 137 16 13 1 16 1 100 3 141 4 301 3 224 2 144 6 60 3 229 1 63 4 149 3 191 4 19 3 268 1 193 1 151 1 109 1 113 1 197 30 32 3 316 1 240 1 74 1 243 6 158 3 33 4 34 1 77 3 161 1 124 3 
208 1 1 1 43 2 132 1 6 1 260 1 219 1 261 4 11 1 138 22 137 22 13 1 264 1 16 1 100 7 141 7 301 7 224 1 144 14 186 2 60 2 229 1 63 6 149 2 191 6 19 6 268 2 193 1 151 1 109 1 197 44 32 7 316 1 240 1 74 1 243 4 158 2 33 4 34 1 77 2 161 1 124 2 
305 1 129 1 190 1 165 1 179 1 270 1 99 1 5 1 283 1 237 1 
157 1 307 1 
278 1 305 1 190 1 165 1 179 1 99 1 5 1 258 1 275 1 
305 1 129 1 190 1 165 1 270 1 66 1 5 1 237 1 259 1 216 1 96 2 242 1 179 1 160 1 99 1 299 1 81 1 207 1 
305 1 129 1 190 1 165 1 270 1 66 1 5 1 237 1 259 1 216 1 96 2 242 1 179 1 160 1 99 1 299 1 81 1 207 1 
305 1 129 1 190 1 165 1 270 1 66 1 5 1 237 1 259 1 216 1 96 2 242 1 179 1 160 1 99 1 299 1 81 1 207 1 
64 1 293 1 271 1 
64 1 293 1 271 1 
148 1 302 1 
148 1 271 1 302 1 
310 1 35 1 
165 1 256 2 5 1 257 2 215 1 216 1 96 1 179 1 14 2 15 1 99 1 305 1 190 1 231 1 307 1 21 1 310 1 112 1 29 1 115 1 239 2 157 1 242 1 160 1 35 1 81 1 247 2 
64 1 293 1 
148 1 271 1 302 1 
290 1 43 1 256 2 257 2 171 2 93 1 55 2 137 1 138 1 180 1 14 2 222 1 142 1 185 1 226 1 22 1 233 1 314 1 197 2 72 2 319 1 120 2 158 1 243 2 122 1 76 1 77 1 282 1 124 1 38 1 126 1 
106 1 147 1 62 1 252 1 232 1 42 1 194 2 25 1 111 1 294 1 49 1 318 1 55 2 72 2 120 2 281 1 98 1 282 1 222 1 
147 1 62 1 232 1 42 1 194 2 25 1 111 1 294 1 234 1 318 1 55 1 72 1 120 1 281 1 98 1 222 1 282 1 
266 1 106 1 84 1 58 1 41 1 309 1 22 1 23 1 277 1 55 1 72 1 120 1 281 1 282 2 222 1 181 1 204 1 126 1 300 1 
106 1 147 1 62 1 252 1 232 1 42 1 194 2 25 1 111 1 294 1 318 1 55 1 72 1 120 1 281 1 98 1 282 1 222 1 
31 1 
227 1 298 1 159 1 321 1 66 1 235 1 217 1 
287 1 255 1 217 1 216 1 218 1 54 1 298 1 56 1 18 1 59 1 267 1 66 2 69 1 235 1 160 1 79 1 284 1 
127 1 287 1 163 1 130 1 255 1 169 1 89 1 218 1 55 1 298 2 222 1 181 1 304 1 188 1 309 1 22 2 65 1 69 1 117 1 72 1 120 1 282 2 126 1 
287 1 254 1 255 1 217 4 218 1 260 1 261 1 54 3 13 1 298 6 141 2 301 2 303 5 59 6 229 1 63 2 149 1 191 2 19 2 151 1 66 3 69 1 74 1 33 1 322 5 
162 1 287 1 1 1 254 2 256 1 255 1 257 1 216 1 217 2 218 1 91 1 219 1 176 1 11 1 14 1 297 1 298 2 141 2 301 1 265 1 17 1 308 1 269 1 69 1 239 1 160 1 37 1 247 1 
287 1 227 1 255 1 66 1 69 1 217 1 235 1 218 1 159 1 298 1 
59 10 63 2 191 2 19 2 254 2 66 5 89 1 217 5 54 5 298 5 322 5 141 2 301 2 17 1 303 5 
18 1 160 1 66 1 79 1 235 1 216 1 
127 1 287 1 41 1 255 1 213 1 217 1 216 1 218 1 55 2 298 1 222 1 181 2 266 1 18 1 309 1 22 1 23 1 69 1 116 1 277 1 72 2 120 2 201 1 282 2 202 1 160 1 204 1 79 2 126 1 
3 1 43 1 256 3 257 2 176 1 55 1 138 1 14 3 222 1 139 1 181 1 265 2 185 1 107 1 309 1 21 1 20 1 22 1 197 1 239 2 319 1 72 1 243 2 158 1 120 1 122 1 77 1 282 1 124 1 247 2 126 1 323 1 
127 1 287 1 59 4 254 1 132 1 255 1 66 3 69 1 217 1 235 1 218 1 116 1 54 2 298 2 322 2 303 2 
305 1 165 1 108 1 
305 1 165 1 310 1 270 1 104 1 
305 1 165 1 108 1 
305 1 165 1 108 1 
305 1 165 1 75 1 
305 1 165 1 75 1 
305 1 165 1 75 1 
305 1 165 1 
190 1 179 1 
208 1 1 1 43 2 132 1 197 7 32 2 219 1 11 1 138 4 137 3 158 2 243 4 77 2 264 1 100 1 124 2 16 1 141 1 301 1 144 3 
208 1 1 1 132 1 197 5 32 2 219 1 11 1 138 3 137 2 321 1 264 1 141 1 301 1 144 2 
306 1 63 1 19 1 191 1 43 1 197 4 32 1 138 2 158 1 243 2 137 2 77 1 124 1 100 1 141 1 301 1 144 2 
63 1 149 1 19 1 191 1 268 1 197 7 32 1 261 1 138 4 137 3 33 2 100 1 141 1 301 1 144 2 
208 1 0 1 1 1 43 2 132 1 219 2 261 2 11 2 137 10 138 12 264 1 100 4 16 2 141 3 301 3 144 9 186 1 63 2 191 2 19 2 268 1 197 22 32 5 158 2 243 4 33 2 244 1 77 2 124 2 
138 1 33 1 197 1 
261 1 137 1 197 1 
306 1 63 1 191 1 19 1 43 1 89 1 197 6 32 1 243 2 158 1 138 3 137 3 77 1 124 1 100 1 141 1 301 1 144 2 
43 1 260 1 261 1 138 6 137 6 13 1 100 1 141 2 301 2 144 2 229 1 63 2 149 1 191 2 19 2 151 1 197 12 32 1 240 1 243 2 158 1 74 1 33 1 77 1 124 1 
1 1 197 6 32 1 219 1 11 1 137 3 138 3 100 1 141 1 301 1 144 2 
208 1 0 1 43 1 197 3 32 1 219 1 11 1 137 1 138 2 158 1 243 2 77 1 264 1 100 1 16 1 124 1 144 2 
162 1 1 1 43 1 197 10 32 3 219 2 240 1 11 2 243 2 158 1 137 5 138 5 77 1 124 1 100 2 141 2 301 2 144 5 
191 1 43 1 197 2 240 1 158 1 243 2 137 2 77 1 124 1 100 1 141 1 144 1 
63 1 19 1 191 1 43 1 197 4 32 1 240 1 138 2 158 1 243 2 137 2 77 1 124 1 100 1 141 1 301 1 144 2 
0 1 43 3 133 1 197 3 32 1 219 1 240 1 11 1 138 2 158 3 243 6 137 1 77 3 16 1 124 3 100 1 144 2 
208 1 0 1 1 2 43 5 132 1 133 1 219 3 175 1 261 3 11 3 138 18 137 15 263 1 264 1 16 2 100 5 141 5 301 5 144 12 306 1 63 3 149 1 191 3 19 3 268 1 313 1 197 33 32 7 240 1 243 10 158 5 33 4 77 5 124 5 
208 1 229 1 1 1 149 1 43 1 132 1 197 7 32 2 219 1 261 1 11 1 240 1 137 3 158 1 243 2 138 4 33 1 77 1 264 1 124 1 141 1 301 1 144 2 
208 1 1 1 43 2 132 1 219 1 261 1 11 1 138 5 137 5 264 1 100 1 141 2 301 1 144 3 229 1 306 1 63 1 149 1 191 1 268 1 197 10 32 2 240 1 243 4 158 2 33 2 77 2 124 2 
162 1 208 1 1 1 43 2 260 1 219 1 261 1 11 1 138 10 137 10 13 1 264 1 100 2 141 4 301 4 144 5 229 1 306 1 63 2 149 1 191 2 19 2 151 1 197 20 32 3 240 1 243 4 158 2 74 1 33 1 77 2 124 2 
43 3 260 1 261 1 138 4 137 7 13 1 16 1 100 1 141 2 301 1 144 1 229 1 306 1 63 2 149 1 191 2 19 1 151 1 197 11 240 1 243 6 158 3 74 1 33 1 77 3 124 3 
208 1 229 1 1 1 149 1 43 1 132 1 197 7 32 2 219 1 261 1 11 1 240 1 137 3 158 1 243 2 138 4 33 1 77 1 264 1 124 1 141 1 301 1 144 2 
43 1 260 1 261 1 138 6 137 6 13 1 100 1 141 2 301 2 144 1 229 1 63 2 149 1 191 2 19 2 151 1 197 12 240 1 243 2 158 1 74 1 33 1 77 1 124 1 
43 3 260 1 261 1 138 4 137 7 13 1 16 1 100 1 141 2 301 1 144 2 229 1 306 1 63 2 149 1 191 2 19 1 151 1 197 11 32 1 240 1 74 1 243 6 158 3 33 1 77 3 124 3 
43 4 133 1 260 1 261 1 138 5 137 7 13 1 100 2 16 2 141 2 301 1 144 4 229 1 63 2 149 1 191 2 19 1 151 1 197 12 32 2 240 1 74 1 243 8 158 4 33 1 77 4 124 4 
208 2 1 1 197 7 32 3 219 3 11 3 138 4 137 3 264 1 100 3 141 1 301 1 144 6 
43 4 133 1 260 1 261 1 138 5 137 7 13 1 100 1 16 2 141 2 301 1 144 3 229 1 63 2 149 1 191 2 19 1 151 1 197 12 32 2 240 1 74 1 243 8 158 4 33 1 77 4 124 4 
286 1 21 1 14 1 256 1 195 1 257 1 28 1 
187 1 286 1 289 1 21 1 256 1 195 1 257 1 114 1 296 1 28 1 14 1 203 1 
55 1 72 1 120 1 23 1 321 1 181 1 
309 1 21 1 22 1 256 2 257 1 68 1 239 1 55 1 72 1 120 1 14 2 139 1 282 1 222 1 181 1 247 1 126 1 323 1 
309 2 21 1 22 3 256 2 26 1 257 2 68 1 48 1 276 1 239 2 50 1 55 1 72 1 120 1 14 2 139 1 282 1 222 1 246 1 37 1 247 1 126 2 323 1 
210 1 256 2 257 2 48 1 50 1 55 2 12 1 14 2 222 1 139 1 309 2 21 1 22 3 26 1 68 1 239 2 276 1 72 2 120 2 282 1 246 1 247 1 37 1 126 2 
163 1 40 1 256 1 257 1 216 2 48 1 173 1 91 1 176 1 50 1 55 2 14 1 222 1 181 1 265 1 308 1 309 1 22 4 269 1 66 1 273 1 27 1 235 1 239 1 72 2 120 2 160 2 282 1 246 1 79 1 37 1 247 1 126 1 
163 1 309 1 22 4 210 1 66 1 273 1 235 1 216 2 173 1 48 1 50 1 55 3 72 3 136 1 120 3 282 1 160 2 222 1 181 1 246 1 79 1 126 1 
55 1 72 1 120 1 245 1 282 1 222 1 
82 1 266 1 130 1 42 1 309 1 22 3 4 1 171 1 198 1 90 1 49 1 55 6 72 7 120 7 245 1 76 1 222 2 282 3 181 2 204 1 126 2 
1 1 256 2 257 1 93 1 11 1 178 1 14 2 264 1 185 2 107 1 192 1 20 1 21 1 22 1 197 5 32 2 120 1 122 2 282 1 124 2 126 1 208 1 43 2 132 1 49 1 219 1 55 1 137 2 138 3 222 1 139 1 141 1 301 1 144 2 150 1 309 1 233 1 152 1 68 1 239 1 317 1 72 1 243 4 158 2 77 2 247 1 323 1 
287 1 162 1 1 1 254 2 256 1 255 1 257 1 213 1 217 4 216 1 218 1 91 1 176 1 219 1 11 1 55 1 14 1 298 4 181 1 141 2 265 1 301 2 17 1 188 1 227 1 308 1 269 1 65 1 66 1 69 1 235 1 29 1 239 1 72 1 120 1 159 1 160 1 37 1 247 1 
130 1 309 1 22 2 273 1 51 1 55 1 117 1 72 1 120 1 245 1 222 1 282 2 126 1 
266 1 41 1 309 1 22 1 23 1 49 1 277 1 55 2 72 2 120 2 282 2 222 1 181 1 204 1 126 1 
266 1 41 1 309 1 22 1 312 1 50 1 277 1 55 2 72 2 120 2 222 1 282 2 204 1 126 1 
318 1 55 1 72 1 120 1 282 1 222 1 194 1 181 1 111 1 294 1 
226 1 42 1 22 1 49 1 55 2 72 2 120 2 76 1 222 1 282 1 126 1 
266 1 82 1 41 1 309 1 23 1 22 3 198 1 49 1 277 1 55 2 72 3 120 3 76 1 222 2 282 3 181 1 204 1 126 2 
266 1 183 1 41 1 309 1 23 1 22 3 198 1 49 1 277 1 55 2 72 3 120 3 76 1 222 2 282 3 181 1 204 1 126 2 
309 1 21 1 22 1 256 2 257 1 68 1 239 1 55 1 72 1 120 1 12 1 14 2 139 1 282 1 222 1 181 1 247 1 126 1 
266 1 130 1 309 1 22 1 90 1 50 1 55 1 72 1 120 1 222 1 282 2 204 1 126 1 
146 1 21 1 44 1 110 1 205 1 
250 1 146 2 21 1 44 2 110 1 66 1 26 1 88 1 235 1 29 1 216 2 173 1 276 1 73 1 160 2 205 2 37 1 102 1 324 1 
146 1 290 1 256 1 110 1 314 1 257 1 14 1 205 1 142 1 
73 1 110 1 88 1 

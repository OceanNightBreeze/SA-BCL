#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (76,78) (76,78) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 199 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 199 272 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 119 (22,126,181) (22,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 119 (22,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (102,167) (16,55,315) (22,126,181) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (219,237) (214,218) (214,218) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 119 (22,126,181) (22,126,181) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 196 193 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 128 65 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 246 162 19 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 162 19 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 162 130 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 128 65 103 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 128 65 103 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (288,318) (288,318) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (76,78) (76,78) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (76,78) (76,78) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (76,78) (76,78) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 225 15 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 119 (16,55,315) (16,55,315) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 119 (16,55,315) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (219,237) (219,237) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 119 (16,55,315) (16,55,315) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 177 (42,228) 252 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 57 70 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (231,254) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (60,293) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (108,300) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 2 123 1 297 6 255 1 165 1 257 1 215 1 7 1 8 1 50 2 135 1 136 9 175 2 138 1 226 1 66 2 186 4 233 1 23 9 192 1 326 2 30 1 287 1 198 2 33 3 34 1 38 2 77 5 
40 2 123 1 297 6 255 1 165 1 257 1 215 1 7 1 8 1 50 2 135 1 136 9 175 2 138 1 226 1 66 2 186 4 233 1 23 9 192 1 326 2 30 1 287 1 198 2 33 3 34 1 38 2 77 5 
40 2 123 1 297 7 255 1 165 1 257 1 215 1 7 1 8 1 50 2 135 1 136 10 175 2 138 1 226 1 66 2 186 5 233 1 23 10 192 1 326 2 30 1 287 1 198 2 33 4 34 1 38 2 77 6 
40 2 123 1 66 2 297 4 186 3 255 1 233 1 165 1 23 7 257 1 215 1 7 1 8 1 326 2 30 1 50 1 287 1 135 1 175 2 136 7 198 2 33 2 34 1 138 1 226 1 38 2 77 4 
40 1 66 1 297 3 186 2 23 4 257 1 215 1 192 1 7 1 8 1 30 1 50 2 175 1 136 4 198 1 33 1 38 1 77 3 
40 1 123 1 66 1 82 1 23 2 215 1 303 1 8 1 326 1 30 1 262 1 136 2 175 1 34 1 38 1 77 1 
40 2 30 1 66 2 297 1 186 1 136 3 33 1 23 3 138 1 215 1 8 1 326 1 77 2 
40 2 297 7 86 1 165 1 257 1 215 1 7 1 8 1 50 2 136 9 175 1 138 1 226 1 66 2 186 4 23 9 235 1 192 1 326 1 30 1 198 1 33 3 38 1 77 5 
40 2 297 7 86 1 165 1 257 1 215 1 7 1 8 1 50 2 136 9 175 1 138 1 226 1 66 2 186 4 23 9 235 1 192 1 326 1 30 1 198 1 33 3 38 1 77 5 
289 1 
97 1 221 1 46 1 52 1 323 1 178 1 25 1 56 1 258 1 95 1 327 1 
97 2 221 1 276 1 46 1 52 1 323 1 178 1 25 1 115 1 258 1 142 1 327 1 
97 1 203 1 
97 1 203 1 
97 1 
97 1 203 1 
97 1 203 1 
97 2 132 1 88 1 203 1 26 1 305 1 
289 1 61 1 
276 1 83 1 25 2 115 1 224 1 52 2 178 2 142 1 61 2 
273 1 85 1 335 1 
41 1 157 1 158 1 281 1 300 1 163 1 190 1 25 1 171 1 10 1 150 1 178 1 37 1 331 2 269 1 332 1 249 2 61 1 336 2 
157 1 158 1 44 1 85 1 281 1 300 1 190 1 25 2 115 1 171 1 10 1 74 1 52 1 37 1 178 2 331 1 269 1 142 1 249 1 336 1 
276 1 44 1 52 3 178 3 25 3 115 3 142 3 61 1 
328 1 52 1 178 1 25 1 115 1 142 1 327 1 
276 1 83 1 224 1 52 1 178 1 25 1 115 1 142 1 327 1 
44 1 276 1 83 1 46 1 323 1 25 2 115 2 258 1 327 1 97 1 307 1 221 1 13 1 74 1 52 2 178 2 142 2 
71 1 44 1 52 2 178 2 25 2 115 1 56 1 142 1 61 1 
44 1 46 1 323 1 25 1 115 1 258 1 327 1 97 1 307 1 221 1 14 1 74 1 52 1 178 1 142 1 
273 1 44 1 276 1 83 1 85 1 25 2 115 2 52 2 178 2 142 2 
157 1 158 1 300 1 281 1 190 1 25 1 171 1 10 1 178 1 331 1 269 1 37 1 249 1 61 1 336 1 
157 1 158 1 281 1 190 1 25 1 171 1 10 1 178 1 331 1 268 1 37 1 249 1 61 1 336 1 293 1 
81 1 85 2 301 1 127 1 170 1 217 1 99 1 173 4 267 1 137 1 139 1 53 1 62 1 273 2 284 2 194 1 29 1 243 2 32 1 151 1 330 1 334 1 120 2 335 2 
52 1 178 1 25 1 115 1 54 1 258 1 142 1 327 1 
71 1 276 1 44 2 83 1 110 1 116 1 74 1 52 5 178 5 25 5 115 4 56 1 142 4 61 1 
328 1 52 2 178 2 25 2 115 2 54 1 142 2 327 1 
202 1 140 1 
202 1 140 1 
211 1 28 1 
211 1 28 1 
211 1 28 1 
113 1 202 1 140 1 
220 1 211 1 310 1 202 2 140 2 28 1 
144 1 202 1 140 1 
113 1 202 1 140 1 
113 1 202 1 140 1 
202 1 140 1 59 1 
202 1 140 1 59 1 
202 1 140 1 59 1 
78 1 97 2 149 2 12 1 69 2 20 2 125 1 213 1 322 2 153 2 76 1 
149 1 97 1 12 1 69 1 20 1 225 1 52 1 322 1 178 1 25 1 115 1 153 1 142 1 
175 1 198 1 38 1 
82 1 175 1 38 1 
209 1 82 1 198 2 175 3 320 1 167 1 
209 1 82 1 198 1 175 2 320 1 102 1 
209 2 82 1 198 1 175 2 320 1 
97 1 89 1 203 1 
294 1 97 2 298 1 203 2 238 1 
88 1 26 1 305 1 97 2 241 1 264 1 132 1 197 1 199 1 17 1 203 1 
88 1 26 1 305 1 97 1 241 1 264 1 197 1 132 1 199 1 17 1 272 1 
10 1 289 1 107 1 
10 1 337 1 
290 1 
10 1 37 1 
171 1 10 3 117 1 37 1 270 1 107 2 
171 1 10 1 37 1 
10 1 93 1 
81 1 296 1 169 1 129 1 148 1 27 1 261 1 173 7 134 2 72 1 243 4 267 2 101 1 35 1 334 1 120 3 62 3 
81 1 296 1 169 1 129 1 148 1 27 1 261 1 173 7 134 2 72 1 243 4 267 2 101 1 35 1 334 1 120 3 62 3 
80 1 81 1 296 1 169 1 129 1 148 1 27 1 261 1 173 7 134 2 72 1 243 4 267 2 101 1 35 1 334 1 120 3 62 3 
296 2 2 1 81 4 301 1 87 3 6 3 169 5 129 1 170 1 217 1 261 1 11 1 99 3 173 31 134 3 267 5 101 2 137 3 53 1 57 1 62 10 182 1 64 1 189 1 284 2 324 4 148 2 27 1 72 2 243 16 201 1 35 1 334 4 120 15 
81 1 296 1 301 2 169 1 129 1 94 1 170 2 217 2 173 9 134 2 223 1 267 3 101 1 53 2 62 4 284 4 148 1 27 1 243 5 72 1 201 1 35 1 334 1 120 4 
40 1 66 1 253 1 22 1 187 1 126 1 23 1 326 1 30 1 48 1 136 1 331 1 119 1 249 1 105 1 336 1 
155 1 40 1 66 1 297 1 253 1 22 1 23 2 326 1 48 1 136 2 331 1 247 1 119 1 208 1 249 1 105 1 336 1 
155 1 157 1 43 1 82 1 297 1 253 1 281 1 23 1 167 1 326 1 48 1 175 1 136 1 16 1 331 1 181 1 208 1 249 1 105 1 336 1 
40 1 66 1 253 2 23 1 190 1 214 1 326 2 218 1 219 1 48 2 136 1 331 1 247 1 248 1 105 2 249 1 336 1 
40 1 66 1 253 1 22 1 126 1 23 1 326 1 30 1 48 1 136 1 331 1 119 1 208 1 249 1 105 1 336 1 
112 1 
97 1 196 1 241 1 264 1 88 1 266 1 190 1 331 1 193 1 26 1 305 1 249 1 336 1 
84 1 188 1 46 1 321 1 128 1 323 1 25 1 258 1 95 1 327 1 97 2 221 1 52 1 178 1 56 1 58 1 292 1 
84 1 278 1 188 1 46 1 321 1 323 1 25 1 258 1 95 1 327 1 97 2 221 1 52 1 178 1 56 1 58 1 292 1 
65 1 84 1 188 1 46 1 321 1 128 1 323 1 25 1 258 1 95 1 327 1 97 2 221 1 52 1 178 1 56 1 58 1 292 1 
97 1 
295 1 159 1 84 1 88 1 46 1 168 1 305 1 95 1 258 1 97 2 221 1 266 1 52 1 178 1 56 1 58 1 319 1 188 1 321 1 323 1 25 1 26 1 327 1 241 1 246 1 206 1 292 1 
295 1 159 1 84 1 162 1 88 1 46 1 168 1 305 1 95 1 258 1 97 2 221 1 266 1 52 1 178 1 56 1 58 1 19 1 319 1 188 1 321 1 323 1 25 1 26 1 327 1 241 1 246 1 333 1 206 1 292 1 
295 1 159 1 84 1 162 1 88 1 46 1 168 1 305 1 95 1 258 1 97 2 221 1 266 1 52 1 178 1 56 1 58 1 19 1 319 1 188 1 321 1 323 1 25 1 26 1 327 1 241 1 246 1 333 1 206 1 292 1 
295 1 159 1 84 1 162 1 88 1 46 1 305 1 130 1 95 1 258 1 97 2 221 1 266 1 52 1 178 1 56 1 58 1 143 1 280 1 319 1 188 1 321 1 323 1 25 1 26 1 327 1 241 1 73 1 246 1 292 1 
65 1 84 1 188 1 46 1 321 1 128 1 323 1 25 1 258 1 95 1 327 1 97 2 221 1 52 1 178 1 103 1 56 1 58 1 292 1 
65 1 84 1 188 1 46 1 321 1 128 1 323 1 25 1 258 1 95 1 327 1 97 2 221 1 52 1 178 1 103 1 56 1 58 1 292 1 
295 1 159 1 84 1 88 1 46 1 305 1 95 1 258 1 97 2 221 1 266 1 52 1 178 1 56 1 58 1 143 1 280 1 319 1 188 1 321 1 323 1 25 1 26 1 327 1 241 1 246 1 292 1 
273 1 81 1 296 1 85 1 301 1 284 2 129 1 27 1 170 1 217 1 29 1 173 6 134 1 243 3 32 1 72 1 267 2 330 1 35 1 289 1 334 1 53 1 120 3 335 1 61 2 62 2 
121 1 79 1 2 1 81 1 85 11 301 2 87 2 6 3 169 1 170 2 217 2 99 2 173 14 222 1 267 1 137 1 53 2 57 1 61 1 62 2 273 4 63 1 316 1 324 3 284 4 325 1 29 1 243 8 330 2 245 1 334 2 120 6 335 11 
157 1 158 1 44 1 300 1 163 1 301 1 9 1 170 1 217 1 171 1 10 1 173 2 52 1 269 1 178 2 53 1 142 1 61 1 273 1 63 1 281 1 190 1 145 1 325 1 25 2 284 2 115 1 29 1 243 1 330 1 74 1 329 1 37 1 331 1 245 1 249 1 120 1 336 1 
157 2 158 2 81 4 85 6 87 2 169 1 92 2 170 3 172 1 171 2 10 2 99 2 173 22 267 4 178 3 269 2 104 1 106 1 273 6 184 1 281 2 190 1 24 2 284 6 25 3 115 1 27 1 29 3 35 1 37 2 291 2 120 11 39 2 44 1 296 1 301 3 300 2 129 1 217 3 52 1 137 2 53 3 142 1 61 1 62 5 63 1 228 2 325 1 327 1 72 1 243 11 74 1 330 3 245 1 331 1 334 4 249 1 336 1 335 6 
122 1 157 2 44 1 256 1 301 2 164 1 5 1 91 1 216 1 170 2 217 2 10 3 100 1 173 2 52 1 178 1 53 2 18 1 142 1 63 1 187 1 281 2 190 2 283 1 25 1 284 4 115 1 29 2 150 2 32 1 243 1 330 2 331 8 245 1 37 2 208 1 249 8 120 1 336 7 
83 1 81 1 85 1 301 1 87 1 170 1 217 1 99 1 173 3 267 1 52 1 137 1 178 1 53 1 142 1 62 1 273 1 276 1 185 1 284 2 325 1 25 1 115 1 29 1 243 1 330 1 334 1 120 2 335 1 
273 1 85 1 301 1 169 1 284 2 170 1 217 1 29 1 99 1 173 2 32 1 243 2 330 1 139 1 53 1 334 1 62 1 335 1 
273 1 81 1 85 1 301 1 284 2 170 1 217 1 29 1 173 2 32 1 267 1 151 1 330 1 137 1 53 1 120 2 62 1 335 1 
81 1 85 2 87 1 301 1 169 1 170 1 217 1 99 1 173 4 267 1 137 1 53 1 62 2 273 2 284 2 29 1 243 2 32 1 330 1 334 1 120 2 335 2 
273 1 85 1 301 1 169 1 284 2 170 1 217 1 29 1 99 1 173 2 243 2 330 1 139 1 53 1 334 1 18 1 62 1 335 1 
273 1 81 1 85 1 301 1 284 2 170 1 217 1 29 1 173 2 267 1 151 1 330 1 137 1 53 1 18 1 120 2 62 1 335 1 
81 1 85 2 87 1 301 1 169 1 170 1 217 1 99 1 173 4 267 1 137 1 53 1 18 1 62 2 273 2 284 2 29 1 243 2 330 1 334 1 120 2 335 2 
81 1 85 2 87 1 301 1 169 1 170 1 217 1 99 1 173 4 267 1 137 1 53 1 62 2 273 2 284 2 29 1 243 2 330 1 334 1 120 2 335 2 
157 1 158 1 300 1 301 1 170 1 217 1 171 1 10 1 173 2 269 1 178 1 53 1 61 1 63 1 281 1 190 1 24 1 25 1 284 2 29 1 243 1 330 1 37 1 331 1 245 1 249 1 120 1 336 1 
157 1 158 1 301 1 90 1 170 1 217 1 171 1 10 1 173 2 268 1 178 1 53 1 61 1 63 1 281 1 190 1 25 1 284 2 29 1 243 1 330 1 37 1 331 1 245 1 249 1 120 1 293 1 336 1 
81 1 85 2 87 1 301 1 169 1 170 1 217 1 99 1 173 4 267 1 137 1 53 1 62 2 273 2 284 2 325 1 29 1 243 2 330 1 334 1 120 2 335 2 
157 1 158 1 81 1 85 2 300 1 301 1 87 1 169 1 170 1 217 1 171 1 10 1 99 1 173 4 267 1 137 1 269 1 178 1 53 1 62 2 273 2 281 1 187 1 24 1 25 1 284 2 29 1 243 2 330 1 331 1 37 1 334 1 120 2 249 1 335 2 39 1 336 1 
81 1 83 1 85 1 301 1 87 1 169 1 170 1 217 1 99 1 173 3 137 1 52 1 178 1 53 1 142 1 62 1 273 1 276 1 21 1 284 2 325 1 25 1 115 1 29 1 243 2 330 1 334 1 120 1 335 1 
124 1 160 1 2 2 81 4 301 2 87 4 6 2 169 3 94 1 170 2 217 2 259 4 49 1 99 4 173 30 267 4 137 4 312 2 53 2 57 2 62 7 229 1 70 1 324 4 284 4 236 1 286 1 242 1 243 14 75 1 334 4 120 16 
160 2 81 1 301 1 87 1 6 1 94 1 170 1 217 1 259 2 99 1 173 10 137 1 53 1 312 1 57 1 284 2 324 1 236 1 286 2 242 1 243 5 75 1 334 1 120 5 
124 1 160 1 2 2 81 3 301 2 87 3 6 3 169 2 94 1 170 2 217 2 259 4 99 3 173 28 267 2 137 3 312 1 53 2 57 3 62 4 229 1 70 1 324 5 284 4 236 1 286 2 242 1 243 13 75 1 205 1 334 3 120 15 
124 1 160 1 2 2 81 3 301 2 87 3 6 3 169 2 94 1 170 2 217 2 259 4 99 3 173 28 267 3 137 3 312 1 53 2 57 3 62 5 229 1 70 1 324 5 284 4 236 1 286 2 242 1 243 13 75 1 205 1 334 3 120 15 
124 1 296 3 160 1 2 1 81 6 301 1 87 3 6 3 169 3 129 3 94 1 170 1 217 1 259 4 99 3 173 41 134 3 267 6 137 3 312 1 53 1 57 2 62 9 316 1 70 1 324 3 284 2 236 1 27 3 286 1 242 1 72 3 243 22 35 3 75 1 334 6 120 19 
149 1 288 1 318 1 20 1 322 1 153 1 
1 1 
149 1 20 1 299 1 322 1 153 1 
78 1 149 1 97 1 12 1 69 2 20 1 125 1 213 1 322 1 153 1 76 1 
78 1 149 1 97 1 12 1 69 2 20 1 125 1 213 1 322 1 153 1 76 1 
78 1 149 1 97 1 12 1 69 2 20 1 125 1 213 1 322 1 153 1 76 1 
156 1 
156 1 
210 1 
210 1 
3 1 133 1 
97 1 149 1 15 1 69 1 20 1 125 1 225 1 213 1 322 1 203 1 153 1 
156 1 
210 1 
157 1 45 1 301 1 216 1 170 1 217 1 47 1 10 1 100 1 173 2 52 2 178 2 53 1 63 1 317 1 279 1 281 1 111 1 325 1 25 2 284 2 29 1 150 2 243 1 330 1 37 1 331 2 245 1 249 2 120 1 336 2 
315 1 98 1 187 1 331 2 119 1 55 1 105 1 249 2 208 1 336 2 
315 1 118 1 331 1 119 1 105 1 249 1 208 1 336 1 
219 1 98 1 190 1 331 1 237 1 105 1 249 1 336 1 
315 1 98 1 331 1 119 1 55 1 105 1 249 1 208 1 336 1 
239 1 
295 1 231 1 254 1 289 1 
295 1 241 1 88 1 266 1 168 1 26 1 206 1 305 1 
42 1 157 2 252 1 281 1 88 1 190 1 26 1 305 1 171 1 10 2 241 1 264 1 265 1 117 1 266 1 177 1 37 1 331 1 249 1 337 1 336 1 
295 1 241 1 88 1 266 1 6 1 324 1 70 1 26 1 305 1 57 1 
295 2 81 1 296 1 88 1 282 1 26 1 129 1 305 1 97 1 241 1 72 1 266 1 204 2 334 2 333 1 104 1 
295 1 254 1 88 1 266 1 26 1 305 1 
295 1 99 1 241 1 81 1 87 1 137 1 334 1 
190 1 331 1 249 1 336 1 
295 1 241 1 264 1 88 1 266 1 244 1 26 1 305 1 
322 1 146 1 153 1 
133 1 322 1 179 1 153 1 271 1 
322 1 146 1 153 1 
322 1 146 1 153 1 
161 1 322 1 153 1 
161 1 322 1 153 1 
161 1 322 1 153 1 
322 1 153 1 
202 1 140 1 
81 1 296 1 301 2 169 1 284 4 129 1 27 1 170 2 217 2 173 8 134 1 243 4 72 1 267 2 201 1 35 1 334 1 53 2 120 4 62 3 
81 1 173 6 296 1 134 1 243 3 72 1 267 2 35 1 289 1 129 1 334 1 27 1 120 3 62 2 
81 1 68 1 301 1 87 1 284 2 169 1 170 1 217 1 99 1 173 4 243 2 267 1 137 1 53 1 334 1 120 2 62 2 
81 1 2 1 87 1 6 1 324 2 169 1 99 1 173 7 243 3 267 1 137 1 334 1 57 1 120 4 62 2 
296 2 2 1 81 3 87 2 301 2 6 2 169 4 129 1 170 2 217 2 99 2 173 23 134 1 222 1 267 5 137 2 53 2 62 9 313 1 316 1 324 2 284 4 27 1 72 2 243 11 201 2 35 1 334 3 120 12 
173 1 324 1 120 1 
173 1 243 1 6 1 
81 1 68 1 301 1 87 1 284 2 92 1 169 1 170 1 217 1 99 1 173 6 243 3 267 2 137 1 53 1 334 1 120 3 62 3 
250 1 81 2 301 1 87 2 6 1 169 1 94 1 170 1 217 1 99 2 173 12 267 1 137 2 53 1 57 1 62 2 227 1 191 1 324 1 70 1 284 2 285 1 243 6 334 2 120 6 
81 1 296 1 169 1 129 1 173 6 243 3 72 1 267 1 334 1 120 3 62 2 
296 1 301 1 169 1 284 2 27 1 170 1 217 1 173 3 243 1 72 1 267 1 201 1 35 1 53 1 120 2 62 2 313 1 
296 2 81 2 301 1 284 2 169 2 129 1 94 1 170 1 217 1 173 10 72 2 243 5 267 3 53 1 104 1 334 2 120 5 62 5 
301 1 284 2 169 1 94 1 170 1 217 1 99 1 173 2 243 2 53 1 334 1 62 1 
81 1 301 1 87 1 284 2 169 1 94 1 170 1 217 1 99 1 173 4 243 2 267 1 137 1 53 1 334 1 120 2 62 2 
296 1 229 1 301 3 284 6 169 1 94 1 170 3 217 3 173 3 72 1 243 1 267 1 201 1 53 3 120 2 313 1 62 2 
296 3 2 1 81 5 301 5 87 3 6 3 169 5 129 2 94 1 170 5 217 5 11 1 99 3 173 34 134 1 267 7 137 3 53 5 57 1 313 1 182 1 62 12 64 1 68 1 229 1 324 4 284 10 27 1 72 3 243 16 201 2 35 1 334 5 120 18 
81 1 296 1 301 1 6 1 129 1 94 1 170 1 217 1 173 8 134 1 267 2 53 1 57 1 62 2 324 1 70 1 284 2 27 1 243 4 72 1 35 1 334 1 120 4 
81 1 296 1 2 1 301 2 87 1 6 1 169 1 129 1 94 1 170 2 217 2 99 1 173 11 134 1 267 2 53 2 57 1 62 3 68 1 324 2 70 1 284 4 27 1 72 1 243 6 35 1 334 2 120 5 
250 1 296 1 81 3 301 3 87 2 6 1 169 1 129 1 94 1 170 3 217 3 99 2 173 19 134 1 267 3 137 2 53 3 57 1 62 4 227 1 68 1 191 1 324 1 70 1 284 6 285 1 27 1 72 1 243 9 201 1 35 1 334 3 120 10 
250 1 81 1 301 2 87 2 6 1 94 1 170 2 217 2 99 2 173 11 267 1 137 1 53 2 57 1 62 1 227 1 68 1 191 1 324 1 70 1 284 4 285 1 243 7 334 2 120 4 
81 1 296 1 301 1 6 1 129 1 94 1 170 1 217 1 173 8 134 1 267 2 53 1 57 1 62 2 324 1 70 1 284 2 27 1 243 4 72 1 35 1 334 1 120 4 
250 1 81 2 301 1 87 2 6 1 169 1 94 1 170 1 217 1 99 2 173 12 267 1 137 2 53 1 57 1 62 2 227 1 191 1 324 1 70 1 284 2 285 1 243 6 334 2 120 6 
250 1 81 1 301 3 87 2 6 1 94 1 170 3 217 3 99 2 173 12 267 1 137 1 53 3 57 1 62 1 227 1 68 1 191 1 324 1 70 1 284 6 285 1 243 7 201 1 334 2 120 5 
250 1 81 1 301 3 87 2 6 1 169 2 94 1 170 3 217 3 99 2 173 12 267 2 137 1 53 3 57 1 62 4 227 1 229 1 191 1 324 1 70 1 284 6 285 1 243 7 201 1 334 2 120 5 
81 1 296 3 169 3 129 1 27 1 173 7 72 3 243 3 267 3 35 2 334 1 120 4 62 6 
250 1 81 1 301 3 87 2 6 1 94 1 170 3 217 3 99 2 173 12 267 1 137 1 53 3 57 1 62 1 227 1 229 1 191 1 324 1 70 1 284 6 285 1 243 7 201 1 334 2 120 5 
184 1 4 1 25 1 327 1 71 1 52 1 178 1 56 1 61 1 
183 1 184 1 277 1 4 1 25 1 327 1 71 1 260 1 51 1 52 1 178 1 56 1 141 1 61 1 
157 1 10 1 281 1 5 1 164 1 190 1 37 1 331 1 289 1 249 1 336 1 
157 1 158 1 44 1 300 1 281 1 190 1 25 2 115 1 171 1 10 1 52 1 37 1 178 2 331 1 142 1 249 1 61 1 336 1 
157 1 44 1 158 1 300 1 93 1 258 1 171 2 10 3 308 1 52 2 178 2 142 2 61 1 281 1 323 1 25 2 115 1 240 1 327 1 331 1 37 2 249 1 336 1 
251 1 157 1 44 1 158 1 93 1 258 1 171 2 10 3 308 1 52 2 178 2 142 2 61 1 281 1 323 1 25 2 115 1 240 1 327 1 331 2 37 2 249 2 293 1 336 2 
10 1 97 1 331 1 249 1 337 1 60 1 336 1 240 1 
10 1 97 1 108 1 331 1 249 1 337 1 336 1 240 1 
157 1 281 1 331 1 91 1 249 1 336 1 
122 1 274 1 157 3 256 1 187 1 281 2 190 2 283 1 91 1 216 1 306 1 171 1 150 1 10 3 117 1 331 7 37 2 152 1 208 1 249 7 336 6 
157 1 158 1 44 1 81 1 296 1 85 1 301 2 300 1 129 1 170 2 217 2 171 1 10 1 173 6 134 1 267 2 52 1 178 2 269 1 53 2 142 1 61 2 62 2 273 1 228 1 279 1 281 1 187 1 24 1 325 1 25 2 284 4 115 1 27 1 29 2 243 3 72 1 330 2 35 1 37 1 331 1 334 1 120 3 249 1 335 1 336 1 39 1 
97 1 203 1 
157 2 187 1 281 1 91 1 171 1 10 2 265 1 117 1 331 2 37 1 249 2 107 1 336 2 
251 1 157 1 187 1 281 1 190 1 164 1 5 1 10 1 331 4 37 1 311 1 249 4 336 4 
274 1 157 2 281 1 114 1 240 1 171 1 10 1 176 1 331 2 37 1 180 1 152 1 249 2 336 2 
157 1 43 1 82 1 175 1 281 1 190 1 331 1 38 1 249 1 336 1 
157 1 187 1 111 1 281 1 216 1 10 1 331 2 37 1 249 2 208 1 336 2 
157 2 122 1 187 1 256 1 281 2 5 1 164 1 190 1 216 1 240 1 10 3 331 5 37 2 311 1 249 5 336 4 
157 2 122 1 187 1 281 2 5 1 164 1 190 1 216 1 240 1 10 3 174 1 331 5 37 2 311 1 249 5 336 4 
157 1 158 1 44 1 281 1 190 1 25 2 115 1 171 1 10 1 52 1 37 1 178 2 331 1 142 1 249 1 61 1 336 1 293 1 
274 1 157 2 281 1 240 1 306 1 171 1 10 1 117 1 331 1 37 1 152 1 249 1 336 1 
45 1 67 1 317 1 25 1 47 1 52 1 36 1 178 1 154 1 
309 1 67 1 230 1 
67 1 232 1 36 1 154 1 61 1 
67 1 230 1 232 2 46 1 323 1 258 1 327 1 97 2 307 1 309 1 221 1 263 1 36 2 203 1 154 2 61 1 
215 1 289 1 8 1 77 1 
40 1 66 1 136 1 23 1 215 1 8 1 77 1 
48 1 23 1 326 1 
40 1 30 1 66 1 31 1 136 3 200 1 34 2 23 3 215 1 8 1 96 1 77 1 
40 1 50 1 66 1 297 1 136 2 23 2 215 1 8 1 77 1 
40 1 30 1 66 1 186 1 175 1 198 1 136 1 23 1 7 1 38 1 77 1 
40 1 30 1 66 1 136 1 23 1 8 1 77 1 
40 1 30 1 66 1 136 1 23 1 215 1 8 2 
40 2 314 1 66 2 109 1 212 1 23 2 8 1 30 1 136 2 77 1 
40 1 30 1 66 1 297 2 186 1 136 3 33 1 165 1 23 3 215 1 226 1 8 1 77 2 
40 1 66 1 82 1 297 1 23 2 215 1 167 1 304 1 8 1 30 1 175 2 136 2 198 1 38 1 77 1 
40 2 66 2 297 2 186 1 23 4 215 1 192 1 8 1 30 1 50 1 136 4 33 1 77 2 
40 1 30 1 66 1 136 1 23 1 215 1 8 1 77 1 
40 1 66 1 297 2 186 1 23 4 215 2 8 2 96 1 131 1 31 1 136 4 33 1 34 1 77 3 
40 1 30 1 66 1 297 1 136 2 234 1 23 2 235 1 215 1 8 1 207 1 77 1 
40 1 30 1 66 1 31 2 136 3 34 2 23 3 215 1 195 1 8 1 96 1 77 1 
302 1 166 1 147 2 77 2 
40 1 30 1 0 1 66 1 136 1 23 1 
40 1 30 1 66 1 297 1 136 2 23 2 215 1 226 1 8 1 77 1 
275 1 
40 1 30 1 66 1 136 1 23 1 215 1 8 1 77 1 
40 1 30 1 66 1 297 1 136 3 34 1 23 3 215 1 226 1 8 1 77 1 
186 1 33 1 131 1 77 1 
8 1 77 1 

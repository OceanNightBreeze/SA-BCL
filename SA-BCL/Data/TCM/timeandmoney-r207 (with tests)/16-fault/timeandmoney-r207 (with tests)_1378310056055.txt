#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 64 (332,335) (332,335) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 183 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
266 2 63 1 302 1 215 2 260 1 48 1 194 1 212 1 285 1 342 3 318 3 38 2 61 1 
266 2 335 1 45 1 63 1 158 1 302 2 351 1 215 3 207 1 64 1 364 1 148 1 260 1 212 3 314 1 285 2 331 2 342 7 318 7 264 2 332 1 61 4 38 2 40 2 157 1 
302 2 351 1 215 5 148 1 260 1 194 1 285 3 331 2 332 1 264 2 38 2 61 6 40 2 157 1 266 2 335 1 63 1 45 2 158 1 207 1 64 1 364 1 48 1 314 1 212 4 162 1 318 9 342 9 
302 2 351 1 215 6 148 1 260 1 194 1 285 4 331 2 332 1 264 2 38 2 61 7 40 2 157 1 266 2 335 1 63 1 45 2 158 1 207 1 64 1 364 1 48 1 314 1 212 5 162 1 318 10 342 10 
302 2 351 1 215 4 148 1 260 1 194 1 285 2 331 2 332 1 264 2 38 2 61 4 40 2 157 1 266 2 335 1 63 1 45 1 158 1 207 1 64 1 364 1 48 1 314 1 212 3 318 7 342 7 
266 1 45 2 351 1 215 3 64 1 260 1 48 1 194 1 212 2 162 1 285 1 331 1 342 4 318 4 264 1 38 1 61 3 40 1 
266 1 322 1 158 1 302 1 215 1 117 1 364 1 260 1 48 1 194 1 331 1 342 2 318 2 264 1 38 1 373 1 
302 1 351 1 215 5 148 1 260 1 32 1 194 1 285 3 331 1 264 1 61 7 38 2 40 1 157 1 266 2 63 1 45 2 64 1 48 1 212 4 184 1 162 1 318 9 342 9 
302 1 351 1 215 5 148 1 260 1 32 1 194 1 285 3 331 1 264 1 61 7 38 2 40 1 157 1 266 2 63 1 45 2 64 1 48 1 212 4 184 1 162 1 318 9 342 9 
348 1 171 1 303 1 46 1 193 1 313 1 330 1 341 1 196 1 85 1 320 1 167 1 128 1 42 1 
123 1 
348 2 171 1 303 1 46 2 191 1 16 1 313 1 193 1 330 1 196 1 341 1 123 1 85 1 276 1 320 1 26 1 167 1 128 1 42 1 
348 5 204 2 336 1 206 1 170 1 182 1 216 1 16 1 46 5 262 1 195 2 123 1 163 1 276 2 112 1 26 1 127 2 42 2 140 1 
123 1 16 1 346 1 
59 2 123 1 347 1 
219 1 196 2 341 2 85 2 320 1 313 2 193 2 167 2 
280 1 255 1 282 1 192 1 31 1 193 2 218 1 149 2 84 2 111 1 355 1 286 1 219 1 196 2 136 2 85 3 290 1 37 1 90 1 293 1 201 2 12 1 360 1 362 2 93 1 223 1 160 1 313 3 19 1 341 2 164 1 70 1 253 1 55 1 320 1 74 1 167 2 
330 1 196 1 341 1 85 1 303 1 320 1 313 1 193 1 167 1 128 1 
348 1 283 1 303 1 16 1 46 1 236 1 313 1 261 1 176 1 123 1 251 1 85 1 113 1 167 1 
348 2 283 1 303 1 16 1 46 2 236 1 193 1 313 1 261 1 341 1 196 1 123 1 251 1 85 1 167 1 
274 1 348 1 46 1 276 1 42 1 
348 2 123 1 16 1 46 2 276 1 26 1 327 1 42 1 
348 1 46 1 276 1 
2 1 303 1 313 2 193 1 97 1 341 1 196 1 219 1 85 2 374 1 167 2 
78 1 79 1 329 1 
362 1 280 1 93 1 192 1 31 1 313 1 218 1 149 1 84 1 111 1 19 1 50 1 219 1 164 1 85 1 70 1 
219 1 346 1 
362 1 280 1 93 1 192 1 31 1 218 1 193 1 313 2 149 1 329 1 111 1 84 1 19 1 356 1 196 1 164 1 85 2 70 1 101 1 167 1 
76 1 224 1 193 4 313 5 58 1 176 1 356 2 196 4 341 1 219 1 85 5 101 1 374 1 167 5 
196 2 252 1 85 2 303 1 313 2 193 2 167 2 128 1 
356 1 341 1 219 1 196 3 85 3 313 3 193 3 167 3 
196 1 85 1 303 1 313 1 193 1 167 1 128 1 
2 1 303 1 193 1 313 1 341 1 196 1 85 1 374 1 167 1 
348 1 280 1 255 1 282 1 283 1 303 1 192 1 236 1 31 1 218 1 193 3 149 1 261 1 111 1 84 1 355 1 356 1 219 1 196 3 136 1 85 4 290 1 37 1 90 1 221 1 201 2 360 1 362 1 93 1 160 1 46 1 313 4 19 1 341 2 164 1 251 1 70 1 55 1 101 1 320 1 74 1 374 1 233 1 167 3 
356 1 219 1 196 1 85 2 313 2 193 1 58 1 167 2 176 1 
348 1 303 1 283 1 46 1 236 1 193 3 313 3 261 1 356 2 341 1 196 3 123 1 251 1 85 3 292 1 101 1 374 1 167 3 233 1 
78 1 193 2 313 2 329 1 356 1 341 1 196 2 85 2 374 1 167 2 
362 1 280 1 93 1 192 1 31 1 313 1 218 1 149 1 84 1 111 1 19 1 219 1 164 1 85 1 70 1 
362 1 280 1 93 1 31 1 5 1 313 1 218 1 149 1 84 1 111 1 239 1 19 1 219 1 164 1 85 1 
255 1 105 1 282 1 79 2 78 2 329 2 355 1 287 1 220 1 136 4 198 1 197 1 290 1 243 1 90 1 293 2 201 2 15 1 66 1 160 2 365 1 165 1 316 1 74 1 
196 1 85 1 252 1 303 1 283 1 313 1 193 1 167 1 
118 1 344 1 271 1 
324 1 118 2 99 1 271 2 370 1 296 1 
118 1 271 1 
118 1 271 1 
324 1 370 1 
324 1 370 1 
324 1 370 1 
118 1 271 1 110 1 
118 1 271 1 110 1 
118 1 271 1 110 1 
118 1 271 1 102 1 
118 1 271 1 102 1 
118 1 271 1 102 1 
348 1 1 1 325 1 353 1 217 1 4 1 193 2 238 1 151 1 219 1 196 2 85 2 88 1 263 1 115 1 309 1 118 1 46 1 271 1 313 2 301 1 344 1 73 1 167 2 
348 2 1 2 115 2 118 2 217 3 46 2 270 1 271 2 107 1 272 1 151 2 123 1 60 1 99 1 88 1 89 1 345 2 188 1 73 2 
117 1 235 1 264 2 258 2 40 1 
331 1 264 1 40 1 
331 1 117 1 264 1 
117 1 235 1 264 3 258 1 40 2 178 1 
257 1 117 1 235 1 264 2 258 1 40 1 
190 1 193 1 330 1 195 1 196 1 59 2 198 1 112 1 203 1 204 1 205 1 206 2 336 2 15 1 16 1 66 1 341 1 123 1 26 1 127 1 167 1 347 2 128 1 348 4 352 2 171 1 303 1 80 1 220 1 85 1 357 2 91 1 42 3 141 1 46 4 313 1 226 1 145 1 276 1 320 1 
193 1 109 1 330 1 196 1 195 1 59 2 198 1 156 1 112 1 204 1 205 1 336 2 206 2 15 1 16 1 66 1 341 1 123 1 26 1 127 1 167 1 347 2 128 1 348 4 352 2 171 1 303 1 80 1 36 1 220 1 85 1 357 2 91 1 42 3 46 4 313 1 226 1 274 1 145 1 276 2 320 1 
348 2 352 2 171 1 190 1 303 1 193 1 330 1 196 1 195 1 262 1 59 2 220 1 85 1 357 2 198 1 91 1 203 1 42 1 204 1 205 1 336 2 206 2 15 1 16 1 46 2 66 1 313 1 226 1 341 1 123 1 145 1 320 1 127 1 167 1 347 2 128 1 
348 1 352 2 190 1 195 1 262 1 59 2 135 1 220 1 198 1 357 2 91 1 203 1 204 1 205 1 336 2 206 2 15 1 66 1 46 1 226 1 145 1 127 1 347 2 
338 1 
93 1 172 1 346 1 
93 1 7 1 
19 1 280 1 93 1 
93 1 132 1 
280 1 93 1 
19 1 280 1 93 3 47 1 172 2 265 1 
180 1 147 1 160 3 66 1 365 3 299 1 106 1 68 1 82 2 185 1 49 1 220 1 165 2 136 7 254 1 359 1 293 4 114 1 
349 1 168 1 255 1 147 1 133 1 106 2 82 3 328 1 355 1 136 31 220 4 198 3 90 1 359 2 201 2 293 16 114 1 205 3 245 1 180 2 363 3 15 3 160 15 66 4 365 10 94 1 68 5 185 1 49 1 144 1 165 5 343 4 254 2 74 1 
28 1 255 2 147 2 106 1 82 2 355 2 220 3 136 16 90 2 359 2 201 4 293 9 114 1 180 1 222 1 66 3 160 7 365 9 369 1 68 4 185 1 144 1 165 5 254 2 74 2 
180 1 147 1 160 3 66 1 365 3 106 1 68 1 82 2 185 1 49 1 220 1 165 2 136 7 254 1 359 1 293 4 114 1 
180 1 147 1 160 3 66 1 365 3 106 1 68 1 82 2 185 1 49 1 220 1 165 2 136 7 254 1 359 1 293 4 114 1 
350 1 280 1 302 2 31 1 218 1 149 1 111 1 84 1 152 1 38 1 202 2 362 1 266 1 13 1 267 1 93 1 297 1 210 1 98 2 318 1 342 1 22 1 71 2 
302 1 259 1 260 1 218 1 149 1 84 1 111 1 331 1 288 1 86 1 289 1 264 2 38 1 244 1 40 1 202 1 178 1 362 1 266 1 307 1 117 1 122 1 98 1 318 1 342 1 71 1 
302 1 215 1 259 1 260 1 218 1 194 1 149 1 84 1 111 1 331 1 288 1 289 1 264 2 61 1 38 1 244 1 40 1 202 1 178 1 362 1 266 1 307 1 117 1 48 1 122 1 98 1 318 2 342 2 229 1 71 1 
302 1 215 1 259 1 218 1 194 1 149 1 84 1 111 1 331 1 288 1 86 1 264 2 38 1 61 2 244 1 40 1 202 1 178 1 362 1 266 1 13 1 307 1 117 1 48 1 122 1 98 1 318 3 342 3 100 1 71 1 
302 1 215 1 218 1 194 1 149 1 84 1 111 1 331 1 86 1 264 2 61 2 244 1 40 1 202 1 178 1 362 1 307 1 117 1 48 1 122 1 98 1 318 2 342 2 100 1 71 1 
129 1 
280 1 283 1 236 1 149 2 111 1 59 2 195 1 242 2 152 1 112 1 113 1 11 4 204 1 206 2 336 2 210 1 16 1 249 1 18 1 123 2 251 1 26 3 127 1 347 2 167 1 348 5 303 1 304 2 31 2 218 1 174 2 261 1 175 1 84 2 176 1 85 1 305 1 139 2 362 2 93 1 143 2 46 5 367 1 368 2 313 1 95 1 96 1 54 1 228 1 372 1 186 1 276 6 230 2 103 1 189 1 
348 3 283 1 303 1 191 1 236 1 304 1 261 1 176 1 85 1 113 1 11 2 46 3 367 1 313 1 95 1 96 1 54 1 251 1 372 1 276 2 26 1 167 1 
348 3 283 1 303 1 191 1 236 1 174 1 261 1 176 1 85 1 113 1 11 3 46 3 16 1 367 1 313 1 95 1 96 1 123 1 54 1 251 1 372 1 276 1 26 1 167 1 
348 3 283 1 303 1 191 1 236 1 304 1 174 1 261 1 176 1 85 1 113 1 11 3 46 3 367 1 313 1 95 1 96 1 54 1 251 1 372 1 276 2 230 1 26 1 167 1 
281 1 283 1 191 1 236 1 193 1 330 1 196 1 195 1 242 2 112 1 11 4 113 1 334 1 204 1 336 1 206 1 246 1 16 1 341 1 123 1 251 1 26 3 127 1 167 2 347 2 128 1 348 5 171 1 303 2 304 4 174 2 261 1 176 1 85 2 305 1 139 2 308 1 143 2 46 5 366 1 367 1 313 2 368 2 95 1 96 1 54 1 372 1 276 7 320 1 230 4 189 1 
283 1 236 1 195 1 59 2 242 2 112 1 11 4 113 1 204 1 336 1 206 1 16 1 123 2 251 1 127 1 26 2 167 1 347 2 348 4 303 1 304 2 174 2 261 1 176 1 175 1 85 1 305 1 139 2 143 2 46 4 367 1 313 1 368 2 95 1 96 1 54 1 372 1 276 4 230 2 189 1 
348 4 283 1 303 1 236 1 304 2 174 2 261 1 176 1 195 1 242 2 85 1 305 1 112 1 113 1 11 4 139 2 334 1 308 1 204 1 206 1 336 1 143 2 16 1 46 4 366 1 367 1 368 2 313 1 95 1 96 1 123 1 54 1 251 1 372 1 276 4 230 2 26 2 127 1 347 2 167 1 189 1 
348 4 283 1 303 1 236 1 304 2 174 2 261 1 176 1 195 1 242 2 85 1 305 1 112 1 113 1 11 4 139 2 334 1 308 1 204 1 206 1 336 1 143 2 16 1 46 4 366 1 367 1 368 2 313 1 95 1 96 1 123 1 54 1 251 1 372 1 276 4 230 2 26 2 127 1 347 2 167 1 189 1 
348 4 29 2 146 1 234 1 283 1 303 1 236 1 304 2 174 2 261 1 176 1 59 2 195 1 242 2 85 1 112 1 113 1 11 4 308 1 204 1 336 1 206 1 16 1 46 4 367 1 368 2 313 1 211 2 95 1 96 1 123 1 54 1 251 1 372 1 276 4 230 2 24 1 26 2 127 1 167 1 189 1 
348 4 283 1 303 1 236 1 304 3 174 3 261 1 176 1 195 1 242 2 85 1 305 1 112 1 113 1 11 5 139 2 334 1 308 1 204 1 206 1 336 1 246 1 143 2 16 1 46 4 366 1 367 1 368 2 313 1 95 1 96 1 123 1 54 1 251 1 372 1 276 5 230 3 26 2 127 1 347 2 167 1 189 1 
348 4 283 1 303 1 236 1 304 3 174 3 261 1 176 1 195 1 242 2 85 1 305 1 112 1 113 1 11 5 139 2 334 1 308 1 204 1 206 1 336 1 246 1 143 2 16 1 46 4 366 1 367 1 368 2 313 1 95 1 96 1 123 1 54 1 251 1 372 1 276 5 230 3 26 2 127 1 347 2 167 1 189 1 
146 1 283 1 236 1 195 1 59 2 242 2 112 1 11 4 113 1 204 1 206 1 336 1 16 1 211 2 123 1 251 1 127 1 26 2 167 1 348 4 29 2 303 1 304 2 174 2 261 1 176 1 175 1 85 1 46 4 367 1 313 1 368 2 95 1 96 1 54 1 372 1 276 4 230 2 189 1 
279 1 280 2 255 2 282 2 57 1 31 2 193 1 218 2 149 8 111 2 84 7 355 2 356 1 287 1 196 1 152 1 136 2 85 1 10 1 86 1 290 2 200 1 90 2 201 4 293 1 12 2 362 8 93 3 311 1 223 1 210 1 160 1 119 1 313 1 21 1 229 1 55 1 74 2 167 1 
255 1 282 1 78 1 79 1 193 1 329 1 355 1 240 1 196 1 220 1 136 3 85 1 198 1 290 1 90 1 201 2 293 1 205 1 15 1 66 1 160 2 365 1 313 1 69 1 341 1 165 1 74 1 374 1 167 1 
255 1 147 1 282 1 78 1 79 1 82 1 329 1 355 1 287 1 219 2 220 1 136 6 290 1 90 1 359 1 201 2 293 3 114 1 66 1 160 3 365 2 185 1 165 2 254 1 346 1 74 1 
323 1 255 2 282 1 133 1 79 11 78 4 329 11 355 2 219 1 136 14 220 2 198 1 290 2 90 2 201 4 293 8 205 2 245 1 223 1 363 3 15 2 160 6 66 1 365 2 68 1 69 1 300 1 273 1 165 1 343 3 55 1 125 1 74 2 
280 1 255 1 282 1 130 1 192 1 31 1 218 1 78 1 193 1 149 1 111 1 84 1 355 1 356 1 219 1 196 1 136 2 85 2 290 1 137 1 90 1 201 2 293 1 362 1 93 1 337 1 223 1 160 1 313 2 69 1 19 1 50 1 164 1 70 1 55 1 101 1 74 1 167 1 
280 2 147 1 282 3 192 2 193 1 149 1 111 2 329 4 196 1 198 1 290 3 201 6 293 7 114 1 205 1 208 1 15 1 160 7 66 2 69 1 340 2 19 2 164 2 165 3 70 2 126 2 254 1 74 3 167 1 75 1 255 3 31 1 218 2 79 4 78 4 82 1 84 1 355 3 356 1 219 2 136 14 220 2 85 3 90 3 359 1 360 2 44 1 362 1 93 2 223 1 365 3 313 3 185 1 52 1 55 1 101 1 
255 1 282 1 15 1 365 1 78 1 79 1 68 1 329 1 355 1 287 1 136 2 220 1 197 1 290 1 90 1 74 1 201 2 293 2 
255 1 105 1 282 1 66 1 160 2 365 1 78 1 79 1 329 1 355 1 287 1 165 1 136 2 198 1 290 1 90 1 74 1 201 2 
255 1 282 1 79 2 78 2 329 2 355 1 287 1 220 1 136 4 198 1 290 1 90 1 293 2 201 2 205 1 15 1 66 1 160 2 365 2 68 1 165 1 74 1 
255 1 282 1 15 1 365 1 78 1 79 1 68 1 329 1 355 1 21 1 136 2 220 1 197 1 290 1 90 1 74 1 201 2 293 2 
255 1 105 1 282 1 66 1 160 2 365 1 78 1 79 1 329 1 355 1 21 1 165 1 136 2 198 1 290 1 90 1 74 1 201 2 
255 1 282 1 79 2 78 2 329 2 355 1 220 1 136 4 198 1 290 1 90 1 293 2 201 2 205 1 15 1 66 1 160 2 365 2 68 1 21 1 165 1 74 1 
255 1 282 1 79 2 78 2 329 2 355 1 136 4 220 1 198 1 290 1 90 1 293 2 201 2 205 1 15 1 66 1 160 2 365 2 68 1 165 1 74 1 
280 1 255 1 282 1 192 1 31 1 218 1 149 1 111 1 84 1 355 1 219 1 136 2 85 1 290 1 90 1 293 1 201 2 360 1 362 1 93 1 223 1 160 1 313 1 19 1 164 1 70 1 55 1 74 1 
280 1 255 1 282 1 5 1 31 1 218 1 149 1 111 1 84 1 239 1 355 1 219 1 136 2 85 1 290 1 90 1 293 1 201 2 362 1 93 1 223 1 160 1 313 1 19 1 164 1 319 1 55 1 74 1 
255 1 282 1 79 2 78 2 329 2 355 1 220 1 136 4 198 1 290 1 90 1 293 2 201 2 205 1 15 1 66 1 160 2 365 2 69 1 68 1 165 1 74 1 
280 1 255 1 282 1 192 1 78 2 79 2 218 1 149 1 329 2 111 1 84 1 355 1 136 4 220 1 198 1 85 1 290 1 90 1 293 2 201 2 360 1 362 1 205 1 93 1 15 1 160 2 66 1 365 2 313 1 68 1 340 1 19 1 165 1 164 1 70 1 229 1 74 1 
104 1 255 1 282 1 193 1 79 1 78 1 329 1 355 1 196 1 220 1 136 3 198 1 85 1 290 1 90 1 201 2 293 2 205 1 15 1 160 1 66 1 365 1 313 1 68 1 69 1 341 1 74 1 374 1 167 1 
147 1 326 1 150 2 9 4 198 4 154 1 293 20 201 6 114 1 14 1 205 4 245 1 116 1 15 4 209 1 66 5 160 21 68 4 165 4 343 4 254 1 74 3 30 1 255 3 133 3 82 1 355 3 354 1 34 1 220 5 136 41 90 3 359 1 179 1 181 1 222 1 363 3 365 8 312 1 185 1 371 1 144 1 278 1 
147 1 326 1 150 2 9 4 198 3 154 1 293 20 201 6 114 1 14 1 205 4 245 1 116 1 15 4 209 1 66 4 160 18 68 2 165 4 343 4 254 1 74 3 30 1 255 3 133 3 82 1 355 3 354 1 34 1 220 5 136 38 90 3 359 1 179 1 181 1 222 1 363 3 365 6 312 1 185 1 371 1 144 1 278 1 
30 1 255 1 147 1 326 1 133 2 150 1 82 1 354 1 355 1 9 3 136 50 220 8 198 7 154 1 90 1 359 1 201 2 293 26 114 1 179 1 14 1 205 7 245 2 181 1 116 1 222 1 363 4 15 7 160 24 66 8 365 13 312 1 68 6 273 2 185 1 371 1 165 7 343 4 254 1 74 1 278 1 
30 2 255 2 133 1 150 1 355 2 9 2 136 19 220 3 198 3 154 1 90 2 201 4 293 9 179 1 205 3 245 1 116 1 222 1 363 1 209 1 15 3 160 10 66 3 365 6 68 3 227 1 165 3 343 2 74 2 278 1 
30 1 255 2 326 1 133 2 150 2 355 2 354 1 9 4 136 26 220 3 198 2 154 2 90 2 201 4 293 14 179 1 14 1 205 3 116 1 181 1 222 1 363 2 15 3 66 2 160 12 365 2 312 1 68 1 144 1 371 1 165 1 343 2 74 2 278 1 
1 1 115 1 60 1 118 1 99 1 270 1 271 1 248 1 73 1 151 1 
309 1 344 1 
213 1 1 1 115 1 118 1 77 1 271 1 73 1 33 1 151 1 
310 1 110 1 
53 1 102 1 296 1 
348 1 1 1 115 1 118 1 217 2 46 1 270 1 271 1 107 1 272 1 151 1 123 1 60 1 99 1 88 1 89 1 345 1 73 1 
348 1 1 1 115 1 118 1 217 2 46 1 270 1 271 1 107 1 272 1 151 1 123 1 60 1 99 1 88 1 89 1 345 1 73 1 
348 1 1 1 115 1 118 1 217 2 46 1 270 1 271 1 107 1 272 1 151 1 123 1 60 1 99 1 88 1 89 1 345 1 73 1 
310 1 110 1 296 1 
310 1 110 1 296 1 
53 1 102 1 
53 1 102 1 296 1 
353 1 238 1 
348 1 1 1 325 1 353 1 217 1 4 1 193 2 238 1 151 1 219 1 196 2 85 2 263 1 89 1 42 1 115 1 309 1 118 1 46 1 339 1 271 1 313 2 301 1 344 1 345 1 73 1 167 2 
27 1 280 1 255 1 282 1 218 1 6 1 134 1 149 2 111 1 84 2 355 1 136 2 85 2 10 1 290 1 90 1 306 1 201 2 293 1 12 2 362 2 93 1 311 1 223 1 160 1 313 2 69 1 250 1 55 1 74 1 167 2 
362 1 280 1 93 1 297 1 210 1 31 1 218 1 149 1 111 1 84 1 152 1 71 1 39 1 232 1 
362 1 307 1 117 1 120 1 218 1 149 1 111 1 84 1 331 1 288 1 177 1 86 1 264 2 71 1 244 1 40 1 232 1 178 1 
362 2 307 1 117 1 218 1 120 1 149 2 111 1 84 2 331 1 288 1 177 1 86 1 229 1 264 2 71 1 244 1 40 1 232 1 178 1 
362 1 307 1 117 1 120 1 218 1 149 1 84 1 315 1 111 1 331 1 288 1 86 1 264 2 71 1 244 1 40 1 178 1 
35 1 
204 1 206 1 336 1 170 1 216 1 16 1 195 1 123 1 112 1 127 1 
205 1 206 2 220 1 352 1 357 1 15 1 
348 1 123 1 16 1 46 1 276 1 26 1 
348 3 0 1 280 1 31 2 218 1 149 4 111 1 84 4 262 1 195 2 152 1 87 1 112 1 41 1 362 4 204 2 336 2 206 2 93 1 210 1 46 3 249 2 18 1 228 2 276 4 277 2 103 1 127 2 26 2 
336 1 123 1 206 1 170 1 216 1 16 1 346 1 
348 1 195 1 59 1 305 1 112 1 139 1 204 1 206 1 336 1 143 1 46 1 16 1 123 2 276 1 127 1 26 1 347 1 
362 1 280 1 204 1 93 2 183 1 31 1 218 1 7 1 149 1 111 2 84 1 19 1 195 1 112 1 127 1 361 1 265 1 
352 8 326 1 133 1 354 1 195 1 59 3 220 4 357 8 198 4 112 1 91 2 204 1 205 4 336 11 206 7 245 1 181 1 363 2 15 4 66 4 312 1 273 1 371 1 343 2 127 1 347 3 
348 1 147 1 171 1 303 1 193 1 330 1 195 1 196 1 220 2 85 1 91 2 359 1 112 1 334 1 204 1 206 2 336 2 46 1 66 1 313 1 369 1 341 1 145 1 320 1 254 1 127 1 167 1 128 1 
280 1 255 1 282 1 192 1 31 1 193 2 218 1 149 1 84 1 111 1 355 1 219 1 196 2 136 1 85 3 37 1 290 1 90 1 201 2 360 1 362 1 93 1 160 1 313 3 19 1 341 2 164 1 70 1 55 1 320 1 74 1 167 2 
204 1 206 1 336 1 352 1 16 1 249 1 195 1 123 1 228 1 112 1 127 1 
115 1 60 1 353 1 73 1 121 1 
115 1 358 1 73 1 
115 1 358 1 73 1 
115 1 358 1 73 1 
115 1 124 1 73 1 
115 1 124 1 73 1 
115 1 124 1 73 1 
115 1 73 1 
118 1 271 1 
255 1 147 1 133 1 82 1 354 1 355 1 220 1 136 8 90 1 359 1 201 2 293 4 114 1 222 1 363 1 66 1 160 4 365 2 185 1 165 2 343 1 254 1 74 1 
255 2 147 1 133 1 82 1 354 1 355 2 153 1 136 11 220 2 90 2 359 1 201 4 293 6 114 1 205 1 245 1 222 1 363 1 15 1 66 1 160 5 365 3 68 1 185 1 165 2 343 2 254 1 74 2 
255 3 147 1 326 1 133 1 82 1 354 1 355 3 153 1 136 19 220 3 198 2 90 3 359 1 201 6 293 9 114 1 205 2 181 1 222 1 363 1 15 2 160 10 66 3 365 4 312 1 68 1 185 1 371 1 144 1 165 3 343 1 254 1 74 3 
255 2 326 1 133 1 354 1 355 2 153 1 136 11 220 2 198 1 90 2 201 4 293 7 205 2 181 1 222 1 363 1 15 2 160 4 66 1 365 1 312 1 371 1 165 1 343 1 74 2 
255 1 147 1 133 1 82 1 354 1 355 1 220 1 136 8 90 1 359 1 201 2 293 4 114 1 222 1 363 1 66 1 160 4 365 2 185 1 165 2 343 1 254 1 74 1 
255 1 326 1 133 1 354 1 355 1 136 12 220 2 198 2 90 1 201 2 293 6 205 2 181 1 222 1 363 1 15 2 160 6 66 2 365 2 312 1 68 1 371 1 165 1 343 1 74 1 
255 3 326 1 133 1 354 1 355 3 153 1 136 12 220 2 198 1 90 3 201 6 293 7 205 2 181 1 222 1 363 1 15 2 160 5 66 1 365 1 312 1 371 1 144 1 165 1 343 1 74 3 
255 3 326 1 133 1 354 1 355 3 136 12 220 2 198 1 90 3 201 6 293 7 205 2 181 1 222 1 363 1 209 1 15 2 160 5 66 1 365 4 312 1 68 2 371 1 144 1 165 2 343 1 74 3 
147 1 160 4 66 1 365 6 68 3 185 2 136 7 165 3 220 1 359 3 254 3 293 3 114 1 
255 3 326 1 133 1 354 1 355 3 136 12 220 2 198 1 90 3 201 6 293 7 205 2 181 1 222 1 363 1 209 1 15 2 160 5 66 1 365 1 312 1 371 1 144 1 165 1 343 1 74 3 
255 1 222 1 147 1 160 5 66 2 365 5 369 1 68 2 355 1 165 3 136 10 220 2 90 1 359 2 254 2 201 2 74 1 293 5 
255 1 222 1 15 1 365 1 68 1 355 1 220 1 136 2 90 1 74 1 201 2 293 2 
205 1 255 1 222 1 15 1 160 2 66 1 365 2 68 1 355 1 165 1 220 1 136 4 198 1 90 1 74 1 201 2 293 2 
255 3 222 1 209 1 160 2 365 2 68 1 355 3 144 1 136 3 165 1 90 3 359 1 254 1 74 3 201 6 293 1 25 1 
349 1 255 5 147 2 133 1 82 1 328 1 355 5 153 1 136 34 220 5 198 3 90 5 359 3 201 10 293 16 114 1 205 3 245 1 222 1 363 3 209 1 15 3 160 18 66 5 365 12 94 1 68 5 185 1 144 2 165 7 343 4 254 3 74 5 25 1 
255 2 147 1 66 1 160 4 365 3 68 1 82 1 185 1 355 2 144 1 220 1 136 8 165 2 90 2 359 1 254 1 293 4 74 2 201 4 114 1 
147 1 160 3 66 1 365 2 82 1 185 1 165 2 220 1 136 6 359 1 254 1 346 1 293 3 114 1 
205 1 255 1 15 1 160 2 66 1 365 2 68 1 355 1 153 1 165 1 220 1 136 4 198 1 90 1 74 1 201 2 293 2 
205 1 245 1 363 1 15 1 66 1 160 4 365 2 133 1 68 1 165 1 136 7 220 1 198 1 343 2 293 3 
255 2 147 1 82 1 355 2 220 3 136 23 198 2 90 2 359 2 293 11 201 4 114 1 205 2 245 1 363 2 15 2 160 12 66 3 365 9 68 4 300 1 273 1 185 1 144 2 165 5 343 2 254 2 74 2 25 1 
136 1 343 1 160 1 
136 1 363 1 293 1 
205 1 255 1 208 1 15 1 160 3 66 1 365 3 68 1 355 1 153 1 136 6 220 1 165 2 198 1 90 1 201 2 74 1 293 3 
255 1 326 1 133 1 354 1 355 1 136 12 220 2 198 2 90 1 201 2 293 6 205 2 181 1 222 1 363 1 15 2 160 6 66 2 365 2 312 1 68 1 371 1 165 1 343 1 74 1 
147 1 66 1 160 3 365 2 68 1 220 1 136 6 165 1 359 1 254 1 293 3 
255 1 160 2 365 2 68 1 185 1 355 1 144 1 165 1 136 3 90 1 254 1 359 1 293 1 74 1 201 2 25 1 114 1 
219 1 85 1 313 1 167 1 58 1 176 1 83 1 
62 1 256 1 313 1 237 1 81 1 58 1 83 1 176 1 219 1 85 1 294 1 167 1 
362 4 280 1 93 1 210 1 31 1 218 1 149 4 111 1 84 4 152 1 229 1 199 1 231 1 
362 2 280 1 93 1 268 1 218 1 149 2 84 2 111 2 19 1 51 1 166 1 277 1 295 1 56 1 
362 1 331 1 117 1 264 1 31 1 218 1 244 1 149 1 111 1 84 1 
362 2 280 1 93 1 311 1 218 1 6 1 149 2 84 2 111 1 86 1 229 1 
362 5 279 1 280 2 93 3 311 1 210 1 31 1 218 2 149 5 84 4 111 2 152 1 229 1 199 1 277 1 200 1 
362 5 279 1 280 2 93 3 311 1 210 1 31 1 218 2 149 5 84 4 111 2 152 1 229 1 155 1 199 1 277 1 
362 1 280 1 152 1 93 1 210 1 31 1 218 1 346 1 149 1 111 1 84 1 
362 1 280 1 93 1 192 1 31 1 193 1 313 2 218 1 149 1 111 1 84 1 19 1 356 1 219 1 196 1 164 1 85 2 167 1 
280 2 283 1 303 1 132 1 192 1 236 1 218 1 193 2 149 1 84 1 111 1 356 1 219 1 196 1 85 2 362 1 93 3 313 2 19 2 164 1 277 1 321 1 167 2 
280 2 283 1 303 1 132 1 236 1 5 1 218 1 193 2 149 2 84 2 111 1 356 1 219 1 196 1 85 2 362 2 93 3 313 2 19 2 164 1 277 1 231 1 321 1 167 2 
348 2 280 1 132 1 31 1 218 1 172 1 7 1 149 3 84 3 111 1 362 3 92 1 93 4 142 1 46 2 16 1 19 1 123 1 251 1 276 1 277 1 231 1 321 1 
348 2 362 3 280 1 93 4 16 1 132 1 46 2 31 1 218 1 172 1 149 3 173 1 7 1 111 1 84 3 19 1 123 1 251 1 276 1 277 1 231 1 321 1 
362 1 57 1 218 1 149 1 111 1 84 1 
279 1 362 7 280 2 93 3 268 1 247 1 311 1 57 1 119 1 31 2 218 2 149 7 84 6 111 3 19 1 86 1 229 1 200 1 12 1 295 1 265 1 
280 1 147 1 282 2 192 1 193 1 149 1 111 1 329 1 196 1 290 2 201 4 293 3 114 1 66 1 160 3 69 1 340 1 19 1 250 1 164 1 165 2 70 1 126 1 254 1 74 2 167 1 255 2 78 1 218 1 79 1 82 1 84 1 355 2 356 1 219 2 220 1 136 6 85 2 90 2 359 1 360 1 362 1 93 1 365 2 313 2 185 1 229 1 
348 3 170 1 216 1 31 1 172 1 149 1 173 1 7 1 84 1 195 2 241 1 87 1 291 1 112 2 42 1 362 1 204 2 336 1 206 1 93 2 16 1 46 3 123 1 251 1 72 1 276 2 127 2 26 1 
19 1 362 2 280 1 93 2 229 1 57 1 218 1 172 1 149 2 111 2 265 1 361 1 84 2 
362 1 280 1 93 1 31 1 5 1 193 1 313 2 218 1 149 1 111 1 84 1 19 1 356 1 219 1 196 1 164 1 85 2 167 1 
362 1 280 1 93 1 268 1 247 1 218 1 149 1 84 1 111 2 19 1 277 1 295 1 265 1 
275 1 20 1 219 1 298 1 67 1 
348 2 159 1 303 1 283 1 3 1 16 1 46 2 236 1 298 2 67 1 261 1 161 1 275 2 20 2 219 1 123 1 251 1 233 1 42 1 
275 1 27 1 20 1 85 1 313 1 67 1 306 1 134 1 167 1 
159 1 283 1 303 1 236 1 298 1 67 1 261 1 161 1 275 1 20 1 251 1 233 1 
266 1 215 1 318 1 342 1 38 1 260 1 48 1 194 1 
266 1 215 3 364 1 48 2 194 2 212 1 285 1 214 1 342 4 318 4 333 1 61 2 38 1 138 1 
266 1 215 1 269 1 260 1 48 1 194 1 184 1 342 2 318 2 38 1 61 1 43 1 
266 1 215 1 364 2 17 1 260 1 194 1 48 1 214 1 342 3 318 3 38 1 138 2 
215 2 317 2 131 1 284 1 
266 1 169 1 318 1 342 1 38 1 260 1 
266 1 215 1 318 2 342 2 148 1 61 1 38 1 260 1 48 1 194 1 
108 1 
266 1 215 1 318 1 342 1 38 1 260 1 48 1 194 1 
215 1 346 1 48 1 194 1 
266 1 215 1 318 1 342 1 38 1 48 1 194 1 
302 1 98 1 318 1 
266 1 215 1 364 2 225 1 260 1 194 1 48 1 214 1 342 3 318 3 38 1 138 1 
266 1 45 1 215 1 318 2 342 2 61 1 38 1 48 1 194 1 
266 1 351 1 215 1 260 1 212 1 331 1 342 1 318 1 264 1 38 1 40 1 
266 1 215 1 318 1 342 1 38 1 260 1 48 1 
266 1 318 1 342 1 38 1 260 1 48 2 194 1 
8 1 266 2 215 1 318 2 342 2 65 1 23 1 38 2 260 1 48 1 
266 1 215 2 148 1 260 1 48 1 194 1 212 1 285 1 342 3 318 3 38 1 61 2 157 1 
266 1 215 1 117 1 260 1 48 1 194 1 331 1 342 2 318 2 187 1 264 2 38 1 61 1 40 1 178 1 
266 2 45 1 215 2 260 1 48 1 194 1 212 1 162 1 285 1 342 4 318 4 38 2 61 2 
266 1 215 1 364 1 148 1 260 1 194 1 48 1 342 3 318 3 61 1 38 1 
285 1 215 1 318 1 342 1 61 1 212 1 
215 1 48 1 

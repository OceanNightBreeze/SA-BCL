#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (74,342) 183 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (74,342) 183 326 99 (74,342) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 83 150 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (74,342) 183 127 277 349 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (74,342) 183 256 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 7 310 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (74,342) 183 326 99 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (74,342) 183 326 310 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (74,342) 183 326 99 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (74,342) 183 326 310 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (74,342) 183 326 310 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (74,342) 183 326 310 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (74,342) 183 326 310 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 129 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 7 310 116 347 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
266 2 339 7 187 1 118 4 317 2 220 1 81 7 95 1 222 1 221 1 14 2 194 2 41 1 16 1 66 1 177 1 363 1 152 2 67 1 69 1 70 3 255 2 46 3 106 1 231 1 286 1 205 2 133 1 
266 2 339 7 187 1 118 4 317 2 220 1 81 7 95 1 222 1 221 1 14 2 194 2 41 1 16 1 66 1 177 1 363 1 152 2 67 1 69 1 70 3 255 2 46 3 106 1 231 1 286 1 205 2 133 1 
266 2 339 7 187 1 118 4 317 2 220 1 81 7 95 1 222 1 221 1 14 2 194 2 41 1 16 1 66 1 177 1 363 1 152 2 67 1 69 1 70 3 255 2 46 3 106 1 231 1 286 1 205 2 133 1 
266 2 339 7 187 1 118 4 317 2 220 1 81 7 95 1 222 1 221 1 14 2 194 2 41 1 16 1 66 1 363 1 152 2 67 1 69 1 70 3 255 2 46 4 106 1 231 1 286 1 205 2 133 1 
194 1 16 1 266 1 66 1 177 1 152 1 339 2 69 1 187 1 118 1 70 1 46 1 106 1 205 1 220 1 81 2 14 1 
194 1 266 1 66 1 152 1 339 2 69 1 341 1 46 1 317 1 34 1 36 1 220 1 81 2 221 1 222 1 14 1 
194 2 66 1 152 2 339 3 69 1 70 1 118 1 255 1 46 2 317 1 220 1 81 3 95 1 
266 1 91 1 339 7 208 1 187 1 118 5 317 1 220 1 95 1 81 7 14 1 194 2 41 1 16 1 66 1 177 1 152 2 69 1 70 3 255 2 46 3 106 1 205 1 133 1 
266 1 91 1 339 7 208 1 187 1 118 5 317 1 220 1 95 1 81 7 14 1 194 2 41 1 16 1 66 1 177 1 152 2 69 1 70 3 255 2 46 3 106 1 205 1 133 1 
42 1 
248 1 
87 1 361 2 301 2 207 2 128 2 176 2 246 1 263 2 
0 1 49 2 314 1 207 3 141 1 209 2 54 1 213 2 354 1 170 1 246 1 318 1 219 1 37 1 357 1 358 1 299 1 250 1 82 1 195 1 361 2 301 2 225 1 128 3 176 2 251 1 305 2 366 1 87 1 202 1 105 1 47 1 131 1 260 1 312 2 75 1 263 2 
87 1 367 1 361 1 301 1 25 1 207 1 128 1 176 1 263 1 
135 1 336 1 76 1 276 1 207 1 185 1 176 1 128 1 84 1 188 1 214 1 203 1 331 1 356 1 
135 2 76 1 276 1 301 1 361 1 207 1 185 1 176 1 128 1 84 1 188 1 214 2 203 1 356 1 263 1 
135 1 237 1 214 1 110 1 8 1 
135 2 237 1 214 2 203 1 124 1 84 1 85 1 8 1 
135 1 237 1 214 1 
135 1 301 1 361 1 207 1 176 1 128 1 8 1 242 1 367 1 87 1 214 1 25 1 263 1 
203 1 
135 2 237 1 138 1 214 2 203 1 84 1 85 1 8 1 
135 5 237 2 113 1 50 1 239 1 207 1 5 2 269 1 8 2 242 1 214 5 56 1 59 4 94 2 171 2 320 2 361 1 301 1 175 1 278 5 128 1 176 1 303 1 153 2 84 2 85 1 340 1 87 1 367 1 130 1 25 1 203 2 333 1 90 1 289 1 263 1 48 2 
42 1 
301 1 361 1 207 2 176 2 128 2 279 1 241 1 246 2 263 1 
183 1 74 1 
0 1 49 1 195 1 207 1 128 1 251 1 209 1 186 1 354 1 131 1 246 1 219 1 260 1 357 1 312 1 75 1 
336 1 147 1 361 4 301 1 207 5 176 5 128 5 279 1 178 1 6 2 270 1 297 1 246 1 263 4 
361 1 25 1 207 1 128 1 176 1 263 1 
0 1 49 1 195 1 361 1 207 2 176 1 128 2 251 1 209 1 6 1 354 1 297 1 131 1 74 1 219 1 260 1 357 1 312 1 75 1 263 1 
301 1 361 3 207 3 128 3 176 3 246 1 6 1 263 3 
361 1 25 1 207 1 128 1 176 1 263 1 
276 1 361 1 301 1 207 1 128 1 176 1 279 1 241 1 263 1 
135 1 0 1 49 1 76 1 314 1 207 4 185 1 209 1 6 1 53 1 188 1 213 1 214 1 354 1 170 1 297 1 246 1 318 1 219 1 356 1 37 1 357 1 358 1 299 1 250 1 276 1 195 1 301 2 361 3 279 1 128 4 176 3 251 1 305 2 366 1 87 1 202 1 105 1 131 1 260 1 311 1 312 1 75 1 263 3 
336 1 147 1 361 1 207 2 128 2 176 2 246 1 6 1 263 1 
135 1 276 1 76 1 301 1 361 3 207 3 185 1 279 1 176 3 128 3 6 2 53 1 188 1 214 1 297 1 203 1 356 1 96 1 263 3 
361 2 301 1 207 2 128 2 176 2 279 1 74 1 6 1 134 1 263 2 
0 1 49 1 195 1 207 1 128 1 251 1 209 1 354 1 131 1 246 1 219 1 260 1 357 1 312 1 75 1 
0 1 49 1 149 1 195 1 207 1 115 1 128 1 209 1 354 1 131 1 246 1 219 1 260 1 312 1 75 1 
183 1 299 1 99 1 314 1 326 1 305 2 342 1 213 2 105 1 170 1 74 1 318 1 274 1 37 2 358 1 48 1 
40 1 276 1 76 1 361 1 207 1 128 1 176 1 263 1 
352 1 166 1 
352 1 166 1 
295 1 93 1 
295 1 93 1 
295 1 93 1 
352 1 166 1 234 1 
72 1 352 2 295 1 267 1 166 2 93 1 
352 1 17 1 166 1 
352 1 17 1 166 1 
352 1 17 1 166 1 
352 1 64 1 166 1 
352 1 64 1 166 1 
352 1 64 1 166 1 
298 1 323 1 135 1 39 1 3 1 136 1 361 2 207 2 166 1 128 2 176 2 29 1 52 1 273 1 352 1 214 1 283 1 190 1 246 1 308 1 125 1 234 1 126 1 263 2 
135 2 39 2 136 1 172 1 166 2 29 2 365 1 86 1 72 1 352 2 283 2 214 2 203 1 181 1 125 2 334 2 126 3 145 1 192 1 
266 1 205 1 14 1 
266 1 36 1 14 1 
101 1 368 1 10 1 36 1 205 2 14 3 
368 1 10 1 36 1 205 1 240 1 14 2 
368 2 10 1 36 1 205 1 14 2 
135 5 184 1 237 1 238 1 164 1 5 1 350 1 7 1 78 1 8 4 214 5 296 1 59 3 94 1 248 2 171 1 320 1 323 1 298 1 100 2 278 1 20 1 326 1 153 1 84 1 85 1 343 1 203 1 88 1 308 1 90 1 310 1 48 1 
264 1 135 9 237 6 238 2 164 3 5 3 7 3 78 2 8 7 351 1 214 9 56 1 59 8 123 1 94 2 248 6 171 3 320 2 278 3 282 1 20 3 326 3 153 2 364 5 84 1 85 1 73 1 343 3 203 2 308 4 88 1 180 1 90 1 310 3 110 5 48 3 
135 3 238 1 164 1 207 1 5 1 350 1 78 1 7 1 8 2 242 1 214 3 296 1 56 1 59 3 94 1 248 2 320 1 171 1 100 1 361 1 301 1 278 1 128 1 176 1 20 1 326 1 153 1 84 1 87 1 367 1 25 1 343 1 203 1 308 1 310 1 263 1 48 1 
135 4 238 1 5 1 7 2 8 3 242 1 296 1 56 1 59 5 94 1 248 3 100 2 301 1 20 1 153 1 25 1 343 2 203 1 308 2 310 2 263 1 264 1 164 2 207 1 350 1 78 1 214 4 171 2 320 1 361 1 278 2 128 1 282 1 176 1 326 2 84 1 367 1 87 1 180 1 48 2 
42 1 
195 1 259 1 
169 1 
195 1 260 1 75 1 
195 1 216 1 
195 1 260 1 
137 1 195 3 260 1 370 2 162 1 75 1 
114 1 63 1 360 1 82 3 196 1 174 1 175 1 268 2 340 1 158 1 213 6 37 3 233 1 289 1 171 1 13 1 48 1 
114 1 63 1 360 1 82 3 196 1 174 1 175 1 268 2 340 1 158 1 213 6 37 3 233 1 289 1 171 1 13 1 48 1 
360 1 114 1 63 1 82 3 196 1 174 1 175 1 268 2 340 1 158 1 213 6 345 1 37 3 233 1 289 1 171 1 13 1 48 1 
114 2 77 1 268 5 7 3 213 27 170 1 318 1 61 3 60 1 11 1 12 1 37 15 358 1 13 1 171 4 299 1 360 1 63 2 82 12 196 2 174 2 175 2 224 1 127 4 326 3 327 1 305 2 340 1 158 1 330 1 310 3 233 3 289 2 48 4 
299 2 360 1 114 1 63 1 82 4 196 1 175 1 174 1 268 3 305 4 340 1 158 1 211 1 122 1 330 1 213 8 170 2 318 2 233 2 37 4 289 1 358 2 171 1 48 1 
49 1 266 1 315 1 339 2 209 1 118 1 215 1 354 1 57 1 317 1 217 1 36 1 220 1 81 2 14 2 194 1 101 1 66 1 281 1 152 1 227 1 69 1 199 1 46 1 257 1 159 1 131 1 205 1 235 1 312 1 
49 1 266 1 51 1 339 3 4 1 209 1 118 2 215 1 354 1 57 1 317 1 217 1 36 1 81 3 322 1 14 2 194 1 101 1 66 1 152 1 227 1 69 1 199 1 46 1 257 1 159 1 131 1 205 1 235 1 312 1 
49 1 101 1 266 1 51 1 66 1 227 1 339 2 209 1 69 1 118 2 199 1 46 1 354 1 215 1 159 1 57 1 317 1 131 1 36 1 217 1 205 1 81 2 312 1 14 2 322 1 
0 1 111 1 49 1 337 1 339 1 4 1 209 1 210 1 354 1 57 2 317 2 217 2 218 1 81 1 194 1 195 1 152 1 179 1 199 2 24 1 131 1 260 1 312 1 
194 1 49 1 101 1 266 1 51 1 315 1 227 1 152 1 339 1 209 1 199 1 257 1 354 1 215 1 159 1 317 1 57 1 131 1 36 1 217 1 205 1 235 1 220 1 81 1 312 1 14 2 
313 1 
135 5 335 4 0 2 336 1 237 6 49 2 185 1 293 1 188 1 243 2 92 1 59 2 94 1 248 2 191 1 146 1 300 1 195 1 20 2 21 2 153 1 154 2 157 1 197 2 104 2 203 2 260 1 312 2 76 1 207 1 209 2 78 1 210 1 214 5 354 1 218 1 356 1 80 1 320 1 38 2 276 1 83 1 278 2 176 1 128 1 280 1 84 1 85 3 45 2 229 1 369 1 131 1 331 1 90 1 232 1 
335 2 135 3 336 1 237 2 138 1 276 1 76 1 300 1 185 1 207 1 176 1 128 1 85 1 157 1 188 1 243 1 214 3 331 1 232 1 80 1 356 1 191 1 
335 3 135 3 336 1 237 1 138 1 276 1 76 1 300 1 185 1 207 1 176 1 128 1 84 1 85 1 157 1 188 1 104 1 214 3 203 1 331 1 232 1 80 1 356 1 191 1 
135 3 335 3 336 1 237 2 138 1 76 1 207 1 185 1 188 1 243 1 214 3 356 1 80 1 191 1 300 1 276 1 128 1 176 1 84 1 85 1 157 1 45 1 104 1 203 1 331 1 232 1 
335 6 135 5 336 1 2 1 237 7 138 1 185 1 188 1 243 4 245 1 143 1 59 1 94 1 191 1 300 1 150 1 21 2 20 2 153 1 154 2 157 1 197 2 104 4 203 5 76 1 207 1 121 1 214 5 80 1 356 1 320 1 38 2 276 1 83 1 278 1 128 1 176 1 280 1 84 5 85 3 45 4 331 1 232 1 90 1 
335 4 135 4 336 1 237 4 185 1 188 1 243 2 92 1 59 1 94 1 248 2 191 1 300 1 21 2 20 2 153 1 154 2 157 1 197 2 104 2 203 1 76 1 207 1 214 4 80 1 356 1 320 1 38 2 276 1 83 1 278 1 280 1 128 1 176 1 84 1 85 2 45 2 331 1 90 1 232 1 
135 4 335 4 336 1 237 4 76 1 207 1 185 1 188 1 243 2 121 1 143 1 214 4 59 1 356 1 80 1 94 1 191 1 320 1 38 2 300 1 276 1 150 1 83 1 278 1 280 1 128 1 176 1 20 2 21 2 153 1 84 1 154 2 85 2 157 1 197 2 104 2 45 2 203 1 331 1 232 1 90 1 
135 4 335 4 336 1 237 4 76 1 207 1 185 1 188 1 243 2 121 1 143 1 214 4 59 1 356 1 80 1 94 1 191 1 320 1 38 2 300 1 276 1 150 1 83 1 278 1 280 1 128 1 176 1 20 2 21 2 153 1 84 1 154 2 85 2 157 1 197 2 104 2 45 2 203 1 331 1 232 1 90 1 
135 2 335 2 336 1 76 1 207 1 185 1 188 1 214 2 59 1 356 1 80 1 94 1 191 1 320 1 300 1 276 1 150 1 83 1 278 1 128 1 176 1 21 1 153 1 157 1 22 1 197 1 331 1 89 1 232 1 160 1 90 1 
135 4 335 5 336 1 237 5 76 1 207 1 185 1 188 1 121 1 243 3 245 1 143 1 214 4 59 1 94 1 356 1 80 1 191 1 320 1 38 2 300 1 276 1 150 1 83 1 278 1 280 1 128 1 176 1 20 2 21 2 153 1 84 1 154 2 85 2 157 1 197 2 45 3 104 3 203 1 331 1 90 1 232 1 
135 4 335 5 336 1 237 5 76 1 207 1 185 1 188 1 121 1 243 3 245 1 143 1 214 4 59 1 94 1 356 1 80 1 191 1 320 1 38 2 300 1 276 1 150 1 83 1 278 1 280 1 128 1 176 1 20 2 21 2 153 1 84 1 154 2 85 2 157 1 197 2 45 3 104 3 203 1 331 1 90 1 232 1 
135 2 335 2 336 1 76 1 207 1 185 1 188 1 214 2 59 1 94 1 356 1 80 1 191 1 320 1 300 1 276 1 83 1 278 1 176 1 128 1 21 1 153 1 157 1 197 1 331 1 232 1 90 1 89 1 
42 1 299 1 105 1 314 1 170 1 318 1 305 2 274 1 358 1 
183 1 299 1 277 1 314 1 349 1 127 1 305 2 213 1 105 1 58 1 170 1 74 1 318 1 37 1 358 1 
0 1 49 1 314 1 207 2 209 1 6 1 186 1 213 2 354 1 58 1 297 1 170 1 246 1 318 1 219 1 357 1 37 1 358 1 299 1 250 1 82 1 195 1 361 1 128 2 176 1 251 1 305 2 105 1 47 1 131 1 109 1 332 1 260 1 290 1 312 1 134 1 75 1 263 1 
183 1 0 1 49 1 314 2 207 2 209 1 6 1 213 2 354 1 355 1 58 1 297 1 170 2 318 2 219 1 357 1 37 2 358 2 275 1 299 2 250 1 195 1 361 1 226 1 128 2 176 1 251 1 305 4 366 1 256 1 105 2 131 1 74 1 344 1 260 1 312 1 75 1 263 1 
0 2 112 1 49 7 163 1 207 1 314 2 51 1 167 1 209 8 141 2 6 1 210 1 213 2 354 2 170 2 318 2 218 1 274 1 37 1 358 2 193 1 299 2 250 1 82 1 361 1 195 3 151 1 281 1 128 1 176 1 305 4 105 2 47 1 131 2 260 2 206 1 236 1 312 8 263 1 
299 1 82 2 361 1 301 1 207 1 314 1 128 1 176 1 279 1 305 2 7 1 120 1 213 2 105 1 58 1 170 1 318 1 310 1 358 1 171 1 263 1 
299 1 82 1 314 1 305 2 7 1 213 1 105 1 55 1 170 1 318 1 274 1 358 1 171 1 
183 1 299 1 99 1 314 1 326 1 305 2 213 2 105 1 170 1 74 1 318 1 274 1 37 2 358 1 48 1 
183 1 299 1 82 1 314 1 326 1 305 2 7 1 213 3 105 1 170 1 74 1 318 1 274 1 310 1 37 2 358 1 171 1 48 1 
299 1 163 1 82 1 314 1 305 2 7 1 213 1 105 1 55 1 170 1 318 1 358 1 171 1 
183 1 299 1 99 1 163 1 314 1 326 1 305 2 213 2 105 1 170 1 74 1 318 1 37 2 358 1 48 1 
183 1 299 1 163 1 82 1 314 1 326 1 305 2 7 1 213 3 105 1 170 1 74 1 318 1 310 1 37 2 358 1 171 1 48 1 
183 1 299 1 82 1 314 1 326 1 305 2 7 1 213 3 105 1 170 1 74 1 318 1 310 1 37 2 358 1 171 1 48 1 
0 1 49 1 207 1 314 1 209 1 213 2 354 1 170 1 246 1 318 1 219 1 357 1 37 1 358 1 299 1 250 1 82 1 195 1 128 1 251 1 305 2 366 1 105 1 47 1 131 1 260 1 312 1 75 1 
0 1 49 1 115 1 207 1 314 1 209 1 32 1 213 2 354 1 170 1 246 1 318 1 219 1 37 1 358 1 299 1 149 1 250 1 82 1 195 1 128 1 305 2 105 1 47 1 131 1 260 1 312 1 75 1 
183 1 299 1 82 1 314 1 326 1 305 2 7 1 213 3 105 1 58 1 170 1 74 1 318 1 310 1 37 2 358 1 171 1 48 1 
183 1 49 1 207 1 314 1 209 1 7 1 213 3 354 1 355 1 170 1 318 1 219 1 37 2 357 1 358 1 171 1 299 1 82 1 195 1 281 1 128 1 326 1 251 1 305 2 366 1 105 1 131 1 74 1 260 1 310 1 312 1 48 1 75 1 
314 1 207 1 7 1 213 2 170 1 58 1 318 1 37 1 358 1 171 1 299 1 82 1 301 1 361 1 279 1 176 1 128 1 326 1 305 2 105 1 107 1 310 1 263 1 48 1 
1 1 347 1 348 1 268 2 316 1 7 2 122 1 353 1 213 18 170 2 318 2 61 2 12 2 37 11 358 2 171 2 98 3 299 2 82 7 19 1 127 4 326 2 327 2 304 1 305 4 27 1 310 2 233 2 291 1 48 2 
98 1 299 1 1 1 82 2 19 2 348 1 127 1 327 1 304 1 305 2 122 1 213 4 170 1 27 2 318 1 61 1 37 2 358 1 223 1 
1 1 347 1 348 1 268 2 316 1 7 2 122 1 213 18 170 2 318 2 61 2 12 2 37 11 358 2 171 2 223 1 98 3 299 2 82 7 19 1 127 4 326 2 327 2 304 1 305 4 27 1 310 2 233 2 291 1 48 2 
1 1 347 1 348 1 268 2 316 1 7 2 122 1 213 18 170 2 318 2 61 2 12 2 37 11 358 2 171 2 223 1 98 3 299 2 82 7 19 1 127 4 326 2 327 2 304 1 305 4 27 1 310 2 233 2 291 1 48 2 
1 1 347 1 348 1 268 5 316 1 7 2 122 1 213 33 170 1 318 1 61 3 12 1 37 19 358 1 171 5 223 1 98 3 299 1 360 3 82 14 19 1 175 3 127 3 326 2 327 2 304 1 305 2 340 3 158 3 200 1 27 1 310 2 233 5 289 3 48 5 
72 1 212 1 352 1 39 1 283 1 166 1 29 1 181 1 125 1 365 1 
234 1 273 1 
352 1 39 1 283 1 258 1 166 1 29 1 125 1 306 1 119 1 
28 1 17 1 
267 1 64 1 371 1 
135 1 39 1 136 1 172 1 166 1 29 1 365 1 86 1 72 1 352 1 214 1 283 1 203 1 181 1 125 1 334 1 126 2 192 1 
135 1 39 1 136 1 172 1 166 1 29 1 365 1 86 1 72 1 352 1 214 1 283 1 203 1 181 1 125 1 334 1 126 2 192 1 
135 1 39 1 136 1 172 1 166 1 29 1 365 1 86 1 72 1 352 1 214 1 283 1 203 1 181 1 125 1 334 1 126 2 192 1 
28 1 17 1 267 1 
28 1 17 1 267 1 
64 1 371 1 
267 1 64 1 371 1 
190 1 52 1 
135 1 3 1 207 2 166 1 29 1 52 1 8 1 273 1 352 1 33 1 214 1 190 1 246 1 125 1 126 1 192 1 323 1 298 1 39 1 361 2 128 2 176 2 283 1 308 1 334 1 234 1 263 2 
49 2 314 1 207 2 338 1 167 1 209 2 30 1 141 2 9 1 213 2 354 1 58 1 170 1 318 1 319 1 37 1 358 1 299 1 250 1 82 1 195 1 128 2 176 2 305 2 105 1 26 1 47 1 131 1 260 1 236 1 312 2 
49 2 101 1 265 1 173 1 266 1 51 1 281 1 209 2 117 1 257 1 354 1 159 1 215 1 57 1 131 1 36 1 205 1 312 2 14 2 
49 1 101 1 173 1 266 1 51 1 209 1 257 1 159 1 215 1 354 1 57 1 131 1 36 1 205 1 312 1 182 1 14 2 
0 1 49 1 195 1 265 1 209 1 210 1 354 1 24 1 57 1 131 1 218 1 260 1 261 1 312 1 
49 1 101 1 265 1 173 1 266 1 51 1 209 1 117 1 257 1 354 1 159 1 215 1 57 1 131 1 36 1 205 1 312 1 14 2 
254 1 
42 1 
135 1 237 1 214 1 59 1 94 1 248 1 320 1 38 1 278 1 280 1 20 1 153 1 154 1 84 1 85 1 203 1 90 1 
0 1 49 1 137 1 195 2 362 1 153 1 209 1 129 1 354 2 131 1 259 1 90 1 260 1 94 1 320 1 312 1 75 1 
347 1 164 3 116 1 278 3 127 1 20 2 153 1 327 1 7 1 189 1 343 3 59 2 61 1 90 1 310 1 94 1 248 4 171 1 320 1 
135 1 50 1 207 1 5 2 242 1 121 1 214 1 59 2 94 1 320 1 171 2 301 1 361 1 175 1 278 2 128 1 176 1 153 1 340 1 367 1 87 1 25 1 333 1 90 1 289 1 48 1 263 1 
113 1 278 1 269 1 153 1 84 1 203 1 59 1 90 1 94 1 320 1 
164 1 278 1 326 1 7 1 343 1 59 2 310 1 248 1 171 1 48 1 
135 1 237 1 214 1 203 1 84 1 85 1 
135 3 0 2 49 4 237 4 293 1 209 4 78 2 210 1 272 1 214 3 56 1 354 1 59 2 218 1 94 2 320 2 146 1 195 1 278 2 153 2 85 2 23 1 369 2 131 1 90 1 260 1 346 1 312 4 262 2 
0 1 49 1 207 3 314 1 209 1 213 1 354 1 170 1 246 1 318 1 219 1 37 1 357 1 358 1 299 1 250 1 361 2 301 2 195 1 128 3 176 2 251 1 305 2 366 1 87 1 202 1 105 1 131 1 260 1 312 1 263 2 75 1 
63 1 164 2 278 2 20 2 153 1 84 2 78 1 343 2 369 1 203 2 59 1 90 1 94 1 248 4 320 1 
39 1 125 1 365 1 52 1 292 1 
39 1 165 1 125 1 
39 1 165 1 125 1 
39 1 165 1 125 1 
39 1 43 1 125 1 
39 1 43 1 125 1 
39 1 43 1 125 1 
39 1 125 1 
352 1 166 1 
299 2 360 1 82 3 174 1 175 1 268 2 305 4 340 1 158 1 213 7 330 1 170 2 318 2 37 4 233 1 358 2 289 1 171 1 48 1 
42 1 
299 1 82 1 268 1 326 1 305 2 7 1 213 3 170 1 318 1 310 1 233 1 37 2 358 1 171 1 48 1 359 1 
82 2 268 1 127 2 326 1 327 1 7 1 213 6 61 1 12 1 310 1 233 1 37 4 171 1 48 1 
268 6 7 2 213 20 170 2 318 2 61 2 12 1 37 12 358 2 171 3 299 2 360 1 82 8 277 1 174 2 175 2 127 2 326 2 305 4 340 1 158 1 200 1 201 1 330 2 310 2 233 4 289 2 48 3 
213 1 127 1 37 1 
82 1 213 1 61 1 
299 1 82 2 268 2 326 1 305 2 7 1 256 1 213 5 170 1 318 1 310 1 37 3 233 2 358 1 171 1 359 1 48 1 
347 1 116 1 268 1 31 1 7 2 189 1 122 1 213 10 170 1 318 1 61 1 37 6 358 1 171 2 299 1 82 4 127 1 326 2 252 1 327 1 305 2 310 2 233 1 48 2 
82 3 175 1 174 1 268 2 340 1 213 6 37 3 233 1 289 1 171 1 48 1 
299 1 360 1 82 1 174 1 175 1 268 2 305 2 158 1 201 1 213 3 330 1 170 1 318 1 233 1 37 2 289 1 358 1 
299 1 50 1 82 5 175 2 174 2 268 5 305 2 340 1 122 1 213 10 170 1 318 1 233 3 37 5 358 1 289 2 171 2 48 2 
299 1 82 1 305 2 7 1 122 1 213 1 170 1 318 1 358 1 171 1 
299 1 82 1 268 1 326 1 305 2 7 1 122 1 213 3 170 1 318 1 310 1 233 1 37 2 358 1 171 1 48 1 
299 3 82 1 175 1 174 1 268 2 305 6 122 1 201 1 330 1 213 3 170 3 318 3 37 2 233 1 358 3 289 1 291 1 
77 1 268 7 7 3 122 1 213 32 170 5 318 5 11 1 61 3 12 1 37 19 358 5 171 5 359 1 299 5 360 1 82 13 174 3 175 3 224 1 127 4 326 3 327 1 305 10 340 2 158 1 201 1 330 2 310 3 233 4 289 3 291 1 48 5 
299 1 360 1 82 3 347 1 175 1 268 1 127 1 327 1 305 2 340 1 158 1 122 1 213 7 170 1 318 1 61 1 233 1 37 4 289 1 358 1 171 1 48 1 
347 1 116 1 268 3 31 1 7 4 189 1 122 1 213 18 170 2 318 2 61 2 12 1 37 11 358 2 171 4 359 1 299 2 82 7 127 2 326 4 252 1 327 1 305 4 200 1 310 4 233 3 48 4 
347 1 116 1 268 2 31 1 7 2 189 1 122 1 213 16 170 3 318 3 61 1 37 10 358 3 171 3 359 1 299 3 360 1 82 6 175 1 127 1 326 2 252 1 327 1 305 6 340 1 158 1 330 1 310 2 233 2 289 1 48 3 
347 1 116 1 268 1 31 1 7 2 189 1 122 1 213 10 170 2 318 2 61 1 37 6 358 2 171 2 359 1 299 2 82 4 127 1 326 2 252 1 327 1 305 4 310 2 233 1 48 2 
299 1 360 1 82 3 347 1 175 1 268 1 127 1 327 1 305 2 340 1 158 1 122 1 213 7 170 1 318 1 61 1 233 1 37 4 289 1 358 1 171 1 48 1 
347 1 116 1 268 1 31 1 7 2 189 1 122 1 213 10 170 1 318 1 61 1 37 6 358 1 171 2 299 1 82 4 127 1 326 2 252 1 327 1 305 2 310 2 233 1 48 2 
347 1 116 1 268 1 31 1 7 2 189 1 122 1 213 11 170 3 318 3 61 1 37 7 358 3 171 2 359 1 299 3 82 4 127 1 326 2 252 1 327 1 305 6 330 1 310 2 233 1 48 2 
347 1 116 1 268 2 31 1 7 2 189 1 122 1 213 11 170 3 318 3 61 1 37 7 358 3 171 2 299 3 82 4 127 1 326 2 252 1 327 1 305 6 330 1 310 2 233 2 291 1 48 2 
63 1 360 1 50 1 82 5 175 4 174 4 268 9 340 2 158 1 213 10 37 5 233 5 289 4 171 2 48 2 
347 1 116 1 268 1 31 1 7 2 189 1 122 1 213 11 170 3 318 3 61 1 37 7 358 3 171 2 299 3 82 4 127 1 326 2 252 1 327 1 305 6 330 1 310 2 233 1 291 1 48 2 
336 1 147 1 207 1 128 1 176 1 246 1 144 1 
147 1 336 1 207 1 139 1 176 1 128 1 168 1 328 1 68 1 246 1 35 1 144 1 
42 1 0 1 49 1 209 1 312 1 
0 1 49 1 195 1 361 1 207 2 176 1 128 2 209 1 6 1 354 1 131 1 246 1 219 1 260 1 357 1 312 1 75 1 263 1 
49 1 76 1 207 2 185 1 209 1 6 1 354 1 246 1 216 1 219 1 357 1 276 1 361 2 195 3 128 2 176 2 131 1 260 2 287 1 312 1 262 1 263 1 75 2 
49 2 76 1 207 2 185 1 209 2 6 1 354 1 246 1 216 1 219 1 149 1 276 1 361 2 195 3 128 2 176 2 102 1 131 1 260 2 287 1 312 2 262 1 263 1 75 2 
135 2 0 1 237 1 49 2 207 1 209 2 242 1 188 1 214 2 354 1 216 1 361 1 301 1 195 4 128 1 176 1 84 1 87 1 367 1 25 1 131 1 285 1 203 1 259 1 260 1 161 1 287 1 370 1 312 2 263 1 262 1 75 1 
135 2 0 1 49 3 237 1 195 4 209 3 84 1 142 1 102 1 188 1 214 2 354 1 203 1 131 1 216 1 259 1 260 1 287 1 370 1 312 3 75 1 262 1 
49 1 112 1 354 1 131 1 209 1 312 1 
0 1 49 1 137 1 195 1 209 1 79 1 354 2 131 1 62 1 260 1 312 1 75 1 321 1 
49 1 314 2 207 2 268 1 30 1 209 1 6 1 213 5 354 1 58 1 170 2 355 1 246 2 318 2 219 1 37 3 357 1 358 2 171 1 275 1 299 2 360 1 82 2 195 1 361 1 175 1 128 2 176 1 281 1 251 1 305 4 340 1 366 1 158 1 105 2 131 1 260 1 233 1 289 1 312 1 48 1 75 1 263 1 
135 3 0 1 113 1 49 1 237 2 140 1 269 1 209 1 142 1 8 1 188 1 214 3 59 1 94 2 320 2 18 1 195 2 278 1 153 2 84 1 85 1 23 1 203 1 204 1 90 2 259 1 370 1 312 1 
112 1 49 2 137 1 195 2 362 1 281 1 209 2 354 2 131 1 260 1 370 1 312 2 75 1 
0 1 49 4 195 1 281 1 253 1 209 4 102 1 210 1 354 1 131 1 218 1 260 1 312 4 
15 1 49 1 195 1 209 1 228 1 294 1 79 1 354 2 131 1 260 1 312 1 75 1 321 1 
0 1 49 1 266 1 354 1 215 1 131 1 36 1 209 1 312 1 14 1 
9 1 49 2 195 1 354 1 51 1 131 1 281 1 209 2 260 1 236 1 312 2 
193 1 0 1 49 4 195 3 281 1 253 1 209 5 210 1 354 2 131 2 218 1 260 2 206 1 236 1 312 5 262 1 
193 1 0 1 49 4 195 3 281 1 253 1 209 5 210 1 354 2 131 2 218 1 260 2 288 1 236 1 312 5 262 1 
0 1 49 1 149 1 195 1 361 1 207 2 176 1 128 2 209 1 6 1 354 1 131 1 246 1 219 1 260 1 312 1 75 1 263 1 
49 1 137 1 195 1 209 1 79 1 354 2 131 1 62 1 260 1 312 1 262 1 75 1 321 1 
244 1 198 1 246 1 247 1 132 1 
135 2 148 1 276 1 76 1 185 1 84 1 53 1 8 1 188 1 198 1 244 2 214 2 203 1 230 1 246 1 247 2 132 2 356 1 249 1 
198 1 244 1 207 1 26 1 338 1 128 1 176 1 319 1 132 1 
198 1 148 1 249 1 
42 1 
194 1 46 1 66 1 339 1 152 1 69 1 81 1 
199 1 317 1 81 1 
194 1 46 1 44 1 66 1 108 1 339 3 152 1 220 1 69 1 81 3 221 2 97 1 
194 1 46 1 66 1 339 2 152 1 69 1 187 1 81 2 118 1 
194 1 266 1 152 1 339 1 70 1 46 1 106 1 205 1 220 1 81 1 14 1 
194 1 46 1 339 1 152 1 220 1 69 1 81 1 
194 1 66 1 339 1 152 1 220 1 69 2 81 1 
194 2 324 1 152 2 339 2 69 1 71 1 46 1 307 1 220 1 81 2 
194 1 41 1 66 1 152 1 339 3 69 1 118 2 70 1 255 1 46 2 220 1 81 3 133 1 
194 1 101 1 266 1 66 1 152 1 339 2 156 1 69 1 118 1 46 1 36 1 205 1 220 1 81 2 14 2 
194 2 66 1 152 2 339 4 69 1 187 1 118 2 70 1 255 1 46 2 284 1 220 1 81 4 
194 1 46 1 66 1 339 1 152 1 220 1 69 1 81 1 
194 1 66 2 177 1 339 4 152 1 69 2 118 2 70 1 255 1 46 3 108 1 81 4 221 1 97 1 
194 1 302 1 91 1 66 1 152 1 339 2 69 1 118 1 46 1 309 1 220 1 81 2 
194 1 46 1 66 1 108 1 339 3 152 1 329 1 220 1 69 1 81 3 221 2 97 2 
46 2 65 1 271 2 155 1 
194 1 325 1 339 1 152 1 220 1 81 1 
194 1 46 1 66 1 339 2 152 1 220 1 69 1 133 1 81 2 118 1 
103 1 
194 1 46 1 66 1 339 1 152 1 220 1 69 1 81 1 
194 1 66 1 152 1 339 3 69 1 118 1 46 1 220 1 81 3 133 1 221 1 
255 1 46 1 177 1 70 1 
46 1 69 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 194 (24,160,210) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 72 52 65 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (111,198) 125 69 270 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 72 152 351 288 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 72 152 351 288 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 72 152 351 288 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 72 152 351 288 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 72 50 351 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 268 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 230 326 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 72 50 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 72 52 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 289 112 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 92 2 170 2 145 1 51 2 4 1 7 2 329 1 99 9 345 6 330 2 31 2 128 1 76 1 304 1 350 1 105 3 266 5 313 1 318 1 294 2 86 1 43 1 363 1 63 1 179 4 233 9 212 1 
240 1 92 2 170 2 145 1 51 2 4 1 7 2 329 1 99 9 345 6 330 2 31 2 128 1 76 1 304 1 350 1 105 3 266 5 313 1 318 1 294 2 86 1 43 1 363 1 63 1 179 4 233 9 212 1 
240 1 92 2 170 2 145 1 51 2 4 1 7 2 329 1 99 10 345 7 330 2 31 2 128 1 76 1 304 1 350 1 105 4 266 6 313 1 318 1 294 2 86 1 43 1 363 1 63 1 179 5 233 10 212 1 
304 1 240 1 350 1 105 2 92 2 170 2 266 4 51 2 4 1 313 1 7 1 329 1 345 4 99 7 318 1 86 1 330 2 294 2 43 1 179 3 63 1 363 1 233 7 31 2 212 1 128 1 76 1 
304 1 105 1 92 1 170 1 145 1 266 3 51 1 313 1 7 2 329 1 99 4 345 3 330 1 294 1 179 2 233 4 212 1 128 1 
304 1 173 1 92 1 170 1 266 1 313 1 123 1 99 2 318 1 330 1 294 1 233 2 31 1 128 1 142 1 76 1 
304 1 105 1 266 2 313 1 99 3 345 1 330 2 294 2 63 1 179 1 233 3 31 1 128 1 
304 1 240 1 105 3 92 1 170 1 145 1 51 1 266 5 5 1 109 1 313 1 7 2 329 1 99 9 345 7 86 1 330 2 294 2 63 1 179 4 233 9 31 1 212 1 128 1 
304 1 240 1 105 3 92 1 170 1 145 1 51 1 266 5 5 1 109 1 313 1 7 2 329 1 99 9 345 7 86 1 330 2 294 2 63 1 179 4 233 9 31 1 212 1 128 1 
324 1 48 1 232 1 
150 1 
217 2 305 2 158 1 255 1 20 2 44 2 34 2 236 2 
217 2 3 1 94 1 95 1 300 1 245 1 54 1 344 1 222 2 75 1 284 1 126 1 172 1 264 1 195 2 303 1 34 2 35 1 305 2 174 2 58 1 77 2 158 1 255 1 292 1 20 3 80 1 316 1 83 1 337 1 114 2 320 1 360 1 206 1 180 1 44 3 236 2 
25 1 272 1 217 1 305 1 133 1 255 1 20 1 44 1 34 1 236 1 
324 1 241 1 252 1 242 1 188 1 48 1 133 1 327 1 20 1 73 1 138 1 44 1 235 1 236 1 
324 1 241 1 252 2 305 1 217 1 242 1 188 1 48 1 133 1 20 1 73 1 138 2 44 1 34 1 236 1 
10 1 252 1 138 1 49 1 62 1 
324 1 25 1 239 1 217 1 48 1 49 1 96 1 10 1 34 1 252 2 305 1 133 1 255 1 20 1 271 1 272 1 138 2 44 1 236 1 
10 1 252 1 138 1 
25 1 252 1 239 1 305 1 217 1 49 1 133 1 255 1 20 1 272 1 138 1 44 1 34 1 236 1 
48 1 
324 1 10 1 252 2 138 2 48 1 49 1 96 1 110 1 
324 1 15 1 252 5 334 2 48 1 49 2 311 1 218 1 96 1 343 2 10 2 138 5 321 1 361 1 139 1 231 1 348 1 181 1 323 2 
232 1 158 1 
305 1 217 1 353 1 158 2 20 2 8 1 44 2 34 1 236 2 
125 1 198 1 317 1 
77 1 158 1 292 1 20 1 61 1 95 1 80 1 83 1 337 1 54 1 222 1 344 1 284 1 360 1 44 1 195 1 
305 1 217 1 198 1 77 1 292 1 80 1 20 2 95 1 83 1 337 1 54 1 344 1 222 1 74 1 284 1 360 1 101 1 44 2 195 1 236 1 
74 1 217 3 305 3 158 1 20 3 44 3 34 1 236 3 
272 1 217 1 305 1 133 1 20 1 44 1 236 1 
8 1 217 1 305 1 133 1 353 1 20 1 44 1 34 1 236 1 
241 1 217 3 242 1 2 1 188 1 3 1 95 1 245 1 54 1 8 1 344 1 73 1 222 1 74 1 75 1 284 1 101 1 264 1 195 1 303 1 34 2 265 1 35 1 252 1 305 3 174 1 58 1 133 1 77 1 158 1 292 1 255 1 80 1 20 4 83 1 337 1 114 2 138 1 320 1 360 1 206 1 180 1 44 4 236 3 
217 1 305 1 74 1 176 1 158 1 327 1 20 2 44 2 236 2 
252 1 241 1 242 1 305 3 217 3 2 1 188 1 48 1 133 1 20 3 8 1 73 1 138 1 74 2 101 1 44 3 34 1 333 1 236 3 
305 2 217 2 198 1 20 2 317 1 8 1 74 1 44 2 34 1 236 2 
77 1 158 1 292 1 20 1 95 1 80 1 83 1 337 1 54 1 222 1 344 1 360 1 284 1 44 1 195 1 
77 1 158 1 293 1 292 1 20 1 314 1 83 1 337 1 54 1 222 1 344 1 360 1 284 1 44 1 195 1 
47 1 245 1 148 1 75 1 125 2 247 1 172 2 303 1 35 2 174 4 58 1 310 1 107 1 198 2 111 1 81 1 317 2 114 2 320 1 41 1 295 1 119 1 163 1 180 1 
241 1 217 1 305 1 149 1 133 1 20 1 44 1 236 1 
305 4 217 4 176 1 158 1 327 1 20 5 8 1 74 2 101 1 127 1 44 5 250 1 34 1 236 5 
272 1 217 2 305 2 149 1 133 1 20 2 44 2 236 2 
210 1 298 1 
210 1 298 1 
194 1 24 1 
194 1 24 1 
194 1 24 1 
147 1 210 1 298 1 
210 1 160 1 298 1 
210 1 194 1 24 1 298 1 
147 1 210 1 298 1 
147 1 210 1 298 1 
197 1 210 1 298 1 
197 1 210 1 298 1 
197 1 210 1 298 1 
252 2 48 1 280 1 6 1 199 1 124 2 138 2 346 1 162 1 118 2 276 1 210 2 164 3 297 1 365 2 182 2 298 2 66 1 45 2 
217 2 124 1 225 1 129 1 252 1 305 2 335 1 158 1 290 1 199 1 20 2 160 1 85 1 138 1 118 1 207 1 164 1 210 1 44 2 365 1 236 2 22 1 298 1 182 1 
92 1 170 1 51 1 
173 1 92 1 170 1 
55 1 173 1 154 1 170 3 51 2 143 1 
184 1 173 1 154 1 170 2 51 1 143 1 
173 1 154 2 170 2 51 1 143 1 
324 1 1 1 47 1 49 4 48 2 343 1 96 1 10 1 191 1 11 2 247 1 348 3 150 3 151 2 252 5 334 1 107 1 290 1 200 1 203 2 138 5 161 1 275 1 361 2 295 1 139 1 207 1 140 1 90 1 22 1 323 1 366 1 121 1 
324 1 25 1 239 1 217 1 49 2 48 1 10 1 29 1 34 1 252 2 305 1 133 1 254 1 255 1 20 1 62 1 272 1 138 2 322 1 44 1 236 1 
324 1 47 1 48 3 49 2 343 1 191 1 11 2 247 1 348 3 151 1 150 4 252 3 334 1 311 1 107 1 290 1 200 2 138 3 203 2 275 1 295 1 361 2 140 1 90 1 323 1 366 1 121 1 
47 1 48 2 49 2 328 1 343 1 191 1 11 2 247 1 348 3 150 4 151 1 252 3 334 1 311 1 107 1 290 2 37 1 200 2 338 1 203 2 138 3 275 1 295 1 361 2 140 1 90 1 323 1 366 1 121 1 
284 1 232 1 362 1 
39 1 284 1 
89 1 
344 1 284 1 
135 1 344 1 284 3 360 1 362 2 193 1 
344 1 284 1 360 1 
284 1 19 1 
35 3 185 1 131 1 174 7 309 1 107 1 79 1 28 1 81 2 190 1 221 2 163 3 247 1 172 4 32 1 332 1 227 1 
35 3 185 1 131 1 174 7 309 1 107 1 79 1 28 1 81 2 190 1 221 2 163 3 247 1 172 4 32 1 332 1 227 1 
35 3 185 1 131 1 174 7 309 1 107 1 79 1 28 1 81 2 190 1 221 2 21 1 163 3 247 1 172 4 32 1 332 1 227 1 
35 1 185 1 174 3 339 1 52 1 281 1 72 1 65 1 172 2 190 2 221 1 
35 4 185 1 131 1 174 9 58 2 309 1 107 1 79 1 28 1 81 3 190 1 245 2 221 2 114 4 320 2 117 1 163 4 247 1 209 1 332 1 172 5 180 2 227 1 278 1 
68 1 92 1 341 1 170 2 51 1 244 1 54 1 55 1 345 1 222 1 99 2 283 1 330 1 31 1 195 1 128 1 304 1 173 1 175 1 266 1 59 1 77 1 313 1 83 1 294 1 116 1 87 1 233 2 214 1 259 1 
68 1 92 1 341 1 170 2 51 1 244 1 54 1 55 1 222 1 99 3 345 2 283 1 330 1 31 1 195 1 304 1 173 1 175 1 266 1 77 1 256 1 313 1 315 1 83 1 137 1 294 1 116 1 87 1 233 3 214 1 
68 1 341 1 92 1 170 2 51 1 54 1 55 1 222 1 99 2 345 2 283 1 31 1 195 1 304 1 173 1 175 1 266 1 77 1 256 1 313 1 83 1 137 1 87 1 233 2 214 1 
341 2 175 2 228 1 77 1 177 1 157 1 83 1 315 1 337 1 54 1 344 1 99 1 222 1 319 1 330 1 294 1 284 1 31 2 233 1 195 1 14 1 214 2 238 1 
68 1 92 1 341 1 170 2 51 1 244 1 54 1 55 1 222 1 99 1 283 1 330 1 31 1 195 1 128 1 173 1 175 1 59 1 77 1 83 1 137 1 294 1 116 1 87 1 233 1 214 1 
100 1 
324 1 241 1 242 1 188 1 144 2 48 2 327 1 96 3 54 1 10 6 246 1 284 1 150 2 195 2 252 5 334 1 16 1 108 1 157 1 20 1 200 2 337 2 208 1 340 1 121 1 165 1 216 2 122 1 168 1 343 1 171 2 220 2 344 1 222 2 73 1 347 4 348 2 77 2 133 1 78 2 177 1 83 1 356 1 358 1 138 5 274 1 361 2 42 2 139 1 44 1 235 1 277 2 323 1 237 1 236 1 
241 1 252 2 242 1 188 1 122 1 168 1 133 1 78 1 327 1 20 1 10 1 73 1 138 2 347 2 44 1 235 1 340 1 237 1 236 1 165 1 
324 1 241 1 242 1 168 1 122 1 188 1 48 1 327 1 96 1 10 1 73 1 347 3 252 3 133 1 20 1 110 1 138 3 42 1 44 1 235 1 236 1 237 1 340 1 165 1 
241 1 242 1 168 1 122 1 188 1 327 1 96 1 171 1 10 2 73 1 347 3 252 3 133 1 78 1 20 1 110 1 138 3 42 1 44 1 235 1 236 1 237 1 340 1 165 1 
25 1 324 1 239 1 241 1 217 1 242 1 168 1 122 1 188 1 48 1 327 1 96 1 171 1 10 2 73 1 347 3 34 1 252 3 305 1 133 2 78 1 255 1 20 2 110 1 272 1 138 3 42 1 44 2 234 1 235 1 236 2 237 1 340 1 165 1 
324 1 241 1 242 1 188 1 144 2 48 1 327 1 96 2 10 4 150 2 252 4 334 1 108 1 20 1 200 2 208 1 340 1 165 1 216 2 122 1 168 1 343 1 220 2 171 2 73 1 347 4 348 1 133 1 78 2 358 1 138 4 361 1 42 2 139 1 44 1 235 1 236 1 323 1 237 1 277 2 
324 1 241 1 216 2 242 1 299 1 168 1 122 1 188 1 144 2 48 1 71 1 327 1 96 2 343 1 171 2 220 2 10 4 73 1 347 4 348 1 252 4 334 1 108 1 133 1 78 2 20 1 200 2 358 1 202 1 138 4 361 1 42 2 139 1 44 1 235 1 277 2 323 1 236 1 237 1 340 1 165 1 
324 1 239 1 241 1 242 1 188 1 144 2 48 1 327 1 96 2 10 4 252 4 334 1 108 1 255 1 20 2 200 2 202 1 340 1 165 1 25 1 216 2 217 1 122 1 168 1 299 1 71 1 343 1 220 2 171 2 73 1 347 4 348 1 34 1 305 1 133 2 78 2 358 1 272 1 138 4 361 1 42 2 139 1 44 2 235 1 237 1 236 2 323 1 277 2 
324 1 239 1 241 1 242 1 188 1 144 2 48 1 327 1 96 2 10 4 150 2 13 2 252 4 334 1 156 1 255 1 20 2 340 1 165 1 25 1 217 1 122 1 168 1 299 1 343 1 220 2 171 2 73 1 347 4 348 1 226 1 34 1 305 1 308 1 306 2 133 2 78 2 358 1 272 1 138 4 361 1 42 2 139 1 44 2 235 1 237 1 236 2 323 1 
324 1 239 1 241 1 242 1 188 1 144 2 48 1 327 1 96 2 10 5 56 1 252 4 334 1 108 1 255 1 20 2 200 2 202 1 340 1 165 1 25 1 216 2 217 1 122 1 168 1 299 1 71 1 343 1 171 3 220 2 73 1 347 5 348 1 34 1 305 1 133 2 78 3 358 1 272 1 138 4 361 1 42 3 139 1 44 2 235 1 237 1 236 2 323 1 277 2 
324 1 241 1 216 2 242 1 299 1 168 1 122 1 188 1 144 2 48 1 71 1 327 1 96 2 343 1 220 2 171 3 10 5 73 1 56 1 347 5 348 1 252 4 334 1 108 1 133 1 78 3 20 1 200 2 358 1 202 1 138 4 361 1 42 3 139 1 44 1 235 1 277 2 323 1 236 1 237 1 340 1 165 1 
241 1 242 1 168 1 122 1 188 1 144 1 327 1 343 1 220 1 73 1 347 2 348 1 150 1 226 1 13 1 252 2 334 1 133 1 20 1 358 1 138 2 361 1 139 1 208 1 44 1 235 1 237 1 323 1 236 1 340 1 165 1 
28 1 245 1 221 1 75 1 125 1 247 1 332 1 172 3 303 1 35 3 131 1 174 6 58 1 310 1 309 1 198 1 107 1 79 1 158 2 81 2 317 1 114 2 320 1 163 2 232 1 180 1 
69 1 35 1 174 2 58 1 198 3 106 1 281 1 270 1 245 1 114 2 320 1 75 1 125 3 339 1 172 1 180 1 303 1 
217 1 3 1 95 1 282 1 245 1 54 1 344 1 222 1 74 1 284 1 75 1 101 1 126 1 172 1 195 1 303 1 35 1 305 1 174 2 58 1 106 1 77 1 158 1 292 1 80 1 61 1 20 2 83 1 337 1 317 1 114 2 320 1 360 1 120 1 44 2 180 1 258 1 236 1 
3 1 47 1 95 2 245 3 54 2 101 1 284 2 247 2 286 1 332 1 195 1 104 1 58 3 106 1 198 4 107 2 158 2 292 2 20 3 337 1 114 6 295 1 163 3 206 2 217 1 28 1 221 1 222 1 344 2 74 1 75 3 125 4 126 1 172 7 303 3 35 7 131 1 305 1 174 14 309 1 77 1 79 1 229 1 80 2 355 2 83 2 81 3 357 2 317 4 320 3 360 2 88 1 180 3 44 3 90 1 236 1 
3 1 245 2 54 4 9 1 284 4 12 1 195 7 58 2 60 1 157 1 20 1 113 1 337 2 114 4 115 1 257 1 259 1 217 1 342 1 27 1 344 3 222 7 74 1 75 2 223 1 126 1 172 1 349 1 303 2 35 1 305 1 174 2 310 1 77 6 312 1 177 1 316 1 83 3 137 1 320 2 360 1 180 2 44 1 236 1 
217 1 47 1 245 1 8 1 75 1 125 1 247 1 172 1 34 1 303 1 35 2 305 1 174 3 58 1 198 1 106 1 107 1 20 1 81 1 317 1 114 2 136 1 320 1 295 1 163 1 180 1 44 1 90 1 236 1 
174 2 58 1 310 1 198 1 107 1 317 1 245 1 114 2 148 1 320 1 75 1 125 1 295 1 163 1 180 1 172 2 227 1 303 1 
35 2 174 2 58 1 310 1 47 1 198 1 81 1 317 1 245 1 114 2 320 1 75 1 125 1 163 1 119 1 247 1 180 1 303 1 
47 1 245 1 75 1 125 2 247 1 172 2 303 1 227 1 35 2 174 4 58 1 310 1 107 1 198 2 81 1 317 2 114 2 320 1 295 1 163 2 90 1 180 1 
174 2 58 1 198 1 107 1 27 1 317 1 245 1 114 2 148 1 320 1 75 1 125 1 295 1 163 1 180 1 172 2 227 1 303 1 
35 2 174 2 58 1 47 1 198 1 27 1 317 1 245 1 114 2 320 1 75 1 125 1 119 1 247 1 180 1 303 1 
35 2 174 4 58 1 47 1 198 2 107 1 27 1 317 2 245 1 114 2 320 1 75 1 125 2 295 1 247 1 180 1 90 1 172 2 303 1 
35 2 174 4 58 1 47 1 198 2 107 1 81 1 317 2 245 1 114 2 320 1 75 1 125 2 295 1 163 2 247 1 180 1 90 1 172 2 227 1 303 1 
3 1 95 1 245 1 54 1 344 1 222 1 284 1 75 1 126 1 172 1 195 1 303 1 35 1 174 2 58 1 77 1 158 1 292 1 80 1 20 1 83 1 337 1 114 2 320 1 360 1 206 1 44 1 180 1 
3 1 245 1 54 1 344 1 222 1 284 1 75 1 126 1 172 1 103 1 195 1 303 1 35 1 174 2 58 1 77 1 158 1 292 1 293 1 20 1 314 1 83 1 337 1 114 2 320 1 360 1 44 1 180 1 
47 1 245 1 75 1 125 2 247 1 172 2 303 1 227 1 35 2 174 4 58 1 107 1 106 1 198 2 81 1 317 2 114 2 320 1 295 1 163 2 90 1 180 1 
47 1 95 1 245 1 54 1 222 1 344 1 284 1 75 1 125 2 247 1 172 2 195 1 227 1 303 1 35 2 174 4 58 1 198 2 107 1 77 1 292 1 80 1 20 1 355 1 81 1 83 1 317 2 114 2 320 1 360 1 295 1 163 2 206 1 44 1 180 1 90 1 259 1 
217 1 47 1 245 1 8 1 75 1 125 1 224 1 247 1 172 2 227 1 34 1 303 1 35 1 305 1 174 3 58 1 106 1 107 1 198 1 20 1 317 1 114 2 320 1 295 1 163 1 180 1 44 1 90 1 236 1 
35 2 174 4 351 1 58 1 336 1 288 1 281 1 72 1 245 1 114 2 301 1 320 1 339 1 152 1 172 2 180 1 278 1 
35 2 174 4 351 1 58 1 336 1 288 1 281 1 72 1 245 1 114 2 301 1 320 1 339 1 152 1 172 2 180 1 278 1 
35 2 174 4 351 1 58 1 336 1 288 1 281 1 72 1 245 1 114 2 301 1 320 1 339 1 152 1 172 2 180 1 278 1 
35 2 174 4 351 1 58 1 336 1 288 1 281 1 72 1 245 1 114 2 301 1 320 1 339 1 152 1 172 2 180 1 278 1 
35 4 174 8 351 2 58 1 336 2 50 1 288 1 281 2 72 2 245 1 114 2 301 1 320 1 339 2 152 2 172 4 180 1 278 1 
162 1 118 1 276 1 210 1 297 1 215 1 124 1 365 1 298 1 182 1 
225 1 160 1 
273 1 279 1 205 1 118 1 210 1 124 1 365 1 298 1 182 1 
252 1 48 1 280 1 199 1 124 1 138 1 346 1 162 1 118 1 276 1 210 1 164 2 297 1 365 1 182 1 298 1 66 1 45 1 
252 1 48 1 280 1 199 1 124 1 138 1 346 1 162 1 118 1 276 1 210 1 164 2 297 1 365 1 182 1 298 1 66 1 45 1 
252 1 48 1 280 1 199 1 124 1 138 1 346 1 162 1 118 1 276 1 210 1 164 2 297 1 365 1 182 1 298 1 66 1 45 1 
147 1 260 1 153 1 
147 1 260 1 153 1 
204 1 197 1 
260 1 204 1 197 1 
85 1 335 1 
252 1 138 1 118 1 49 1 268 1 210 1 124 1 365 1 298 1 182 1 
147 1 153 1 
260 1 204 1 197 1 
325 1 3 1 97 1 245 1 54 1 53 1 344 1 222 2 284 1 75 1 223 1 126 1 172 1 195 2 303 1 35 1 130 1 174 2 58 1 106 1 77 2 20 2 83 1 316 2 113 1 114 2 320 1 211 1 44 2 180 1 236 2 
68 1 173 1 92 1 170 2 51 1 77 2 267 1 243 1 83 1 54 1 55 1 137 1 222 2 283 1 116 1 248 1 195 2 214 1 259 1 
55 1 68 1 283 1 222 1 137 1 173 1 92 1 116 1 170 2 51 1 77 1 248 1 195 1 83 1 214 1 54 1 159 1 
77 1 267 1 157 1 177 1 83 1 337 1 54 1 344 1 222 1 284 1 195 1 296 1 214 1 14 1 
55 1 68 1 283 1 222 1 137 1 173 1 92 1 116 1 170 2 51 1 267 1 77 1 248 1 243 1 195 1 83 1 214 1 54 1 
201 1 
324 1 15 1 361 1 48 1 232 1 348 1 181 1 
324 1 216 1 48 1 343 1 96 1 10 1 348 1 150 1 252 1 334 1 108 1 200 1 138 1 361 1 139 1 277 1 323 1 
334 1 77 1 343 1 83 1 337 1 54 2 39 1 344 1 222 1 359 1 284 2 360 1 139 1 348 1 286 1 30 1 193 1 195 1 33 1 323 1 
47 2 50 1 281 1 72 1 343 1 191 2 11 5 247 2 348 6 150 3 302 1 334 1 352 1 107 2 18 1 354 1 203 5 361 4 295 2 339 1 139 1 90 2 323 1 
25 1 239 1 217 1 343 1 28 1 191 1 263 1 247 1 348 2 57 1 34 1 252 1 131 1 305 1 334 1 309 1 107 2 133 1 255 1 20 1 202 1 272 1 138 1 361 2 139 1 44 1 323 1 236 1 
15 1 324 1 334 1 48 1 343 1 361 1 139 1 348 1 181 1 323 1 
47 1 107 1 48 2 200 2 203 2 11 2 295 1 361 2 247 1 348 2 150 4 90 1 
324 1 10 1 252 1 138 1 48 1 96 1 
326 1 189 1 343 2 96 2 54 1 10 4 344 1 222 3 284 1 192 1 348 1 195 3 252 3 334 2 16 1 311 1 77 3 157 1 177 1 83 1 356 1 337 2 138 3 274 2 361 2 230 1 139 1 323 2 121 1 
217 2 3 1 95 1 245 1 54 1 222 1 344 1 284 1 75 1 264 1 195 1 34 2 303 1 35 1 305 2 174 1 58 1 77 1 158 1 255 1 292 1 20 3 80 1 83 1 337 1 114 2 320 1 360 1 206 1 180 1 44 3 236 2 
324 1 334 1 48 1 343 1 203 1 274 1 361 1 139 1 348 1 150 1 323 1 121 1 
118 1 249 1 124 1 
162 1 335 1 118 1 91 1 124 1 
118 1 249 1 124 1 
118 1 249 1 124 1 
167 1 118 1 124 1 
167 1 118 1 124 1 
167 1 118 1 124 1 
118 1 124 1 
210 1 298 1 
35 1 174 2 58 1 50 1 281 1 72 1 245 1 114 2 320 1 339 1 172 1 180 1 278 1 
35 1 187 1 174 2 58 2 50 1 281 1 72 1 245 2 114 4 320 2 339 1 172 1 180 2 278 1 
187 1 47 2 50 1 281 1 72 1 28 1 245 3 221 1 247 3 302 1 332 1 172 9 227 1 35 10 131 1 174 19 58 3 309 1 352 1 107 3 18 1 79 1 354 1 81 4 114 6 320 3 295 2 339 1 163 5 209 1 180 3 90 2 278 1 
35 1 174 2 58 1 50 1 281 1 72 1 245 1 114 2 320 1 339 1 172 1 180 1 278 1 
35 1 174 2 58 1 50 1 281 1 72 1 245 1 114 2 320 1 339 1 172 1 180 1 278 1 
47 2 50 1 281 1 72 1 245 1 247 2 302 1 172 6 227 1 35 6 174 12 58 1 352 1 107 2 18 1 354 1 81 1 114 2 320 1 295 2 339 1 163 2 180 1 90 2 278 1 
35 1 187 1 174 2 58 2 50 1 281 1 72 1 245 2 114 4 320 2 339 1 172 1 180 2 278 1 
35 1 174 2 58 2 50 1 281 1 72 1 245 2 134 1 114 4 320 2 339 1 172 1 180 2 278 1 
35 4 131 3 174 7 309 3 107 1 79 2 81 3 28 1 163 6 247 1 332 1 172 3 227 3 
35 1 174 2 58 2 50 1 281 1 72 1 245 2 134 1 114 4 320 2 339 1 172 1 180 2 278 1 
35 4 131 1 174 8 58 2 309 1 107 1 79 1 28 1 81 2 245 2 221 1 114 4 320 2 163 3 247 1 209 1 172 4 180 2 332 1 227 1 
35 3 131 1 174 6 163 2 309 1 247 1 107 1 232 1 79 1 172 3 332 1 28 1 81 2 221 1 
35 2 187 1 174 4 58 1 47 1 107 1 81 1 245 1 114 2 320 1 295 1 163 1 247 1 180 1 90 1 172 2 
35 1 174 2 339 1 281 1 72 1 172 1 
35 1 69 1 174 2 339 1 281 1 172 1 
35 1 174 1 281 1 
174 1 339 1 172 1 
35 3 187 1 174 6 58 1 47 1 107 1 81 1 245 1 114 2 320 1 295 1 163 3 247 1 286 1 180 1 90 1 172 3 227 2 
35 1 174 2 58 1 50 1 281 1 72 1 245 1 114 2 320 1 339 1 172 1 180 1 278 1 
35 3 131 1 174 6 309 1 107 1 28 1 81 1 163 2 247 1 172 3 227 1 
35 2 131 1 174 3 58 1 309 1 79 1 81 1 245 1 114 2 320 1 163 2 209 1 172 1 180 1 332 1 227 1 166 1 
35 4 131 1 174 8 309 1 107 2 81 1 28 1 263 1 163 2 247 2 172 4 227 1 
174 2 58 1 107 1 245 1 114 2 320 1 295 1 163 1 180 1 172 2 227 1 278 1 
35 2 174 4 58 1 47 1 107 1 81 1 245 1 114 2 320 1 295 1 163 2 247 1 180 1 90 1 172 2 227 1 278 1 
35 2 131 1 174 3 58 3 309 1 81 1 245 3 134 1 114 6 320 3 163 2 209 1 180 3 172 1 227 1 166 1 278 1 
35 1 187 1 174 2 58 3 52 1 281 1 72 1 245 3 134 1 114 6 320 3 339 1 172 1 180 3 278 1 
176 1 158 1 20 1 44 1 327 1 236 1 146 1 
186 1 26 1 176 1 158 1 291 1 219 1 327 1 20 1 146 1 285 1 44 1 236 1 
344 1 222 1 284 1 232 1 77 1 177 1 157 1 195 1 83 1 337 1 54 1 
305 1 217 1 77 1 158 1 292 1 20 2 80 1 83 1 337 1 54 1 344 1 222 1 74 1 284 1 360 1 44 2 195 1 236 1 
241 1 217 2 188 1 189 1 54 1 222 1 344 2 74 1 284 3 331 1 195 1 305 1 77 1 133 1 19 1 158 1 292 1 80 1 20 2 83 1 360 2 44 2 236 2 
241 1 217 2 188 1 189 1 54 1 222 2 344 2 74 1 284 3 102 1 331 1 195 2 305 1 77 2 133 1 19 1 158 1 292 1 20 2 314 1 83 1 360 2 44 2 236 2 
324 1 242 1 46 1 48 1 189 1 54 1 10 1 222 3 344 1 284 4 102 1 331 1 195 3 252 2 17 1 77 3 19 1 83 1 337 1 39 1 138 2 360 1 362 1 
324 1 252 2 242 1 48 1 77 3 19 1 189 1 83 1 337 1 54 1 84 1 10 1 344 1 222 3 39 1 138 2 360 1 284 4 102 1 331 1 362 1 195 3 
222 1 77 1 342 1 195 1 83 1 54 1 
0 1 77 5 60 1 342 1 83 2 337 2 54 3 137 1 222 6 344 2 360 1 284 3 115 1 223 1 257 1 193 1 12 1 349 1 195 6 259 1 
95 1 245 2 54 1 284 1 247 1 332 1 195 1 58 2 106 1 107 1 198 1 292 1 158 2 20 2 114 4 163 2 206 1 211 1 259 1 217 1 28 1 221 1 222 1 344 1 74 1 75 2 125 1 172 3 303 2 35 3 305 1 131 1 174 6 309 1 77 1 79 1 80 1 355 1 83 1 81 2 317 1 357 1 320 2 360 1 180 2 44 2 236 1 
324 1 242 1 169 1 48 1 49 1 343 2 96 1 10 2 222 1 284 2 192 1 348 1 195 1 15 1 252 3 334 2 77 1 269 1 337 1 84 1 39 1 138 3 361 1 139 2 362 1 213 1 181 1 323 2 
77 2 342 1 83 1 54 2 222 2 344 1 360 1 284 2 362 1 30 1 193 1 195 2 259 1 
155 1 77 4 157 1 177 1 83 1 337 1 54 1 222 4 344 1 284 1 102 1 195 4 259 1 
307 1 77 2 312 1 60 1 189 1 83 1 54 2 9 1 222 2 344 1 360 1 284 1 257 1 195 2 
68 1 222 1 173 1 92 1 170 1 77 1 195 1 83 1 337 1 54 1 
77 2 97 1 83 1 54 1 222 2 137 1 344 1 284 1 223 1 195 2 259 1 
155 1 77 4 177 1 157 1 189 1 83 2 337 1 54 2 222 5 344 2 284 3 223 1 115 1 12 1 195 5 259 1 
155 1 77 4 177 1 157 1 189 1 83 2 337 1 54 2 222 5 344 2 284 3 223 1 115 1 64 1 195 5 259 1 
305 1 217 1 77 1 158 1 292 1 20 2 314 1 83 1 337 1 54 1 344 1 222 1 74 1 284 1 360 1 44 2 195 1 236 1 
0 1 77 1 60 1 189 1 83 1 54 2 222 1 344 1 360 1 284 1 257 1 193 1 195 1 
325 1 93 2 289 1 23 1 
252 1 138 1 325 1 49 1 93 2 289 1 261 1 287 1 112 1 23 1 
325 1 93 1 289 1 23 1 
93 1 261 1 112 1 
304 1 266 1 232 1 313 1 
304 1 99 1 294 1 330 1 266 1 233 1 313 1 
341 1 31 1 233 1 
251 1 304 1 70 1 266 1 313 1 99 3 330 1 294 1 233 3 128 1 183 1 76 2 
304 1 345 1 99 2 294 1 330 1 266 1 233 2 313 1 7 1 
99 1 294 1 330 1 92 1 170 1 51 1 266 1 179 1 233 1 128 1 329 1 
304 1 99 1 294 1 330 1 266 1 233 1 128 1 
304 2 99 1 294 1 330 1 233 1 313 1 128 1 
304 1 99 2 294 2 330 2 253 1 132 1 266 1 233 2 128 1 82 1 
304 1 240 1 105 1 266 2 313 1 99 3 345 2 330 1 294 1 86 1 179 1 233 3 128 1 
304 1 173 1 92 1 170 2 266 1 51 1 313 1 55 1 99 2 262 1 345 1 330 1 294 1 233 2 128 1 
304 1 105 1 145 1 266 2 313 1 7 1 99 4 345 2 330 2 294 2 179 1 233 4 128 1 
304 1 99 1 294 1 330 1 266 1 233 1 313 1 128 1 
251 1 304 2 105 1 266 3 313 2 38 1 345 2 99 4 330 1 294 1 179 1 233 4 76 1 183 1 
304 1 345 1 99 2 294 1 330 1 40 1 266 1 109 1 233 2 313 1 128 1 98 1 
251 1 304 1 266 1 313 1 99 3 330 1 294 1 141 1 233 3 128 1 183 2 76 2 
67 1 196 1 36 2 266 2 
99 1 294 1 330 1 233 1 128 1 364 1 
304 1 345 1 240 1 99 2 294 1 330 1 266 1 233 2 313 1 128 1 
178 1 
304 1 99 1 294 1 330 1 266 1 233 1 313 1 128 1 
304 1 240 1 266 1 313 1 345 1 99 3 330 1 294 1 233 3 128 1 76 1 
38 1 105 1 266 1 179 1 
304 1 266 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (175,221) (175,221) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (175,221) (175,221) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (175,221) (175,221) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (175,221) (175,221) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 106 360 329 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 106 360 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 106 360 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 106 360 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 106 360 329 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 141 327 249 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 141 327 249 214 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 11 1 175 1 113 1 221 1 346 1 109 1 337 1 117 1 36 1 174 1 
190 1 11 1 175 1 113 1 221 1 346 1 109 1 337 1 117 1 36 1 174 1 
190 1 11 1 175 1 113 1 221 1 346 1 109 1 337 1 117 1 36 1 174 1 
190 1 11 1 175 1 113 1 221 1 346 1 109 1 337 1 117 1 36 1 174 1 
190 4 66 1 136 1 46 1 257 3 284 3 109 1 346 4 337 1 4 2 36 1 195 1 143 1 301 2 25 1 277 1 105 1 147 1 
190 2 66 1 11 1 308 1 284 1 109 1 346 2 13 1 337 1 36 1 195 1 277 1 105 1 279 1 94 1 174 1 
121 1 190 3 66 1 11 1 46 1 284 2 257 1 109 2 346 3 337 2 36 1 301 1 105 1 
121 1 199 1 190 9 66 1 11 1 136 1 46 3 284 5 257 7 109 2 346 9 87 1 337 2 4 2 36 1 326 1 195 1 143 1 301 4 25 1 352 1 277 1 105 1 147 1 
121 1 199 1 190 9 66 1 11 1 136 1 46 3 284 5 257 7 109 2 346 9 87 1 337 2 4 2 36 1 326 1 195 1 143 1 301 4 25 1 352 1 277 1 105 1 147 1 
328 1 259 1 285 1 
332 1 285 1 188 2 
55 1 159 2 112 1 358 2 76 2 58 2 333 2 169 2 
96 1 68 1 347 1 71 1 324 1 73 2 275 1 75 1 76 2 27 1 280 1 28 2 333 2 55 1 159 2 262 1 56 1 226 1 356 1 309 1 110 2 57 1 58 3 205 1 139 1 37 1 179 2 251 1 112 1 358 3 210 1 293 1 115 1 187 1 149 2 231 1 169 2 
159 1 112 1 103 1 358 1 76 1 58 1 286 1 333 1 348 1 169 1 
170 1 159 1 254 1 259 1 58 1 285 1 141 1 103 1 311 1 358 1 53 1 182 1 313 1 240 1 
170 1 159 1 259 1 58 1 285 1 103 1 311 2 358 1 53 1 313 2 182 1 76 1 240 1 333 1 169 1 
311 1 313 1 281 1 148 1 41 1 
24 1 17 1 311 2 313 2 259 1 285 1 148 1 41 1 
311 1 313 1 41 1 
159 1 58 1 286 1 348 1 112 1 103 1 311 1 358 1 313 1 76 1 78 1 148 1 333 1 169 1 
285 1 
24 1 311 2 313 2 259 1 285 1 248 1 148 1 41 1 
134 1 225 1 193 1 45 1 201 2 152 2 259 1 345 1 272 1 285 1 218 2 24 1 196 1 311 5 92 1 313 5 30 1 148 2 41 2 
328 1 55 1 
232 1 55 2 159 2 58 2 140 1 358 2 76 1 333 1 169 1 
184 1 153 1 89 1 
55 1 226 1 110 1 57 1 58 1 205 1 324 1 90 1 73 1 179 1 251 1 358 1 293 1 210 1 280 1 231 1 
243 1 159 1 226 1 57 1 110 1 324 1 205 1 58 2 88 1 73 1 179 1 251 1 358 2 210 1 293 1 184 1 280 1 333 1 231 1 169 1 
55 1 159 5 243 1 246 1 58 5 88 2 140 1 141 1 327 1 59 1 358 5 76 1 333 4 169 4 
159 2 103 1 358 2 58 2 31 1 286 1 333 2 169 2 
55 1 159 3 358 3 76 1 58 3 88 1 333 3 169 3 
159 1 103 1 358 1 58 1 286 1 333 1 169 1 
232 1 159 1 103 1 358 1 76 1 58 1 333 1 140 1 169 1 
170 1 96 1 68 1 347 1 71 1 324 1 73 1 100 1 103 1 53 1 76 2 223 1 280 1 240 1 28 1 333 3 55 1 159 3 243 1 56 1 226 1 356 1 309 1 57 1 110 1 205 1 58 4 139 1 37 1 140 1 88 1 179 1 251 1 112 1 311 1 358 4 210 1 293 1 182 1 313 1 187 1 149 2 231 1 169 3 
141 1 327 1 55 1 159 2 358 2 58 2 333 1 88 1 169 1 
170 1 243 1 159 3 58 3 285 1 140 1 88 2 100 1 311 1 103 1 358 3 53 1 313 1 62 1 182 1 76 1 240 1 333 3 169 3 
159 1 358 1 184 1 76 1 58 1 333 1 140 1 169 1 
55 1 226 1 110 1 57 1 58 1 205 1 324 1 73 1 179 1 251 1 358 1 293 1 210 1 280 1 231 1 
55 1 110 1 57 1 58 1 338 1 205 1 324 1 73 1 179 1 358 1 293 1 210 1 280 1 107 1 231 1 
56 1 356 1 320 1 309 1 347 1 71 1 139 2 89 1 184 1 183 1 267 1 304 1 28 2 187 1 29 1 149 2 
159 1 103 1 358 1 182 1 58 1 333 1 31 1 169 1 
194 1 322 1 
194 1 322 1 
22 1 
22 1 
22 1 
99 1 194 1 322 1 22 1 128 1 
194 1 322 1 35 1 
303 1 194 1 322 1 
303 1 194 1 322 1 
303 1 194 1 322 1 
194 1 322 1 72 1 
194 1 322 1 72 1 
194 1 322 1 72 1 
55 1 283 1 159 2 202 1 343 1 2 1 194 1 322 1 264 1 69 1 204 1 35 1 58 2 260 1 250 1 238 1 288 1 311 1 358 2 294 1 313 1 168 1 333 2 169 2 
343 2 270 1 194 2 2 1 203 1 322 2 70 1 264 2 69 2 204 3 285 1 266 1 131 1 101 1 311 2 313 2 239 2 93 1 168 2 
25 1 277 1 195 1 
277 1 279 1 195 1 
25 2 256 1 279 1 219 1 38 1 195 3 
25 1 256 1 127 1 279 1 38 1 195 2 
25 1 256 2 279 1 38 1 195 2 
120 1 0 1 212 2 171 1 152 1 345 1 259 1 216 1 218 1 260 1 238 1 24 1 196 2 8 2 157 1 332 1 29 1 225 3 201 1 336 2 15 1 285 2 250 1 60 1 311 5 313 5 185 1 267 1 148 4 188 3 41 1 119 1 
120 3 0 2 192 5 193 1 171 3 234 1 152 2 259 1 345 1 260 4 218 2 51 1 24 1 196 6 8 6 197 1 330 1 157 2 332 3 29 3 281 5 225 8 201 2 336 6 14 1 15 1 285 5 60 3 311 9 63 1 313 9 267 3 148 7 188 9 41 6 
0 1 120 1 212 1 193 1 171 1 152 1 259 1 216 1 218 1 260 1 196 2 8 2 157 1 332 2 29 1 225 3 201 1 336 2 285 3 60 1 311 3 313 3 267 1 148 2 119 1 188 4 
0 1 120 2 212 2 193 1 171 2 152 1 259 1 216 1 218 1 260 2 51 1 196 4 8 4 197 1 157 1 332 3 29 2 225 5 201 1 336 4 285 4 60 2 311 4 63 1 313 4 267 2 148 3 188 7 119 1 
328 1 280 1 95 1 
350 1 280 1 
151 1 
210 1 280 1 231 1 
61 1 280 1 
280 1 231 1 
210 1 21 1 95 2 280 3 163 1 231 1 
44 1 171 1 247 3 97 1 161 1 139 3 16 1 349 1 276 1 114 2 302 1 115 4 267 1 146 1 116 1 28 7 252 2 
44 1 171 1 247 3 97 1 161 1 139 3 16 1 349 1 276 1 114 2 302 1 115 4 267 1 146 1 116 1 28 7 252 2 
44 1 171 1 247 3 97 1 161 1 139 3 16 1 349 1 276 1 114 2 302 1 115 4 267 1 146 1 116 1 28 7 118 1 252 2 
42 1 65 1 44 1 347 1 71 1 349 2 155 1 102 1 302 1 28 6 54 1 247 2 309 1 161 1 139 3 16 1 164 1 114 1 115 3 146 1 39 1 187 1 252 1 149 2 
44 1 244 1 171 1 247 4 85 1 97 1 161 1 309 2 347 2 71 2 139 4 16 1 349 1 164 1 276 1 114 3 302 1 115 5 267 1 116 1 28 9 187 2 252 2 149 4 
190 2 20 1 66 1 257 1 346 2 323 1 3 1 50 1 219 1 73 1 195 2 25 1 277 1 105 1 278 1 279 1 307 1 11 1 284 1 138 1 109 1 110 1 337 1 57 1 162 1 205 1 36 1 179 1 180 1 144 1 
190 3 20 1 66 1 300 1 48 1 257 2 346 3 323 1 3 1 50 1 219 1 73 1 195 2 25 1 277 1 105 1 278 1 279 1 11 1 177 1 284 1 138 1 109 1 110 1 337 1 57 1 162 1 205 1 179 1 180 1 
190 2 66 1 300 1 48 1 257 2 346 2 323 1 3 1 219 1 73 1 195 2 25 1 277 1 105 1 278 1 279 1 11 1 284 1 138 1 110 1 57 1 162 1 205 1 179 1 180 1 
190 1 67 1 346 1 323 2 73 1 156 1 278 2 280 1 282 1 241 1 335 1 11 2 160 1 177 1 138 2 109 1 57 1 110 1 337 1 205 1 179 1 293 1 231 1 
307 1 20 1 190 1 11 1 300 1 138 1 109 1 346 1 57 1 3 1 337 1 110 1 323 1 205 1 162 1 50 1 36 1 219 1 195 2 73 1 179 1 180 1 25 1 277 1 279 1 278 1 
9 1 
122 1 67 1 152 1 345 1 218 1 129 1 73 2 24 1 196 1 157 1 280 2 335 1 225 1 201 1 83 1 57 3 110 2 205 2 179 2 311 2 210 1 293 2 313 2 315 1 296 1 167 1 298 1 41 2 231 2 
24 1 198 1 224 1 104 1 311 2 313 2 248 1 41 2 299 1 
198 1 318 1 104 1 311 1 313 1 325 1 299 1 
198 1 224 1 318 1 325 1 248 1 24 1 311 2 104 1 292 1 313 2 299 1 41 2 
318 3 152 1 236 1 49 2 325 3 196 1 103 1 104 1 332 2 333 1 198 1 159 1 201 1 58 1 248 1 285 2 286 1 208 1 112 1 292 4 166 1 299 1 169 1 344 2 345 1 259 2 218 1 348 1 24 3 26 2 76 1 78 1 354 1 80 2 224 4 225 1 135 1 227 1 357 1 311 4 358 1 313 4 41 7 
318 2 152 1 344 2 49 2 259 1 345 1 325 2 218 1 24 2 196 1 104 1 26 2 332 2 354 1 80 2 198 1 224 2 225 1 355 1 201 1 285 2 208 1 311 3 292 2 313 3 41 4 299 1 188 2 
318 2 152 1 344 2 49 2 259 1 345 1 325 2 218 1 24 2 196 1 104 1 26 2 332 2 354 1 80 2 198 1 224 2 225 1 201 1 285 1 227 1 357 1 208 1 311 3 292 2 166 1 313 3 41 4 299 1 
318 2 152 1 344 2 49 2 259 1 345 1 325 2 218 1 24 2 196 1 104 1 26 2 332 2 354 1 80 2 198 1 224 2 225 1 201 1 285 1 227 1 357 1 208 1 311 3 292 2 166 1 313 3 41 4 299 1 
253 2 318 2 1 1 124 2 152 1 344 2 49 2 259 1 345 1 325 2 218 1 6 1 273 1 24 2 196 1 104 1 354 1 198 1 224 2 225 1 201 1 285 1 357 1 311 3 292 2 313 3 41 4 299 1 188 2 
318 3 344 2 152 1 49 2 236 1 259 1 345 1 325 3 218 1 24 2 196 1 104 1 26 2 332 2 354 1 80 2 198 1 224 3 225 1 201 1 285 1 227 1 357 1 208 1 311 3 292 3 313 3 166 1 41 5 299 1 
318 3 344 2 152 1 49 2 236 1 259 1 345 1 325 3 218 1 24 2 196 1 104 1 26 2 332 2 354 1 80 2 198 1 224 3 225 1 201 1 285 1 227 1 357 1 208 1 311 3 292 3 313 3 166 1 41 5 299 1 
253 2 318 2 124 2 152 1 344 2 49 2 259 1 345 1 325 2 273 1 218 1 24 2 196 1 104 1 354 1 198 1 224 2 225 1 355 1 201 1 285 1 311 3 292 2 313 3 299 1 188 2 41 4 
44 1 171 1 97 1 347 1 153 1 71 1 328 1 276 1 28 6 55 2 56 1 356 1 247 2 161 1 309 1 139 3 89 1 114 2 184 1 183 1 115 3 267 1 116 1 187 1 149 2 252 1 
120 2 342 1 233 1 171 2 68 1 347 2 71 2 153 6 5 1 172 1 103 1 155 2 28 9 54 2 55 1 56 1 247 1 356 2 33 1 309 2 34 1 139 3 16 1 89 7 111 1 60 2 184 7 115 6 187 2 149 4 
215 1 68 1 347 1 153 1 71 1 5 1 275 1 103 1 28 2 333 1 55 1 159 1 243 1 56 1 356 1 309 1 58 1 139 1 88 1 111 1 358 1 115 1 187 1 269 1 230 1 169 1 149 2 
120 1 171 1 68 1 258 1 347 2 153 1 324 1 71 2 5 1 73 1 74 1 77 1 280 1 28 5 333 1 159 1 243 1 226 1 56 2 247 1 356 2 57 1 309 2 110 1 205 1 58 2 37 1 139 2 88 1 89 2 179 1 60 1 251 1 290 1 358 2 114 1 210 1 293 1 115 3 184 2 145 1 187 2 231 1 169 1 149 4 
235 1 275 1 280 4 333 1 335 1 159 1 56 2 110 7 57 4 205 3 58 1 289 1 293 2 210 1 115 1 211 1 167 1 169 1 122 1 213 1 67 1 68 1 347 2 71 2 73 6 129 1 75 2 133 1 28 2 81 1 356 2 309 2 139 1 88 1 179 7 144 1 358 1 183 1 315 1 268 1 187 2 231 3 149 4 
120 1 171 1 347 1 153 1 71 1 5 1 76 1 28 3 29 1 333 1 159 1 56 1 247 1 356 1 309 1 58 1 139 2 140 1 89 1 60 1 228 1 358 1 114 1 184 1 115 1 267 1 187 1 169 1 149 2 
56 1 245 1 171 1 356 1 309 1 347 1 71 1 89 1 60 1 184 1 183 1 115 2 28 2 187 1 149 2 
56 1 356 1 320 1 309 1 347 1 71 1 139 2 89 1 184 1 183 1 267 1 28 2 187 1 29 1 149 2 
120 1 56 1 171 1 356 1 309 1 347 1 71 1 89 1 60 1 184 1 183 1 115 2 28 2 187 1 149 2 
56 1 245 1 171 1 356 1 309 1 347 1 71 1 89 1 60 1 184 1 211 1 115 2 28 2 187 1 149 2 
56 1 356 1 320 1 309 1 347 1 71 1 139 2 89 1 184 1 211 1 267 1 28 2 187 1 29 1 149 2 
120 1 56 1 171 1 356 1 309 1 347 1 71 1 89 1 60 1 184 1 211 1 115 2 28 2 187 1 149 2 
120 1 56 1 171 1 356 1 309 1 347 1 71 1 89 1 60 1 184 1 115 2 187 1 28 2 149 2 
68 1 347 1 324 1 71 1 73 1 275 1 280 1 28 2 55 1 226 1 56 1 356 1 57 1 110 1 309 1 205 1 58 1 37 1 139 1 179 1 251 1 358 1 210 1 293 1 115 1 187 1 231 1 149 2 
68 1 347 1 324 1 71 1 73 1 275 1 280 1 28 2 107 1 55 1 158 1 56 1 356 1 57 1 110 1 309 1 205 1 338 1 58 1 139 1 179 1 358 1 210 1 293 1 115 1 187 1 231 1 149 2 
120 1 56 1 171 1 356 1 309 1 347 1 71 1 5 1 89 1 60 1 184 1 115 2 28 2 187 1 149 2 
120 1 171 1 347 1 324 1 71 1 73 1 280 1 28 2 226 1 56 1 356 1 57 1 110 1 309 1 205 1 58 1 37 1 89 1 179 1 60 1 251 1 144 1 290 1 358 1 210 1 184 1 115 2 187 1 231 1 149 2 
120 1 171 1 347 1 71 1 153 1 5 1 76 1 28 2 333 1 159 1 56 1 247 1 356 1 309 1 58 1 16 1 140 1 89 1 60 1 358 1 115 2 184 1 187 1 40 1 169 1 149 2 
244 1 329 1 137 1 347 1 309 1 71 1 106 1 187 1 360 1 149 2 
244 1 329 1 137 1 347 1 309 1 71 1 106 1 187 1 360 1 149 2 
244 1 329 1 137 1 347 1 309 1 71 1 106 1 187 1 360 1 149 2 
244 1 329 1 137 1 347 1 309 1 71 1 106 1 187 1 360 1 149 2 
244 1 329 1 137 1 347 1 309 1 71 1 106 1 187 1 360 1 149 2 
319 1 213 1 235 1 68 1 347 1 71 1 5 1 73 2 275 1 75 2 280 1 28 2 159 2 56 1 356 1 57 1 110 2 309 1 205 1 58 2 139 1 179 2 18 1 181 1 358 2 341 1 115 1 186 1 187 1 231 1 149 2 
20 1 82 1 200 1 300 1 47 1 138 1 57 1 110 2 205 1 162 1 219 1 195 2 73 2 179 2 180 1 144 1 25 1 277 1 279 1 
20 1 300 1 47 1 138 1 110 1 57 1 162 1 205 1 219 1 195 2 73 1 179 1 287 1 180 1 25 1 277 1 279 1 
241 1 335 1 200 1 67 1 138 1 57 1 110 1 205 1 73 1 179 1 293 1 280 1 79 1 231 1 
20 1 82 1 200 1 300 1 47 1 138 1 57 1 110 1 162 1 205 1 219 1 195 2 73 1 179 1 180 1 25 1 277 1 279 1 
359 1 
196 1 328 1 225 1 259 1 272 1 285 1 30 1 
225 1 201 1 152 1 259 1 345 1 285 2 218 1 208 1 24 1 196 1 311 1 26 1 313 1 332 1 41 1 80 1 188 1 
152 3 237 2 196 7 52 2 8 6 157 1 331 2 280 6 240 2 332 6 10 1 201 3 336 6 57 2 110 1 205 1 163 1 285 6 207 1 60 2 210 1 293 1 120 2 171 2 345 3 218 3 73 1 24 3 130 2 350 3 29 2 176 1 225 7 83 1 179 1 311 5 312 2 313 5 145 2 267 2 95 2 316 2 231 1 41 5 188 12 
123 1 317 1 120 2 255 1 171 2 152 2 126 1 345 2 259 2 218 2 24 1 196 5 52 2 154 1 8 5 7 1 155 1 102 1 157 1 261 1 332 3 29 2 54 1 32 1 225 8 83 1 201 2 336 5 285 5 60 2 311 1 313 1 267 2 41 1 188 6 
123 1 44 1 171 2 152 1 345 1 218 1 348 1 196 2 52 2 103 1 76 1 78 1 333 1 225 2 159 1 201 1 161 1 58 1 286 1 112 1 311 1 358 1 166 1 313 1 267 1 295 1 116 1 169 1 
225 1 201 1 152 1 345 1 259 1 272 1 218 1 285 1 196 1 30 1 
123 1 120 2 225 5 171 2 336 5 285 5 60 2 196 5 52 2 8 5 145 1 267 2 332 5 29 2 188 10 
24 1 311 1 313 1 259 1 285 1 41 1 
122 1 67 1 152 1 345 1 218 1 129 1 73 2 24 1 196 1 157 1 280 2 335 1 225 1 201 1 83 1 57 3 110 2 205 2 179 2 165 1 311 1 210 1 293 2 313 1 315 1 296 1 167 1 231 2 298 1 41 2 
96 1 68 1 347 1 71 1 324 1 73 1 76 2 280 1 28 1 333 2 55 1 159 2 226 1 56 1 356 1 110 1 57 1 309 1 58 3 205 1 139 1 37 1 179 1 251 1 112 1 358 3 293 1 210 1 187 1 149 2 169 2 231 1 
225 1 201 1 83 1 152 1 336 2 345 1 259 2 218 1 285 4 196 2 8 2 157 1 332 2 252 1 188 4 
266 1 291 1 294 1 343 1 168 1 
339 1 343 1 168 1 
339 1 343 1 168 1 
339 1 343 1 168 1 
12 1 343 1 168 1 
12 1 343 1 168 1 
12 1 343 1 168 1 
343 1 168 1 
194 1 322 1 
44 1 171 1 247 3 97 1 309 2 347 2 161 1 71 2 139 4 16 1 164 1 276 1 114 2 115 4 267 1 116 1 28 8 187 2 252 1 149 4 
44 1 171 1 247 2 97 1 161 1 139 3 328 1 276 1 114 2 115 3 267 1 116 1 28 6 252 1 
120 1 171 1 247 2 309 1 347 1 71 1 139 2 16 1 60 1 91 1 114 1 115 2 267 1 29 1 187 1 28 4 149 2 
155 1 102 1 115 1 28 2 139 1 54 1 
120 2 342 1 44 2 171 5 97 1 347 1 71 1 172 1 276 1 155 2 29 2 28 26 54 2 247 7 161 2 34 1 309 1 139 13 16 2 60 2 164 1 114 5 115 13 267 5 295 1 116 2 187 1 252 1 149 2 
155 1 28 1 139 1 
115 1 28 1 54 1 
120 1 171 1 247 3 347 1 309 1 71 1 139 3 16 1 60 1 91 1 114 2 115 3 145 1 267 1 187 1 28 6 29 1 149 2 
120 2 317 1 255 1 171 2 126 1 347 1 71 1 7 1 155 1 102 1 261 1 28 12 29 2 54 1 244 1 247 2 309 1 139 6 16 1 60 2 114 1 115 6 267 2 187 1 149 2 
44 1 171 1 247 2 161 1 139 3 16 1 114 1 115 3 267 1 116 1 28 6 
44 1 247 2 97 1 161 1 309 1 347 1 71 1 139 2 16 1 164 1 276 1 114 1 115 1 39 1 28 3 187 1 149 2 
244 1 44 2 171 2 247 5 347 1 309 1 161 2 71 1 139 5 16 2 114 3 115 5 267 2 295 1 116 1 187 1 28 10 149 2 
244 1 171 1 247 1 309 1 347 1 71 1 16 1 60 1 115 2 187 1 28 2 149 2 
120 1 244 1 171 1 247 2 309 1 347 1 71 1 139 2 16 1 60 1 114 1 115 2 267 1 29 1 187 1 28 4 149 2 
244 1 44 1 125 1 247 2 309 3 347 3 161 1 71 3 139 2 16 1 164 1 114 1 115 1 39 1 28 3 187 3 149 6 
42 1 44 2 125 1 171 2 97 1 347 4 71 4 155 1 102 1 276 1 28 15 54 1 244 1 247 6 309 4 161 2 139 8 16 3 91 1 164 1 114 3 115 7 267 2 295 1 39 1 116 1 187 4 149 8 
120 2 317 1 44 2 255 1 171 5 126 1 97 1 347 2 71 2 7 1 276 1 155 1 102 1 261 1 28 24 29 1 54 1 244 1 247 9 161 2 309 2 139 10 16 4 60 2 164 1 114 5 115 14 267 4 295 1 116 2 187 2 252 1 149 4 
120 2 317 1 44 1 255 1 171 3 126 1 97 1 347 3 71 3 7 1 276 1 155 1 102 1 261 1 28 17 29 1 54 1 244 1 247 4 161 1 309 3 139 7 16 1 60 2 91 1 164 1 114 3 115 10 267 2 116 1 187 3 252 1 149 6 
120 2 317 1 44 1 255 1 171 3 126 1 97 1 347 3 71 3 7 1 276 1 155 1 102 1 261 1 28 19 29 2 54 1 244 1 247 4 161 1 309 3 139 10 16 1 60 2 91 1 164 1 114 3 115 9 267 3 116 1 187 3 252 1 149 6 
120 2 317 1 44 1 255 1 171 3 126 1 97 1 347 3 71 3 7 1 276 1 155 1 102 1 261 1 28 17 29 1 54 1 244 1 247 5 161 1 309 3 139 7 16 2 60 2 91 1 164 1 114 3 115 10 267 2 116 1 187 3 252 1 149 6 
120 2 317 1 44 2 255 1 171 5 126 1 97 1 347 2 71 2 7 1 276 1 155 1 102 1 261 1 28 24 29 1 54 1 244 1 247 9 161 2 309 2 139 10 16 4 60 2 164 1 114 5 115 14 267 4 295 1 116 2 187 2 252 1 149 4 
120 2 317 1 255 1 171 2 126 1 347 1 71 1 7 1 155 1 102 1 261 1 28 12 29 2 54 1 244 1 247 2 309 1 139 6 16 1 60 2 114 1 115 6 267 2 187 1 149 2 
317 1 120 2 44 1 255 1 171 3 126 1 97 1 347 4 71 4 7 1 276 1 155 1 102 1 261 1 28 18 29 1 54 1 244 1 247 5 161 1 309 4 139 8 16 2 60 2 91 1 164 2 114 3 115 10 267 2 116 1 187 4 252 1 149 8 
317 1 120 3 125 1 255 1 171 3 126 1 347 4 71 4 7 1 155 1 102 1 261 1 28 16 29 2 54 1 244 1 247 6 309 4 139 7 16 3 60 3 164 2 114 3 115 9 267 2 187 4 149 8 
44 3 171 1 247 6 97 2 161 3 139 4 16 3 276 1 114 3 115 3 267 1 116 1 28 7 
317 1 120 2 44 1 125 1 255 1 171 3 126 1 97 1 347 4 71 4 7 1 276 1 155 1 102 1 261 1 28 18 29 1 54 1 244 1 247 4 161 1 309 4 139 8 16 1 60 2 164 2 114 3 115 10 267 2 116 1 187 4 252 1 149 8 
141 1 327 1 249 1 
141 1 327 1 132 1 229 1 214 1 314 1 249 1 306 1 
179 1 335 1 328 1 67 1 293 1 57 1 280 1 110 1 205 1 231 1 73 1 
55 1 159 1 226 1 57 1 110 1 324 1 58 2 205 1 88 1 73 1 179 1 358 2 210 1 293 1 280 1 333 1 231 1 169 1 
321 1 324 1 73 1 103 2 53 1 280 3 333 2 55 1 159 2 226 1 110 1 57 1 205 1 58 2 88 1 179 1 111 1 61 1 358 2 19 1 210 2 182 1 169 1 231 2 
321 1 324 1 73 1 103 2 53 1 280 3 107 1 333 2 55 1 159 2 110 1 57 1 205 1 58 2 88 1 179 1 111 1 61 1 358 2 19 1 210 2 182 1 169 1 231 2 
321 1 259 1 348 1 73 1 350 1 103 1 76 1 78 1 280 4 240 1 333 1 159 1 84 1 110 1 57 1 58 1 205 1 285 1 286 1 179 1 209 1 61 1 112 1 311 2 358 1 19 1 210 1 313 2 95 1 169 1 41 1 231 1 
321 1 259 1 348 1 73 1 130 1 350 1 103 1 76 1 78 1 280 4 240 1 333 1 159 1 110 1 57 1 58 1 205 1 285 1 286 1 179 1 61 1 112 1 311 2 358 1 19 1 210 1 313 2 95 1 169 1 41 1 231 1 
179 1 57 1 110 1 133 1 205 1 73 1 
235 1 129 1 73 5 75 1 280 3 133 1 353 1 81 1 57 3 110 6 205 2 163 1 179 6 289 1 144 1 210 1 293 2 315 1 268 1 231 2 
44 1 97 1 153 1 324 1 5 1 276 1 280 1 333 1 55 2 159 1 56 2 247 2 110 1 57 1 161 1 58 2 205 1 251 1 290 1 341 1 210 1 114 2 115 3 116 1 169 1 252 1 171 1 347 2 71 2 73 1 77 1 28 6 226 1 356 2 309 2 37 1 139 3 88 1 89 1 179 1 144 1 358 2 184 1 267 1 187 2 149 4 231 1 
152 2 259 1 345 2 272 1 218 2 237 1 73 1 24 1 196 1 130 1 350 1 280 2 240 1 30 1 225 1 201 2 110 1 285 1 179 1 165 1 311 3 312 1 293 1 313 3 95 1 316 1 148 1 41 2 
110 2 57 2 163 1 205 1 207 1 73 2 179 2 144 1 210 1 95 1 133 1 280 2 231 1 
242 1 335 1 67 1 57 1 110 4 205 1 73 4 179 4 144 1 351 1 293 1 280 1 231 1 
122 1 110 2 57 2 205 1 73 2 129 1 179 2 19 1 210 1 315 1 280 1 297 1 167 1 231 1 
179 1 180 1 277 1 293 1 279 1 57 1 110 1 205 1 195 1 73 1 
300 1 235 1 110 2 57 1 205 1 73 2 179 2 144 1 18 1 280 1 231 1 
335 1 67 1 235 1 110 5 57 2 205 2 73 4 179 5 144 1 351 1 19 1 293 1 280 3 268 1 81 1 231 2 
335 1 67 1 235 1 110 5 57 2 205 2 73 4 179 5 142 1 144 1 351 1 19 1 293 1 280 3 268 1 231 2 
55 1 159 1 57 1 110 1 324 1 58 2 205 1 88 1 73 1 179 1 358 2 210 1 293 1 280 1 333 1 107 1 231 1 169 1 
110 1 57 2 163 1 205 1 73 1 129 1 179 1 19 1 210 1 315 1 280 1 353 1 231 1 
319 1 159 1 271 1 178 1 58 1 274 1 181 1 358 1 186 1 
222 1 263 1 271 1 
55 1 274 1 271 1 178 1 64 1 
170 1 55 1 259 1 263 1 271 1 178 2 285 1 23 1 100 1 274 2 103 1 311 2 222 1 53 1 182 1 313 2 240 1 148 1 64 2 
328 1 66 1 105 1 284 1 
190 1 66 1 105 1 284 1 346 1 109 1 337 1 
11 1 346 1 323 1 
189 1 190 3 66 1 105 1 308 2 284 1 86 1 346 3 109 1 337 1 217 1 36 1 
190 2 66 1 105 1 284 1 257 1 346 2 109 1 337 1 4 1 
190 1 284 1 109 1 346 1 337 1 36 1 195 1 143 1 301 1 25 1 277 1 
190 1 105 1 284 1 346 1 109 1 337 1 36 1 
190 1 66 1 105 2 346 1 109 1 337 1 36 1 
150 1 190 2 284 1 109 2 346 2 337 2 36 1 98 1 105 1 334 1 
190 3 199 1 66 1 46 1 257 2 284 2 109 1 346 3 337 1 87 1 36 1 301 1 105 1 
190 2 66 1 284 1 257 1 109 1 346 2 337 1 310 1 36 1 219 1 195 2 25 1 277 1 105 1 279 1 
190 4 66 1 136 1 46 1 257 2 284 2 109 2 346 4 337 2 4 1 36 1 301 1 105 1 
190 1 66 1 105 1 284 1 346 1 109 1 337 1 36 1 
189 1 190 4 66 2 308 1 46 1 257 2 284 3 86 1 346 4 109 1 337 1 301 1 105 2 340 1 
190 2 43 1 66 1 284 1 257 1 109 1 346 2 337 1 36 1 265 1 352 1 105 1 
189 1 108 1 190 3 66 1 105 1 308 2 284 1 86 2 346 3 109 1 337 1 36 1 
191 1 173 2 284 2 220 1 
190 1 346 1 109 1 337 1 36 1 206 1 
190 2 66 1 105 1 284 1 257 1 346 2 109 1 87 1 337 1 36 1 
305 1 
190 1 66 1 105 1 284 1 346 1 109 1 337 1 36 1 
190 3 66 1 308 1 257 1 284 1 109 1 346 3 337 1 87 1 36 1 105 1 
301 1 340 1 46 1 284 1 
105 1 284 1 

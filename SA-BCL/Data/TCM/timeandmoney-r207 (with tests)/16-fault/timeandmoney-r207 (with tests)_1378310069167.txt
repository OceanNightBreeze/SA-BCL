#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (149,192) (149,192) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (149,192) (149,192) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (149,192) (149,192) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (149,192) (149,192) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (52,311) 173 30 (126,252) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (52,311) 173 30 (126,252) (126,252) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (159,260) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (159,260) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 160 (113,137,203) 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (18,275,355) (18,275,355) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (18,275,355) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (18,275,355) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (61,233) (61,233) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (18,275,355) (18,275,355) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 161 186 316 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (52,311) 173 30 (126,252) (126,252) 115 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 213 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 254 (39,327) (39,327) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (184,212,307,372) (184,212,307,372) 70 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
299 1 54 1 48 1 189 1 192 1 273 1 148 1 149 1 193 1 184 1 212 1 226 1 307 2 354 1 121 2 
299 1 54 1 48 1 189 1 192 1 273 1 148 1 149 1 193 1 184 1 212 1 226 1 307 2 354 1 121 2 
299 1 54 1 48 1 189 1 192 1 273 1 148 1 149 1 193 1 184 1 212 1 226 1 307 2 354 1 121 2 
299 1 54 1 48 1 189 1 192 1 273 1 148 1 149 1 193 1 184 1 212 1 226 1 307 2 354 1 121 2 
320 1 298 1 299 1 54 1 271 2 300 1 48 1 254 2 184 1 75 2 327 1 212 1 128 1 62 1 307 4 39 1 354 1 121 4 372 3 
54 1 98 1 300 1 48 1 189 1 191 1 273 1 312 1 184 1 327 1 212 1 226 1 307 2 39 1 354 1 121 2 
54 1 271 1 300 1 273 1 254 1 105 1 184 2 327 1 212 2 307 3 62 1 39 1 121 3 372 1 
48 1 287 1 75 2 121 9 372 7 298 1 299 1 320 1 54 1 145 1 271 4 300 1 147 1 273 1 254 4 105 1 85 1 184 2 327 1 212 2 128 1 62 3 307 9 39 1 354 1 
48 1 287 1 75 2 121 9 372 7 298 1 299 1 320 1 54 1 145 1 271 4 300 1 147 1 273 1 254 4 105 1 85 1 184 2 327 1 212 2 128 1 62 3 307 9 39 1 354 1 
352 1 213 1 359 1 
359 1 130 1 323 2 
297 1 12 2 155 2 30 1 71 2 173 2 52 2 222 2 
92 1 112 2 46 1 309 2 2 1 25 1 71 2 286 1 194 1 313 1 74 2 195 1 222 3 264 1 51 1 198 1 367 1 9 1 30 1 173 2 204 1 52 2 124 1 297 1 12 2 270 1 55 1 180 2 274 2 181 1 84 1 150 1 377 1 211 1 155 3 40 1 107 1 
252 1 30 1 173 1 52 1 
359 1 47 1 71 1 3 1 16 1 220 1 104 1 222 1 183 1 352 1 171 1 155 1 246 1 23 1 
359 1 12 1 47 2 71 1 16 1 220 1 104 1 222 1 183 1 352 1 171 1 155 1 246 2 173 1 52 1 
47 1 102 1 246 1 205 1 241 1 
352 1 319 1 359 1 47 2 102 1 246 2 268 1 241 1 
47 1 102 1 246 1 
47 1 252 1 246 1 30 1 173 1 52 1 241 1 126 1 
359 1 
26 1 352 1 359 1 47 2 102 1 246 2 268 1 241 1 
359 1 79 2 332 2 100 1 47 5 102 2 301 1 167 1 4 1 352 1 8 1 38 1 329 1 246 5 292 1 268 1 65 1 241 2 176 2 
297 1 213 1 
135 1 297 2 12 1 1 1 71 2 222 2 155 2 173 1 52 1 
244 1 328 1 240 1 
297 1 309 1 46 1 270 1 25 1 2 1 302 1 274 1 181 1 84 1 74 1 222 1 264 1 211 1 155 1 107 1 
232 1 46 1 12 1 309 1 270 1 2 1 25 1 14 1 71 1 274 1 181 1 84 1 74 1 222 2 211 1 264 1 155 2 240 1 107 1 52 1 
232 2 134 1 159 1 297 1 12 4 1 1 346 1 14 1 71 4 183 1 222 4 155 4 173 1 52 4 
12 1 155 1 71 1 260 1 52 1 222 1 
232 1 297 1 12 3 155 3 71 3 173 1 52 3 222 3 
12 1 155 1 71 1 260 1 52 1 222 1 
135 1 12 1 1 1 155 1 71 1 173 1 52 1 183 1 222 1 
92 1 112 2 46 1 309 1 1 1 47 1 2 1 25 1 116 1 71 3 220 1 194 1 313 1 74 1 222 4 264 1 289 1 198 1 171 1 367 1 246 1 30 1 173 2 204 1 52 3 124 1 232 1 297 1 12 3 270 1 55 1 14 1 180 1 274 1 16 1 181 1 84 1 150 1 104 1 183 1 211 1 155 4 40 1 107 1 
232 1 297 1 12 1 155 2 71 2 3 1 349 1 52 1 222 2 
232 2 359 1 12 3 1 1 47 1 14 1 71 3 16 1 220 1 104 1 183 1 222 3 289 1 171 1 155 3 246 1 20 1 173 1 52 3 
232 1 12 2 1 1 71 2 222 2 328 1 155 2 173 1 240 1 52 2 
297 1 309 1 46 1 270 1 25 1 2 1 274 1 181 1 84 1 74 1 222 1 264 1 211 1 155 1 107 1 
297 1 309 1 46 1 270 1 25 1 2 1 274 1 84 1 74 1 222 1 264 1 288 1 155 1 28 1 107 1 
92 1 112 2 261 1 285 1 221 1 313 1 194 2 244 2 51 2 198 1 367 1 369 1 343 1 123 1 175 1 125 1 53 1 249 1 55 1 180 4 328 2 353 1 40 1 240 2 
12 1 155 1 71 1 311 1 220 1 52 1 183 1 222 1 
340 1 113 1 
340 1 113 1 
160 1 137 1 
160 1 137 1 
160 1 137 1 
340 1 113 1 203 1 
160 1 340 1 113 1 137 1 
340 1 113 1 32 1 
340 1 113 1 32 1 
340 1 113 1 32 1 
162 1 340 1 113 1 
162 1 340 1 113 1 
162 1 340 1 113 1 
44 1 45 1 113 1 333 1 47 1 362 1 363 1 71 2 222 2 340 1 246 1 29 1 203 1 52 2 297 1 12 2 15 1 209 1 58 1 304 1 155 2 90 1 258 1 91 1 
44 2 359 1 113 2 114 1 47 2 333 3 284 1 363 2 209 1 140 1 350 1 152 1 340 2 172 2 246 2 90 2 29 2 21 1 269 1 
299 1 48 1 354 1 
48 1 354 1 191 1 
299 2 354 3 191 1 237 1 132 1 348 1 
299 1 354 2 191 1 237 1 348 1 239 1 
299 1 354 2 191 1 237 1 348 2 
45 1 359 2 332 1 69 1 47 5 362 1 4 1 221 1 246 5 371 1 143 1 267 2 268 1 230 2 231 1 175 1 125 1 53 1 176 1 79 1 100 3 102 1 103 1 323 3 210 1 352 1 304 1 38 2 130 1 19 2 241 4 66 1 
359 5 283 1 360 5 332 2 69 2 47 9 364 1 4 1 139 1 221 3 227 1 246 9 143 1 202 1 267 6 268 1 205 5 231 2 175 3 125 3 53 3 176 2 79 2 100 8 102 6 103 3 301 1 323 9 352 1 304 4 154 1 38 6 130 3 19 6 241 7 
359 3 332 1 69 1 47 3 221 1 246 3 267 2 231 1 230 1 175 1 125 1 53 1 176 1 79 1 100 3 103 1 301 1 323 4 210 1 352 1 304 1 38 2 130 2 19 2 241 2 66 1 
359 4 283 1 332 1 69 1 47 4 221 2 246 4 202 1 267 4 231 1 230 2 175 2 125 2 53 2 176 1 79 1 100 5 103 2 323 7 301 1 210 1 352 1 304 2 154 1 38 4 130 3 19 4 66 1 241 3 
213 1 84 1 317 1 
84 1 10 1 
347 1 
46 1 2 1 84 1 
306 1 84 1 
46 1 84 1 
46 1 146 1 2 1 317 2 84 3 314 1 
217 1 334 1 208 1 190 1 94 1 180 5 194 2 221 1 303 1 265 1 51 3 353 2 369 3 293 1 174 1 358 2 125 1 
217 1 334 1 208 1 190 1 94 1 180 5 194 2 221 1 303 1 265 1 51 3 353 2 369 3 293 1 174 1 358 2 125 1 
217 1 334 1 165 1 208 1 190 1 94 1 180 5 194 2 221 1 303 1 265 1 51 3 353 2 369 3 293 1 174 1 358 2 125 1 
92 1 217 2 112 2 334 1 190 1 94 2 219 1 194 14 221 4 225 1 265 1 51 15 170 1 290 1 367 1 369 10 293 2 229 1 174 5 175 3 53 3 125 4 55 1 251 1 208 1 103 3 180 29 303 2 255 4 353 5 40 1 187 1 358 3 216 3 
92 2 112 4 217 1 190 1 94 1 221 1 194 3 265 1 51 4 367 2 369 4 293 1 229 1 31 1 174 1 125 1 55 2 208 1 180 7 253 1 303 1 353 3 40 2 358 2 
212 1 309 1 54 1 18 1 375 1 307 1 355 1 121 1 273 1 274 1 108 1 74 1 184 1 
196 1 212 1 309 1 18 1 307 2 228 1 121 2 273 1 274 1 337 1 372 1 108 1 74 1 184 1 
309 1 307 1 228 1 121 1 273 1 274 1 337 1 275 1 372 1 108 1 74 1 
233 1 309 1 376 1 274 1 273 2 74 1 184 1 196 1 264 1 212 1 61 1 307 1 121 1 108 2 
212 1 309 1 54 1 18 1 307 1 355 1 228 1 121 1 273 1 274 1 108 1 74 1 184 1 
151 1 
46 1 332 1 47 4 336 1 242 1 49 3 4 1 338 1 3 1 6 1 142 1 246 4 100 2 102 4 17 1 16 1 104 1 59 1 155 1 23 1 107 1 111 1 309 2 69 1 25 1 71 1 220 1 365 1 73 1 74 2 222 1 264 2 118 1 171 1 370 1 122 1 268 2 176 1 79 1 235 1 322 1 34 1 323 1 274 2 238 1 84 1 183 1 127 1 38 2 130 1 378 1 133 1 41 1 
47 3 34 1 102 2 71 1 49 2 16 1 17 1 3 1 238 1 220 1 365 1 104 1 183 1 222 1 26 1 142 1 171 1 155 1 246 3 122 1 268 1 23 1 
359 1 47 3 34 1 102 1 71 1 49 3 16 1 17 1 3 1 220 1 365 1 104 1 183 1 222 1 26 1 352 1 142 1 171 1 155 1 246 3 122 1 268 1 23 1 41 1 
359 1 47 3 71 1 49 3 3 1 220 1 365 1 222 1 26 1 142 1 171 1 246 3 122 1 268 1 34 1 102 2 17 1 16 1 238 1 104 1 183 1 352 1 155 1 378 1 23 1 41 1 
161 1 47 3 71 1 49 2 3 1 220 1 365 1 222 1 26 1 142 1 171 1 246 3 122 1 268 1 316 1 34 1 102 3 17 1 16 1 238 2 104 1 183 1 186 1 155 1 378 2 23 1 
359 2 332 1 47 4 336 1 242 2 71 1 49 4 4 1 3 1 6 2 220 1 365 1 73 2 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 4 323 2 17 1 16 1 238 2 104 1 183 1 127 1 352 1 38 1 155 1 130 2 378 2 23 1 133 1 41 2 
359 1 161 1 332 1 47 4 336 1 166 1 242 2 71 1 49 4 3 1 4 1 6 2 220 1 365 1 73 2 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 4 17 1 16 1 238 2 104 1 106 1 183 1 352 1 38 1 155 1 130 2 378 2 23 1 133 1 41 2 
359 1 161 1 332 1 47 4 336 1 166 1 242 2 71 1 49 4 3 1 4 1 6 2 220 1 365 1 73 2 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 4 17 1 16 1 238 2 104 1 106 1 183 1 352 1 38 1 155 1 130 2 378 2 23 1 133 1 41 2 
359 1 332 1 47 4 336 1 166 1 335 1 71 1 49 4 3 1 4 1 6 2 220 1 72 2 365 1 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 4 323 2 17 1 16 1 83 1 238 2 104 1 183 1 352 1 38 1 155 1 378 2 64 2 23 1 357 1 41 2 
359 1 161 1 332 1 47 4 336 1 166 1 242 2 71 1 49 5 4 1 3 1 6 2 220 1 365 1 73 2 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 5 17 1 16 1 238 3 104 1 106 1 183 1 352 1 186 1 38 1 155 1 130 2 378 3 23 1 133 1 41 3 
359 1 161 1 332 1 47 4 336 1 166 1 242 2 71 1 49 5 4 1 3 1 6 2 220 1 365 1 73 2 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 5 17 1 16 1 238 3 104 1 106 1 183 1 352 1 186 1 38 1 155 1 130 2 378 3 23 1 133 1 41 3 
359 1 332 1 47 4 336 1 335 1 71 1 49 4 4 1 3 1 6 2 220 1 72 2 365 1 222 1 142 1 171 1 246 4 370 2 122 1 268 2 176 1 79 1 100 1 34 1 102 4 323 2 17 1 16 1 238 2 104 1 183 1 127 1 352 1 38 1 155 1 378 2 64 2 23 1 41 2 
92 1 217 1 112 2 190 1 313 1 221 1 194 2 244 1 265 1 51 2 198 1 367 1 369 2 343 1 125 1 297 1 55 1 208 1 180 4 303 1 213 1 328 1 353 2 240 1 40 1 358 1 
92 2 112 4 194 6 313 2 221 2 244 11 225 1 51 8 198 1 290 1 367 2 369 2 9 1 204 1 174 1 175 2 53 1 125 1 297 1 55 2 99 1 103 2 180 14 326 1 278 1 255 3 60 1 328 4 353 1 40 2 240 11 109 1 216 3 
92 1 46 1 309 1 112 2 2 1 25 1 71 1 313 1 194 1 74 1 222 2 264 1 51 1 198 1 367 1 266 1 9 1 204 1 52 1 232 1 297 1 12 1 270 1 99 1 55 1 14 1 274 1 302 1 180 2 181 1 84 1 182 1 211 1 328 1 155 2 40 1 107 1 157 1 
92 2 24 1 46 1 112 4 309 1 2 1 25 1 71 1 50 1 313 2 194 1 74 1 222 2 264 1 198 2 367 2 204 1 247 1 52 1 232 1 296 1 12 1 270 1 99 1 55 2 14 1 180 1 274 1 181 1 84 1 150 1 211 1 155 2 40 2 107 1 
92 2 43 1 46 3 2 1 194 1 195 2 51 1 198 2 9 1 201 1 343 1 96 1 204 1 52 1 12 1 55 2 250 1 56 1 155 1 107 4 112 4 309 6 164 1 25 3 218 1 71 1 313 2 74 7 222 1 168 1 264 2 118 1 367 2 228 1 232 1 322 1 236 1 35 1 180 2 274 7 84 4 89 1 40 2 
92 1 112 2 1 1 71 1 263 1 313 1 221 1 194 2 222 1 244 1 51 1 198 1 367 1 369 1 173 1 52 1 175 1 53 1 125 1 12 1 55 1 99 1 103 1 180 3 328 1 155 1 353 1 240 1 40 1 
92 1 112 2 249 1 55 1 180 2 313 1 221 1 244 1 328 1 51 2 198 1 367 1 369 1 240 1 343 1 40 1 174 1 175 1 
92 1 112 2 55 1 261 1 180 2 313 1 194 2 244 1 328 1 198 1 353 1 367 1 369 1 240 1 343 1 40 1 53 1 125 1 
92 1 112 2 221 1 313 1 194 2 244 2 51 2 198 1 367 1 369 2 343 1 174 1 175 1 53 1 125 1 55 1 103 1 180 4 328 2 353 1 40 1 240 2 
92 1 112 2 249 1 55 1 180 2 313 1 221 1 244 1 328 1 51 2 198 1 367 1 369 1 201 1 240 1 40 1 174 1 175 1 
92 1 112 2 55 1 261 1 180 2 313 1 194 2 244 1 328 1 198 1 353 1 367 1 369 1 201 1 240 1 40 1 53 1 125 1 
92 1 112 2 221 1 313 1 194 2 244 2 51 2 198 1 367 1 369 2 201 1 174 1 175 1 53 1 125 1 55 1 103 1 180 4 328 2 353 1 40 1 240 2 
92 1 112 2 221 1 313 1 194 2 244 2 51 2 198 1 367 1 369 2 174 1 175 1 53 1 125 1 55 1 103 1 180 4 328 2 353 1 40 1 240 2 
92 1 46 1 309 1 112 2 2 1 25 1 313 1 194 1 74 1 222 1 264 1 51 1 198 1 367 1 9 1 204 1 297 1 270 1 55 1 180 2 274 1 181 1 150 1 84 1 211 1 155 1 40 1 107 1 
92 1 46 1 309 1 112 2 2 1 25 1 313 1 194 1 74 1 222 1 288 1 264 1 51 1 198 1 28 1 367 1 9 1 204 1 297 1 270 1 55 1 180 2 274 1 84 1 155 1 40 1 107 1 215 1 
92 1 112 2 221 1 313 1 194 2 244 2 51 2 198 1 367 1 369 2 174 1 175 1 53 1 125 1 55 1 99 1 103 1 180 4 328 2 353 1 40 1 240 2 
92 1 24 1 309 1 46 1 112 2 2 1 25 1 194 2 221 1 313 1 74 1 222 1 244 2 51 2 198 1 367 1 369 2 174 1 175 1 125 1 53 1 270 1 55 1 375 1 103 1 180 4 274 1 181 1 150 1 84 1 211 1 328 2 155 1 353 1 240 2 40 1 107 1 
92 1 112 2 1 1 71 1 194 1 313 1 221 1 222 1 244 1 51 2 198 1 367 1 369 1 173 1 174 1 52 1 175 1 125 1 53 1 345 1 12 1 55 1 99 1 103 1 180 3 328 1 155 1 40 1 240 1 
92 2 0 2 112 4 361 2 194 10 221 3 225 1 51 9 290 1 367 2 368 1 369 6 31 1 294 1 174 3 97 1 175 3 53 3 125 3 55 2 101 1 103 3 180 19 276 1 255 2 353 3 63 1 40 2 158 1 216 1 
92 3 0 4 112 6 361 1 194 12 221 3 51 14 290 2 367 3 368 1 369 4 229 2 31 1 174 2 294 2 175 3 125 2 53 2 234 1 374 1 321 1 55 3 80 1 101 2 103 3 180 26 276 1 255 2 88 1 353 2 40 3 259 1 158 1 216 2 
92 3 0 4 190 1 194 20 51 19 290 3 294 1 53 4 55 3 207 1 101 2 208 1 103 4 303 1 255 4 353 4 63 1 259 1 358 1 158 1 216 3 112 6 217 1 361 1 221 5 225 1 265 1 368 1 367 3 369 8 229 1 31 1 174 4 175 4 125 5 234 1 321 1 374 1 80 1 180 39 276 1 88 1 40 3 
92 4 0 4 217 1 112 8 361 1 190 1 194 17 221 5 225 1 265 1 51 19 290 3 367 4 368 1 369 7 229 2 31 1 294 1 174 3 175 4 53 3 125 4 234 1 374 1 321 1 207 1 55 4 80 1 101 2 208 1 103 4 180 36 276 1 303 1 255 4 88 1 353 4 63 1 40 4 259 1 158 1 358 1 216 3 
92 2 0 4 217 1 112 4 361 1 190 1 194 24 221 8 225 2 265 1 51 26 290 2 367 2 368 1 369 14 229 1 31 1 294 1 174 7 175 7 53 7 125 8 234 1 374 1 321 1 55 2 80 1 101 1 208 1 103 7 180 50 276 1 303 1 255 4 60 2 88 1 353 7 40 2 259 1 158 1 358 1 216 4 
44 1 340 1 113 1 114 1 284 1 81 1 29 1 90 1 363 1 269 1 
258 1 203 1 
185 1 44 1 340 1 113 1 29 1 90 1 324 1 363 1 282 1 
117 1 32 1 
162 1 57 1 223 1 
44 1 359 1 113 1 114 1 47 1 333 2 284 1 363 1 209 1 140 1 350 1 340 1 172 1 246 1 90 1 29 1 21 1 269 1 
44 1 359 1 113 1 114 1 47 1 333 2 284 1 363 1 209 1 140 1 350 1 340 1 172 1 246 1 90 1 29 1 21 1 269 1 
44 1 359 1 113 1 114 1 47 1 333 2 284 1 363 1 209 1 140 1 350 1 340 1 172 1 246 1 90 1 29 1 21 1 269 1 
117 1 32 1 223 1 
117 1 32 1 223 1 
162 1 57 1 
162 1 57 1 223 1 
91 1 58 1 
44 1 45 1 113 1 47 1 333 1 362 1 363 1 71 2 222 2 340 1 172 1 246 1 29 1 120 1 203 1 52 2 297 1 12 2 15 1 58 1 304 1 155 2 90 1 21 1 258 1 91 1 241 1 
92 1 46 1 112 2 309 2 25 1 71 2 5 1 313 1 194 1 74 2 222 2 195 2 27 1 169 1 51 1 198 1 367 1 9 1 96 1 204 1 99 1 55 1 236 1 82 1 274 2 180 2 84 1 351 1 155 2 40 1 107 1 
299 1 309 2 177 1 178 1 48 1 25 1 375 1 191 1 274 2 74 2 36 1 341 1 354 2 214 1 228 1 132 1 107 1 78 1 144 1 
299 1 309 1 177 1 48 1 25 1 93 1 191 1 274 1 74 1 36 1 341 1 354 2 228 1 132 1 78 1 107 1 144 1 
46 1 309 1 177 1 322 1 25 1 274 1 84 1 74 1 264 1 197 1 118 1 76 1 214 1 107 1 
299 1 309 1 177 1 178 1 48 1 25 1 191 1 274 1 74 1 36 1 341 1 354 2 214 1 228 1 132 1 107 1 78 1 144 1 
366 1 
352 1 213 1 359 1 100 1 38 1 292 1 167 1 
359 2 332 1 47 1 242 1 4 1 73 1 246 1 268 1 176 1 79 1 100 1 102 1 323 1 352 1 38 1 130 1 133 1 
46 1 79 1 309 1 332 1 25 1 2 1 274 1 4 1 84 2 314 1 74 1 264 1 22 1 344 1 10 1 107 2 176 1 
359 7 69 1 332 2 47 1 4 2 221 4 225 1 290 1 246 1 200 1 267 8 268 1 175 4 176 2 53 4 125 4 234 1 79 2 374 1 321 1 272 1 100 13 80 1 102 1 103 4 179 1 323 10 255 2 352 2 59 1 60 1 38 8 130 5 19 8 259 1 281 5 216 2 
79 1 217 1 332 1 100 2 47 1 252 1 115 1 4 1 221 1 303 1 106 1 126 1 265 1 38 1 246 1 30 1 173 1 52 1 281 2 125 1 176 1 
79 1 359 1 332 1 100 1 167 1 4 1 352 1 38 1 292 1 176 1 
359 5 100 5 103 2 323 10 221 2 153 1 38 5 130 5 200 1 19 5 267 5 281 2 175 2 53 2 125 2 
352 1 359 1 47 1 102 1 246 1 268 1 
111 1 46 1 309 4 332 2 69 2 47 3 25 1 338 1 4 1 74 4 264 2 118 1 246 3 33 2 268 2 176 2 79 2 100 2 322 1 102 4 301 1 325 1 274 4 84 1 59 2 129 1 38 2 279 1 107 1 
92 1 112 2 309 1 46 1 25 1 2 1 71 2 194 1 313 1 74 1 222 3 264 1 198 1 367 1 30 1 173 2 204 1 52 2 124 1 297 1 12 2 270 1 55 1 180 1 274 1 181 1 150 1 84 1 211 1 155 3 40 1 107 1 
79 1 359 4 332 1 69 1 100 1 323 4 4 1 352 2 59 1 38 2 130 2 19 2 267 2 358 1 176 1 
42 1 44 1 284 1 363 1 91 1 
44 1 331 1 363 1 
44 1 331 1 363 1 
44 1 331 1 363 1 
44 1 363 1 315 1 
44 1 363 1 315 1 
44 1 363 1 315 1 
44 1 363 1 
340 1 113 1 
92 2 112 4 217 1 55 2 208 1 190 1 180 6 221 1 194 3 303 1 265 1 51 3 353 2 367 2 369 3 40 2 229 1 174 1 358 1 125 1 
217 1 208 1 190 1 180 4 194 2 303 1 221 1 213 1 265 1 51 2 353 2 369 2 358 1 125 1 
92 1 11 1 112 2 55 1 103 1 180 4 194 2 221 1 51 2 353 1 367 1 369 2 40 1 174 1 175 1 125 1 53 1 
103 1 180 7 194 4 221 1 255 2 225 1 51 3 290 1 353 1 369 2 174 1 175 1 125 1 53 1 216 1 
92 2 217 2 112 4 163 1 190 1 221 3 194 11 225 1 265 1 51 10 367 2 369 9 229 2 174 4 175 2 53 2 125 3 55 2 208 1 103 2 180 21 303 2 326 1 255 2 60 1 353 5 40 2 358 1 216 2 
255 1 180 1 194 1 
51 1 180 1 216 1 
92 1 11 1 112 2 55 1 103 1 180 6 194 3 221 1 153 1 51 3 367 1 353 2 369 3 40 1 174 1 175 1 53 1 125 1 
92 1 112 2 194 6 221 2 51 6 290 1 367 1 369 2 31 1 174 1 175 2 53 2 125 2 234 1 321 1 374 1 55 1 80 1 103 2 180 12 255 1 353 1 40 1 259 1 216 1 
265 1 51 1 180 2 194 1 221 1 125 1 
92 1 217 1 112 2 55 1 163 1 208 1 190 1 180 3 303 1 194 2 51 1 353 1 367 1 369 2 229 1 40 1 174 1 
92 1 112 2 217 1 55 1 115 1 180 8 303 1 194 4 221 2 265 1 51 4 367 1 353 2 369 4 40 1 31 1 174 2 125 2 
92 1 112 2 55 1 180 2 221 1 51 2 367 1 369 1 40 1 31 1 174 1 175 1 
92 1 112 2 55 1 103 1 180 4 194 2 221 1 51 2 353 1 367 1 369 2 40 1 31 1 174 1 175 1 125 1 53 1 
92 3 112 6 217 1 55 3 163 1 180 3 194 2 303 1 51 1 367 3 353 1 369 2 63 1 229 1 40 3 31 1 174 1 
92 5 217 2 112 10 163 1 190 1 219 1 194 16 221 5 225 1 265 2 170 1 51 14 290 1 367 5 369 11 229 2 31 1 174 5 175 3 53 3 125 5 11 1 55 5 251 1 208 1 103 3 180 30 303 2 255 4 353 6 63 1 40 5 358 1 216 3 
92 1 112 2 217 1 190 1 221 1 194 3 265 1 51 3 290 1 367 1 369 2 31 1 125 1 55 1 80 1 208 1 180 6 303 1 255 1 353 2 40 1 358 1 216 1 
92 2 217 1 112 4 190 1 194 4 221 2 225 1 265 1 51 5 290 1 367 2 369 3 31 1 174 1 175 1 125 1 11 1 55 2 80 1 208 1 103 1 180 9 303 1 255 2 353 2 40 2 358 1 216 1 
92 3 217 1 112 6 190 1 194 9 221 3 265 1 51 8 290 1 367 3 369 4 229 1 31 1 174 1 175 2 53 2 125 3 11 1 234 1 321 1 374 1 55 3 80 1 208 1 103 2 180 17 303 1 255 1 353 3 40 3 259 1 358 1 216 1 
92 3 217 1 112 6 190 1 194 6 221 3 265 1 51 9 290 1 367 3 369 5 229 1 31 1 174 2 175 2 53 1 125 2 11 1 234 1 321 1 374 1 55 3 80 1 208 1 103 2 180 15 303 1 255 1 353 3 40 3 259 1 358 1 216 1 
92 1 112 2 217 1 190 1 221 1 194 3 265 1 51 3 290 1 367 1 369 2 31 1 125 1 55 1 80 1 208 1 180 6 303 1 255 1 353 2 40 1 358 1 216 1 
92 1 112 2 194 6 221 2 51 6 290 1 367 1 369 2 31 1 174 1 175 2 53 2 125 2 234 1 321 1 374 1 55 1 80 1 103 2 180 12 255 1 353 1 40 1 259 1 216 1 
92 4 217 1 112 8 190 1 194 7 221 3 265 1 51 9 290 1 367 4 369 5 229 2 31 1 174 2 175 2 53 1 125 2 11 1 234 1 374 1 321 1 55 4 80 1 208 1 103 2 180 16 303 1 255 1 353 3 40 4 259 1 358 1 216 1 
92 4 112 8 194 7 221 3 51 9 290 1 367 4 369 6 229 2 31 1 174 3 175 3 53 2 125 2 234 1 374 1 321 1 55 4 80 1 103 3 180 16 255 1 353 3 63 1 40 4 259 1 216 1 
217 2 115 1 208 1 190 1 180 9 194 4 303 2 221 3 265 2 51 5 353 4 369 7 174 3 358 1 125 3 
92 4 217 1 112 8 190 1 194 7 221 3 265 1 51 9 290 1 367 4 369 4 229 2 31 1 174 1 175 2 53 1 125 2 234 1 374 1 321 1 55 4 80 1 208 1 103 2 180 16 303 1 255 1 353 3 63 1 40 4 259 1 358 1 216 1 
297 1 310 1 155 1 71 1 3 1 349 1 222 1 
297 1 310 1 13 1 71 1 138 1 3 1 349 1 222 1 155 1 131 1 342 1 356 1 
264 1 213 1 46 1 309 1 118 1 322 1 25 1 274 1 107 1 84 1 74 1 
232 1 297 1 46 1 12 1 309 1 270 1 2 1 25 1 71 1 274 1 84 1 74 1 222 2 264 1 211 1 155 2 107 1 52 1 
232 1 297 1 46 2 12 2 309 1 270 1 2 2 25 1 71 2 274 1 220 1 84 3 74 1 183 1 222 2 211 1 306 1 171 1 155 2 95 1 33 1 107 1 52 1 
232 1 297 1 46 2 12 2 309 2 270 1 2 2 25 1 262 1 71 2 274 2 220 1 84 3 74 2 183 1 222 2 288 1 306 1 171 1 155 2 95 1 33 1 107 1 52 1 
359 1 46 1 309 3 68 1 47 2 102 1 2 1 25 1 262 1 274 3 16 1 84 4 74 3 264 1 352 1 306 1 305 1 95 1 246 2 33 1 107 1 10 1 317 1 
359 1 46 1 309 3 47 2 102 1 2 1 25 1 262 1 274 3 16 1 84 4 74 3 277 1 264 1 352 1 306 1 95 1 246 2 33 1 107 1 10 1 317 1 
309 1 56 1 25 1 274 1 107 1 74 1 
43 1 46 2 309 5 164 1 25 2 2 1 314 1 74 6 195 1 168 1 264 2 228 1 206 1 236 1 35 1 56 1 274 6 84 3 89 1 107 3 
92 2 24 1 217 1 46 1 112 4 309 1 2 1 25 1 190 1 71 1 50 1 194 2 221 1 313 2 74 1 222 2 244 1 27 1 265 1 51 2 198 2 367 2 369 2 52 1 125 1 232 1 297 1 12 1 270 1 99 1 55 2 208 1 375 1 180 4 274 1 181 1 303 1 84 1 150 1 211 1 328 1 155 2 353 2 240 1 40 2 358 1 107 1 
359 1 309 1 332 2 47 3 167 1 4 2 74 1 264 1 246 3 292 1 119 1 268 1 10 1 317 1 176 2 79 2 100 1 102 2 274 1 16 1 84 2 277 1 352 1 37 1 38 1 308 1 279 1 241 1 
309 2 46 1 56 1 375 1 2 1 25 1 274 2 314 1 84 2 74 2 344 1 317 1 107 2 
309 4 46 1 322 1 375 1 25 1 262 1 274 4 84 1 74 4 264 1 7 1 118 1 107 1 
330 1 43 1 309 2 46 1 250 1 35 1 2 1 25 1 218 1 274 2 84 1 74 2 33 1 107 2 
264 1 309 1 48 1 25 1 354 1 191 1 274 1 107 1 74 1 144 1 
46 1 309 2 236 1 25 1 375 1 228 1 274 2 5 1 107 1 84 1 74 2 
309 4 46 2 322 1 164 1 236 1 375 1 25 2 274 5 84 3 74 5 264 1 7 1 118 1 89 1 33 1 107 2 
309 4 46 2 322 1 236 1 375 1 25 2 274 5 84 3 74 5 264 1 7 1 118 1 89 1 33 1 107 2 280 1 
232 1 297 1 46 1 12 1 309 1 270 1 2 1 25 1 71 1 274 1 84 1 74 1 222 2 264 1 288 1 155 2 107 1 52 1 
43 1 309 1 46 1 35 1 2 1 25 1 274 1 314 1 84 1 74 1 33 1 206 1 107 2 
297 1 136 1 67 1 291 1 188 1 
297 1 359 1 136 1 67 2 47 2 16 1 220 1 104 1 183 1 141 1 352 1 224 1 289 1 171 1 257 1 246 2 291 2 241 1 188 2 
136 1 82 1 71 1 222 1 351 1 169 1 155 1 291 1 188 1 
224 1 136 1 257 1 
327 1 213 1 39 1 
300 1 184 1 327 1 212 1 307 1 39 1 121 1 
121 1 273 1 373 1 
54 1 300 1 189 1 184 1 243 1 327 1 212 1 199 1 307 2 39 1 121 2 
300 1 184 1 75 1 327 1 212 1 307 2 39 1 121 2 372 1 
298 1 299 1 54 1 271 1 48 1 254 1 184 1 212 1 307 1 354 1 121 1 
327 1 212 1 54 1 307 1 121 1 184 1 
327 1 212 1 54 1 307 1 39 1 121 1 254 1 184 1 
248 1 54 1 184 2 327 1 212 2 339 1 245 1 307 2 121 2 
54 1 271 1 300 1 147 1 287 1 254 1 184 1 327 1 212 1 307 3 62 1 39 1 121 3 372 2 
212 1 54 1 70 1 307 2 354 1 121 1 191 1 372 1 184 1 
320 1 54 1 271 1 300 1 254 1 184 1 75 1 327 1 212 1 307 3 62 1 39 1 121 3 372 2 
54 1 300 1 184 1 327 1 212 1 307 1 39 1 121 1 
271 1 300 2 254 1 184 1 327 1 212 1 307 3 62 1 39 1 121 3 372 2 
54 1 145 1 300 1 184 1 327 1 212 1 87 1 307 2 39 1 121 2 372 1 295 1 
54 1 300 1 189 1 184 1 243 1 327 1 212 1 307 2 39 1 121 2 156 1 
77 2 254 2 318 1 86 1 
110 1 212 1 54 1 307 1 121 1 184 1 
54 1 300 1 287 1 184 1 327 1 212 1 307 2 39 1 121 2 372 1 
256 1 
54 1 300 1 184 1 327 1 212 1 307 1 39 1 121 1 
54 1 300 1 189 1 184 1 327 1 212 1 307 2 39 1 121 2 
271 1 300 1 62 1 254 1 
327 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 354 (44,155) (44,155) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 354 (44,155) (44,155) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 354 (44,155) (44,155) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 354 (44,155) (44,155) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 354 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (96,193) (96,193) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 354 231 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 354 231 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (13,109,349) (9,67,311) (9,67,311) (9,67,311) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (13,109,349) (9,67,311) (9,67,311) (9,67,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (13,109,349) (9,67,311) (9,67,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (13,109,349) (9,67,311) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 313 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 190 253 245 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 190 253 245 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 190 253 245 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 190 253 245 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 190 253 245 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (13,109,349) (13,109,349) (13,109,349) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (13,109,349) (13,109,349) (13,109,349) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (13,109,349) (13,109,349) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 52 46 337 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 313 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 128 213 315 337 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 87 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 314 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 1 267 2 124 1 112 3 320 1 31 2 99 1 129 1 3 1 362 2 348 3 161 1 152 1 
198 1 182 1 155 1 85 1 267 2 143 1 216 1 44 1 320 4 112 9 31 4 99 2 98 2 129 6 218 2 362 2 161 1 348 9 90 1 291 1 232 1 63 1 152 3 354 1 355 2 141 2 
198 1 182 1 155 1 85 1 267 2 143 1 216 1 44 1 320 4 112 9 31 4 99 2 98 2 129 6 218 2 362 2 161 1 348 9 90 1 291 1 232 1 63 1 152 3 354 1 355 2 141 2 
198 1 182 1 155 1 85 1 267 2 143 1 216 1 44 1 320 4 112 9 31 4 99 2 98 2 129 6 218 2 362 2 161 1 348 9 90 1 291 1 232 1 63 1 152 3 354 1 355 2 141 2 
198 1 182 1 155 1 267 2 143 1 216 1 44 1 320 3 112 7 31 3 99 2 98 2 129 4 218 2 362 2 161 1 348 7 90 1 291 1 232 1 63 1 152 2 354 1 355 1 141 2 
198 1 85 1 267 1 112 4 320 2 31 2 98 1 129 3 218 1 362 1 348 4 63 1 152 1 354 1 355 2 141 1 
198 1 362 1 348 1 96 1 143 1 267 1 112 1 193 1 99 1 122 1 
198 1 182 1 85 1 267 2 112 9 320 4 277 1 31 4 98 1 99 1 129 7 218 1 362 2 348 9 231 1 161 1 232 1 63 1 152 3 354 1 355 2 141 1 
198 1 182 1 85 1 267 2 112 9 320 4 277 1 31 4 98 1 99 1 129 7 218 1 362 2 348 9 231 1 161 1 232 1 63 1 152 3 354 1 355 2 141 1 
240 1 158 1 113 1 323 1 192 1 117 1 178 1 248 1 130 1 222 1 24 1 79 1 187 1 167 1 
284 1 
266 1 77 1 284 1 222 1 317 1 113 2 56 1 323 2 
305 1 299 2 276 1 359 1 113 5 56 1 323 5 127 1 201 1 194 2 147 1 261 1 77 1 284 1 222 2 78 1 61 1 317 2 332 2 
284 1 313 1 56 1 
288 1 284 1 257 2 
238 1 117 2 248 1 130 2 158 2 24 2 187 2 192 2 
82 2 156 1 300 1 275 1 42 1 158 2 322 1 256 1 117 2 160 1 230 1 118 1 49 1 50 1 205 1 185 1 138 1 350 1 24 2 120 2 303 1 165 2 187 3 238 1 357 2 306 1 307 1 55 1 217 2 175 1 192 3 248 1 130 2 132 1 364 1 153 1 39 1 
117 1 178 1 248 1 130 1 158 1 24 1 79 1 187 1 192 1 167 1 
158 1 113 1 323 1 325 1 116 1 117 2 284 1 24 1 187 2 167 2 240 1 125 1 56 1 246 1 192 2 178 1 248 1 130 1 251 1 181 1 79 1 
158 2 113 2 325 1 323 2 116 1 117 2 284 1 24 2 187 2 167 2 240 1 125 1 56 1 246 1 192 2 178 1 248 1 130 2 79 1 
222 1 317 1 351 1 113 1 323 1 
329 1 77 1 284 1 222 1 317 1 113 2 56 1 323 2 
317 1 113 1 323 1 
238 2 158 1 192 2 117 2 289 1 130 1 24 1 151 1 187 2 
16 1 162 1 285 1 
238 1 357 1 306 1 82 1 217 1 322 1 192 1 160 1 230 1 118 1 205 1 50 1 138 1 286 1 187 1 153 1 
238 1 313 1 
357 1 306 1 41 1 82 1 158 1 322 1 217 1 75 1 192 2 230 1 117 1 160 1 118 1 130 1 50 1 205 1 285 1 138 1 153 1 187 2 
238 1 117 3 41 1 130 3 158 3 24 1 187 3 192 3 
117 1 130 1 158 1 79 1 187 1 192 1 167 1 
117 1 289 1 130 1 158 1 24 1 151 1 187 1 192 1 167 1 
82 1 41 1 228 1 322 1 323 1 325 1 230 1 50 1 49 1 185 1 138 1 140 1 187 4 238 1 246 1 192 4 289 1 248 1 153 1 156 1 300 1 158 3 113 1 256 1 116 1 117 3 160 1 118 1 205 1 350 1 24 2 207 1 303 1 120 1 165 2 167 2 357 1 306 1 307 1 125 1 217 1 175 1 75 1 130 3 364 1 
238 1 117 2 4 1 41 1 130 1 158 1 251 1 187 2 192 2 
41 2 158 3 125 1 12 1 113 1 323 1 325 1 246 1 75 1 192 3 116 1 289 1 117 3 130 3 284 1 24 1 207 1 187 3 167 1 
41 1 158 2 192 2 289 1 117 2 162 1 130 2 285 1 24 1 187 2 
238 1 357 1 306 1 82 1 217 1 322 1 192 1 160 1 230 1 118 1 205 1 50 1 138 1 187 1 153 1 
238 1 357 1 82 1 217 1 322 1 192 1 19 1 159 1 230 1 118 1 205 1 50 1 138 1 187 1 153 1 
225 1 16 2 111 1 156 1 300 2 256 1 346 1 48 1 162 2 5 1 49 1 23 1 185 1 285 2 120 4 165 2 242 1 175 1 128 1 340 1 148 1 131 1 132 2 364 1 
117 1 95 1 130 1 158 1 125 1 187 1 192 1 167 1 
238 1 41 2 158 4 192 5 75 1 117 5 289 1 4 1 130 4 251 1 150 1 24 1 187 5 333 1 
117 2 95 1 130 2 158 2 79 1 187 2 192 2 167 1 
68 1 60 1 360 1 
68 2 292 1 172 1 70 1 360 2 338 1 
68 1 360 1 
68 1 360 1 
292 1 338 1 
292 1 338 1 
292 1 338 1 
68 1 360 1 365 1 
68 1 360 1 365 1 
68 1 360 1 365 1 
68 1 360 1 321 1 
68 1 360 1 321 1 
68 1 360 1 321 1 
334 1 110 2 172 1 244 2 11 1 360 2 229 2 113 2 327 1 323 2 68 2 20 1 260 2 347 1 58 1 91 2 284 1 27 1 265 3 
110 1 158 2 86 1 229 1 113 1 323 1 68 1 117 2 91 1 262 1 234 1 163 1 187 2 265 1 27 1 238 1 244 1 360 1 269 1 192 2 130 2 60 1 133 1 105 1 
122 1 
218 1 98 1 141 1 
122 1 
122 1 
122 1 
0 2 299 1 276 2 278 1 113 5 323 5 18 1 114 2 257 3 280 1 201 3 261 1 89 1 5 1 23 1 284 2 163 1 332 1 237 1 288 1 213 1 56 1 33 1 128 1 194 1 77 1 131 1 222 4 105 1 317 1 133 1 40 2 
17 1 0 6 299 2 276 6 113 9 301 1 255 1 323 9 18 2 114 6 257 9 201 8 261 1 5 3 283 1 23 3 284 5 332 2 351 5 237 1 288 3 213 3 56 1 33 2 128 3 194 2 100 1 102 5 77 1 131 3 37 1 222 7 61 1 133 4 317 6 
299 1 0 2 276 2 278 1 113 3 323 3 18 1 114 2 257 4 280 1 201 3 5 1 23 1 284 3 332 1 288 2 213 1 56 1 33 1 128 1 194 1 131 1 222 2 61 1 133 1 40 1 
0 4 299 1 276 4 278 1 113 4 255 1 323 4 18 1 114 4 257 7 280 1 201 5 5 2 283 1 23 2 284 4 332 1 288 3 213 2 56 1 33 1 128 2 194 1 131 2 37 1 222 3 61 1 133 2 40 2 
80 1 
171 1 138 1 313 1 
138 1 345 1 
50 1 138 1 
171 2 54 1 50 1 302 1 138 3 80 1 153 1 
50 1 138 1 153 1 
83 1 138 1 
111 4 300 6 346 3 21 2 5 3 22 1 119 1 120 14 209 1 186 1 310 1 145 1 270 2 131 3 132 8 59 1 294 2 195 2 14 1 
111 13 156 1 274 1 300 19 324 1 256 1 346 6 200 1 21 3 22 1 282 1 5 6 23 3 119 1 73 3 120 40 209 1 186 2 352 1 165 2 170 4 213 3 310 1 145 2 270 2 32 1 175 1 128 3 363 1 131 6 132 21 195 3 294 3 59 7 364 1 
111 6 156 2 157 1 300 7 256 2 346 4 200 1 21 2 22 1 5 3 120 16 186 1 209 1 165 4 310 1 145 1 270 2 175 2 131 3 132 9 294 2 59 2 195 2 364 2 196 1 
111 4 300 6 346 3 21 2 5 3 22 1 119 1 120 14 209 1 186 1 310 1 145 1 270 2 131 3 132 8 294 2 195 2 59 1 
111 6 300 6 346 3 21 2 5 3 22 1 119 1 120 14 209 1 186 1 310 1 145 1 270 2 131 3 132 8 294 2 195 2 59 3 
319 1 298 1 82 1 112 1 230 1 88 2 118 1 348 1 205 1 50 1 206 1 138 1 7 1 264 1 357 1 169 2 308 2 267 1 312 1 217 1 99 2 362 1 316 1 
198 1 357 1 9 1 82 1 169 1 308 1 97 1 267 1 311 1 112 1 217 1 13 1 67 1 99 1 230 1 88 1 101 1 362 1 348 1 205 1 122 1 224 1 
198 1 357 1 9 1 82 1 169 1 308 1 97 1 267 1 311 1 112 1 217 1 13 1 67 1 99 1 230 1 88 1 362 1 348 1 205 1 233 1 122 1 224 1 
319 1 357 1 9 1 82 1 169 1 308 1 97 1 267 1 112 2 217 1 13 1 67 1 99 1 129 1 230 1 88 1 101 1 362 1 220 1 348 2 205 1 122 1 224 1 
357 1 82 1 169 1 308 1 112 1 217 1 13 1 67 1 99 1 129 1 230 1 88 1 101 1 220 1 348 1 205 1 122 1 224 1 
366 1 
226 1 273 1 82 2 227 2 84 1 276 2 323 5 325 1 230 1 50 1 6 1 138 1 331 4 284 3 332 1 7 1 187 1 239 2 288 2 191 1 56 2 192 1 246 1 194 1 251 1 254 1 15 1 297 2 299 1 113 5 257 2 258 2 116 1 117 1 201 2 118 2 261 1 204 1 205 1 304 1 167 1 211 2 357 2 173 1 123 1 125 1 312 1 217 2 33 1 219 2 77 3 179 1 317 6 181 1 272 2 
254 1 15 1 113 3 323 3 325 1 116 1 258 1 117 1 6 1 331 2 284 2 187 1 167 1 266 1 191 1 125 1 56 2 192 1 246 1 77 1 179 1 251 1 181 1 317 2 
254 1 15 1 191 1 125 1 113 2 56 2 325 1 323 2 246 1 192 1 116 1 117 1 179 1 6 1 284 2 331 3 181 1 251 1 187 1 272 1 167 1 
254 1 15 1 227 1 113 3 323 3 325 1 116 1 258 1 117 1 6 1 331 3 284 3 187 1 167 1 266 1 191 1 125 1 56 3 192 1 246 1 77 1 179 1 251 1 181 1 317 2 272 1 
227 4 84 1 276 1 135 1 325 1 323 5 6 1 284 4 331 5 332 1 187 2 240 1 239 2 288 2 191 1 336 1 56 4 246 1 192 2 194 1 248 1 250 1 251 1 254 1 15 1 297 2 299 1 158 1 113 5 116 1 258 4 117 2 201 1 261 1 72 1 24 1 167 2 211 2 266 1 173 1 125 1 178 1 77 3 219 2 130 1 179 1 317 7 181 1 79 1 272 3 271 1 
273 1 227 2 84 1 276 1 325 1 323 4 6 1 284 4 331 4 332 1 187 1 239 2 288 2 191 1 56 3 246 1 192 1 194 1 251 1 254 1 15 1 297 2 299 1 113 4 257 2 116 1 258 2 117 1 201 1 261 1 167 1 211 2 173 1 125 1 219 2 77 2 179 1 181 1 317 4 272 2 
254 1 15 1 297 2 227 2 299 1 84 1 276 1 135 1 113 4 323 4 325 1 258 2 116 1 117 1 201 1 261 1 6 1 331 4 284 3 72 1 332 1 187 1 167 1 211 2 239 2 288 2 173 1 191 1 125 1 56 3 192 1 246 1 194 1 77 2 219 2 250 1 179 1 317 4 251 1 181 1 272 2 
254 1 15 1 297 2 227 2 299 1 84 1 276 1 135 1 113 4 323 4 325 1 258 2 116 1 117 1 201 1 261 1 6 1 331 4 284 3 72 1 332 1 187 1 167 1 211 2 239 2 288 2 173 1 191 1 125 1 56 3 192 1 246 1 194 1 77 2 219 2 250 1 179 1 317 4 251 1 181 1 272 2 
254 1 15 1 297 2 227 2 299 1 276 1 2 2 113 4 323 4 325 1 257 2 115 1 258 2 116 1 117 1 261 1 203 1 6 1 331 4 284 3 332 1 187 1 167 1 239 2 335 1 173 1 191 1 125 1 56 3 192 1 246 1 194 1 77 2 250 1 179 1 317 4 251 1 181 1 272 2 154 2 
254 1 15 1 297 2 299 1 227 3 84 1 276 1 135 1 113 4 323 4 325 1 116 1 258 3 117 1 201 1 261 1 6 1 72 1 331 5 284 3 332 1 187 1 167 1 211 2 239 2 288 2 173 1 191 1 125 1 56 3 192 1 246 1 194 1 77 2 219 2 250 1 179 1 251 1 181 1 317 5 272 3 271 1 
254 1 15 1 297 2 299 1 227 3 84 1 276 1 135 1 113 4 323 4 325 1 116 1 258 3 117 1 201 1 261 1 6 1 72 1 331 5 284 3 332 1 187 1 167 1 211 2 239 2 288 2 173 1 191 1 125 1 56 3 192 1 246 1 194 1 77 2 219 2 250 1 179 1 251 1 181 1 317 5 272 3 271 1 
273 1 227 2 276 1 2 2 325 1 323 4 6 1 284 3 331 4 332 1 187 1 335 1 239 2 191 1 56 3 246 1 192 1 194 1 251 1 154 2 254 1 15 1 297 2 299 1 113 4 257 2 116 1 258 2 117 1 261 1 167 1 173 1 125 1 77 2 179 1 181 1 317 4 272 2 
197 1 41 1 82 8 156 2 300 1 275 1 42 2 158 1 43 1 256 2 117 1 230 2 118 2 205 2 49 2 50 2 233 1 185 2 138 3 120 2 303 1 92 1 353 1 187 1 165 4 7 1 357 7 287 1 242 1 212 1 312 1 126 1 217 8 175 2 192 1 101 1 130 1 132 1 364 2 
111 1 16 1 156 1 300 2 158 1 256 1 346 1 117 1 137 1 162 1 49 1 5 1 185 1 23 1 285 1 24 1 120 3 165 2 187 1 213 1 175 1 192 1 128 1 289 1 130 1 36 1 131 1 132 1 364 1 
238 2 111 2 242 1 156 1 300 2 310 1 270 1 313 1 175 1 256 1 346 2 21 1 5 1 131 1 49 1 132 3 294 1 185 1 195 1 120 5 364 1 209 1 165 2 
111 2 16 11 156 2 300 6 275 1 324 1 256 2 346 1 137 1 162 4 49 1 5 1 185 2 23 1 285 11 73 3 263 1 303 1 120 14 165 4 238 1 188 1 170 3 213 2 53 1 175 2 128 2 363 1 131 2 132 8 59 1 364 2 108 1 
82 1 41 1 156 1 300 1 275 1 158 1 322 1 256 1 230 1 160 1 117 1 118 1 137 1 162 1 50 1 205 1 49 1 185 1 138 1 286 1 303 1 120 2 187 2 165 2 356 1 238 1 357 1 306 1 217 1 175 1 192 2 75 1 57 1 130 1 104 1 132 1 364 1 153 1 
82 1 41 1 228 1 275 1 322 2 45 2 230 2 137 1 49 3 50 2 5 5 185 3 138 2 285 6 187 3 238 3 243 2 192 3 59 1 294 1 195 2 153 2 111 6 16 6 64 2 156 3 300 13 158 1 256 3 346 5 69 1 117 1 160 2 118 1 21 2 162 6 22 1 205 2 23 2 303 1 120 27 209 1 165 6 167 1 74 2 357 1 306 2 307 2 213 2 310 1 270 2 217 1 175 3 75 1 128 2 35 1 130 1 131 5 132 14 364 3 
111 1 16 1 242 1 156 1 175 1 256 1 128 1 162 1 148 1 49 1 131 1 132 2 59 1 185 1 285 1 120 2 364 1 165 2 
111 1 16 1 242 1 156 1 300 2 175 1 256 1 346 1 340 1 162 1 49 1 5 1 185 1 23 1 285 1 120 2 364 1 165 2 
16 2 111 2 156 1 300 2 256 1 346 1 162 2 49 1 5 1 185 1 23 1 285 2 120 4 165 2 242 1 213 1 175 1 128 1 131 1 132 2 59 1 364 1 
111 1 16 1 156 1 43 1 175 1 256 1 128 1 162 1 148 1 49 1 131 1 132 2 59 1 185 1 285 1 120 2 364 1 165 2 
111 1 16 1 156 1 300 2 43 1 175 1 256 1 346 1 340 1 162 1 49 1 5 1 185 1 23 1 285 1 120 2 364 1 165 2 
16 2 111 2 156 1 300 2 43 1 256 1 346 1 162 2 49 1 5 1 185 1 23 1 285 2 120 4 165 2 213 1 175 1 128 1 131 1 132 2 59 1 364 1 
16 2 111 2 156 1 300 2 256 1 346 1 162 2 49 1 5 1 185 1 23 1 285 2 120 4 165 2 213 1 175 1 128 1 131 1 132 2 59 1 364 1 
82 1 156 1 300 1 275 1 322 1 256 1 230 1 160 1 118 1 50 1 205 1 49 1 185 1 138 1 120 2 303 1 187 1 165 2 238 1 357 1 306 1 307 1 217 1 175 1 192 1 132 1 364 1 153 1 
82 1 156 1 300 1 275 1 322 1 19 1 256 1 230 1 159 1 118 1 50 1 205 1 49 1 185 1 138 1 120 2 303 1 187 1 165 2 238 1 357 1 217 1 175 1 192 1 132 1 318 1 364 1 153 1 
16 2 111 2 156 1 300 2 256 1 346 1 137 1 162 2 49 1 5 1 185 1 23 1 285 2 120 4 165 2 213 1 175 1 128 1 131 1 132 2 59 1 364 1 
111 2 16 2 82 1 156 1 300 2 322 1 256 1 346 1 230 1 160 1 162 2 5 1 205 1 50 1 49 1 233 1 23 1 185 1 285 2 138 1 120 4 187 1 165 2 357 1 306 1 307 1 213 1 243 1 217 1 175 1 128 1 192 1 131 1 132 2 59 1 364 1 153 1 
296 1 111 1 16 1 156 1 300 1 158 1 256 1 117 1 137 1 162 1 5 1 49 1 23 1 185 1 285 1 24 1 120 3 165 2 187 1 213 1 175 1 192 1 128 1 289 1 130 1 131 1 132 2 59 1 364 1 
156 1 157 1 190 1 361 1 364 1 253 1 245 1 175 1 256 1 165 2 
156 1 157 1 190 1 361 1 364 1 253 1 245 1 175 1 256 1 165 2 
156 1 157 1 190 1 361 1 364 1 253 1 245 1 175 1 256 1 165 2 
156 1 157 1 190 1 361 1 364 1 253 1 245 1 175 1 256 1 165 2 
156 1 157 1 190 1 361 1 364 1 253 1 245 1 175 1 256 1 165 2 
334 1 68 1 110 1 91 1 172 1 358 1 244 1 360 1 229 1 327 1 
60 1 269 1 
68 1 110 1 91 1 343 1 221 1 244 1 360 1 295 1 229 1 
334 1 110 1 172 1 244 1 360 1 113 1 229 1 327 1 323 1 68 1 20 1 260 1 347 1 58 1 91 1 284 1 27 1 265 2 
334 1 110 1 172 1 244 1 360 1 113 1 229 1 327 1 323 1 68 1 20 1 260 1 347 1 58 1 91 1 284 1 27 1 265 2 
334 1 110 1 172 1 244 1 360 1 113 1 229 1 327 1 323 1 68 1 20 1 260 1 347 1 58 1 91 1 284 1 27 1 265 2 
70 1 208 1 365 1 
70 1 208 1 365 1 
189 1 321 1 
189 1 70 1 321 1 
86 1 234 1 
110 1 86 1 158 2 113 1 229 1 323 1 68 1 117 2 260 1 20 1 91 1 262 1 234 1 163 1 187 2 265 1 238 1 244 1 360 1 269 1 192 2 130 2 222 1 60 1 133 1 105 1 106 1 
208 1 365 1 
189 1 70 1 321 1 
117 1 342 1 187 1 192 1 
357 1 8 1 82 1 308 1 312 1 217 1 230 1 118 1 205 1 50 1 206 1 138 1 7 1 236 1 
357 1 82 1 308 1 97 1 217 1 13 1 230 1 101 1 205 1 349 1 122 1 224 1 236 1 109 1 
357 2 82 2 308 1 97 1 217 2 13 1 230 1 101 1 205 1 233 1 349 1 122 1 224 1 236 1 109 1 
357 1 82 1 199 1 308 1 97 1 217 1 13 1 230 1 101 1 205 1 349 1 122 1 224 1 
293 1 
299 1 276 1 56 1 127 1 194 1 201 1 147 1 261 1 284 1 332 1 
0 5 213 2 288 5 276 5 215 2 128 2 114 5 257 10 201 5 131 2 5 2 23 2 284 5 166 1 74 1 
77 1 284 1 317 1 113 1 56 1 323 1 
81 1 82 4 299 2 65 1 276 2 113 3 323 3 230 2 118 2 201 2 261 1 205 3 50 2 204 1 71 1 138 2 332 2 121 1 7 1 304 1 357 4 30 1 123 2 312 1 217 4 33 2 34 1 146 1 194 2 77 2 61 1 317 4 223 2 153 1 
201 1 147 1 276 1 284 1 313 1 56 1 127 1 
299 1 84 1 276 1 113 1 323 1 257 1 201 1 261 1 284 2 332 1 211 1 288 1 56 1 194 1 219 1 77 1 317 1 
82 1 0 3 299 2 276 3 113 2 323 2 114 3 257 6 345 2 47 1 230 1 118 1 201 4 261 2 5 1 50 1 205 2 23 1 284 3 138 4 332 2 139 1 164 1 74 1 357 1 94 1 213 1 288 3 171 1 309 1 215 1 54 1 217 1 33 1 128 1 246 1 194 2 77 1 180 1 131 1 149 1 317 2 153 1 
52 1 170 1 299 1 0 3 213 1 288 1 276 3 337 1 324 1 46 1 128 1 114 3 257 2 194 1 201 4 290 1 261 1 5 1 131 1 23 1 315 1 73 1 284 1 332 1 
299 1 276 2 135 1 158 1 113 1 323 1 117 1 201 2 21 1 261 1 22 1 5 1 24 1 332 1 187 1 166 1 167 1 240 1 215 1 270 1 192 1 194 1 178 1 248 1 130 1 131 2 195 1 79 1 
82 1 156 1 300 1 158 2 322 1 256 1 117 2 160 1 230 1 118 1 205 1 50 1 49 1 185 1 350 1 138 1 24 2 120 1 303 1 165 2 187 3 238 1 357 1 306 1 307 1 217 1 175 1 192 3 248 1 130 2 364 1 153 1 
0 2 299 1 288 2 276 2 123 1 33 1 56 2 114 2 257 4 194 1 201 1 261 1 294 1 284 4 332 1 
142 1 91 1 86 1 229 1 327 1 
341 1 91 1 229 1 
341 1 91 1 229 1 
341 1 91 1 229 1 
247 1 91 1 229 1 
247 1 91 1 229 1 
247 1 91 1 229 1 
91 1 229 1 
68 1 360 1 
111 4 156 1 300 7 157 1 324 1 256 1 346 3 21 2 22 1 5 3 73 1 120 15 209 1 165 2 170 1 310 1 270 2 337 1 175 1 131 3 132 8 59 1 294 1 195 2 364 1 
111 5 156 2 300 8 157 1 279 1 324 1 256 2 346 3 21 2 22 1 5 3 73 1 120 18 209 1 165 4 170 2 213 1 310 1 270 2 337 1 175 2 128 1 363 1 131 4 132 10 294 1 195 2 59 2 364 2 
170 1 156 1 213 1 157 1 300 2 175 1 337 1 324 1 128 1 256 1 290 1 131 1 132 3 315 1 73 1 120 5 364 1 165 2 
170 1 156 1 213 1 157 1 300 2 175 1 337 1 324 1 128 1 256 1 290 1 131 1 132 3 315 1 73 1 120 5 364 1 165 2 
111 4 156 1 300 7 157 1 324 1 256 1 346 3 21 2 22 1 5 3 73 1 120 15 209 1 165 2 170 1 310 1 270 2 337 1 175 1 131 3 132 8 59 1 294 1 195 2 364 1 
170 1 156 1 213 1 157 1 300 2 175 1 337 1 324 1 128 1 256 1 290 1 131 1 132 3 315 1 73 1 120 5 364 1 165 2 
170 1 156 2 213 1 157 1 300 2 279 1 175 2 337 1 324 1 128 1 256 2 290 1 131 1 132 3 315 1 73 1 120 5 364 2 165 4 
170 1 156 2 213 1 157 1 300 2 268 1 175 2 337 1 324 1 128 1 256 2 290 1 131 1 132 3 315 1 73 1 120 5 364 2 165 4 
111 6 300 4 310 2 270 1 346 3 21 3 5 1 131 1 132 3 195 3 59 3 120 7 209 1 
170 1 156 2 213 1 157 1 300 2 268 1 175 2 337 1 324 1 128 1 256 2 290 1 131 1 132 3 315 1 73 1 120 5 364 2 165 4 
111 2 300 4 270 1 346 1 21 1 22 1 131 2 5 2 132 4 195 1 59 1 120 8 
111 1 156 1 157 1 175 1 256 1 128 1 131 1 132 2 59 1 120 2 364 1 165 2 
111 2 156 1 300 2 157 1 213 1 175 1 256 1 128 1 346 1 5 1 131 1 132 2 23 1 59 1 120 4 364 1 165 2 
111 2 156 3 300 2 157 1 268 1 175 3 256 3 346 1 200 1 136 1 21 1 132 1 195 1 59 1 120 3 364 3 165 6 
111 8 156 4 274 1 300 15 157 1 279 1 324 1 256 4 346 4 200 1 21 2 22 1 282 1 5 5 23 2 73 3 120 31 209 1 165 8 170 3 213 2 310 1 268 1 270 2 32 1 175 4 128 2 131 5 132 16 294 1 195 2 59 4 364 4 
111 6 156 2 300 8 256 2 346 3 200 1 21 2 22 1 5 3 120 17 209 1 165 4 310 1 270 2 175 2 131 3 132 9 195 2 59 3 294 1 364 2 
111 2 300 2 310 1 270 1 313 1 346 2 21 1 131 1 5 1 132 3 294 1 195 1 120 5 209 1 
111 2 156 1 300 2 213 1 279 1 175 1 256 1 128 1 346 1 5 1 131 1 132 2 23 1 59 1 120 4 364 1 165 2 
111 2 170 2 300 4 213 1 324 1 128 1 346 1 363 1 5 1 131 1 132 3 23 1 59 1 73 1 120 7 
111 6 156 1 300 12 256 1 346 4 200 1 21 2 22 1 5 5 23 2 73 2 263 1 120 25 209 1 165 2 170 2 213 2 310 1 270 2 175 1 128 2 363 1 131 5 132 13 294 1 195 2 59 2 364 1 108 1 
170 1 300 1 120 1 
132 1 73 1 120 1 
111 3 156 1 300 3 213 1 279 1 175 1 256 1 128 1 346 2 131 1 5 1 132 3 59 1 23 1 120 6 364 1 165 2 74 1 
170 1 156 1 213 1 157 1 300 2 175 1 337 1 324 1 128 1 256 1 290 1 131 1 132 3 315 1 73 1 120 5 364 1 165 2 
111 2 300 3 270 1 346 1 21 1 131 1 5 1 132 3 195 1 59 1 120 6 
111 2 156 1 300 2 310 1 175 1 256 1 346 1 136 1 200 1 21 1 132 1 59 1 195 1 120 3 364 1 209 1 165 2 
238 1 117 1 4 1 214 1 251 1 187 1 192 1 
238 1 344 1 214 1 192 1 177 1 117 1 202 1 4 1 251 1 252 1 187 1 235 1 
357 4 241 1 82 4 174 1 312 1 217 4 230 1 118 1 205 1 50 1 233 1 138 1 7 1 
357 2 82 2 30 1 217 2 34 1 230 1 249 1 50 1 205 2 71 1 138 1 223 1 121 1 153 1 
230 1 357 1 118 1 82 1 205 1 217 1 122 1 224 1 
230 1 357 2 101 1 29 1 82 2 205 1 50 1 233 1 138 1 217 2 353 1 
357 4 241 1 82 5 212 1 312 1 217 5 126 1 230 2 118 1 50 2 205 2 233 1 138 3 223 1 7 1 353 1 
357 4 241 1 82 5 212 1 144 1 312 1 217 5 230 2 118 1 50 2 205 2 233 1 138 3 223 1 7 1 353 1 
230 1 357 1 118 1 82 1 205 1 50 1 138 1 312 1 313 1 217 1 7 1 
238 1 357 1 306 1 41 1 82 1 158 1 322 1 217 1 192 2 117 1 230 1 118 1 130 1 50 1 205 1 138 1 153 1 187 2 
238 1 357 1 306 1 41 1 82 1 83 1 158 1 125 1 322 1 217 1 325 1 192 2 117 2 230 1 130 2 51 1 50 2 205 1 138 3 223 1 153 2 187 2 167 1 
82 2 41 1 83 1 158 1 322 1 325 1 19 1 230 1 117 2 205 1 50 2 51 1 138 3 187 2 167 1 238 1 357 2 174 1 125 1 217 2 192 2 130 2 223 1 153 2 
82 1 83 1 158 1 113 2 323 2 345 1 117 1 230 1 205 1 51 1 50 1 138 4 284 1 24 1 210 1 187 1 167 1 240 1 357 1 171 1 217 1 56 1 192 1 246 1 339 1 178 1 248 1 130 1 317 1 79 1 223 1 153 1 
82 1 83 1 158 1 113 2 323 2 345 1 117 1 230 1 205 1 51 1 50 1 138 4 284 1 24 1 187 1 167 1 240 1 357 1 171 1 309 1 217 1 56 1 192 1 246 1 178 1 248 1 130 1 317 1 79 1 223 1 153 1 
230 1 357 1 287 1 82 1 205 1 217 1 
197 1 357 6 287 1 82 7 212 1 30 1 42 1 54 1 126 1 217 7 176 1 230 2 118 2 101 1 50 2 205 3 233 1 71 1 138 3 353 1 153 1 
82 1 41 1 228 1 322 1 45 1 230 1 137 1 49 2 50 1 5 3 233 1 185 2 138 1 187 2 238 3 243 1 192 2 59 1 195 2 294 1 153 1 111 4 156 2 300 6 158 1 256 2 346 3 160 1 117 1 21 2 22 1 205 1 120 13 209 1 165 4 167 1 357 1 306 1 307 1 310 1 270 2 217 1 175 2 130 1 131 3 132 7 364 2 134 1 
82 1 276 5 323 3 5 2 138 2 284 2 332 2 139 1 187 1 240 1 56 2 246 1 192 1 194 2 147 1 248 1 149 1 195 1 299 2 65 1 158 1 113 3 345 1 117 1 118 1 201 4 21 1 261 2 22 1 24 1 164 1 166 1 167 1 357 1 171 1 309 1 215 1 270 1 217 1 127 1 178 1 77 1 130 1 131 2 222 1 317 2 79 1 
357 2 287 1 82 2 171 1 54 1 217 2 230 1 180 1 50 1 205 2 233 1 138 2 153 1 
238 1 357 1 41 1 82 1 158 1 322 1 217 1 192 2 19 1 117 1 230 1 118 1 130 1 50 1 205 1 138 1 153 1 187 2 
357 1 82 1 30 1 54 1 217 1 176 1 230 1 50 1 205 2 71 1 138 1 223 1 153 1 
342 1 1 2 87 1 281 1 
314 1 1 1 10 1 222 1 113 1 66 1 323 1 
87 1 281 1 
314 1 342 1 1 2 10 1 87 1 281 1 
198 1 3 1 362 1 348 1 267 1 124 1 112 1 31 1 
28 1 267 1 216 1 124 2 112 4 320 1 31 3 129 2 184 1 3 2 362 1 348 4 38 1 152 1 
198 1 267 1 124 1 112 2 277 1 31 1 326 1 129 1 3 1 362 1 348 2 25 1 
198 1 28 1 267 1 216 2 124 1 112 3 31 1 184 2 3 1 362 1 348 3 107 1 
103 1 31 2 62 1 183 2 
198 1 168 1 362 1 348 1 267 1 112 1 
198 1 3 1 182 1 362 1 348 2 267 1 124 1 112 2 31 1 129 1 
328 1 
198 1 3 1 362 1 348 1 267 1 124 1 112 1 31 1 
3 1 124 1 31 1 313 1 
3 1 362 1 348 1 267 1 124 1 112 1 31 1 
88 1 112 1 99 1 
198 1 28 1 267 1 216 2 124 1 112 3 31 1 76 1 184 1 3 1 362 1 348 3 
3 1 362 1 348 2 267 1 124 1 112 2 31 1 355 1 129 1 
198 1 218 1 362 1 348 1 267 1 320 1 112 1 31 1 63 1 98 1 141 1 
198 1 3 1 362 1 348 1 267 1 112 1 31 1 
198 1 3 2 362 1 348 1 267 1 124 1 112 1 
259 1 198 1 93 1 3 1 362 2 348 2 330 1 267 2 112 2 31 1 
198 1 3 1 182 1 362 1 348 3 232 1 267 1 124 1 320 1 112 3 31 2 152 1 129 2 
198 1 362 1 348 1 267 1 112 1 122 1 26 1 
198 1 85 1 267 2 124 1 112 4 320 1 31 2 129 2 3 1 362 2 348 4 152 1 355 1 
198 1 3 1 182 1 362 1 348 3 267 1 124 1 216 1 112 3 31 1 129 1 
38 1 320 1 31 1 152 1 
3 1 31 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,108,271,365) (37,108,271,365) (195,235,351) (195,235,351) (195,235,351) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,108,271,365) (37,108,271,365) (195,235,351) (195,235,351) (195,235,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,108,271,365) (37,108,271,365) (195,235,351) (195,235,351) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,108,271,365) (37,108,271,365) (195,235,351) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 68 111 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 1 198 1 365 2 17 1 37 2 38 1 108 3 346 2 44 3 271 1 286 1 375 1 194 1 
60 2 198 1 17 2 37 2 291 1 38 1 335 2 96 1 63 1 360 1 44 9 271 6 226 1 229 1 302 1 365 2 303 1 108 9 346 5 277 1 349 2 189 2 286 1 375 4 287 1 192 1 167 1 194 3 
60 2 198 1 17 2 37 2 291 1 38 1 335 2 96 1 63 1 360 1 44 9 271 6 226 1 229 1 302 1 365 2 303 1 108 9 346 5 277 1 349 2 189 2 286 1 375 4 287 1 192 1 167 1 194 3 
60 2 198 1 17 2 37 2 291 1 38 1 335 2 96 1 63 1 360 1 44 10 271 7 226 1 229 1 302 1 365 2 303 1 108 10 346 6 277 1 349 2 189 2 286 1 375 5 287 1 192 1 167 1 194 4 
60 2 198 1 17 2 37 2 291 1 38 1 335 2 96 1 360 1 44 7 271 4 226 1 229 1 302 1 365 2 303 1 108 7 346 4 277 1 349 1 189 2 286 1 375 3 287 1 192 1 167 1 194 2 
302 1 60 1 198 1 365 1 37 1 335 1 38 1 108 4 291 1 346 3 63 1 349 2 189 1 44 4 271 3 286 1 375 2 194 1 
339 1 198 1 231 1 199 1 365 1 17 1 37 1 38 1 108 2 335 1 346 1 189 1 44 2 286 1 226 1 287 1 
302 1 229 1 60 1 198 1 303 1 365 2 17 1 37 2 335 1 291 1 38 1 108 9 221 1 346 5 63 1 349 2 139 1 189 1 44 9 271 7 286 1 375 4 192 1 194 3 
302 1 229 1 60 1 198 1 303 1 365 2 17 1 37 2 335 1 291 1 38 1 108 9 221 1 346 5 63 1 349 2 139 1 189 1 44 9 271 7 286 1 375 4 192 1 194 3 
262 1 297 1 33 1 
297 1 201 2 157 1 
46 2 227 1 171 2 67 2 248 2 298 1 80 2 353 2 
218 1 90 1 171 3 238 1 312 1 124 1 357 1 39 1 173 1 358 2 66 2 130 2 67 2 248 2 298 1 22 1 158 1 318 1 4 2 46 3 7 1 47 1 227 1 228 1 363 1 206 1 163 1 80 2 254 1 213 1 84 1 330 1 331 2 166 1 353 2 309 1 216 1 
46 1 171 1 140 1 67 1 248 1 298 1 80 1 353 1 110 1 245 1 
46 1 262 1 171 1 107 1 80 1 268 1 110 1 279 1 297 1 118 1 308 1 100 1 86 1 72 1 
46 1 262 1 171 1 107 2 80 1 268 1 110 1 279 1 67 1 297 1 248 1 308 1 100 1 353 1 72 2 
144 1 107 1 72 1 274 1 321 1 
354 1 262 1 297 1 144 1 338 1 107 2 72 2 274 1 
144 1 107 1 72 1 
46 1 171 1 239 1 107 1 80 1 274 1 110 1 245 1 140 1 67 1 248 1 298 1 353 1 72 1 
297 1 
262 1 311 1 297 1 144 1 338 1 107 2 72 2 274 1 
262 1 170 1 107 5 200 2 242 1 274 2 202 1 128 1 322 1 112 1 113 1 180 1 85 2 297 1 374 2 132 1 338 1 144 2 72 5 
179 1 324 1 371 1 
47 1 46 2 7 1 171 2 312 1 124 1 80 1 173 1 358 1 254 1 179 1 66 1 130 1 181 1 330 1 248 1 270 1 22 1 166 1 353 1 
227 1 33 1 
46 2 227 2 171 2 80 2 275 1 67 1 248 1 352 1 353 1 
46 3 227 1 171 3 67 1 248 3 270 1 80 3 353 3 
46 1 171 1 140 1 248 1 80 1 353 1 110 1 
46 1 171 1 67 1 248 1 352 1 80 1 353 1 110 1 275 1 
218 1 90 1 171 4 312 1 238 1 124 1 61 1 173 1 358 1 268 1 66 1 130 1 67 2 181 1 248 3 270 1 100 1 298 1 22 1 158 1 72 1 4 2 47 1 46 4 7 1 227 1 228 1 363 1 367 1 107 1 163 1 80 3 254 1 110 1 279 1 84 1 330 1 308 1 331 1 352 1 166 1 353 3 309 1 216 1 
46 2 227 1 171 2 248 1 118 1 232 1 270 1 80 2 353 1 
46 3 171 3 61 1 107 1 80 3 268 1 110 1 269 1 279 1 67 1 181 1 297 1 248 3 308 1 270 2 352 1 100 1 353 3 72 1 
46 2 171 2 80 2 179 1 324 1 67 1 248 2 270 1 352 1 353 2 
46 1 7 1 47 1 227 1 171 1 312 1 124 1 358 1 173 1 254 1 66 1 130 1 330 1 166 1 22 1 
46 1 7 1 227 1 171 1 312 1 313 1 124 1 358 1 173 1 254 1 66 1 130 1 330 1 22 1 261 1 
90 2 228 1 363 1 39 2 233 1 255 1 125 1 256 1 179 2 54 1 324 2 371 2 84 1 331 4 155 1 101 1 142 1 23 1 332 1 158 1 4 2 216 1 309 1 25 1 
46 1 279 1 171 1 248 1 94 1 80 1 353 1 110 1 
46 5 220 1 227 1 171 5 232 1 80 5 164 1 67 1 181 1 248 4 118 1 270 2 352 1 353 4 
46 2 171 2 140 1 248 2 94 1 80 2 353 2 110 1 
46 1 7 1 47 1 227 1 171 1 312 1 124 1 188 1 358 1 173 1 254 1 66 1 130 1 330 1 166 1 22 1 
355 1 204 1 
355 1 204 1 
149 1 217 1 
149 1 217 1 
149 1 217 1 
97 1 355 1 204 1 
97 1 355 1 204 1 
97 1 355 1 204 1 
355 1 204 1 62 1 
355 1 204 1 62 1 
355 1 204 1 62 1 
355 1 141 1 204 1 
355 2 149 1 204 2 260 1 320 1 217 1 
76 2 355 2 252 3 123 2 50 1 107 2 292 1 295 1 14 1 327 2 317 1 297 1 373 2 204 2 260 1 190 1 72 2 58 1 146 2 
46 2 76 1 227 1 171 2 355 1 252 1 123 1 207 1 9 1 107 1 80 2 294 1 138 1 317 1 327 1 329 1 248 2 141 1 204 1 353 2 134 1 72 1 146 1 169 1 
189 1 60 1 335 1 
189 1 199 1 335 1 
246 1 98 1 60 2 199 1 335 3 379 1 
98 1 60 1 199 1 335 2 119 1 379 1 
98 1 60 1 199 1 335 2 379 2 
262 1 201 3 200 1 242 1 19 1 125 1 202 3 41 1 297 2 101 1 338 1 157 1 134 1 133 1 72 5 25 1 6 1 187 2 8 1 107 5 274 4 255 1 138 1 322 2 85 1 329 1 374 1 117 1 144 1 214 2 168 1 89 2 
262 1 201 6 200 2 242 1 176 4 125 2 202 6 41 2 3 1 297 4 132 1 101 2 338 1 157 2 133 2 72 8 25 2 6 1 8 2 342 1 107 8 274 6 255 2 321 4 138 4 276 1 322 4 29 1 85 2 374 2 143 1 144 5 214 4 193 1 89 4 
262 1 200 1 201 4 125 1 202 3 41 1 297 3 132 1 101 1 157 2 72 3 133 1 25 1 8 1 187 1 107 3 274 2 255 1 138 1 322 2 85 1 117 1 374 1 214 2 168 1 89 2 
201 4 200 1 125 1 202 3 41 1 297 2 132 1 101 1 157 2 72 3 133 1 25 1 8 1 187 1 107 3 274 2 255 1 138 2 276 1 322 2 29 1 85 1 374 1 117 1 214 2 193 1 168 1 89 2 
251 1 330 1 33 1 
330 1 185 1 
307 1 
330 1 173 1 
251 2 330 3 230 1 124 1 173 1 191 1 
330 1 124 1 173 1 
136 1 330 1 
90 3 147 1 48 1 197 1 208 1 39 4 2 1 255 1 256 2 348 2 212 1 249 1 331 7 142 3 56 1 5 1 25 1 
90 3 147 1 48 1 197 1 208 1 39 4 2 1 255 1 256 2 348 2 212 1 249 1 331 7 142 3 56 1 5 1 25 1 
90 3 147 1 48 1 197 1 208 1 39 4 2 1 255 1 256 2 348 2 212 1 249 1 331 7 142 3 56 1 5 1 288 1 25 1 
147 2 90 15 121 1 197 1 39 16 2 1 125 3 316 1 249 2 101 3 70 4 158 1 133 3 4 2 5 5 25 4 48 1 228 1 340 1 341 1 208 1 344 1 255 4 82 3 368 1 348 3 256 5 212 2 331 31 56 2 142 10 88 1 309 1 216 1 
147 1 90 4 48 1 228 2 265 1 91 1 208 1 344 1 39 5 2 1 255 1 256 3 348 2 212 1 249 1 331 9 56 1 142 4 158 2 4 4 216 2 309 2 5 1 25 1 
195 1 237 1 17 1 365 1 37 1 38 1 108 2 336 1 358 1 244 1 66 1 130 1 351 1 44 1 154 1 271 1 24 1 102 1 235 1 
195 1 17 1 365 1 37 1 38 1 108 2 336 1 358 1 244 1 152 1 66 1 130 1 351 1 44 1 154 1 271 1 24 1 102 1 235 1 
237 1 17 1 365 1 162 1 37 1 108 3 336 1 358 1 175 1 244 1 66 1 130 1 351 1 44 2 154 1 271 2 24 1 102 1 235 1 
237 1 17 1 162 1 108 2 336 1 358 1 244 1 66 1 130 1 44 1 154 1 271 2 24 1 235 1 
361 1 7 1 148 1 17 2 365 1 37 1 108 1 173 1 358 1 254 1 244 2 175 1 127 1 15 1 323 1 66 1 130 1 330 1 44 1 154 2 131 1 22 1 24 2 
334 1 
0 1 148 1 201 2 200 1 95 1 242 1 202 2 297 2 100 1 338 3 157 2 103 2 7 2 46 1 8 1 161 1 107 5 254 1 110 1 211 1 15 1 257 2 115 2 55 2 118 1 308 1 262 1 310 1 171 1 172 1 314 1 173 1 358 2 268 1 65 2 66 2 130 2 224 2 22 1 225 1 72 5 73 1 135 4 79 1 80 1 27 1 322 2 28 1 279 1 85 1 330 1 374 1 144 6 86 1 378 2 
171 1 311 1 268 1 65 1 100 1 338 1 72 3 73 1 46 1 135 2 79 1 107 3 80 1 110 1 27 1 211 1 28 1 279 1 118 1 308 1 144 2 86 1 
262 1 171 1 311 1 268 1 297 1 100 1 338 1 72 3 73 1 46 1 135 3 79 1 107 3 80 1 110 1 27 1 211 1 28 1 279 1 257 1 118 1 308 1 144 1 86 1 
262 1 171 1 311 1 268 1 65 1 297 1 100 1 338 1 72 3 73 1 46 1 135 3 79 1 107 3 80 1 110 1 27 1 211 1 28 1 279 1 257 1 118 1 308 1 144 2 86 1 378 1 
0 1 200 1 95 1 242 1 202 1 297 5 100 1 337 1 338 3 103 2 157 2 46 1 107 5 110 1 211 1 257 4 258 1 114 1 115 2 55 2 308 1 118 1 262 5 171 1 311 1 268 1 65 4 224 2 72 5 73 1 135 6 79 1 80 1 27 1 28 1 322 1 279 1 326 1 282 1 85 1 374 1 144 7 86 1 378 4 
262 1 310 1 171 1 0 1 201 2 200 1 95 1 242 1 268 1 202 1 65 2 224 2 297 2 100 1 338 2 157 2 103 2 72 4 73 1 46 1 135 4 79 1 107 4 80 1 110 1 27 1 211 1 322 1 28 1 279 1 257 2 115 2 85 1 55 2 374 1 118 1 308 1 144 4 86 1 378 2 
262 1 0 1 171 1 200 1 95 1 268 1 242 1 202 1 65 2 224 2 297 1 100 1 337 1 338 2 157 2 103 2 72 4 73 1 46 1 135 4 79 1 107 4 80 1 110 1 27 1 211 1 322 1 28 1 279 1 257 2 282 1 115 2 85 1 114 1 55 2 118 1 308 1 374 1 144 4 86 1 378 2 
262 1 0 1 171 1 200 1 95 1 268 1 242 1 202 1 65 2 224 2 297 1 100 1 337 1 338 2 157 2 103 2 72 4 73 1 46 1 135 4 79 1 107 4 80 1 110 1 27 1 211 1 322 1 28 1 279 1 257 2 282 1 115 2 85 1 114 1 55 2 118 1 308 1 374 1 144 4 86 1 378 2 
262 1 196 2 171 1 93 1 201 2 200 1 95 1 268 1 242 1 202 1 65 2 297 1 100 1 338 2 71 2 103 2 72 4 73 1 46 1 135 4 79 1 107 4 80 1 52 1 110 1 27 1 211 1 322 1 28 1 279 1 257 2 282 1 85 1 55 2 118 1 308 1 374 1 144 4 86 1 215 1 378 2 
262 1 0 1 171 1 200 1 95 1 242 1 268 1 202 1 65 3 224 2 297 1 100 1 337 1 338 2 157 2 103 2 72 4 73 1 46 1 135 5 79 1 107 4 80 1 110 1 27 1 211 1 322 1 28 1 279 1 282 1 257 3 115 2 85 1 114 1 258 1 55 2 374 1 118 1 308 1 144 5 86 1 378 3 
262 1 0 1 171 1 200 1 95 1 242 1 268 1 202 1 65 3 224 2 297 1 100 1 337 1 338 2 157 2 103 2 72 4 73 1 46 1 135 5 79 1 107 4 80 1 110 1 27 1 211 1 322 1 28 1 279 1 282 1 257 3 115 2 85 1 114 1 258 1 55 2 374 1 118 1 308 1 144 5 86 1 378 3 
262 1 310 1 196 2 171 1 201 2 200 1 95 1 242 1 268 1 202 1 65 2 297 1 100 1 338 2 71 2 103 2 72 4 73 1 46 1 135 4 79 1 107 4 80 1 52 1 110 1 27 1 211 1 322 1 28 1 279 1 257 2 85 1 55 2 374 1 118 1 308 1 144 4 86 1 378 2 
147 1 90 3 39 3 2 1 179 1 158 1 4 2 25 1 48 1 228 1 227 2 363 1 208 1 233 1 255 1 256 2 348 1 324 1 371 1 84 1 331 6 56 1 142 2 309 1 216 1 33 1 
121 1 90 6 39 8 126 1 125 1 179 11 21 1 299 1 101 2 70 3 158 2 184 1 133 2 4 4 5 1 25 2 227 1 228 2 363 2 49 1 163 1 255 1 82 3 256 1 371 11 324 4 213 1 84 1 331 14 142 2 88 1 309 2 216 2 
90 1 171 2 312 1 124 1 173 1 358 1 39 1 223 1 66 1 130 1 181 1 248 1 270 1 299 1 22 1 158 1 4 2 47 1 7 1 46 2 227 1 228 1 363 1 80 1 163 1 188 1 254 1 83 1 324 1 84 1 213 1 330 1 331 2 166 1 353 1 216 1 309 1 120 1 
147 1 90 10 237 1 241 1 39 10 2 1 40 1 248 1 299 1 101 2 158 3 4 6 5 4 7 1 46 3 47 2 48 1 208 1 163 1 254 2 255 3 348 1 256 4 350 2 213 1 56 1 166 2 353 1 309 3 216 3 218 2 171 3 312 2 124 2 358 3 173 2 125 2 179 7 66 3 130 3 181 1 270 1 22 2 133 2 25 3 227 2 228 3 363 3 80 1 137 2 278 2 371 7 324 7 84 3 330 2 331 20 285 2 142 8 377 1 
228 1 363 1 39 2 233 1 179 1 324 1 371 1 84 1 331 2 142 1 101 1 158 1 332 1 4 2 216 1 309 1 5 1 25 1 
90 2 228 1 363 1 233 1 255 1 125 1 256 1 179 1 324 1 371 1 84 1 331 2 155 1 142 1 158 1 4 2 216 1 309 1 
90 2 228 1 363 1 39 2 255 1 233 1 125 1 256 1 179 2 324 2 371 2 84 1 331 4 142 2 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
228 1 363 1 39 2 179 1 324 1 371 1 84 1 331 2 142 1 31 1 101 1 158 1 332 1 4 2 216 1 309 1 5 1 25 1 
90 2 228 1 363 1 255 1 125 1 256 1 179 1 324 1 371 1 84 1 331 2 155 1 142 1 31 1 158 1 4 2 216 1 309 1 
90 2 228 1 363 1 39 2 255 1 125 1 256 1 179 2 324 2 371 2 84 1 331 4 142 2 31 1 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
90 2 228 1 363 1 39 2 255 1 125 1 256 1 179 2 324 2 371 2 84 1 331 4 142 2 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
218 1 90 1 171 1 312 1 124 1 39 1 173 1 358 1 66 1 130 1 22 1 158 1 4 2 47 1 7 1 46 1 227 1 228 1 363 1 163 1 254 1 213 1 84 1 330 1 331 2 166 1 216 1 309 1 
90 1 171 1 312 1 313 1 124 1 39 1 173 1 358 1 66 1 130 1 22 1 158 1 4 2 7 1 46 1 227 1 228 1 363 1 163 1 254 1 213 1 84 1 330 1 165 1 331 2 261 1 216 1 309 1 
90 2 228 1 363 1 39 2 255 1 125 1 256 1 179 2 324 2 371 2 84 1 331 4 299 1 142 2 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
218 1 90 2 171 1 312 1 124 1 39 2 358 1 173 1 125 1 179 2 152 1 66 1 130 1 101 1 22 1 158 1 133 1 4 2 5 1 25 1 47 1 46 1 228 1 363 1 254 1 255 1 256 1 278 1 324 2 371 2 84 1 330 1 331 4 142 2 166 1 216 1 309 1 
90 1 171 1 39 2 125 1 179 1 67 1 248 1 205 1 299 1 101 1 158 1 133 1 4 2 5 1 25 1 46 1 228 1 363 1 80 1 255 1 371 1 324 1 84 1 352 1 331 3 142 1 353 1 309 1 216 1 
90 2 171 1 39 1 125 1 179 1 67 1 248 1 299 1 101 1 158 1 133 1 4 2 25 1 46 1 228 1 363 1 80 1 255 1 256 1 324 1 371 1 84 1 352 1 331 3 142 1 353 1 309 1 216 1 32 1 
122 1 90 1 237 1 171 1 148 1 357 2 18 1 358 7 39 1 173 2 178 1 152 1 66 8 130 8 248 1 270 1 22 2 158 2 4 4 46 1 7 2 228 2 363 2 160 1 343 1 80 1 163 1 254 2 233 1 15 1 372 1 84 2 213 1 330 3 331 2 31 1 353 1 309 2 216 2 
147 1 121 3 90 21 263 1 35 1 265 1 36 1 39 20 2 1 222 1 125 4 129 1 203 1 99 1 69 1 101 4 70 4 158 3 300 1 133 4 4 6 5 4 25 5 48 1 228 3 78 4 208 1 344 1 10 1 345 1 255 5 82 3 348 1 256 4 306 2 30 1 234 1 331 41 56 1 142 8 88 1 309 3 216 3 
147 1 121 3 90 18 263 1 35 1 265 1 36 1 39 20 2 1 222 1 125 3 129 1 203 1 99 1 69 1 101 4 70 4 158 4 300 1 133 4 4 8 5 3 25 5 48 1 228 4 78 4 208 1 344 2 10 1 345 1 255 4 82 3 348 1 256 4 306 2 30 1 234 1 331 38 56 1 142 7 88 1 309 4 216 4 
147 1 121 2 90 25 263 1 35 1 265 1 36 1 39 27 2 1 222 1 125 7 21 2 203 1 99 1 69 1 101 7 70 4 158 2 300 1 133 7 4 4 5 7 25 8 48 1 228 2 78 4 208 1 344 1 345 1 255 8 82 4 348 1 256 7 306 1 30 1 234 1 331 52 56 1 142 14 88 2 309 2 216 2 
121 1 90 10 263 1 35 1 265 1 39 9 125 3 203 1 99 2 101 3 70 2 158 2 300 1 133 3 4 4 5 3 25 3 228 2 78 2 10 1 255 3 82 1 256 3 306 1 331 19 142 6 16 1 88 1 309 2 216 2 
90 12 121 2 263 1 35 2 265 1 36 1 39 14 222 1 125 2 203 1 99 1 69 1 101 3 70 2 158 3 300 1 133 3 4 6 5 2 25 3 228 3 78 4 344 2 345 1 255 2 82 2 256 2 306 2 30 1 234 1 331 26 142 4 309 3 216 3 
14 1 76 1 355 1 327 1 123 1 204 1 319 1 260 1 58 1 146 1 
76 1 355 1 252 2 123 1 50 1 107 1 292 1 14 1 317 1 327 1 297 1 373 1 204 1 260 1 190 1 72 1 58 1 146 1 
76 1 355 1 252 2 123 1 50 1 107 1 292 1 14 1 317 1 327 1 297 1 373 1 204 1 260 1 190 1 72 1 58 1 146 1 
76 1 355 1 252 2 123 1 50 1 107 1 292 1 14 1 317 1 327 1 297 1 373 1 204 1 260 1 190 1 72 1 58 1 146 1 
97 1 253 1 320 1 
97 1 253 1 320 1 
186 1 62 1 
186 1 62 1 320 1 
207 1 294 1 
171 2 355 1 123 1 294 1 248 2 204 1 72 1 134 1 46 2 76 1 227 1 77 1 252 1 9 1 207 1 107 1 80 2 274 1 138 1 327 1 373 1 329 1 141 1 190 1 353 2 146 1 169 1 
97 1 253 1 
186 1 62 1 320 1 
141 1 169 1 
76 1 42 1 355 1 362 1 327 1 1 1 123 1 204 1 146 1 
90 1 289 1 171 2 357 2 18 1 173 1 39 1 358 2 66 2 130 2 299 1 22 1 158 1 4 2 104 1 105 1 46 2 228 1 363 1 343 1 80 2 163 1 109 1 254 1 116 1 84 1 213 1 330 1 331 2 216 1 309 1 
53 1 66 1 237 1 280 1 130 1 336 1 102 1 358 1 210 1 244 1 
237 1 358 2 336 1 210 1 244 1 53 1 152 1 66 2 280 1 130 2 102 1 
237 1 364 1 358 1 336 1 244 1 66 1 280 1 130 1 102 1 
7 1 148 1 173 1 358 1 254 1 244 1 13 1 53 1 66 1 323 1 15 1 130 1 330 1 22 1 
264 1 
322 1 262 1 113 1 180 1 297 1 33 1 202 1 
262 1 0 1 200 1 201 1 242 1 202 1 224 1 297 2 338 1 157 1 72 1 107 1 322 1 115 1 85 1 374 1 144 1 
7 1 124 1 200 1 173 1 358 1 242 1 254 1 20 1 66 1 325 1 130 1 85 1 330 2 374 1 22 2 191 1 185 1 
59 1 121 1 219 2 262 2 36 1 172 1 201 6 200 2 242 2 222 1 202 8 125 2 297 5 338 1 101 2 70 1 157 3 72 1 133 2 25 2 272 1 8 1 107 1 345 1 255 2 82 1 304 1 322 5 85 2 30 1 234 1 374 2 144 1 214 5 89 5 
59 1 147 1 219 2 171 1 239 1 200 1 315 1 242 1 2 1 202 2 245 1 67 1 248 1 298 1 72 1 25 2 46 1 107 1 80 1 110 1 255 1 322 2 140 1 85 1 114 1 374 1 56 1 353 1 
262 1 200 1 242 1 202 1 322 1 113 1 180 1 85 1 297 1 374 1 
59 1 219 2 201 10 255 2 125 2 202 5 322 5 350 1 297 5 101 2 214 5 157 5 133 2 25 2 89 5 
218 1 90 1 171 3 238 1 312 1 124 1 358 1 173 1 66 1 130 1 67 2 248 2 298 1 22 1 158 1 4 2 7 1 46 3 47 1 227 1 228 1 363 1 163 1 80 2 254 1 84 1 330 1 331 1 166 1 353 2 309 1 216 1 
262 2 8 1 201 4 200 1 172 1 242 1 202 1 348 1 322 2 85 1 297 4 374 1 214 2 157 2 89 2 
262 1 297 1 107 1 144 1 338 1 72 1 
148 1 314 1 200 2 172 2 173 1 358 3 242 1 202 1 177 1 66 3 130 3 68 1 132 1 22 1 338 2 225 1 72 3 7 2 8 1 366 1 107 3 254 1 111 1 322 2 15 1 85 2 330 1 374 2 144 4 
347 1 123 1 146 1 
347 1 123 1 146 1 
347 1 123 1 146 1 
123 1 45 1 146 1 
123 1 45 1 146 1 
123 1 45 1 146 1 
123 1 146 1 
355 1 204 1 
123 1 293 1 58 1 294 1 146 1 
90 4 121 1 147 1 265 1 39 4 2 1 70 1 158 1 4 2 25 1 228 1 48 1 208 1 255 1 82 1 348 1 256 2 234 1 331 8 56 1 142 2 309 1 216 1 
147 1 90 5 121 1 265 1 92 1 39 6 2 1 101 1 70 2 158 2 133 1 4 4 5 1 25 2 48 1 228 2 208 1 255 1 82 1 348 1 256 2 234 1 331 11 56 1 142 3 88 1 309 2 216 2 
147 1 90 10 121 1 92 1 265 1 36 1 39 9 2 1 222 1 125 2 101 2 70 1 158 3 133 2 4 6 5 1 25 3 48 1 228 3 208 1 344 1 345 1 255 3 82 1 348 1 256 3 30 1 234 1 331 19 56 1 142 4 309 3 216 3 
147 1 90 7 121 1 92 1 265 1 36 1 39 10 2 1 222 1 125 1 101 2 70 1 158 3 133 2 4 6 5 2 25 3 48 1 228 3 208 1 344 1 345 1 255 2 82 1 348 1 256 3 30 1 234 1 331 17 56 1 142 5 309 3 216 3 
90 4 121 1 147 1 265 1 39 4 2 1 70 1 158 1 4 2 25 1 228 1 48 1 208 1 255 1 82 1 348 1 256 2 234 1 331 8 56 1 142 2 309 1 216 1 
90 6 121 1 265 1 36 1 39 6 222 1 125 2 101 2 70 1 158 1 133 2 4 2 5 1 25 2 228 1 345 1 255 2 82 1 256 1 30 1 234 1 331 12 142 2 309 1 216 1 
147 1 90 8 121 1 92 1 265 1 36 1 39 10 2 1 222 1 125 1 101 2 70 1 158 4 133 2 4 8 5 2 25 3 48 1 228 4 208 1 344 2 345 1 255 2 82 1 348 1 256 3 30 1 234 1 331 18 56 1 142 5 309 4 216 4 
90 7 121 1 265 1 36 1 39 9 222 1 125 2 101 3 70 1 158 4 133 3 4 8 5 3 25 3 228 4 344 2 345 1 10 1 255 2 82 1 256 3 30 1 234 1 331 16 142 6 309 4 216 4 
90 4 147 3 48 2 208 1 39 3 2 1 255 1 256 3 331 7 56 3 142 6 5 3 25 1 
147 1 90 8 121 1 265 1 36 1 39 10 2 1 222 1 125 1 101 2 70 1 158 4 133 2 4 8 5 1 25 3 48 1 228 4 208 1 344 2 345 1 10 1 255 2 82 1 348 1 256 3 30 1 234 1 331 18 56 1 142 4 309 4 216 4 
90 4 147 1 228 2 48 1 208 1 344 1 39 4 2 1 255 1 348 1 256 2 331 8 142 3 56 1 158 2 4 4 216 2 309 2 5 1 25 1 
90 3 147 1 48 1 208 1 39 3 2 1 255 1 348 1 256 2 331 6 56 1 142 2 33 1 25 1 
90 2 228 1 92 1 39 2 255 1 125 1 256 1 331 4 142 2 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
121 1 90 4 39 3 255 1 125 1 82 1 256 1 331 7 101 1 142 2 70 2 88 1 133 1 5 1 25 1 
147 2 90 12 39 11 2 1 125 2 21 1 101 2 70 2 158 2 133 2 184 1 4 4 5 4 25 3 48 1 228 2 208 1 344 2 11 1 255 3 82 2 348 1 256 5 331 23 56 2 142 9 88 1 216 2 309 2 
90 1 331 1 70 1 
331 1 39 1 82 1 
90 3 228 1 92 1 39 3 255 1 125 1 256 2 350 1 331 6 101 1 142 3 158 1 133 1 309 1 216 1 4 2 5 1 25 1 
90 6 121 1 265 1 36 1 39 6 222 1 125 2 101 2 70 1 158 1 133 2 4 2 5 1 25 2 228 1 345 1 255 2 82 1 256 1 30 1 234 1 331 12 142 2 309 1 216 1 
90 3 147 1 39 3 2 1 255 1 256 1 331 6 56 1 142 2 5 1 25 1 
147 1 90 2 48 1 228 1 208 1 344 1 39 1 11 1 256 1 331 3 142 2 56 1 158 1 4 2 216 1 309 1 5 1 
147 2 90 5 228 1 265 1 315 1 39 5 2 1 255 2 256 3 331 10 56 2 142 5 158 1 309 1 216 1 4 2 5 2 25 2 
228 1 265 1 39 2 331 2 101 1 142 1 158 1 4 2 216 1 309 1 5 1 25 1 
90 2 228 1 265 1 39 2 255 1 125 1 256 1 331 4 142 2 101 1 158 1 133 1 4 2 216 1 309 1 5 1 25 1 
90 2 147 1 228 3 265 1 344 1 11 1 10 1 39 1 256 1 331 3 56 1 142 2 158 3 4 6 216 3 309 3 5 1 
147 3 90 18 121 1 92 1 265 1 39 16 2 2 316 1 125 3 101 3 70 4 158 5 133 3 4 10 5 5 25 5 48 1 228 5 341 1 208 1 344 2 11 1 10 1 255 5 368 1 82 3 348 1 256 7 331 34 56 3 142 12 88 1 309 5 216 5 
46 1 227 1 171 1 118 1 232 1 80 1 159 1 
46 1 227 1 171 1 232 1 80 1 151 1 81 1 64 1 359 1 284 1 118 1 159 1 
7 1 189 1 66 1 130 1 199 1 22 1 335 1 358 1 254 1 236 1 
152 1 237 1 66 2 130 2 116 1 330 1 343 1 22 1 173 1 358 2 254 1 
7 1 15 1 66 1 148 1 130 1 330 1 22 1 173 1 358 1 254 1 33 1 
46 2 7 1 47 1 227 1 171 2 312 1 124 1 80 1 173 1 358 1 254 1 66 1 130 1 330 1 248 1 270 1 22 1 353 1 
46 2 47 1 227 1 171 2 312 1 136 1 124 2 366 1 80 2 173 2 358 1 254 1 110 1 279 1 66 1 130 1 182 1 330 3 248 1 270 1 100 1 22 1 353 2 
171 2 312 1 313 1 124 2 358 2 173 2 66 2 130 2 182 1 248 1 270 1 100 1 22 1 46 2 227 1 136 1 366 1 51 1 80 2 254 1 110 1 279 1 330 3 353 2 
262 1 124 1 358 3 173 1 66 3 130 3 182 1 297 1 22 1 72 2 185 1 7 1 251 1 136 1 366 1 107 2 51 1 26 1 254 1 283 1 330 4 308 1 144 1 
7 1 262 1 251 1 136 1 356 1 124 1 366 1 107 2 51 1 173 1 358 3 254 1 66 3 130 3 182 1 297 1 330 4 308 1 22 1 144 1 72 2 185 1 
178 1 66 1 130 1 22 1 358 1 254 1 
122 1 7 2 237 1 160 1 357 1 343 1 124 1 358 6 173 2 12 1 254 2 178 1 152 1 296 1 66 7 372 1 130 7 330 3 22 3 191 1 183 1 
147 1 90 3 39 3 2 1 152 1 248 1 299 1 158 2 4 4 104 1 47 1 46 2 48 1 208 1 254 1 255 1 256 2 348 1 166 1 56 1 353 1 309 2 216 2 218 1 171 2 312 1 124 1 358 1 173 1 179 1 66 1 130 1 270 1 22 1 25 1 228 2 227 2 363 2 80 1 278 1 324 1 371 1 84 2 330 1 285 1 331 6 142 2 
262 1 34 1 356 1 200 2 358 1 242 2 202 1 177 1 66 1 180 1 130 1 297 1 338 1 72 3 185 1 7 1 106 1 251 1 107 3 274 1 322 1 113 1 85 2 330 2 374 2 308 1 144 2 145 1 
251 1 124 1 358 2 173 1 254 1 178 1 152 1 66 2 325 1 130 2 330 2 22 2 191 1 
333 1 7 1 148 1 51 1 358 4 173 1 254 1 152 1 66 4 15 1 130 4 330 1 22 1 
366 1 266 1 124 1 358 2 173 1 40 1 254 1 296 1 66 2 130 2 153 1 330 1 22 2 183 1 
333 1 7 1 122 1 148 1 160 1 366 1 343 1 358 4 173 2 254 2 152 1 15 1 66 5 130 5 330 3 22 2 
333 1 7 1 122 1 148 1 366 1 343 1 358 4 173 2 254 2 152 1 369 1 15 1 66 5 130 5 330 3 22 2 
46 2 7 1 227 1 171 2 312 1 313 1 124 1 80 1 173 1 358 1 254 1 66 1 130 1 330 1 248 1 270 1 22 1 353 1 
366 1 124 1 358 1 173 1 12 1 254 1 296 1 66 1 130 1 330 1 22 2 191 1 183 1 
46 1 289 1 305 1 171 1 240 1 80 1 156 1 109 1 105 1 
75 1 43 1 156 1 
227 1 305 1 240 1 156 1 57 1 
75 1 227 1 262 1 240 2 61 1 107 2 268 1 274 1 110 1 279 1 305 2 43 1 328 1 297 1 308 1 100 1 156 1 72 2 57 2 
198 2 267 1 365 1 37 1 108 4 346 3 370 1 44 4 271 2 286 2 375 1 287 1 376 1 194 1 
150 1 198 1 365 1 37 1 38 1 108 2 221 1 346 1 247 1 44 2 271 1 286 1 
301 1 370 1 198 1 44 3 365 1 37 1 286 1 108 3 38 1 287 2 376 2 346 1 
74 2 290 1 209 1 346 2 
44 1 365 1 37 1 108 1 38 1 174 1 
198 1 44 2 303 1 365 1 271 1 37 1 286 1 108 2 38 1 346 1 
259 1 
198 1 44 1 365 1 37 1 286 1 108 1 38 1 346 1 
198 1 286 1 33 1 346 1 
198 1 44 1 365 1 37 1 286 1 108 1 346 1 
154 1 44 1 17 1 
198 1 365 1 37 1 38 1 108 3 346 1 370 1 44 3 286 1 87 1 287 2 376 1 
349 1 198 1 44 2 365 1 271 1 37 1 286 1 108 2 346 1 
60 1 365 1 37 1 38 1 108 1 291 1 335 1 346 1 189 1 44 1 375 1 
44 1 365 1 37 1 286 1 108 1 38 1 346 1 
198 1 44 1 365 1 37 1 286 2 108 1 38 1 
365 2 273 1 37 2 38 1 108 2 346 1 281 1 44 2 286 1 250 1 
198 1 365 1 303 1 37 1 38 1 108 3 346 2 44 3 271 2 286 1 375 1 192 1 194 1 
60 1 198 1 199 1 365 1 37 1 335 2 38 1 108 2 243 1 346 1 246 1 189 1 44 2 271 1 286 1 
198 1 365 2 37 2 38 1 108 4 346 2 63 1 349 1 44 4 271 2 286 1 375 1 194 1 
198 1 44 1 365 1 37 1 286 1 108 1 38 1 346 1 
198 1 44 3 303 1 365 1 271 1 37 1 286 1 108 3 38 1 287 1 346 1 
267 1 375 1 346 1 194 1 
286 1 346 1 

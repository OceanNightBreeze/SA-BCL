#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 112 2 137 9 69 4 226 1 365 1 71 1 45 1 47 1 230 2 75 3 54 2 250 1 20 6 317 1 22 1 266 2 346 1 57 1 29 1 191 2 150 2 169 2 348 1 31 1 60 9 194 1 34 5 
218 1 112 2 137 9 69 4 226 1 365 1 71 1 45 1 47 1 230 2 75 3 54 2 250 1 20 6 317 1 22 1 266 2 346 1 57 1 29 1 150 2 191 2 169 2 348 1 31 1 60 9 194 1 34 5 
218 1 112 2 137 10 69 5 226 1 365 1 71 1 45 1 47 1 230 2 75 4 54 2 250 1 20 7 317 1 22 1 266 2 346 1 57 1 29 1 150 2 191 2 169 2 348 1 31 1 60 10 194 1 34 6 
218 1 112 1 137 7 69 3 226 1 365 1 71 1 45 1 47 1 230 2 75 2 54 2 250 1 20 4 317 1 266 2 346 1 57 1 29 1 150 2 191 2 169 2 348 1 31 1 60 7 194 1 34 4 
54 1 250 1 112 2 20 3 22 1 266 1 137 4 346 1 69 2 191 1 29 1 150 1 365 1 71 1 230 1 60 4 75 1 34 3 
218 1 54 1 250 1 145 1 266 1 137 2 362 1 226 1 191 1 365 1 71 1 169 1 230 1 337 1 60 2 34 1 
250 1 20 1 137 3 69 1 191 2 365 1 71 1 169 1 230 2 60 3 194 1 75 1 34 2 
111 1 112 2 137 9 69 4 365 1 71 1 47 1 230 2 75 3 247 1 54 1 250 1 20 7 317 1 22 1 266 1 346 1 191 2 29 1 150 1 169 1 60 9 194 1 34 5 
111 1 112 2 137 9 69 4 365 1 71 1 47 1 230 2 75 3 247 1 54 1 250 1 20 7 317 1 22 1 266 1 346 1 191 2 29 1 150 1 169 1 60 9 194 1 34 5 
93 1 202 1 325 1 
62 1 220 2 325 1 
79 2 117 2 64 2 124 2 269 1 89 1 114 2 318 2 
237 1 64 2 297 2 219 1 171 2 300 1 89 1 323 1 324 1 114 2 135 1 4 1 6 1 330 2 277 1 117 2 333 1 139 1 48 1 74 1 160 2 311 1 338 1 98 1 76 2 143 1 314 1 205 1 124 2 264 1 288 1 210 1 318 3 79 3 269 1 105 1 355 1 
167 1 79 1 117 1 64 1 124 1 183 1 89 1 114 1 176 1 318 1 
195 1 358 1 183 1 325 1 267 1 318 1 319 1 117 1 79 1 93 1 82 1 322 1 159 1 312 1 
195 1 64 1 124 1 358 2 183 1 325 1 114 1 318 1 319 2 117 1 79 1 93 1 82 1 322 1 312 1 
17 1 313 1 106 1 358 1 319 1 
17 1 313 1 64 1 274 1 124 1 52 1 358 2 183 1 89 1 325 1 114 1 176 1 243 1 318 1 319 2 167 1 79 1 117 1 93 1 
17 1 358 1 319 1 
313 1 64 1 124 1 358 1 183 1 89 1 114 1 243 1 176 1 318 1 319 1 167 1 117 1 79 1 
325 1 
17 1 213 1 313 1 93 1 52 1 358 2 325 1 319 2 
238 1 64 1 357 4 65 5 358 5 89 1 239 2 325 2 114 1 176 1 243 1 303 2 117 1 93 2 179 1 12 2 96 1 370 1 15 2 17 2 313 2 263 1 124 1 52 1 209 1 183 1 186 1 318 1 319 5 78 1 167 1 79 1 345 2 189 1 85 2 349 1 294 1 61 1 
269 1 202 1 
64 1 124 1 114 1 199 1 318 2 117 2 79 2 269 2 215 1 
181 1 380 1 339 1 
98 1 314 1 297 1 205 1 300 1 171 1 264 1 276 1 324 1 135 1 318 1 330 1 79 1 269 1 48 1 355 1 
98 1 314 1 64 1 205 1 297 1 300 1 171 1 264 1 162 1 324 1 114 1 135 1 318 2 330 1 117 1 79 2 252 1 48 1 181 1 355 1 
64 4 124 1 162 1 114 4 267 1 5 1 225 1 318 5 361 1 117 5 79 5 269 1 252 2 215 1 
167 1 79 2 117 2 64 2 334 1 183 1 114 2 318 2 
79 3 117 3 64 3 124 1 269 1 252 1 114 3 318 3 
167 1 79 1 117 1 64 1 183 1 114 1 318 1 
79 1 117 1 64 1 124 1 183 1 114 1 215 1 199 1 318 1 
237 1 195 1 273 1 64 3 297 1 300 1 171 1 358 1 323 1 89 1 324 1 114 3 135 1 4 1 6 1 330 1 277 1 117 3 333 1 48 1 74 1 160 2 311 1 312 1 98 1 76 1 143 1 314 1 205 1 99 1 124 2 264 1 162 1 183 1 288 1 318 4 319 1 79 4 82 1 269 1 252 1 322 1 215 1 355 1 
361 1 79 2 117 2 64 1 269 1 252 1 114 1 267 1 318 2 
195 1 64 3 124 1 99 1 358 1 162 1 183 1 325 1 114 3 318 3 177 1 319 1 117 3 79 3 82 1 252 2 322 1 215 1 312 1 
64 2 124 1 114 2 318 2 117 2 79 2 252 1 215 1 181 1 380 1 
98 1 314 1 297 1 205 1 300 1 171 1 264 1 324 1 135 1 318 1 330 1 79 1 269 1 48 1 355 1 
63 1 98 1 314 1 297 1 205 1 300 1 171 1 135 1 318 1 330 1 79 1 269 1 271 1 48 1 355 1 
299 1 275 1 4 1 6 1 277 1 333 1 43 1 181 2 12 1 284 1 74 1 160 2 338 2 339 2 143 2 76 4 77 1 316 1 288 1 344 1 377 1 104 1 85 1 380 2 
79 1 117 1 64 1 82 1 334 1 183 1 114 1 318 1 
201 1 258 1 
201 1 258 1 
222 1 353 1 
222 1 353 1 
222 1 353 1 
201 1 258 1 55 1 
305 1 201 1 258 1 
28 1 201 2 335 1 258 2 222 1 353 1 
201 1 258 1 55 1 
201 1 258 1 55 1 
217 1 201 1 258 1 
217 1 201 1 258 1 
217 1 201 1 258 1 
49 1 64 2 173 1 358 1 36 1 68 1 114 2 164 1 359 1 318 2 329 1 319 1 305 1 79 2 117 2 26 1 269 1 201 1 204 1 258 1 10 1 253 1 14 1 16 1 
315 1 358 2 240 1 36 1 325 1 68 2 329 2 319 2 91 1 26 2 28 1 83 1 378 1 201 2 120 1 258 2 10 2 253 3 13 2 
150 1 54 1 266 1 
54 1 337 1 266 1 
150 2 54 3 337 1 373 1 157 1 170 1 
50 1 150 1 54 2 337 1 373 1 157 1 
150 1 54 2 337 1 157 1 373 2 
62 1 357 3 65 2 301 1 358 5 239 1 221 1 220 3 325 2 156 2 303 1 359 1 41 1 93 1 43 1 179 1 306 1 12 1 141 2 309 1 14 1 15 1 17 1 313 4 52 1 164 1 23 2 320 1 319 5 377 1 190 1 85 1 
62 3 357 8 65 6 358 9 239 2 220 9 325 5 303 2 41 2 278 5 93 1 118 1 43 3 179 1 306 2 12 3 141 6 14 4 15 2 17 6 313 7 52 1 343 1 23 6 234 1 320 3 319 9 189 1 125 1 377 3 190 1 85 3 106 5 293 1 295 1 
62 2 357 3 301 1 65 2 358 3 239 1 220 4 325 3 156 1 303 1 41 1 93 1 43 1 306 1 12 1 309 1 141 2 14 1 15 1 313 2 23 2 319 3 320 1 189 1 377 1 85 1 
62 3 357 5 301 1 65 4 358 4 239 1 220 7 325 4 156 2 303 1 41 1 93 1 43 2 118 1 306 1 12 2 141 4 309 1 14 2 15 1 313 3 343 1 23 4 234 1 319 4 320 2 189 1 377 2 85 2 
314 1 110 1 202 1 
314 1 192 1 
132 1 
98 1 314 1 48 1 
314 1 107 1 
314 1 48 1 
98 1 374 1 314 3 246 1 110 2 48 1 
296 1 122 1 143 3 76 7 275 2 298 1 372 1 209 1 242 1 344 3 25 2 279 1 85 1 294 1 12 1 96 1 338 4 
296 1 122 1 143 3 76 7 275 2 298 1 372 1 209 1 242 1 344 3 25 2 279 1 85 1 294 1 12 1 96 1 338 4 
296 1 122 1 143 3 76 7 275 2 298 1 372 1 209 1 242 1 344 3 25 2 279 1 85 1 294 1 12 1 96 1 310 1 338 4 
296 1 254 4 298 2 275 5 242 1 4 1 6 1 277 1 279 5 7 1 43 3 227 1 229 1 9 1 96 1 12 4 74 1 160 2 338 16 122 1 143 15 76 31 207 1 372 2 209 2 344 10 320 3 375 1 25 3 377 3 85 4 58 3 294 2 152 1 
298 1 275 3 242 1 4 2 6 2 277 2 279 1 9 1 12 1 96 1 74 2 160 4 338 5 286 1 122 1 76 9 143 4 372 1 209 1 344 4 25 2 149 1 85 1 294 1 
297 1 255 1 66 1 171 1 3 1 330 1 304 1 137 2 365 1 71 1 230 1 337 1 205 1 100 1 161 1 54 2 250 1 20 1 266 1 290 1 102 1 150 1 191 1 169 1 350 1 86 1 60 2 355 1 34 1 170 1 
297 1 255 1 66 1 171 1 3 1 38 1 223 1 330 1 304 1 137 3 178 1 365 1 230 1 337 1 205 1 161 1 54 2 250 1 20 2 266 1 290 1 102 1 150 1 191 1 169 1 86 1 60 3 355 1 34 1 170 1 
297 1 66 1 171 1 3 1 38 1 223 1 330 1 304 1 137 2 365 1 337 1 205 1 161 1 54 2 250 1 20 2 266 1 290 1 150 1 169 1 86 1 60 2 355 1 34 1 170 1 
297 1 171 1 300 1 66 2 3 2 330 1 137 1 178 1 364 1 48 1 230 1 73 1 314 1 205 1 289 1 292 1 236 1 191 1 169 2 270 1 86 2 60 1 355 1 
297 1 255 1 66 1 171 1 3 1 38 1 330 1 304 1 137 1 71 1 230 1 337 1 205 1 100 1 161 1 54 2 266 1 290 1 102 1 150 1 191 1 169 1 86 1 60 1 355 1 170 1 
116 1 
62 2 1 2 65 2 197 1 239 1 325 1 67 1 115 2 330 2 331 2 73 1 15 1 17 6 123 1 18 2 205 1 19 1 251 1 355 1 354 1 357 2 297 2 300 2 171 2 35 2 358 4 220 2 302 1 303 1 90 2 41 1 42 1 140 1 179 1 48 1 367 1 369 2 314 1 52 3 319 4 147 2 235 1 321 1 236 1 
17 2 52 1 358 2 319 2 147 1 235 1 213 1 42 1 140 1 367 1 354 1 
235 1 1 1 18 1 42 1 140 1 358 1 367 1 354 1 319 1 
17 2 1 1 18 1 52 1 358 2 319 2 331 1 147 1 213 1 235 1 42 1 140 1 367 1 354 1 
62 2 1 3 64 1 65 1 154 1 239 1 325 2 114 1 243 1 115 2 331 4 117 1 15 1 17 7 123 1 18 3 19 1 124 1 167 1 79 1 213 1 354 1 356 1 357 1 35 2 358 4 89 1 176 1 303 1 90 2 93 2 42 1 140 1 179 1 367 1 260 1 369 2 52 3 53 1 183 1 318 1 319 4 147 4 235 1 381 1 
62 2 1 2 357 1 65 1 35 2 358 3 239 1 220 2 325 2 303 1 90 2 115 2 331 2 93 1 42 1 140 1 179 1 367 1 369 2 15 1 17 4 123 1 18 2 19 1 52 2 251 1 319 3 147 2 235 1 354 1 
62 2 1 2 357 1 65 1 154 1 35 2 358 3 239 1 325 1 303 1 90 2 115 2 331 2 93 1 42 1 140 1 179 1 367 1 369 2 15 1 17 4 123 1 18 2 19 1 52 2 319 3 147 2 235 1 354 1 356 1 381 1 
62 2 1 2 357 1 65 1 154 1 35 2 358 3 239 1 325 1 303 1 90 2 115 2 331 2 93 1 42 1 140 1 179 1 367 1 369 2 15 1 17 4 123 1 18 2 19 1 52 2 319 3 147 2 235 1 354 1 356 1 381 1 
1 2 357 1 65 1 154 1 35 2 358 3 239 1 220 2 325 1 174 2 303 1 115 2 331 2 93 1 42 1 140 1 179 1 367 1 15 1 17 4 18 2 19 1 341 1 52 2 184 1 21 2 319 3 24 1 147 2 235 1 354 1 
62 2 1 3 357 1 35 2 154 1 65 1 358 3 239 1 325 1 303 1 90 2 115 2 331 3 93 1 42 1 140 1 179 1 367 1 260 1 369 2 15 1 17 5 123 1 19 1 18 3 52 2 319 3 147 3 235 1 354 1 356 1 381 1 
62 2 1 3 357 1 35 2 154 1 65 1 358 3 239 1 325 1 303 1 90 2 115 2 331 3 93 1 42 1 140 1 179 1 367 1 260 1 369 2 15 1 17 5 123 1 19 1 18 3 52 2 319 3 147 3 235 1 354 1 356 1 381 1 
1 2 357 1 65 1 35 2 358 3 239 1 220 2 325 1 174 2 303 1 115 2 331 2 93 1 42 1 140 1 179 1 367 1 15 1 17 4 18 2 19 1 52 2 21 2 251 1 319 3 24 1 147 2 235 1 354 1 
275 2 242 1 4 1 6 1 277 1 333 1 202 1 181 1 96 1 12 1 74 1 160 2 338 3 339 1 122 1 76 6 143 3 77 1 209 1 288 1 344 2 25 1 269 2 85 1 294 1 380 1 
237 1 254 3 219 1 275 1 155 1 4 2 6 2 360 1 277 2 279 1 333 1 43 1 229 1 259 1 181 11 12 1 74 2 160 4 338 8 339 11 143 6 76 14 288 2 233 1 344 2 320 2 375 1 377 2 269 1 129 1 85 2 58 3 380 4 
237 1 64 1 297 1 171 1 300 1 219 1 324 1 276 1 114 1 135 1 4 1 330 1 6 1 257 1 277 1 117 1 333 1 48 1 160 2 74 1 338 1 98 1 314 1 143 1 76 2 205 1 264 1 162 1 288 1 187 1 318 2 146 1 79 2 269 1 129 1 252 1 355 1 380 1 
237 1 64 1 275 4 323 2 324 2 114 1 242 1 328 1 4 3 330 3 6 3 117 1 277 3 279 4 333 3 12 3 74 3 160 6 338 10 339 7 122 1 76 20 205 2 208 1 209 1 162 1 288 3 344 8 25 1 79 3 252 1 129 1 85 3 294 1 355 2 297 3 219 1 171 3 300 1 38 1 133 2 135 2 92 2 43 2 180 1 48 2 181 7 96 1 182 2 98 2 143 10 314 2 264 2 185 2 318 3 320 2 377 2 269 2 380 7 
237 1 64 1 297 7 171 8 300 2 219 1 38 1 114 1 4 2 330 8 6 2 117 1 277 2 200 1 333 2 281 1 307 1 48 2 73 1 74 2 160 4 338 1 314 3 76 2 143 1 205 2 77 1 342 1 288 2 163 1 210 2 56 1 318 1 165 1 79 1 236 1 252 1 350 1 355 2 
64 1 275 1 114 1 4 1 6 1 277 1 117 1 333 1 43 1 181 1 12 1 74 1 160 2 338 1 339 1 76 3 143 2 124 1 288 1 344 1 318 1 320 1 79 1 377 1 126 1 129 1 85 1 215 1 380 1 
76 2 77 1 316 1 288 1 4 1 344 1 6 1 277 1 279 1 377 1 333 1 85 1 181 1 160 2 74 1 380 1 338 2 339 1 
76 2 143 2 275 1 77 1 299 1 288 1 4 1 344 1 6 1 277 1 333 1 43 1 181 1 12 1 160 2 74 1 380 1 339 1 
143 2 76 4 275 1 77 1 288 1 4 1 344 2 6 1 320 1 277 1 279 1 377 1 333 1 43 1 85 1 181 2 12 1 160 2 74 1 380 2 338 2 339 2 
76 2 316 1 288 1 4 1 344 1 6 1 277 1 279 1 377 1 333 1 85 1 307 1 181 1 160 2 74 1 380 1 338 2 339 1 
76 2 143 2 275 1 299 1 288 1 4 1 344 1 6 1 277 1 333 1 43 1 307 1 181 1 12 1 160 2 74 1 380 1 339 1 
143 2 76 4 275 1 288 1 4 1 344 2 6 1 320 1 277 1 279 1 377 1 333 1 43 1 85 1 307 1 181 2 12 1 160 2 74 1 380 2 338 2 339 2 
143 2 76 4 275 1 288 1 4 1 344 2 6 1 320 1 277 1 279 1 377 1 333 1 43 1 85 1 181 2 12 1 160 2 74 1 380 2 338 2 339 2 
237 1 297 1 219 1 171 1 300 1 323 1 324 1 135 1 4 1 330 1 6 1 277 1 333 1 48 1 160 2 74 1 338 1 98 1 76 2 314 1 143 1 205 1 264 1 288 1 318 1 79 1 269 1 355 1 
63 1 237 1 196 1 297 1 219 1 171 1 300 1 135 1 4 1 330 1 6 1 277 1 333 1 48 1 160 2 74 1 338 1 98 1 76 2 314 1 143 1 205 1 288 1 318 1 79 1 269 1 271 1 355 1 
143 2 76 4 275 1 288 1 4 1 344 2 6 1 320 1 277 1 279 1 377 1 333 1 43 1 129 1 85 1 181 2 12 1 160 2 74 1 380 2 338 2 339 2 
297 1 275 1 171 1 323 1 324 1 135 1 4 1 330 1 6 1 277 1 279 1 333 1 43 1 48 1 181 2 12 1 160 2 74 1 338 2 339 2 98 1 143 2 76 4 314 1 205 1 264 1 185 1 288 1 344 2 318 1 320 1 79 1 377 1 85 1 350 1 355 1 380 2 
64 1 114 1 4 1 6 1 277 1 117 1 279 1 333 1 43 1 181 1 12 1 74 1 160 2 338 2 339 1 143 1 76 3 124 1 288 1 344 1 318 1 320 1 79 1 377 1 103 1 129 1 85 1 215 1 380 1 
254 2 275 3 109 1 4 2 6 2 277 2 279 3 43 3 229 1 12 3 231 1 142 1 74 2 160 4 338 9 143 10 76 19 344 6 320 3 375 1 376 2 377 3 148 1 128 1 149 1 85 3 58 1 30 1 379 1 87 2 
254 2 275 2 327 1 4 3 6 3 277 3 279 2 43 2 9 2 229 2 308 1 12 2 142 1 74 3 160 6 338 14 143 12 76 26 206 1 344 4 212 1 320 3 188 1 376 4 377 3 148 2 128 2 149 1 85 3 58 2 30 1 379 1 130 1 87 1 
254 4 275 4 242 1 327 1 4 3 6 3 277 3 279 4 43 4 9 1 308 1 229 3 96 1 12 5 231 1 142 1 74 3 160 6 338 20 122 1 143 21 76 41 206 1 232 1 209 1 344 8 212 1 320 4 25 1 188 1 375 1 376 4 377 4 148 1 128 2 149 1 85 5 58 3 294 1 30 1 379 1 130 1 87 1 
254 4 275 4 242 1 327 1 4 4 6 4 277 4 279 3 43 3 9 2 308 1 229 3 96 1 12 4 231 1 142 1 74 4 160 8 338 20 122 1 143 18 76 38 206 1 232 1 209 1 344 7 212 1 320 4 25 1 188 1 375 1 376 4 377 4 148 1 128 2 149 1 85 5 58 3 294 1 30 1 379 1 130 1 87 1 
254 4 275 7 242 1 327 1 4 2 6 2 277 2 279 7 43 7 9 1 308 1 229 2 259 2 96 1 12 8 142 1 74 2 160 4 338 27 122 1 143 25 76 52 206 1 209 1 344 14 212 1 320 7 25 1 188 1 375 2 376 4 377 7 148 1 128 1 149 1 85 8 58 4 294 1 30 1 379 1 130 1 87 1 
91 1 26 1 28 1 201 1 120 1 258 1 10 1 68 1 368 1 329 1 
305 1 173 1 
26 1 268 1 168 1 201 1 258 1 10 1 68 1 216 1 329 1 
95 1 55 1 
217 1 335 1 193 1 
315 1 358 1 36 1 325 1 68 1 329 1 319 1 91 1 26 1 28 1 83 1 378 1 201 1 120 1 258 1 10 1 253 2 13 1 
315 1 358 1 36 1 325 1 68 1 329 1 319 1 91 1 26 1 28 1 83 1 378 1 201 1 120 1 258 1 10 1 253 2 13 1 
315 1 358 1 36 1 325 1 68 1 329 1 319 1 91 1 26 1 28 1 83 1 378 1 201 1 120 1 258 1 10 1 253 2 13 1 
95 1 335 1 55 1 
95 1 335 1 55 1 
217 1 193 1 
217 1 335 1 193 1 
204 1 16 1 
64 2 358 1 173 1 68 1 114 2 329 1 359 1 305 1 117 2 201 1 258 1 204 1 10 1 13 1 14 1 16 1 313 1 49 1 164 1 318 2 319 1 79 2 26 1 83 1 269 1 351 1 253 1 
237 1 297 2 171 2 219 1 172 1 4 1 330 2 244 1 6 1 277 1 117 2 200 1 333 1 366 1 48 1 160 2 74 1 338 1 314 1 76 2 143 1 205 1 342 1 288 1 210 2 318 2 80 1 79 2 129 1 32 1 355 1 
205 1 297 2 171 2 66 1 54 2 161 1 38 1 266 1 330 2 304 1 101 1 102 1 347 1 150 1 350 1 337 1 352 1 355 1 170 1 
297 1 205 1 171 1 66 1 54 2 161 1 38 1 266 1 330 1 304 1 245 1 102 1 150 1 337 1 352 1 355 1 170 1 
314 1 205 1 297 1 300 1 171 1 66 1 108 1 330 1 101 1 236 1 364 1 48 1 73 1 355 1 
205 1 297 1 171 1 66 1 54 2 161 1 38 1 266 1 330 1 304 1 101 1 102 1 347 1 150 1 337 1 352 1 355 1 170 1 
144 1 
238 1 93 1 357 1 263 1 65 1 202 1 325 1 
62 1 357 1 65 1 358 1 239 1 220 1 325 2 303 1 90 1 93 1 179 1 369 1 15 1 17 1 123 1 52 1 319 1 
195 2 62 6 238 1 65 8 110 2 241 2 239 4 325 8 330 3 332 2 246 1 12 2 15 4 17 5 205 4 340 2 23 6 291 1 345 2 27 2 85 2 350 1 355 3 357 9 297 3 300 1 171 3 358 5 37 1 220 12 302 1 134 1 303 4 39 2 41 2 93 2 43 2 179 4 48 3 141 6 182 2 98 3 314 10 263 1 51 1 52 3 186 2 319 5 320 2 377 2 151 1 192 3 107 2 59 2 
62 3 357 8 254 1 65 5 358 1 239 2 220 6 302 1 325 5 327 1 303 2 41 1 93 2 138 1 43 2 179 2 229 1 308 1 282 1 141 5 12 2 15 2 17 1 206 1 52 1 186 1 23 5 212 1 319 1 320 2 188 1 345 2 377 2 85 2 58 1 
64 1 357 2 65 2 358 1 239 1 89 1 114 1 243 1 176 1 303 1 117 1 179 1 96 1 12 1 15 1 124 1 209 1 183 1 186 1 318 1 78 1 319 1 167 1 79 1 345 2 85 2 294 1 356 1 
238 1 263 1 357 1 65 1 239 1 325 1 303 1 93 1 179 1 15 1 
62 5 357 5 65 5 186 1 220 10 325 5 23 5 320 2 345 2 377 2 43 2 85 2 141 5 12 2 182 1 
17 1 93 1 52 1 358 1 325 1 319 1 
297 4 357 2 171 4 300 2 65 2 358 3 239 2 37 1 67 1 302 2 303 2 330 4 41 2 179 1 48 1 73 1 15 2 17 4 121 1 314 1 205 1 52 2 319 3 189 1 81 1 321 1 236 1 151 2 355 1 
237 1 64 2 297 1 171 1 300 1 89 1 323 1 324 1 114 2 135 1 4 1 6 1 330 1 117 2 277 1 333 1 48 1 74 1 160 2 311 1 98 1 76 1 143 1 314 1 205 1 124 2 264 1 288 1 318 3 79 3 269 1 355 1 
62 2 357 1 65 2 239 1 220 4 325 4 302 1 303 1 23 2 25 1 41 1 93 2 179 1 141 2 15 1 
10 1 329 1 97 1 
91 1 203 1 10 1 329 1 16 1 
10 1 329 1 97 1 
10 1 329 1 97 1 
127 1 10 1 329 1 
127 1 10 1 329 1 
127 1 10 1 329 1 
10 1 329 1 
201 1 258 1 
122 1 143 4 76 8 275 2 209 1 242 1 4 2 344 3 6 2 25 1 277 2 279 1 85 1 9 1 294 1 12 1 96 1 160 4 74 2 338 4 
122 1 143 3 76 6 275 2 209 1 242 1 344 2 25 1 85 1 202 1 294 1 96 1 12 1 338 3 
143 2 76 4 275 1 4 1 344 2 6 1 320 1 277 1 377 1 279 1 43 1 85 1 158 1 12 1 160 2 74 1 338 2 
143 4 76 7 254 2 275 1 344 2 320 1 375 1 377 1 279 1 43 1 85 1 58 1 229 1 12 1 338 3 
254 2 275 5 155 1 242 1 4 2 6 2 277 2 279 4 43 2 9 2 259 1 96 1 12 3 160 4 74 2 338 11 122 1 371 1 76 23 143 12 209 2 344 9 320 2 25 1 375 1 377 2 85 3 58 2 294 2 
76 1 143 1 254 1 
76 1 58 1 338 1 
143 3 76 6 275 2 4 1 6 1 344 3 320 1 277 1 377 1 279 1 43 1 85 1 158 1 12 1 182 1 74 1 160 2 338 3 
254 1 275 1 327 1 4 1 6 1 277 1 279 1 43 2 229 1 308 1 12 2 74 1 160 2 338 6 76 12 143 6 206 1 344 2 320 2 212 1 188 1 377 2 149 1 85 2 58 1 
279 1 143 3 76 6 275 1 209 1 85 1 294 1 12 1 96 1 344 2 338 3 
371 1 122 1 143 2 76 3 275 1 209 1 242 1 4 1 344 2 6 1 277 1 279 1 9 1 294 1 160 2 74 1 338 1 
76 10 143 5 275 3 209 2 4 1 6 1 344 5 78 1 277 1 279 2 149 1 85 2 294 2 96 1 12 2 74 1 160 2 338 5 
76 2 4 1 6 1 344 1 277 1 377 1 279 1 149 1 85 1 160 2 74 1 338 2 
143 2 76 4 275 1 4 1 344 2 6 1 320 1 277 1 377 1 279 1 43 1 149 1 85 1 12 1 160 2 74 1 338 2 
371 1 143 2 76 3 275 1 209 1 4 3 6 3 344 2 277 3 279 1 149 1 9 1 294 1 231 1 160 6 74 3 338 1 
254 4 275 7 242 1 4 5 6 5 277 5 279 5 7 1 43 3 227 1 158 1 9 2 229 1 96 2 12 5 231 1 74 5 160 10 338 16 122 1 371 1 143 18 76 34 209 3 344 12 320 3 25 1 375 1 377 3 149 1 85 5 58 3 294 3 152 1 
254 1 275 2 242 1 4 1 6 1 277 1 229 1 308 1 12 1 96 1 74 1 160 2 338 4 122 1 76 8 143 4 209 1 344 2 25 1 149 1 85 1 58 1 294 1 
254 2 275 2 242 1 4 2 6 2 277 2 279 1 158 1 229 1 308 1 12 1 96 1 74 2 160 4 338 6 122 1 76 11 143 5 209 1 344 3 320 1 25 1 375 1 377 1 149 1 85 2 58 1 294 1 
254 1 275 3 242 1 327 1 4 3 6 3 277 3 279 1 43 2 158 1 229 1 308 1 9 1 96 1 12 3 74 3 160 6 338 9 122 1 76 19 143 10 206 1 209 1 344 4 212 1 320 2 25 1 188 1 377 2 149 1 85 3 58 1 294 1 
254 1 275 3 242 1 327 1 4 3 6 3 277 3 279 2 43 1 158 1 9 1 229 1 308 1 96 1 12 2 74 3 160 6 338 10 122 1 76 17 143 7 206 1 209 1 344 5 320 2 212 1 25 1 188 1 377 2 149 1 85 3 58 1 294 1 
254 1 275 2 242 1 4 1 6 1 277 1 229 1 308 1 12 1 96 1 74 1 160 2 338 4 122 1 76 8 143 4 209 1 344 2 25 1 149 1 85 1 58 1 294 1 
254 1 275 1 327 1 4 1 6 1 277 1 279 1 43 2 229 1 308 1 12 2 74 1 160 2 338 6 76 12 143 6 206 1 344 2 320 2 212 1 188 1 377 2 149 1 85 2 58 1 
254 1 275 3 242 1 327 1 4 4 6 4 277 4 279 2 43 1 158 1 229 1 308 1 9 2 96 1 12 2 74 4 160 8 338 10 122 1 76 18 143 8 206 1 209 1 344 5 212 1 320 2 25 1 188 1 377 2 149 1 85 3 58 1 294 1 
254 1 275 3 327 1 4 4 6 4 277 4 279 3 43 2 229 1 308 1 9 2 12 2 231 1 74 4 160 8 338 9 76 16 143 7 206 1 344 6 212 1 320 3 188 1 377 3 149 1 85 3 58 1 
122 1 143 4 76 7 275 3 209 3 242 2 344 6 279 3 85 1 294 3 12 1 96 1 338 3 
254 1 275 3 242 1 327 1 4 4 6 4 277 4 279 1 43 1 229 1 308 1 9 2 96 1 12 2 231 1 74 4 160 8 338 10 122 1 76 18 143 8 206 1 209 1 344 4 212 1 320 2 25 1 188 1 377 2 149 1 85 3 58 1 294 1 
79 1 117 1 361 1 269 1 88 1 267 1 318 1 
153 1 2 1 249 1 88 1 267 1 318 1 361 1 117 1 79 1 70 1 269 1 46 1 
314 1 205 1 297 1 236 1 171 1 300 1 202 1 48 1 73 1 355 1 330 1 
98 1 314 1 64 1 205 1 297 1 300 1 171 1 264 1 114 1 135 1 318 2 330 1 117 1 79 2 269 1 252 1 48 1 355 1 
64 1 297 1 171 1 114 2 135 1 330 1 117 2 48 2 312 1 98 2 314 3 205 1 264 1 183 1 318 2 79 2 82 1 269 1 151 1 252 1 107 1 59 1 355 1 
63 1 64 1 297 2 171 2 114 2 135 1 330 2 117 2 280 1 48 2 312 1 98 2 314 3 205 1 183 1 318 2 79 2 82 1 269 1 151 1 252 1 107 1 59 1 355 1 
195 1 98 1 17 1 314 4 205 1 297 3 300 1 171 3 110 1 358 2 198 1 325 1 330 3 319 2 93 1 280 1 151 1 192 1 119 1 107 1 48 1 59 1 355 1 
195 1 98 1 17 1 314 4 205 1 297 3 300 1 171 3 110 1 358 2 325 1 330 3 319 2 332 1 93 1 280 1 151 1 192 1 107 1 48 1 59 1 355 1 
205 1 297 1 171 1 355 1 330 1 165 1 
98 1 314 3 297 6 205 3 300 2 171 7 342 1 38 1 210 1 163 1 56 1 330 7 165 1 246 1 8 1 281 1 363 1 350 1 48 2 355 2 33 1 
64 1 297 1 275 2 171 1 323 1 324 1 114 1 242 1 135 1 4 2 6 2 330 1 277 2 117 1 92 1 333 2 48 1 181 1 12 1 96 1 160 4 74 2 338 3 339 1 98 1 122 1 143 3 76 6 314 1 205 1 209 1 264 1 185 1 288 2 344 2 318 2 25 1 80 1 79 2 269 2 85 1 129 1 252 1 294 1 350 1 355 1 380 1 
195 1 238 1 357 1 297 1 65 1 300 1 171 1 110 1 358 3 239 2 241 1 37 1 325 1 303 2 330 1 39 1 332 1 93 1 179 2 15 2 17 2 313 1 314 2 263 1 340 1 52 1 319 3 192 1 
98 1 314 2 297 2 205 2 171 2 110 1 134 1 330 2 165 1 246 1 350 1 48 1 355 1 
314 1 205 1 297 4 300 1 171 4 113 1 330 4 280 1 236 1 350 1 48 1 73 1 355 1 
98 1 314 1 297 2 205 2 171 2 248 1 330 2 8 1 151 1 363 1 72 1 180 1 48 1 355 1 
205 1 297 1 171 1 300 1 54 1 161 1 337 1 266 1 355 1 330 1 
314 1 297 2 205 1 171 2 342 1 38 1 330 2 366 1 350 1 48 1 355 1 
314 3 297 4 205 2 300 1 171 5 342 1 113 1 330 5 56 1 236 1 151 1 281 1 350 1 48 2 73 1 355 2 
314 3 297 4 205 2 300 1 171 5 342 1 113 1 330 5 56 1 236 1 151 1 350 1 48 2 73 1 283 1 355 2 
98 1 63 1 314 1 64 1 205 1 297 1 300 1 171 1 114 1 135 1 318 2 330 1 117 1 79 2 269 1 252 1 48 1 355 1 
98 1 314 1 297 1 205 2 171 1 330 1 246 1 8 1 151 1 363 1 48 1 355 1 33 1 
272 1 262 1 269 1 228 1 336 1 
195 1 272 1 313 1 262 2 99 1 358 2 183 1 325 1 136 1 319 2 166 1 93 1 82 1 269 1 228 2 336 2 322 1 11 1 312 1 
272 1 262 1 172 1 244 1 318 1 117 1 79 1 336 1 32 1 
272 1 11 1 136 1 
365 1 250 1 202 1 34 1 
137 1 191 1 365 1 250 1 230 1 60 1 34 1 
169 1 86 1 60 1 
250 1 265 1 175 1 137 3 226 2 191 1 71 1 365 1 230 1 60 3 34 1 261 1 
137 2 191 1 365 1 250 1 20 1 112 1 230 1 60 2 34 1 
137 1 69 1 150 1 29 1 191 1 54 1 71 1 230 1 60 1 266 1 34 1 
137 1 191 1 365 1 71 1 230 1 60 1 34 1 
137 1 191 1 365 2 71 1 250 1 230 1 60 1 
224 1 211 1 137 2 191 2 365 1 71 1 230 2 60 2 34 1 285 1 
250 1 20 2 317 1 137 3 69 1 191 1 365 1 71 1 47 1 230 1 60 3 75 1 34 2 
54 2 250 1 20 1 326 1 266 1 137 2 191 1 150 1 365 1 71 1 337 1 230 1 60 2 34 1 170 1 
250 1 112 1 20 2 22 1 137 4 69 1 191 2 365 1 71 1 230 2 60 4 75 1 34 2 
137 1 191 1 365 1 71 1 250 1 230 1 60 1 34 1 
250 2 20 2 175 1 137 4 69 1 226 1 191 1 365 2 214 1 230 1 60 4 261 1 75 1 34 3 
0 1 111 1 20 1 250 1 287 1 137 2 191 1 365 1 71 1 230 1 60 2 34 1 
131 1 250 1 175 1 137 3 226 2 191 1 71 1 365 1 230 1 60 3 34 1 261 2 
94 1 256 1 34 2 40 2 
137 1 84 1 191 1 71 1 230 1 60 1 
137 2 191 1 365 1 71 1 250 1 20 1 47 1 230 1 60 2 34 1 
44 1 
137 1 191 1 365 1 71 1 250 1 230 1 60 1 34 1 
20 1 250 1 137 3 226 1 191 1 71 1 365 1 47 1 230 1 60 3 34 1 
69 1 214 1 34 1 75 1 
365 1 34 1 

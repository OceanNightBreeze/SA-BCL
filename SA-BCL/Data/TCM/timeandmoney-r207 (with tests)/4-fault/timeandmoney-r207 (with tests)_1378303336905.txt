#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 1 122 1 45 1 357 1 3 3 82 2 175 1 176 1 130 2 303 1 28 3 261 1 187 2 
340 2 288 1 45 1 313 2 206 2 289 1 3 9 28 9 275 1 185 1 30 2 187 2 148 1 77 1 122 3 124 2 357 1 82 5 175 4 232 1 176 1 18 1 130 2 303 6 198 1 363 1 154 1 261 1 
340 2 288 1 45 1 313 2 206 2 289 1 3 9 28 9 275 1 185 1 30 2 187 2 148 1 77 1 122 3 124 2 357 1 82 5 175 4 232 1 176 1 18 1 130 2 303 6 198 1 363 1 154 1 261 1 
340 2 288 1 45 1 313 2 206 2 289 1 3 10 28 10 275 1 185 1 30 2 187 2 148 1 77 1 122 4 124 2 357 1 82 6 175 5 232 1 176 1 18 1 130 2 303 7 198 1 363 1 154 1 261 1 
340 2 288 1 45 1 313 2 206 2 289 1 3 7 28 7 185 1 30 2 187 2 148 1 77 1 122 2 124 1 357 1 82 4 175 3 232 1 176 1 18 1 130 2 303 4 198 1 363 1 154 1 261 1 
148 1 122 1 45 1 124 2 313 1 206 1 357 1 3 4 82 3 175 2 130 1 303 3 28 4 275 1 185 1 261 1 30 1 187 1 
223 1 110 1 340 1 288 1 45 1 289 1 357 1 206 1 3 2 82 1 174 1 130 1 28 2 261 1 30 1 187 1 
340 1 45 1 313 1 206 1 3 9 28 9 10 1 185 1 275 1 30 1 187 2 148 1 122 3 124 2 357 1 82 5 175 4 176 1 194 1 18 1 303 7 130 2 154 1 261 1 
340 1 45 1 313 1 206 1 3 9 28 9 10 1 185 1 275 1 30 1 187 2 148 1 122 3 124 2 357 1 82 5 175 4 176 1 194 1 18 1 303 7 130 2 154 1 261 1 
72 1 150 1 311 1 334 1 229 1 361 1 294 1 116 1 103 1 134 1 336 1 367 1 89 1 350 1 
54 1 
294 1 109 1 149 1 54 1 134 2 57 1 127 1 361 2 
243 2 311 1 159 1 47 1 247 1 291 1 344 1 343 2 319 2 294 2 320 4 273 1 116 1 70 1 68 1 96 1 350 1 72 1 331 2 254 2 221 1 74 1 150 1 225 5 149 2 54 2 13 1 334 1 229 1 57 2 127 1 361 5 103 1 134 5 336 1 105 2 89 1 367 1 
149 1 54 1 163 1 
54 1 46 1 252 2 
150 2 369 1 311 2 103 2 336 2 229 2 350 2 89 1 
62 1 136 1 341 1 369 1 311 2 342 1 246 1 249 1 25 1 318 1 209 1 293 1 166 1 347 2 117 1 277 1 99 1 350 2 51 2 328 1 281 2 282 1 150 2 190 1 375 1 335 1 192 1 229 3 231 1 85 1 305 1 103 2 336 3 135 2 22 2 338 1 89 1 
72 1 150 1 116 1 311 1 103 1 336 1 334 1 229 1 350 1 89 1 
72 1 298 1 180 1 149 1 54 1 24 1 229 1 361 1 113 1 94 1 134 1 336 1 253 1 350 1 
72 1 298 1 180 1 149 1 150 1 54 1 311 1 24 1 229 1 361 2 113 1 103 1 134 2 336 1 350 1 
294 1 134 1 65 1 57 1 361 1 
294 1 149 1 54 1 134 2 217 1 57 1 127 1 361 2 
134 1 57 1 361 1 
241 1 150 1 311 1 369 2 229 2 103 1 336 2 264 1 350 2 
128 1 115 1 32 1 
136 1 62 1 341 1 369 1 249 1 25 1 229 1 209 1 293 1 166 1 85 1 347 1 336 1 373 1 135 1 51 1 
369 1 163 1 
52 1 62 1 136 1 341 1 150 1 355 1 25 1 249 1 229 2 209 1 293 1 115 1 166 1 85 1 347 1 103 1 336 2 135 1 350 1 51 1 
52 1 150 3 311 1 369 1 103 3 336 3 229 3 350 3 
72 1 150 1 116 1 103 1 336 1 229 1 350 1 
72 1 241 1 150 1 311 1 103 1 336 1 229 1 264 1 350 1 
241 1 62 1 180 1 136 1 341 1 369 1 311 2 246 1 24 1 25 1 249 1 318 1 209 1 293 1 113 1 166 1 347 1 117 1 277 1 99 1 350 3 51 1 72 1 281 2 52 1 298 1 282 1 150 3 355 1 375 1 335 1 302 1 229 4 231 1 361 1 85 1 305 1 103 3 133 1 134 1 336 4 135 1 22 1 89 1 
329 1 52 1 150 1 369 1 103 1 336 2 253 1 229 2 350 2 
72 1 298 1 52 2 241 1 180 1 150 3 311 1 54 1 355 1 24 1 229 3 361 1 113 1 103 3 134 1 133 1 336 3 348 1 350 3 
128 1 52 1 115 1 241 1 150 2 311 1 103 2 336 2 229 2 350 2 
136 1 62 1 341 1 369 1 249 1 25 1 229 1 209 1 293 1 166 1 85 1 347 1 336 1 135 1 51 1 
339 1 136 1 62 1 369 1 25 1 229 1 209 1 293 1 166 1 8 1 85 1 347 1 336 1 135 1 51 1 
342 2 315 1 292 1 318 1 319 1 165 1 115 2 322 1 117 1 323 1 277 2 32 2 171 1 146 1 281 2 282 1 14 1 375 1 335 1 128 2 305 1 381 1 105 1 22 4 
72 1 113 1 150 1 103 1 336 1 279 1 229 1 350 1 
329 1 52 2 241 1 150 4 311 1 369 1 355 1 312 1 229 5 378 1 103 4 336 5 253 1 350 5 
72 1 150 2 116 1 103 2 336 2 279 1 229 2 350 2 
139 1 80 1 29 1 
377 1 139 2 332 1 118 1 29 2 39 1 
139 1 29 1 
139 1 29 1 
377 1 332 1 
377 1 332 1 
377 1 332 1 
0 1 139 1 29 1 
0 1 139 1 29 1 
0 1 139 1 29 1 
139 1 266 1 29 1 
139 1 266 1 29 1 
139 1 266 1 29 1 
100 2 308 2 138 2 309 2 78 1 139 2 54 1 191 1 161 2 361 2 102 1 151 1 380 3 134 2 37 1 349 1 29 2 145 1 39 1 
204 1 308 1 138 1 139 1 91 1 369 1 161 1 274 1 29 1 350 2 100 1 33 1 150 2 80 1 229 2 361 1 17 1 129 1 102 1 379 1 103 2 380 1 134 1 336 2 
172 2 313 1 2 1 206 2 174 1 
313 1 206 1 30 1 
206 1 30 1 174 1 
172 1 19 1 313 2 2 1 206 3 174 1 
172 1 313 1 2 1 206 2 174 1 263 1 
157 1 243 1 182 1 46 1 315 1 343 1 26 1 319 1 141 2 294 4 320 3 323 1 49 1 252 3 220 1 33 1 254 1 74 1 225 2 79 1 149 1 54 2 16 2 57 1 127 1 361 5 17 1 129 1 134 5 60 2 105 1 38 1 
42 1 243 2 1 1 46 3 315 3 65 5 291 1 343 2 26 3 319 3 184 1 294 7 320 8 346 1 323 3 49 1 252 9 218 1 220 2 254 2 74 1 225 6 149 1 54 5 16 6 228 5 193 1 57 6 127 1 17 4 361 9 134 9 60 6 105 3 38 2 
157 1 243 1 46 2 315 1 291 1 343 1 26 1 141 1 319 1 294 2 320 3 323 1 252 4 220 1 254 1 149 1 79 1 225 2 54 3 16 2 361 3 17 1 134 3 60 2 105 1 38 1 
157 1 243 1 46 3 315 2 291 1 343 1 26 2 141 2 319 2 294 3 320 5 346 1 323 2 252 7 218 1 220 1 254 1 149 1 79 1 225 4 54 4 16 4 193 1 361 4 17 2 134 4 60 4 105 2 38 1 
242 1 
293 1 189 1 163 1 
293 1 188 1 
293 1 62 1 
189 2 62 1 242 1 293 2 85 1 104 1 219 1 
293 1 62 1 85 1 
293 1 120 1 
342 8 344 2 248 1 270 1 319 3 114 1 70 2 144 2 96 2 277 7 146 4 221 1 14 5 358 1 132 1 177 1 152 1 105 3 22 15 
23 3 307 1 342 21 315 3 344 3 248 1 318 1 5 1 26 3 270 2 319 6 114 2 295 4 70 2 96 3 144 3 323 3 277 20 146 7 281 2 221 1 356 1 14 14 375 1 335 1 359 1 301 1 196 1 177 1 132 7 152 1 305 1 260 1 105 6 22 41 
342 9 344 2 248 1 318 2 319 3 270 1 7 1 114 1 70 2 144 2 96 2 277 8 146 5 281 4 221 1 14 7 375 2 335 2 126 1 196 1 132 2 305 2 152 1 105 3 22 17 
221 1 342 8 14 5 344 2 248 1 319 3 270 1 114 1 132 1 177 1 70 2 152 1 96 2 144 2 277 7 105 3 22 15 146 4 
221 1 342 8 14 7 344 2 248 1 319 3 270 1 114 1 132 3 177 1 70 2 152 1 96 2 144 2 277 7 105 3 22 15 146 4 
107 1 41 1 136 1 62 1 340 2 3 1 25 1 209 1 164 1 293 1 67 2 167 1 347 1 28 1 187 1 51 1 300 2 227 1 230 1 130 1 234 2 135 1 238 1 
374 1 340 1 313 1 206 2 357 1 300 1 3 1 174 1 25 1 35 1 284 1 209 1 130 1 93 1 67 1 28 1 257 1 347 1 19 1 234 1 143 1 30 1 135 1 187 1 179 1 51 1 
340 1 45 1 313 1 206 2 3 2 25 1 209 1 67 1 93 1 347 1 28 2 143 1 215 1 30 1 187 1 51 1 374 1 357 1 300 1 82 1 174 1 35 1 284 1 303 1 130 1 19 1 234 1 261 1 135 1 179 1 
340 1 45 1 313 1 206 2 3 3 25 1 209 1 67 1 93 1 347 1 28 3 143 1 30 1 187 1 51 1 374 1 300 1 82 1 174 1 35 1 230 1 130 1 303 2 257 1 19 1 234 1 153 1 261 1 135 1 179 1 
340 1 45 1 313 1 206 2 3 2 25 1 209 1 67 1 93 1 347 1 28 2 143 1 30 1 51 1 300 1 82 1 174 1 35 1 303 2 257 1 19 1 234 1 153 1 261 1 135 1 
314 1 
136 2 180 1 243 1 46 2 244 1 343 1 293 1 94 1 347 2 296 1 48 4 252 2 97 1 253 1 51 2 350 1 298 1 254 1 149 1 12 2 54 2 57 6 360 1 361 5 59 2 201 1 262 1 306 1 62 1 24 1 316 1 160 1 370 1 25 1 27 2 209 1 269 1 211 2 164 1 113 1 320 2 272 2 324 2 220 1 72 1 74 1 225 2 227 1 127 3 229 1 131 2 134 5 87 1 336 1 135 2 
180 1 109 1 24 1 160 1 370 1 113 1 94 1 296 1 48 2 97 1 253 1 350 1 72 1 298 1 229 1 360 1 57 2 127 1 361 3 131 1 134 3 336 1 
180 1 109 1 24 1 160 1 370 1 211 1 113 1 94 1 296 1 48 3 97 1 253 1 350 1 72 1 298 1 149 1 54 1 57 1 229 1 360 1 127 1 361 3 134 3 336 1 
109 1 180 1 24 1 160 1 370 1 211 1 113 1 94 1 296 1 48 3 97 1 253 1 350 1 72 1 298 1 12 1 149 1 54 1 127 1 229 1 360 1 57 2 361 3 131 1 134 3 336 1 
40 1 180 1 243 1 46 2 290 1 343 1 94 1 296 1 48 6 97 1 253 1 350 1 147 1 298 1 254 1 12 4 149 5 54 5 57 7 360 1 361 5 59 2 201 1 109 1 24 1 316 1 160 1 370 1 27 2 211 4 210 1 113 1 320 1 272 2 324 2 72 1 74 1 225 1 229 1 127 3 285 1 131 4 134 5 336 1 
180 1 243 1 46 2 343 1 94 1 296 1 48 4 252 2 97 1 253 1 350 1 298 1 254 1 12 2 149 1 54 2 360 1 57 4 361 4 59 2 201 1 24 1 316 1 160 1 370 1 27 2 211 2 269 1 113 1 320 1 272 2 324 2 72 1 74 1 225 1 229 1 127 2 131 2 134 4 336 1 
180 1 243 1 46 2 290 1 24 1 316 1 160 1 370 1 343 1 27 2 211 2 210 1 113 1 320 1 94 1 272 2 296 1 48 4 324 2 97 1 253 1 350 1 72 1 298 1 254 1 74 1 149 1 12 2 225 1 54 1 57 4 127 2 229 1 360 1 361 4 285 1 131 2 59 2 201 1 134 4 336 1 
180 1 243 1 46 2 290 1 24 1 316 1 160 1 370 1 343 1 27 2 211 2 210 1 113 1 320 1 94 1 272 2 296 1 48 4 324 2 97 1 253 1 350 1 72 1 298 1 254 1 74 1 149 1 12 2 225 1 54 1 57 4 127 2 229 1 360 1 361 4 285 1 131 2 59 2 201 1 134 4 336 1 
180 1 90 1 243 1 290 1 24 1 160 1 370 1 343 1 27 2 211 2 113 1 168 2 320 1 94 1 272 2 296 1 48 4 252 2 97 1 253 1 278 1 350 1 72 1 298 1 222 1 254 1 74 1 149 1 12 2 225 1 54 1 173 2 57 4 127 2 229 1 360 1 361 4 131 2 201 1 134 4 336 1 
180 1 243 1 46 2 290 1 24 1 316 1 160 1 343 1 370 1 27 2 210 1 211 3 113 1 320 1 94 1 272 2 296 1 48 5 324 2 97 1 253 1 350 1 72 1 147 1 298 1 254 1 74 1 149 1 225 1 12 3 54 1 127 2 229 1 360 1 57 5 361 4 285 1 131 3 59 2 201 1 134 4 336 1 
180 1 243 1 46 2 290 1 24 1 316 1 160 1 343 1 370 1 27 2 210 1 211 3 113 1 320 1 94 1 272 2 296 1 48 5 324 2 97 1 253 1 350 1 72 1 147 1 298 1 254 1 74 1 149 1 225 1 12 3 54 1 127 2 229 1 360 1 57 5 361 4 285 1 131 3 59 2 201 1 134 4 336 1 
180 1 90 1 243 1 343 1 94 1 296 1 48 4 252 2 97 1 253 1 350 1 298 1 254 1 12 2 149 1 54 1 360 1 57 4 361 4 201 1 24 1 160 1 370 1 27 2 211 2 269 1 113 1 320 1 168 2 272 2 72 1 74 1 225 1 173 2 229 1 127 2 131 2 134 4 336 1 
136 2 62 2 342 1 246 1 267 1 25 2 318 2 209 2 165 1 293 3 164 1 347 7 142 1 117 2 215 1 277 1 350 1 51 8 351 1 52 1 281 4 282 2 150 1 375 2 56 1 335 2 192 1 227 1 229 1 304 1 257 1 103 1 305 2 336 1 337 1 236 1 135 8 22 2 338 2 
241 1 311 1 342 1 315 1 318 1 26 1 319 1 115 1 117 1 323 1 277 2 32 1 146 1 350 1 281 2 282 1 150 1 14 1 375 1 335 1 229 1 128 1 103 1 305 1 36 1 336 1 105 1 203 1 22 3 
369 2 342 3 344 1 248 1 163 1 318 1 165 1 319 1 115 1 70 1 117 1 96 1 144 1 277 3 32 1 146 2 281 2 282 1 14 2 375 1 335 1 128 1 152 1 305 1 105 1 22 6 
23 3 369 1 342 8 246 1 315 1 318 2 26 2 319 2 295 3 115 11 372 1 117 1 169 1 323 2 277 6 32 11 146 1 281 4 282 2 356 1 14 2 375 2 335 2 34 1 192 1 301 1 84 1 128 4 132 1 305 2 105 1 203 1 22 14 
265 1 62 1 136 1 341 1 369 1 342 1 246 1 208 1 25 1 249 1 318 1 209 1 293 1 271 1 166 1 347 1 117 1 373 1 277 1 51 1 350 1 52 1 281 2 282 1 150 1 355 1 375 1 335 1 192 1 229 2 128 1 85 1 305 1 103 1 336 2 135 1 203 1 22 2 
136 1 341 2 92 2 342 14 246 1 344 2 248 1 249 2 293 2 250 2 347 1 144 1 96 2 50 2 99 2 51 1 350 1 146 6 52 1 150 1 355 1 14 7 192 1 152 1 103 1 305 3 105 5 203 1 22 28 205 2 62 2 369 3 315 2 207 1 25 2 318 3 209 2 26 2 319 5 166 2 115 7 213 1 70 2 117 3 323 2 277 14 32 7 72 1 281 6 221 1 282 3 375 3 335 3 229 3 128 7 85 2 132 1 336 3 135 1 88 1 
281 2 282 1 342 2 14 1 375 1 335 1 318 1 128 1 165 1 319 1 115 1 132 1 305 1 117 1 381 1 323 1 32 1 22 2 
281 2 282 1 14 1 375 1 315 1 335 1 318 1 128 1 165 1 115 1 305 1 117 1 322 1 277 2 105 1 32 1 22 2 146 1 
342 2 315 1 318 1 26 1 319 1 165 1 115 2 117 1 323 1 277 2 32 2 146 1 281 2 282 1 14 2 375 1 335 1 128 2 132 1 305 1 105 1 22 4 
281 2 282 1 342 2 14 1 375 1 335 1 318 1 128 1 319 1 115 1 132 1 305 1 117 1 381 1 323 1 236 1 32 1 22 2 
281 2 282 1 14 1 375 1 315 1 335 1 318 1 128 1 115 1 305 1 117 1 322 1 236 1 277 2 105 1 32 1 22 2 146 1 
342 2 315 1 318 1 26 1 319 1 115 2 117 1 323 1 277 2 32 2 146 1 281 2 282 1 14 2 375 1 335 1 128 2 132 1 305 1 236 1 105 1 22 4 
342 2 315 1 318 1 26 1 319 1 115 2 117 1 323 1 277 2 32 2 146 1 281 2 282 1 14 2 375 1 335 1 128 2 132 1 305 1 105 1 22 4 
62 1 136 1 341 1 369 1 342 1 246 1 25 1 249 1 318 1 209 1 293 1 166 1 347 1 117 1 277 1 99 1 51 1 281 2 282 1 375 1 335 1 192 1 229 1 85 1 305 1 336 1 135 1 22 2 
339 1 62 1 136 1 369 1 342 1 246 1 25 1 318 1 209 1 293 1 166 1 8 1 347 1 117 1 277 1 51 1 281 2 282 1 15 1 375 1 335 1 192 1 229 1 85 1 305 1 336 1 135 1 22 2 
342 2 315 1 318 1 26 1 319 1 115 2 117 1 323 1 277 2 32 2 146 1 281 2 282 1 14 2 375 1 335 1 128 2 132 1 305 1 105 1 203 1 22 4 
205 1 62 1 341 1 342 2 315 1 25 1 249 1 318 1 209 1 26 1 319 1 293 1 115 2 166 1 347 1 117 1 323 1 215 1 277 2 32 2 99 1 146 1 51 1 281 2 282 1 14 2 375 1 335 1 229 1 128 2 85 1 132 1 305 1 336 1 105 1 135 1 22 4 
241 1 311 1 342 2 315 1 318 1 26 1 319 1 115 1 117 1 323 1 277 1 32 1 350 1 281 2 282 1 150 1 14 1 375 1 335 1 229 1 128 1 132 1 103 1 305 1 336 1 202 1 105 1 203 1 22 3 
23 1 342 9 315 3 371 1 318 2 66 1 26 3 319 3 295 2 323 3 277 10 71 1 146 3 281 4 53 1 224 1 356 1 123 1 14 6 333 2 375 2 226 2 335 2 256 1 126 1 301 1 132 3 305 2 105 3 22 19 
23 2 44 1 342 14 245 1 315 2 371 1 318 3 66 2 26 3 319 3 251 1 295 2 323 3 277 12 146 2 352 1 281 6 53 2 224 1 123 1 356 2 14 4 333 4 375 3 226 1 335 3 376 1 126 1 196 2 132 2 305 3 365 1 105 2 22 26 
44 1 342 20 245 1 344 1 248 1 295 4 251 1 96 1 144 1 146 3 352 1 53 1 356 3 14 7 301 1 196 1 305 3 152 1 365 1 105 5 22 41 23 3 315 4 371 1 318 3 26 4 66 2 319 5 70 1 323 4 277 21 71 1 281 6 224 1 123 1 375 3 333 4 335 3 226 1 126 1 376 1 233 1 132 4 
44 1 342 20 245 1 344 1 248 1 295 4 251 1 96 1 144 1 146 4 352 1 53 1 356 3 14 7 301 1 196 2 305 4 152 1 365 1 105 4 22 38 23 3 315 3 371 1 318 4 26 4 66 2 319 5 70 1 323 4 277 18 71 1 281 8 224 1 123 1 375 4 333 4 335 4 226 1 126 1 376 1 233 1 132 3 
23 4 44 1 342 27 245 1 315 7 344 1 371 1 248 1 318 2 66 1 26 7 319 8 251 1 295 4 70 1 169 2 144 1 96 1 323 7 277 25 146 6 352 1 281 4 53 1 224 1 356 2 123 1 14 13 333 4 375 2 226 1 335 2 376 1 126 1 301 2 196 1 132 7 152 1 305 2 365 1 105 8 22 52 
100 1 308 1 138 1 139 1 349 1 29 1 191 1 161 1 39 1 239 1 
204 1 80 1 
100 1 308 1 138 1 212 1 76 1 139 1 29 1 161 1 170 1 
100 1 308 1 138 1 309 1 78 1 139 1 54 1 191 1 161 1 361 1 102 1 151 1 380 2 134 1 349 1 29 1 145 1 39 1 
100 1 308 1 138 1 309 1 78 1 139 1 54 1 191 1 161 1 361 1 102 1 151 1 380 2 134 1 349 1 29 1 145 1 39 1 
100 1 308 1 138 1 309 1 78 1 139 1 54 1 191 1 161 1 361 1 102 1 151 1 380 2 134 1 349 1 29 1 145 1 39 1 
0 1 118 1 83 1 
0 1 118 1 83 1 
266 1 106 1 
266 1 118 1 106 1 
91 1 379 1 
204 1 308 1 309 1 138 1 139 1 91 1 369 1 161 1 294 1 274 1 29 1 186 1 145 1 350 2 100 1 33 1 150 2 80 1 229 2 361 1 17 1 129 1 379 1 380 1 103 2 134 1 336 2 
0 1 83 1 
266 1 118 1 106 1 
62 1 342 1 246 1 267 1 162 1 25 1 318 1 209 1 293 1 347 2 95 1 117 1 216 1 277 1 51 2 350 2 351 1 73 1 281 2 282 1 255 1 375 1 335 1 192 1 229 2 305 1 336 2 135 2 203 1 22 2 338 2 
62 1 136 1 25 1 227 1 209 1 293 1 164 1 67 1 347 1 259 1 135 1 280 1 238 1 51 1 
181 1 353 1 313 1 206 2 174 1 25 1 35 1 209 1 67 1 257 1 347 1 19 1 259 1 143 1 30 1 135 1 51 1 179 1 
181 1 353 1 313 1 206 2 174 1 25 1 35 1 209 1 67 1 257 1 347 2 19 1 259 1 143 1 215 1 30 1 135 2 51 2 179 1 
353 1 313 1 64 1 206 2 174 1 35 1 25 1 209 1 67 1 257 1 347 1 19 1 143 1 30 1 135 1 51 1 179 1 
55 1 
254 1 74 1 243 1 225 1 149 1 159 1 54 1 247 1 343 1 320 1 
331 2 92 1 225 5 54 5 13 1 46 5 315 2 16 5 26 2 319 2 320 5 60 5 323 2 252 10 105 2 
149 1 54 1 134 1 57 1 127 1 361 1 
62 1 136 2 243 2 244 1 291 1 343 2 25 1 209 1 293 1 164 1 320 2 347 4 51 4 220 2 299 1 254 2 74 1 225 2 283 1 227 1 57 4 127 2 361 3 58 2 21 1 134 3 87 1 262 2 135 4 
320 1 149 1 225 1 54 1 159 1 247 1 163 1 
243 1 46 1 316 1 343 1 320 1 324 1 252 1 254 1 74 1 225 1 149 1 54 2 127 1 57 1 361 1 59 1 134 1 
287 1 136 1 243 4 92 2 46 6 247 1 343 4 293 10 347 3 252 12 98 1 11 2 51 3 298 2 188 3 254 4 189 2 149 2 354 1 54 8 13 2 16 6 57 5 361 5 58 1 104 1 21 1 60 6 262 1 105 2 155 2 62 3 159 1 315 2 25 4 209 3 26 2 319 2 320 9 215 1 323 2 220 2 326 2 330 2 331 2 120 2 74 4 225 8 127 3 85 3 86 2 134 5 235 2 135 3 
23 1 44 1 243 2 46 3 245 1 315 2 343 2 26 2 319 2 251 1 295 1 320 8 323 2 252 6 220 1 352 1 331 2 254 2 74 2 225 5 149 2 356 1 54 5 13 1 16 5 57 1 127 1 361 1 195 1 200 1 134 1 60 5 262 1 365 1 105 2 
243 1 311 1 344 1 343 1 210 1 319 2 320 2 116 1 70 1 96 1 350 1 72 1 331 2 221 1 254 1 74 1 225 2 150 1 13 1 334 1 229 1 361 1 103 1 134 1 336 1 105 1 367 1 89 1 
136 1 62 1 341 1 369 1 311 2 246 1 249 1 25 1 318 1 209 1 293 1 166 1 347 1 117 1 277 1 99 1 51 1 350 2 281 2 282 1 150 2 375 1 335 1 229 3 231 1 85 1 305 1 103 2 336 3 135 1 22 1 89 1 
254 1 74 1 225 2 243 1 149 2 54 4 46 2 343 1 16 2 320 1 60 2 144 1 252 4 262 1 220 1 
100 1 119 1 91 1 191 1 161 1 
100 1 111 1 161 1 
100 1 111 1 161 1 
100 1 111 1 161 1 
100 1 368 1 161 1 
100 1 368 1 161 1 
100 1 368 1 161 1 
100 1 161 1 
139 1 29 1 
281 2 221 1 342 5 14 5 375 1 335 1 344 2 126 1 318 1 319 2 132 2 305 1 70 1 96 2 277 5 105 2 22 10 146 3 
281 2 342 2 14 1 375 1 335 1 126 1 318 1 319 1 132 1 305 1 323 1 22 2 
281 2 342 2 14 2 315 1 375 1 335 1 126 1 318 1 26 1 319 1 132 1 305 1 323 1 277 2 105 1 22 4 146 1 
281 6 342 1 14 2 375 3 335 3 344 1 126 1 318 3 6 1 196 1 132 1 305 3 96 1 277 2 71 1 22 3 146 1 
23 3 342 16 315 2 344 2 248 1 5 1 318 4 26 2 319 5 295 3 321 1 70 2 144 1 96 2 323 2 277 16 71 1 146 5 281 8 221 1 356 1 14 9 375 4 335 4 359 1 126 1 196 1 132 4 152 1 305 4 260 1 105 5 22 32 
342 9 344 2 248 1 318 2 319 3 70 2 96 2 144 1 277 9 146 4 281 4 221 1 14 7 375 2 335 2 196 1 132 3 152 1 305 2 105 3 22 18 
342 3 14 2 344 1 248 1 163 1 319 1 152 1 70 1 144 1 96 1 277 3 105 1 22 6 146 2 
281 2 342 2 14 2 315 1 375 1 335 1 318 1 26 1 319 1 321 1 132 1 305 1 323 1 277 2 105 1 22 4 146 1 
23 1 356 1 342 3 14 2 315 1 301 1 26 1 319 1 295 2 132 1 323 1 277 4 105 1 22 7 146 1 
23 2 342 13 315 2 344 2 248 1 318 1 26 2 319 5 295 2 70 2 169 1 144 1 96 2 323 2 277 13 146 5 281 2 221 1 14 7 375 1 335 1 301 1 84 1 196 1 132 2 152 1 305 1 105 5 22 26 
295 1 277 1 22 1 
23 1 342 1 22 1 
281 2 92 1 342 3 14 3 375 1 315 1 335 1 318 1 26 1 319 1 321 1 132 1 305 1 323 1 277 3 105 1 22 6 146 2 
352 1 281 2 23 1 44 1 356 1 342 6 14 2 245 1 315 2 375 1 335 1 126 1 318 1 26 2 319 2 251 1 295 1 132 1 305 1 323 2 365 1 277 6 105 2 22 12 146 1 
342 3 14 2 344 1 319 1 132 1 70 1 96 1 277 3 105 1 22 6 146 1 
281 2 342 1 14 2 375 1 335 1 344 1 248 1 318 1 6 1 196 1 132 1 305 1 152 1 96 1 277 2 22 3 146 1 
23 1 342 8 344 2 248 1 318 1 319 3 295 1 70 2 144 1 96 2 277 8 146 4 281 2 221 1 356 1 14 5 375 1 335 1 126 1 132 1 305 1 152 1 365 1 105 3 22 16 
23 1 342 10 344 2 248 1 318 2 26 1 319 4 295 2 321 1 70 2 144 1 96 2 323 1 277 9 146 4 281 4 221 1 356 1 14 6 375 2 335 2 126 1 301 1 132 2 152 1 305 2 365 1 105 3 22 19 
23 1 44 1 342 13 245 1 315 2 344 2 248 1 318 3 26 2 319 5 295 1 251 1 321 1 70 2 144 1 96 2 323 2 277 14 146 5 352 1 281 6 221 1 356 1 14 7 375 3 335 3 126 1 196 1 132 2 152 1 305 3 365 1 105 5 22 27 
23 1 44 1 342 14 245 1 315 1 344 2 248 1 318 3 26 2 319 5 295 1 251 1 321 1 70 2 144 1 96 2 323 2 277 11 146 5 281 6 352 1 221 1 356 1 14 9 375 3 335 3 126 1 196 1 132 4 152 1 305 3 365 1 105 4 22 25 
23 1 342 8 344 2 248 1 318 1 319 3 295 1 70 2 144 1 96 2 277 8 146 4 281 2 221 1 356 1 14 5 375 1 335 1 126 1 132 1 305 1 152 1 365 1 105 3 22 16 
352 1 281 2 23 1 44 1 356 1 342 6 14 2 245 1 315 2 375 1 335 1 126 1 318 1 26 2 319 2 251 1 295 1 132 1 305 1 323 2 365 1 277 6 105 2 22 12 146 1 
23 1 44 1 342 14 245 1 315 1 344 2 248 1 318 4 26 2 319 5 251 1 295 1 321 1 70 2 144 1 96 2 323 2 277 12 146 5 352 1 281 8 221 1 356 1 14 7 375 4 335 4 126 1 196 2 132 2 152 1 305 4 365 1 105 4 22 26 
23 1 44 1 342 9 245 1 315 2 318 4 26 3 319 3 251 1 295 1 323 3 277 7 71 1 146 3 352 1 281 8 356 1 14 6 375 4 335 4 126 1 196 2 132 3 305 4 365 1 105 2 22 16 
342 3 14 6 344 3 248 2 319 1 132 3 152 1 70 1 96 3 277 4 105 1 22 7 146 3 
23 1 44 1 342 14 245 1 315 1 344 2 248 1 318 4 26 2 319 5 251 1 295 1 70 2 144 1 96 2 323 2 277 12 71 1 146 5 352 1 281 8 221 1 356 1 14 7 375 4 335 4 126 1 196 2 132 2 152 1 305 4 365 1 105 4 22 26 
329 1 345 1 369 1 336 1 253 1 229 1 350 1 
329 1 101 1 369 1 125 1 229 1 345 1 258 1 214 1 364 1 336 1 253 1 350 1 
327 1 136 1 62 1 25 1 227 1 209 1 164 1 293 1 347 4 20 1 215 1 135 4 51 4 
43 1 62 1 112 1 25 2 209 1 293 1 58 1 85 1 347 2 297 1 69 1 31 1 135 2 51 2 
136 1 347 1 206 1 143 1 30 1 174 1 135 1 25 1 209 1 51 1 
293 1 351 1 73 1 62 1 257 1 347 2 215 1 135 2 25 1 209 1 51 2 
351 1 136 1 62 2 56 1 227 1 25 2 209 2 164 1 293 3 58 1 304 1 347 4 20 1 215 1 135 5 51 5 
351 1 136 1 62 2 227 1 25 2 209 2 164 1 293 3 58 1 304 1 347 4 20 1 215 1 135 5 156 1 51 5 
293 1 164 1 62 1 136 1 347 1 135 1 25 1 227 1 163 1 209 1 51 1 
52 1 62 1 136 1 150 1 341 1 369 1 25 1 229 2 209 1 293 1 166 1 85 1 347 1 103 1 336 2 135 1 350 1 51 1 
72 1 52 1 120 1 62 2 150 2 341 1 369 1 24 1 25 1 229 2 209 1 293 3 113 1 166 1 58 1 85 2 347 1 103 1 336 2 135 1 11 1 350 2 51 1 
62 2 369 1 24 1 25 1 209 1 293 3 113 1 166 1 8 1 347 2 11 1 51 2 350 2 327 1 72 1 52 1 120 1 150 2 229 2 58 1 85 2 103 1 336 2 135 2 
327 1 298 1 120 1 188 1 189 1 136 1 62 1 149 1 310 1 54 1 25 1 57 1 361 2 183 1 209 1 293 4 58 1 85 1 347 3 134 2 135 3 11 1 51 3 
327 1 298 1 330 1 120 1 188 1 189 1 136 1 62 1 149 1 54 1 25 1 57 1 361 2 209 1 293 4 58 1 85 1 347 3 134 2 135 3 11 1 51 3 
347 1 142 1 135 1 25 1 209 1 51 1 
351 1 43 1 136 2 62 2 56 1 25 3 209 2 293 3 197 1 304 1 85 1 257 1 347 6 142 1 297 1 104 1 215 1 337 1 135 7 338 1 51 7 
341 1 342 7 344 2 248 1 249 1 293 1 347 1 95 1 96 2 144 1 50 1 99 1 51 1 350 1 146 4 52 1 150 1 14 5 103 1 305 2 152 1 105 3 203 1 22 14 205 1 62 1 369 3 25 1 318 2 209 1 319 3 166 1 115 1 70 2 117 2 215 1 277 7 32 1 72 1 281 4 221 1 282 2 375 2 335 2 229 2 128 1 85 1 132 1 336 2 135 1 88 1 
136 1 243 2 159 1 247 1 343 2 293 2 294 1 320 1 347 1 51 1 326 1 330 1 298 1 254 2 188 1 189 1 74 2 149 1 225 1 54 1 57 2 127 1 361 3 86 1 21 1 134 3 235 1 135 1 
293 2 189 1 62 1 85 1 347 2 142 1 104 1 215 1 135 2 25 2 98 1 209 1 51 2 
52 1 62 1 136 1 150 1 369 1 25 1 229 2 209 1 293 1 166 1 85 1 8 1 347 1 103 1 336 2 135 1 350 1 51 1 
43 1 62 1 25 2 209 1 293 1 58 1 197 1 85 1 347 1 297 1 104 1 135 1 51 1 
240 1 286 1 369 1 178 1 237 1 
72 1 298 1 240 1 158 1 180 1 149 1 369 1 54 1 24 1 81 1 4 1 361 2 113 1 294 1 286 2 134 2 133 1 178 2 237 2 
240 1 255 1 162 1 229 1 286 1 336 1 216 1 178 1 350 1 
240 1 81 1 4 1 
130 1 28 1 45 1 357 1 3 1 82 1 261 1 187 1 
75 1 122 1 140 1 45 2 289 1 3 4 82 3 317 1 175 1 303 2 130 1 28 4 261 2 187 1 
45 1 357 1 3 2 82 1 268 1 194 1 130 1 303 1 28 2 199 1 261 1 187 1 
75 1 137 1 140 2 45 1 357 1 289 2 3 3 82 1 130 1 28 3 261 1 187 1 
121 1 82 1 366 1 
130 1 28 1 63 1 357 1 3 1 187 1 
18 1 303 1 130 1 28 2 45 1 357 1 3 2 82 1 261 1 187 1 
9 1 
130 1 28 1 45 1 357 1 3 1 82 1 261 1 187 1 
45 1 82 1 261 1 163 1 
130 1 28 1 45 1 3 1 82 1 261 1 187 1 
340 1 300 1 3 1 
61 1 75 1 140 1 45 1 357 1 289 2 3 3 82 1 130 1 28 3 261 1 187 1 
303 1 130 1 28 2 45 1 124 1 3 2 82 1 261 1 187 1 
313 1 357 1 206 1 3 1 82 1 175 1 130 1 28 1 185 1 30 1 187 1 
130 1 28 1 45 1 357 1 3 1 82 1 187 1 
130 1 28 1 45 2 357 1 3 1 261 1 187 1 
108 1 45 1 357 1 3 2 82 1 362 1 130 2 28 2 276 1 187 2 
122 1 45 1 357 1 3 3 82 2 175 1 18 1 130 1 303 2 28 3 154 1 261 1 187 1 
45 1 313 1 206 2 357 1 3 2 82 1 174 1 130 1 303 1 28 2 19 1 261 1 30 1 187 1 325 1 
122 1 45 1 124 1 357 1 3 4 82 2 175 1 130 2 303 2 28 4 275 1 261 1 187 2 
45 1 357 1 289 1 3 3 82 1 18 1 303 1 130 1 28 3 261 1 187 1 
122 1 82 1 317 1 175 1 
45 1 82 1 

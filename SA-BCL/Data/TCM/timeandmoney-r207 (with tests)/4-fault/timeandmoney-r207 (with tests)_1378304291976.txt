#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 348 84 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 348 205 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 348 205 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 348 205 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 348 205 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
157 2 277 2 20 6 356 1 132 9 87 1 358 1 280 2 166 1 200 2 93 1 173 1 174 2 207 1 28 1 210 2 328 1 212 9 214 4 152 5 241 1 58 1 242 3 155 1 243 2 220 1 224 1 353 1 
157 2 277 2 20 6 356 1 132 9 87 1 358 1 280 2 166 1 200 2 93 1 173 1 174 2 207 1 28 1 210 2 328 1 212 9 214 4 152 5 241 1 58 1 242 3 155 1 243 2 220 1 224 1 353 1 
157 2 277 2 20 7 356 1 132 10 87 1 358 1 280 2 166 1 200 2 93 1 173 1 174 2 207 1 28 1 210 2 328 1 212 10 214 5 152 6 241 1 58 1 242 4 155 1 243 2 220 1 224 1 353 1 
157 1 277 2 20 4 356 1 132 7 87 1 358 1 280 2 166 1 200 2 93 1 173 1 174 2 207 1 210 2 328 1 212 7 214 3 152 4 241 1 58 1 242 2 155 1 243 2 220 1 224 1 353 1 
174 1 157 2 277 1 207 1 20 3 28 1 356 1 210 1 132 4 212 4 214 2 152 3 241 1 166 1 242 1 200 1 243 1 93 1 
174 1 277 1 132 2 212 2 87 1 152 1 162 1 266 1 241 1 280 1 166 1 200 1 243 1 93 1 224 1 171 1 
277 2 20 1 132 3 212 3 214 1 152 2 241 1 280 1 166 1 242 1 243 2 93 1 353 1 
157 2 20 7 277 2 356 1 132 9 280 1 166 1 200 1 93 1 142 1 174 1 207 1 210 1 28 1 212 9 214 4 152 5 241 1 58 1 242 3 100 1 243 2 220 1 353 1 
157 2 20 7 277 2 356 1 132 9 280 1 166 1 200 1 93 1 142 1 174 1 207 1 210 1 28 1 212 9 214 4 152 5 241 1 58 1 242 3 100 1 243 2 220 1 353 1 
180 1 112 1 313 1 
316 1 180 1 308 2 
97 1 120 2 138 2 259 1 365 2 133 2 291 2 245 2 
127 1 158 2 1 1 133 3 228 1 195 1 253 1 361 1 135 2 69 1 110 1 71 1 111 1 138 2 258 1 259 1 49 1 365 3 140 1 170 1 325 1 366 2 54 1 143 1 97 1 327 1 6 1 120 2 146 1 291 2 178 2 375 1 244 1 36 2 37 1 83 1 245 2 
97 1 362 1 342 1 120 1 183 1 138 1 365 1 133 1 291 1 245 1 
115 1 133 1 239 1 347 1 57 1 44 1 107 1 180 1 342 1 332 1 365 1 167 1 313 1 245 1 
115 2 120 1 133 1 239 1 291 1 57 1 44 1 180 1 342 1 332 1 138 1 167 2 365 1 313 1 245 1 
115 1 167 1 194 1 370 1 62 1 
115 2 180 1 119 1 167 2 150 1 370 1 313 1 62 1 
115 1 167 1 62 1 
115 1 97 1 120 1 249 1 133 1 370 1 291 1 362 1 342 1 183 1 138 1 167 1 365 1 245 1 
180 1 
115 2 180 1 119 1 167 2 370 1 313 1 359 1 62 1 
115 5 26 1 336 2 119 1 30 1 105 1 370 2 229 1 45 1 108 2 68 1 180 1 322 2 218 1 167 5 376 1 222 1 313 1 62 2 
112 1 259 1 
120 1 133 2 291 1 197 1 363 1 138 1 365 2 259 2 245 2 
191 1 139 1 74 1 
38 1 158 1 6 1 1 1 146 1 133 1 195 1 135 1 178 1 69 1 110 1 375 1 259 1 365 1 140 1 170 1 
158 1 1 1 6 1 146 1 133 2 195 1 291 1 339 1 135 1 178 1 69 1 110 1 375 1 138 1 365 2 140 1 275 1 170 1 245 1 74 1 
120 1 138 3 259 1 365 3 133 3 275 1 291 3 245 3 
362 1 342 1 138 1 365 1 133 1 291 1 245 1 
363 1 342 1 120 1 138 1 365 1 133 1 291 1 197 1 245 1 
246 1 158 1 1 1 133 4 228 1 195 1 253 1 44 1 339 1 90 1 69 1 135 1 110 1 71 1 363 1 342 1 111 1 138 3 259 1 49 1 365 4 167 1 140 1 170 1 366 1 143 1 115 1 97 1 327 1 6 1 146 1 120 2 239 1 291 3 57 1 178 1 375 1 244 1 332 1 36 2 37 1 275 1 83 1 245 3 
3 1 138 1 259 1 365 2 133 2 291 1 275 1 245 2 107 1 
115 1 246 1 120 1 133 3 239 1 291 3 44 1 57 1 339 1 230 1 180 1 363 1 342 1 332 1 138 3 167 1 365 3 275 2 245 3 
120 1 191 1 133 2 291 2 363 1 138 2 365 2 275 1 245 2 74 1 
158 1 6 1 1 1 146 1 133 1 195 1 135 1 178 1 69 1 110 1 375 1 259 1 365 1 140 1 170 1 
158 1 129 1 6 1 1 1 133 1 195 1 135 1 178 1 110 1 60 1 375 1 259 1 365 1 140 1 170 1 
63 1 191 2 40 1 228 1 163 1 253 1 109 1 71 1 299 1 139 2 287 1 113 1 325 2 74 2 366 4 143 1 327 1 148 1 56 1 349 1 244 2 36 2 37 1 184 1 
342 1 138 1 365 1 133 1 238 1 291 1 57 1 245 1 
120 1 133 5 291 4 107 1 339 1 12 1 3 1 363 1 138 4 365 5 259 1 275 2 245 5 354 1 
362 1 342 1 138 2 365 2 238 1 133 2 291 2 245 2 
293 1 288 1 
293 1 288 1 
14 1 290 1 
14 1 290 1 
14 1 290 1 
293 1 46 1 288 1 
293 1 46 1 288 1 
293 1 302 1 288 1 
293 2 128 1 27 1 14 1 290 1 288 2 
293 1 46 1 288 1 
153 1 293 1 288 1 
153 1 293 1 288 1 
153 1 293 1 288 1 
115 2 189 1 209 2 27 1 64 1 279 1 34 1 10 1 293 2 284 1 180 1 221 1 167 2 377 2 352 2 114 3 381 2 288 2 126 2 
133 2 67 1 255 1 284 1 138 2 259 1 167 1 365 2 114 1 302 1 52 1 76 1 288 1 115 1 144 1 209 1 117 1 291 2 267 1 293 1 377 1 352 1 245 2 126 1 
174 1 200 1 210 1 
174 1 200 1 171 1 
200 3 210 2 300 1 219 1 333 1 171 1 
200 2 210 1 219 1 193 1 333 1 171 1 
200 2 210 1 219 2 333 1 171 1 
316 1 336 1 67 1 108 1 68 3 255 1 322 1 299 1 167 5 52 1 234 1 115 5 304 2 118 1 119 1 148 1 308 3 370 4 33 1 123 2 349 1 373 1 269 1 180 2 294 1 376 2 222 1 351 1 311 2 184 1 313 1 62 1 
316 3 190 1 336 2 194 5 108 2 68 8 255 4 322 2 299 3 24 1 167 9 203 5 96 1 115 9 235 1 26 1 119 1 148 3 308 9 370 7 33 3 123 6 349 3 373 1 269 2 180 5 294 2 125 1 376 6 222 1 311 6 226 1 184 3 313 1 62 6 
316 2 336 1 108 1 68 3 255 1 322 1 299 1 167 3 234 1 115 3 304 1 26 1 148 1 370 2 308 4 33 1 123 2 349 1 269 1 180 3 294 1 376 2 351 1 311 2 313 1 184 1 
316 3 336 1 108 1 68 5 255 2 322 1 299 2 24 1 167 4 234 1 96 1 115 4 304 2 26 1 148 2 308 7 370 3 33 2 123 4 349 2 269 1 180 4 294 1 376 4 351 1 311 4 313 1 226 1 184 2 
323 1 112 1 170 1 
170 1 186 1 
310 1 
1 1 170 1 
110 1 323 2 1 1 141 1 252 1 170 3 
110 1 1 1 170 1 
179 1 170 1 
326 1 289 1 131 1 148 1 307 1 160 1 40 2 176 1 321 2 181 1 47 1 4 1 244 3 113 3 184 1 325 4 366 7 
326 1 289 1 131 1 148 1 307 1 160 1 40 2 176 1 321 2 181 1 47 1 4 1 244 3 113 3 184 1 325 4 366 7 
326 1 289 1 130 1 131 1 148 1 307 1 160 1 40 2 176 1 321 2 181 1 47 1 4 1 244 3 113 3 184 1 325 4 366 7 
296 3 131 1 160 1 40 5 43 1 253 1 321 3 47 1 4 2 71 1 299 3 343 1 344 1 113 10 325 16 366 31 143 1 326 2 346 1 289 2 8 4 148 4 307 5 176 2 149 1 33 3 349 3 181 1 331 1 244 15 36 2 274 1 37 1 184 4 
326 1 143 2 289 1 131 1 148 1 160 1 307 1 176 1 40 3 251 1 121 1 43 1 253 2 321 2 181 1 4 1 71 2 244 4 36 4 37 2 113 4 184 1 325 5 366 9 
158 1 20 1 277 1 132 2 195 1 88 1 134 1 280 1 135 1 283 1 166 1 200 2 300 1 364 1 93 1 171 1 174 1 210 1 6 1 212 2 329 1 152 1 371 1 241 1 240 1 178 1 243 1 102 1 82 1 85 1 
158 1 277 1 20 2 132 3 195 1 88 1 134 1 280 1 135 1 166 1 201 1 200 2 300 1 364 1 171 1 174 1 210 1 6 1 212 3 329 1 152 1 241 1 240 1 178 1 243 1 102 1 82 1 380 1 312 1 85 1 
158 1 20 2 132 2 195 1 88 1 134 1 280 1 135 1 166 1 201 1 200 2 300 1 364 1 171 1 174 1 6 1 210 1 212 2 329 1 152 1 241 1 178 1 102 1 82 1 312 1 
158 1 277 1 317 1 1 1 132 1 42 1 195 1 280 2 89 1 135 1 91 1 140 1 170 1 345 1 6 1 212 1 329 2 178 1 243 1 102 2 82 2 334 1 380 1 
158 1 277 1 132 1 195 1 88 1 134 1 280 1 135 1 200 2 300 1 364 1 93 1 171 1 174 1 210 1 6 1 212 1 329 1 371 1 240 1 178 1 243 1 102 1 82 1 312 1 85 1 
116 1 
336 1 1 1 248 2 133 1 195 1 44 1 89 1 135 2 342 1 140 2 301 2 345 1 262 1 99 2 208 2 6 1 7 1 55 1 308 2 347 1 151 1 57 1 215 1 59 4 268 1 222 1 313 1 62 6 316 2 158 2 103 2 104 1 107 1 108 1 68 2 70 1 322 1 165 1 286 2 167 5 365 1 170 1 115 5 119 3 31 2 239 1 178 2 79 1 80 1 180 2 294 1 332 1 376 2 335 1 245 1 
115 3 103 1 119 1 55 1 239 1 133 1 347 1 151 1 359 1 44 1 57 1 107 1 59 2 80 1 268 1 342 1 332 1 167 3 365 1 335 1 245 1 62 2 
115 3 99 1 119 1 55 1 239 1 133 1 347 1 151 1 359 1 44 1 57 1 107 1 59 3 80 1 268 1 180 1 342 1 332 1 167 3 365 1 335 1 313 1 245 1 62 1 
103 1 133 1 359 1 44 1 107 1 342 1 286 1 365 1 167 3 115 3 99 1 119 1 55 1 239 1 347 1 151 1 57 1 59 3 268 1 80 1 180 1 332 1 335 1 245 1 313 1 62 2 
336 1 248 2 133 1 44 1 342 1 301 2 99 4 208 2 211 1 55 1 347 1 151 1 57 1 59 6 215 1 268 1 222 1 313 5 314 1 62 7 316 2 103 4 278 1 359 1 107 1 108 1 68 1 322 1 165 1 23 1 286 4 365 1 167 5 169 1 115 5 119 3 31 2 239 1 80 1 180 5 332 1 376 1 335 1 245 1 
316 2 103 2 336 1 248 2 133 1 44 1 107 1 108 1 68 1 322 1 165 1 342 1 286 2 167 4 365 1 301 2 115 4 99 2 208 2 119 2 31 2 55 1 239 1 308 2 347 1 151 1 57 1 215 1 59 4 79 1 268 1 80 1 180 2 332 1 376 1 222 1 335 1 313 1 245 1 62 4 
316 2 103 2 336 1 248 2 133 1 44 1 107 1 108 1 68 1 165 1 322 1 342 1 23 1 286 2 365 1 167 4 301 2 115 4 99 2 208 2 119 2 211 1 31 2 55 1 239 1 347 1 151 1 57 1 215 1 59 4 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 314 1 62 4 
316 2 103 2 336 1 248 2 133 1 44 1 107 1 108 1 68 1 165 1 322 1 342 1 23 1 286 2 365 1 167 4 301 2 115 4 99 2 208 2 119 2 211 1 31 2 55 1 239 1 347 1 151 1 57 1 215 1 59 4 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 314 1 62 4 
0 2 103 2 318 1 247 1 336 1 248 2 133 1 44 1 107 1 108 1 68 1 322 1 342 1 286 2 365 1 167 4 301 2 115 4 99 2 119 2 55 1 32 1 239 1 308 2 347 1 151 1 57 1 215 1 59 4 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 276 2 314 1 62 4 
316 2 103 3 336 1 248 2 133 1 44 1 107 1 108 1 68 1 165 1 322 1 342 1 23 1 286 3 365 1 167 4 301 2 169 1 115 4 99 3 208 2 119 2 211 1 31 2 55 1 239 1 347 1 151 1 57 1 215 1 59 5 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 314 1 62 5 
316 2 103 3 336 1 248 2 133 1 44 1 107 1 108 1 68 1 165 1 322 1 342 1 23 1 286 3 365 1 167 4 301 2 169 1 115 4 99 3 208 2 119 2 211 1 31 2 55 1 239 1 347 1 151 1 57 1 215 1 59 5 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 314 1 62 5 
0 2 103 2 336 1 248 2 133 1 44 1 107 1 108 1 68 1 322 1 342 1 286 2 167 4 365 1 301 2 115 4 99 2 119 2 55 1 32 1 239 1 308 2 347 1 151 1 57 1 215 1 59 4 79 1 268 1 80 1 180 1 332 1 376 1 222 1 335 1 313 1 245 1 276 2 62 4 
131 1 191 1 160 1 40 2 228 1 253 1 109 1 321 1 4 1 71 1 112 1 139 1 259 2 113 2 74 1 325 3 366 6 143 1 327 1 148 1 176 1 181 1 244 3 36 2 37 1 184 1 
159 1 296 3 191 4 40 1 228 1 253 2 360 1 71 2 299 2 343 1 344 1 139 11 259 1 49 1 113 2 74 11 325 8 366 14 54 1 143 2 98 1 327 2 29 1 8 3 148 2 307 1 33 2 349 1 11 1 244 6 36 4 37 2 184 1 
158 1 38 1 295 1 1 1 191 1 66 1 133 2 195 1 228 1 253 1 339 1 297 1 69 1 135 1 110 1 71 1 138 1 259 1 140 1 365 2 49 1 170 1 325 1 366 2 143 1 54 1 98 1 6 1 327 1 146 1 291 1 178 1 375 1 244 1 36 2 37 1 275 1 245 1 
131 1 1 2 191 7 40 4 133 3 195 2 338 1 253 3 339 1 135 3 4 1 299 2 138 1 139 7 259 2 49 1 140 1 51 1 54 1 143 3 98 1 6 2 146 2 148 3 307 4 349 2 101 2 275 1 312 1 158 3 160 1 228 3 321 1 69 2 110 2 71 3 231 2 111 2 25 1 365 3 170 2 113 8 74 7 325 10 366 20 327 3 175 2 176 1 291 1 33 2 178 3 330 2 181 1 375 2 244 10 36 6 37 3 184 3 245 1 
158 8 1 2 22 1 133 1 195 2 228 2 253 2 89 1 283 1 109 1 135 7 361 2 256 1 71 2 202 1 138 1 365 1 140 2 49 1 170 3 75 1 325 1 345 1 366 2 143 2 54 1 264 1 6 2 327 2 291 1 292 1 178 8 244 1 36 4 225 1 37 2 275 1 312 1 245 1 
191 1 40 1 133 1 228 1 253 1 341 1 363 1 71 1 299 1 139 1 138 1 365 1 113 1 74 1 325 1 366 3 143 1 98 1 327 1 120 1 148 1 291 1 33 1 349 1 244 2 36 2 37 1 245 1 184 1 
143 1 327 1 191 1 148 1 307 1 228 1 163 1 253 1 109 1 71 1 299 1 139 1 36 2 37 1 113 1 74 1 325 2 366 2 
143 1 327 1 191 1 40 1 228 1 253 1 349 1 109 1 71 1 244 2 139 1 36 2 37 1 287 1 113 1 184 1 74 1 366 2 
191 2 40 1 228 1 253 1 109 1 299 1 71 1 139 2 113 2 325 2 74 2 366 4 143 1 327 1 148 1 307 1 33 1 349 1 244 2 36 2 37 1 184 1 
143 1 327 1 191 1 148 1 307 1 228 1 163 1 253 1 71 1 299 1 202 1 139 1 36 2 37 1 113 1 74 1 325 2 366 2 
143 1 327 1 191 1 40 1 228 1 253 1 349 1 71 1 202 1 244 2 139 1 36 2 37 1 287 1 113 1 184 1 74 1 366 2 
191 2 40 1 228 1 253 1 299 1 71 1 202 1 139 2 113 2 325 2 74 2 366 4 143 1 327 1 148 1 307 1 33 1 349 1 244 2 36 2 37 1 184 1 
191 2 40 1 228 1 253 1 299 1 71 1 139 2 113 2 325 2 74 2 366 4 143 1 327 1 148 1 307 1 33 1 349 1 244 2 36 2 37 1 184 1 
158 1 1 1 133 1 195 1 228 1 253 1 69 1 135 1 110 1 71 1 111 1 259 1 140 1 365 1 49 1 170 1 325 1 366 2 54 1 143 1 6 1 327 1 146 1 178 1 375 1 244 1 36 2 37 1 
158 1 129 1 1 1 65 1 133 1 195 1 228 1 253 1 135 1 110 1 71 1 259 1 140 1 365 1 49 1 170 1 325 1 366 2 54 1 143 1 6 1 327 1 178 1 60 1 375 1 244 1 36 2 37 1 
191 2 40 1 228 1 253 1 299 1 71 1 139 2 113 2 325 2 74 2 366 4 143 1 98 1 327 1 148 1 307 1 33 1 349 1 244 2 36 2 37 1 184 1 
158 1 1 1 191 2 40 1 133 1 195 1 228 1 253 1 69 1 135 1 283 1 110 1 299 1 71 1 111 1 231 1 139 2 365 1 113 2 170 1 74 2 325 2 366 4 143 1 6 1 327 1 146 1 148 1 307 1 33 1 349 1 178 1 375 1 244 2 36 2 37 1 184 1 
191 1 133 1 228 1 253 1 363 1 71 1 299 1 324 1 138 1 139 1 365 1 113 1 325 2 74 1 366 3 143 1 98 1 327 1 120 1 148 1 307 1 291 1 33 1 349 1 244 1 36 2 37 1 184 1 245 1 
315 1 296 1 40 1 253 2 71 2 299 1 343 1 344 1 72 1 50 1 113 2 325 4 366 9 143 2 8 2 148 1 307 1 9 1 213 1 121 1 348 1 33 1 349 1 244 5 36 4 37 2 84 1 379 1 184 1 
315 2 296 2 40 1 43 2 253 3 71 3 299 2 343 2 72 1 50 3 168 1 113 2 325 11 205 1 366 20 95 1 143 3 236 1 8 2 148 2 307 1 9 2 121 1 348 1 33 2 309 1 349 1 374 1 244 9 36 6 37 3 379 1 184 1 185 1 
315 1 296 1 40 1 253 2 71 2 299 1 343 1 344 1 72 1 50 1 113 2 325 4 205 1 366 9 143 2 8 2 148 1 307 1 9 1 213 1 121 1 348 1 33 1 349 1 244 5 36 4 37 2 379 1 184 1 
315 1 296 1 40 1 253 2 71 2 299 1 343 1 344 1 72 1 50 1 113 2 325 4 205 1 366 9 143 2 8 2 148 1 307 1 9 1 213 1 121 1 348 1 33 1 349 1 244 5 36 4 37 2 379 1 184 1 
315 1 296 4 131 1 160 1 40 6 43 1 253 2 360 2 321 1 4 1 71 2 299 6 343 2 344 2 72 1 50 3 168 1 113 12 325 24 205 1 95 1 366 46 143 2 236 1 8 4 148 7 307 6 176 1 9 1 121 1 348 1 33 6 309 1 349 6 374 1 181 1 244 22 36 4 37 2 379 1 184 7 185 1 
293 1 209 1 27 1 64 1 92 1 221 1 377 1 352 1 126 1 288 1 
144 1 302 1 
293 1 209 1 377 1 352 1 172 1 187 1 281 1 126 1 288 1 
115 1 189 1 209 1 27 1 64 1 34 1 10 1 293 1 284 1 180 1 221 1 167 1 377 1 352 1 114 2 381 1 288 1 126 1 
115 1 189 1 209 1 27 1 64 1 34 1 10 1 293 1 284 1 180 1 221 1 167 1 377 1 352 1 114 2 381 1 288 1 126 1 
115 1 189 1 209 1 27 1 64 1 34 1 10 1 293 1 284 1 180 1 221 1 167 1 377 1 352 1 114 2 381 1 288 1 126 1 
128 1 46 1 265 1 
128 1 46 1 265 1 
153 1 260 1 
153 1 128 1 260 1 
117 1 76 1 
133 2 41 1 67 1 255 1 138 2 259 1 365 2 167 1 114 1 302 1 52 1 76 1 288 1 115 1 144 1 209 1 117 1 370 1 291 2 34 1 267 1 293 1 377 1 352 1 381 1 245 2 126 1 
46 1 265 1 
153 1 128 1 260 1 
19 1 158 2 1 1 133 2 195 1 228 1 253 1 282 1 361 2 135 2 256 1 71 1 365 2 49 1 170 1 325 1 366 2 143 1 54 1 98 1 6 1 327 1 178 2 154 1 244 1 36 2 225 1 37 1 156 1 17 1 245 2 
174 1 158 2 77 1 210 1 6 1 147 1 195 1 240 1 134 1 135 2 178 2 283 1 200 2 300 1 364 1 232 1 82 1 171 1 312 1 
174 1 158 1 210 1 6 1 195 1 240 1 134 1 135 1 178 1 200 2 300 1 364 1 232 1 82 1 378 1 171 1 312 1 
158 1 6 1 1 1 147 1 357 1 42 1 195 1 89 1 135 1 178 1 140 1 82 1 170 1 345 1 
174 1 158 1 77 1 210 1 6 1 147 1 195 1 240 1 134 1 135 1 178 1 200 2 300 1 364 1 232 1 82 1 171 1 312 1 
367 1 
68 1 180 1 218 1 30 1 112 1 376 1 313 1 
316 1 336 1 108 1 68 1 165 1 322 1 167 1 115 1 208 1 119 1 31 1 308 1 180 2 376 1 222 1 313 1 62 1 
336 4 1 2 86 2 195 3 252 1 337 1 44 2 135 3 136 2 299 2 257 1 140 1 204 2 6 2 7 1 148 2 308 12 349 2 218 1 270 2 101 2 272 2 273 2 222 4 311 6 313 2 18 1 62 5 158 3 316 6 106 2 108 4 68 9 283 1 110 2 322 4 323 2 167 5 170 8 233 1 115 5 119 3 30 1 237 1 33 2 122 1 123 6 178 3 179 1 294 2 180 8 376 8 184 2 186 3 
316 3 296 1 336 2 86 1 108 2 68 8 322 2 299 2 343 1 167 1 168 1 73 1 204 2 95 1 115 1 145 1 119 1 7 1 236 1 8 1 148 2 308 6 33 2 123 5 349 2 374 1 294 1 180 5 222 2 376 5 311 5 184 2 313 2 185 1 62 1 
336 1 86 1 249 1 133 1 108 1 320 1 68 2 362 1 322 1 4 1 342 1 23 1 138 1 365 1 167 1 204 2 115 1 97 1 120 1 148 2 176 1 291 1 181 1 183 1 222 1 376 2 184 1 245 1 
336 1 30 1 108 1 68 1 322 1 180 1 218 1 222 1 376 1 313 1 
316 5 86 1 148 2 308 10 33 2 123 5 349 2 68 5 180 5 101 1 299 2 376 5 311 5 184 2 204 2 
115 1 180 1 119 1 167 1 313 1 62 1 
158 4 336 2 1 1 104 1 195 1 337 1 340 1 108 2 89 1 68 2 70 1 135 4 322 2 48 1 257 2 140 2 167 3 170 1 345 1 115 3 26 1 6 1 119 2 7 2 178 4 294 2 222 1 376 2 62 4 
158 1 1 1 133 3 195 1 228 1 253 1 135 1 69 1 110 1 71 1 111 1 138 2 259 1 49 1 140 1 365 3 170 1 366 1 143 1 97 1 6 1 327 1 120 2 146 1 291 2 178 1 375 1 244 1 36 2 37 1 83 1 245 2 
316 2 336 1 7 1 308 4 123 2 108 1 68 1 321 1 322 1 294 1 180 4 376 2 222 1 311 2 313 2 
209 1 303 1 126 1 
209 1 303 1 126 1 
209 1 221 1 53 1 76 1 126 1 
209 1 303 1 126 1 
209 1 198 1 126 1 
209 1 198 1 126 1 
209 1 198 1 126 1 
209 1 126 1 
293 1 288 1 
143 2 131 1 148 1 307 1 160 1 40 2 176 1 43 1 253 2 321 1 181 1 71 2 4 1 244 4 36 4 37 2 113 3 184 1 325 4 366 8 
131 1 148 1 160 1 176 1 40 2 321 1 181 1 4 1 244 3 112 1 113 2 184 1 325 3 366 6 
143 1 148 1 307 1 40 1 33 1 253 1 349 1 71 1 299 1 244 2 182 1 36 2 37 1 113 2 184 1 325 2 366 4 
296 1 8 2 148 1 307 1 40 1 33 1 349 1 299 1 343 1 244 4 344 1 113 2 184 1 325 3 366 7 
159 1 296 2 131 1 160 1 40 5 43 2 253 2 360 1 321 1 4 2 299 2 71 2 344 1 113 9 325 11 366 23 143 2 148 3 8 2 307 4 176 2 33 2 349 2 181 1 244 12 15 1 36 4 37 2 184 3 
244 1 8 1 366 1 
296 1 325 1 366 1 
143 1 148 1 307 1 40 2 33 1 253 1 349 1 71 1 101 1 299 1 182 1 244 3 36 2 37 1 113 3 184 1 325 3 366 6 
296 1 40 1 253 1 71 1 299 2 343 1 168 1 113 2 325 6 366 12 95 1 143 1 236 1 8 1 148 2 307 1 121 1 33 2 349 2 374 1 244 6 36 2 37 1 184 2 185 1 
148 1 307 1 176 1 40 1 181 1 4 1 244 3 113 2 184 1 325 3 366 6 
143 1 131 1 307 1 160 1 40 1 176 1 43 1 253 1 4 1 71 1 15 1 244 2 36 2 37 1 113 2 325 1 366 3 
148 2 307 3 176 2 40 3 320 1 181 1 4 2 244 6 113 6 184 2 325 6 366 12 
143 1 148 1 307 1 121 1 253 1 71 1 299 1 36 2 37 1 113 1 325 2 366 2 
143 1 148 1 307 1 40 1 121 1 33 1 253 1 349 1 71 1 299 1 244 2 36 2 37 1 113 2 184 1 325 2 366 4 
143 3 307 1 176 1 40 1 213 1 121 1 43 1 253 3 71 3 4 1 15 1 244 2 36 6 37 3 113 2 325 1 366 3 
296 3 131 1 160 1 40 7 43 2 253 5 321 1 4 3 71 5 299 3 343 1 344 1 113 12 325 16 366 34 143 5 8 4 148 5 307 5 176 3 149 1 213 1 121 1 33 3 349 3 181 2 331 1 15 1 244 18 182 1 36 10 274 1 37 5 184 5 
296 1 131 1 160 1 40 2 253 1 321 1 71 1 4 1 343 1 113 2 325 4 366 8 143 1 236 1 148 1 8 1 176 1 121 1 181 1 244 4 36 2 37 1 184 1 
296 1 131 1 160 1 40 2 253 2 321 1 4 1 71 2 299 1 343 1 344 1 113 3 325 6 366 11 143 2 236 1 8 2 148 2 307 1 176 1 121 1 33 1 181 1 244 5 182 1 36 4 37 2 184 1 
296 1 131 1 160 1 40 3 43 1 253 3 321 1 4 1 71 3 299 2 343 1 168 1 113 4 325 9 366 19 95 1 143 3 236 1 8 1 148 3 307 1 176 1 121 1 33 2 349 2 374 1 181 1 182 1 244 10 36 6 37 3 184 3 185 1 
296 1 131 1 160 1 40 3 43 1 253 3 321 1 4 1 71 3 299 2 343 1 168 1 113 5 325 10 366 17 95 1 143 3 236 1 8 1 148 3 307 2 176 1 121 1 33 2 349 1 374 1 181 1 182 1 244 7 36 6 37 3 184 2 185 1 
296 1 131 1 160 1 40 2 253 1 321 1 71 1 4 1 343 1 113 2 325 4 366 8 143 1 236 1 148 1 8 1 176 1 121 1 181 1 244 4 36 2 37 1 184 1 
296 1 40 1 253 1 71 1 299 2 343 1 168 1 113 2 325 6 366 12 95 1 143 1 236 1 8 1 148 2 307 1 121 1 33 2 349 2 374 1 244 6 36 2 37 1 184 2 185 1 
296 1 131 1 160 1 40 3 43 2 253 4 321 1 4 1 71 4 299 2 343 1 168 1 113 5 325 10 366 18 95 1 143 4 236 1 8 1 148 3 307 2 176 1 121 1 33 2 349 1 374 1 181 1 244 8 182 1 36 8 37 4 184 2 185 1 
296 1 40 3 43 2 253 4 71 4 299 3 343 1 168 1 113 6 325 9 366 16 95 1 143 4 236 1 8 1 148 3 307 3 121 1 213 1 33 3 349 2 374 1 244 7 36 8 37 4 184 2 185 1 
131 2 148 1 160 1 307 3 176 3 40 3 181 1 4 3 244 4 113 6 184 1 325 3 366 7 
296 1 131 1 160 1 40 3 43 2 253 4 321 1 4 1 71 4 299 2 343 1 168 1 113 4 325 10 366 18 95 1 143 4 236 1 8 1 148 3 307 1 176 1 121 1 213 1 33 2 349 1 374 1 181 1 244 8 36 8 37 4 184 2 185 1 
3 1 259 1 365 1 133 1 2 1 245 1 107 1 
2 1 133 1 254 1 107 1 3 1 137 1 259 1 81 1 365 1 223 1 245 1 94 1 
158 1 178 1 135 1 6 1 1 1 112 1 140 1 195 1 170 1 345 1 89 1 
158 1 1 1 6 1 146 1 133 2 195 1 291 1 135 1 178 1 110 1 375 1 138 1 259 1 365 2 140 1 275 1 170 1 245 1 
158 1 1 2 133 2 195 1 135 1 110 2 342 2 257 1 138 1 259 1 365 2 170 3 233 1 6 1 146 1 239 1 291 2 57 1 178 1 179 1 375 1 16 1 275 1 245 2 
158 1 129 1 1 2 133 2 195 1 135 1 110 2 342 2 257 1 138 1 259 1 365 2 170 3 233 1 6 1 239 1 291 2 57 1 178 1 179 1 375 1 16 1 275 1 245 2 
158 1 1 1 249 1 21 1 133 1 195 1 44 1 135 1 110 1 362 1 323 1 342 1 257 1 138 1 365 1 167 2 170 4 233 1 97 1 115 2 6 1 120 1 291 1 216 1 178 1 179 1 180 1 183 1 245 1 313 1 62 1 186 1 
158 1 1 1 249 1 133 1 195 1 44 1 135 1 110 1 362 1 323 1 342 1 257 1 138 1 365 1 167 2 170 4 233 1 97 1 115 2 6 1 120 1 291 1 178 1 179 1 180 1 270 1 183 1 245 1 313 1 62 1 186 1 
158 1 178 1 135 1 6 1 195 1 292 1 
158 7 368 1 264 1 1 2 6 2 22 1 227 1 161 1 252 1 195 3 292 1 361 1 283 1 135 6 178 7 110 1 140 2 225 1 170 3 312 1 75 1 
158 1 131 1 1 1 191 1 160 1 40 2 133 2 195 1 228 2 253 2 321 1 283 1 135 1 69 1 110 1 4 1 71 2 231 1 111 1 139 1 138 1 259 2 365 2 113 2 170 1 74 1 325 3 366 6 143 2 98 1 6 1 327 2 146 1 148 1 176 1 291 1 178 1 330 1 154 1 181 1 375 1 244 3 36 4 37 2 275 1 184 1 245 1 
158 1 336 2 106 1 337 1 44 1 108 2 68 1 135 1 322 2 136 1 323 1 140 1 167 3 170 2 115 3 119 1 30 1 370 1 178 1 180 1 218 1 270 1 272 1 376 1 222 2 313 1 186 1 62 2 
158 2 1 1 6 1 252 1 195 2 292 1 283 1 135 2 178 2 110 1 323 1 170 2 18 1 
263 1 158 4 1 1 6 1 195 1 89 1 135 4 178 4 283 1 140 1 170 1 5 1 345 1 
158 2 355 1 368 1 1 1 6 1 161 1 195 2 338 1 135 2 178 2 110 1 298 1 257 1 170 1 
174 1 158 1 178 1 135 1 200 1 6 1 140 1 195 1 171 1 134 1 
158 2 19 1 1 1 6 1 195 1 283 1 135 2 178 2 225 1 170 1 312 1 
263 1 158 5 1 2 6 2 22 1 195 2 89 1 135 4 178 5 283 1 257 1 140 1 225 1 170 3 345 1 75 1 
263 1 158 5 1 2 6 2 22 1 195 2 89 1 135 4 178 5 283 1 257 1 271 1 140 1 225 1 170 3 345 1 
158 1 129 1 1 1 6 1 133 2 195 1 291 1 135 1 178 1 110 1 375 1 138 1 259 1 365 2 140 1 275 1 170 1 245 1 
158 1 368 1 1 1 6 1 227 1 161 1 252 1 195 2 135 1 178 1 110 1 257 1 170 1 
35 1 217 1 259 1 61 1 177 1 
115 2 246 1 39 1 78 1 250 1 239 1 370 1 44 1 57 1 177 2 35 2 180 1 217 1 342 1 332 1 259 1 167 2 61 2 313 1 
133 1 177 1 282 1 217 1 61 1 365 1 156 1 17 1 245 1 
78 1 217 1 250 1 
166 1 112 1 152 1 241 1 
277 1 166 1 243 1 132 1 212 1 152 1 241 1 
132 1 329 1 280 1 
277 1 192 1 132 3 369 1 212 3 152 1 241 1 166 1 243 1 93 1 224 2 188 1 
157 1 20 1 277 1 166 1 243 1 132 2 212 2 152 1 241 1 
174 1 277 1 356 1 210 1 132 1 212 1 214 1 152 1 200 1 243 1 93 1 
277 1 243 1 132 1 93 1 212 1 152 1 241 1 
277 1 166 1 243 1 132 1 93 1 212 1 241 2 
277 2 132 2 212 2 152 1 164 1 241 1 199 1 243 2 93 1 261 1 
277 1 20 2 132 3 212 3 214 1 152 2 241 1 58 1 166 1 242 1 243 1 220 1 93 1 
174 1 277 1 20 1 305 1 210 1 132 2 212 2 152 1 241 1 166 1 200 2 243 1 300 1 93 1 171 1 
157 1 277 2 20 2 28 1 132 4 212 4 214 1 152 2 241 1 166 1 242 1 243 2 93 1 
277 1 166 1 243 1 132 1 93 1 212 1 152 1 241 1 
20 2 277 1 132 4 369 1 212 4 196 1 214 1 152 3 241 2 166 2 242 1 243 1 224 1 188 1 
20 1 277 1 124 1 166 1 285 1 243 1 132 2 93 1 212 2 152 1 142 1 241 1 
206 1 277 1 166 1 243 1 132 3 369 1 93 1 224 2 212 3 152 1 241 1 188 2 
319 2 306 1 350 1 152 2 
277 1 13 1 243 1 132 1 93 1 212 1 
20 1 277 1 166 1 243 1 132 2 93 1 212 2 152 1 241 1 58 1 
372 1 
277 1 166 1 243 1 132 1 93 1 212 1 152 1 241 1 
20 1 277 1 132 3 212 3 152 1 241 1 58 1 166 1 243 1 93 1 224 1 
242 1 196 1 152 1 214 1 
152 1 241 1 

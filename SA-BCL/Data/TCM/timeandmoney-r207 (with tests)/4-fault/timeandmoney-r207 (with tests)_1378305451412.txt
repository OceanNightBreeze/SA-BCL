#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (38,200) 37 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (62,369) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (62,369) (62,369) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (38,200) 37 203 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (62,369) (62,369) 44 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (38,200) 37 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 82 2 244 2 312 1 263 2 146 2 191 2 7 1 150 1 172 1 265 1 266 9 10 6 43 1 357 1 337 4 155 1 98 1 294 3 344 2 133 1 254 2 204 1 380 9 135 4 183 1 
115 1 82 2 244 2 312 1 263 2 191 2 146 2 7 1 150 1 172 1 265 1 266 9 10 6 43 1 357 1 337 4 155 1 98 1 294 3 344 2 133 1 254 2 204 1 380 9 135 4 183 1 
115 1 82 2 244 2 312 1 263 2 191 2 146 2 7 1 150 1 172 1 265 1 266 9 10 6 43 1 357 1 337 4 155 1 98 1 294 3 344 2 133 1 254 2 204 1 380 9 135 4 183 1 
82 2 244 2 312 1 263 2 191 2 146 1 7 1 150 1 172 1 265 1 266 7 10 4 43 1 357 1 337 3 155 1 98 1 294 2 344 2 133 1 254 2 204 1 380 7 135 3 183 1 
115 1 82 1 244 1 294 1 344 1 263 1 204 1 146 2 254 1 7 1 380 4 135 2 266 4 10 3 43 1 337 2 
199 1 309 1 82 1 285 1 244 1 333 1 344 1 334 1 263 1 191 1 7 1 150 1 380 2 135 1 93 1 266 2 357 1 
155 1 285 1 244 2 294 1 333 1 263 2 191 1 7 1 380 3 135 2 266 3 10 1 337 1 
155 1 115 1 82 1 244 2 294 3 344 1 377 1 263 2 254 1 146 2 204 1 191 1 7 1 8 1 172 1 380 9 265 1 135 4 266 9 10 7 43 1 337 4 
155 1 115 1 82 1 244 2 294 3 344 1 377 1 263 2 254 1 146 2 204 1 191 1 7 1 8 1 172 1 380 9 265 1 135 4 266 9 10 7 43 1 337 4 
216 1 75 1 201 1 
292 1 257 2 201 1 
260 1 189 1 114 1 159 1 23 1 87 1 90 1 194 1 106 1 222 1 
301 1 129 2 77 1 375 2 105 1 33 2 28 1 90 1 200 1 37 1 
90 1 369 1 
331 1 374 1 189 1 140 1 341 1 201 1 21 1 23 1 316 1 216 1 355 1 194 1 106 1 237 1 
331 1 374 1 189 1 159 1 201 1 21 2 23 1 316 1 216 1 355 1 87 1 194 1 106 1 222 1 237 2 
21 1 25 1 40 1 259 1 237 1 
21 2 216 1 271 1 40 1 215 1 259 1 201 1 237 2 
21 1 40 1 237 1 
21 1 90 1 259 1 62 1 237 1 369 1 
201 1 
21 2 216 1 271 1 40 1 320 1 259 1 201 1 237 2 
271 1 188 1 225 1 78 2 158 1 36 1 352 1 201 1 102 2 21 5 216 1 51 1 40 2 107 1 221 1 259 2 30 2 237 5 223 1 
75 1 114 1 
224 1 189 2 114 2 159 1 23 2 300 1 87 1 194 2 222 1 
195 1 251 1 382 1 
129 1 189 1 77 1 375 1 32 1 114 1 33 1 79 1 144 1 47 1 83 1 68 1 84 1 194 1 267 1 185 1 
129 1 32 1 189 2 77 1 375 1 79 1 33 1 176 1 144 1 372 1 159 1 47 1 84 1 68 1 23 1 87 1 194 2 195 1 267 1 185 1 
23 3 87 3 189 3 114 1 194 3 176 1 222 1 159 3 
23 1 87 1 189 1 194 1 106 1 212 1 159 1 
23 1 300 1 224 1 87 1 189 1 194 1 106 1 159 1 222 1 
129 1 374 1 331 1 375 1 77 1 189 2 33 1 176 1 372 1 159 2 200 1 37 1 21 1 203 1 316 1 23 2 300 1 355 1 87 2 90 1 194 2 106 1 124 1 222 1 237 1 
23 2 87 1 189 2 114 1 194 2 176 1 341 1 159 1 296 1 
331 1 374 1 189 3 176 2 372 1 159 3 201 1 21 1 314 1 300 1 316 1 23 3 355 1 87 3 194 3 106 1 124 1 222 1 237 1 
189 2 176 1 159 2 300 1 23 2 87 2 194 2 195 1 222 1 382 1 
129 1 189 1 77 1 375 1 32 1 114 1 33 1 79 1 144 1 47 1 68 1 84 1 194 1 267 1 185 1 
129 1 189 1 77 1 375 1 32 1 114 1 33 1 79 1 144 1 47 1 84 1 59 1 327 1 194 1 185 1 
306 2 171 4 217 1 286 1 287 1 41 1 195 2 12 1 247 1 338 1 178 1 179 1 251 2 252 1 24 1 232 2 50 2 303 1 69 1 54 1 258 1 29 1 329 1 382 2 
23 1 374 1 87 1 189 1 194 1 106 1 311 1 159 1 
189 5 114 1 176 2 341 1 372 1 159 4 145 1 296 1 132 1 23 5 300 1 87 4 194 5 222 1 
23 2 87 2 189 2 194 2 106 1 311 1 212 1 159 2 
239 1 170 1 
239 1 170 1 
130 1 272 1 
130 1 272 1 
130 1 272 1 
239 1 118 1 170 1 
239 1 118 1 170 1 
239 1 166 1 170 1 
239 2 103 1 345 1 130 1 272 1 170 2 
239 1 118 1 170 1 
239 1 13 1 170 1 
239 1 13 1 170 1 
239 1 13 1 170 1 
239 2 283 1 241 2 131 1 18 3 274 2 214 2 343 2 353 1 201 1 170 2 326 1 299 1 21 2 345 1 9 2 53 1 237 2 152 1 
239 1 1 1 241 1 189 2 114 1 242 1 166 1 214 1 170 1 87 2 61 1 9 1 194 2 131 1 18 1 177 1 159 2 274 1 21 1 23 2 161 1 236 1 237 1 187 1 
254 1 82 1 344 1 
82 1 344 1 334 1 
254 2 193 1 219 1 310 1 82 3 334 1 
254 1 219 1 261 1 310 1 82 2 334 1 
254 1 219 2 310 1 82 2 334 1 
1 1 78 1 242 1 213 1 5 1 216 1 286 1 40 1 121 2 12 1 292 1 96 2 271 1 65 1 177 1 158 3 275 1 102 1 201 2 21 5 24 1 104 2 51 1 69 1 27 1 71 1 107 2 257 3 30 1 259 4 110 1 237 5 
1 4 78 2 308 5 117 1 352 1 5 2 216 1 286 3 40 6 12 3 292 3 96 6 271 1 361 1 65 1 158 8 276 1 201 5 102 2 21 9 24 3 25 5 104 6 51 1 233 1 69 3 27 3 107 6 162 1 257 9 328 1 259 7 30 2 110 2 237 9 
1 1 78 1 213 1 352 1 5 1 216 1 286 1 121 1 12 1 292 2 96 2 158 3 201 3 102 1 21 3 24 1 104 2 71 1 27 1 69 1 107 2 257 4 259 2 30 1 110 1 237 3 
1 2 78 1 117 1 352 1 213 1 5 1 216 1 286 2 121 2 12 2 292 3 96 4 158 5 201 4 102 1 21 4 24 2 104 4 233 1 71 1 27 2 69 2 107 4 257 7 328 1 30 1 110 1 259 3 237 4 
75 1 240 1 185 1 
198 1 185 1 
321 1 
32 1 185 1 
378 1 240 2 32 1 79 1 185 3 197 1 
32 1 79 1 185 1 
182 1 185 1 
306 3 63 2 76 1 332 1 228 1 273 1 171 7 317 1 286 1 232 4 290 1 235 1 258 2 109 1 12 1 329 3 186 1 
306 3 63 2 76 1 332 1 228 1 273 1 171 7 317 1 286 1 232 4 290 1 235 1 258 2 109 1 12 1 329 3 186 1 
306 3 63 2 76 1 350 1 332 1 228 1 273 1 171 7 317 1 286 1 232 4 290 1 235 1 258 2 109 1 12 1 329 3 186 1 
306 15 76 2 332 2 4 4 171 31 317 1 286 4 89 1 290 1 268 1 125 1 12 4 126 1 94 3 63 3 338 1 157 1 178 1 179 1 100 1 228 1 273 2 295 1 24 3 50 2 232 16 27 3 69 3 303 1 235 5 109 2 258 5 186 1 329 10 
306 6 76 2 332 2 171 14 147 1 317 1 286 3 12 3 63 2 338 1 44 1 178 1 179 1 273 1 228 2 50 2 232 8 303 1 235 1 109 1 258 3 186 1 329 4 55 1 
33 1 82 2 285 1 244 1 144 1 333 1 334 1 263 1 84 1 191 1 85 1 7 1 193 1 149 1 289 1 92 1 10 1 266 2 246 1 358 1 129 1 375 1 344 1 254 1 22 1 379 1 380 2 135 1 137 1 381 1 
33 1 82 2 285 1 244 1 245 1 144 1 333 1 313 1 334 1 263 1 84 1 191 1 193 1 149 1 289 1 92 1 266 3 10 2 246 1 15 1 358 1 129 1 375 1 344 1 254 1 22 1 379 1 380 3 135 1 381 1 
33 1 82 2 285 1 144 1 333 1 313 1 334 1 84 1 191 1 193 1 149 1 289 1 92 1 266 2 10 2 15 1 129 1 375 1 344 1 22 1 379 1 254 1 380 2 135 1 381 1 
77 1 32 1 211 1 33 1 284 1 144 1 244 1 245 1 57 1 263 1 84 1 191 2 289 2 92 2 266 1 129 1 128 1 375 1 156 1 160 1 22 2 380 1 185 1 
33 1 82 2 244 1 144 1 313 1 334 1 263 1 84 1 191 1 85 1 7 1 193 1 149 1 289 1 92 1 266 1 246 1 358 1 129 1 375 1 344 1 254 1 22 1 379 1 380 1 381 1 
136 1 
0 2 209 2 113 1 262 1 119 2 58 1 6 1 5 1 316 1 216 1 355 1 122 4 322 2 323 1 271 3 129 2 362 2 363 1 67 2 21 5 23 1 279 1 185 1 30 1 237 5 331 1 32 1 78 1 77 2 189 1 33 2 140 1 141 1 284 1 144 1 84 1 39 1 40 6 194 1 291 1 292 2 374 1 375 2 158 2 341 1 160 1 201 2 102 1 297 1 51 1 107 2 106 1 256 1 257 2 208 2 
331 1 209 1 189 1 140 1 262 1 58 1 316 1 355 1 40 2 194 1 320 1 122 2 291 1 323 1 374 1 271 1 341 1 21 3 23 1 106 1 256 1 237 3 
0 1 331 1 189 1 140 1 262 1 58 1 316 1 355 1 216 1 40 1 194 1 320 1 122 3 291 1 323 1 374 1 271 1 341 1 201 1 21 3 23 1 106 1 256 1 237 3 
0 1 331 1 209 1 189 1 140 1 262 1 58 1 316 1 355 1 216 1 40 2 194 1 320 1 122 3 291 1 323 1 271 1 374 1 341 1 201 1 21 3 23 1 106 1 256 1 237 3 208 1 
0 4 209 4 262 1 119 2 58 1 316 1 355 1 216 5 320 1 122 6 322 2 323 1 271 3 362 2 67 2 21 5 23 1 230 1 184 1 30 1 237 5 331 1 189 1 78 1 140 1 141 1 39 1 86 1 40 7 91 1 194 1 291 1 292 2 374 1 158 1 341 1 201 5 102 1 51 1 106 1 107 1 256 1 346 1 208 4 
0 2 209 2 262 1 119 2 58 1 316 1 6 1 355 1 216 1 122 4 322 2 323 1 271 2 362 2 67 2 21 4 23 1 30 1 237 4 331 1 189 1 78 1 140 1 141 1 39 1 40 4 194 1 291 1 292 2 374 1 158 1 341 1 102 1 201 2 51 1 106 1 107 1 256 1 257 2 208 2 
0 2 209 2 331 1 189 1 78 1 140 1 141 1 262 1 119 2 58 1 316 1 216 1 39 1 355 1 86 1 40 4 194 1 122 4 322 2 291 1 323 1 292 2 271 2 374 1 362 2 158 1 341 1 201 1 67 2 102 1 21 4 23 1 230 1 51 1 107 1 106 1 256 1 184 1 30 1 208 2 237 4 
0 2 209 2 331 1 189 1 78 1 140 1 141 1 262 1 119 2 58 1 316 1 216 1 39 1 355 1 86 1 40 4 194 1 122 4 322 2 291 1 323 1 292 2 271 2 374 1 362 2 158 1 341 1 201 1 67 2 102 1 21 4 23 1 230 1 51 1 107 1 106 1 256 1 184 1 30 1 208 2 237 4 
0 2 209 2 349 2 331 1 189 1 78 1 140 1 262 1 119 2 58 1 316 1 216 1 39 1 355 1 40 4 288 1 194 1 122 4 322 2 291 1 323 1 360 1 271 2 374 1 158 1 341 1 201 1 102 1 21 4 23 1 51 1 107 1 106 1 256 1 257 2 305 2 184 1 282 1 30 1 208 2 237 4 
0 3 331 1 209 3 78 1 189 1 140 1 141 1 262 1 119 2 58 1 316 1 216 1 39 1 355 1 86 1 40 5 194 1 122 5 322 2 291 1 323 1 292 2 271 2 374 1 362 2 158 1 341 1 201 1 67 2 102 1 21 4 230 1 23 1 51 1 107 1 106 1 256 1 184 1 346 1 30 1 237 4 208 3 
0 3 331 1 209 3 78 1 189 1 140 1 141 1 262 1 119 2 58 1 316 1 216 1 39 1 355 1 86 1 40 5 194 1 122 5 322 2 291 1 323 1 292 2 271 2 374 1 362 2 158 1 341 1 201 1 67 2 102 1 21 4 230 1 23 1 51 1 107 1 106 1 256 1 184 1 346 1 30 1 237 4 208 3 
0 2 349 2 209 2 262 1 119 2 58 1 316 1 6 1 355 1 216 1 122 4 322 2 323 1 271 2 21 4 23 1 30 1 237 4 331 1 189 1 78 1 140 1 39 1 288 1 40 4 194 1 291 1 374 1 158 1 341 1 102 1 201 1 51 1 106 1 107 1 256 1 257 2 305 2 208 2 
63 1 306 3 75 1 76 1 338 1 114 2 178 1 179 1 332 1 251 1 228 1 171 6 317 1 286 1 232 3 287 1 50 2 41 1 303 1 195 1 258 2 54 1 12 1 329 2 186 1 382 1 
306 6 114 1 168 1 4 3 171 14 286 1 287 1 220 1 42 1 195 11 125 1 196 1 12 2 94 3 126 1 338 2 178 2 179 2 251 11 277 1 253 1 24 1 50 4 232 8 234 1 303 2 27 2 69 2 235 1 258 1 54 2 329 2 382 4 
306 1 32 1 77 1 189 2 114 1 79 1 33 1 35 1 144 1 372 1 83 1 171 2 84 1 87 1 287 1 220 1 194 2 267 1 129 1 338 1 375 1 176 1 178 1 179 1 159 1 47 1 68 1 277 1 23 1 253 1 50 2 232 1 26 1 303 1 185 1 54 1 207 1 382 1 
306 10 347 2 114 2 313 1 171 20 317 1 120 1 220 1 267 2 12 3 63 1 64 1 129 3 176 1 178 3 179 3 228 1 277 1 68 2 23 1 24 2 232 10 27 2 69 2 235 4 185 2 186 1 329 8 76 1 77 1 189 3 32 2 33 3 79 2 81 1 332 1 372 1 144 2 84 2 38 2 286 3 87 1 287 3 88 2 194 3 195 7 338 3 375 3 159 1 251 7 200 2 47 2 253 1 50 6 49 2 303 3 258 4 54 3 382 7 
306 1 189 1 77 2 32 2 33 8 243 1 284 1 144 2 313 1 354 1 171 2 84 2 87 1 287 2 60 1 41 1 194 1 129 8 338 2 375 7 176 1 178 2 364 1 179 2 159 1 160 1 277 1 23 1 253 1 301 2 50 4 232 1 205 1 72 1 303 2 137 1 52 1 185 3 54 2 
306 2 189 1 370 1 171 3 87 1 286 1 287 1 220 1 194 1 195 1 222 1 12 1 338 1 178 1 179 1 251 1 159 1 300 1 23 1 24 1 50 2 232 1 303 1 27 1 69 1 258 1 54 1 329 1 382 1 
338 1 178 1 179 1 251 1 252 1 171 2 287 1 50 2 232 2 41 1 303 1 69 1 195 1 235 1 54 1 329 1 12 1 382 1 
306 2 338 1 178 1 179 1 251 1 171 2 24 1 286 1 287 1 50 2 41 1 303 1 195 1 258 1 54 1 329 1 29 1 382 1 
306 2 171 4 286 1 287 1 41 1 195 2 12 1 338 1 178 1 179 1 251 2 24 1 232 2 50 2 69 1 27 1 303 1 235 1 54 1 258 1 329 2 382 2 
338 1 178 1 179 1 251 1 252 1 171 2 60 1 287 1 50 2 232 2 303 1 69 1 195 1 235 1 54 1 329 1 12 1 382 1 
306 2 338 1 178 1 179 1 251 1 171 2 24 1 286 1 60 1 287 1 50 2 303 1 195 1 258 1 54 1 329 1 29 1 382 1 
306 2 171 4 286 1 287 1 60 1 195 2 12 1 338 1 178 1 179 1 251 2 24 1 232 2 50 2 69 1 27 1 303 1 235 1 54 1 258 1 329 2 382 2 
306 2 338 1 178 1 179 1 251 2 171 4 24 1 286 1 287 1 50 2 232 2 303 1 27 1 69 1 195 2 235 1 258 1 54 1 329 2 12 1 382 2 
306 1 32 1 77 1 189 1 114 1 79 1 33 1 144 1 171 2 84 1 287 1 194 1 267 1 129 1 338 1 375 1 178 1 179 1 200 1 47 1 68 1 277 1 253 1 232 1 50 2 303 1 185 1 54 1 
306 1 32 1 77 1 189 1 114 1 79 1 33 1 144 1 171 2 84 1 59 1 287 1 194 1 14 1 129 1 338 1 375 1 178 1 179 1 47 1 277 1 253 1 232 1 50 2 327 1 303 1 185 1 54 1 
306 2 171 4 286 1 287 1 220 1 195 2 12 1 338 1 178 1 179 1 251 2 24 1 232 2 50 2 69 1 27 1 303 1 235 1 54 1 258 1 329 2 382 2 
306 2 32 1 189 1 79 1 33 1 144 1 171 4 84 1 38 1 286 1 287 1 194 1 195 2 267 1 12 1 129 1 338 1 375 1 178 1 179 1 251 2 200 1 47 1 68 1 24 1 232 2 50 2 69 1 303 1 27 1 137 1 235 1 258 1 185 1 54 1 329 2 382 2 
31 1 306 1 189 1 171 3 286 1 87 1 287 1 220 1 194 1 195 1 222 1 12 1 338 1 178 1 179 1 159 1 251 1 24 1 300 1 23 1 50 2 232 2 303 1 27 1 69 1 235 1 54 1 329 1 382 1 
306 10 165 1 169 1 4 2 171 19 148 1 147 1 356 1 286 3 125 1 12 3 94 1 126 1 338 2 249 1 17 2 325 1 178 2 179 2 298 1 24 3 50 4 232 9 303 2 27 3 69 3 235 3 258 3 329 6 56 2 
306 12 210 1 165 1 169 2 4 2 171 26 147 1 286 2 89 2 373 1 173 1 125 2 12 3 94 2 127 1 338 3 249 1 17 1 325 2 178 3 179 3 46 1 298 1 48 1 24 2 50 6 232 14 303 3 27 3 69 3 235 2 258 2 329 4 56 4 
306 21 210 1 165 1 169 2 4 4 171 41 317 1 356 1 173 1 125 3 12 5 126 1 127 1 63 1 17 1 325 1 178 3 179 3 228 1 24 4 232 20 69 4 27 4 235 4 329 8 186 1 76 1 332 1 147 1 286 5 89 1 373 1 94 3 338 3 249 1 45 1 46 1 298 1 48 1 50 6 303 3 258 4 56 4 
306 18 76 1 210 1 165 1 332 1 169 2 4 4 171 38 317 1 147 1 356 1 286 4 89 2 373 1 173 1 125 3 12 5 94 3 126 1 127 1 63 1 338 4 249 1 17 1 325 1 178 4 45 1 179 4 228 1 46 1 298 1 48 1 24 3 50 8 232 20 303 4 27 4 69 4 235 3 258 4 186 1 329 7 56 4 
306 25 76 1 210 1 165 1 332 1 169 1 4 4 171 52 317 1 147 1 286 8 89 1 373 1 173 1 125 2 196 2 12 8 94 4 126 2 127 1 63 1 338 2 249 1 17 1 325 1 178 2 179 2 228 1 46 1 298 1 48 1 24 7 50 4 232 27 303 2 27 7 69 7 235 7 258 7 186 1 329 14 56 4 
335 1 239 1 241 1 345 1 9 1 53 1 214 1 274 1 353 1 170 1 
166 1 187 1 
16 1 239 1 241 1 175 1 9 1 214 1 274 1 202 1 170 1 
239 1 283 1 241 1 131 1 18 2 274 1 214 1 343 1 353 1 201 1 170 1 326 1 299 1 21 1 345 1 9 1 53 1 237 1 
239 1 283 1 241 1 131 1 18 2 274 1 214 1 343 1 353 1 201 1 170 1 326 1 299 1 21 1 345 1 9 1 53 1 237 1 
239 1 283 1 241 1 131 1 18 2 274 1 214 1 343 1 353 1 201 1 170 1 326 1 299 1 21 1 345 1 9 1 53 1 237 1 
103 1 319 1 118 1 
103 1 319 1 118 1 
138 1 13 1 
103 1 138 1 13 1 
61 1 236 1 
239 1 1 1 189 2 241 1 114 1 242 1 166 1 214 1 170 1 192 1 87 2 61 1 9 1 194 2 18 1 177 1 159 2 343 1 274 1 326 1 21 1 23 2 161 1 259 1 236 1 237 1 187 1 
319 1 118 1 
103 1 138 1 13 1 
306 1 32 1 189 2 33 2 144 1 116 1 354 1 171 2 84 1 287 1 220 1 194 2 154 1 129 2 338 1 375 2 178 1 364 1 179 1 365 1 277 1 23 2 253 1 301 2 50 2 232 1 303 1 180 1 185 1 54 1 368 1 
139 1 129 2 375 2 340 1 33 2 82 2 144 1 344 1 334 1 313 1 84 1 254 1 22 1 193 1 318 1 149 1 137 1 246 1 381 1 
129 1 375 1 324 1 33 1 82 2 144 1 344 1 334 1 313 1 84 1 254 1 22 1 193 1 318 1 149 1 246 1 381 1 
174 1 129 1 32 1 77 1 375 1 340 1 156 1 33 1 284 1 144 1 160 1 84 1 22 1 185 1 
139 1 129 1 375 1 340 1 33 1 82 2 144 1 344 1 334 1 313 1 84 1 254 1 22 1 193 1 318 1 149 1 246 1 381 1 
342 1 
216 1 75 1 107 1 158 1 221 1 201 1 223 1 
78 1 141 1 216 1 40 1 292 1 271 1 362 1 158 1 102 1 201 2 67 1 21 1 51 1 107 1 257 1 30 1 237 1 
348 2 113 1 167 1 5 2 316 2 216 2 221 1 12 2 223 1 129 3 271 3 20 1 21 5 24 2 278 2 27 2 69 2 137 1 182 2 185 10 281 2 30 4 237 5 238 2 32 3 78 4 77 1 240 2 79 3 33 3 144 4 371 2 84 3 286 2 40 5 88 2 151 1 336 2 197 1 95 2 96 6 292 6 97 2 198 3 375 3 293 1 158 9 102 4 201 8 104 6 51 4 107 8 255 1 257 12 
74 1 113 1 210 1 78 2 371 1 4 1 5 1 216 2 286 2 40 1 373 1 173 1 125 1 12 2 94 1 96 5 292 3 271 1 97 2 158 8 46 1 102 2 201 5 21 1 48 1 24 2 104 5 51 2 27 2 69 2 107 5 257 6 206 1 30 2 237 1 
76 1 78 1 97 2 44 1 158 2 332 1 228 1 102 1 21 1 230 1 286 1 51 1 90 1 107 1 12 1 30 1 62 1 237 1 369 1 
78 1 158 1 102 1 201 1 216 1 51 1 107 1 221 1 30 1 223 1 
96 5 292 5 97 2 158 5 371 1 201 5 24 2 104 5 286 2 88 1 27 2 69 2 107 5 257 10 12 2 
21 1 216 1 271 1 40 1 201 1 237 1 
113 2 32 1 78 2 77 2 33 4 284 1 144 1 352 1 84 1 5 2 40 4 129 4 271 2 375 4 293 2 363 1 158 2 160 1 102 2 229 1 21 3 134 1 51 1 107 2 255 1 279 1 185 1 30 2 237 3 
129 1 375 1 77 1 33 1 90 1 200 1 37 1 
63 1 96 2 292 2 113 1 78 1 158 1 102 1 201 4 5 1 104 2 216 2 51 1 107 2 257 4 30 1 
9 1 108 1 214 1 
9 1 108 1 214 1 
248 1 61 1 9 1 53 1 214 1 
9 1 108 1 214 1 
9 1 280 1 214 1 
9 1 280 1 214 1 
9 1 280 1 214 1 
9 1 214 1 
239 1 170 1 
63 1 306 4 338 2 76 1 178 2 179 2 332 1 228 1 171 8 317 1 286 1 232 4 50 4 89 1 303 2 235 1 258 2 12 1 329 3 186 1 
63 1 306 3 75 1 76 1 332 1 228 1 171 6 317 1 286 1 232 3 258 2 186 1 329 2 12 1 
306 2 338 1 178 1 179 1 367 1 171 4 24 1 286 1 50 2 232 2 303 1 27 1 69 1 235 1 258 1 329 2 12 1 
306 4 4 2 171 7 24 1 286 1 232 3 27 1 69 1 125 1 235 1 258 1 12 1 329 2 94 1 126 1 
306 12 76 2 332 2 4 2 171 23 317 1 286 3 89 2 196 1 12 3 126 1 94 2 63 1 338 2 178 2 179 2 228 1 24 2 232 11 50 4 234 1 69 2 27 2 303 2 70 1 235 4 258 5 186 1 329 9 
306 1 4 1 171 1 
232 1 171 1 94 1 
306 3 338 1 178 1 179 1 367 1 171 6 24 1 286 1 50 2 232 3 88 1 303 1 27 1 69 1 235 1 258 2 12 1 329 3 
306 6 210 1 4 1 171 12 147 1 286 2 173 1 373 1 125 1 12 2 94 1 338 1 178 1 179 1 46 1 48 1 24 2 50 2 232 6 303 1 27 2 69 2 235 1 258 1 329 2 
306 3 76 1 332 1 228 1 171 6 286 1 232 3 235 1 258 1 12 1 329 2 
306 2 76 1 338 1 178 1 332 1 179 1 171 3 317 1 232 1 50 2 89 1 70 1 303 1 235 1 258 1 329 2 186 1 
306 5 338 1 76 2 44 1 178 1 179 1 332 2 228 1 171 10 147 1 286 2 50 2 232 5 303 1 235 2 258 3 329 5 12 2 
338 1 178 1 179 1 171 2 147 1 50 2 232 2 303 1 69 1 235 1 12 1 329 1 
306 2 338 1 178 1 179 1 171 4 24 1 147 1 286 1 50 2 232 2 303 1 27 1 69 1 235 1 258 1 329 2 12 1 
306 2 338 3 76 1 178 3 179 3 332 1 171 3 147 1 356 1 50 6 232 1 89 1 70 1 303 3 235 1 258 1 329 2 
306 18 76 3 332 3 4 4 171 34 317 1 147 1 356 1 286 5 89 2 268 1 125 1 12 5 94 3 126 1 63 1 338 5 157 1 178 5 179 5 228 2 295 1 367 1 24 3 50 10 232 16 70 1 303 5 27 3 69 3 235 5 258 7 186 1 329 12 
306 4 210 1 76 1 332 1 4 1 171 8 147 1 317 1 286 1 125 1 12 1 94 1 63 1 338 1 178 1 179 1 228 1 50 2 232 4 303 1 258 2 186 1 329 2 
306 5 76 1 210 1 332 1 4 2 171 11 317 1 147 1 286 1 125 1 12 2 94 1 126 1 63 1 338 2 178 2 179 2 228 1 367 1 50 4 232 6 303 2 27 1 69 1 235 1 258 2 186 1 329 3 
306 10 76 1 210 1 332 1 4 1 171 19 317 1 147 1 286 3 89 1 173 1 373 1 125 1 12 3 94 1 63 1 338 3 178 3 179 3 228 1 46 1 367 1 48 1 24 2 50 6 232 9 303 3 27 2 69 2 235 1 258 3 186 1 329 4 
306 7 76 1 210 1 332 1 4 1 171 17 317 1 147 1 286 2 89 1 173 1 373 1 125 1 12 3 94 1 63 1 338 3 178 3 179 3 228 1 46 1 367 1 48 1 24 1 50 6 232 10 303 3 27 2 69 2 235 2 258 3 186 1 329 5 
306 4 210 1 76 1 332 1 4 1 171 8 147 1 317 1 286 1 125 1 12 1 94 1 63 1 338 1 178 1 179 1 228 1 50 2 232 4 303 1 258 2 186 1 329 2 
306 6 210 1 4 1 171 12 147 1 286 2 173 1 373 1 125 1 12 2 94 1 338 1 178 1 179 1 46 1 48 1 24 2 50 2 232 6 303 1 27 2 69 2 235 1 258 1 329 2 
306 8 76 1 210 1 332 1 4 1 171 18 317 1 147 1 286 2 89 2 373 1 173 1 125 1 12 3 94 1 63 1 338 4 178 4 179 4 228 1 46 1 367 1 48 1 24 1 50 8 232 10 303 4 27 2 69 2 235 2 258 3 186 1 329 5 
306 7 210 1 4 1 171 16 147 1 356 1 286 2 89 2 373 1 173 1 125 1 12 3 94 1 338 4 178 4 179 4 46 1 48 1 24 2 50 8 232 9 303 4 27 3 69 3 235 3 258 3 329 6 
306 4 76 3 332 3 228 1 171 7 317 1 286 1 232 3 235 3 258 3 186 2 329 6 12 1 
306 8 76 1 210 1 332 1 4 1 171 18 317 1 147 1 356 1 286 2 89 2 373 1 173 1 125 1 12 3 94 1 63 1 338 4 178 4 179 4 228 1 46 1 48 1 24 1 50 8 232 10 303 4 27 2 69 2 235 1 258 3 186 1 329 4 
23 1 189 1 226 1 114 1 194 1 341 1 296 1 
226 1 189 1 114 1 34 1 143 1 351 1 341 1 296 1 23 1 194 1 111 1 153 1 
84 1 75 1 129 1 32 1 375 1 77 1 33 1 284 1 144 1 185 1 160 1 
129 1 32 1 189 2 77 1 375 1 114 1 79 1 33 1 176 1 144 1 159 1 47 1 68 1 84 1 23 1 87 1 194 2 185 1 
331 1 189 2 32 2 114 1 33 1 79 2 144 1 84 1 87 2 194 2 336 1 129 1 374 1 375 1 293 1 176 1 159 1 47 1 68 1 23 2 106 1 182 1 185 3 
331 1 189 2 32 2 307 1 114 1 33 2 79 2 144 1 84 1 59 1 87 2 194 2 336 1 129 2 374 1 375 2 293 1 176 1 159 1 47 1 23 2 106 1 182 1 185 3 
164 1 240 1 32 1 77 1 307 1 33 3 79 1 144 1 84 1 316 1 216 1 40 1 336 1 129 3 339 1 198 1 375 3 293 1 201 1 21 2 182 1 185 4 237 2 
129 3 77 1 32 1 375 3 198 1 240 1 307 1 293 1 79 1 33 3 144 1 201 1 21 2 84 1 316 1 216 1 40 1 278 1 182 1 185 4 336 1 237 2 
84 1 129 1 375 1 205 1 33 1 144 1 
129 7 77 2 375 6 32 2 33 7 79 1 364 1 243 1 3 1 144 3 101 1 313 1 84 2 301 1 205 1 72 1 137 1 181 1 52 1 185 3 197 1 
306 3 347 1 76 1 32 1 189 2 114 2 79 1 33 1 332 1 144 1 171 6 84 1 38 1 317 1 286 1 87 1 287 2 220 1 194 2 195 1 267 1 12 1 63 1 338 2 129 1 375 1 176 1 178 2 179 2 251 1 228 1 159 1 200 1 47 1 68 1 23 1 232 3 50 4 303 2 180 1 137 1 258 2 185 1 54 2 329 2 186 1 382 1 
348 1 77 1 78 2 240 1 33 1 316 1 216 1 40 2 221 1 223 1 129 1 271 1 375 1 198 1 158 1 201 1 102 2 21 3 51 2 278 1 107 1 255 1 281 1 185 2 30 2 259 1 237 3 238 1 
129 2 240 1 375 2 32 1 33 2 79 1 167 1 144 2 84 1 205 1 137 1 185 2 197 1 
84 1 359 1 129 4 32 1 375 4 77 1 307 1 33 4 137 1 284 1 144 1 185 1 160 1 
129 2 375 2 32 1 293 1 250 1 33 2 79 1 81 1 3 1 144 2 84 1 231 1 181 1 185 1 
84 1 129 1 375 1 77 1 33 1 82 1 381 1 144 1 344 1 334 1 
84 1 154 1 129 2 32 1 375 2 33 2 137 1 364 1 144 1 185 1 313 1 
359 1 129 5 77 1 375 4 32 2 293 1 33 5 284 1 243 1 364 1 144 2 160 1 84 2 137 1 52 1 185 3 
359 1 129 5 77 1 375 4 32 2 293 1 33 5 284 1 364 1 144 2 160 1 84 2 302 1 137 1 52 1 185 3 
129 1 32 1 189 2 77 1 375 1 114 1 79 1 33 1 176 1 144 1 159 1 47 1 84 1 23 1 59 1 87 1 194 2 185 1 
129 1 375 1 32 1 293 1 33 1 79 1 3 1 144 2 101 1 84 1 181 1 185 1 197 1 
189 1 116 1 66 1 365 1 366 1 23 1 194 1 11 1 368 1 
304 1 376 1 366 1 
264 1 114 1 11 1 66 1 366 1 
374 1 331 1 114 1 66 2 201 1 376 1 366 1 21 2 316 1 264 2 216 1 355 1 106 1 304 1 123 1 11 2 124 1 259 1 237 2 
75 1 135 1 285 1 333 1 
263 1 380 1 135 1 266 1 285 1 244 1 333 1 
191 1 289 1 266 1 
269 1 190 1 99 1 244 1 285 1 333 1 263 1 7 1 150 2 380 3 135 1 266 3 
263 1 146 1 380 2 135 1 10 1 266 2 285 1 244 1 333 1 
263 1 254 1 7 1 380 1 135 1 266 1 82 1 244 1 43 1 344 1 337 1 
263 1 7 1 380 1 135 1 266 1 244 1 333 1 
263 1 7 1 380 1 266 1 285 1 244 1 333 2 
163 1 142 1 244 2 227 1 333 1 263 2 7 1 380 2 135 1 266 2 
285 1 244 1 294 1 333 1 263 1 7 1 172 1 380 3 265 1 135 2 266 3 10 2 337 1 
270 1 82 2 285 1 244 1 333 1 344 1 334 1 263 1 254 1 7 1 193 1 380 2 135 1 266 2 10 1 
115 1 285 1 244 2 294 1 333 1 263 2 146 1 7 1 380 4 135 2 266 4 10 2 337 1 
263 1 7 1 380 1 135 1 266 1 285 1 244 1 333 1 
190 1 99 1 285 2 244 1 294 1 333 2 263 1 150 1 380 4 135 3 93 1 10 2 266 4 337 1 
263 1 73 1 7 1 380 2 135 1 10 1 19 1 266 2 285 1 244 1 333 1 377 1 
190 1 99 2 244 1 285 1 333 1 263 1 315 1 7 1 150 2 380 3 135 1 266 3 
218 2 135 2 80 1 2 1 
263 1 112 1 7 1 380 1 266 1 244 1 
263 1 7 1 172 1 380 2 135 1 10 1 266 2 285 1 244 1 333 1 
330 1 
263 1 7 1 380 1 135 1 266 1 285 1 244 1 333 1 
244 1 285 1 333 1 263 1 7 1 150 1 172 1 380 3 135 1 10 1 266 3 
135 1 93 1 294 1 337 1 
135 1 333 1 

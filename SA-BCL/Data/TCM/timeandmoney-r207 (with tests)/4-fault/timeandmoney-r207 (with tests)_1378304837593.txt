#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 162 61 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 162 61 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 1 330 1 41 1 284 4 257 1 337 1 115 9 45 2 186 2 342 1 369 3 292 1 6 9 165 1 315 2 142 5 294 6 168 1 320 2 170 1 10 2 191 1 193 2 95 2 223 1 352 1 73 1 248 1 
132 1 330 1 41 1 284 4 257 1 337 1 115 9 45 2 186 2 342 1 369 3 292 1 6 9 165 1 315 2 142 5 294 6 168 1 320 2 170 1 10 2 191 1 193 2 95 2 223 1 352 1 73 1 248 1 
132 1 330 1 41 1 284 5 257 1 337 1 115 10 45 2 186 2 342 1 369 4 292 1 6 10 165 1 315 2 142 6 294 7 168 1 320 2 170 1 10 2 191 1 193 2 95 2 223 1 352 1 73 1 248 1 
132 1 168 1 294 4 320 2 10 2 170 1 191 1 193 1 330 1 95 2 223 1 41 1 284 3 257 1 73 1 337 1 115 7 248 1 45 2 342 1 186 2 369 2 6 7 292 1 165 1 142 4 315 2 
168 1 294 3 320 1 10 1 191 1 193 2 95 1 223 1 284 2 352 1 73 1 337 1 115 4 45 1 369 1 6 4 315 1 142 3 
320 1 10 1 191 1 157 1 95 1 71 1 247 1 257 1 73 1 337 1 115 2 342 1 186 1 6 2 142 1 315 1 
73 1 337 1 294 1 320 2 115 3 10 2 191 1 186 1 369 1 330 1 6 3 142 2 284 1 
132 1 21 1 330 1 41 1 284 4 337 1 115 9 45 1 186 1 369 3 6 9 142 5 315 1 294 7 168 1 320 2 10 2 191 1 193 2 95 1 223 1 125 1 352 1 73 1 
132 1 21 1 330 1 41 1 284 4 337 1 115 9 45 1 186 1 369 3 6 9 142 5 315 1 294 7 168 1 320 2 10 2 191 1 193 2 95 1 223 1 125 1 352 1 73 1 
182 1 296 1 291 1 
291 1 164 1 78 2 
20 1 317 2 114 2 116 2 272 1 267 2 331 2 159 2 
20 1 155 1 360 1 254 1 232 1 364 2 331 2 84 2 159 2 43 1 335 1 336 1 113 1 114 2 313 1 116 3 213 2 91 1 370 1 47 1 218 1 316 1 26 1 9 1 317 2 146 1 267 3 148 1 72 1 378 1 74 1 379 1 53 1 381 2 272 1 304 2 154 1 
203 1 317 1 114 1 116 1 272 1 267 1 331 1 159 1 274 1 121 1 
203 1 104 1 349 1 297 1 267 1 182 1 210 1 99 1 324 1 114 1 116 1 290 1 325 1 291 1 
317 1 203 1 349 1 297 2 267 1 331 1 159 1 182 1 210 1 99 1 114 1 116 1 290 1 325 2 291 1 
238 1 297 1 325 1 65 1 243 1 
182 1 372 1 238 1 153 1 297 2 325 2 291 1 243 1 
238 1 297 1 325 1 
203 1 317 1 297 1 267 1 331 1 180 1 159 1 114 1 116 1 325 1 272 1 274 1 121 1 243 1 
291 1 
182 1 238 1 153 1 297 2 325 2 291 1 271 1 243 1 
8 1 293 2 81 2 307 1 297 5 172 2 234 1 94 1 108 1 182 1 29 1 238 2 185 1 153 1 325 5 291 1 5 1 243 2 103 1 
20 1 296 1 
20 2 317 1 192 1 267 2 331 1 159 1 114 2 116 2 357 1 
15 1 181 1 359 1 
26 1 20 1 9 1 146 1 267 1 27 1 378 1 379 1 53 1 116 1 213 1 381 1 91 1 47 1 304 1 154 1 
26 1 9 1 317 1 146 1 96 1 267 2 159 1 181 1 136 1 378 1 379 1 53 1 114 1 116 2 213 1 91 1 381 1 47 1 304 1 154 1 
20 1 317 4 374 1 192 1 96 2 267 5 40 1 331 1 159 4 136 1 324 1 114 5 116 5 259 1 
203 1 317 2 114 2 116 2 267 2 159 2 268 1 274 1 
20 1 317 3 114 3 116 3 96 1 267 3 331 1 159 3 
203 1 317 1 114 1 116 1 267 1 159 1 274 1 
203 1 317 1 114 1 116 1 192 1 357 1 267 1 331 1 159 1 
20 1 203 1 360 1 254 1 364 2 331 2 84 1 159 3 43 1 335 1 136 1 210 1 113 1 114 3 116 4 213 1 91 1 290 1 370 1 47 1 218 1 316 1 26 1 9 1 317 3 146 1 349 1 297 1 192 1 267 4 96 1 148 1 174 1 72 1 378 1 379 1 99 1 53 1 302 1 381 1 325 1 272 1 304 1 154 1 
20 1 317 1 324 1 114 2 116 2 259 1 267 2 96 1 159 1 
203 1 317 3 297 1 349 1 192 1 96 2 267 3 331 1 159 3 136 1 210 1 99 1 114 3 116 3 302 1 290 1 325 1 291 1 251 1 
317 2 192 1 96 1 267 2 15 1 331 1 159 2 181 1 114 2 116 2 
26 1 20 1 9 1 146 1 267 1 378 1 379 1 53 1 116 1 213 1 381 1 91 1 47 1 304 1 154 1 
26 1 20 1 9 1 146 1 267 1 137 1 378 1 53 1 116 1 213 1 212 1 381 1 91 1 304 1 154 1 
155 2 204 1 254 1 158 1 282 1 364 2 179 1 84 4 181 2 43 1 343 1 370 1 117 1 218 2 316 1 16 1 148 1 15 2 323 1 72 1 128 1 100 1 102 1 359 2 
203 1 99 1 317 1 114 1 116 1 267 1 159 1 268 1 
129 1 175 1 
129 1 175 1 
129 1 214 1 226 1 175 1 
129 1 214 1 226 1 175 1 
214 1 226 1 
70 1 129 1 175 1 
70 1 129 1 175 1 
70 1 129 1 175 1 
75 1 12 1 214 1 226 1 129 2 175 2 
32 1 129 1 175 1 
129 1 175 1 150 1 
129 1 175 1 150 1 
129 1 175 1 150 1 
20 1 230 1 317 2 376 1 38 1 297 1 171 1 281 1 206 1 267 2 159 2 334 1 114 2 89 1 32 1 116 2 129 1 46 1 325 1 175 1 200 1 201 1 260 1 273 1 
329 1 38 2 297 2 171 3 39 1 206 2 85 2 288 1 63 1 75 1 89 2 129 2 161 1 175 2 325 2 291 1 163 1 201 1 273 2 
45 1 95 1 315 1 
157 1 95 1 315 1 
126 1 286 1 348 1 45 2 157 1 95 3 
126 1 348 1 380 1 45 1 157 1 95 2 
126 1 348 2 45 1 157 1 95 2 
277 1 81 1 279 1 234 3 109 2 282 1 179 1 334 1 367 2 182 1 2 2 238 1 291 2 164 1 5 1 217 1 260 1 68 1 243 4 8 2 293 1 297 5 172 1 194 1 16 1 31 1 128 1 153 1 325 5 200 1 78 3 35 1 
81 2 59 1 234 8 109 6 282 3 179 3 134 1 310 5 182 1 2 6 238 6 160 1 65 5 291 5 164 3 5 1 217 2 243 7 8 6 293 2 221 1 297 9 172 2 194 2 16 3 31 1 128 3 270 1 153 1 325 9 200 4 78 9 305 1 35 3 103 1 
277 1 81 1 234 3 179 1 282 1 109 2 182 1 367 1 2 2 291 3 164 2 217 1 68 1 243 2 293 1 8 2 297 3 172 1 194 1 16 1 128 1 325 3 200 1 78 4 35 1 103 1 
277 1 81 1 59 1 234 5 109 4 179 2 282 2 134 1 182 1 367 2 2 4 291 4 164 3 217 1 68 1 243 3 293 1 8 4 297 4 172 1 194 1 16 2 128 2 325 4 200 2 78 7 305 1 35 2 103 1 
26 1 296 1 275 1 
26 1 311 1 
76 1 
26 1 146 1 91 1 
26 1 23 1 
26 1 91 1 
26 3 146 1 91 1 0 1 275 2 209 1 
37 1 155 4 80 1 190 1 233 1 265 1 158 3 282 1 84 7 111 1 196 2 128 1 100 2 249 1 218 3 48 1 18 1 
37 1 155 4 80 1 190 1 233 1 265 1 158 3 282 1 84 7 111 1 196 2 128 1 100 2 249 1 218 3 48 1 18 1 
37 1 155 4 80 1 190 1 233 1 265 1 158 3 282 1 84 7 111 1 196 2 128 1 100 2 249 1 218 3 24 1 48 1 18 1 
37 2 155 16 80 1 105 1 233 2 158 10 107 1 364 2 179 3 282 4 84 31 135 1 43 1 235 1 111 1 140 3 370 1 48 1 218 15 144 1 190 1 265 5 148 1 16 3 72 1 224 4 196 3 128 4 100 5 249 2 33 1 18 2 36 1 35 3 
37 1 155 5 233 1 178 1 158 4 282 1 364 4 84 9 43 2 111 1 370 2 218 4 48 1 67 1 190 1 265 1 148 2 72 2 196 2 128 1 100 3 33 1 249 1 18 1 
157 1 83 1 60 1 1 1 286 1 337 1 3 1 115 2 45 1 213 1 240 1 186 1 6 2 49 1 142 1 315 1 119 1 141 1 294 1 320 1 10 1 191 1 95 2 377 1 73 1 378 1 198 1 53 1 381 1 304 1 
57 1 157 1 83 1 60 1 286 1 1 1 3 1 115 3 45 1 213 1 240 1 186 1 6 3 142 1 315 1 119 1 141 1 92 1 294 2 320 1 10 1 191 1 95 2 73 1 378 1 198 1 53 1 301 1 381 1 304 1 
157 1 60 1 1 1 286 1 3 1 115 2 213 1 45 1 186 1 240 1 6 2 142 1 141 1 315 1 92 1 294 2 191 1 95 2 73 1 378 1 198 1 53 1 301 1 381 1 304 1 
26 1 9 1 57 1 320 1 10 1 322 1 207 1 298 1 60 2 1 2 378 1 53 1 115 1 213 1 91 1 186 2 381 1 240 2 6 1 304 1 118 1 382 1 371 1 
157 1 83 1 60 1 1 1 286 1 337 1 3 1 115 1 45 1 213 1 240 1 186 1 6 1 315 1 119 1 141 1 320 1 10 1 95 2 377 1 378 1 198 1 53 1 301 1 381 1 304 1 
219 1 
278 2 81 1 280 1 234 2 285 2 182 1 238 6 88 2 239 2 91 1 290 1 291 2 5 1 345 1 8 2 293 1 9 2 189 1 297 5 349 1 194 1 151 1 299 1 353 2 99 1 53 1 153 3 101 1 304 2 203 1 58 2 104 1 253 4 106 1 365 1 210 1 114 1 213 2 116 1 164 2 166 2 371 1 26 1 220 1 172 1 267 1 378 1 225 1 324 1 34 1 381 2 228 1 325 5 78 2 382 1 
203 1 104 1 253 2 106 1 365 1 210 1 238 2 114 1 88 1 116 1 290 1 345 1 220 1 349 1 297 3 267 1 225 1 99 1 324 1 153 1 325 3 271 1 
203 1 104 1 253 3 106 1 365 1 182 1 210 1 238 1 114 1 116 1 290 1 291 1 345 1 220 1 349 1 297 3 267 1 353 1 225 1 99 1 324 1 153 1 325 3 271 1 
203 1 104 1 253 3 58 1 106 1 365 1 182 1 210 1 238 2 114 1 88 1 116 1 290 1 291 1 345 1 220 1 349 1 297 3 267 1 353 1 225 1 99 1 324 1 153 1 325 3 271 1 
81 1 278 2 234 1 285 2 42 1 182 5 238 7 338 1 88 4 239 2 290 1 291 5 345 1 5 1 293 1 8 1 295 1 349 1 297 5 151 1 353 4 195 1 99 1 153 3 203 1 58 4 253 6 104 1 106 1 365 1 210 1 114 1 116 1 164 2 166 2 220 1 172 1 267 1 225 1 324 1 34 1 325 5 271 1 130 1 
81 1 278 2 234 1 285 2 182 1 238 4 88 2 239 2 290 1 291 2 5 1 345 1 293 1 8 1 189 1 349 1 297 4 151 1 353 2 99 1 153 2 203 1 253 4 104 1 58 2 106 1 365 1 210 1 114 1 116 1 164 2 166 2 220 1 172 1 267 1 225 1 324 1 34 1 325 4 78 2 
203 1 58 2 278 2 104 1 253 4 81 1 106 1 234 1 365 1 285 2 182 1 210 1 238 4 338 1 88 2 114 1 239 2 116 1 290 1 291 1 164 2 345 1 5 1 166 2 8 1 293 1 220 1 295 1 349 1 297 4 172 1 267 1 151 1 353 2 195 1 225 1 99 1 324 1 153 2 34 1 325 4 
203 1 58 2 278 2 104 1 253 4 81 1 106 1 234 1 365 1 285 2 182 1 210 1 238 4 338 1 88 2 114 1 239 2 116 1 290 1 291 1 164 2 345 1 5 1 166 2 8 1 293 1 220 1 295 1 349 1 297 4 172 1 267 1 151 1 353 2 195 1 225 1 99 1 324 1 153 2 34 1 325 4 
203 1 58 2 104 1 253 4 81 1 106 1 234 1 365 1 332 1 182 1 210 1 238 4 88 2 114 1 239 2 139 1 116 1 290 1 291 1 344 2 345 1 5 1 66 2 166 2 8 1 293 1 346 1 220 1 349 1 297 4 172 1 267 1 151 1 353 2 195 1 225 1 99 1 324 1 153 2 325 4 78 2 
203 1 278 2 81 1 104 1 253 5 58 3 106 1 234 1 365 1 285 2 42 1 182 1 210 1 238 5 338 1 114 1 88 3 239 2 116 1 290 1 291 1 164 2 5 1 345 1 166 2 8 1 293 1 295 1 220 1 349 1 297 4 172 1 267 1 151 1 195 1 353 3 225 1 99 1 324 1 153 2 34 1 325 4 
203 1 278 2 81 1 104 1 253 5 58 3 106 1 234 1 365 1 285 2 42 1 182 1 210 1 238 5 338 1 114 1 88 3 239 2 116 1 290 1 291 1 164 2 5 1 345 1 166 2 8 1 293 1 295 1 220 1 349 1 297 4 172 1 267 1 151 1 195 1 353 3 225 1 99 1 324 1 153 2 34 1 325 4 
81 1 234 1 182 1 238 4 88 2 139 1 239 2 290 1 291 1 5 1 345 1 344 2 293 1 8 1 189 1 349 1 297 4 151 1 353 2 99 1 153 2 203 1 253 4 104 1 58 2 106 1 365 1 210 1 114 1 116 1 166 2 66 2 220 1 172 1 267 1 225 1 324 1 325 4 78 2 
20 2 155 3 204 1 254 1 233 1 158 2 364 2 282 1 84 6 181 1 43 1 111 1 370 1 48 1 218 3 316 1 296 1 190 1 15 1 148 1 72 1 196 1 100 2 128 1 249 1 359 1 
131 1 20 1 155 8 361 1 231 1 254 1 158 2 364 4 179 2 282 2 84 14 181 11 235 1 43 2 335 1 140 3 370 2 218 6 316 2 144 1 13 1 265 1 123 1 148 2 15 4 16 1 72 2 224 3 74 1 100 1 128 1 359 11 35 2 
20 1 155 1 231 1 254 1 364 2 159 1 84 2 43 1 136 1 335 1 340 1 114 1 213 1 116 2 91 1 370 1 47 1 218 1 261 1 316 1 26 1 9 1 317 1 146 1 267 2 96 1 15 1 148 1 72 1 27 1 52 1 378 1 379 1 74 1 53 1 381 1 304 1 154 1 
133 1 231 1 233 1 179 2 282 4 84 22 181 6 43 3 335 1 136 1 44 1 91 2 47 2 48 1 9 1 190 1 146 2 145 2 51 1 96 1 148 3 15 6 16 2 53 2 100 4 249 1 303 1 304 1 252 2 154 2 359 6 20 1 155 11 203 1 254 3 158 5 364 6 159 1 111 1 62 2 112 2 113 2 114 1 213 1 116 3 370 3 218 11 316 3 26 2 317 1 265 1 267 3 72 3 378 2 74 1 379 2 128 4 381 1 35 2 
56 1 155 1 204 1 254 2 364 4 159 1 84 2 86 1 43 2 335 1 336 2 183 1 114 1 116 1 213 7 91 2 162 1 370 2 49 1 218 1 371 1 316 2 26 3 9 2 317 1 373 1 267 1 96 1 148 2 124 1 72 2 378 2 74 1 152 1 53 2 301 1 381 8 304 8 382 1 
155 1 231 1 254 1 158 1 364 2 179 1 282 1 331 1 159 1 84 3 181 1 43 1 339 1 114 1 116 1 370 1 218 2 316 1 317 1 192 1 267 1 15 1 148 1 16 1 72 1 100 1 128 1 359 1 35 1 
155 2 204 1 254 1 158 1 265 1 364 2 179 1 282 1 15 1 148 1 84 2 181 1 72 1 43 1 343 1 370 1 359 1 316 1 
204 1 254 1 158 1 364 2 15 1 148 1 16 1 84 2 181 1 72 1 323 1 43 1 100 1 128 1 370 1 218 2 359 1 316 1 
155 2 204 1 254 1 158 2 282 1 179 1 364 2 84 4 181 2 43 1 370 1 218 2 316 1 265 1 148 1 15 2 16 1 72 1 128 1 100 1 35 1 359 2 
155 2 373 1 254 1 158 1 265 1 364 2 179 1 282 1 15 1 148 1 84 2 181 1 72 1 43 1 343 1 370 1 359 1 316 1 
373 1 254 1 158 1 364 2 15 1 148 1 16 1 84 2 181 1 72 1 323 1 43 1 100 1 128 1 370 1 218 2 359 1 316 1 
155 2 254 1 158 2 282 1 179 1 364 2 84 4 181 2 43 1 370 1 218 2 316 1 373 1 265 1 148 1 15 2 16 1 72 1 128 1 100 1 35 1 359 2 
155 2 254 1 158 2 282 1 179 1 364 2 84 4 181 2 43 1 370 1 218 2 316 1 265 1 148 1 15 2 16 1 72 1 128 1 100 1 35 1 359 2 
20 1 155 1 254 1 364 2 84 2 43 1 335 1 113 1 213 1 116 1 91 1 370 1 47 1 218 1 316 1 26 1 9 1 146 1 267 1 148 1 72 1 378 1 74 1 379 1 53 1 381 1 304 1 154 1 
20 1 155 1 254 1 364 2 84 2 43 1 335 1 137 1 212 1 213 1 116 1 91 1 370 1 218 1 316 1 26 1 9 1 146 1 147 1 267 1 148 1 72 1 378 1 74 1 53 1 381 1 304 1 154 1 
155 2 231 1 254 1 158 2 282 1 179 1 364 2 84 4 181 2 43 1 370 1 218 2 316 1 265 1 148 1 15 2 16 1 72 1 128 1 100 1 35 1 359 2 
155 2 254 1 158 2 282 1 179 1 364 2 84 4 181 2 43 1 62 1 113 1 213 1 116 1 91 1 370 1 47 1 218 2 49 1 316 1 26 1 146 1 265 1 267 1 16 1 15 2 148 1 72 1 378 1 379 1 53 1 100 1 128 1 381 1 304 1 359 2 154 1 35 1 
55 1 155 2 231 1 254 1 158 1 364 2 179 1 282 1 331 1 159 1 84 3 181 1 43 1 114 1 116 1 370 1 218 1 316 1 317 1 192 1 265 1 267 1 16 1 148 1 15 1 72 1 128 1 35 1 359 1 
79 2 155 9 178 1 158 6 364 4 179 3 282 3 84 19 235 1 43 2 237 1 140 1 314 1 370 2 218 10 244 1 144 1 265 3 148 2 16 3 72 2 224 2 127 1 98 1 30 1 100 3 128 3 356 1 327 2 35 3 
79 1 155 14 328 1 158 4 178 1 364 6 179 3 282 3 366 1 84 26 43 3 235 2 110 1 237 1 140 2 314 2 370 3 218 12 244 2 245 1 265 2 148 3 16 2 72 3 224 2 28 1 98 1 100 2 128 2 33 2 356 1 77 1 327 4 35 3 
79 1 328 1 233 1 178 1 282 5 179 4 84 41 43 3 235 3 237 1 140 3 48 1 244 2 245 1 144 1 190 1 16 4 148 3 98 1 196 1 100 4 249 1 355 1 356 1 155 20 158 8 364 6 366 1 110 1 111 1 370 3 314 1 218 21 265 4 72 3 224 4 28 1 30 1 128 5 33 1 77 1 327 4 35 4 
79 1 328 1 155 20 233 1 178 1 158 7 364 8 179 4 282 5 366 1 84 38 110 1 235 3 43 4 111 1 237 1 140 3 314 1 370 4 48 1 218 18 244 2 245 1 144 1 190 1 265 3 148 4 16 3 72 4 224 4 28 1 98 1 30 1 196 1 100 4 128 4 249 1 33 2 355 1 356 1 77 1 327 4 35 4 
79 1 328 1 155 27 361 2 233 1 178 1 158 14 364 4 179 7 282 8 366 1 84 52 110 1 235 2 43 2 111 1 237 1 140 4 314 1 370 2 48 1 218 25 244 1 245 1 144 2 190 1 265 7 148 2 16 7 72 2 224 4 28 1 98 1 196 1 100 7 128 8 249 1 33 1 356 1 77 1 327 4 35 7 
75 1 89 1 38 1 309 1 39 1 129 1 161 1 175 1 206 1 273 1 
32 1 281 1 
50 1 89 1 38 1 129 1 175 1 350 1 206 1 167 1 273 1 
70 1 197 1 
12 1 150 1 19 1 
38 1 297 1 171 2 39 1 206 1 85 1 288 1 63 1 75 1 89 1 129 1 161 1 325 1 175 1 291 1 163 1 201 1 273 1 
38 1 297 1 171 2 39 1 206 1 85 1 288 1 63 1 75 1 89 1 129 1 161 1 325 1 175 1 291 1 163 1 201 1 273 1 
38 1 297 1 171 2 39 1 206 1 85 1 288 1 63 1 75 1 89 1 129 1 161 1 325 1 175 1 291 1 163 1 201 1 273 1 
70 1 197 1 12 1 
70 1 197 1 12 1 
150 1 19 1 
12 1 150 1 19 1 
230 1 376 1 
20 1 230 1 38 1 281 1 206 1 159 2 85 1 334 1 287 1 89 1 114 2 116 2 46 1 163 1 260 1 243 1 317 2 376 1 297 1 171 1 267 2 32 1 129 1 325 1 175 1 200 1 273 1 
155 1 231 1 254 1 364 2 84 2 43 1 61 1 335 1 336 2 312 1 368 1 114 2 116 2 213 2 162 1 370 1 218 1 316 1 267 2 97 1 148 1 72 1 300 1 74 1 152 1 381 2 304 2 
205 1 157 1 122 1 95 2 83 1 208 1 60 1 286 1 378 1 53 1 198 1 301 1 45 1 213 2 381 2 304 2 49 1 315 1 141 1 
205 1 157 1 95 2 83 1 60 1 286 1 378 1 198 1 53 1 301 1 45 1 213 1 381 1 227 1 304 1 315 1 141 1 
26 1 9 1 207 1 208 1 60 1 351 1 378 1 53 1 213 1 91 1 381 1 304 1 382 1 371 1 
205 1 157 1 122 1 95 2 83 1 208 1 60 1 286 1 378 1 198 1 53 1 301 1 45 1 213 1 381 1 304 1 315 1 141 1 
262 1 
182 1 8 1 29 1 296 1 234 1 291 1 108 1 
81 1 278 1 234 1 285 1 182 1 238 1 291 2 164 1 5 1 8 1 293 1 297 1 172 1 34 1 153 1 325 1 78 1 
81 4 234 9 179 2 282 2 182 2 2 6 238 5 341 1 91 3 187 2 291 8 5 4 49 1 293 4 8 8 9 1 188 2 146 3 297 5 194 2 16 2 53 3 153 3 17 2 199 1 250 1 304 3 54 2 156 2 108 1 109 6 311 3 209 1 210 2 112 2 211 2 258 2 213 3 23 2 164 6 264 1 26 10 375 1 172 4 173 2 29 1 378 4 128 2 381 3 228 1 325 5 78 12 35 2 275 2 
328 1 81 2 234 8 109 5 179 2 282 2 366 1 235 1 110 1 182 2 2 5 238 1 211 2 140 1 291 5 5 2 164 3 69 1 293 2 8 5 245 1 297 1 172 2 194 1 16 2 224 1 128 2 153 1 228 1 325 1 77 1 54 1 229 1 78 6 35 2 
203 1 81 1 233 1 234 2 282 2 331 1 180 1 159 1 111 1 211 2 114 1 116 1 44 1 5 1 121 1 293 1 8 2 295 1 317 1 297 1 172 1 267 1 128 1 249 1 325 1 272 1 54 1 274 1 
293 1 8 1 81 1 172 1 234 1 108 1 182 1 29 1 291 1 5 1 
8 5 234 5 179 2 282 2 109 5 16 2 2 5 112 1 211 2 128 2 291 5 164 5 54 1 78 10 35 2 
182 1 238 1 297 1 153 1 325 1 291 1 
81 2 280 1 234 2 238 4 213 4 289 1 91 1 5 1 371 1 26 1 293 2 8 2 9 2 375 2 297 3 172 2 194 2 378 1 53 1 153 2 101 1 381 4 228 2 325 3 326 1 250 1 304 4 382 1 103 1 
20 1 360 1 254 1 364 2 331 2 84 1 159 2 43 1 335 1 113 1 114 2 213 1 116 3 91 1 370 1 47 1 218 1 316 1 26 1 9 1 317 2 146 1 267 3 148 1 72 1 378 1 379 1 53 1 381 1 272 1 304 1 154 1 
8 2 293 1 81 1 172 1 194 1 234 1 109 2 182 2 2 2 196 1 228 1 291 4 164 2 5 1 78 4 
38 1 255 1 206 1 
38 1 255 1 206 1 
38 1 255 1 206 1 
230 1 143 1 38 1 161 1 206 1 
176 1 38 1 206 1 
176 1 38 1 206 1 
176 1 38 1 206 1 
38 1 206 1 
129 1 175 1 
155 4 190 1 233 1 265 1 158 3 282 1 364 4 148 2 84 8 72 2 43 2 111 1 196 1 128 1 100 2 33 1 249 1 370 2 218 4 48 1 
155 3 296 1 190 1 233 1 158 2 282 1 84 6 111 1 196 1 100 2 128 1 249 1 218 3 48 1 
155 2 158 2 265 1 364 2 179 1 282 1 16 1 148 1 84 4 72 1 43 1 100 1 128 1 370 1 218 2 242 1 35 1 
155 3 144 1 265 1 158 2 179 1 282 1 16 1 84 7 235 1 224 2 100 1 128 1 140 1 218 4 35 1 
155 11 361 1 233 2 158 9 282 3 179 2 364 4 84 23 43 2 111 1 140 2 370 2 48 1 218 12 144 1 190 1 93 1 13 1 265 4 16 2 148 2 72 2 224 2 196 1 128 3 100 5 249 2 33 2 35 2 
218 1 84 1 224 1 
155 1 140 1 84 1 
155 3 265 1 158 3 364 2 179 1 282 1 148 1 16 1 84 6 72 1 43 1 112 1 128 1 100 2 370 1 218 3 242 1 35 1 
328 1 155 6 178 1 158 2 364 2 179 2 282 2 366 1 84 12 235 1 43 1 110 1 140 1 370 1 218 6 245 1 265 1 148 1 16 2 72 1 224 1 128 2 100 1 77 1 35 2 
155 3 233 1 158 2 265 1 282 1 84 6 111 1 128 1 100 1 249 1 218 3 
155 1 190 1 93 1 233 1 265 1 158 2 364 2 148 1 84 3 72 1 43 1 100 1 249 1 33 1 370 1 218 2 48 1 
155 5 233 2 178 1 158 5 265 2 364 2 282 2 148 1 84 10 72 1 43 1 111 1 100 3 128 2 44 1 249 2 370 1 218 5 
155 2 178 1 265 1 158 1 364 2 179 1 282 1 148 1 84 2 72 1 43 1 370 1 
155 2 158 2 178 1 265 1 364 2 179 1 282 1 16 1 148 1 84 4 72 1 43 1 100 1 128 1 370 1 218 2 35 1 
155 1 93 1 233 1 178 1 158 2 265 1 364 6 148 3 84 3 72 3 43 3 30 1 100 1 33 1 249 1 370 3 218 2 
155 16 105 1 233 3 107 1 178 1 158 12 364 10 179 3 282 5 135 1 84 34 235 1 43 5 111 2 140 3 370 5 48 1 218 18 242 1 144 1 190 1 93 1 265 5 148 5 16 3 72 5 224 4 196 1 30 1 128 5 100 7 249 3 33 2 35 3 
328 1 155 4 233 1 178 1 158 2 282 1 364 2 84 8 235 1 43 1 111 1 140 1 370 1 218 4 48 1 190 1 148 1 72 1 224 1 196 1 128 1 100 2 249 1 
328 1 155 6 233 1 178 1 158 3 364 4 179 1 282 2 84 11 235 1 43 2 111 1 140 1 370 2 48 1 218 5 242 1 144 1 190 1 265 1 148 2 72 2 224 2 196 1 128 1 100 2 249 1 35 1 
328 1 155 9 233 1 178 1 158 4 364 6 179 2 282 3 366 1 84 19 235 1 43 3 110 1 111 1 140 1 370 3 48 1 218 10 242 1 245 1 190 1 265 1 148 3 16 2 72 3 224 1 196 1 128 3 100 3 249 1 33 1 77 1 35 2 
328 1 155 10 233 1 178 1 158 5 364 6 179 2 282 3 366 1 84 17 235 1 43 3 110 1 111 1 140 1 370 3 48 1 218 7 242 1 245 1 190 1 265 2 148 3 16 1 72 3 224 1 196 1 128 2 100 3 249 1 33 1 77 1 35 2 
328 1 155 4 233 1 178 1 158 2 282 1 364 2 84 8 235 1 43 1 111 1 140 1 370 1 218 4 48 1 190 1 148 1 72 1 224 1 196 1 128 1 100 2 249 1 
328 1 155 6 178 1 158 2 364 2 179 2 282 2 366 1 84 12 235 1 43 1 110 1 140 1 370 1 218 6 245 1 265 1 148 1 16 2 72 1 224 1 128 2 100 1 77 1 35 2 
328 1 155 10 233 1 178 1 158 5 364 8 179 2 282 3 366 1 84 18 235 1 43 4 110 1 111 1 140 1 370 4 48 1 218 8 242 1 245 1 190 1 265 2 148 4 16 1 72 4 224 1 196 1 128 2 100 3 249 1 33 2 77 1 35 2 
328 1 155 9 178 1 158 6 364 8 179 3 282 3 366 1 84 16 235 1 43 4 110 1 140 1 370 4 218 7 245 1 265 3 148 4 16 2 72 4 224 1 30 1 128 2 100 3 33 2 77 1 35 3 
155 3 190 2 233 3 158 6 265 3 282 1 84 7 111 1 128 1 100 3 249 3 218 4 48 1 
328 1 155 10 233 1 178 1 158 4 364 8 179 2 282 3 366 1 84 18 235 1 43 4 110 1 111 1 140 1 370 4 48 1 218 8 245 1 190 1 265 1 148 4 16 1 72 4 224 1 196 1 30 1 128 2 100 3 249 1 33 2 77 1 35 2 
20 1 324 1 114 1 116 1 222 1 259 1 267 1 
20 1 222 1 283 1 267 1 149 1 256 1 324 1 114 1 90 1 116 1 259 1 358 1 
26 1 9 1 378 1 296 1 53 1 213 1 91 1 381 1 304 1 382 1 371 1 
26 1 20 1 9 1 317 1 146 1 96 1 267 2 159 1 378 1 114 1 53 1 116 2 213 1 91 1 381 1 47 1 304 1 154 1 
26 3 20 1 203 1 317 2 375 1 146 2 96 1 267 2 159 1 378 1 99 1 114 2 53 1 116 2 213 1 17 1 290 1 91 2 381 1 23 1 47 1 304 1 154 1 
26 3 20 1 203 1 317 2 375 1 321 1 146 2 96 1 267 2 159 1 378 1 137 1 99 1 114 2 53 1 116 2 213 2 17 1 290 1 91 2 381 2 23 1 304 2 154 1 
26 4 9 1 375 1 321 1 146 1 297 2 311 1 182 1 210 1 378 1 238 1 53 1 213 3 91 1 17 1 381 3 241 1 325 2 291 1 23 1 304 3 306 1 275 1 
26 4 9 1 375 1 321 1 146 1 297 2 311 1 182 1 210 1 378 1 238 1 53 1 213 3 91 1 17 1 381 3 187 1 325 2 291 1 23 1 304 3 275 1 
378 1 53 1 183 1 213 1 381 1 304 1 
26 3 56 1 9 2 318 1 146 1 124 1 269 1 86 1 209 1 336 1 378 3 183 1 53 2 301 1 184 1 213 6 381 7 91 2 162 1 49 1 304 7 
231 1 233 1 282 1 84 6 181 1 43 2 91 1 47 1 49 1 48 1 190 1 146 1 96 1 15 1 148 2 196 1 53 1 100 2 249 1 304 1 252 1 154 1 359 1 20 2 155 3 254 2 158 2 364 4 159 1 111 1 62 1 113 1 312 1 114 1 213 1 116 2 370 2 218 3 316 2 26 1 317 1 267 2 72 2 378 1 379 1 128 1 381 1 
81 2 234 1 108 1 311 1 182 1 210 1 238 2 258 1 213 1 187 1 291 1 5 2 243 1 8 1 293 2 26 2 9 1 188 1 297 3 172 2 173 1 29 1 153 1 381 1 325 3 250 1 304 1 275 1 
26 2 146 1 209 1 378 2 183 1 53 1 213 2 381 2 91 1 49 1 304 2 275 1 264 1 
26 1 9 1 321 1 378 1 53 1 213 4 381 4 91 1 304 4 49 1 120 1 382 1 371 1 
26 1 318 1 375 1 246 1 146 1 266 1 333 1 378 2 53 1 184 1 213 2 381 2 91 1 304 2 
9 1 378 1 53 1 213 1 157 1 381 1 95 1 304 1 315 1 141 1 
61 1 301 1 213 2 381 2 162 1 304 2 49 1 
26 3 9 1 56 1 375 1 124 1 378 2 53 2 213 4 381 5 91 2 162 1 304 5 49 1 120 1 382 1 371 1 
26 3 9 1 375 1 124 1 378 2 53 2 213 4 381 5 91 2 162 1 64 1 304 5 49 1 120 1 382 1 371 1 
26 1 20 1 9 1 317 1 146 1 96 1 267 2 159 1 378 1 137 1 114 1 53 1 116 2 213 1 91 1 381 1 304 1 154 1 
26 1 318 1 375 1 146 1 269 1 209 1 378 2 53 1 184 1 213 1 381 1 91 1 304 1 
20 1 319 1 4 1 202 1 25 1 
20 1 203 1 319 1 297 2 349 1 177 1 182 1 210 1 99 1 138 1 302 1 290 1 325 2 4 2 291 1 216 1 243 1 25 2 202 2 
319 1 267 1 97 1 300 1 368 1 114 1 116 1 25 1 202 1 
138 1 319 1 177 1 
73 1 296 1 191 1 142 1 
73 1 320 1 115 1 10 1 191 1 6 1 142 1 
115 1 186 1 240 1 
7 1 320 1 169 1 10 1 191 1 73 1 337 1 115 3 342 2 215 1 6 3 142 1 
73 1 294 1 320 1 115 2 10 1 191 1 193 1 6 2 142 1 
337 1 320 1 115 1 10 1 45 1 95 1 223 1 6 1 315 1 142 1 284 1 
337 1 320 1 115 1 10 1 191 1 6 1 142 1 
73 1 337 1 320 1 115 1 10 1 191 2 6 1 
347 1 320 2 10 2 191 1 236 1 337 1 115 2 354 1 6 2 142 1 
73 1 132 1 337 1 294 2 320 1 115 3 10 1 191 1 369 1 6 3 41 1 142 2 284 1 
294 1 320 1 10 1 11 1 191 1 157 1 95 2 286 1 73 1 337 1 115 2 45 1 6 2 142 1 315 1 
294 2 320 2 10 2 191 1 193 1 284 1 352 1 73 1 337 1 115 4 369 1 6 4 142 2 
73 1 337 1 320 1 115 1 10 1 191 1 6 1 142 1 
7 1 294 2 320 1 10 1 191 2 308 1 284 1 73 2 115 4 342 1 215 1 369 1 6 4 142 3 
294 1 320 1 10 1 362 1 191 1 21 1 73 1 337 1 115 2 6 2 142 1 263 1 
7 1 320 1 10 1 191 1 82 1 73 1 337 1 115 3 342 2 215 2 6 3 142 1 
87 1 363 1 22 2 142 2 
337 1 320 1 115 1 10 1 14 1 6 1 
73 1 337 1 294 1 320 1 115 2 10 1 191 1 6 2 41 1 142 1 
276 1 
73 1 337 1 320 1 115 1 10 1 191 1 6 1 142 1 
73 1 337 1 294 1 320 1 115 3 10 1 191 1 342 1 6 3 41 1 142 1 
308 1 369 1 142 1 284 1 
191 1 142 1 

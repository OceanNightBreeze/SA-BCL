#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 124 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
157 2 161 2 113 1 309 4 166 9 288 1 62 9 89 1 364 1 190 1 237 2 213 1 239 6 194 1 93 5 172 1 94 1 15 1 125 2 31 1 246 2 221 3 222 1 376 1 277 1 276 2 330 2 80 1 
157 2 161 2 113 1 309 4 166 9 288 1 62 9 89 1 364 1 190 1 237 2 213 1 239 6 194 1 93 5 172 1 94 1 15 1 125 2 31 1 246 2 221 3 222 1 376 1 277 1 276 2 330 2 80 1 
157 2 161 2 113 1 309 5 166 10 288 1 62 10 89 1 364 1 190 1 237 2 213 1 239 7 194 1 93 6 172 1 94 1 15 1 125 2 31 1 246 2 221 4 222 1 376 1 277 1 276 2 330 2 80 1 
157 2 161 2 113 1 309 3 166 7 288 1 62 7 89 1 190 1 237 1 213 1 239 4 194 1 93 4 172 1 94 1 15 1 125 2 31 1 246 2 221 2 222 1 376 1 277 1 276 2 330 2 80 1 
157 1 125 1 31 1 246 1 309 2 221 1 166 4 62 4 222 1 364 1 190 1 237 2 276 1 194 1 239 3 330 1 93 3 80 1 
125 1 161 1 246 1 113 1 295 1 166 2 62 2 222 1 312 1 89 1 190 1 238 1 276 1 93 1 330 1 80 1 
161 1 246 2 309 1 221 1 166 3 62 3 222 1 190 1 213 1 239 1 330 2 93 2 80 1 
281 1 157 1 161 1 309 4 166 9 62 9 364 1 190 1 237 2 213 1 239 7 194 1 93 5 94 1 125 1 31 1 246 2 221 3 222 1 376 1 276 1 330 2 305 1 80 1 
281 1 157 1 161 1 309 4 166 9 62 9 364 1 190 1 237 2 213 1 239 7 194 1 93 5 94 1 125 1 31 1 246 2 221 3 222 1 376 1 276 1 330 2 305 1 80 1 
226 1 12 1 124 1 
334 1 226 1 118 2 
373 2 258 2 328 2 48 1 26 1 302 2 61 2 379 2 
137 1 58 1 208 1 253 1 5 1 185 1 44 1 61 2 287 1 187 2 258 2 212 1 168 1 260 1 170 2 26 1 46 1 68 2 371 1 266 1 95 1 48 1 29 1 30 1 49 2 52 2 177 1 178 1 373 3 328 3 329 1 273 1 302 2 134 1 379 2 331 1 230 1 
373 1 258 1 328 1 48 1 302 1 293 1 61 1 22 1 379 1 74 1 
373 1 106 1 328 1 367 1 308 1 226 1 108 1 22 1 379 1 175 1 285 1 57 1 12 1 17 1 
373 1 258 1 106 1 328 1 367 1 226 1 302 1 61 1 108 2 22 1 379 1 175 2 57 1 12 1 17 1 
149 1 141 1 38 1 108 1 175 1 
149 1 366 1 38 1 226 1 108 2 175 2 12 1 36 1 
149 1 108 1 175 1 
48 1 61 1 22 1 85 1 175 1 74 1 258 1 373 1 328 1 38 1 293 1 302 1 108 1 379 1 
226 1 
149 1 189 1 366 1 38 1 226 1 108 2 175 2 12 1 
149 2 219 1 100 2 175 5 115 1 248 1 300 1 9 2 133 2 366 1 38 2 226 1 195 1 108 5 56 1 11 1 12 1 354 1 148 1 
26 1 124 1 
61 1 373 2 258 1 328 2 26 2 377 1 302 1 379 2 279 1 
163 1 16 1 229 1 
371 1 95 1 58 1 29 1 49 1 5 1 287 1 187 1 152 1 373 1 212 1 168 1 328 1 170 1 26 1 134 1 
371 1 95 1 282 1 29 1 58 1 49 1 5 1 61 1 320 1 16 1 287 1 187 1 373 2 168 1 212 1 328 2 170 1 134 1 302 1 379 1 
258 1 373 3 282 1 328 3 26 1 302 3 61 3 379 3 
373 1 328 1 302 1 61 1 22 1 379 1 74 1 
373 1 258 1 328 1 302 1 377 1 61 1 22 1 379 1 279 1 
282 1 137 1 58 1 208 1 253 1 5 1 61 3 22 1 287 1 187 1 258 2 168 1 212 1 121 1 170 1 26 1 367 1 46 1 68 1 371 1 266 1 95 1 48 1 29 1 30 1 49 1 320 1 271 1 175 1 52 2 17 1 177 1 178 1 373 4 106 1 328 4 329 1 273 1 134 1 377 1 302 3 379 3 108 1 57 1 
373 2 328 2 282 1 26 1 308 1 302 1 61 1 379 2 311 1 
282 2 61 3 22 1 320 1 175 1 271 1 127 1 17 1 258 1 373 3 328 3 106 1 367 1 226 1 377 1 302 3 108 1 379 3 57 1 
282 1 163 1 61 2 16 1 258 1 373 2 328 2 377 1 302 2 379 2 
371 1 95 1 58 1 29 1 49 1 5 1 287 1 187 1 373 1 212 1 168 1 328 1 170 1 26 1 134 1 
371 1 95 1 29 1 49 1 319 1 5 1 270 1 287 1 187 1 373 1 168 1 328 1 170 1 26 1 134 1 
208 1 253 1 163 2 254 1 114 1 337 1 143 1 25 1 291 1 46 1 68 4 266 1 245 1 16 2 176 1 52 2 177 2 223 1 178 1 301 1 273 1 331 2 229 2 207 1 
373 1 328 1 367 1 342 1 302 1 61 1 22 1 379 1 
282 2 61 4 320 1 22 1 349 1 373 4 258 1 328 4 339 1 19 1 26 1 302 4 377 1 379 4 
373 2 328 2 342 1 302 2 61 2 22 1 379 2 74 1 
372 1 290 1 
372 1 290 1 
99 1 325 1 
99 1 325 1 
99 1 325 1 
372 1 290 1 360 1 
372 1 290 1 123 1 
372 2 290 2 99 1 103 1 116 1 325 1 
372 1 290 1 360 1 
372 1 290 1 360 1 
372 1 290 1 199 1 
372 1 290 1 199 1 
372 1 290 1 199 1 
0 2 318 2 283 2 231 1 101 1 103 1 175 2 73 1 234 1 167 3 211 2 372 2 169 1 63 1 290 2 226 1 343 1 108 2 353 2 
280 1 318 1 283 1 231 1 71 1 32 1 61 2 50 1 175 1 167 1 54 1 373 2 211 1 372 1 328 2 290 1 26 1 302 2 379 2 108 1 353 1 47 1 69 1 123 1 
157 1 125 1 276 1 
125 1 238 1 276 1 
157 2 125 3 238 1 27 1 42 1 136 1 
157 1 125 2 238 1 27 1 42 1 14 1 
157 1 125 2 238 1 27 2 42 1 
334 1 280 1 118 3 337 1 9 1 143 1 366 1 92 1 11 3 12 1 148 2 149 1 217 2 219 1 268 1 100 1 267 2 32 1 71 1 150 1 175 5 176 1 129 1 324 1 327 1 133 1 374 1 38 4 226 2 108 5 109 2 207 1 
334 3 280 4 232 1 118 9 7 1 337 3 9 2 141 5 143 3 366 1 92 2 195 1 215 1 11 8 12 1 148 6 149 6 217 6 219 1 268 3 100 2 175 9 176 3 129 1 224 1 133 2 374 2 206 1 38 7 227 5 226 5 108 9 109 6 81 1 207 3 
334 2 280 1 118 4 337 1 9 1 143 1 92 1 195 1 11 3 12 1 148 2 217 2 100 1 267 1 268 1 175 3 176 1 324 1 327 1 133 1 374 1 38 2 226 3 108 3 109 2 207 1 
334 3 280 2 118 7 337 2 9 1 143 2 92 1 195 1 11 5 12 1 148 4 217 4 100 1 267 2 268 2 175 4 176 2 224 1 324 1 327 1 133 1 374 1 206 1 38 3 226 4 108 4 109 4 207 2 81 1 
347 1 5 1 124 1 
5 1 216 1 
375 1 
29 1 5 1 
371 1 188 1 347 2 29 1 5 3 284 1 
371 1 29 1 5 1 
341 1 5 1 
244 1 59 1 233 2 114 3 321 1 86 1 176 1 177 3 223 2 259 1 365 1 262 1 275 1 331 4 68 7 332 1 207 1 
244 1 59 1 233 2 114 3 321 1 86 1 176 1 177 3 223 2 259 1 365 1 262 1 275 1 331 4 68 7 332 1 207 1 
244 1 59 1 233 2 114 3 321 1 86 1 176 1 177 3 223 2 259 1 365 1 262 1 275 1 331 4 68 7 332 1 13 1 207 1 
59 1 208 1 253 1 233 3 114 10 86 2 117 3 337 3 259 1 365 2 143 3 262 1 368 1 214 1 68 31 266 1 316 1 244 2 268 3 321 2 176 4 52 2 177 15 223 5 53 1 178 1 77 1 55 1 205 1 275 5 378 4 331 16 332 1 207 4 
244 1 266 2 59 1 208 2 160 1 233 2 253 2 114 4 321 1 86 1 176 1 52 4 223 3 177 4 178 2 365 1 55 1 262 1 275 1 331 5 68 9 332 1 135 1 207 1 
157 1 1 1 161 1 166 2 187 1 62 2 236 1 338 1 64 1 168 1 190 1 170 1 238 1 171 1 239 1 93 1 145 1 241 1 125 2 49 1 246 1 247 1 222 1 79 1 134 1 276 1 330 1 80 1 355 1 136 1 
157 1 161 1 166 3 187 1 62 3 119 1 236 1 338 1 64 1 168 1 190 1 170 1 238 1 239 2 93 1 145 1 241 1 218 1 125 2 49 1 220 1 246 1 247 1 222 1 79 1 134 1 276 1 330 1 136 1 355 1 
157 1 161 1 166 2 187 1 62 2 236 1 64 1 168 1 190 1 170 1 238 1 239 2 93 1 145 1 218 1 125 2 49 1 220 1 247 1 222 1 79 1 134 1 276 1 355 1 136 1 
43 1 161 2 5 2 287 1 166 1 187 1 62 1 119 1 313 1 168 1 64 2 170 1 345 1 145 2 369 1 371 1 242 1 173 1 29 2 49 1 246 1 33 1 37 1 204 1 79 2 155 1 134 2 179 1 274 1 330 1 
157 1 125 2 161 1 49 1 220 1 246 1 247 1 166 1 62 1 187 1 236 1 338 1 168 1 64 1 170 1 238 1 79 1 134 1 171 1 276 1 330 1 241 1 145 1 80 1 136 1 355 1 
202 1 
43 1 83 1 5 2 287 2 187 2 313 1 362 1 168 1 9 1 170 2 366 1 92 1 11 1 148 1 371 1 242 1 149 2 29 2 219 1 49 2 100 1 102 1 33 1 175 2 204 1 133 1 134 2 179 1 108 2 
308 1 22 1 285 1 314 2 189 1 366 1 367 1 144 1 149 2 97 1 98 1 175 3 298 1 17 1 105 1 373 1 76 1 328 1 106 1 379 1 108 3 57 1 
308 1 22 1 285 1 314 3 189 1 366 1 367 1 144 1 12 1 264 1 149 1 97 1 175 3 298 1 17 1 105 1 373 1 76 1 106 1 328 1 226 1 379 1 108 3 57 1 
308 1 22 1 285 1 314 3 65 1 189 1 366 1 367 1 144 1 12 1 264 1 149 2 97 1 98 1 175 3 298 1 17 1 105 1 373 1 76 1 106 1 328 1 226 1 379 1 108 3 57 1 
334 2 307 2 358 2 308 1 22 1 165 1 285 1 186 1 257 1 314 6 9 1 65 4 189 1 366 3 367 1 10 1 292 1 144 1 11 1 197 2 346 2 12 5 264 4 148 1 243 1 149 7 97 1 98 4 219 1 100 1 175 5 298 1 17 1 105 1 373 1 76 1 133 1 328 1 106 1 226 5 379 1 108 5 156 1 57 1 
334 2 285 1 186 1 9 1 144 1 11 1 346 2 197 2 12 1 148 1 149 4 97 1 98 2 100 1 298 1 17 1 105 1 106 1 108 4 57 1 307 2 358 2 308 1 22 1 165 1 118 2 314 4 65 2 366 2 367 1 264 2 219 1 72 1 175 4 76 1 373 1 328 1 133 1 226 2 379 1 
334 2 307 2 358 2 308 1 22 1 165 1 285 1 186 1 314 4 9 1 65 2 366 2 367 1 292 1 10 1 144 1 11 1 12 1 197 2 346 2 264 2 148 1 149 4 243 1 97 1 98 2 219 1 100 1 175 4 298 1 17 1 105 1 373 1 76 1 133 1 106 1 328 1 226 1 379 1 108 4 57 1 
334 2 307 2 358 2 308 1 22 1 165 1 285 1 186 1 314 4 9 1 65 2 366 2 367 1 292 1 10 1 144 1 11 1 12 1 197 2 346 2 264 2 148 1 149 4 243 1 97 1 98 2 219 1 100 1 175 4 298 1 17 1 105 1 373 1 76 1 133 1 106 1 328 1 226 1 379 1 108 4 57 1 
3 2 308 1 22 1 285 1 186 1 118 2 235 1 314 4 90 1 9 1 65 2 366 2 367 1 144 1 11 1 12 1 197 2 346 2 264 2 148 1 149 4 243 1 97 1 98 2 219 1 100 1 269 2 175 4 298 1 17 1 105 1 373 1 76 1 133 1 106 1 328 1 226 1 379 1 108 4 304 1 57 1 
334 2 307 2 358 2 308 1 22 1 165 1 285 1 186 1 257 1 314 5 9 1 65 3 366 2 367 1 10 1 292 1 144 1 11 1 12 1 197 2 346 2 264 3 148 1 243 1 149 5 97 1 98 3 219 1 100 1 175 4 298 1 17 1 105 1 373 1 76 1 133 1 106 1 328 1 226 1 379 1 108 4 57 1 
334 2 307 2 358 2 308 1 22 1 165 1 285 1 186 1 257 1 314 5 9 1 65 3 366 2 367 1 10 1 292 1 144 1 11 1 12 1 197 2 346 2 264 3 148 1 243 1 149 5 97 1 98 3 219 1 100 1 175 4 298 1 17 1 105 1 373 1 76 1 133 1 106 1 328 1 226 1 379 1 108 4 57 1 
3 2 285 1 186 1 9 1 144 1 11 1 346 2 197 2 12 1 148 1 149 4 97 1 98 2 100 1 298 1 17 1 105 1 106 1 108 4 304 1 57 1 308 1 22 1 118 2 314 4 65 2 366 2 367 1 264 2 219 1 269 2 72 1 175 4 76 1 373 1 328 1 133 1 226 1 379 1 
59 1 208 1 163 1 253 1 233 1 114 2 86 1 365 1 26 2 262 1 46 1 68 6 124 1 266 1 245 1 16 1 176 1 52 2 223 2 177 3 178 1 273 1 331 3 229 1 332 1 207 1 
137 1 208 2 138 1 253 2 163 4 185 1 114 2 117 3 337 2 143 1 26 1 193 1 46 1 68 14 266 2 268 2 174 1 16 11 176 2 297 1 52 4 223 1 177 6 53 1 178 2 205 1 275 1 273 2 378 3 228 1 229 11 331 8 207 1 
282 1 58 1 357 1 137 1 208 1 163 1 253 1 5 1 61 1 185 1 287 1 187 1 168 1 212 1 170 1 26 1 193 1 46 1 68 2 198 1 371 1 95 1 266 1 29 1 49 1 320 1 52 2 152 1 177 1 178 1 373 2 328 2 134 1 273 1 302 1 379 1 331 1 380 1 
333 1 282 1 137 1 233 1 5 2 185 1 86 1 287 1 187 3 337 2 143 2 193 1 46 3 95 2 49 3 16 7 52 6 350 2 302 1 352 1 207 3 58 2 59 1 208 3 110 2 253 3 163 7 61 1 114 8 256 1 212 2 168 2 365 1 170 3 26 2 262 1 68 20 371 2 266 3 29 2 268 2 220 1 320 1 176 3 223 4 177 10 373 3 178 3 132 2 328 3 329 2 272 2 273 3 134 2 275 4 379 1 229 7 331 10 332 1 
43 1 137 1 208 1 253 1 5 2 185 1 44 1 287 1 187 2 313 1 168 1 170 2 240 1 46 1 68 2 371 1 242 1 266 1 29 2 49 2 33 1 52 2 128 1 177 1 178 1 204 1 134 2 179 1 273 1 331 1 
208 1 163 1 253 1 61 1 114 1 337 1 258 1 143 1 193 1 46 1 68 3 266 1 268 1 16 1 176 1 52 2 223 1 177 2 178 1 373 1 328 1 302 1 377 1 273 1 379 1 229 1 331 1 40 1 207 1 
266 1 208 1 163 1 245 1 253 1 114 1 16 1 176 1 52 2 337 1 178 1 25 1 275 1 273 1 46 1 229 1 331 2 68 2 
266 1 208 1 163 1 245 1 253 1 114 1 16 1 52 2 223 1 177 2 178 1 143 1 291 1 273 1 46 1 229 1 68 2 207 1 
266 1 208 1 163 2 245 1 253 1 268 1 114 2 16 2 176 1 52 2 223 1 177 2 337 1 178 1 143 1 275 1 273 1 46 1 229 2 331 2 68 4 207 1 
266 1 208 1 163 1 253 1 114 1 16 1 176 1 52 2 128 1 337 1 178 1 25 1 275 1 273 1 46 1 229 1 331 2 68 2 
266 1 208 1 163 1 253 1 114 1 16 1 52 2 128 1 223 1 177 2 178 1 143 1 291 1 273 1 46 1 229 1 68 2 207 1 
266 1 208 1 163 2 253 1 268 1 114 2 16 2 176 1 52 2 128 1 223 1 177 2 337 1 178 1 143 1 275 1 273 1 46 1 229 2 331 2 68 4 207 1 
266 1 208 1 163 2 253 1 268 1 114 2 16 2 176 1 52 2 223 1 177 2 337 1 178 1 143 1 275 1 273 1 46 1 229 2 331 2 68 4 207 1 
58 1 137 1 208 1 253 1 5 1 185 1 287 1 187 1 168 1 212 1 170 1 26 1 46 1 68 2 371 1 95 1 266 1 29 1 49 1 52 2 177 1 373 1 178 1 328 1 329 1 134 1 273 1 331 1 
137 1 208 1 253 1 5 1 185 1 287 1 187 1 168 1 170 1 26 1 192 1 46 1 68 2 371 1 95 1 266 1 29 1 49 1 319 1 270 1 52 2 177 1 373 1 178 1 328 1 134 1 273 1 331 1 
266 1 208 1 163 2 253 1 268 1 114 2 16 2 176 1 52 2 223 1 177 2 337 1 178 1 143 1 275 1 193 1 273 1 46 1 229 2 331 2 68 4 207 1 
58 1 1 1 208 1 163 2 253 1 5 1 114 2 187 1 337 1 168 1 212 1 143 1 170 1 46 1 68 4 371 1 95 1 266 1 29 1 49 1 268 1 16 2 176 1 52 2 223 1 177 2 373 1 178 1 350 1 328 1 329 1 275 1 134 1 273 1 229 2 331 2 207 1 
208 1 253 1 163 1 61 1 114 1 210 1 337 1 258 1 143 1 193 1 46 1 68 3 266 1 268 1 16 1 176 1 52 2 177 1 178 1 373 1 328 1 275 1 302 1 377 1 273 1 379 1 331 2 229 1 207 1 
335 1 82 2 2 1 336 1 233 1 86 1 6 4 139 1 337 4 8 1 143 4 200 1 348 1 52 6 53 1 154 1 55 1 205 3 303 1 207 5 356 1 208 3 59 1 253 3 60 1 114 8 117 3 365 1 120 1 262 1 68 41 266 3 268 4 176 5 177 21 223 4 178 3 275 4 378 4 331 20 332 1 135 1 41 1 
356 1 335 1 82 2 336 1 2 1 59 1 208 4 233 1 253 4 60 1 114 7 86 1 139 1 6 4 117 3 337 4 8 1 365 1 120 1 143 3 262 1 68 38 200 1 266 4 268 4 348 1 176 5 52 8 223 4 177 18 53 1 178 4 154 1 55 2 205 3 275 3 303 1 378 4 331 20 332 1 135 1 41 1 207 4 
356 1 335 1 82 1 336 1 2 1 59 1 208 2 233 1 253 2 60 1 114 14 86 1 6 4 117 4 337 7 8 1 365 1 120 1 143 7 262 1 68 52 200 1 266 2 268 7 174 2 348 1 176 8 52 4 223 7 177 25 53 2 178 2 55 1 205 2 275 7 303 1 378 4 331 27 332 1 135 1 41 1 207 8 
82 1 336 1 208 2 253 2 114 2 139 1 6 1 117 1 337 2 8 1 120 1 143 2 196 1 68 13 200 1 266 2 268 2 176 2 52 4 223 1 177 7 53 1 178 2 205 1 275 1 378 2 331 6 135 1 207 2 
356 1 335 1 82 2 336 1 2 1 208 3 253 3 60 1 114 4 6 4 117 2 337 3 8 1 120 1 143 2 68 26 200 2 266 3 268 3 348 1 176 3 52 6 223 2 177 12 178 3 55 2 205 2 275 2 378 2 303 1 331 14 135 1 207 2 41 1 
372 1 211 1 283 1 290 1 318 1 343 1 103 1 234 1 353 1 23 1 
50 1 123 1 
372 1 211 1 283 1 290 1 318 1 66 1 4 1 51 1 353 1 
0 1 318 1 283 1 231 1 103 1 175 1 73 1 234 1 167 2 211 1 372 1 169 1 63 1 290 1 226 1 343 1 108 1 353 1 
0 1 318 1 283 1 231 1 103 1 175 1 73 1 234 1 167 2 211 1 372 1 169 1 63 1 290 1 226 1 343 1 108 1 353 1 
0 1 318 1 283 1 231 1 103 1 175 1 73 1 234 1 167 2 211 1 372 1 169 1 63 1 290 1 226 1 343 1 108 1 353 1 
360 1 104 1 116 1 
360 1 104 1 116 1 
159 1 199 1 
159 1 116 1 199 1 
54 1 47 1 
0 1 280 1 283 1 61 2 167 1 211 1 290 1 26 1 47 1 69 1 123 1 318 1 32 1 71 1 294 1 50 1 175 1 73 1 373 2 372 1 54 1 328 2 38 1 302 2 108 1 379 2 353 1 
360 1 104 1 
159 1 116 1 199 1 
137 1 208 1 253 1 359 1 5 1 185 1 44 2 310 1 187 2 168 1 170 2 193 1 240 1 46 1 68 2 266 1 29 1 28 1 49 2 52 2 177 1 373 2 178 1 328 2 249 1 134 1 273 1 379 2 39 1 331 1 278 1 
157 1 1 1 125 2 49 2 220 1 184 1 187 2 75 1 236 1 168 1 170 2 238 1 79 1 134 1 276 1 241 1 136 1 265 1 355 1 
157 1 125 2 49 1 220 1 187 1 236 1 18 1 168 1 170 1 238 1 79 1 134 1 276 1 241 1 136 1 265 1 355 1 
43 1 5 2 287 1 187 1 313 1 168 1 170 1 369 1 173 1 242 1 371 1 29 2 49 1 33 1 299 1 75 1 204 1 79 1 179 1 134 2 
157 1 125 2 49 1 220 1 184 1 187 1 75 1 236 1 168 1 170 1 238 1 79 1 134 1 276 1 241 1 136 1 265 1 355 1 
296 1 
300 1 226 1 11 1 12 1 248 1 148 1 124 1 
334 1 307 1 358 1 165 1 118 1 9 1 366 1 11 1 12 1 148 1 149 1 219 1 100 1 175 1 133 1 226 2 108 1 
183 1 334 6 1 1 83 1 5 10 287 1 187 3 87 2 337 2 45 1 9 4 188 1 143 2 341 2 92 2 11 9 12 2 148 8 149 5 347 2 100 4 49 3 248 1 300 1 107 2 108 5 109 6 57 2 306 2 207 2 110 2 112 1 162 2 164 2 118 12 168 3 170 3 366 3 216 3 371 3 217 6 29 3 219 4 268 2 34 2 175 5 176 2 35 2 326 2 133 4 78 1 226 8 180 1 134 4 
356 1 334 3 2 1 83 1 162 1 60 1 118 6 117 1 337 2 9 2 366 1 143 2 92 1 11 8 12 2 148 5 149 1 217 5 219 2 100 2 268 2 175 1 176 2 225 1 133 2 107 2 205 1 226 5 378 1 303 1 108 1 109 5 182 1 41 1 207 2 
162 1 61 1 22 1 85 1 86 1 258 1 9 1 365 1 340 1 262 1 10 1 293 1 11 2 148 2 48 1 219 1 100 1 175 1 176 2 74 1 373 1 328 1 133 1 107 2 302 1 108 1 379 1 207 1 
219 1 100 1 248 1 300 1 9 1 133 1 226 1 11 1 12 1 148 1 
334 5 217 5 110 1 162 1 268 2 176 2 118 10 337 2 107 2 143 2 226 5 109 5 11 5 207 2 148 5 
149 1 366 1 226 1 108 1 175 1 12 1 
183 1 43 1 83 1 5 2 287 2 187 2 313 1 362 1 168 1 9 1 170 2 366 1 92 1 11 1 148 1 371 1 242 1 149 2 29 2 219 1 100 1 49 2 102 1 33 1 175 1 204 1 133 1 134 2 179 1 108 1 
137 1 58 1 208 1 253 1 5 1 61 2 287 1 187 1 258 2 212 1 168 1 170 1 26 1 46 1 68 1 371 1 266 1 95 1 48 1 29 1 30 1 49 1 52 2 177 1 178 1 373 3 328 3 329 1 302 2 134 1 273 1 379 2 
334 2 217 2 219 1 233 1 100 1 83 1 118 4 9 1 133 1 92 1 226 4 109 2 11 1 12 2 148 2 
96 1 283 1 353 1 
21 1 54 1 283 1 343 1 353 1 
96 1 283 1 353 1 
96 1 283 1 353 1 
283 1 353 1 370 1 
283 1 353 1 370 1 
283 1 353 1 370 1 
283 1 353 1 
372 1 290 1 
208 1 59 1 233 1 253 1 60 1 114 2 86 1 117 1 365 1 262 1 68 8 266 1 176 1 52 2 177 4 223 2 178 1 205 1 378 1 331 4 332 1 135 1 207 1 
59 1 208 2 233 1 253 2 60 1 114 3 86 1 117 1 337 1 365 1 262 1 68 11 146 1 266 2 268 1 176 2 52 4 223 2 177 5 53 1 178 2 205 1 275 1 378 2 331 6 332 1 135 1 207 1 
356 1 2 1 59 1 208 3 233 1 253 3 60 1 114 4 86 1 117 1 337 2 365 1 143 2 262 1 68 19 146 1 266 3 268 2 176 3 52 6 177 10 223 3 178 3 55 1 205 1 275 1 378 1 303 1 331 9 332 1 135 1 41 1 207 3 
356 1 2 1 59 1 208 3 233 1 253 3 60 1 114 5 86 1 117 1 337 2 365 1 143 1 262 1 68 17 146 1 266 3 268 2 176 3 52 6 177 7 223 3 178 3 55 1 205 1 275 2 378 1 303 1 331 10 332 1 135 1 41 1 207 2 
208 1 59 1 233 1 253 1 60 1 114 2 86 1 117 1 365 1 262 1 68 8 266 1 176 1 52 2 177 4 223 2 178 1 205 1 378 1 331 4 332 1 135 1 207 1 
356 1 2 1 208 1 253 1 60 1 114 2 117 1 337 2 143 2 68 12 266 1 268 2 176 2 52 2 177 6 223 1 178 1 205 1 275 1 378 1 303 1 331 6 135 1 41 1 207 2 
356 1 2 1 59 1 208 4 233 1 253 4 60 1 114 5 86 1 117 1 337 2 365 1 143 1 262 1 68 18 146 1 266 4 268 2 176 3 52 8 177 8 223 3 178 4 55 2 205 1 275 2 378 1 303 1 331 10 332 1 135 1 41 1 207 2 
356 1 2 1 208 4 253 4 60 1 114 6 139 1 117 1 337 3 143 2 68 16 266 4 268 3 176 3 52 8 177 7 223 3 178 4 55 2 205 1 275 3 378 1 303 1 331 9 135 1 41 1 207 2 
59 1 114 6 86 3 176 1 177 4 223 3 365 3 262 1 275 3 331 3 68 7 332 2 207 1 
356 1 2 1 59 1 208 4 233 1 253 4 60 1 114 4 86 1 139 1 117 1 337 2 365 1 143 1 262 1 68 18 266 4 268 2 176 3 52 8 177 8 223 3 178 4 55 2 205 1 275 1 378 1 303 1 331 10 332 1 135 1 41 1 207 2 
266 2 208 2 59 1 233 1 253 2 114 3 86 1 176 1 52 4 177 4 223 2 178 2 365 1 55 1 262 1 275 1 331 4 68 8 332 1 207 1 
59 1 233 1 114 2 86 1 176 1 177 3 223 2 365 1 262 1 331 3 68 6 332 1 207 1 124 1 
266 1 208 1 253 1 268 1 114 2 176 1 52 2 223 1 177 2 337 1 178 1 143 1 275 1 331 2 68 4 207 1 146 1 
268 1 114 2 176 1 117 1 223 1 177 4 337 1 53 1 143 1 205 1 275 1 378 2 331 3 68 7 207 1 
59 1 208 2 233 1 253 2 114 9 86 2 117 2 337 2 365 2 143 2 262 1 68 23 266 2 268 2 174 1 176 3 297 1 52 4 177 12 223 5 53 1 178 2 55 2 250 1 275 4 378 2 331 11 332 1 207 3 
378 1 68 1 177 1 
331 1 68 1 117 1 
266 1 208 1 110 1 253 1 268 1 114 3 176 1 52 2 177 3 337 1 223 2 178 1 143 1 275 1 331 3 68 6 146 1 207 1 
356 1 2 1 208 1 253 1 60 1 114 2 117 1 337 2 143 2 68 12 266 1 268 2 176 2 52 2 177 6 223 1 178 1 205 1 275 1 378 1 303 1 331 6 135 1 41 1 207 2 
114 2 86 1 176 1 177 3 223 1 365 1 262 1 275 1 331 3 68 6 207 1 
266 1 208 1 59 1 253 1 114 2 86 1 52 2 223 1 177 2 178 1 365 1 250 1 55 1 275 1 331 1 68 3 332 1 
266 1 208 1 253 1 114 5 86 2 176 2 52 2 223 3 177 5 178 1 365 2 340 1 262 1 275 2 331 5 68 10 135 1 207 2 
266 1 208 1 253 1 114 1 176 1 52 2 337 1 178 1 275 1 331 2 68 2 135 1 
266 1 208 1 253 1 268 1 114 2 176 1 52 2 223 1 177 2 337 1 178 1 143 1 275 1 331 2 68 4 135 1 207 1 
266 3 208 3 253 3 114 2 86 1 139 1 52 6 177 2 223 1 178 3 365 1 55 1 250 1 275 1 331 1 68 3 135 1 
59 1 208 5 233 1 253 5 114 12 86 3 139 1 117 3 337 3 365 3 143 3 262 2 368 1 214 1 68 34 146 1 266 5 268 3 176 5 52 10 177 18 223 7 53 1 178 5 77 1 250 1 55 2 205 1 275 5 378 4 331 16 332 1 135 1 207 5 
373 1 328 1 351 1 26 1 308 1 379 1 311 1 
201 1 209 1 308 1 289 1 311 1 131 1 315 1 373 1 351 1 328 1 26 1 379 1 
29 1 170 1 49 1 5 1 33 1 287 1 187 1 313 1 124 1 
371 1 95 1 282 1 29 1 58 1 49 1 5 1 61 1 287 1 187 1 373 2 168 1 328 2 170 1 26 1 134 1 302 1 379 1 
282 1 58 1 112 1 5 3 61 2 22 1 187 1 87 1 168 1 170 1 26 1 367 1 341 1 371 2 95 1 29 2 49 1 17 1 373 2 328 2 302 1 134 1 379 2 
282 1 112 1 5 3 84 1 61 2 22 1 187 2 87 1 168 1 170 2 26 1 367 1 341 1 371 2 95 1 29 2 49 2 319 1 17 1 373 2 328 2 302 1 134 1 379 2 
371 1 149 1 347 1 29 1 112 1 49 3 5 4 84 1 287 1 175 2 187 3 87 1 168 1 191 1 170 3 341 1 226 1 134 1 108 2 57 1 12 1 122 1 216 1 
371 1 149 1 347 1 29 1 112 1 49 3 5 4 84 1 287 1 175 2 187 3 87 1 35 1 168 1 170 3 341 1 226 1 134 1 108 2 57 1 12 1 216 1 
168 1 170 1 49 1 134 1 187 1 263 1 
371 1 317 1 43 1 1 1 29 2 203 1 49 7 220 1 255 1 5 3 44 1 310 1 287 2 187 6 204 1 188 1 168 2 24 1 170 7 134 3 263 1 
282 1 1 1 233 1 5 1 86 1 187 1 193 1 46 2 95 1 49 1 16 1 52 4 350 1 302 1 207 1 58 1 208 2 59 1 163 1 253 2 61 1 114 2 212 1 168 1 365 1 170 1 26 2 262 1 68 6 371 1 266 2 29 1 176 1 223 2 177 3 132 1 373 2 178 2 328 2 329 1 273 2 134 1 379 1 331 3 229 1 332 1 278 1 
183 1 5 2 287 1 164 1 187 1 9 2 170 1 366 1 11 1 12 1 148 1 216 1 149 2 347 1 219 2 49 1 100 2 175 3 35 1 248 1 326 1 300 1 133 2 38 1 226 1 108 3 57 1 306 1 
371 1 347 1 1 1 29 1 49 2 5 2 187 2 45 1 188 1 168 1 170 2 134 2 263 1 
371 1 242 1 43 1 1 1 29 2 49 2 5 2 33 1 287 1 187 2 313 1 204 1 168 1 170 2 134 2 179 1 
242 1 371 1 43 1 29 1 112 1 49 2 5 1 187 2 256 1 204 1 168 1 170 2 179 1 134 2 
168 1 125 1 170 1 238 1 49 1 134 1 276 1 287 1 187 1 355 1 
1 1 29 1 49 2 220 1 5 1 310 1 187 2 168 1 170 2 134 1 39 1 
43 1 1 1 255 1 5 4 310 1 287 1 187 2 313 1 168 2 24 1 170 3 242 1 371 1 29 3 49 3 33 1 204 1 134 3 179 1 
43 1 1 1 255 1 5 4 310 1 287 1 187 2 313 1 168 2 170 3 261 1 242 1 371 1 29 3 49 3 33 1 204 1 134 3 179 1 
371 1 95 1 282 1 29 1 49 1 319 1 5 1 61 1 287 1 187 1 373 2 168 1 328 2 170 1 26 1 134 1 302 1 379 1 
371 1 43 1 29 1 203 1 112 1 49 1 5 1 187 1 204 1 188 1 168 1 170 1 134 2 
252 1 142 1 26 1 361 1 153 1 
252 1 22 1 175 2 271 1 361 2 17 1 153 2 130 1 363 1 106 1 142 2 26 1 367 1 38 1 226 1 108 2 57 1 12 1 70 1 
252 1 28 1 359 1 361 1 153 1 373 1 249 1 328 1 379 1 
363 1 252 1 70 1 
190 1 93 1 222 1 124 1 
190 1 246 1 93 1 330 1 166 1 62 1 222 1 
64 1 161 1 62 1 
111 1 246 1 113 2 166 3 62 3 222 1 190 1 93 1 330 1 251 1 80 1 147 1 
190 1 237 1 246 1 239 1 93 1 330 1 166 2 62 2 222 1 
157 1 125 1 31 1 246 1 276 1 309 1 93 1 330 1 166 1 62 1 80 1 
190 1 246 1 93 1 330 1 166 1 62 1 80 1 
190 2 246 1 330 1 166 1 62 1 222 1 80 1 
126 1 246 2 166 2 62 2 190 1 67 1 344 1 93 1 330 2 80 1 
246 1 309 1 221 1 166 3 62 3 222 1 190 1 376 1 239 2 330 1 93 2 80 1 94 1 
157 1 125 2 246 1 166 2 286 1 62 2 222 1 190 1 238 1 276 1 239 1 93 1 330 1 80 1 136 1 
246 2 309 1 221 1 166 4 62 4 222 1 364 1 190 1 237 1 239 2 330 2 93 2 80 1 
190 1 246 1 93 1 330 1 166 1 62 1 222 1 80 1 
246 1 113 1 309 1 221 1 166 4 62 4 222 2 190 2 181 1 239 2 251 1 330 1 93 3 147 1 
281 1 158 1 246 1 166 2 62 2 222 1 140 1 190 1 239 1 93 1 330 1 80 1 
246 1 113 2 166 3 62 3 151 1 222 1 190 1 93 1 330 1 251 2 80 1 147 1 
91 1 93 2 322 1 323 2 
246 1 330 1 166 1 62 1 88 1 80 1 
190 1 246 1 239 1 93 1 330 1 166 2 62 2 222 1 80 1 94 1 
20 1 
190 1 246 1 93 1 330 1 166 1 62 1 222 1 80 1 
246 1 113 1 166 3 62 3 222 1 190 1 239 1 330 1 93 1 80 1 94 1 
181 1 309 1 93 1 221 1 
190 1 93 1 

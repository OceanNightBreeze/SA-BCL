#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 83 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 271 84 20 356 38 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 271 84 20 356 38 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 271 84 20 356 38 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 271 84 20 356 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 83 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 1 364 2 336 1 128 2 52 1 178 1 109 1 285 4 343 2 10 2 346 2 135 1 156 1 209 1 318 1 158 2 31 1 12 1 186 1 139 1 88 3 376 2 214 1 354 3 323 7 237 7 191 1 359 1 
45 1 364 2 336 1 128 2 52 1 178 1 109 1 285 4 343 2 10 2 346 2 135 1 156 1 209 1 318 1 158 2 31 1 12 1 186 1 139 1 88 3 376 2 214 1 354 3 323 7 237 7 191 1 359 1 
45 1 364 2 336 1 128 2 52 1 178 1 109 1 285 4 343 2 10 2 346 2 135 1 156 1 209 1 318 1 158 2 31 1 12 1 186 1 139 1 88 3 376 2 214 1 354 3 323 7 237 7 191 1 359 1 
45 1 364 2 336 1 128 2 52 1 178 1 109 1 285 4 343 2 10 2 346 2 135 1 156 1 209 1 318 1 158 2 31 1 12 1 186 1 139 1 88 3 376 2 214 1 354 4 323 7 237 7 191 1 
45 1 10 1 346 1 209 1 158 1 364 1 12 1 88 1 128 1 354 1 237 2 323 2 52 1 178 1 191 1 285 1 359 1 
10 1 346 1 362 1 156 1 209 1 158 1 364 1 125 1 186 1 354 1 237 2 323 2 52 1 178 1 246 1 343 1 
10 2 346 2 209 1 31 1 88 1 376 1 354 2 237 3 323 3 52 1 178 1 285 1 343 1 
45 1 0 1 364 1 128 1 52 1 178 1 109 1 285 5 343 1 10 2 346 2 61 1 135 1 209 1 31 1 158 1 12 1 88 3 376 2 354 3 323 7 237 7 191 1 359 1 
45 1 0 1 364 1 128 1 52 1 178 1 109 1 285 5 343 1 10 2 346 2 61 1 135 1 209 1 31 1 158 1 12 1 88 3 376 2 354 3 323 7 237 7 191 1 359 1 
83 1 319 1 286 1 
213 2 163 1 286 1 
288 2 75 1 78 2 339 2 53 2 372 2 328 2 321 1 
169 2 168 1 15 1 145 1 127 1 75 1 78 2 4 1 258 2 339 3 53 2 79 1 340 1 259 1 6 2 288 2 155 1 248 1 267 1 137 1 372 3 349 1 293 1 321 1 373 1 87 1 322 1 35 1 352 1 13 1 162 2 67 2 39 1 92 1 95 1 328 2 329 1 
288 1 74 1 78 1 251 1 17 1 339 1 53 1 372 1 328 1 321 1 
17 1 319 1 170 1 372 1 234 1 19 1 138 1 114 1 53 1 339 1 151 1 40 1 41 1 286 1 
288 1 17 1 319 1 170 2 234 2 372 1 19 1 138 1 78 1 53 1 339 1 151 1 40 1 328 1 286 1 
133 1 170 1 234 1 113 1 255 1 
164 1 91 1 319 1 170 2 234 2 286 1 113 1 255 1 
170 1 234 1 113 1 
288 1 251 1 17 1 170 1 234 1 372 1 255 1 321 1 74 1 189 1 78 1 53 1 339 1 328 1 
286 1 
353 1 164 1 319 1 170 2 234 2 286 1 113 1 255 1 
274 1 182 2 313 2 11 1 319 1 200 1 170 5 234 5 249 1 255 2 305 1 113 2 294 1 365 1 66 1 164 1 132 2 286 1 57 1 
75 1 83 1 
288 1 372 2 75 2 89 1 78 1 53 2 339 2 328 1 380 1 
225 1 105 1 283 1 
168 1 372 1 145 1 349 1 172 1 87 1 127 1 75 1 162 1 67 1 4 1 258 1 39 1 339 1 79 1 340 1 
288 1 168 1 198 1 372 2 349 1 145 1 127 1 87 1 162 1 105 1 67 1 4 1 258 1 39 1 117 1 79 1 53 1 339 2 340 1 328 1 
288 3 75 1 78 1 198 1 339 3 53 3 372 3 328 3 
288 1 251 1 17 1 339 1 53 1 372 1 328 1 
288 1 89 1 78 1 17 1 339 1 53 1 372 1 328 1 380 1 
169 2 168 1 222 1 198 1 17 1 170 1 19 1 145 1 127 1 75 1 78 2 4 1 258 1 79 1 339 4 53 3 340 1 151 1 259 1 6 1 263 1 288 3 155 1 248 1 267 1 137 1 372 4 234 1 349 1 293 1 321 1 87 1 138 1 322 1 352 1 13 1 162 1 89 1 67 1 39 1 117 1 40 1 328 3 329 1 
166 1 288 1 75 1 198 1 339 2 53 2 41 1 372 2 328 1 
288 3 198 2 222 1 17 1 170 1 234 1 372 3 19 1 138 1 89 1 78 1 324 1 117 1 53 3 339 3 40 1 151 1 328 3 286 1 
288 2 198 1 372 2 89 1 225 1 78 1 105 1 53 2 339 2 328 2 
168 1 372 1 145 1 349 1 87 1 127 1 75 1 162 1 67 1 258 1 39 1 4 1 339 1 79 1 340 1 
168 1 372 1 145 1 126 1 87 1 127 1 75 1 162 1 67 1 367 1 258 1 4 1 339 1 79 1 340 1 
98 1 169 2 48 1 254 1 281 1 105 2 225 2 228 1 5 1 283 2 259 1 284 1 6 4 155 1 248 1 267 1 62 1 293 1 322 2 211 1 374 1 13 1 92 2 143 1 
288 1 175 1 17 1 339 1 53 1 372 1 19 1 328 1 
166 1 288 4 198 2 372 5 75 1 89 1 78 1 117 1 53 5 339 5 227 1 309 1 41 1 328 4 
288 2 175 1 251 1 17 1 339 2 53 2 372 2 328 2 
116 1 34 1 
116 1 34 1 
107 1 334 1 
107 1 334 1 
107 1 334 1 
176 1 116 1 34 1 
270 1 116 1 34 1 
240 1 116 2 231 1 107 1 334 1 34 2 
176 1 116 1 34 1 
176 1 116 1 34 1 
206 1 116 1 34 1 
206 1 116 1 34 1 
206 1 116 1 34 1 
111 1 240 1 207 1 345 1 332 2 348 1 301 2 170 2 234 2 34 2 50 2 188 2 306 1 140 1 116 2 190 2 217 3 286 1 142 1 
239 1 275 1 332 1 301 1 170 1 223 1 50 1 75 1 53 2 339 2 108 1 288 2 111 1 205 1 230 1 234 1 372 2 34 1 190 1 116 1 270 1 217 1 377 1 328 2 
128 1 158 1 364 1 
158 1 364 1 125 1 
128 2 46 1 307 1 364 3 219 1 125 1 
128 1 361 1 46 1 364 2 219 1 125 1 
128 1 46 2 364 2 219 1 125 1 
239 1 70 1 242 1 170 5 363 1 48 1 254 1 255 4 223 1 365 1 51 2 132 1 286 2 57 3 154 2 182 1 205 1 313 1 26 1 62 1 233 1 319 1 234 5 113 1 213 3 66 2 37 1 215 1 163 1 164 1 379 2 143 1 
300 1 251 1 242 1 17 1 170 5 363 1 254 1 255 4 223 1 243 1 365 1 74 1 78 1 132 1 339 1 53 1 286 1 57 1 154 1 288 1 182 1 313 1 133 2 233 1 319 1 234 5 372 1 113 3 321 1 213 1 66 2 189 1 37 1 164 1 328 1 379 1 143 1 358 2 
70 1 274 1 242 1 170 3 363 1 48 1 255 2 254 1 223 1 51 1 132 1 286 3 57 3 154 2 182 1 26 1 313 1 62 1 319 1 234 3 66 2 213 4 37 1 163 2 379 2 143 1 
274 1 70 1 242 1 170 4 363 1 48 2 255 3 254 2 223 2 173 1 51 2 132 1 286 4 153 1 57 5 154 4 182 1 313 1 26 1 27 1 62 2 319 1 234 4 213 7 66 4 37 2 163 3 379 4 143 2 
83 1 4 1 245 1 
180 1 4 1 
124 1 
168 1 4 1 
9 1 168 1 366 1 4 3 245 2 127 1 
168 1 4 1 127 1 
36 1 4 1 
101 1 278 1 257 1 284 2 204 1 6 9 370 1 208 1 62 2 322 4 374 3 375 1 90 1 325 1 92 5 327 1 14 1 143 2 
101 1 278 1 257 1 284 2 204 1 6 9 370 1 208 1 62 2 322 4 374 4 375 1 90 1 325 2 92 5 327 1 14 1 143 2 
101 1 278 1 257 1 284 2 204 1 6 9 247 1 370 1 208 1 62 2 322 4 374 3 375 1 90 1 325 1 92 5 327 1 14 1 143 2 
101 1 169 2 197 1 278 2 48 3 254 3 337 1 257 1 150 1 284 5 204 2 6 33 110 1 370 1 155 1 248 1 267 1 208 1 84 1 62 5 322 16 210 1 374 11 375 1 13 1 90 2 37 3 325 6 92 17 327 2 14 2 250 1 357 3 271 4 143 5 
101 1 169 4 16 1 278 1 337 1 257 1 284 3 204 1 6 11 155 2 370 1 248 2 267 2 62 2 322 5 374 5 375 1 13 2 90 1 325 2 92 6 327 1 14 1 97 1 143 2 
252 1 123 1 364 2 125 1 128 1 148 1 258 1 52 1 307 1 178 1 340 1 368 1 285 1 343 1 80 1 25 1 10 1 346 1 134 1 136 1 209 1 158 1 235 1 87 1 162 1 354 1 67 1 323 2 237 2 326 1 
252 1 2 1 123 1 364 2 125 1 128 1 148 1 258 1 52 1 307 1 202 1 340 1 368 1 285 2 343 1 80 1 25 1 10 1 346 1 209 1 268 1 158 1 235 1 87 1 162 1 354 1 67 1 323 3 237 3 326 1 
252 1 2 1 364 2 125 1 128 1 148 1 258 1 52 1 307 1 340 1 368 1 285 2 343 1 80 1 25 1 209 1 268 1 158 1 235 1 87 1 162 1 354 1 67 1 323 2 237 2 
80 2 194 1 10 1 168 1 221 1 291 1 346 1 315 1 122 1 252 2 145 1 87 1 224 1 162 1 148 2 67 1 4 1 237 1 323 1 258 1 340 1 202 1 343 2 
252 1 123 1 364 2 125 1 128 1 148 1 258 1 307 1 178 1 340 1 368 1 343 1 80 1 25 1 10 1 346 1 136 1 268 1 158 1 235 1 87 1 162 1 67 1 323 1 237 1 326 1 
42 1 
100 2 242 1 145 2 104 2 4 1 106 1 53 1 339 1 340 1 151 1 54 2 286 2 57 2 58 2 60 1 64 2 113 6 114 1 162 2 212 1 213 2 66 2 67 2 163 2 164 3 355 4 220 1 167 2 168 1 221 1 120 1 122 1 17 1 303 1 170 5 18 1 19 1 365 1 22 2 23 1 258 2 132 1 261 1 182 1 313 1 319 1 234 5 372 1 87 1 138 1 94 1 40 1 41 1 378 1 193 1 
60 1 120 1 17 1 170 3 18 1 234 3 372 1 19 1 113 2 138 1 114 1 212 1 353 1 164 1 53 1 339 1 40 1 151 1 94 1 54 1 355 2 41 1 
167 1 120 1 17 1 18 1 170 3 19 1 339 1 53 1 151 1 286 1 60 1 319 1 372 1 234 3 113 1 138 1 114 1 212 1 353 1 164 1 94 1 40 1 41 1 355 3 
167 1 120 1 17 1 18 1 170 3 19 1 339 1 53 1 151 1 54 1 286 1 60 1 319 1 372 1 234 3 64 1 113 2 138 1 114 1 212 1 353 1 164 1 94 1 40 1 41 1 355 3 
100 2 49 1 104 2 244 1 339 1 53 1 151 1 54 4 286 5 57 1 58 2 59 1 60 1 64 4 113 7 114 1 212 1 66 1 353 1 163 2 164 3 355 6 167 4 120 1 17 1 170 5 18 1 171 1 19 1 365 1 22 2 132 1 261 1 182 1 313 1 319 5 372 1 234 5 320 1 138 1 40 1 94 1 41 1 378 1 
100 2 104 2 339 1 53 1 106 1 151 1 54 2 286 2 57 1 58 2 60 1 64 2 113 4 114 1 212 1 66 1 213 2 163 2 164 2 355 4 167 2 120 1 17 1 170 4 18 1 19 1 365 1 22 2 132 1 261 1 182 1 313 1 319 1 372 1 234 4 138 1 40 1 94 1 41 1 378 1 
167 2 100 2 120 1 17 1 18 1 170 4 171 1 19 1 49 1 365 1 104 2 22 2 339 1 53 1 132 1 151 1 54 2 286 1 57 1 261 1 58 2 59 1 182 1 313 1 60 1 319 1 64 2 372 1 234 4 113 4 138 1 114 1 212 1 66 1 163 2 164 2 94 1 40 1 41 1 355 4 378 1 
167 2 100 2 120 1 17 1 18 1 170 4 171 1 19 1 49 1 365 1 104 2 22 2 339 1 53 1 132 1 151 1 54 2 286 1 57 1 261 1 58 2 59 1 182 1 313 1 60 1 319 1 64 2 372 1 234 4 113 4 138 1 114 1 212 1 66 1 163 2 164 2 94 1 40 1 41 1 355 4 378 1 
167 2 120 1 47 1 17 1 18 1 170 4 171 1 19 1 365 1 22 2 339 1 53 1 132 1 151 1 54 2 310 2 286 1 179 2 57 1 58 2 182 1 313 1 60 1 319 1 64 2 372 1 234 4 85 1 113 4 138 1 187 1 114 1 212 1 213 2 66 1 164 2 94 1 40 1 41 1 355 4 378 1 
100 2 167 3 120 1 17 1 18 1 170 4 171 1 19 1 49 1 365 1 104 2 22 2 132 1 339 1 53 1 151 1 54 3 286 1 57 1 261 1 58 2 59 1 182 1 313 1 60 1 319 1 372 1 234 4 64 3 320 1 113 5 138 1 114 1 212 1 66 1 163 2 164 2 94 1 40 1 41 1 355 5 378 1 
100 2 167 3 120 1 17 1 18 1 170 4 171 1 19 1 49 1 365 1 104 2 22 2 132 1 339 1 53 1 151 1 54 3 286 1 57 1 261 1 58 2 59 1 182 1 313 1 60 1 319 1 372 1 234 4 64 3 320 1 113 5 138 1 114 1 212 1 66 1 163 2 164 2 94 1 40 1 41 1 355 5 378 1 
339 1 53 1 106 1 151 1 54 2 286 1 57 1 58 2 60 1 64 2 113 4 114 1 212 1 66 1 213 2 164 2 355 4 167 2 120 1 17 1 170 4 18 1 19 1 365 1 22 2 132 1 310 2 179 2 182 1 313 1 319 1 372 1 234 4 138 1 187 1 40 1 94 1 41 1 378 1 
101 1 13 1 370 1 155 1 248 1 169 2 267 1 83 1 228 1 259 1 293 1 
273 1 169 4 197 1 199 1 1 1 48 1 254 2 75 1 105 11 225 4 283 11 284 1 259 1 287 1 344 1 6 14 155 2 248 2 267 2 84 1 62 1 293 2 322 6 374 2 13 2 37 2 325 1 92 8 95 1 357 3 329 1 271 3 143 2 
272 1 168 1 169 2 198 1 199 1 304 1 145 1 172 1 127 1 75 1 225 1 4 1 258 1 79 1 339 2 53 1 340 1 259 1 203 1 6 2 288 1 155 1 267 1 248 1 372 2 349 1 293 1 87 1 322 1 162 1 13 1 67 1 39 1 117 1 92 1 95 1 328 1 329 1 
101 1 99 1 198 1 199 1 145 1 48 2 201 2 105 6 4 2 149 2 53 1 339 3 340 2 283 6 284 4 6 22 288 1 155 3 248 3 62 4 349 2 293 3 160 1 161 1 352 2 162 1 13 3 67 1 117 1 14 1 169 6 168 2 17 1 254 2 127 2 75 1 225 6 257 1 258 1 177 2 79 2 308 2 259 3 370 1 267 3 372 3 87 2 322 11 374 5 375 1 37 2 39 2 325 1 92 11 327 1 95 1 328 1 329 1 143 4 
169 4 15 2 221 1 168 2 198 1 122 1 145 2 73 1 129 1 4 3 258 8 339 1 53 1 340 2 228 1 259 2 6 2 288 1 183 1 155 2 248 2 267 2 134 1 268 1 372 1 350 1 293 2 87 2 322 1 162 7 13 2 67 8 69 1 115 1 92 1 296 1 95 1 328 1 329 1 
169 2 199 1 48 1 254 1 225 1 105 1 78 1 53 1 339 1 283 1 284 1 259 1 312 1 6 3 288 1 155 1 248 1 267 1 62 1 372 1 293 1 322 2 374 1 13 1 89 1 37 1 92 1 328 1 143 1 
6 2 155 1 267 1 169 2 248 1 293 1 254 1 374 1 13 1 281 1 225 1 105 1 325 1 92 2 228 1 283 1 259 1 143 1 
6 2 155 1 267 1 169 2 248 1 62 1 48 1 293 1 322 2 374 1 211 1 13 1 225 1 105 1 228 1 283 1 284 1 259 1 
169 2 48 1 254 1 105 2 225 2 228 1 283 2 259 1 284 1 6 4 155 1 248 1 267 1 62 1 293 1 322 2 374 2 13 1 37 1 325 1 92 2 143 1 
6 2 155 1 267 1 169 2 248 1 350 1 293 1 254 1 374 1 13 1 281 1 225 1 105 1 325 1 92 2 283 1 259 1 143 1 
6 2 155 1 267 1 169 2 248 1 62 1 350 1 48 1 293 1 322 2 374 1 211 1 13 1 225 1 105 1 283 1 284 1 259 1 
169 2 48 1 254 1 105 2 225 2 283 2 259 1 284 1 6 4 155 1 248 1 267 1 62 1 350 1 293 1 322 2 374 2 13 1 37 1 325 1 92 2 143 1 
169 2 48 1 254 1 105 2 225 2 283 2 259 1 284 1 6 4 155 1 248 1 267 1 62 1 293 1 322 2 374 2 13 1 37 1 325 1 92 2 143 1 
168 1 169 2 145 1 127 1 75 1 258 1 4 1 79 1 339 1 340 1 259 1 6 2 155 1 267 1 248 1 372 1 349 1 293 1 87 1 322 1 352 1 162 1 13 1 67 1 39 1 92 1 95 1 329 1 
168 1 169 2 145 1 127 1 126 1 75 1 367 1 258 1 4 1 79 1 339 1 340 1 259 1 6 2 264 1 155 1 267 1 248 1 372 1 293 1 87 1 322 1 162 1 13 1 67 1 92 1 95 1 329 1 
169 2 199 1 48 1 254 1 105 2 225 2 283 2 259 1 284 1 6 4 155 1 248 1 267 1 62 1 293 1 322 2 374 2 13 1 37 1 325 1 92 2 143 1 
168 1 169 2 48 1 254 1 127 1 201 1 225 2 105 2 258 1 4 1 79 1 339 1 340 1 283 2 284 1 259 1 6 4 155 1 267 1 248 1 62 1 134 1 372 1 349 1 293 1 87 1 322 2 374 2 352 1 162 1 13 1 67 1 37 1 39 1 325 1 92 2 143 1 
169 2 199 1 48 1 254 1 78 1 105 1 225 1 53 1 339 1 283 1 259 1 6 3 288 1 181 1 155 1 248 1 267 1 62 1 372 1 293 1 322 1 374 1 13 1 89 1 37 1 325 1 92 2 328 1 143 1 
169 4 197 1 333 1 48 2 254 2 20 1 174 1 284 1 6 18 229 1 155 2 314 1 112 1 371 2 248 2 267 2 316 2 84 3 62 2 322 10 374 3 13 2 38 1 37 2 325 2 92 8 356 1 357 2 97 1 271 4 143 2 
169 4 197 1 333 1 48 2 254 2 20 1 174 1 284 2 6 18 229 1 155 2 314 1 112 1 371 2 248 2 267 2 316 2 84 3 62 2 322 10 374 4 13 2 38 1 37 2 325 2 92 8 356 1 357 2 97 1 271 4 143 2 
273 1 101 1 169 2 197 1 48 2 254 2 20 1 174 1 284 2 6 15 370 1 155 1 371 1 248 1 267 1 316 1 84 2 62 2 322 8 374 4 13 1 38 1 37 2 325 2 92 7 356 1 357 2 97 1 271 3 143 2 
169 4 197 1 48 3 254 3 146 1 174 1 284 3 6 19 229 1 155 2 314 2 112 1 371 1 248 2 267 2 316 2 84 1 62 3 322 10 374 6 13 2 38 1 37 3 325 3 92 9 356 1 357 1 97 1 271 2 143 3 
6 5 155 1 267 1 169 2 248 1 371 2 316 1 84 2 322 3 13 1 20 1 174 1 38 1 92 2 356 2 357 1 97 1 271 2 
50 1 240 1 306 1 207 1 332 1 190 1 116 1 301 1 63 1 34 1 
275 1 270 1 
50 1 332 1 190 1 116 1 301 1 341 1 55 1 331 1 34 1 
111 1 240 1 207 1 345 1 332 1 301 1 170 1 234 1 34 1 50 1 188 1 306 1 140 1 116 1 190 1 217 2 286 1 142 1 
111 1 240 1 207 1 345 1 332 1 301 1 170 1 234 1 34 1 50 1 188 1 306 1 140 1 116 1 190 1 217 2 286 1 142 1 
111 1 240 1 207 1 345 1 332 1 301 1 170 1 234 1 34 1 50 1 188 1 306 1 140 1 116 1 190 1 217 2 286 1 142 1 
176 1 231 1 238 1 
176 1 231 1 238 1 
206 1 152 1 
206 1 231 1 152 1 
377 1 108 1 
239 1 241 1 275 1 332 1 301 1 170 1 255 1 223 1 50 1 75 1 339 2 53 2 108 1 288 2 205 1 345 1 230 1 372 2 234 1 34 1 188 1 190 1 116 1 270 1 217 1 377 1 328 2 
176 1 238 1 
206 1 231 1 152 1 
102 1 119 1 168 1 169 2 15 2 199 1 279 1 129 1 147 1 77 1 4 1 258 2 339 2 53 2 340 1 259 1 6 2 155 1 267 1 248 1 372 2 293 1 87 1 322 1 13 1 162 2 67 2 115 1 92 1 95 1 329 1 
44 1 184 1 25 1 360 1 134 1 268 1 158 1 364 2 125 1 87 1 128 1 162 2 67 2 148 1 258 2 326 1 307 1 340 1 368 1 
25 1 360 1 121 1 268 1 158 1 364 2 125 1 87 1 128 1 162 1 67 1 148 1 258 1 326 1 307 1 340 1 368 1 
7 1 44 1 168 1 221 1 291 1 122 1 145 1 87 1 162 1 67 1 148 1 4 1 258 1 340 1 
44 1 184 1 25 1 360 1 268 1 158 1 364 2 125 1 87 1 128 1 162 1 67 1 148 1 258 1 326 1 307 1 340 1 368 1 
297 1 
66 1 83 1 11 1 319 1 200 1 286 1 57 1 
100 1 170 1 365 1 104 1 132 1 286 2 57 1 261 1 182 1 313 1 319 1 234 1 113 1 66 1 213 1 163 1 164 1 
242 2 200 1 144 2 145 1 48 2 4 10 149 2 340 3 245 2 286 8 57 9 154 6 8 1 62 2 11 1 347 1 113 5 351 2 162 3 213 12 66 8 67 3 163 6 216 2 164 3 168 3 302 2 170 5 253 2 254 2 127 3 365 4 23 1 366 1 258 3 132 4 24 1 180 3 262 2 182 4 265 1 313 4 134 1 28 1 29 2 319 2 234 5 87 4 36 2 37 2 40 2 96 2 379 6 143 2 
276 1 242 1 170 1 48 2 254 2 103 1 365 2 20 1 23 1 132 2 286 5 57 8 154 5 81 1 182 2 313 2 84 1 62 2 232 1 319 2 234 1 185 1 113 1 33 1 213 6 66 5 37 2 216 1 163 3 164 1 96 2 357 1 379 5 271 1 143 2 
251 1 17 1 170 1 365 1 74 1 78 1 257 1 339 1 132 1 53 1 57 2 288 1 59 1 182 1 313 1 62 1 372 1 234 1 321 1 375 1 66 2 189 1 216 1 327 1 14 1 96 2 328 1 143 2 
182 1 313 1 11 1 200 1 319 1 365 1 66 1 132 1 286 1 57 1 
154 5 62 2 48 2 254 2 66 5 213 10 37 2 216 1 163 5 149 1 96 2 379 5 286 5 143 2 57 5 
164 1 319 1 170 1 234 1 286 1 113 1 
43 1 274 1 168 1 221 1 122 1 242 2 303 1 170 3 145 2 365 1 23 2 4 1 258 4 132 2 340 1 56 1 57 2 8 1 182 2 265 2 313 2 234 3 113 4 87 1 162 4 66 2 67 4 164 2 220 1 
169 2 168 1 145 1 127 1 75 1 78 2 258 1 4 1 339 3 53 2 79 1 340 1 259 1 6 1 288 2 155 1 248 1 267 1 137 1 372 3 349 1 321 1 293 1 87 1 322 1 352 1 13 1 162 1 67 1 39 1 328 2 329 1 
154 2 182 1 313 1 278 1 242 1 319 2 365 1 213 4 66 2 23 1 163 2 132 1 379 2 286 4 57 1 
50 1 3 1 190 1 
50 1 306 1 190 1 342 1 377 1 
50 1 3 1 190 1 
50 1 3 1 190 1 
50 1 190 1 335 1 
50 1 190 1 335 1 
50 1 190 1 335 1 
50 1 190 1 
116 1 34 1 
101 1 169 2 20 1 257 1 284 2 6 10 155 1 370 1 248 1 267 1 62 2 84 1 322 5 374 3 375 1 13 1 325 1 92 5 327 1 14 1 357 1 97 1 143 2 271 1 
101 1 169 4 197 1 254 1 20 1 21 1 257 1 284 2 6 13 370 1 155 2 248 2 267 2 62 2 84 1 322 6 374 4 375 1 13 2 37 1 325 2 92 7 327 1 14 1 357 1 97 1 271 2 143 3 
101 1 169 6 48 2 254 2 103 1 337 1 21 1 20 1 257 1 284 3 6 21 81 1 370 1 155 3 248 3 267 3 84 1 62 4 232 1 33 1 322 11 374 5 375 1 13 3 37 2 325 2 92 10 327 1 14 1 357 1 97 1 271 1 143 4 
101 1 169 6 48 1 254 2 337 1 103 1 21 1 20 1 257 1 284 3 6 19 81 1 370 1 155 3 248 3 267 3 84 1 62 3 232 1 33 1 322 8 374 6 375 1 13 3 37 2 325 3 92 11 327 1 14 1 357 1 97 1 271 1 143 4 
101 1 169 2 20 1 257 1 284 2 6 10 155 1 370 1 248 1 267 1 62 2 84 1 322 5 374 3 375 1 13 1 325 1 92 5 327 1 14 1 357 1 97 1 143 2 271 1 
169 2 48 2 254 2 103 1 20 1 284 1 6 12 81 1 155 1 248 1 267 1 84 1 62 2 232 1 33 1 322 6 374 2 13 1 37 2 325 1 92 6 357 1 97 1 271 1 143 2 
101 1 169 8 48 1 254 2 103 1 337 2 20 1 21 1 257 1 284 3 6 20 81 1 370 1 155 4 248 4 267 4 84 1 62 3 232 1 33 1 322 9 374 5 375 1 13 4 37 2 325 2 92 11 327 1 14 1 357 1 97 1 271 1 143 4 
169 8 48 2 254 3 103 1 337 2 20 1 284 3 6 16 81 1 155 4 248 4 267 4 112 1 84 1 62 2 232 1 33 1 322 7 374 6 13 4 37 3 325 3 92 9 357 1 97 1 271 1 143 3 
6 5 101 1 370 1 62 1 322 3 374 4 375 1 257 1 325 2 92 2 327 2 14 2 284 2 143 1 
101 1 169 8 48 1 254 2 103 1 337 2 20 1 257 1 284 3 6 20 81 1 370 1 155 4 248 4 267 4 112 1 84 1 62 3 232 1 33 1 322 9 374 5 375 1 13 4 37 2 325 2 92 11 327 1 14 1 357 1 97 1 271 1 143 4 
101 1 169 4 337 1 257 1 284 2 6 10 370 1 155 2 248 2 267 2 62 2 322 5 374 4 13 2 375 1 325 2 92 5 327 1 14 1 143 2 
101 1 370 1 83 1 
6 4 155 1 267 1 169 2 248 1 62 1 48 1 254 1 322 2 374 2 13 1 21 1 37 1 325 1 92 2 284 1 143 1 
6 7 197 1 62 1 84 1 48 1 254 1 322 4 374 2 37 1 325 1 92 3 284 1 357 1 271 2 143 1 
273 1 101 1 197 1 169 2 48 2 254 2 337 1 257 1 284 3 287 1 6 20 370 1 155 1 267 1 248 1 62 4 322 10 374 5 375 1 13 1 37 2 325 2 92 10 327 1 14 1 357 2 143 4 271 2 
6 1 322 1 271 1 
6 1 92 1 357 1 
6 6 155 1 248 1 169 2 267 1 62 1 48 1 254 1 322 3 374 3 13 1 21 1 37 1 149 1 325 1 92 3 284 2 143 1 
169 2 48 2 254 2 103 1 20 1 284 1 6 12 81 1 155 1 248 1 267 1 84 1 62 2 232 1 33 1 322 6 374 2 13 1 37 2 325 1 92 6 357 1 97 1 271 1 143 2 
6 6 62 1 322 3 374 2 375 1 325 1 92 3 327 1 14 1 284 1 143 1 
6 3 101 1 370 1 155 1 267 1 169 2 248 1 322 2 337 1 374 2 13 1 257 1 325 1 92 1 327 1 14 1 284 1 369 1 
6 10 155 1 248 1 169 2 267 1 62 2 322 5 374 5 13 1 375 1 257 1 325 2 92 5 327 2 14 2 284 3 97 1 143 2 
6 2 155 1 267 1 169 2 248 1 254 1 374 1 13 1 325 1 92 2 97 1 143 1 
6 4 155 1 267 1 169 2 248 1 62 1 48 1 254 1 322 2 374 2 13 1 37 1 325 1 92 2 284 1 97 1 143 1 
6 3 155 3 112 1 267 3 169 6 248 3 337 1 322 2 374 2 13 3 325 1 92 1 327 1 14 1 284 1 369 1 97 1 
101 1 169 8 48 2 254 2 337 1 21 1 257 1 150 1 284 3 6 24 110 1 370 1 155 4 112 1 248 4 267 4 84 1 62 4 322 12 210 1 374 6 375 1 13 4 37 2 325 3 92 12 327 1 14 1 357 3 97 1 271 3 143 4 
166 1 75 1 71 1 339 1 53 1 372 1 41 1 
166 1 71 1 72 1 30 1 372 1 75 1 236 1 269 1 131 1 53 1 339 1 41 1 
162 1 168 1 221 1 67 1 83 1 4 1 258 1 122 1 340 1 145 1 87 1 
288 1 168 1 198 1 372 2 145 1 349 1 127 1 87 1 75 1 162 1 67 1 4 1 258 1 79 1 53 1 339 2 340 1 328 1 
168 2 198 1 17 1 302 1 19 1 127 2 75 1 258 1 4 3 339 2 53 2 79 1 340 1 151 1 288 1 265 1 372 2 349 1 87 1 162 1 36 1 67 1 328 2 
168 2 198 1 17 1 302 1 19 1 126 1 127 2 75 1 258 2 4 3 339 2 53 2 79 1 340 1 151 1 311 1 288 1 265 1 372 2 87 1 162 2 36 1 67 2 328 2 
299 1 168 1 302 1 170 2 145 1 127 1 4 4 258 3 340 1 311 1 245 1 286 1 180 1 265 1 319 1 234 2 113 1 65 1 87 1 162 3 36 1 67 3 40 1 
180 1 265 1 168 1 302 1 319 1 170 2 234 2 145 1 253 1 113 1 127 1 87 1 36 1 162 3 67 3 258 3 4 4 340 1 40 1 311 1 286 1 245 1 
162 1 183 1 67 1 258 1 340 1 87 1 
183 1 15 1 168 2 134 1 268 1 145 2 292 1 32 1 256 1 73 1 127 1 87 3 129 1 162 6 67 7 366 1 69 1 258 7 4 3 340 2 296 1 
101 1 198 1 199 1 279 1 201 1 4 1 53 1 339 2 340 1 284 2 6 8 288 1 155 2 248 2 62 2 349 1 293 2 161 1 352 1 162 1 13 2 67 1 14 1 169 4 168 1 17 1 127 1 75 1 257 1 177 1 258 1 79 1 259 2 370 1 267 2 134 1 372 2 87 1 322 4 374 3 375 1 39 1 325 1 92 4 327 1 328 1 143 2 
200 1 170 3 144 1 145 1 253 1 255 1 365 2 258 1 4 2 132 2 286 1 245 1 57 1 180 1 8 1 182 2 313 2 11 1 29 1 319 1 234 3 113 2 351 1 162 1 66 1 67 1 164 1 40 1 
183 1 168 1 134 1 347 1 127 1 87 2 162 2 67 2 366 1 258 2 4 2 340 1 245 1 
221 1 168 1 134 1 122 1 145 1 87 1 280 1 162 4 67 4 258 4 4 1 340 1 311 1 
265 1 168 1 317 1 292 1 32 1 127 1 87 2 162 2 67 2 282 1 258 2 4 1 340 1 330 1 
162 1 25 1 67 1 258 1 340 1 158 1 364 1 145 1 125 1 87 1 
129 1 102 1 162 2 168 1 67 2 4 1 258 2 134 1 340 1 268 1 87 1 
265 1 221 1 168 2 134 1 122 1 145 1 87 2 129 1 280 1 162 4 67 5 69 1 258 5 4 3 340 2 296 1 
265 1 221 1 168 2 134 1 122 1 145 1 86 1 87 2 129 1 280 1 162 4 67 5 258 5 4 3 340 2 296 1 
288 1 168 1 198 1 372 2 145 1 127 1 87 1 126 1 75 1 162 1 67 1 4 1 258 1 79 1 53 1 339 2 340 1 328 1 
265 1 168 1 292 1 32 1 256 1 127 1 87 2 162 1 67 1 366 1 258 1 4 1 340 1 
75 1 82 1 295 1 290 1 195 1 
82 2 195 1 196 1 290 2 222 1 17 1 319 1 170 2 234 2 19 1 255 1 138 1 75 1 76 1 295 2 226 1 40 1 151 1 286 1 
147 1 77 1 119 1 295 1 195 1 290 1 339 1 53 1 372 1 
196 1 195 1 226 1 
354 1 83 1 52 1 209 1 
10 1 354 1 346 1 323 1 237 1 52 1 209 1 
323 1 252 1 343 1 
10 1 277 1 346 1 156 2 157 1 209 1 354 1 237 3 323 3 52 1 178 1 260 1 
45 1 10 1 354 1 346 1 323 2 237 2 52 1 209 1 285 1 
10 1 346 1 158 1 12 1 364 1 88 1 128 1 354 1 237 1 323 1 178 1 
10 1 354 1 346 1 323 1 237 1 52 1 178 1 
10 1 346 1 323 1 237 1 52 2 209 1 178 1 
289 1 10 2 354 1 346 2 323 2 237 2 52 1 93 1 178 1 192 1 
10 1 346 1 135 1 209 1 88 1 376 1 354 2 237 3 323 3 52 1 178 1 109 1 285 2 
10 1 266 1 346 1 209 1 158 1 364 2 125 1 128 1 354 1 237 2 323 2 52 1 307 1 178 1 285 1 
45 1 10 2 346 2 209 1 88 1 376 1 354 2 237 4 323 4 52 1 178 1 218 1 285 2 
10 1 354 1 346 1 323 1 237 1 52 1 209 1 178 1 
10 1 346 1 156 1 157 1 209 2 88 1 376 1 354 3 237 4 323 4 52 2 260 1 285 2 359 1 
10 1 346 1 0 1 209 1 130 1 354 1 237 2 323 2 52 1 141 1 178 1 285 1 
10 1 354 1 346 1 323 3 237 3 52 1 156 2 209 1 157 2 118 1 178 1 260 1 
338 1 298 2 354 2 159 1 
10 1 346 1 323 1 237 1 178 1 165 1 
10 1 354 1 346 1 323 2 237 2 52 1 209 1 178 1 109 1 285 1 
68 1 
10 1 354 1 346 1 323 1 237 1 52 1 209 1 178 1 
10 1 354 1 346 1 323 3 237 3 52 1 156 1 209 1 178 1 109 1 285 1 
88 1 376 1 354 1 359 1 
354 1 52 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (42,235) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (182,185) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (42,235) 13 199 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 130 66 365 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 130 66 365 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 130 66 365 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 130 66 365 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 130 66 365 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 270 311 128 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 122 342 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 122 (240,262) (240,262) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 144 2 54 2 104 3 123 4 187 6 189 5 33 1 230 1 59 1 281 2 359 1 131 9 83 2 261 1 285 1 241 9 197 1 312 1 313 1 41 1 203 1 347 2 118 1 44 2 142 2 207 1 95 1 
0 1 144 2 54 2 104 3 123 4 187 6 189 5 33 1 230 1 59 1 281 2 359 1 131 9 83 2 261 1 285 1 241 9 197 1 312 1 313 1 41 1 203 1 347 2 118 1 44 2 142 2 207 1 95 1 
0 1 144 2 54 2 104 4 123 5 187 7 189 6 33 1 230 1 59 1 281 2 359 1 131 10 83 2 261 1 285 1 241 10 197 1 312 1 313 1 41 1 203 1 347 2 118 1 44 2 142 2 207 1 95 1 
0 1 144 1 54 2 104 2 123 3 187 4 189 4 33 1 230 1 59 1 281 2 359 1 131 7 83 2 261 1 285 1 241 7 197 1 312 1 313 1 41 1 203 1 347 2 118 1 44 2 142 2 95 1 
144 2 0 1 261 1 104 1 241 4 123 2 313 1 187 3 189 3 347 1 33 1 44 1 281 1 142 1 207 1 95 1 131 4 83 1 
254 1 54 1 261 1 355 1 241 2 312 1 313 1 189 1 204 1 33 1 230 1 44 1 142 1 281 1 131 2 83 1 
54 1 261 1 104 1 241 3 123 1 313 1 187 1 41 1 189 2 33 1 142 2 131 3 83 2 
144 2 0 1 54 1 104 3 123 4 187 7 189 5 33 1 59 1 334 1 281 1 359 1 131 9 83 2 261 1 241 9 313 1 41 1 116 1 347 1 44 1 142 2 207 1 95 1 
144 2 0 1 54 1 104 3 123 4 187 7 189 5 33 1 59 1 334 1 281 1 359 1 131 9 83 2 261 1 241 9 313 1 41 1 116 1 347 1 44 1 142 2 207 1 95 1 
168 1 306 1 163 1 
168 1 64 1 115 2 
107 1 126 2 38 2 147 2 271 2 242 2 371 1 106 2 
53 1 273 1 212 1 296 1 357 1 330 1 147 2 164 1 257 1 106 2 107 1 126 2 127 1 148 2 260 1 36 1 6 2 38 2 133 1 283 1 176 2 343 2 286 1 265 1 242 2 219 1 243 1 371 1 155 1 205 1 140 2 271 2 94 1 
107 1 363 1 126 1 38 1 127 1 147 1 271 1 82 1 242 1 106 1 
38 1 211 1 309 1 87 1 147 1 57 1 10 1 89 1 168 1 126 1 16 1 178 1 127 1 306 1 
38 1 211 1 309 2 10 2 147 1 57 1 242 1 106 1 168 1 126 1 16 1 178 1 127 1 306 1 271 1 
325 1 327 1 309 1 161 1 10 1 
168 1 68 1 327 1 309 2 43 1 161 1 306 1 10 2 
327 1 309 1 10 1 
363 1 38 1 309 1 161 1 10 1 147 1 242 1 106 1 107 1 126 1 76 1 127 1 271 1 82 1 
168 1 
168 1 68 1 327 1 309 2 161 1 348 1 306 1 10 2 
68 1 111 1 255 1 309 5 327 2 161 2 366 2 227 1 345 1 114 1 10 5 229 1 168 1 108 2 306 1 119 2 337 1 25 1 323 1 
134 1 38 1 176 1 198 1 147 1 219 1 242 1 106 1 126 1 140 1 260 1 235 1 36 1 6 1 
163 1 371 1 
38 2 352 1 147 2 242 1 371 2 106 1 126 2 172 1 271 1 
185 1 235 1 13 1 
176 1 330 1 219 1 371 1 302 1 140 1 127 1 260 1 36 1 6 1 
134 2 38 5 27 1 352 1 87 1 198 1 147 5 242 4 371 1 106 4 126 5 279 1 34 1 271 1 
126 2 38 2 127 1 147 2 82 1 242 2 85 1 106 2 
134 1 126 3 38 3 271 1 147 3 242 3 371 1 106 3 
126 1 38 1 127 1 147 1 82 1 242 1 106 1 
126 1 38 1 352 1 127 1 172 1 147 1 271 1 242 1 106 1 
53 1 211 1 352 1 273 1 357 1 147 3 57 1 164 1 257 1 213 1 106 3 107 1 126 3 127 1 148 2 260 1 36 1 6 1 38 3 134 1 309 1 283 1 239 1 176 1 343 1 286 1 198 1 265 1 10 1 219 1 242 3 243 1 371 1 16 1 178 1 140 1 94 1 271 2 
126 2 38 2 134 1 87 1 279 1 147 2 242 1 371 1 106 1 
134 2 38 3 309 1 211 1 352 1 198 1 10 1 147 3 57 1 242 3 213 1 106 3 168 1 126 3 318 1 16 1 178 1 127 1 271 1 
134 1 38 2 352 1 185 1 147 2 242 2 106 2 126 2 271 1 235 1 
176 1 330 1 219 1 371 1 140 1 127 1 260 1 36 1 6 1 
153 1 38 1 237 1 329 1 176 1 298 1 371 1 126 1 317 1 140 1 93 1 349 1 260 1 120 1 6 1 
324 1 53 1 296 2 185 2 166 1 257 1 170 1 148 2 5 1 336 1 235 2 283 1 286 1 343 4 265 1 243 2 13 2 314 1 15 1 42 1 18 1 94 1 250 1 182 1 
126 1 38 1 16 1 127 1 147 1 242 1 85 1 106 1 
86 1 225 1 
86 1 225 1 
70 1 46 1 
70 1 46 1 
70 1 46 1 
86 1 225 1 344 1 
86 1 225 1 370 1 
86 2 225 2 70 1 46 1 184 1 346 1 
86 1 225 1 344 1 
86 1 225 1 344 1 
86 1 225 1 132 1 
86 1 225 1 132 1 
86 1 225 1 132 1 
225 1 226 1 147 2 105 1 58 1 106 2 126 2 60 1 86 1 38 2 309 1 340 1 39 1 264 1 10 1 370 1 242 2 11 1 371 1 14 1 268 1 319 1 322 1 99 1 
86 2 225 2 309 2 39 3 295 1 274 1 184 1 264 2 10 2 105 2 11 2 244 2 168 1 14 2 45 1 47 1 84 1 173 1 99 1 
347 1 44 1 281 1 
44 1 355 1 281 1 
347 2 221 1 19 1 355 1 269 1 281 3 
347 1 282 1 19 1 355 1 269 1 281 2 
347 1 19 1 355 1 269 2 281 2 
52 2 327 1 255 3 161 4 103 1 227 1 300 1 166 1 167 1 168 2 108 1 60 1 61 1 64 1 305 2 306 1 307 1 68 1 340 1 309 5 310 1 366 1 10 5 200 2 115 3 314 1 315 1 18 1 119 1 250 1 25 2 322 1 
52 6 325 5 327 6 255 8 161 7 103 1 227 1 300 2 165 1 166 3 168 5 108 2 64 3 305 6 306 1 68 1 309 9 310 2 366 2 114 1 136 5 177 1 10 9 201 1 115 9 314 3 315 3 18 3 119 2 272 1 250 3 96 1 25 6 322 4 251 1 
52 2 255 3 161 2 300 1 166 1 167 1 168 3 108 1 61 1 306 1 64 2 305 2 309 3 310 1 366 1 114 1 10 3 200 1 115 4 314 1 315 1 18 1 119 1 250 1 25 2 322 1 
52 4 255 5 161 3 300 1 165 1 166 2 167 1 168 4 108 1 61 1 306 1 64 3 305 4 309 4 310 1 366 1 114 1 10 4 200 2 115 7 314 2 315 2 18 2 119 1 272 1 250 2 96 1 25 4 322 2 
329 1 163 1 369 1 
329 1 158 1 
92 1 
237 1 329 1 349 1 
329 1 24 1 
237 1 329 1 
237 1 329 3 29 1 369 2 146 1 349 1 
102 1 262 1 122 1 240 1 296 5 343 9 332 2 243 4 166 1 90 1 314 1 169 1 231 1 62 1 5 3 49 1 336 2 
102 1 262 1 122 1 240 1 296 5 343 9 332 2 243 4 166 1 90 1 314 1 169 1 231 1 62 1 5 3 49 1 336 2 
102 1 262 1 122 1 240 1 296 5 343 9 332 2 243 4 166 1 90 1 314 1 169 1 231 1 62 1 5 3 258 1 49 1 336 2 
53 1 102 3 122 3 297 3 296 17 124 1 332 1 166 5 169 2 231 2 62 1 4 1 148 2 5 13 336 6 364 1 342 1 262 1 284 1 240 1 286 1 343 34 265 1 266 1 243 17 90 1 315 3 314 5 18 3 247 1 248 4 49 7 94 1 320 1 250 3 
53 2 102 1 262 1 122 1 240 1 296 6 343 11 286 2 332 2 265 2 243 5 166 1 90 1 314 1 169 1 231 1 156 1 4 1 148 4 5 4 49 1 336 3 94 2 98 1 
54 1 355 1 56 1 187 1 189 1 33 1 214 1 216 1 281 2 234 1 131 2 150 1 149 1 83 1 6 1 261 1 176 1 241 2 12 1 313 1 316 1 347 1 317 1 44 1 140 1 245 1 246 1 221 1 142 1 120 1 
54 1 355 1 187 2 189 1 33 1 214 1 216 1 281 2 234 1 131 3 150 1 149 1 83 1 6 1 261 1 176 1 241 3 138 1 12 1 316 1 347 1 17 1 317 1 44 1 140 1 373 1 221 1 246 1 142 1 120 1 
54 1 355 1 187 2 189 1 33 1 214 1 216 1 281 2 234 1 131 2 150 1 149 1 6 1 261 1 176 1 241 2 138 1 12 1 347 1 317 1 140 1 373 1 44 1 221 1 120 1 
54 2 329 1 216 2 63 1 234 2 260 1 131 1 83 1 6 1 152 1 37 1 67 1 237 1 176 1 241 1 88 1 12 2 202 1 317 1 17 1 140 1 142 1 120 1 
54 1 355 1 56 1 214 1 216 1 281 2 234 1 131 1 150 1 149 1 83 1 6 1 176 1 241 1 138 1 12 1 313 1 316 1 347 1 317 1 44 1 140 1 246 1 221 1 142 1 120 1 
196 1 
183 1 327 6 329 1 227 1 147 1 57 1 108 1 278 2 64 2 67 1 6 2 69 2 68 3 237 1 238 2 10 5 115 2 289 1 154 2 16 1 291 1 292 1 206 2 119 1 25 2 120 1 160 1 209 1 252 1 255 2 211 1 358 1 31 4 168 2 126 1 127 1 306 1 35 2 360 1 260 2 37 1 175 1 38 1 310 1 309 5 87 1 366 1 176 2 89 1 372 1 317 1 140 2 178 1 374 2 97 1 
211 1 327 2 147 1 57 1 31 2 126 1 127 1 360 1 68 1 38 1 309 3 87 1 10 3 89 1 154 1 372 1 16 1 178 1 348 1 292 1 252 1 209 1 
327 1 211 1 147 1 57 1 31 3 168 1 126 1 127 1 306 1 360 1 69 1 68 1 38 1 309 3 87 1 10 3 89 1 372 1 16 1 178 1 348 1 292 1 252 1 209 1 
211 1 327 2 147 1 57 1 31 3 168 1 126 1 127 1 306 1 360 1 68 1 69 1 38 1 309 3 87 1 10 3 89 1 154 1 372 1 16 1 178 1 348 1 292 1 374 1 252 1 209 1 
327 7 227 1 1 1 57 1 147 1 108 1 278 2 64 2 68 3 69 4 238 2 10 5 154 4 16 1 348 1 292 1 22 1 119 1 206 2 208 1 25 1 160 1 209 1 252 1 211 1 255 1 31 6 168 5 126 1 127 1 306 5 35 2 360 1 38 1 309 5 87 1 263 1 366 1 40 1 89 1 372 1 178 1 374 4 97 1 
327 4 227 1 57 1 147 1 108 1 278 2 64 2 68 2 69 2 238 2 10 4 115 2 154 2 16 1 292 1 119 1 206 2 25 1 160 1 209 1 252 1 211 1 255 1 358 1 31 4 168 2 126 1 127 1 306 1 35 2 360 1 38 1 309 4 87 1 366 1 89 1 372 1 178 1 374 2 97 1 
327 4 255 1 211 1 227 1 1 1 147 1 57 1 31 4 168 1 126 1 108 1 278 2 127 1 306 1 64 2 35 2 360 1 69 2 68 2 38 1 309 4 238 2 87 1 366 1 40 1 10 4 154 2 89 1 372 1 16 1 178 1 292 1 374 2 22 1 206 2 119 1 97 1 25 1 160 1 252 1 209 1 
327 4 255 1 211 1 227 1 1 1 147 1 57 1 31 4 168 1 126 1 108 1 278 2 127 1 306 1 64 2 35 2 360 1 69 2 68 2 38 1 309 4 238 2 87 1 366 1 40 1 10 4 154 2 89 1 372 1 16 1 178 1 292 1 374 2 22 1 206 2 119 1 97 1 25 1 160 1 252 1 209 1 
327 4 255 1 211 1 294 2 227 1 1 1 147 1 57 1 125 2 31 4 168 1 126 1 108 1 278 2 127 1 333 1 306 1 360 1 69 2 68 2 38 1 309 4 238 2 87 1 366 1 10 4 115 2 154 2 89 1 372 1 16 1 178 1 267 1 292 1 374 2 143 1 119 1 97 1 25 1 252 1 209 1 
255 1 211 1 327 5 227 1 1 1 147 1 57 1 31 5 168 1 126 1 108 1 278 2 127 1 306 1 64 2 35 2 360 1 68 2 69 3 38 1 309 4 238 2 87 1 366 1 40 1 10 4 89 1 154 3 372 1 16 1 178 1 292 1 374 3 22 1 206 2 119 1 208 1 97 1 25 1 160 1 252 1 209 1 
255 1 211 1 327 5 227 1 1 1 147 1 57 1 31 5 168 1 126 1 108 1 278 2 127 1 306 1 64 2 35 2 360 1 68 2 69 3 38 1 309 4 238 2 87 1 366 1 40 1 10 4 89 1 154 3 372 1 16 1 178 1 292 1 374 3 22 1 206 2 119 1 208 1 97 1 25 1 160 1 252 1 209 1 
327 4 255 1 211 1 294 2 227 1 147 1 57 1 125 2 358 1 31 4 168 1 126 1 108 1 278 2 127 1 306 1 360 1 69 2 68 2 38 1 309 4 238 2 87 1 366 1 10 4 115 2 154 2 89 1 372 1 16 1 178 1 292 1 374 2 119 1 143 1 97 1 25 1 252 1 209 1 
53 1 102 1 122 1 185 1 296 4 163 1 332 1 257 1 166 1 170 1 148 2 5 2 336 2 235 1 262 1 283 1 240 1 286 1 343 8 265 1 243 4 371 3 13 1 90 1 314 1 94 1 
100 1 53 2 145 1 297 3 296 8 185 4 164 1 257 1 166 2 3 1 148 4 5 2 336 1 233 1 235 11 283 2 286 2 343 14 265 2 266 1 243 6 371 1 220 1 13 11 155 1 315 2 314 1 18 1 248 3 49 1 94 2 320 1 250 2 
53 1 101 1 185 1 296 1 147 1 164 1 257 1 106 1 302 1 3 1 126 1 148 2 260 1 36 1 6 1 7 1 38 1 134 1 283 1 176 1 113 1 286 1 343 2 198 1 265 1 219 1 242 1 243 1 371 1 155 1 140 1 94 1 
53 2 273 1 296 3 185 3 147 1 164 1 166 1 257 2 106 1 32 1 301 1 3 1 126 1 304 1 148 4 5 1 336 1 260 1 235 3 36 1 6 1 38 1 134 1 283 2 9 1 176 1 343 7 286 2 199 1 198 1 265 2 219 1 242 1 243 4 13 3 314 1 315 1 140 1 18 1 94 2 250 1 
53 2 353 1 329 3 296 1 356 1 147 1 164 1 257 2 106 1 277 1 126 1 170 1 148 4 260 2 6 7 37 1 67 1 38 1 134 1 237 2 112 1 283 2 71 1 176 8 286 2 343 2 138 1 265 2 242 1 243 1 290 1 155 1 205 2 317 2 245 1 140 8 21 1 94 2 120 2 
53 1 352 1 185 1 296 1 299 1 147 1 257 1 166 1 106 1 3 1 126 1 148 2 5 1 336 1 235 1 38 1 283 1 286 1 343 3 265 1 242 1 243 2 13 1 315 1 314 1 18 1 271 1 94 1 250 1 
324 1 53 1 283 1 185 1 343 2 286 1 296 2 265 1 257 1 166 1 13 1 170 1 148 2 5 1 49 1 94 1 250 1 235 1 
53 1 283 1 185 1 343 2 286 1 265 1 243 2 257 1 13 1 314 1 15 1 170 1 18 1 148 2 5 1 336 1 94 1 235 1 
53 1 296 2 185 2 166 1 257 1 170 1 148 2 5 2 336 1 235 2 283 1 286 1 343 4 265 1 243 2 13 2 315 1 314 1 18 1 94 1 49 1 250 1 
324 1 53 1 283 1 185 1 343 2 286 1 296 2 265 1 257 1 166 1 13 1 277 1 148 2 5 1 49 1 94 1 250 1 235 1 
53 1 283 1 185 1 343 2 286 1 265 1 243 2 257 1 13 1 277 1 314 1 15 1 18 1 148 2 5 1 336 1 94 1 235 1 
53 1 296 2 185 2 166 1 257 1 277 1 148 2 5 2 336 1 235 2 283 1 286 1 343 4 265 1 243 2 13 2 315 1 314 1 18 1 94 1 49 1 250 1 
53 1 283 1 185 2 286 1 296 2 343 4 265 1 243 2 257 1 166 1 13 2 314 1 315 1 18 1 148 2 5 2 336 1 49 1 94 1 250 1 235 2 
53 1 273 1 296 1 330 1 164 1 257 1 127 1 148 2 260 1 36 1 6 1 283 1 176 1 286 1 343 2 265 1 219 1 243 1 371 1 155 1 140 1 94 1 
53 1 329 1 296 1 298 1 164 1 257 1 126 1 79 1 148 2 260 1 6 1 153 1 38 1 237 1 283 1 176 1 343 2 286 1 265 1 243 1 371 1 155 1 317 1 140 1 93 1 349 1 94 1 120 1 
53 1 296 2 185 2 166 1 257 1 3 1 148 2 5 2 336 1 235 2 283 1 286 1 343 4 265 1 243 2 13 2 315 1 314 1 18 1 94 1 49 1 250 1 
53 1 273 1 185 1 296 1 257 1 166 1 304 1 148 2 5 1 336 1 235 1 36 1 6 1 283 1 176 1 286 1 343 3 265 1 219 1 243 2 13 1 315 1 314 1 140 1 245 1 18 1 94 1 250 1 
53 1 352 1 296 2 185 1 147 1 257 1 166 1 106 1 3 1 126 1 148 2 5 1 151 1 235 1 38 1 283 1 286 1 343 3 265 1 242 1 243 1 13 1 314 1 315 1 18 1 49 1 271 1 94 1 250 1 
53 1 365 1 286 1 148 2 287 1 265 1 94 1 130 1 66 1 98 1 
53 1 365 1 286 1 148 2 287 1 265 1 94 1 130 1 66 1 98 1 
53 1 365 1 286 1 148 2 287 1 265 1 94 1 130 1 66 1 98 1 
53 1 365 1 286 1 148 2 287 1 265 1 94 1 130 1 66 1 98 1 
53 1 365 1 286 1 148 2 287 1 265 1 94 1 130 1 66 1 98 1 
86 1 14 1 225 1 295 1 274 1 184 1 264 1 11 1 105 1 217 1 
370 1 58 1 
86 1 193 1 14 1 225 1 264 1 171 1 11 1 105 1 26 1 
280 1 344 1 
157 1 346 1 132 1 
86 1 225 1 309 1 39 2 295 1 274 1 184 1 264 1 10 1 105 1 11 1 244 1 168 1 14 1 45 1 84 1 173 1 99 1 
86 1 225 1 309 1 39 2 295 1 274 1 184 1 264 1 10 1 105 1 11 1 244 1 168 1 14 1 45 1 84 1 173 1 99 1 
86 1 225 1 309 1 39 2 295 1 274 1 184 1 264 1 10 1 105 1 11 1 244 1 168 1 14 1 45 1 84 1 173 1 99 1 
280 1 344 1 346 1 
280 1 344 1 346 1 
157 1 132 1 
157 1 346 1 132 1 
226 1 268 1 
225 1 161 1 226 1 147 2 105 1 58 1 106 2 126 2 60 1 84 1 86 1 38 2 309 1 340 1 218 1 39 1 264 1 10 1 370 1 11 1 242 2 371 1 244 1 14 1 268 1 319 1 322 1 
53 1 55 1 329 1 296 1 275 1 356 1 147 2 164 1 257 1 3 1 126 2 148 2 129 1 110 1 6 2 38 2 237 1 341 1 283 1 176 2 286 1 343 2 265 1 243 1 155 1 205 2 317 1 140 2 21 1 94 1 120 1 
355 1 176 2 138 1 30 1 316 1 347 1 317 1 214 1 44 1 140 2 245 1 221 1 216 1 281 2 65 1 149 1 120 1 6 2 174 1 
355 1 176 1 138 1 30 1 316 1 347 1 214 1 317 1 44 1 140 1 221 1 216 1 20 1 281 2 149 1 120 1 6 1 
237 1 329 1 176 1 88 1 317 1 140 1 216 1 179 1 260 1 120 1 6 1 174 1 37 1 67 1 
355 1 176 1 138 1 30 1 316 1 347 1 317 1 214 1 44 1 140 1 221 1 216 1 281 2 65 1 149 1 120 1 6 1 174 1 
335 1 
168 1 111 1 255 1 306 1 345 1 163 1 25 1 
255 1 327 1 227 1 168 2 108 1 64 1 306 1 35 1 68 1 309 1 366 1 10 1 115 1 206 1 119 1 25 1 160 1 
326 2 52 6 327 5 328 1 329 10 227 4 146 1 108 4 64 6 192 1 6 3 68 3 111 1 237 3 8 2 345 1 72 2 288 2 199 2 10 5 115 12 245 1 18 2 291 1 158 3 119 4 349 3 293 1 250 2 120 3 78 2 24 2 25 8 210 1 255 9 211 2 354 2 28 2 166 2 168 8 306 2 305 6 260 1 308 1 310 2 309 5 366 4 176 3 369 2 139 2 315 2 314 2 317 4 140 3 
52 4 327 1 255 5 227 2 297 1 166 1 168 4 108 2 128 1 305 4 64 3 306 1 68 1 309 1 366 2 311 1 135 1 288 1 10 1 115 6 266 1 315 1 314 1 18 1 270 1 248 1 77 1 119 2 321 1 250 1 25 3 
255 1 309 1 102 1 342 1 366 1 122 1 227 1 40 1 288 1 10 1 108 1 119 1 25 1 
168 1 111 1 255 1 108 1 366 1 227 1 306 1 345 1 119 1 25 1 
52 5 8 1 255 5 199 1 288 2 115 10 166 2 168 5 315 2 314 2 18 2 305 5 64 5 250 2 25 5 
168 1 68 1 309 1 327 1 306 1 10 1 
183 1 210 1 255 2 327 4 329 1 227 1 108 2 260 2 6 4 37 1 67 1 68 2 175 1 237 1 310 2 309 3 366 2 176 4 114 1 10 3 91 1 317 1 140 4 291 2 119 2 223 1 293 2 120 1 25 2 
53 1 273 1 357 1 147 2 164 1 257 1 106 2 107 1 126 2 148 2 260 1 36 1 6 1 38 2 283 1 176 1 343 1 286 1 265 1 242 2 219 1 243 1 371 1 140 1 271 2 94 1 
52 2 310 1 255 1 366 1 227 1 332 1 115 4 168 4 108 1 291 1 305 2 64 2 306 2 119 1 25 2 
14 1 190 1 11 1 
14 1 268 1 295 1 74 1 11 1 
14 1 190 1 11 1 
14 1 190 1 11 1 
14 1 276 1 11 1 
14 1 276 1 11 1 
14 1 276 1 11 1 
14 1 11 1 
86 1 225 1 
53 2 102 1 262 1 122 1 240 1 286 2 265 2 4 1 148 4 5 2 49 1 336 1 94 2 
102 1 262 1 122 1 240 1 296 4 343 8 163 1 332 1 243 4 166 1 90 1 314 1 5 2 336 2 
53 1 286 1 296 2 343 4 73 1 265 1 243 2 166 1 314 1 315 1 18 1 148 2 5 2 336 1 94 1 49 1 250 1 
343 7 297 1 296 3 266 1 243 4 166 1 314 1 315 1 18 1 248 2 5 2 336 1 49 1 320 1 250 1 
53 2 102 2 122 2 296 10 297 2 332 1 166 3 4 2 148 4 5 9 233 1 336 5 262 1 240 1 343 21 286 2 368 1 265 2 243 11 220 1 90 1 315 2 314 3 18 2 248 2 49 4 94 2 250 2 320 1 
343 1 248 1 243 1 
343 1 296 1 297 1 
53 1 286 1 343 6 296 3 73 1 199 1 265 1 243 3 166 1 315 1 314 1 18 1 148 2 5 3 94 1 49 1 336 2 250 1 
53 1 297 1 296 6 166 2 128 1 148 2 5 2 336 1 311 1 343 12 286 1 135 1 265 1 266 1 243 6 315 2 314 2 18 2 270 1 248 1 77 1 49 1 94 1 250 2 98 1 
102 1 122 1 296 3 343 6 243 3 166 1 90 1 314 1 5 2 336 1 49 1 
53 1 102 1 262 1 122 1 240 1 343 1 286 1 368 1 265 1 243 1 4 1 148 2 5 2 49 1 336 1 94 1 
53 1 102 1 342 1 122 1 286 1 296 5 343 10 265 1 243 5 166 2 90 1 314 2 148 2 5 4 94 1 336 2 49 2 98 1 
53 1 286 1 296 2 343 2 265 1 166 1 148 2 5 1 94 1 49 1 250 1 98 1 
53 1 286 1 296 2 343 4 265 1 243 2 166 1 314 1 315 1 18 1 148 2 5 2 336 1 94 1 49 1 250 1 98 1 
53 1 102 1 122 1 286 1 296 1 343 2 265 1 243 1 148 2 5 1 94 1 336 1 98 1 
53 5 102 3 122 3 297 3 296 12 166 4 4 2 148 10 5 11 336 6 364 1 262 1 284 1 240 1 286 5 343 26 368 1 73 1 265 5 266 1 243 14 90 1 315 3 314 4 18 3 247 1 48 1 248 4 94 5 49 5 320 1 250 3 98 1 
53 1 102 1 122 1 297 1 296 5 332 1 166 1 128 1 148 2 5 2 336 2 262 1 240 1 343 10 286 1 265 1 266 1 243 5 90 1 314 1 248 1 94 1 98 1 
53 2 102 1 122 1 297 1 296 7 332 1 166 2 128 1 148 4 5 3 336 2 262 1 240 1 343 13 286 2 73 1 265 2 266 1 243 6 90 1 314 1 315 1 248 2 94 2 49 1 320 1 250 1 98 1 
53 3 102 1 122 1 297 1 296 10 332 1 166 3 4 1 128 1 148 6 5 4 336 3 262 1 311 1 240 1 343 21 286 3 135 1 73 1 265 3 266 1 243 11 90 1 315 2 314 3 18 2 270 1 248 1 77 1 49 1 94 3 250 2 98 1 
53 3 102 1 122 1 297 1 296 11 332 1 166 3 4 1 128 1 148 6 5 5 336 3 262 1 311 1 240 1 343 19 286 3 135 1 73 1 265 3 266 1 243 8 90 1 315 2 314 2 18 1 270 1 248 1 77 1 49 2 94 3 250 2 98 1 
53 1 102 1 122 1 297 1 296 5 332 1 166 1 128 1 148 2 5 2 336 2 262 1 240 1 343 10 286 1 265 1 266 1 243 5 90 1 314 1 248 1 94 1 98 1 
53 1 297 1 296 6 166 2 128 1 148 2 5 2 336 1 311 1 343 12 286 1 135 1 265 1 266 1 243 6 315 2 314 2 18 2 270 1 248 1 77 1 49 1 94 1 250 2 98 1 
53 4 102 1 122 1 297 1 296 11 332 1 166 3 4 2 128 1 148 8 5 5 336 3 262 1 311 1 240 1 343 20 286 4 135 1 73 1 265 4 266 1 243 9 90 1 315 2 314 2 18 1 270 1 248 1 77 1 49 2 94 4 250 2 98 1 
53 4 297 1 296 9 166 3 4 2 128 1 148 8 5 6 336 3 311 1 343 16 286 4 135 1 265 4 266 1 243 7 315 3 314 2 18 2 270 1 48 1 248 1 77 1 49 3 94 4 250 3 98 1 
102 2 262 1 122 2 240 2 296 2 343 4 243 2 5 4 336 2 49 2 
53 4 102 1 122 1 297 1 296 11 332 1 166 3 4 2 128 1 148 8 5 4 336 3 262 1 311 1 240 1 343 20 286 4 135 1 265 4 266 1 243 9 90 1 315 2 314 2 18 1 270 1 48 1 248 1 77 1 49 1 94 4 250 2 98 1 
126 1 38 1 87 1 279 1 147 1 159 1 371 1 
38 1 87 1 162 1 137 1 331 1 147 1 371 1 126 1 279 1 159 1 50 1 51 1 
237 1 317 1 140 1 329 1 176 1 163 1 260 1 120 1 67 1 37 1 6 1 
134 1 38 1 176 1 330 1 147 1 242 1 219 1 371 1 106 1 126 1 140 1 127 1 260 1 6 1 
134 1 38 1 176 1 330 1 147 1 242 1 219 1 371 1 106 1 126 1 140 1 127 1 293 1 6 1 
153 1 134 1 38 2 237 2 329 3 176 2 139 1 57 1 147 2 242 1 371 1 106 2 126 2 16 1 317 1 140 2 127 1 23 1 93 1 349 2 293 1 24 1 120 1 6 2 
211 1 237 1 309 2 327 1 329 4 176 3 369 1 139 1 10 2 168 1 317 1 140 3 306 1 158 1 23 1 349 1 260 1 293 1 181 1 24 1 120 1 121 1 6 3 
211 1 237 1 309 2 327 1 329 4 176 3 28 1 369 1 139 1 10 2 168 1 317 1 140 3 306 1 158 1 23 1 349 1 260 1 293 1 24 1 120 1 6 3 
317 1 140 1 176 1 71 1 120 1 6 1 
253 1 237 2 112 1 353 1 329 3 71 1 176 7 195 1 138 1 146 1 290 1 205 1 109 1 317 3 245 1 140 7 21 1 349 1 260 2 120 2 6 6 
53 2 102 1 273 1 122 1 296 1 147 1 257 2 106 1 3 1 301 1 126 1 304 1 148 4 5 1 336 1 129 1 36 1 6 1 38 1 134 1 262 1 283 2 176 1 240 1 343 2 286 2 265 2 242 1 219 1 243 1 371 1 245 1 140 1 94 2 
255 1 210 1 327 2 211 1 161 1 329 2 227 2 354 1 28 1 168 1 108 2 306 1 260 1 6 1 68 1 111 1 309 3 366 2 176 1 345 1 72 1 369 1 10 3 140 1 158 1 119 2 25 1 78 1 
237 1 329 2 71 1 176 2 369 1 146 1 317 2 245 1 140 2 192 1 349 1 120 1 6 2 
237 1 329 1 176 4 317 1 140 4 245 1 180 1 23 1 260 1 120 1 6 4 37 1 67 1 
237 1 329 1 176 2 195 1 367 1 186 1 109 1 317 2 140 2 349 1 293 1 120 1 224 1 6 2 
317 1 214 1 44 1 140 1 355 1 176 1 281 1 260 1 120 1 6 1 
237 1 329 1 176 2 138 1 317 1 245 1 140 2 21 1 120 1 110 1 6 2 
237 2 353 1 329 3 176 5 290 1 317 2 140 5 245 1 21 1 180 1 293 1 260 1 120 2 67 1 37 1 6 4 
237 2 329 3 176 5 290 1 317 2 140 5 245 1 303 1 21 1 180 1 293 1 260 1 120 2 67 1 37 1 6 4 
153 1 134 1 38 2 237 1 329 1 176 1 147 1 242 1 371 1 106 1 126 2 317 1 140 1 93 1 349 1 260 1 120 1 6 1 
253 1 237 1 329 1 176 1 195 1 146 1 109 1 317 2 140 1 349 1 293 1 120 1 6 1 
232 1 81 1 361 1 371 1 362 1 
211 1 256 1 309 2 161 1 57 1 10 2 371 1 213 1 168 1 2 1 16 1 178 1 127 1 232 2 306 1 81 1 249 1 361 2 362 2 
126 1 38 1 341 1 55 1 232 1 275 1 81 1 147 1 361 1 
2 1 81 1 249 1 
189 1 33 1 261 1 163 1 
189 1 33 1 261 1 241 1 142 1 131 1 83 1 
54 1 241 1 12 1 
189 1 33 1 261 1 230 2 351 1 222 1 228 1 241 3 142 1 131 3 313 1 83 1 
189 1 144 1 33 1 261 1 241 2 142 1 131 2 187 1 83 1 
0 1 241 1 123 1 313 1 189 1 347 1 44 1 142 1 281 1 131 1 83 1 
189 1 33 1 241 1 142 1 131 1 313 1 83 1 
33 2 261 1 241 1 142 1 131 1 313 1 83 1 
339 1 241 2 313 1 189 1 33 1 142 2 131 2 83 2 338 1 236 1 
261 1 104 1 241 3 123 1 313 1 187 2 189 2 33 1 59 1 142 1 359 1 131 3 83 1 
261 1 355 1 241 2 313 1 187 1 189 1 347 1 33 1 44 1 221 1 191 1 281 2 142 1 131 2 83 1 
144 1 261 1 104 1 241 4 123 1 313 1 187 2 189 2 33 1 142 2 207 1 131 4 83 2 
189 1 33 1 261 1 241 1 142 1 131 1 313 1 83 1 
351 1 261 2 104 1 228 1 241 4 123 1 188 1 187 2 189 3 230 1 33 2 142 1 131 4 83 1 
194 1 261 1 241 2 313 1 187 1 189 1 33 1 334 1 80 1 142 1 131 2 83 1 
351 2 261 1 228 1 241 3 313 1 189 1 117 1 230 2 33 1 142 1 131 3 83 1 
189 2 141 1 259 1 350 2 
241 1 142 1 131 1 313 1 83 1 75 1 
189 1 33 1 261 1 59 1 241 2 142 1 131 2 313 1 187 1 83 1 
215 1 
189 1 33 1 261 1 241 1 142 1 131 1 313 1 83 1 
261 1 241 3 313 1 187 1 189 1 230 1 33 1 59 1 142 1 131 3 83 1 
189 1 104 1 123 1 188 1 
189 1 33 1 
